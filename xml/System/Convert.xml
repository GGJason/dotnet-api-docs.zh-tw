<Type Name="Convert" FullName="System.Convert">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3e80e1e98b3ed0d0fdf6b2c1458d5b156e787f6e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class Convert" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Convert extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Convert" />
  <TypeSignature Language="VB.NET" Value="Public Class Convert" />
  <TypeSignature Language="C++ CLI" Value="public ref class Convert abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="377f1-101">將基底資料類型轉換為其他基底資料類型。</span>
      <span class="sxs-lookup">
        <span data-stu-id="377f1-101">Converts a base data type to another base data type.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-102">靜態方法<xref:System.Convert>類別主要用來在.NET Framework 支援的基底資料型別來回轉換。</span><span class="sxs-lookup"><span data-stu-id="377f1-102">The static methods of the <xref:System.Convert> class are primarily used to support conversion to and from the base data types in the .NET Framework.</span></span> <span data-ttu-id="377f1-103">支援的基底類型為<xref:System.Boolean>， <xref:System.Char>， <xref:System.SByte>， <xref:System.Byte>， <xref:System.Int16>， <xref:System.Int32>， <xref:System.Int64>， <xref:System.UInt16>， <xref:System.UInt32>， <xref:System.UInt64>， <xref:System.Single>， <xref:System.Double>，<xref:System.Decimal>，<xref:System.DateTime>和<xref:System.String>。</span><span class="sxs-lookup"><span data-stu-id="377f1-103">The supported base types are <xref:System.Boolean>, <xref:System.Char>, <xref:System.SByte>, <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.UInt16>, <xref:System.UInt32>, <xref:System.UInt64>, <xref:System.Single>, <xref:System.Double>, <xref:System.Decimal>, <xref:System.DateTime> and <xref:System.String>.</span></span> <span data-ttu-id="377f1-104">此外，<xref:System.Convert>類別包含方法，以支援其他類型的轉換。</span><span class="sxs-lookup"><span data-stu-id="377f1-104">In addition, the <xref:System.Convert> class includes methods to support  other kinds of conversions.</span></span>  
  
 <span data-ttu-id="377f1-105">本主題包含下列章節：</span><span class="sxs-lookup"><span data-stu-id="377f1-105">This topic consists of the following sections:</span></span>  
  
 <span data-ttu-id="377f1-106">[基底型別轉換](#Base) </span><span class="sxs-lookup"><span data-stu-id="377f1-106">[Conversions to and from Base Types](#Base) </span></span>  
 <span data-ttu-id="377f1-107">[非十進位數字](#NonDecimal) </span><span class="sxs-lookup"><span data-stu-id="377f1-107">[Non-Decimal Numbers](#NonDecimal) </span></span>  
 <span data-ttu-id="377f1-108">[從自訂物件轉換為基底類型](#Custom) </span><span class="sxs-lookup"><span data-stu-id="377f1-108">[Conversions from Custom Objects to Base Types](#Custom) </span></span>  
 <span data-ttu-id="377f1-109">[特定文化特性格式資訊](#Culture) </span><span class="sxs-lookup"><span data-stu-id="377f1-109">[Culture-Specific Formatting Information](#Culture) </span></span>  
 <span data-ttu-id="377f1-110">[Base64 編碼方式](#Base64) </span><span class="sxs-lookup"><span data-stu-id="377f1-110">[Base64 Encoding](#Base64) </span></span>  
 [<span data-ttu-id="377f1-111">其他常見的轉換</span><span class="sxs-lookup"><span data-stu-id="377f1-111">Other Common Conversions</span></span>](#Other)  
  
<a name="Base"></a>   
## <a name="conversions-to-and-from-base-types"></a><span data-ttu-id="377f1-112">基底型別轉換</span><span class="sxs-lookup"><span data-stu-id="377f1-112">Conversions to and from Base Types</span></span>  
 <span data-ttu-id="377f1-113">轉換方法可用來將每個基底型別轉換成每個其他基底型別。</span><span class="sxs-lookup"><span data-stu-id="377f1-113">A conversion method exists to convert every base type to every other base type.</span></span> <span data-ttu-id="377f1-114">不過，實際的呼叫，以特定的轉換方法可以產生一個 5 的結果，在執行階段的基底類型和目標基底類型的值而定。</span><span class="sxs-lookup"><span data-stu-id="377f1-114">However, the actual call to a particular conversion method can produce one of five outcomes, depending on the value of the base type at run time and the target base type.</span></span> <span data-ttu-id="377f1-115">這五種結果是：</span><span class="sxs-lookup"><span data-stu-id="377f1-115">These five outcomes are:</span></span>  
  
-   <span data-ttu-id="377f1-116">不是轉換。</span><span class="sxs-lookup"><span data-stu-id="377f1-116">No conversion.</span></span> <span data-ttu-id="377f1-117">嘗試從類型轉換至其本身時，發生這種的情況 (例如，藉由呼叫<xref:System.Convert.ToInt32%28System.Int32%29?displayProperty=nameWithType>類型的引數與<xref:System.Int32>)。</span><span class="sxs-lookup"><span data-stu-id="377f1-117">This occurs when an attempt is made to convert from a type to itself (for example, by calling <xref:System.Convert.ToInt32%28System.Int32%29?displayProperty=nameWithType> with an argument of type <xref:System.Int32>).</span></span> <span data-ttu-id="377f1-118">在此情況下，此方法只會傳回原始類型的執行個體。</span><span class="sxs-lookup"><span data-stu-id="377f1-118">In this case, the method simply returns an instance of the original type.</span></span>  
  
-   <span data-ttu-id="377f1-119"><xref:System.InvalidCastException>。</span><span class="sxs-lookup"><span data-stu-id="377f1-119">An <xref:System.InvalidCastException>.</span></span> <span data-ttu-id="377f1-120">這發生在不支援特定的轉換。</span><span class="sxs-lookup"><span data-stu-id="377f1-120">This occurs when a particular conversion is not supported.</span></span> <span data-ttu-id="377f1-121"><xref:System.InvalidCastException>擲回下列轉換：</span><span class="sxs-lookup"><span data-stu-id="377f1-121">An <xref:System.InvalidCastException> is thrown for the following conversions:</span></span>  
  
    -   <span data-ttu-id="377f1-122">從不<xref:System.Char>至<xref:System.Boolean>， <xref:System.Single>， <xref:System.Double>， <xref:System.Decimal>，或<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="377f1-122">Conversions from <xref:System.Char> to <xref:System.Boolean>, <xref:System.Single>, <xref:System.Double>, <xref:System.Decimal>, or <xref:System.DateTime>.</span></span>  
  
    -   <span data-ttu-id="377f1-123">從不<xref:System.Boolean>， <xref:System.Single>， <xref:System.Double>， <xref:System.Decimal>，或<xref:System.DateTime>至<xref:System.Char>。</span><span class="sxs-lookup"><span data-stu-id="377f1-123">Conversions from <xref:System.Boolean>, <xref:System.Single>, <xref:System.Double>, <xref:System.Decimal>, or <xref:System.DateTime> to <xref:System.Char>.</span></span>  
  
    -   <span data-ttu-id="377f1-124">從不<xref:System.DateTime>以外的任何其他類型至<xref:System.String>。</span><span class="sxs-lookup"><span data-stu-id="377f1-124">Conversions from <xref:System.DateTime> to any other type except <xref:System.String>.</span></span>  
  
    -   <span data-ttu-id="377f1-125">從任何其他類型的轉換除外<xref:System.String>至<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="377f1-125">Conversions from any other type, except <xref:System.String>, to <xref:System.DateTime>.</span></span>  
  
-   <span data-ttu-id="377f1-126"><xref:System.FormatException>。</span><span class="sxs-lookup"><span data-stu-id="377f1-126">A <xref:System.FormatException>.</span></span> <span data-ttu-id="377f1-127">會發生這種情況時嘗試將字串值轉換成任何其他基底型別會失敗，因為字串不正確的格式。</span><span class="sxs-lookup"><span data-stu-id="377f1-127">This occurs when the attempt to convert a string value to any other base type fails because the string is not in the proper format.</span></span> <span data-ttu-id="377f1-128">進行下列轉換擲回例外狀況：</span><span class="sxs-lookup"><span data-stu-id="377f1-128">The exception is thrown for the following conversions:</span></span>  
  
    -   <span data-ttu-id="377f1-129">要轉換成字串<xref:System.Boolean>值不等於<xref:System.Boolean.TrueString?displayProperty=nameWithType>或<xref:System.Boolean.FalseString?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="377f1-129">A string to be converted to a <xref:System.Boolean> value does not equal <xref:System.Boolean.TrueString?displayProperty=nameWithType> or <xref:System.Boolean.FalseString?displayProperty=nameWithType>.</span></span>  
  
    -   <span data-ttu-id="377f1-130">要轉換成字串<xref:System.Char>值包含多個字元。</span><span class="sxs-lookup"><span data-stu-id="377f1-130">A string to be converted to a <xref:System.Char> value consists of multiple characters.</span></span>  
  
    -   <span data-ttu-id="377f1-131">將字串轉換成任何數值類型無法辨識為有效的數字。</span><span class="sxs-lookup"><span data-stu-id="377f1-131">A string to be converted to any numeric type is not recognized as a valid number.</span></span>  
  
    -   <span data-ttu-id="377f1-132">要轉換成字串<xref:System.DateTime>無法辨識為有效的日期和時間值。</span><span class="sxs-lookup"><span data-stu-id="377f1-132">A string to be converted to a <xref:System.DateTime> is not recognized as a valid date and time value.</span></span>  
  
-   <span data-ttu-id="377f1-133">轉換成功。</span><span class="sxs-lookup"><span data-stu-id="377f1-133">A successful conversion.</span></span> <span data-ttu-id="377f1-134">針對先前的結果中未列出的兩個不同的基底類型之間轉換，所有的擴展轉換，以及所有不會導致資料遺失的縮小轉換將會成功，則方法會傳回目標的基底類型的值。</span><span class="sxs-lookup"><span data-stu-id="377f1-134">For conversions between two different base types not listed in the previous outcomes, all widening conversions as well as all narrowing conversions that do not result in a loss of data will succeed and the method will return a value of the targeted base type.</span></span>  
  
-   <span data-ttu-id="377f1-135"><xref:System.OverflowException>。</span><span class="sxs-lookup"><span data-stu-id="377f1-135">An <xref:System.OverflowException>.</span></span> <span data-ttu-id="377f1-136">會發生這種情況是當縮小轉換導致遺失的資料。</span><span class="sxs-lookup"><span data-stu-id="377f1-136">This occurs when a narrowing conversion results in a loss of data.</span></span> <span data-ttu-id="377f1-137">例如，嘗試將轉換<xref:System.Int32>其值為 10000 的執行個體來<xref:System.Byte>類型會擲回<xref:System.OverflowException>因為 10000 的範圍之外<xref:System.Byte>資料型別。</span><span class="sxs-lookup"><span data-stu-id="377f1-137">For example, trying to convert a <xref:System.Int32> instance whose value is 10000 to a <xref:System.Byte> type throws an <xref:System.OverflowException> because 10000 is outside the range of the <xref:System.Byte> data type.</span></span>  
  
 <span data-ttu-id="377f1-138">如果數值類型的轉換導致遺失有效位數 （也就是說，某些最小有效位數遺失），將不會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="377f1-138">An exception will not be thrown if the conversion of a numeric type results in a loss of precision (that is, the loss of some least significant digits).</span></span> <span data-ttu-id="377f1-139">不過，如果結果大於可以表示為特定的轉換方法的傳回值類型，例外狀況就會擲回。</span><span class="sxs-lookup"><span data-stu-id="377f1-139">However, an exception will be thrown if the result is larger than can be represented by the particular conversion method's return value type.</span></span>  
  
 <span data-ttu-id="377f1-140">例如，當<xref:System.Double>轉換成<xref:System.Single>，可能會發生遺失有效位數，但是在擲回任何例外狀況。</span><span class="sxs-lookup"><span data-stu-id="377f1-140">For example, when a <xref:System.Double> is converted to a <xref:System.Single>, a loss of precision might occur but no exception is thrown.</span></span> <span data-ttu-id="377f1-141">不過，如果幅度<xref:System.Double>太大，而無法表示<xref:System.Single>，會發生溢位例外狀況。</span><span class="sxs-lookup"><span data-stu-id="377f1-141">However, if the magnitude of the <xref:System.Double> is too large to be represented by a <xref:System.Single>, an overflow exception is thrown.</span></span>  
  
<a name="NonDecimal"></a>   
## <a name="non-decimal-numbers"></a><span data-ttu-id="377f1-142">非十進位數字</span><span class="sxs-lookup"><span data-stu-id="377f1-142">Non-Decimal Numbers</span></span>  
 <span data-ttu-id="377f1-143"><xref:System.Convert>類別包含靜態方法，讓您可以將整數值轉換為非十進位字串表示法、 呼叫和轉換字串為整數值，代表非十進位數字。</span><span class="sxs-lookup"><span data-stu-id="377f1-143">The <xref:System.Convert> class includes static methods that you can call to convert integral values to non-decimal string representations, and to convert strings that represent non-decimal numbers to integral values.</span></span> <span data-ttu-id="377f1-144">每一種轉換方法包括`base`可讓您指定數字系統，則為二進位 (基底 2)、 八進位 (基底 8) 和十六進位 (基底 16)，以及十進位 (基底 10) 的引數。</span><span class="sxs-lookup"><span data-stu-id="377f1-144">Each of these conversion methods includes a `base` argument  that lets you specify  the number system; binary (base 2), octal (base 8), and hexadecimal (base 16), as well as decimal (base 10).</span></span> <span data-ttu-id="377f1-145">還有一組方法，將每個符合 CLS 標準的基本整數類資料類型轉換成字串，並將字串轉換成每個基本的整數類資料類型的其中一個：</span><span class="sxs-lookup"><span data-stu-id="377f1-145">There is a set of methods to convert each of the CLS-compliant primitive integral types to a string, and one to convert a string to each of the primitive integral types:</span></span>  
  
-   <span data-ttu-id="377f1-146"><xref:System.Convert.ToString%28System.Byte%2CSystem.Int32%29> 和<xref:System.Convert.ToByte%28System.String%2CSystem.Int32%29>，若要將位元組值與指定的基底中的字串。</span><span class="sxs-lookup"><span data-stu-id="377f1-146"><xref:System.Convert.ToString%28System.Byte%2CSystem.Int32%29> and <xref:System.Convert.ToByte%28System.String%2CSystem.Int32%29>, to convert a byte value to and from a string in a specified base.</span></span>  
  
-   <span data-ttu-id="377f1-147"><xref:System.Convert.ToString%28System.Int16%2CSystem.Int32%29> 和<xref:System.Convert.ToInt16%28System.String%2CSystem.Int32%29>，若要將 16 位元帶正負號的整數，與指定的基底中的字串。</span><span class="sxs-lookup"><span data-stu-id="377f1-147"><xref:System.Convert.ToString%28System.Int16%2CSystem.Int32%29> and <xref:System.Convert.ToInt16%28System.String%2CSystem.Int32%29>, to convert a 16-bit signed integer to and from a string in a specified base.</span></span>  
  
-   <span data-ttu-id="377f1-148"><xref:System.Convert.ToString%28System.Int32%2CSystem.Int32%29> 和<xref:System.Convert.ToInt32%28System.String%2CSystem.Int32%29>，若要將 32 位元帶正負號的整數，與指定的基底中的字串。</span><span class="sxs-lookup"><span data-stu-id="377f1-148"><xref:System.Convert.ToString%28System.Int32%2CSystem.Int32%29> and <xref:System.Convert.ToInt32%28System.String%2CSystem.Int32%29>, to convert a 32-bit signed integer to and from a string in a specified base.</span></span>  
  
-   <span data-ttu-id="377f1-149"><xref:System.Convert.ToString%28System.Int64%2CSystem.Int32%29> 和<xref:System.Convert.ToInt64%28System.String%2CSystem.Int32%29>，若要將 64 位元帶正負號的整數，與指定的基底中的字串。</span><span class="sxs-lookup"><span data-stu-id="377f1-149"><xref:System.Convert.ToString%28System.Int64%2CSystem.Int32%29> and <xref:System.Convert.ToInt64%28System.String%2CSystem.Int32%29>, to convert a 64-bit signed integer to and from a string in a specified base.</span></span>  
  
-   <span data-ttu-id="377f1-150"><xref:System.Convert.ToSByte%28System.String%2CSystem.Int32%29>若要將指定之格式的位元組值的字串表示轉換成帶正負號的位元組。</span><span class="sxs-lookup"><span data-stu-id="377f1-150"><xref:System.Convert.ToSByte%28System.String%2CSystem.Int32%29>, to convert the string representation of a byte value in a specified format to a signed byte.</span></span>  
  
-   <span data-ttu-id="377f1-151"><xref:System.Convert.ToUInt16%28System.String%2CSystem.Int32%29>若要將使用指定的格式為整數的字串表示轉換成不帶正負號的 16 位元整數。</span><span class="sxs-lookup"><span data-stu-id="377f1-151"><xref:System.Convert.ToUInt16%28System.String%2CSystem.Int32%29>, to convert the string representation of an integer in a specified format to an unsigned 16-bit integer.</span></span>  
  
-   <span data-ttu-id="377f1-152"><xref:System.Convert.ToUInt32%28System.String%2CSystem.Int32%29>若要將使用指定的格式為整數的字串表示轉換成不帶正負號的 32 位元整數。</span><span class="sxs-lookup"><span data-stu-id="377f1-152"><xref:System.Convert.ToUInt32%28System.String%2CSystem.Int32%29>, to convert the string representation of an integer in a specified format to an unsigned 32-bit integer.</span></span>  
  
-   <span data-ttu-id="377f1-153"><xref:System.Convert.ToUInt64%28System.String%2CSystem.Int32%29>若要將使用指定的格式為整數的字串表示轉換成不帶正負號的 64 位元整數。</span><span class="sxs-lookup"><span data-stu-id="377f1-153"><xref:System.Convert.ToUInt64%28System.String%2CSystem.Int32%29>, to convert the string representation of an integer in a specified format to an unsigned 64-bit integer.</span></span>  
  
 <span data-ttu-id="377f1-154">下列範例會將值轉換<xref:System.Int16.MaxValue?displayProperty=nameWithType>字串在所有支援的數值的格式。</span><span class="sxs-lookup"><span data-stu-id="377f1-154">The following example converts the value of <xref:System.Int16.MaxValue?displayProperty=nameWithType> to a string in all supported numeric formats.</span></span> <span data-ttu-id="377f1-155">接著，它會將轉換的字串值回<xref:System.Int16>值。</span><span class="sxs-lookup"><span data-stu-id="377f1-155">It then converts the string value back to a <xref:System.Int16> value.</span></span>  
  
 [!code-cpp[System.Convert#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert/CPP/NonDecimal1.cpp#2)]
 [!code-csharp[System.Convert#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert/CS/NonDecimal1.cs#2)]
 [!code-vb[System.Convert#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert/VB/NonDecimal1.vb#2)]  
  
<a name="Custom"></a>   
## <a name="conversions-from-custom-objects-to-base-types"></a><span data-ttu-id="377f1-156">從自訂物件轉換為基底類型</span><span class="sxs-lookup"><span data-stu-id="377f1-156">Conversions from Custom Objects to Base Types</span></span>  
 <span data-ttu-id="377f1-157">除了支援基底類型之間轉換<xref:System.Convert>方法支援的任何自訂類型轉換成任何基底型別。</span><span class="sxs-lookup"><span data-stu-id="377f1-157">In addition to supporting conversions between the base types, the <xref:System.Convert> method supports conversion of any custom type to any base type.</span></span> <span data-ttu-id="377f1-158">若要這樣做，請自訂型別必須實作<xref:System.IConvertible>介面，定義方法實作的型別轉換成每個基底型別。</span><span class="sxs-lookup"><span data-stu-id="377f1-158">To do this, the custom type must implement the <xref:System.IConvertible> interface, which defines methods for converting the implementing type to each of the base types.</span></span> <span data-ttu-id="377f1-159">不支援的特定類型的轉換應該擲回<xref:System.InvalidCastException>。</span><span class="sxs-lookup"><span data-stu-id="377f1-159">Conversions that are not supported by a particular type should throw an <xref:System.InvalidCastException>.</span></span>  
  
 <span data-ttu-id="377f1-160">當<xref:System.Convert.ChangeType%2A>傳遞給方法的自訂型別做為其第一個參數，或當`Convert.To`*類型*方法 (例如<xref:System.Convert.ToInt32%28System.Object%29?displayProperty=nameWithType>或<xref:System.Convert.ToDouble%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType>呼叫並傳遞其第一個為自訂類型的執行個體參數，<xref:System.Convert>方法又呼叫自訂型別<xref:System.IConvertible>實作，以執行轉換。</span><span class="sxs-lookup"><span data-stu-id="377f1-160">When the <xref:System.Convert.ChangeType%2A> method is passed a custom type as its first parameter, or when the `Convert.To`*Type* method (such as <xref:System.Convert.ToInt32%28System.Object%29?displayProperty=nameWithType> or <xref:System.Convert.ToDouble%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType> is called and passed an instance of a custom type as its first parameter, the <xref:System.Convert> method, in turn, calls the custom type's <xref:System.IConvertible> implementation to perform the conversion.</span></span> <span data-ttu-id="377f1-161">如需詳細資訊，請參閱[.NET Framework 中的型別轉換](~/docs/standard/base-types/type-conversion.md)。</span><span class="sxs-lookup"><span data-stu-id="377f1-161">For more information, see [Type Conversion in the .NET Framework](~/docs/standard/base-types/type-conversion.md).</span></span>  
  
<a name="Culture"></a>   
## <a name="culture-specific-formatting-information"></a><span data-ttu-id="377f1-162">特定文化特性格式資訊</span><span class="sxs-lookup"><span data-stu-id="377f1-162">Culture-Specific Formatting Information</span></span>  
 <span data-ttu-id="377f1-163">所有基底型別轉換方法和<xref:System.Convert.ChangeType%2A>方法包含的型別參數的多載<xref:System.IFormatProvider>。</span><span class="sxs-lookup"><span data-stu-id="377f1-163">All the base type conversion methods and the <xref:System.Convert.ChangeType%2A> method include overloads that have a parameter of type <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="377f1-164">例如，<xref:System.Convert.ToBoolean%2A?displayProperty=nameWithType>方法有下列兩個多載：</span><span class="sxs-lookup"><span data-stu-id="377f1-164">For example, the <xref:System.Convert.ToBoolean%2A?displayProperty=nameWithType> method has the following two overloads:</span></span>  
  
-   <xref:System.Convert.ToBoolean%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType>  
  
-   <xref:System.Convert.ToBoolean%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType>  
  
 <span data-ttu-id="377f1-165"><xref:System.IFormatProvider>參數可以提供特定文化特性格式資訊來協助轉換程序。</span><span class="sxs-lookup"><span data-stu-id="377f1-165">The <xref:System.IFormatProvider> parameter can supply culture-specific formatting information to assist the conversion process.</span></span> <span data-ttu-id="377f1-166">不過，它會忽略大部分的基底型別轉換方法。</span><span class="sxs-lookup"><span data-stu-id="377f1-166">However, it is ignored by most of the base type conversion methods.</span></span> <span data-ttu-id="377f1-167">它僅供下列基底型別轉換方法。如果`null`<xref:System.IFormatProvider>引數傳遞給這些方法，<xref:System.Globalization.CultureInfo>使用代表目前執行緒文化特性的物件。</span><span class="sxs-lookup"><span data-stu-id="377f1-167">It is used only by the following base type conversion methods.If a `null`<xref:System.IFormatProvider> argument is passed to these methods, the <xref:System.Globalization.CultureInfo> object that represents the current thread culture is used.</span></span>  
  
-   <span data-ttu-id="377f1-168">將值轉換成數值類型的方法。</span><span class="sxs-lookup"><span data-stu-id="377f1-168">By methods that convert a value to a numeric type.</span></span> <span data-ttu-id="377f1-169"><xref:System.IFormatProvider>參數由型別參數的多載用<xref:System.String>和<xref:System.IFormatProvider>。</span><span class="sxs-lookup"><span data-stu-id="377f1-169">The <xref:System.IFormatProvider> parameter is used by the overload that has parameters of type <xref:System.String> and <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="377f1-170">它也會使用的型別參數的多載<xref:System.Object>和<xref:System.IFormatProvider>物件的執行階段類型是否<xref:System.String>。</span><span class="sxs-lookup"><span data-stu-id="377f1-170">It is also used by the overload that has parameters of type <xref:System.Object> and <xref:System.IFormatProvider> if the object's run-time type is a <xref:System.String>.</span></span>  
  
-   <span data-ttu-id="377f1-171">將值轉換成日期和時間的方法。</span><span class="sxs-lookup"><span data-stu-id="377f1-171">By methods that convert a value to a date and time.</span></span> <span data-ttu-id="377f1-172"><xref:System.IFormatProvider>參數由型別參數的多載用<xref:System.String>和<xref:System.IFormatProvider>。</span><span class="sxs-lookup"><span data-stu-id="377f1-172">The <xref:System.IFormatProvider> parameter is used by the overload that has parameters of type <xref:System.String> and <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="377f1-173">它也會使用的型別參數的多載<xref:System.Object>和<xref:System.IFormatProvider>物件的執行階段類型是否<xref:System.String>。</span><span class="sxs-lookup"><span data-stu-id="377f1-173">It is also used by the overload that has parameters of type <xref:System.Object> and <xref:System.IFormatProvider> if the object's run-time type is a <xref:System.String>.</span></span>  
  
-   <span data-ttu-id="377f1-174">由<xref:System.Convert.ToString%2A?displayProperty=nameWithType>包含的多載<xref:System.IFormatProvider>參數，將數字值轉換為字串或<xref:System.DateTime>值到一個字串。</span><span class="sxs-lookup"><span data-stu-id="377f1-174">By the <xref:System.Convert.ToString%2A?displayProperty=nameWithType> overloads that include an <xref:System.IFormatProvider> parameter and that convert either a numeric value to a string or a <xref:System.DateTime> value to a string.</span></span>  
  
 <span data-ttu-id="377f1-175">不過，任何使用者定義型別實作<xref:System.IConvertible>可以進行使用<xref:System.IFormatProvider>參數。</span><span class="sxs-lookup"><span data-stu-id="377f1-175">However, any user-defined type that implements <xref:System.IConvertible> can make use of the <xref:System.IFormatProvider> parameter.</span></span>  
  
<a name="Base64"></a>   
## <a name="base64-encoding"></a><span data-ttu-id="377f1-176">Base64 編碼方式</span><span class="sxs-lookup"><span data-stu-id="377f1-176">Base64 Encoding</span></span>  
 <span data-ttu-id="377f1-177">Base64 編碼方式將二進位資料轉換為字串。</span><span class="sxs-lookup"><span data-stu-id="377f1-177">Base64 encoding converts binary data to a string.</span></span> <span data-ttu-id="377f1-178">為 base-64 位數表示的資料可以輕鬆地傳達只能傳輸 7 位元的資料通道上。</span><span class="sxs-lookup"><span data-stu-id="377f1-178">Data expressed as base-64 digits can be easily conveyed over data channels that can only transmit 7-bit characters.</span></span> <span data-ttu-id="377f1-179"><xref:System.Convert>類別包含下列方法，以支援 base64 編碼方式： 位元組陣列的轉換方法支援一組<xref:System.String>或遷入及遷出組成 base 64 數字字元的 Unicode 字元陣列。</span><span class="sxs-lookup"><span data-stu-id="377f1-179">The <xref:System.Convert> class includes the following methods to support base64 encoding: A set of methods support converting an array of bytes to and from a <xref:System.String> or to and from an array of Unicode characters consisting of base-64 digit characters.</span></span>  
  
-   <span data-ttu-id="377f1-180"><xref:System.Convert.ToBase64String%2A>可將位元組陣列轉換成 base64 編碼的字串。</span><span class="sxs-lookup"><span data-stu-id="377f1-180"><xref:System.Convert.ToBase64String%2A>, which converts a byte array to a base64-encoded string.</span></span>  
  
-   <span data-ttu-id="377f1-181"><xref:System.Convert.ToBase64CharArray%2A>可將位元組陣列轉換成 base64 編碼的字元陣列。</span><span class="sxs-lookup"><span data-stu-id="377f1-181"><xref:System.Convert.ToBase64CharArray%2A>, which converts a byte array to a base64-encoded character array.</span></span>  
  
-   <span data-ttu-id="377f1-182"><xref:System.Convert.FromBase64String%2A>可將為 base64 編碼字串轉換成位元組陣列。</span><span class="sxs-lookup"><span data-stu-id="377f1-182"><xref:System.Convert.FromBase64String%2A>, which converts a base64-encoded string to a byte array.</span></span>  
  
-   <span data-ttu-id="377f1-183"><xref:System.Convert.FromBase64CharArray%2A>可將 base64 編碼的字元陣列轉換成位元組陣列。</span><span class="sxs-lookup"><span data-stu-id="377f1-183"><xref:System.Convert.FromBase64CharArray%2A>, which converts a base64-encoded character array to a byte array.</span></span>  
  
<a name="Other"></a>   
## <a name="other-common-conversions"></a><span data-ttu-id="377f1-184">其他常見的轉換</span><span class="sxs-lookup"><span data-stu-id="377f1-184">Other Common Conversions</span></span>  
 <span data-ttu-id="377f1-185">您可以使用其他類別 NET Framework 中執行不支援靜態方法的某些轉換<xref:System.Convert>類別。</span><span class="sxs-lookup"><span data-stu-id="377f1-185">You can use other classes in the NET Framework to perform some conversions that are not supported by the static methods of the <xref:System.Convert> class.</span></span>  <span data-ttu-id="377f1-186">它們包括：</span><span class="sxs-lookup"><span data-stu-id="377f1-186">These include:</span></span>  
  
 <span data-ttu-id="377f1-187">轉換為位元組陣列</span><span class="sxs-lookup"><span data-stu-id="377f1-187">Conversion to byte arrays</span></span>  
 <span data-ttu-id="377f1-188"><xref:System.BitConverter>類別提供方法，將轉換的基本數值類型 (包括<xref:System.Boolean>) 至位元組陣列，而且從位元組陣列回復為基本資料型別。</span><span class="sxs-lookup"><span data-stu-id="377f1-188">The <xref:System.BitConverter> class  provides methods that convert the primitive numeric types (including <xref:System.Boolean>) to byte arrays and from byte arrays back to primitive data types.</span></span>  
  
 <span data-ttu-id="377f1-189">字元編碼和解碼</span><span class="sxs-lookup"><span data-stu-id="377f1-189">Character encoding and decoding</span></span>  
 <span data-ttu-id="377f1-190"><xref:System.Text.Encoding>類別和其衍生的類別 (例如<xref:System.Text.UnicodeEncoding>和<xref:System.Text.UTF8Encoding>) 提供方法來編碼字元陣列或字串 (也就是將它們轉換成位元組陣列中特定的編碼方式) 和解碼編碼的位元組陣列 （亦即，將位元組陣列轉換回 UTF16 編碼的 Unicode 字元。</span><span class="sxs-lookup"><span data-stu-id="377f1-190">The <xref:System.Text.Encoding> class and its derived classes (such as <xref:System.Text.UnicodeEncoding> and <xref:System.Text.UTF8Encoding>) provide methods to encode a character array or a string (that is, to convert them to a byte array in a particular encoding) and to decode an encoded byte array (that is, convert a byte array back to UTF16-encoded Unicode characters.</span></span> <span data-ttu-id="377f1-191">如需詳細資訊，請參閱[.NET Framework 中的字元編碼方式](~/docs/standard/base-types/character-encoding.md)</span><span class="sxs-lookup"><span data-stu-id="377f1-191">For more information, see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-192">下列範例會示範部分中的轉換方法<xref:System.Convert>類別，包括<xref:System.Convert.ToInt32%2A>， <xref:System.Convert.ToBoolean%2A>，和<xref:System.Convert.ToString%2A>。</span><span class="sxs-lookup"><span data-stu-id="377f1-192">The following example demonstrates some of the conversion methods in the <xref:System.Convert> class, including <xref:System.Convert.ToInt32%2A>, <xref:System.Convert.ToBoolean%2A>, and <xref:System.Convert.ToString%2A>.</span></span>  
  
 [!code-cpp[System.Convert#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert/CPP/converter.cpp#1)]
 [!code-csharp[System.Convert#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert/CS/converter.cs#1)]
 [!code-vb[System.Convert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert/VB/converter.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IConvertible" />
    <altmember cref="T:System.Object" />
    <altmember cref="T:System.SByte" />
    <altmember cref="T:System.Int16" />
    <altmember cref="T:System.Int32" />
    <altmember cref="T:System.Int64" />
    <altmember cref="T:System.Byte" />
    <altmember cref="T:System.UInt16" />
    <altmember cref="T:System.UInt32" />
    <altmember cref="T:System.UInt64" />
    <altmember cref="T:System.Single" />
    <altmember cref="T:System.Double" />
    <altmember cref="T:System.Decimal" />
    <altmember cref="T:System.Boolean" />
    <altmember cref="T:System.Char" />
    <altmember cref="T:System.String" />
  </Docs>
  <Members>
    <MemberGroup MemberName="ChangeType">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="377f1-193">傳回指定之類型的物件，此物件的值與指定的物件相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-193">Returns an object of a specified type whose value is equivalent to a specified object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ChangeType">
      <MemberSignature Language="C#" Value="public static object ChangeType (object value, Type conversionType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ChangeType(object value, class System.Type conversionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ChangeType(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ChangeType (value As Object, conversionType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ChangeType(System::Object ^ value, Type ^ conversionType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="conversionType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-194">實作 <see cref="T:System.IConvertible" /> 介面的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-194">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </param>
        <param name="conversionType">
          <span data-ttu-id="377f1-195">要傳回的物件類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-195">The type of object to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-196">傳回指定之類型的物件，此物件的值與指定的物件相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-196">Returns an object of the specified type and whose value is equivalent to the specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-197">類型為 <paramref name="conversionType" /> 且值與 <paramref name="value" /> 相等的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-197">An object whose type is <paramref name="conversionType" /> and whose value is equivalent to <paramref name="value" />.</span>
          </span>
          <span data-ttu-id="377f1-198">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-198">-or-</span>
          </span>
          <span data-ttu-id="377f1-199">如果 <see langword="Nothing" /> 是 <paramref name="value" /> 且 <see langword="null" /> 不是實值類型，則為 null 參考 (在 Visual Basic 中為 <paramref name="conversionType" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-199">A null reference (<see langword="Nothing" /> in Visual Basic), if <paramref name="value" /> is <see langword="null" /> and <paramref name="conversionType" /> is not a value type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-200"><xref:System.Convert.ChangeType%2A> 是一般用途的轉換方法，將所指定的物件轉換`value`至`conversionType`。</span><span class="sxs-lookup"><span data-stu-id="377f1-200"><xref:System.Convert.ChangeType%2A> is a general-purpose conversion method that converts the object specified by `value` to `conversionType`.</span></span> <span data-ttu-id="377f1-201">`value`參數可以是任何類型的物件和`conversionType`也可以是<xref:System.Type>物件，代表任何基底或自訂型別。</span><span class="sxs-lookup"><span data-stu-id="377f1-201">The `value` parameter can be an object of any type, and `conversionType` can also be a <xref:System.Type> object that represents any base or custom type.</span></span> <span data-ttu-id="377f1-202">轉換成功，`value`必須實作<xref:System.IConvertible>介面，因為方法只會包裝對適當的呼叫<xref:System.IConvertible>方法。</span><span class="sxs-lookup"><span data-stu-id="377f1-202">For the conversion to succeed, `value` must implement the <xref:System.IConvertible> interface, because the method simply wraps a call to an appropriate <xref:System.IConvertible> method.</span></span> <span data-ttu-id="377f1-203">此方法需要該轉換`value`至`conversionType`支援。</span><span class="sxs-lookup"><span data-stu-id="377f1-203">The method requires that conversion of `value` to `conversionType` be supported.</span></span>  
  
 <span data-ttu-id="377f1-204">這個方法會使用目前執行緒的文化特性來進行轉換。</span><span class="sxs-lookup"><span data-stu-id="377f1-204">This method uses the current thread's culture for the conversion.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-205">在下列程式碼中，說明了如何使用 <xref:System.Convert.ChangeType%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="377f1-205">The following example illustrates the use of the <xref:System.Convert.ChangeType%2A> method.</span></span>  
  
 [!code-cpp[convertchangetype#1](~/samples/snippets/cpp/VS_Snippets_CLR/convertchangetype/CPP/convertchangetype.cpp#1)]
 [!code-csharp[convertchangetype#1](~/samples/snippets/csharp/VS_Snippets_CLR/convertchangetype/CS/convertchangetype.cs#1)]
 [!code-vb[convertchangetype#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/convertchangetype/VB/convertchangetype.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="377f1-206">不支援這個轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-206">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="377f1-207">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-207">-or-</span>
          </span>
          <span data-ttu-id="377f1-208">
            <paramref name="value" /> 為 <see langword="null" />，且 <paramref name="conversionType" /> 是實值類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-208">
              <paramref name="value" /> is <see langword="null" /> and <paramref name="conversionType" /> is a value type.</span>
          </span>
          <span data-ttu-id="377f1-209">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-209">-or-</span>
          </span>
          <span data-ttu-id="377f1-210">
            <paramref name="value" /> 未實作 <see cref="T:System.IConvertible" /> 介面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-210">
              <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="377f1-211">
            <paramref name="value" /> 不是 <paramref name="conversionType" /> 可辨識的格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-211">
              <paramref name="value" /> is not in a format recognized by <paramref name="conversionType" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-212">
            <paramref name="value" /> 代表超出 <paramref name="conversionType" /> 範圍的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-212">
              <paramref name="value" /> represents a number that is out of the range of <paramref name="conversionType" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="377f1-213">
            <paramref name="conversionType" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-213">
              <paramref name="conversionType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <para>
            <span data-ttu-id="377f1-214">
              <see cref="M:System.Convert.ChangeType(System.Object,System.Type)" />方法可以轉換為其他類型的列舉值。</span>
            <span class="sxs-lookup">
              <span data-stu-id="377f1-214">The <see cref="M:System.Convert.ChangeType(System.Object,System.Type)" /> method can convert an enumeration value to another type.</span>
            </span>
            <span data-ttu-id="377f1-215">不過，它無法轉換另一種類型的列舉值，即使來源類型是列舉型別的基礎型別。</span>
            <span class="sxs-lookup">
              <span data-stu-id="377f1-215">However, it cannot convert another type to an enumeration value, even if the source type is the underlying type of the enumeration.</span>
            </span>
            <span data-ttu-id="377f1-216">若要轉換為列舉值的類型，使用轉型運算子 （C# 中） 或 （在 Visual Basic) 的轉換函式。</span>
            <span class="sxs-lookup">
              <span data-stu-id="377f1-216">To convert a type to an enumeration value, use a casting operator (in C#) or a conversion function (in Visual Basic).</span>
            </span>
            <span data-ttu-id="377f1-217">下列範例說明轉換，來回<c>大陸</c>列舉值。</span>
            <span class="sxs-lookup">
              <span data-stu-id="377f1-217">The following example illustrates the conversion to and from a <c>Continent</c> enumeration value.</span>
            </span>  
  
 [!code-csharp[System.Convert.ChangeType#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.changetype/cs/changetype_enum2.cs#5)]
 [!code-vb[System.Convert.ChangeType#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.changetype/vb/changetype_enum2.vb#5)]  
  
 <span data-ttu-id="377f1-218"><see cref="M:System.Convert.ChangeType(System.Object,System.Type)" />方法可以轉換為其他類型的 null 的型別。</span><span class="sxs-lookup"><span data-stu-id="377f1-218">The <see cref="M:System.Convert.ChangeType(System.Object,System.Type)" /> method can convert a nullable type to another type.</span></span><span data-ttu-id="377f1-219">不過，它無法將另一個類型轉換值為 null 的型別，即使<paramref name="conversionType" />的基礎類型<see cref="T:System.Nullable`1" />。若要執行轉換，您可以使用轉型運算子 （C# 中） 或 （在 Visual Basic) 的轉換函式。</span><span class="sxs-lookup"><span data-stu-id="377f1-219">However, it cannot convert another type to a value of a nullable type, even if <paramref name="conversionType" /> is the underlying type of the <see cref="T:System.Nullable`1" />.To perform the conversion, you can use a casting operator (in C#) or a conversion function (in Visual Basic).</span></span><span data-ttu-id="377f1-220">下列範例說明可為 null 的型別進行來回轉換。</span><span class="sxs-lookup"><span data-stu-id="377f1-220">The following example illustrates the conversion to and from a nullable type.</span></span>  
  
 [!code-csharp[System.Convert.ChangeType#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.changetype/cs/changetype_nullable.cs#7)]
 [!code-vb[System.Convert.ChangeType#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.changetype/vb/changetype_nullable.vb#7)]</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ChangeType">
      <MemberSignature Language="C#" Value="public static object ChangeType (object value, TypeCode typeCode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ChangeType(object value, valuetype System.TypeCode typeCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ChangeType(System.Object,System.TypeCode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ChangeType(System::Object ^ value, TypeCode typeCode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="typeCode" Type="System.TypeCode" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-221">實作 <see cref="T:System.IConvertible" /> 介面的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-221">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </param>
        <param name="typeCode">
          <span data-ttu-id="377f1-222">要傳回的物件類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-222">The type of object to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-223">傳回物件，該物件屬於指定的類型，且其值等於指定的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-223">Returns an object of the specified type whose value is equivalent to the specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-224">基礎類型為 <paramref name="typeCode" /> 且值與 <paramref name="value" /> 相等的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-224">An object whose underlying type is <paramref name="typeCode" /> and whose value is equivalent to <paramref name="value" />.</span>
          </span>
          <span data-ttu-id="377f1-225">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-225">-or-</span>
          </span>
          <span data-ttu-id="377f1-226">如果 <see langword="Nothing" /> 是 <paramref name="value" />，而且 <see langword="null" /> 是 <paramref name="typeCode" />、<see cref="F:System.TypeCode.Empty" /> 或 <see cref="F:System.TypeCode.String" />，則為 null 參考 (在 Visual Basic 中為 <see cref="F:System.TypeCode.Object" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-226">A null reference (<see langword="Nothing" /> in Visual Basic), if <paramref name="value" /> is <see langword="null" /> and <paramref name="typeCode" /> is <see cref="F:System.TypeCode.Empty" />, <see cref="F:System.TypeCode.String" />, or <see cref="F:System.TypeCode.Object" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-227"><xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%29> 是一般用途的轉換方法，將所指定的物件轉換`value`到預先定義的類型所指定`typeCode`。</span><span class="sxs-lookup"><span data-stu-id="377f1-227"><xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%29> is a general-purpose conversion method that converts the object specified by `value` to a predefined type specified by `typeCode`.</span></span> <span data-ttu-id="377f1-228">`value`參數可以是任何類型的物件。</span><span class="sxs-lookup"><span data-stu-id="377f1-228">The `value` parameter can be an object of any type.</span></span> <span data-ttu-id="377f1-229">轉換成功，`value`必須實作<xref:System.IConvertible>介面，因為方法只會包裝對適當的呼叫<xref:System.IConvertible>方法。</span><span class="sxs-lookup"><span data-stu-id="377f1-229">For the conversion to succeed, `value` must implement the <xref:System.IConvertible> interface, because the method simply wraps a call to an appropriate <xref:System.IConvertible> method.</span></span> <span data-ttu-id="377f1-230">方法也會需要該轉換`value`至`typeCode`受到支援。</span><span class="sxs-lookup"><span data-stu-id="377f1-230">The method also requires that conversion of `value` to `typeCode` be supported.</span></span>  
  
 <span data-ttu-id="377f1-231"><xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%29>方法不支援的轉換`value`至自訂類型。</span><span class="sxs-lookup"><span data-stu-id="377f1-231">The <xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%29> method does not support the conversion of `value` to a custom type.</span></span> <span data-ttu-id="377f1-232">若要執行這類轉換，請呼叫<xref:System.Convert.ChangeType%28System.Object%2CSystem.Type%29>方法。</span><span class="sxs-lookup"><span data-stu-id="377f1-232">To perform such a conversion, call the <xref:System.Convert.ChangeType%28System.Object%2CSystem.Type%29> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-233">下列範例說明如何使用<xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%29>方法，以變更<xref:System.Object>所指定的型別<xref:System.TypeCode>參數，如果可能的話。</span><span class="sxs-lookup"><span data-stu-id="377f1-233">The following example illustrates how to use the <xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%29> method to change an <xref:System.Object> to the type specified by the <xref:System.TypeCode> parameter, if possible.</span></span>  
  
 [!code-cpp[System.Convert.ChangeType#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.convert.changetype/cpp/changetype_01.cpp#2)]
 [!code-csharp[System.Convert.ChangeType#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.changetype/cs/changetype01.cs#2)]
 [!code-vb[System.Convert.ChangeType#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.changetype/vb/changetype01.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="377f1-234">不支援這個轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-234">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="377f1-235">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-235">-or-</span>
          </span>
          <span data-ttu-id="377f1-236">
            <paramref name="value" /> 為 <see langword="null" />，而且 <paramref name="typeCode" /> 會指定實值型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-236">
              <paramref name="value" /> is <see langword="null" /> and <paramref name="typeCode" /> specifies a value type.</span>
          </span>
          <span data-ttu-id="377f1-237">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-237">-or-</span>
          </span>
          <span data-ttu-id="377f1-238">
            <paramref name="value" /> 未實作 <see cref="T:System.IConvertible" /> 介面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-238">
              <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="377f1-239">
            <paramref name="value" /> 不是使用 <paramref name="typeCode" /> 型別所識別的格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-239">
              <paramref name="value" /> is not in a format recognized by the <paramref name="typeCode" /> type.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-240">
            <paramref name="value" /> 代表超出 <paramref name="typeCode" /> 類型範圍的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-240">
              <paramref name="value" /> represents a number that is out of the range of the <paramref name="typeCode" /> type.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="377f1-241">
            <paramref name="typeCode" /> 無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-241">
              <paramref name="typeCode" /> is invalid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ChangeType">
      <MemberSignature Language="C#" Value="public static object ChangeType (object value, Type conversionType, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ChangeType(object value, class System.Type conversionType, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ChangeType (value As Object, conversionType As Type, provider As IFormatProvider) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ChangeType(System::Object ^ value, Type ^ conversionType, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="conversionType" Type="System.Type" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-242">實作 <see cref="T:System.IConvertible" /> 介面的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-242">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </param>
        <param name="conversionType">
          <span data-ttu-id="377f1-243">要傳回的物件類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-243">The type of object to return.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="377f1-244">物件，提供特定文化特性格式資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-244">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-245">傳回物件，該物件屬於指定的類型，且其值等於指定的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-245">Returns an object of the specified type whose value is equivalent to the specified object.</span>
          </span>
          <span data-ttu-id="377f1-246">參數提供特定文化特性格式資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-246">A parameter supplies culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-247">類型為 <paramref name="conversionType" /> 且值與 <paramref name="value" /> 相等的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-247">An object whose type is <paramref name="conversionType" /> and whose value is equivalent to <paramref name="value" />.</span>
          </span>
          <span data-ttu-id="377f1-248">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-248">-or-</span>
          </span>
          <span data-ttu-id="377f1-249">如果 <paramref name="value" /> 的 <see cref="T:System.Type" /> 和 <paramref name="value" /> 相等，則為 <paramref name="conversionType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-249">
              <paramref name="value" />, if the <see cref="T:System.Type" /> of <paramref name="value" /> and <paramref name="conversionType" /> are equal.</span>
          </span>
          <span data-ttu-id="377f1-250">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-250">-or-</span>
          </span>
          <span data-ttu-id="377f1-251">如果 <see langword="Nothing" /> 是 <paramref name="value" /> 且 <see langword="null" /> 不是實值類型，則為 null 參考 (在 Visual Basic 中為 <paramref name="conversionType" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-251">A null reference (<see langword="Nothing" /> in Visual Basic), if <paramref name="value" /> is <see langword="null" /> and <paramref name="conversionType" /> is not a value type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-252"><xref:System.Convert.ChangeType%2A> 是一般用途的轉換方法，將所指定的物件轉換`value`至`conversionType`。</span><span class="sxs-lookup"><span data-stu-id="377f1-252"><xref:System.Convert.ChangeType%2A> is a general-purpose conversion method that converts the object specified by `value` to `conversionType`.</span></span> <span data-ttu-id="377f1-253">`value`參數可以是任何類型的物件和`conversionType`也可以是<xref:System.Type>物件，代表任何基底或自訂型別。</span><span class="sxs-lookup"><span data-stu-id="377f1-253">The `value` parameter can be an object of any type, and `conversionType` can also be a <xref:System.Type> object that represents any base or custom type.</span></span> <span data-ttu-id="377f1-254">轉換成功，`value`必須實作<xref:System.IConvertible>介面，因為方法只會包裝對適當的呼叫<xref:System.IConvertible>方法。</span><span class="sxs-lookup"><span data-stu-id="377f1-254">For the conversion to succeed, `value` must implement the <xref:System.IConvertible> interface, because the method simply wraps a call to an appropriate <xref:System.IConvertible> method.</span></span> <span data-ttu-id="377f1-255">此方法需要該轉換`value`至`conversionType`支援。</span><span class="sxs-lookup"><span data-stu-id="377f1-255">The method requires that conversion of `value` to `conversionType` be supported.</span></span>  
  
 <span data-ttu-id="377f1-256">`provider`參數是<xref:System.IFormatProvider>實作，提供轉換的格式設定資訊。</span><span class="sxs-lookup"><span data-stu-id="377f1-256">The `provider` parameter is an <xref:System.IFormatProvider> implementation that supplies formatting information for the conversion.</span></span> <span data-ttu-id="377f1-257">是否以及如何使用這個參數會相依於基礎<xref:System.IConvertible>實作。</span><span class="sxs-lookup"><span data-stu-id="377f1-257">Whether and how this parameter is used depends on the underlying <xref:System.IConvertible> implementation.</span></span> <span data-ttu-id="377f1-258">如果`value`是基底資料型別，`provider`只適用於下列轉換：</span><span class="sxs-lookup"><span data-stu-id="377f1-258">If `value` is a base data type, `provider` is used only for the following conversions:</span></span>  
  
-   <span data-ttu-id="377f1-259">轉換的數字為字串，或從一個數字的字串。</span><span class="sxs-lookup"><span data-stu-id="377f1-259">Conversion from a number to a string, or from a string to a number.</span></span> <span data-ttu-id="377f1-260">`provider` 必須是<xref:System.Globalization.CultureInfo>物件<xref:System.Globalization.NumberFormatInfo>物件或自訂<xref:System.IFormatProvider>傳回實作<xref:System.Globalization.NumberFormatInfo>物件。</span><span class="sxs-lookup"><span data-stu-id="377f1-260">`provider` must be a <xref:System.Globalization.CultureInfo> object, a <xref:System.Globalization.NumberFormatInfo> object, or a custom <xref:System.IFormatProvider> implementation that returns a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="377f1-261">不過，因為<xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%2CSystem.IFormatProvider%29>方法會執行預設"G"格式規範，轉換`provider`參數如果有任何作用`value`或目標類型是不帶正負號的整數。</span><span class="sxs-lookup"><span data-stu-id="377f1-261">However, because the <xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%2CSystem.IFormatProvider%29> method performs the conversion using the default "G" format specifier, the `provider` parameter has no effect if `value` or the target type is an unsigned integer.</span></span> <span data-ttu-id="377f1-262">如果`provider`是`null`、<xref:System.Globalization.CultureInfo>使用代表目前執行緒文化特性的物件。</span><span class="sxs-lookup"><span data-stu-id="377f1-262">If `provider` is `null`, the <xref:System.Globalization.CultureInfo> object that represents the current thread culture is used.</span></span>  
  
-   <span data-ttu-id="377f1-263">從轉換<xref:System.DateTime>為字串，或從字串到值<xref:System.DateTime>值。</span><span class="sxs-lookup"><span data-stu-id="377f1-263">Conversion from a <xref:System.DateTime> value to a string, or from a string to a <xref:System.DateTime> value.</span></span> <span data-ttu-id="377f1-264">`provider` 必須是<xref:System.Globalization.CultureInfo>或<xref:System.Globalization.DateTimeFormatInfo>物件。</span><span class="sxs-lookup"><span data-stu-id="377f1-264">`provider` must be a <xref:System.Globalization.CultureInfo> or <xref:System.Globalization.DateTimeFormatInfo> object.</span></span> <span data-ttu-id="377f1-265">如果`provider`是`null`、<xref:System.Globalization.CultureInfo>使用代表目前執行緒文化特性的物件。</span><span class="sxs-lookup"><span data-stu-id="377f1-265">If `provider` is `null`, the <xref:System.Globalization.CultureInfo> object that represents the current thread culture is used.</span></span>  
  
 <span data-ttu-id="377f1-266">如果`value`是應用程式定義的型別，其<xref:System.IConvertible>實作可能會使用`provider`參數。</span><span class="sxs-lookup"><span data-stu-id="377f1-266">If `value` is an application-defined type, its <xref:System.IConvertible> implementation may use the `provider` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-267">下列範例定義一個實作 `Temperature` 介面的 <xref:System.IConvertible> 類別。</span><span class="sxs-lookup"><span data-stu-id="377f1-267">The following example defines a `Temperature` class that implements the <xref:System.IConvertible> interface.</span></span>  
  
 [!code-cpp[System.Convert.ChangeType#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.convert.changetype/cpp/changetype03.cpp#3)]
 [!code-csharp[System.Convert.ChangeType#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.changetype/cs/changetype03.cs#3)]
 [!code-vb[System.Convert.ChangeType#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.changetype/vb/changetype03.vb#3)]  
  
 <span data-ttu-id="377f1-268">下列範例會建立的執行個體`Temperature`類別並呼叫<xref:System.Convert.ChangeType%28System.Object%2CSystem.Type%2CSystem.IFormatProvider%29>方法將它轉換成基本數值類型支援.NET framework 和<xref:System.String>。</span><span class="sxs-lookup"><span data-stu-id="377f1-268">The following example creates an instance of the `Temperature` class and calls the <xref:System.Convert.ChangeType%28System.Object%2CSystem.Type%2CSystem.IFormatProvider%29> method to convert it to the basic numeric types supported by the .NET Framework and to a <xref:System.String>.</span></span> <span data-ttu-id="377f1-269">它說明了<xref:System.Convert.ChangeType%2A>方法會包裝到來源類型的呼叫<xref:System.IConvertible>實作。</span><span class="sxs-lookup"><span data-stu-id="377f1-269">It illustrates that the <xref:System.Convert.ChangeType%2A> method wraps a call to the source type's <xref:System.IConvertible> implementation.</span></span>  
  
 [!code-cpp[System.Convert.ChangeType#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.convert.changetype/cpp/changetype03.cpp#4)]
 [!code-csharp[System.Convert.ChangeType#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.changetype/cs/changetype03.cs#4)]
 [!code-vb[System.Convert.ChangeType#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.changetype/vb/changetype03.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="377f1-270">不支援這個轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-270">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="377f1-271">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-271">-or-</span>
          </span>
          <span data-ttu-id="377f1-272">
            <paramref name="value" /> 為 <see langword="null" />，且 <paramref name="conversionType" /> 是實值類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-272">
              <paramref name="value" /> is <see langword="null" /> and <paramref name="conversionType" /> is a value type.</span>
          </span>
          <span data-ttu-id="377f1-273">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-273">-or-</span>
          </span>
          <span data-ttu-id="377f1-274">
            <paramref name="value" /> 未實作 <see cref="T:System.IConvertible" /> 介面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-274">
              <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="377f1-275">
            <paramref name="value" /> 格式不是 <paramref name="provider" /> 所辨識的 <paramref name="conversionType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-275">
              <paramref name="value" /> is not in a format for <paramref name="conversionType" /> recognized by <paramref name="provider" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-276">
            <paramref name="value" /> 代表超出 <paramref name="conversionType" /> 範圍的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-276">
              <paramref name="value" /> represents a number that is out of the range of <paramref name="conversionType" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="377f1-277">
            <paramref name="conversionType" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-277">
              <paramref name="conversionType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <para>
            <span data-ttu-id="377f1-278">
              <see cref="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)" />方法可以轉換為其他類型的列舉值。</span>
            <span class="sxs-lookup">
              <span data-stu-id="377f1-278">The <see cref="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)" /> method can convert an enumeration value to another type.</span>
            </span>
            <span data-ttu-id="377f1-279">不過，它無法轉換另一種類型的列舉值，即使來源類型是列舉型別的基礎型別。</span>
            <span class="sxs-lookup">
              <span data-stu-id="377f1-279">However, it cannot convert another type to an enumeration value, even if the source type is the underlying type of the enumeration.</span>
            </span>
            <span data-ttu-id="377f1-280">若要轉換為列舉值的類型，使用轉型運算子 （C# 中） 或 （在 Visual Basic) 的轉換函式。</span>
            <span class="sxs-lookup">
              <span data-stu-id="377f1-280">To convert a type to an enumeration value, use a casting operator (in C#) or a conversion function (in Visual Basic).</span>
            </span>
            <span data-ttu-id="377f1-281">下列範例說明轉換，來回<c>大陸</c>列舉值。</span>
            <span class="sxs-lookup">
              <span data-stu-id="377f1-281">The following example illustrates the conversion to and from a <c>Continent</c> enumeration value.</span>
            </span>  
  
 [!code-csharp[System.Convert.ChangeType#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.changetype/cs/changetype_enum2.cs#5)]
 [!code-vb[System.Convert.ChangeType#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.changetype/vb/changetype_enum2.vb#5)]  
  
 <span data-ttu-id="377f1-282"><see cref="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)" />方法可以轉換為其他類型的 null 的型別。</span><span class="sxs-lookup"><span data-stu-id="377f1-282">The <see cref="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)" /> method can convert a nullable type to another type.</span></span><span data-ttu-id="377f1-283">不過，它無法將另一個類型轉換值為 null 的型別，即使<paramref name="conversionType" />的基礎類型<see cref="T:System.Nullable`1" />。</span><span class="sxs-lookup"><span data-stu-id="377f1-283">However, it cannot convert another type to a value of a nullable type, even if <paramref name="conversionType" /> is the underlying type of the <see cref="T:System.Nullable`1" />.</span></span><span data-ttu-id="377f1-284">若要執行轉換，您可以使用轉型運算子 （C# 中） 或 （在 Visual Basic) 的轉換函式。</span><span class="sxs-lookup"><span data-stu-id="377f1-284">To perform the conversion, you can use a casting operator (in C#) or a conversion function (in Visual Basic).</span></span><span data-ttu-id="377f1-285">下列範例說明可為 null 的型別進行來回轉換。</span><span class="sxs-lookup"><span data-stu-id="377f1-285">The following example illustrates the conversion to and from a nullable type.</span></span>  
  
 [!code-csharp[System.Convert.ChangeType#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.changetype/cs/changetype_nullable_1.cs#8)]
 [!code-vb[System.Convert.ChangeType#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.changetype/vb/changetype_nullable_1.vb#8)]</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ChangeType">
      <MemberSignature Language="C#" Value="public static object ChangeType (object value, TypeCode typeCode, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ChangeType(object value, valuetype System.TypeCode typeCode, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ChangeType(System.Object,System.TypeCode,System.IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ChangeType(System::Object ^ value, TypeCode typeCode, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="typeCode" Type="System.TypeCode" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-286">實作 <see cref="T:System.IConvertible" /> 介面的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-286">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </param>
        <param name="typeCode">
          <span data-ttu-id="377f1-287">要傳回的物件類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-287">The type of object to return.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="377f1-288">物件，提供特定文化特性格式資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-288">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-289">傳回物件，該物件屬於指定的類型，且其值等於指定的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-289">Returns an object of the specified type whose value is equivalent to the specified object.</span>
          </span>
          <span data-ttu-id="377f1-290">參數提供特定文化特性格式資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-290">A parameter supplies culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-291">基礎類型為 <paramref name="typeCode" /> 且值與 <paramref name="value" /> 相等的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-291">An object whose underlying type is <paramref name="typeCode" /> and whose value is equivalent to <paramref name="value" />.</span>
          </span>
          <span data-ttu-id="377f1-292">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-292">-or-</span>
          </span>
          <span data-ttu-id="377f1-293">如果 <see langword="Nothing" /> 是 <paramref name="value" />，而且 <see langword="null" /> 是 <paramref name="typeCode" />、<see cref="F:System.TypeCode.Empty" /> 或 <see cref="F:System.TypeCode.String" />，則為 null 參考 (在 Visual Basic 中為 <see cref="F:System.TypeCode.Object" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-293">A null reference (<see langword="Nothing" /> in Visual Basic), if <paramref name="value" /> is <see langword="null" /> and <paramref name="typeCode" /> is <see cref="F:System.TypeCode.Empty" />, <see cref="F:System.TypeCode.String" />, or <see cref="F:System.TypeCode.Object" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-294"><xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%2CSystem.IFormatProvider%29> 是一般用途的轉換方法，將所指定的物件轉換`value`到預先定義的類型所指定`typeCode`。</span><span class="sxs-lookup"><span data-stu-id="377f1-294"><xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%2CSystem.IFormatProvider%29> is a general-purpose conversion method that converts the object specified by `value` to a predefined type specified by `typeCode`.</span></span> <span data-ttu-id="377f1-295">`value`參數可以是任何類型的物件。</span><span class="sxs-lookup"><span data-stu-id="377f1-295">The `value` parameter can be an object of any type.</span></span> <span data-ttu-id="377f1-296">轉換成功，`value`必須實作<xref:System.IConvertible>介面，因為方法只會包裝對適當的呼叫<xref:System.IConvertible>方法。</span><span class="sxs-lookup"><span data-stu-id="377f1-296">For the conversion to succeed, `value` must implement the <xref:System.IConvertible> interface, because the method simply wraps a call to an appropriate <xref:System.IConvertible> method.</span></span> <span data-ttu-id="377f1-297">方法也會需要該轉換`value`至`typeCode`受到支援。</span><span class="sxs-lookup"><span data-stu-id="377f1-297">The method also requires that conversion of `value` to `typeCode` be supported.</span></span>  
  
 <span data-ttu-id="377f1-298"><xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%2CSystem.IFormatProvider%29>方法不支援的轉換`value`至自訂類型。</span><span class="sxs-lookup"><span data-stu-id="377f1-298">The <xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%2CSystem.IFormatProvider%29> method does not support the conversion of `value` to a custom type.</span></span> <span data-ttu-id="377f1-299">若要執行這類轉換，請呼叫<xref:System.Convert.ChangeType%28System.Object%2CSystem.Type%2CSystem.IFormatProvider%29>方法。</span><span class="sxs-lookup"><span data-stu-id="377f1-299">To perform such a conversion, call the <xref:System.Convert.ChangeType%28System.Object%2CSystem.Type%2CSystem.IFormatProvider%29> method.</span></span>  
  
 <span data-ttu-id="377f1-300">`provider`參數是<xref:System.IFormatProvider>實作，提供轉換的格式設定資訊。</span><span class="sxs-lookup"><span data-stu-id="377f1-300">The `provider` parameter is an <xref:System.IFormatProvider> implementation that supplies formatting information for the conversion.</span></span> <span data-ttu-id="377f1-301">是否以及如何使用這個參數會相依於基礎<xref:System.IConvertible>實作。</span><span class="sxs-lookup"><span data-stu-id="377f1-301">Whether and how this parameter is used depends on the underlying <xref:System.IConvertible> implementation.</span></span> <span data-ttu-id="377f1-302">如果`value`是基底資料型別，`provider`只適用於下列轉換。</span><span class="sxs-lookup"><span data-stu-id="377f1-302">If `value` is a base data type, `provider` is used only for the following conversions.</span></span> <span data-ttu-id="377f1-303">如果`null`<xref:System.IFormatProvider>引數傳遞給這些方法，<xref:System.Globalization.CultureInfo>使用代表目前執行緒文化特性的物件。</span><span class="sxs-lookup"><span data-stu-id="377f1-303">If a `null`<xref:System.IFormatProvider> argument is passed to these methods, the <xref:System.Globalization.CultureInfo> object that represents the current thread culture is used.</span></span>  
  
-   <span data-ttu-id="377f1-304">轉換的數字為字串，或從一個數字的字串。</span><span class="sxs-lookup"><span data-stu-id="377f1-304">Conversion from a number to a string, or from a string to a number.</span></span> <span data-ttu-id="377f1-305">`provider` 必須是<xref:System.Globalization.CultureInfo>物件<xref:System.Globalization.NumberFormatInfo>物件或自訂<xref:System.IFormatProvider>傳回實作<xref:System.Globalization.NumberFormatInfo>物件。</span><span class="sxs-lookup"><span data-stu-id="377f1-305">`provider` must be a <xref:System.Globalization.CultureInfo> object, a <xref:System.Globalization.NumberFormatInfo> object, or a custom <xref:System.IFormatProvider> implementation that returns a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="377f1-306">不過，因為<xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%2CSystem.IFormatProvider%29>方法會執行預設"G"格式規範，轉換`provider`參數如果有任何作用`value`或目標類型是不帶正負號的整數。</span><span class="sxs-lookup"><span data-stu-id="377f1-306">However, because the <xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%2CSystem.IFormatProvider%29> method performs the conversion using the default "G" format specifier, the `provider` parameter has no effect if `value` or the target type is an unsigned integer.</span></span>  
  
-   <span data-ttu-id="377f1-307">從轉換<xref:System.DateTime>為字串，或從字串到值<xref:System.DateTime>值。</span><span class="sxs-lookup"><span data-stu-id="377f1-307">Conversion from a <xref:System.DateTime> value to a string, or from a string to a <xref:System.DateTime> value.</span></span> <span data-ttu-id="377f1-308">`provider` 必須是<xref:System.Globalization.CultureInfo>或<xref:System.Globalization.DateTimeFormatInfo>物件。</span><span class="sxs-lookup"><span data-stu-id="377f1-308">`provider` must be a <xref:System.Globalization.CultureInfo> or <xref:System.Globalization.DateTimeFormatInfo> object.</span></span>  
  
 <span data-ttu-id="377f1-309">如果`value`是應用程式定義的型別，其<xref:System.IConvertible>實作可能會使用`provider`參數。</span><span class="sxs-lookup"><span data-stu-id="377f1-309">If `value` is an application-defined type, its <xref:System.IConvertible> implementation may use the `provider` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-310">下列範例定義名為的自訂格式提供者`InterceptProvider`，指出當其<xref:System.IFormatProvider.GetFormat%2A>方法呼叫，並傳回<xref:System.Globalization.NumberFormatInfo>FR-FR 文化特性和<xref:System.Globalization.DateTimeFormatInfo>EN-US 文化特性的物件。</span><span class="sxs-lookup"><span data-stu-id="377f1-310">The following example defines a custom format provider named `InterceptProvider` that indicates when its <xref:System.IFormatProvider.GetFormat%2A> method is called and returns a <xref:System.Globalization.NumberFormatInfo> for the fr-FR culture and a <xref:System.Globalization.DateTimeFormatInfo> object for the en-US culture.</span></span> <span data-ttu-id="377f1-311">使用此格式提供者中的所有呼叫<xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%2CSystem.IFormatProvider%29>方法。</span><span class="sxs-lookup"><span data-stu-id="377f1-311">This format provider is used in all calls to the <xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%2CSystem.IFormatProvider%29> method.</span></span> <span data-ttu-id="377f1-312">這個範例會建立與陣列<xref:System.Double>和<xref:System.DateTime>值，並會重複的呼叫<xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%2CSystem.IFormatProvider%29>與每個值的每個成員<xref:System.TypeCode>列舉型別。</span><span class="sxs-lookup"><span data-stu-id="377f1-312">The example then creates an array with a <xref:System.Double> and a <xref:System.DateTime> value and makes repeated calls to <xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%2CSystem.IFormatProvider%29> with each value and each member of the <xref:System.TypeCode> enumeration.</span></span> <span data-ttu-id="377f1-313">此範例說明當此方法會使用<xref:System.IFormatProvider>參數也會說明如何使用和`provider`參數以執行區分文化特性的格式。</span><span class="sxs-lookup"><span data-stu-id="377f1-313">The example illustrates when the method uses the <xref:System.IFormatProvider> parameter and also illustrates the use of the `provider` parameter to perform culture-sensitive formatting.</span></span>  
  
 [!code-cpp[System.Convert.ChangeType#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.convert.changetype/cpp/changetype00.cpp#1)]
 [!code-csharp[System.Convert.ChangeType#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.changetype/cs/changetype00.cs#1)]
 [!code-vb[System.Convert.ChangeType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.changetype/vb/changetype00.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="377f1-314">不支援這個轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-314">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="377f1-315">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-315">-or-</span>
          </span>
          <span data-ttu-id="377f1-316">
            <paramref name="value" /> 為 <see langword="null" />，而且 <paramref name="typeCode" /> 會指定實值型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-316">
              <paramref name="value" /> is <see langword="null" /> and <paramref name="typeCode" /> specifies a value type.</span>
          </span>
          <span data-ttu-id="377f1-317">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-317">-or-</span>
          </span>
          <span data-ttu-id="377f1-318">
            <paramref name="value" /> 未實作 <see cref="T:System.IConvertible" /> 介面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-318">
              <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="377f1-319">
            <paramref name="value" /> 格式不是 <paramref name="provider" /> 所辨識的 <paramref name="typeCode" /> 類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-319">
              <paramref name="value" /> is not in a format for the <paramref name="typeCode" /> type recognized by <paramref name="provider" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-320">
            <paramref name="value" /> 代表超出 <paramref name="typeCode" /> 類型範圍的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-320">
              <paramref name="value" /> represents a number that is out of the range of the <paramref name="typeCode" /> type.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="377f1-321">
            <paramref name="typeCode" /> 無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-321">
              <paramref name="typeCode" /> is invalid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DBNull">
      <MemberSignature Language="C#" Value="public static readonly object DBNull;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly object DBNull" />
      <MemberSignature Language="DocId" Value="F:System.Convert.DBNull" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DBNull As Object " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Object ^ DBNull;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="377f1-322">常數，表示缺少資料的資料庫資料行，也就是資料庫為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-322">A constant that represents a database column that is absent of data; that is, database null.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-323"><xref:System.Convert.DBNull>欄位相當於<xref:System.DBNull.Value?displayProperty=nameWithType>，如下列範例所示。</span><span class="sxs-lookup"><span data-stu-id="377f1-323">The <xref:System.Convert.DBNull> field is equivalent to <xref:System.DBNull.Value?displayProperty=nameWithType>, as the following example shows.</span></span>  
  
 [!code-csharp[System.Convert.DBNull#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.dbnull/cs/dbnull1.cs#1)]
 [!code-vb[System.Convert.DBNull#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.dbnull/vb/dbnull1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.DBNull" />
        <altmember cref="F:System.DBNull.Value" />
      </Docs>
    </Member>
    <Member MemberName="FromBase64CharArray">
      <MemberSignature Language="C#" Value="public static byte[] FromBase64CharArray (char[] inArray, int offset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] FromBase64CharArray(char[] inArray, int32 offset, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.FromBase64CharArray(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromBase64CharArray (inArray As Char(), offset As Integer, length As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ FromBase64CharArray(cli::array &lt;char&gt; ^ inArray, int offset, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inArray" Type="System.Char[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="inArray">
          <span data-ttu-id="377f1-324">Unicode 字元陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-324">A Unicode character array.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="377f1-325">
            <c>inArray</c> 中的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-325">A position within <c>inArray</c>.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="377f1-326">
            <c>inArray</c> 中要轉換的元素數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-326">The number of elements in <c>inArray</c> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-327">將 Unicode 字元陣列 (將二進位資料編碼為 Base-64 位數) 的子集轉換為相等的 8 位元不帶正負號的整數陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-327">Converts a subset of a Unicode character array, which encodes binary data as base-64 digits, to an equivalent 8-bit unsigned integer array.</span>
          </span>
          <span data-ttu-id="377f1-328">參數會指定輸入陣列中的子集，以及要轉換的項目個數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-328">Parameters specify the subset in the input array and the number of elements to convert.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-329">8 位元不帶正負號的整數陣列，與 <paramref name="length" /> 中 <paramref name="offset" /> 位置的 <paramref name="inArray" /> 項目相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-329">An array of 8-bit unsigned integers equivalent to <paramref name="length" /> elements at position <paramref name="offset" /> in <paramref name="inArray" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-330">`inArray` 為 base 64 數字、 空格字元和尾端填補字元所組成。</span><span class="sxs-lookup"><span data-stu-id="377f1-330">`inArray` is composed of base-64 digits, white-space characters, and trailing padding characters.</span></span> <span data-ttu-id="377f1-331">以遞增順序，從零 base 64 數字是否為大寫字元"A"到"Z"、 小寫字元"a"到"z"、"0"到"9"的數字和符號"+"和"/"。</span><span class="sxs-lookup"><span data-stu-id="377f1-331">The base-64 digits in ascending order from zero are the uppercase characters "A" to "Z", lowercase characters "a" to "z", numerals "0" to "9", and the symbols "+" and "/".</span></span>  
  
 <span data-ttu-id="377f1-332">空白字元，及其 Unicode 名稱和十六進位的字碼指標，都使用定位字元 （字元表格，U + 0009），新行換行字元 （U + 000A）、 歸位字元 （歸位字元、 U + 000d） 和空白 （空格、 U + 0020）。</span><span class="sxs-lookup"><span data-stu-id="377f1-332">The white-space characters, and their Unicode names and hexadecimal code points, are tab (CHARACTER TABULATION, U+0009), newline (LINE FEED, U+000A), carriage return (CARRIAGE RETURN, U+000D), and blank (SPACE, U+0020).</span></span> <span data-ttu-id="377f1-333">任意數目的空格字元可出現在`inArray`因為所有的空格字元會被忽略。</span><span class="sxs-lookup"><span data-stu-id="377f1-333">An arbitrary number of white-space characters can appear in `inArray` because all white-space characters are ignored.</span></span>  
  
 <span data-ttu-id="377f1-334">用處的字元，"="做為尾端填補。</span><span class="sxs-lookup"><span data-stu-id="377f1-334">The valueless character, "=", is used for trailing padding.</span></span> <span data-ttu-id="377f1-335">結尾`inArray`可以包含零個、 一個或兩個填補字元。</span><span class="sxs-lookup"><span data-stu-id="377f1-335">The end of `inArray` can consist of zero, one, or two padding characters.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="377f1-336"><xref:System.Convert.FromBase64CharArray%2A>方法設計來處理單一字元陣列，其中包含要解碼的所有資料。</span><span class="sxs-lookup"><span data-stu-id="377f1-336">The <xref:System.Convert.FromBase64CharArray%2A> method is designed to process a single character array that contains all the data to be decoded.</span></span> <span data-ttu-id="377f1-337">若要解碼資料流的 base-64 字元資料，使用<xref:System.Security.Cryptography.FromBase64Transform?displayProperty=nameWithType>類別。</span><span class="sxs-lookup"><span data-stu-id="377f1-337">To decode base-64 character data from a stream, use the <xref:System.Security.Cryptography.FromBase64Transform?displayProperty=nameWithType> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-338">下列範例示範如何使用<xref:System.Convert.FromBase64CharArray%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29>方法來解碼 uuencode 編碼 (base-64) 的資料，並將它儲存為二進位輸出。</span><span class="sxs-lookup"><span data-stu-id="377f1-338">The following example demonstrates the use of the <xref:System.Convert.FromBase64CharArray%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method to decode UUencoded (base-64) data and save it as binary output.</span></span>  
  
 [!code-cpp[System.Convert UUEncodeDecode functions#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Convert UUEncodeDecode functions/CPP/class1.cpp#3)]
 [!code-csharp[System.Convert UUEncodeDecode functions#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Convert UUEncodeDecode functions/CS/class1.cs#3)]
 [!code-vb[System.Convert UUEncodeDecode functions#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Convert UUEncodeDecode functions/VB/class1.vb#3)]  
  
 <span data-ttu-id="377f1-339">下列範例會示範<xref:System.Convert.ToBase64CharArray%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%2CSystem.Base64FormattingOptions%29>和<xref:System.Convert.FromBase64CharArray%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29>方法。</span><span class="sxs-lookup"><span data-stu-id="377f1-339">The following example demonstrates the <xref:System.Convert.ToBase64CharArray%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%2CSystem.Base64FormattingOptions%29> and <xref:System.Convert.FromBase64CharArray%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> methods.</span></span> <span data-ttu-id="377f1-340">輸入會分成三個位元組 （24 位元） 每個群組。</span><span class="sxs-lookup"><span data-stu-id="377f1-340">The input is divided into groups of three bytes (24 bits) each.</span></span> <span data-ttu-id="377f1-341">因此，每個群組包含四個每個數字，範圍從十進位的 0 到 63 的 6 位元數字。</span><span class="sxs-lookup"><span data-stu-id="377f1-341">Consequently, each group consists of four 6-bit numbers where each number ranges from decimal 0 to 63.</span></span> <span data-ttu-id="377f1-342">在此範例中，有具有一個位元組其餘 85 3 位元組的群組。</span><span class="sxs-lookup"><span data-stu-id="377f1-342">In this example, there are 85 3-byte groups with one byte remaining.</span></span> <span data-ttu-id="377f1-343">第一個群組包含 00，01、 02 產生四個十進位的 0、 0、 4 和 2 相等的 6 位元值的十六進位值。</span><span class="sxs-lookup"><span data-stu-id="377f1-343">The first group consists of the hexadecimal values 00, 01, and 02, which yield four 6-bit values equal to decimal 0, 0, 4, and 2.</span></span> <span data-ttu-id="377f1-344">這些四個值對應至"base 64 數字、 A"、"A"、"E"和"C"，輸出的開頭。</span><span class="sxs-lookup"><span data-stu-id="377f1-344">Those four values correspond to the base-64 digits, "A", "A", "E", and "C", at the beginning of the output.</span></span>  
  
 <span data-ttu-id="377f1-345">整數數字 3 位元組的群組不存在，如果剩餘的位元組會有效地以零填補來形成完整的群組。</span><span class="sxs-lookup"><span data-stu-id="377f1-345">If an integral number of 3-byte groups does not exist, the remaining bytes are effectively padded with zeros to form a complete group.</span></span> <span data-ttu-id="377f1-346">在此範例中，最後一個位元組的值為十六進位 FF。</span><span class="sxs-lookup"><span data-stu-id="377f1-346">In this example, the value of the last byte is hexadecimal FF.</span></span> <span data-ttu-id="377f1-347">前 6 個位元等於十進位 63，對應為 base 64 數字"/"結尾的輸出，而接下來的 2 位元填補零，以產生十進位 48，對應至 base 64 數字，"w"。</span><span class="sxs-lookup"><span data-stu-id="377f1-347">The first 6 bits are equal to decimal 63, which corresponds to the base-64 digit "/" at the end of the output, and the next 2 bits are padded with zeros to yield decimal 48, which corresponds to the base-64 digit, "w".</span></span> <span data-ttu-id="377f1-348">最後兩個的 6 位元值會填補，並對應至用處填補字元，"="。</span><span class="sxs-lookup"><span data-stu-id="377f1-348">The last two 6-bit values are padding and correspond to the valueless padding character, "=".</span></span>  
  
 [!code-cpp[convert.tobase64chararray#1](~/samples/snippets/cpp/VS_Snippets_CLR/convert.tobase64chararray/CPP/tb64ca.cpp#1)]
 [!code-csharp[convert.tobase64chararray#1](~/samples/snippets/csharp/VS_Snippets_CLR/convert.tobase64chararray/CS/tb64ca.cs#1)]
 [!code-vb[convert.tobase64chararray#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/convert.tobase64chararray/VB/tb64ca.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="377f1-349">
            <paramref name="inArray" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-349">
              <paramref name="inArray" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="377f1-350">
            <paramref name="offset" /> 或 <paramref name="length" /> 小於 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-350">
              <paramref name="offset" /> or <paramref name="length" /> is less than 0.</span>
          </span>
          <span data-ttu-id="377f1-351">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-351">-or-</span>
          </span>
          <span data-ttu-id="377f1-352">
            <paramref name="offset" /> 加上 <paramref name="length" /> 指示不在 <paramref name="inArray" /> 內的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-352">
              <paramref name="offset" /> plus <paramref name="length" /> indicates a position not within <paramref name="inArray" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="377f1-353">
            <paramref name="inArray" /> 除了空白字元之外的長度不會是零或 4 的倍數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-353">The length of <paramref name="inArray" />, ignoring white-space characters, is not zero or a multiple of 4.</span>
          </span>
          <span data-ttu-id="377f1-354">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-354">-or-</span>
          </span>
          <span data-ttu-id="377f1-355">
            <paramref name="inArray" /> 格式無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-355">The format of <paramref name="inArray" /> is invalid.</span>
          </span>
          <span data-ttu-id="377f1-356">
            <paramref name="inArray" /> 包含一個 Base 64 的字元、兩個以上的填補字元或一個位於填補字元之間的非泛空白字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-356">
              <paramref name="inArray" /> contains a non-base-64 character, more than two padding characters, or a non-white-space character among the padding characters.</span>
          </span>
        </exception>
        <altmember cref="M:System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="T:System.Security.Cryptography.FromBase64Transform" />
      </Docs>
    </Member>
    <Member MemberName="FromBase64String">
      <MemberSignature Language="C#" Value="public static byte[] FromBase64String (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] FromBase64String(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.FromBase64String(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromBase64String (s As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ FromBase64String(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="377f1-357">要轉換的字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-357">The string to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-358">將指定的字串 (將二進位資料編碼為 Base-64 位數) 轉換為相等的 8 位元不帶正負號的整數陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-358">Converts the specified string, which encodes binary data as base-64 digits, to an equivalent 8-bit unsigned integer array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-359">8 位元不帶正負號的整數且與 <paramref name="s" /> 相等的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-359">An array of 8-bit unsigned integers that is equivalent to <paramref name="s" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-360">`s` 為 base 64 數字、 空格字元和尾端填補字元所組成。</span><span class="sxs-lookup"><span data-stu-id="377f1-360">`s` is composed of base-64 digits, white-space characters, and trailing padding characters.</span></span> <span data-ttu-id="377f1-361">以遞增順序，從零 base 64 數字是否為大寫字元"A"到"Z"、 小寫字元"a"到"z"、"0"到"9"的數字和符號"+"和"/"。</span><span class="sxs-lookup"><span data-stu-id="377f1-361">The base-64 digits in ascending order from zero are the uppercase characters "A" to "Z", lowercase characters "a" to "z", numerals "0" to "9", and the symbols "+" and "/".</span></span>  
  
 <span data-ttu-id="377f1-362">空白字元，及其 Unicode 名稱和十六進位的字碼指標，都使用定位字元 （字元表格，U + 0009），新行換行字元 （U + 000A）、 歸位字元 （歸位字元、 U + 000d） 和空白 （空格、 U + 0020）。</span><span class="sxs-lookup"><span data-stu-id="377f1-362">The white-space characters, and their Unicode names and hexadecimal code points, are tab (CHARACTER TABULATION, U+0009), newline (LINE FEED, U+000A), carriage return (CARRIAGE RETURN, U+000D), and blank (SPACE, U+0020).</span></span> <span data-ttu-id="377f1-363">任意數目的空格字元可出現在`s`因為所有的空格字元會被忽略。</span><span class="sxs-lookup"><span data-stu-id="377f1-363">An arbitrary number of white-space characters can appear in `s` because all white-space characters are ignored.</span></span>  
  
 <span data-ttu-id="377f1-364">用處的字元，"="做為尾端填補。</span><span class="sxs-lookup"><span data-stu-id="377f1-364">The valueless character, "=", is used for trailing padding.</span></span> <span data-ttu-id="377f1-365">結尾`s`可以包含零個、 一個或兩個填補字元。</span><span class="sxs-lookup"><span data-stu-id="377f1-365">The end of `s` can consist of zero, one, or two padding characters.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="377f1-366"><xref:System.Convert.FromBase64String%2A>方法設計來處理單一字串，包含要解碼的所有資料。</span><span class="sxs-lookup"><span data-stu-id="377f1-366">The <xref:System.Convert.FromBase64String%2A> method is designed to process a single string that contains all the data to be decoded.</span></span> <span data-ttu-id="377f1-367">若要解碼資料流的 base-64 字元資料，使用<xref:System.Security.Cryptography.FromBase64Transform?displayProperty=nameWithType>類別。</span><span class="sxs-lookup"><span data-stu-id="377f1-367">To decode base-64 character data from a stream, use the <xref:System.Security.Cryptography.FromBase64Transform?displayProperty=nameWithType> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-368">下列範例會使用<xref:System.Convert.ToBase64String%28System.Byte%5B%5D%29>方法，將位元組陣列轉換 (base-64) uuencode 編碼字串，然後呼叫<xref:System.Convert.FromBase64String%28System.String%29>方法，以還原原始的位元組陣列。</span><span class="sxs-lookup"><span data-stu-id="377f1-368">The following example uses the <xref:System.Convert.ToBase64String%28System.Byte%5B%5D%29> method to convert a byte array to a UUencoded (base-64) string, and then calls the <xref:System.Convert.FromBase64String%28System.String%29> method to restore the original byte array.</span></span>  
  
 [!code-csharp[System.Convert.ToBase64String#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Convert.ToBase64String/cs/ToBase64String2.cs#1)]
 [!code-vb[System.Convert.ToBase64String#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Convert.ToBase64String/vb/ToBase64String2.vb#1)]  
  
 <span data-ttu-id="377f1-369">以下是更複雜的範例會建立 32 位元整數的 20 個元素陣列。</span><span class="sxs-lookup"><span data-stu-id="377f1-369">The following is a more complex example that creates a 20-element array of 32-bit integers.</span></span> <span data-ttu-id="377f1-370">然後它會使用<xref:System.BitConverter.GetBytes%28System.Int32%29?displayProperty=nameWithType>方法，將每個項目轉換成位元組陣列，它會將儲存在緩衝區中的適當位置呼叫<xref:System.Array.Copy%28System.Array%2CSystem.Int32%2CSystem.Array%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="377f1-370">It then uses the <xref:System.BitConverter.GetBytes%28System.Int32%29?displayProperty=nameWithType> method to convert each element into a byte array, which it stores in the appropriate position in a buffer by calling the <xref:System.Array.Copy%28System.Array%2CSystem.Int32%2CSystem.Array%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="377f1-371">這個緩衝區會接著傳遞給<xref:System.Convert.ToBase64String%28System.Byte%5B%5D%29>方法建立的 (base-64) uuencode 編碼字串。</span><span class="sxs-lookup"><span data-stu-id="377f1-371">This buffer is then passed to the <xref:System.Convert.ToBase64String%28System.Byte%5B%5D%29> method to create a UUencoded (base-64) string.</span></span>  <span data-ttu-id="377f1-372">然後它會呼叫<xref:System.Convert.FromBase64String%28System.String%29>方法來解碼 uuencode 編碼字串，並呼叫<xref:System.BitConverter.ToInt32%2A?displayProperty=nameWithType>方法，將每一組的四個位元組 （32 位元整數的大小） 轉換成整數。</span><span class="sxs-lookup"><span data-stu-id="377f1-372">It then calls the <xref:System.Convert.FromBase64String%28System.String%29> method to decode the UUencoded string, and calls the <xref:System.BitConverter.ToInt32%2A?displayProperty=nameWithType> method to convert each set of four bytes (the size of a 32-bit integer) to an integer.</span></span> <span data-ttu-id="377f1-373">範例輸出顯示已成功還原原始的陣列。</span><span class="sxs-lookup"><span data-stu-id="377f1-373">The output from the example shows that the original array has been successfully restored.</span></span>  
  
 [!code-csharp[System.Convert.ToBase64String#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Convert.ToBase64String/cs/ToBase64String.cs#2)]
 [!code-vb[System.Convert.ToBase64String#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Convert.ToBase64String/vb/ToBase64String.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="377f1-374">
            <paramref name="s" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-374">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="377f1-375">
            <paramref name="s" /> 除了空白字元之外的長度不會是零或 4 的倍數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-375">The length of <paramref name="s" />, ignoring white-space characters, is not zero or a multiple of 4.</span>
          </span>
          <span data-ttu-id="377f1-376">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-376">-or-</span>
          </span>
          <span data-ttu-id="377f1-377">
            <paramref name="s" /> 格式無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-377">The format of <paramref name="s" /> is invalid.</span>
          </span>
          <span data-ttu-id="377f1-378">
            <paramref name="s" /> 包含一個非 Base 64 的字元、兩個以上的填補字元或一個位於填補字元間的非泛空白字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-378">
              <paramref name="s" /> contains a non-base-64 character, more than two padding characters, or a non-white space-character among the padding characters.</span>
          </span>
        </exception>
        <altmember cref="M:System.Convert.ToBase64String(System.Byte[])" />
        <altmember cref="T:System.Security.Cryptography.FromBase64Transform" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeCode">
      <MemberSignature Language="C#" Value="public static TypeCode GetTypeCode (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TypeCode GetTypeCode(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.GetTypeCode(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypeCode (value As Object) As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TypeCode GetTypeCode(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-379">實作 <see cref="T:System.IConvertible" /> 介面的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-379">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-380">傳回指定物件的 <see cref="T:System.TypeCode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-380">Returns the <see cref="T:System.TypeCode" /> for the specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-381">
            <see cref="T:System.TypeCode" /> 的 <paramref name="value" />；如果 <see cref="F:System.TypeCode.Empty" /> 為 <paramref name="value" />，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-381">The <see cref="T:System.TypeCode" /> for <paramref name="value" />, or <see cref="F:System.TypeCode.Empty" /> if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDBNull">
      <MemberSignature Language="C#" Value="public static bool IsDBNull (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDBNull(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.IsDBNull(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDBNull (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDBNull(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-382">物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-382">An object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-383">傳回指定物件是否屬於類型 <see cref="T:System.DBNull" /> 的指示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-383">Returns an indication whether the specified object is of type <see cref="T:System.DBNull" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-384">如果 <see langword="true" /> 屬於類型 <paramref name="value" />，則為 <see cref="T:System.DBNull" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-384">
              <see langword="true" /> if <paramref name="value" /> is of type <see cref="T:System.DBNull" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-385"><xref:System.Convert.IsDBNull%2A>方法測試是否`value`參數等於<xref:System.DBNull.Value?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="377f1-385">The <xref:System.Convert.IsDBNull%2A> method tests whether the `value` parameter is equal to <xref:System.DBNull.Value?displayProperty=nameWithType>.</span></span> <span data-ttu-id="377f1-386">相當於下列程式碼：</span><span class="sxs-lookup"><span data-stu-id="377f1-386">It is equivalent to the following code:</span></span>  
  
 [!code-csharp[System.Convert.IsDBNull#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.IsDBNull/cs/Form1.cs#1)]
 [!code-vb[System.Convert.IsDBNull#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.IsDBNull/vb/Form1.vb#1)]  
  
> [!NOTE]
>  <span data-ttu-id="377f1-387"><xref:System.DBNull.Value?displayProperty=nameWithType> 用來指出遺漏的值。</span><span class="sxs-lookup"><span data-stu-id="377f1-387"><xref:System.DBNull.Value?displayProperty=nameWithType> is used to indicate a value that is missing.</span></span> <span data-ttu-id="377f1-388">不等於`null`或<xref:System.String.Empty?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="377f1-388">It is not equivalent to `null` or to <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="377f1-389">因此，程式碼如`Convert.IsDBNull(null)`在 C# 或`Convert.IsDBNull(Nothing)`Visual Basic 傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="377f1-389">Therefore, code such as `Convert.IsDBNull(null)` in C# or `Convert.IsDBNull(Nothing)` in Visual Basic returns`false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-390">下列範例會使用<xref:System.Data.SqlClient.SqlDataReader>調查資料擷取的資料庫物件。</span><span class="sxs-lookup"><span data-stu-id="377f1-390">The following example uses a <xref:System.Data.SqlClient.SqlDataReader> object to retrieve survey data from a database.</span></span> <span data-ttu-id="377f1-391">它會指派一個陣列，每個資料列的欄位值，然後將每個陣列項目<xref:System.Convert.IsDBNull%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="377f1-391">It assigns each row's field values to an array, and then passes each array element to the <xref:System.Convert.IsDBNull%2A> method.</span></span> <span data-ttu-id="377f1-392">如果此方法會傳回`true`，此範例會將字串"NA"指派給陣列元素。</span><span class="sxs-lookup"><span data-stu-id="377f1-392">If the method returns `true`, the example assigns the string "NA" to the array element.</span></span> <span data-ttu-id="377f1-393">接著會加入至陣列<xref:System.Windows.Forms.DataGridView.Rows%2A>集合<xref:System.Windows.Forms.DataGridView?displayProperty=nameWithType>控制項。</span><span class="sxs-lookup"><span data-stu-id="377f1-393">The array is then added to the <xref:System.Windows.Forms.DataGridView.Rows%2A> collection of a <xref:System.Windows.Forms.DataGridView?displayProperty=nameWithType> control.</span></span>  
  
 [!code-csharp[System.Convert.IsDBNull#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.IsDBNull/cs/Form1.cs#2)]
 [!code-vb[System.Convert.IsDBNull#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.IsDBNull/vb/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.DBNull" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToBase64CharArray">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="377f1-394">將 8 位元不帶正負號的整數陣列的子集，轉換為相等的 Base-64 位數編碼的 Unicode 字元陣列子集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-394">Converts a subset of an 8-bit unsigned integer array to an equivalent subset of a Unicode character array encoded with base-64 digits.</span>
          </span>
        </summary>
        <altmember cref="M:System.Convert.FromBase64CharArray(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="T:System.Security.Cryptography.ToBase64Transform" />
      </Docs>
    </MemberGroup>
    <Member MemberName="ToBase64CharArray">
      <MemberSignature Language="C#" Value="public static int ToBase64CharArray (byte[] inArray, int offsetIn, int length, char[] outArray, int offsetOut);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToBase64CharArray(unsigned int8[] inArray, int32 offsetIn, int32 length, char[] outArray, int32 offsetOut) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBase64CharArray (inArray As Byte(), offsetIn As Integer, length As Integer, outArray As Char(), offsetOut As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToBase64CharArray(cli::array &lt;System::Byte&gt; ^ inArray, int offsetIn, int length, cli::array &lt;char&gt; ^ outArray, int offsetOut);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inArray" Type="System.Byte[]" />
        <Parameter Name="offsetIn" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="outArray" Type="System.Char[]" />
        <Parameter Name="offsetOut" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="inArray">
          <span data-ttu-id="377f1-395">8 位元不帶正負號的整數的輸入陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-395">An input array of 8-bit unsigned integers.</span>
          </span>
        </param>
        <param name="offsetIn">
          <span data-ttu-id="377f1-396">
            <c>inArray</c> 中的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-396">A position within <c>inArray</c>.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="377f1-397">要轉換的 <c>inArray</c> 元素數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-397">The number of elements of <c>inArray</c> to convert.</span>
          </span>
        </param>
        <param name="outArray">
          <span data-ttu-id="377f1-398">Unicode 字元的輸出陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-398">An output array of Unicode characters.</span>
          </span>
        </param>
        <param name="offsetOut">
          <span data-ttu-id="377f1-399">
            <c>outArray</c> 中的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-399">A position within <c>outArray</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-400">將 8 位元不帶正負號的整數陣列的子集，轉換為相等的 Base-64 位數編碼的 Unicode 字元陣列子集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-400">Converts a subset of an 8-bit unsigned integer array to an equivalent subset of a Unicode character array encoded with base-64 digits.</span>
          </span>
          <span data-ttu-id="377f1-401">參數會將子集指定為輸入和輸出陣列中的位移，以及轉換輸入陣列中的項目數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-401">Parameters specify the subsets as offsets in the input and output arrays, and the number of elements in the input array to convert.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-402">32 位元帶正負號的整數，包含 <paramref name="outArray" /> 中的位元數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-402">A 32-bit signed integer containing the number of bytes in <paramref name="outArray" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-403">子集`length`的項目`inArray`位置開始`offsetIn`視為數值和轉換中的項目子集，`outArray`位置開始`offsetOut`。</span><span class="sxs-lookup"><span data-stu-id="377f1-403">The subset of `length` elements of `inArray` starting at position `offsetIn`, are taken as a numeric value and converted to a subset of elements in `outArray` starting at position `offsetOut`.</span></span> <span data-ttu-id="377f1-404">傳回值會指出轉換中的元素數目`outArray`。</span><span class="sxs-lookup"><span data-stu-id="377f1-404">The return value indicates the number of converted elements in `outArray`.</span></span> <span data-ttu-id="377f1-405">子集`outArray`base 64 數字所組成。</span><span class="sxs-lookup"><span data-stu-id="377f1-405">The subset of `outArray` consists of base-64 digits.</span></span>  
  
 <span data-ttu-id="377f1-406">Base 64 數字以遞增順序，從零是否為大寫的字元"A"到"Z"、 小寫字元"a"到"z"、 數字"0"到"9"和符號"+"和"/"。</span><span class="sxs-lookup"><span data-stu-id="377f1-406">The base-64 digits in ascending order from zero are the uppercase characters "A" to "Z", the lowercase characters "a" to "z", the numerals "0" to "9", and the symbols "+" and "/".</span></span> <span data-ttu-id="377f1-407">用處的字元，"="做為尾端填補。</span><span class="sxs-lookup"><span data-stu-id="377f1-407">The valueless character, "=", is used for trailing padding.</span></span>  
  
 <span data-ttu-id="377f1-408">`offset`和`length`參數是 32 位元帶正負號的數字。</span><span class="sxs-lookup"><span data-stu-id="377f1-408">The `offset` and `length` parameters are 32-bit signed numbers.</span></span> <span data-ttu-id="377f1-409">`offsetIn`和`offsetOut`參數都是以零為起始的陣列位置。</span><span class="sxs-lookup"><span data-stu-id="377f1-409">The `offsetIn` and `offsetOut` parameters are zero-based array positions.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="377f1-410"><xref:System.Convert.ToBase64CharArray%2A>方法設計來處理單一位元組陣列，其中包含要編碼的所有資料。</span><span class="sxs-lookup"><span data-stu-id="377f1-410">The <xref:System.Convert.ToBase64CharArray%2A> method is designed to process a single byte array that contains all the data to be encoded.</span></span> <span data-ttu-id="377f1-411">若要從位元組資料流建立 base-64 字元陣列，使用<xref:System.Security.Cryptography.ToBase64Transform?displayProperty=nameWithType>類別。</span><span class="sxs-lookup"><span data-stu-id="377f1-411">To create a base-64 character array from a byte stream, use the <xref:System.Security.Cryptography.ToBase64Transform?displayProperty=nameWithType> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-412">下列範例示範如何使用<xref:System.Convert.ToBase64CharArray%2A>UUencode 方法 （格式為 base 64 編碼） 二進位資料流，然後儲存至檔案的編碼方式。</span><span class="sxs-lookup"><span data-stu-id="377f1-412">The following example demonstrates using the <xref:System.Convert.ToBase64CharArray%2A> method to UUencode (encode in base 64) a binary stream, then save the encoding to a file.</span></span>  
  
 [!code-cpp[System.Convert UUEncodeDecode functions#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Convert UUEncodeDecode functions/CPP/class1.cpp#2)]
 [!code-csharp[System.Convert UUEncodeDecode functions#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Convert UUEncodeDecode functions/CS/class1.cs#2)]
 [!code-vb[System.Convert UUEncodeDecode functions#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Convert UUEncodeDecode functions/VB/class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="377f1-413">
            <paramref name="inArray" /> 或 <paramref name="outArray" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-413">
              <paramref name="inArray" /> or <paramref name="outArray" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="377f1-414">
            <paramref name="offsetIn" />、<paramref name="offsetOut" /> 或 <paramref name="length" /> 是負數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-414">
              <paramref name="offsetIn" />, <paramref name="offsetOut" />, or <paramref name="length" /> is negative.</span>
          </span>
          <span data-ttu-id="377f1-415">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-415">-or-</span>
          </span>
          <span data-ttu-id="377f1-416">
            <paramref name="offsetIn" /> 加上 <paramref name="length" /> 大於 <paramref name="inArray" /> 的長度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-416">
              <paramref name="offsetIn" /> plus <paramref name="length" /> is greater than the length of <paramref name="inArray" />.</span>
          </span>
          <span data-ttu-id="377f1-417">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-417">-or-</span>
          </span>
          <span data-ttu-id="377f1-418">
            <paramref name="offsetOut" /> 加上要傳回的元素數目大於 <paramref name="outArray" /> 的長度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-418">
              <paramref name="offsetOut" /> plus the number of elements to return is greater than the length of <paramref name="outArray" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Convert.FromBase64CharArray(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="T:System.Security.Cryptography.ToBase64Transform" />
      </Docs>
    </Member>
    <Member MemberName="ToBase64CharArray">
      <MemberSignature Language="C#" Value="public static int ToBase64CharArray (byte[] inArray, int offsetIn, int length, char[] outArray, int offsetOut, Base64FormattingOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToBase64CharArray(unsigned int8[] inArray, int32 offsetIn, int32 length, char[] outArray, int32 offsetOut, valuetype System.Base64FormattingOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Base64FormattingOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBase64CharArray (inArray As Byte(), offsetIn As Integer, length As Integer, outArray As Char(), offsetOut As Integer, options As Base64FormattingOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToBase64CharArray(cli::array &lt;System::Byte&gt; ^ inArray, int offsetIn, int length, cli::array &lt;char&gt; ^ outArray, int offsetOut, Base64FormattingOptions options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inArray" Type="System.Byte[]" />
        <Parameter Name="offsetIn" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="outArray" Type="System.Char[]" />
        <Parameter Name="offsetOut" Type="System.Int32" />
        <Parameter Name="options" Type="System.Base64FormattingOptions" />
      </Parameters>
      <Docs>
        <param name="inArray">
          <span data-ttu-id="377f1-419">8 位元不帶正負號的整數的輸入陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-419">An input array of 8-bit unsigned integers.</span>
          </span>
        </param>
        <param name="offsetIn">
          <span data-ttu-id="377f1-420">
            <c>inArray</c> 中的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-420">A position within <c>inArray</c>.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="377f1-421">要轉換的 <c>inArray</c> 元素數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-421">The number of elements of <c>inArray</c> to convert.</span>
          </span>
        </param>
        <param name="outArray">
          <span data-ttu-id="377f1-422">Unicode 字元的輸出陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-422">An output array of Unicode characters.</span>
          </span>
        </param>
        <param name="offsetOut">
          <span data-ttu-id="377f1-423">
            <c>outArray</c> 中的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-423">A position within <c>outArray</c>.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="377f1-424">
            <see cref="F:System.Base64FormattingOptions.InsertLineBreaks" /> 以便於每 76 個字元之後插入分行符號，或是 <see cref="F:System.Base64FormattingOptions.None" /> 不插入分行符號。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-424">
              <see cref="F:System.Base64FormattingOptions.InsertLineBreaks" /> to insert a line break every 76 characters, or <see cref="F:System.Base64FormattingOptions.None" /> to not insert line breaks.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-425">將 8 位元不帶正負號的整數陣列的子集，轉換為相等的 Base-64 位數編碼的 Unicode 字元陣列子集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-425">Converts a subset of an 8-bit unsigned integer array to an equivalent subset of a Unicode character array encoded with base-64 digits.</span>
          </span>
          <span data-ttu-id="377f1-426">參數會指定可在輸入和輸出陣列中當成位移 (Offset) 的子集、輸入陣列中要轉換的項目個數，以及是否要在輸出陣列中插入分行符號。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-426">Parameters specify the subsets as offsets in the input and output arrays, the number of elements in the input array to convert, and whether line breaks are inserted in the output array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-427">32 位元帶正負號的整數，包含 <paramref name="outArray" /> 中的位元數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-427">A 32-bit signed integer containing the number of bytes in <paramref name="outArray" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-428">子集`length`的項目`inArray`參數的位置開始`offsetIn`視為數值和轉換中的項目子集，`outArray`參數的位置開始`offsetOut`。</span><span class="sxs-lookup"><span data-stu-id="377f1-428">The subset of `length` elements of the `inArray` parameter starting at position `offsetIn`, are taken as a numeric value and converted to a subset of elements in the `outArray` parameter starting at position `offsetOut`.</span></span> <span data-ttu-id="377f1-429">傳回值會指出轉換中的元素數目`outArray`。</span><span class="sxs-lookup"><span data-stu-id="377f1-429">The return value indicates the number of converted elements in `outArray`.</span></span> <span data-ttu-id="377f1-430">子集`outArray`base 64 數字所組成。</span><span class="sxs-lookup"><span data-stu-id="377f1-430">The subset of `outArray` consists of base-64 digits.</span></span>  
  
 <span data-ttu-id="377f1-431">Base 64 數字以遞增順序，從零是否為大寫的字元"A"到"Z"、 小寫字元"a"到"z"、 數字"0"到"9"和符號"+"和"/"。</span><span class="sxs-lookup"><span data-stu-id="377f1-431">The base-64 digits in ascending order from zero are the uppercase characters "A" to "Z", the lowercase characters "a" to "z", the numerals "0" to "9", and the symbols "+" and "/".</span></span> <span data-ttu-id="377f1-432">用處字元"="用於尾端填補。</span><span class="sxs-lookup"><span data-stu-id="377f1-432">The valueless character "=" is used for trailing padding.</span></span>  
  
 <span data-ttu-id="377f1-433">`offset`和`length`參數是 32 位元帶正負號的數字。</span><span class="sxs-lookup"><span data-stu-id="377f1-433">The `offset` and `length` parameters are 32-bit signed numbers.</span></span> <span data-ttu-id="377f1-434">`offsetIn`和`offsetOut`參數都是以零為起始的陣列位置。</span><span class="sxs-lookup"><span data-stu-id="377f1-434">The `offsetIn` and `offsetOut` parameters are zero-based array positions.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="377f1-435"><xref:System.Convert.ToBase64CharArray%2A>方法設計來處理單一位元組陣列，其中包含要編碼的所有資料。</span><span class="sxs-lookup"><span data-stu-id="377f1-435">The <xref:System.Convert.ToBase64CharArray%2A> method is designed to process a single byte array that contains all the data to be encoded.</span></span> <span data-ttu-id="377f1-436">若要從位元組資料流建立 base-64 字元陣列，使用<xref:System.Security.Cryptography.ToBase64Transform?displayProperty=nameWithType>類別。</span><span class="sxs-lookup"><span data-stu-id="377f1-436">To create a base-64 character array from a byte stream, use the <xref:System.Security.Cryptography.ToBase64Transform?displayProperty=nameWithType> class.</span></span>  
  
 <span data-ttu-id="377f1-437">如果`options`參數設定為<xref:System.Base64FormattingOptions.InsertLineBreaks>和轉換的輸出是超過 76 個字元，就會插入分行符號每 76 個字元。</span><span class="sxs-lookup"><span data-stu-id="377f1-437">If the `options` parameter is set to <xref:System.Base64FormattingOptions.InsertLineBreaks> and the output of the conversion is longer than 76 characters, a line break is inserted every 76 characters.</span></span> <span data-ttu-id="377f1-438">分行符號的定義是歸位字元 (U + 000d) 後面接著行換頁字元 (U + 000A)。</span><span class="sxs-lookup"><span data-stu-id="377f1-438">A line break is defined as a carriage return character (U+000D) followed by a line feed character (U+000A).</span></span> <span data-ttu-id="377f1-439">如需詳細資訊，請參閱 RFC 2045，「 多用途網際網路郵件延伸標準 」，網址[ http://www.rfc-editor.org/ ](http://www.rfc-editor.org/)。</span><span class="sxs-lookup"><span data-stu-id="377f1-439">For more information, see RFC 2045, "Multipurpose Internet Mail Extensions", at [http://www.rfc-editor.org/](http://www.rfc-editor.org/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-440">下列範例會示範<xref:System.Convert.ToBase64CharArray%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="377f1-440">The following example demonstrates the <xref:System.Convert.ToBase64CharArray%2A> method.</span></span> <span data-ttu-id="377f1-441">輸入會分成三個位元組 （24 位元） 每個群組。</span><span class="sxs-lookup"><span data-stu-id="377f1-441">The input is divided into groups of three bytes (24 bits) each.</span></span> <span data-ttu-id="377f1-442">因此，每個群組包含四個每個數字，範圍從十進位的 0 到 63 的 6 位元數字。</span><span class="sxs-lookup"><span data-stu-id="377f1-442">Consequently, each group consists of four 6-bit numbers where each number ranges from decimal 0 to 63.</span></span> <span data-ttu-id="377f1-443">在此範例中，有具有一個位元組其餘 85 3 位元組的群組。</span><span class="sxs-lookup"><span data-stu-id="377f1-443">In this example, there are 85 3-byte groups with one byte remaining.</span></span> <span data-ttu-id="377f1-444">第一個群組包含 00，01、 02 產生四個十進位的 0、 0、 4 和 2 相等的 6 位元值的十六進位值。</span><span class="sxs-lookup"><span data-stu-id="377f1-444">The first group consists of the hexadecimal values 00, 01, and 02, which yield four 6-bit values equal to decimal 0, 0, 4, and 2.</span></span> <span data-ttu-id="377f1-445">這些四個值對應至 base 64 數字"A"、"A"、"E"和"C"開頭的輸出。</span><span class="sxs-lookup"><span data-stu-id="377f1-445">Those four values correspond to the base-64 digits "A", "A", "E", and "C" at the beginning of the output.</span></span>  
  
 <span data-ttu-id="377f1-446">整數數字 3 位元組的群組不存在，如果剩餘的位元組會有效地以零填補來形成完整的群組。</span><span class="sxs-lookup"><span data-stu-id="377f1-446">If an integral number of 3-byte groups does not exist, the remaining bytes are effectively padded with zeros to form a complete group.</span></span> <span data-ttu-id="377f1-447">在此範例中，最後一個位元組的值為十六進位 FF。</span><span class="sxs-lookup"><span data-stu-id="377f1-447">In this example, the value of the last byte is hexadecimal FF.</span></span> <span data-ttu-id="377f1-448">前 6 個位元等於十進位 63，對應為 base 64 數字"/"結尾的輸出，而接下來的 2 位元填補零，以產生十進位 48，對應至 base 64 數字，"w"。</span><span class="sxs-lookup"><span data-stu-id="377f1-448">The first 6 bits are equal to decimal 63, which corresponds to the base-64 digit "/" at the end of the output, and the next 2 bits are padded with zeros to yield decimal 48, which corresponds to the base-64 digit, "w".</span></span> <span data-ttu-id="377f1-449">最後兩個的 6 位元值會填補，並對應至用處填補字元，"="。</span><span class="sxs-lookup"><span data-stu-id="377f1-449">The last two 6-bit values are padding and correspond to the valueless padding character, "=".</span></span>  
  
 [!code-cpp[convert.tobase64chararray#1](~/samples/snippets/cpp/VS_Snippets_CLR/convert.tobase64chararray/CPP/tb64ca.cpp#1)]
 [!code-csharp[convert.tobase64chararray#1](~/samples/snippets/csharp/VS_Snippets_CLR/convert.tobase64chararray/CS/tb64ca.cs#1)]
 [!code-vb[convert.tobase64chararray#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/convert.tobase64chararray/VB/tb64ca.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="377f1-450">
            <paramref name="inArray" /> 或 <paramref name="outArray" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-450">
              <paramref name="inArray" /> or <paramref name="outArray" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="377f1-451">
            <paramref name="offsetIn" />、<paramref name="offsetOut" /> 或 <paramref name="length" /> 是負數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-451">
              <paramref name="offsetIn" />, <paramref name="offsetOut" />, or <paramref name="length" /> is negative.</span>
          </span>
          <span data-ttu-id="377f1-452">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-452">-or-</span>
          </span>
          <span data-ttu-id="377f1-453">
            <paramref name="offsetIn" /> 加上 <paramref name="length" /> 大於 <paramref name="inArray" /> 的長度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-453">
              <paramref name="offsetIn" /> plus <paramref name="length" /> is greater than the length of <paramref name="inArray" />.</span>
          </span>
          <span data-ttu-id="377f1-454">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-454">-or-</span>
          </span>
          <span data-ttu-id="377f1-455">
            <paramref name="offsetOut" /> 加上要傳回的元素數目大於 <paramref name="outArray" /> 的長度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-455">
              <paramref name="offsetOut" /> plus the number of elements to return is greater than the length of <paramref name="outArray" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="377f1-456">
            <paramref name="options" /> 不是有效的 <see cref="T:System.Base64FormattingOptions" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-456">
              <paramref name="options" /> is not a valid <see cref="T:System.Base64FormattingOptions" /> value.</span>
          </span>
        </exception>
        <altmember cref="M:System.Convert.FromBase64CharArray(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="T:System.Security.Cryptography.ToBase64Transform" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToBase64String">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="377f1-457">將 8 位元不帶正負號的整數陣列的值，轉換為使用 Base-64 位數編碼的相等字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-457">Converts the value of an array of 8-bit unsigned integers to its equivalent string representation that is encoded with base-64 digits.</span>
          </span>
        </summary>
        <altmember cref="M:System.Convert.FromBase64String(System.String)" />
        <altmember cref="T:System.Security.Cryptography.ToBase64Transform" />
      </Docs>
    </MemberGroup>
    <Member MemberName="ToBase64String">
      <MemberSignature Language="C#" Value="public static string ToBase64String (byte[] inArray);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToBase64String(unsigned int8[] inArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBase64String(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBase64String (inArray As Byte()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToBase64String(cli::array &lt;System::Byte&gt; ^ inArray);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inArray" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="inArray">
          <span data-ttu-id="377f1-458">8 位元不帶正負號的整數的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-458">An array of 8-bit unsigned integers.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-459">將 8 位元不帶正負號的整數陣列，轉換為使用 Base-64 位數編碼的相等字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-459">Converts an array of 8-bit unsigned integers to its equivalent string representation that is encoded with base-64 digits.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-460">
            <paramref name="inArray" /> 之內容的字串表示 (格式為 Base 64)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-460">The string representation, in base 64, of the contents of <paramref name="inArray" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-461">項目`inArray`以數值形式拍攝且轉換為使用 base-64 位數編碼的字串表示。</span><span class="sxs-lookup"><span data-stu-id="377f1-461">The elements of `inArray` are taken as a numeric value and converted to a string representation that is encoded with base-64 digits.</span></span>  
  
 <span data-ttu-id="377f1-462">Base 64 數字以遞增順序，從零是否為大寫的字元"A"到"Z"、 小寫字元"a"到"z"、 數字"0"到"9"和符號"+"和"/"。</span><span class="sxs-lookup"><span data-stu-id="377f1-462">The base-64 digits in ascending order from zero are the uppercase characters "A" to "Z", the lowercase characters "a" to "z", the numerals "0" to "9", and the symbols "+" and "/".</span></span> <span data-ttu-id="377f1-463">用處的字元，"="做為尾端填補。</span><span class="sxs-lookup"><span data-stu-id="377f1-463">The valueless character, "=", is used for trailing padding.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="377f1-464"><xref:System.Convert.ToBase64String%2A>方法設計來處理單一位元組陣列，其中包含要編碼的所有資料。</span><span class="sxs-lookup"><span data-stu-id="377f1-464">The <xref:System.Convert.ToBase64String%2A> method is designed to process a single byte array that contains all the data to be encoded.</span></span> <span data-ttu-id="377f1-465">若要編碼的資料流的資料，請使用<xref:System.Security.Cryptography.ToBase64Transform?displayProperty=nameWithType>類別。</span><span class="sxs-lookup"><span data-stu-id="377f1-465">To encode data from a stream, use the <xref:System.Security.Cryptography.ToBase64Transform?displayProperty=nameWithType> class.</span></span>  
  
 <span data-ttu-id="377f1-466">一般情況下，<xref:System.Convert.ToBase64String%2A>方法不是用來反覆存取使用 uuencode 編碼 (base 64 編碼) 字串。</span><span class="sxs-lookup"><span data-stu-id="377f1-466">Ordinarily, the <xref:System.Convert.ToBase64String%2A> method is not used to round-trip a  UUEncoded (base-64 encoded) string.</span></span>  <span data-ttu-id="377f1-467">也就是說，如果您藉由呼叫解碼字串<xref:System.Convert.FromBase64String%2A>方法，然後將傳回的位元組陣列編碼藉由呼叫<xref:System.Convert.ToBase64String%2A>方法，產生的字串不一定會有相同的原始字串。</span><span class="sxs-lookup"><span data-stu-id="377f1-467">That is, if you decode a string by calling the <xref:System.Convert.FromBase64String%2A> method, then encode the returned byte array by calling the <xref:System.Convert.ToBase64String%2A> method, the resulting string will not necessarily be identical to the original string.</span></span> <span data-ttu-id="377f1-468">字串會存取，只有原始字串是有效的 base-64 編碼的字串。</span><span class="sxs-lookup"><span data-stu-id="377f1-468">The string will round-trip only if the original string is a valid base-64 encoded string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-469">下列範例會使用<xref:System.Convert.ToBase64String%28System.Byte%5B%5D%29>方法，將位元組陣列轉換 (base-64) uuencode 編碼字串，然後呼叫<xref:System.Convert.FromBase64String%28System.String%29>方法，以還原原始的位元組陣列。</span><span class="sxs-lookup"><span data-stu-id="377f1-469">The following example uses the <xref:System.Convert.ToBase64String%28System.Byte%5B%5D%29> method to convert a byte array to a UUencoded (base-64) string, and then calls the <xref:System.Convert.FromBase64String%28System.String%29> method to restore the original byte array.</span></span>  
  
 [!code-csharp[System.Convert.ToBase64String#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Convert.ToBase64String/cs/ToBase64String2.cs#1)]
 [!code-vb[System.Convert.ToBase64String#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Convert.ToBase64String/vb/ToBase64String2.vb#1)]  
  
 <span data-ttu-id="377f1-470">以下是更複雜的範例會建立 32 位元整數的 20 個元素陣列。</span><span class="sxs-lookup"><span data-stu-id="377f1-470">The following is a more complex example that creates a 20-element array of 32-bit integers.</span></span> <span data-ttu-id="377f1-471">然後它會使用<xref:System.BitConverter.GetBytes%28System.Int32%29?displayProperty=nameWithType>方法，將每個項目轉換成位元組陣列，它會將儲存在緩衝區中的適當位置呼叫<xref:System.Array.Copy%28System.Array%2CSystem.Int32%2CSystem.Array%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="377f1-471">It then uses the <xref:System.BitConverter.GetBytes%28System.Int32%29?displayProperty=nameWithType> method to convert each element into a byte array, which it stores in the appropriate position in a buffer by calling the <xref:System.Array.Copy%28System.Array%2CSystem.Int32%2CSystem.Array%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="377f1-472">這個緩衝區會接著傳遞給<xref:System.Convert.ToBase64String%28System.Byte%5B%5D%29>方法建立的 (base-64) uuencode 編碼字串。</span><span class="sxs-lookup"><span data-stu-id="377f1-472">This buffer is then passed to the <xref:System.Convert.ToBase64String%28System.Byte%5B%5D%29> method to create a UUencoded (base-64) string.</span></span>  <span data-ttu-id="377f1-473">然後它會呼叫<xref:System.Convert.FromBase64String%28System.String%29>方法來解碼 uuencode 編碼字串，並呼叫<xref:System.BitConverter.ToInt32%2A?displayProperty=nameWithType>方法，將每一組的四個位元組 （32 位元整數的大小） 轉換成整數。</span><span class="sxs-lookup"><span data-stu-id="377f1-473">It then calls the <xref:System.Convert.FromBase64String%28System.String%29> method to decode the UUencoded string, and calls the <xref:System.BitConverter.ToInt32%2A?displayProperty=nameWithType> method to convert each set of four bytes (the size of a 32-bit integer) to an integer.</span></span> <span data-ttu-id="377f1-474">範例輸出顯示已成功還原原始的陣列。</span><span class="sxs-lookup"><span data-stu-id="377f1-474">The output from the example shows that the original array has been successfully restored.</span></span>  
  
 [!code-csharp[System.Convert.ToBase64String#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Convert.ToBase64String/cs/ToBase64String.cs#2)]
 [!code-vb[System.Convert.ToBase64String#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Convert.ToBase64String/vb/ToBase64String.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="377f1-475">
            <paramref name="inArray" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-475">
              <paramref name="inArray" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Convert.FromBase64String(System.String)" />
        <altmember cref="T:System.Security.Cryptography.ToBase64Transform" />
      </Docs>
    </Member>
    <Member MemberName="ToBase64String">
      <MemberSignature Language="C#" Value="public static string ToBase64String (byte[] inArray, Base64FormattingOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToBase64String(unsigned int8[] inArray, valuetype System.Base64FormattingOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBase64String(System.Byte[],System.Base64FormattingOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBase64String (inArray As Byte(), options As Base64FormattingOptions) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToBase64String(cli::array &lt;System::Byte&gt; ^ inArray, Base64FormattingOptions options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inArray" Type="System.Byte[]" />
        <Parameter Name="options" Type="System.Base64FormattingOptions" />
      </Parameters>
      <Docs>
        <param name="inArray">
          <span data-ttu-id="377f1-476">8 位元不帶正負號的整數的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-476">An array of 8-bit unsigned integers.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="377f1-477">
            <see cref="F:System.Base64FormattingOptions.InsertLineBreaks" /> 以便於每 76 個字元之後插入分行符號，或是 <see cref="F:System.Base64FormattingOptions.None" /> 不插入分行符號。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-477">
              <see cref="F:System.Base64FormattingOptions.InsertLineBreaks" /> to insert a line break every 76 characters, or <see cref="F:System.Base64FormattingOptions.None" /> to not insert line breaks.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-478">將 8 位元不帶正負號的整數陣列，轉換為使用 Base-64 位數編碼的相等字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-478">Converts an array of 8-bit unsigned integers to its equivalent string representation that is encoded with base-64 digits.</span>
          </span>
          <span data-ttu-id="377f1-479">參數可指定是否要在傳回值中插入分行符號。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-479">A parameter specifies whether to insert line breaks in the return value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-480">
            <paramref name="inArray" /> 中項目的字串表示 (格式為 Base 64)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-480">The string representation in base 64 of the elements in <paramref name="inArray" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-481">項目`inArray`參數會被視為數字的值，轉換為 base 64 的字串表示。</span><span class="sxs-lookup"><span data-stu-id="377f1-481">The elements of the `inArray` parameter are taken as a numeric value and converted to a string representation in base 64.</span></span>  
  
 <span data-ttu-id="377f1-482">Base 64 數字以遞增順序，從零是否為大寫的字元"A"到"Z"、 小寫字元"a"到"z"、 數字"0"到"9"和符號"+"和"/"。</span><span class="sxs-lookup"><span data-stu-id="377f1-482">The base-64 digits in ascending order from zero are the uppercase characters "A" to "Z", the lowercase characters "a" to "z", the numerals "0" to "9", and the symbols "+" and "/".</span></span> <span data-ttu-id="377f1-483">用處字元"="用於尾端填補。</span><span class="sxs-lookup"><span data-stu-id="377f1-483">The valueless character "=" is used for trailing padding.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="377f1-484"><xref:System.Convert.ToBase64String%2A>方法設計來處理單一位元組陣列，其中包含要編碼的所有資料。</span><span class="sxs-lookup"><span data-stu-id="377f1-484">The <xref:System.Convert.ToBase64String%2A> method is designed to process a single byte array that contains all the data to be encoded.</span></span> <span data-ttu-id="377f1-485">若要編碼的資料流的資料，請使用<xref:System.Security.Cryptography.ToBase64Transform?displayProperty=nameWithType>類別。</span><span class="sxs-lookup"><span data-stu-id="377f1-485">To encode data from a stream, use the <xref:System.Security.Cryptography.ToBase64Transform?displayProperty=nameWithType> class.</span></span>  
  
 <span data-ttu-id="377f1-486">如果`options`參數設定為<xref:System.Base64FormattingOptions.InsertLineBreaks>和轉換的輸出是超過 76 個字元，就會插入分行符號每 76 個字元。</span><span class="sxs-lookup"><span data-stu-id="377f1-486">If the `options` parameter is set to <xref:System.Base64FormattingOptions.InsertLineBreaks> and the output of the conversion is longer than 76 characters, a line break is inserted every 76 characters.</span></span> <span data-ttu-id="377f1-487">分行符號的定義是歸位字元 (U + 000d) 後面接著行換頁字元 (U + 000A)。</span><span class="sxs-lookup"><span data-stu-id="377f1-487">A line break is defined as a carriage return character (U+000D) followed by a line feed character (U+000A).</span></span> <span data-ttu-id="377f1-488">因為分行符號會被視為空白字元以 base 64 編碼方式，將會忽略轉換 base 64 編碼字串的位元組陣列。</span><span class="sxs-lookup"><span data-stu-id="377f1-488">Because line breaks are considered whitespace characters in a base-64 encoding, they are ignored when converting a base-64 encoded string back to a byte array.</span></span> <span data-ttu-id="377f1-489">對控制項或裝置，例如主控台視窗中顯示編碼的字串時，插入換行符號會只是很方便。</span><span class="sxs-lookup"><span data-stu-id="377f1-489">The line breaks are simply convenient when displaying the encoded string to a control or a device such as a console window.</span></span> <span data-ttu-id="377f1-490">如需詳細資訊，請參閱 RFC 2045，「 多用途網際網路郵件延伸標準 」，網址[ http://www.rfc-editor.org/ ](http://www.rfc-editor.org/)。</span><span class="sxs-lookup"><span data-stu-id="377f1-490">For more information, see RFC 2045, "Multipurpose Internet Mail Extensions", at [http://www.rfc-editor.org/](http://www.rfc-editor.org/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-491">下列範例會呼叫<xref:System.Convert.ToBase64String%28System.Byte%5B%5D%2CSystem.Base64FormattingOptions%29?displayProperty=nameWithType>與<xref:System.Base64FormattingOptions.InsertLineBreaks?displayProperty=nameWithType>插入列的引數會中斷已編碼所產生的 100 個元素的位元組陣列的字串。</span><span class="sxs-lookup"><span data-stu-id="377f1-491">The following example calls the <xref:System.Convert.ToBase64String%28System.Byte%5B%5D%2CSystem.Base64FormattingOptions%29?displayProperty=nameWithType> with a <xref:System.Base64FormattingOptions.InsertLineBreaks?displayProperty=nameWithType> argument to insert line breaks in the string that is produced by encoding a 100-element byte array.</span></span>  
  
 [!code-csharp[System.Convert.ToBase64String#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Convert.ToBase64String/cs/ToBase64String3.cs#3)]
 [!code-vb[System.Convert.ToBase64String#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Convert.ToBase64String/vb/ToBase64String3.vb#3)]  
  
 <span data-ttu-id="377f1-492">做為範例所示，從輸出<xref:System.Convert.FromBase64String%2A?displayProperty=nameWithType>成功地還原原始的位元組陣列則分行符號字元會在轉換期間忽略。</span><span class="sxs-lookup"><span data-stu-id="377f1-492">As the output from the example shows, the <xref:System.Convert.FromBase64String%2A?displayProperty=nameWithType> succeeds in restoring the original byte array; the line break characters are ignored during the conversion.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="377f1-493">
            <paramref name="inArray" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-493">
              <paramref name="inArray" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="377f1-494">
            <paramref name="options" /> 不是有效的 <see cref="T:System.Base64FormattingOptions" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-494">
              <paramref name="options" /> is not a valid <see cref="T:System.Base64FormattingOptions" /> value.</span>
          </span>
        </exception>
        <altmember cref="M:System.Convert.FromBase64String(System.String)" />
        <altmember cref="T:System.Security.Cryptography.ToBase64Transform" />
      </Docs>
    </Member>
    <Member MemberName="ToBase64String">
      <MemberSignature Language="C#" Value="public static string ToBase64String (ReadOnlySpan&lt;byte&gt; bytes, Base64FormattingOptions options = System.Base64FormattingOptions.None);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToBase64String(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; bytes, valuetype System.Base64FormattingOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBase64String(System.ReadOnlySpan{System.Byte},System.Base64FormattingOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBase64String (bytes As ReadOnlySpan(Of Byte), Optional options As Base64FormattingOptions = System.Base64FormattingOptions.None) As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="options" Type="System.Base64FormattingOptions" />
      </Parameters>
      <Docs>
        <param name="bytes">To be added.</param>
        <param name="options">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToBase64String">
      <MemberSignature Language="C#" Value="public static string ToBase64String (byte[] inArray, int offset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToBase64String(unsigned int8[] inArray, int32 offset, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBase64String(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBase64String (inArray As Byte(), offset As Integer, length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToBase64String(cli::array &lt;System::Byte&gt; ^ inArray, int offset, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inArray" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="inArray">
          <span data-ttu-id="377f1-495">8 位元不帶正負號的整數的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-495">An array of 8-bit unsigned integers.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="377f1-496">
            <c>inArray</c> 中的位移。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-496">An offset in <c>inArray</c>.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="377f1-497">要轉換的 <c>inArray</c> 元素數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-497">The number of elements of <c>inArray</c> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-498">將 8 位元不帶正負號的整數陣列子集，轉換為使用 Base-64 位數編碼的相等字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-498">Converts a subset of an array of 8-bit unsigned integers to its equivalent string representation that is encoded with base-64 digits.</span>
          </span>
          <span data-ttu-id="377f1-499">參數會將子集指定為輸入陣列中的位移 (Offset)，以及所要轉換陣列中項目的個數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-499">Parameters specify the subset as an offset in the input array, and the number of elements in the array to convert.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-500">
            <paramref name="length" /> 中開始於位置 <paramref name="inArray" /> 之 <paramref name="offset" /> 項目的字串表示 (格式為 Base 64)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-500">The string representation in base 64 of <paramref name="length" /> elements of <paramref name="inArray" />, starting at position <paramref name="offset" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-501">項目`inArray`會被視為數字的值，轉換為的字串表示，格式為 base 64。</span><span class="sxs-lookup"><span data-stu-id="377f1-501">The elements of `inArray` are taken as a numeric value and converted to a string representation in base 64.</span></span>  
  
 <span data-ttu-id="377f1-502">Base 64 數字以遞增順序，從零是否為大寫的字元"A"到"Z"、 小寫字元"a"到"z"、 數字"0"到"9"和符號"+"和"/"。</span><span class="sxs-lookup"><span data-stu-id="377f1-502">The base-64 digits in ascending order from zero are the uppercase characters "A" to "Z", the lowercase characters "a" to "z", the numerals "0" to "9", and the symbols "+" and "/".</span></span> <span data-ttu-id="377f1-503">用處的字元，"="做為尾端填補。</span><span class="sxs-lookup"><span data-stu-id="377f1-503">The valueless character, "=", is used for trailing padding.</span></span>  
  
 <span data-ttu-id="377f1-504">`offset`和`length`參數是 32 位元帶正負號的數字。</span><span class="sxs-lookup"><span data-stu-id="377f1-504">The `offset` and `length` parameters are 32-bit signed numbers.</span></span> <span data-ttu-id="377f1-505">`offset`參數以零為起始。</span><span class="sxs-lookup"><span data-stu-id="377f1-505">The `offset` parameter is zero-based.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="377f1-506"><xref:System.Convert.ToBase64String%2A>方法設計來處理單一位元組陣列，其中包含要編碼的所有資料。</span><span class="sxs-lookup"><span data-stu-id="377f1-506">The <xref:System.Convert.ToBase64String%2A> method is designed to process a single byte array that contains all the data to be encoded.</span></span> <span data-ttu-id="377f1-507">若要編碼的資料流的資料，請使用<xref:System.Security.Cryptography.ToBase64Transform?displayProperty=nameWithType>類別。</span><span class="sxs-lookup"><span data-stu-id="377f1-507">To encode data from a stream, use the <xref:System.Security.Cryptography.ToBase64Transform?displayProperty=nameWithType> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="377f1-508">
            <paramref name="inArray" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-508">
              <paramref name="inArray" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="377f1-509">
            <paramref name="offset" /> 或 <paramref name="length" /> 為負。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-509">
              <paramref name="offset" /> or <paramref name="length" /> is negative.</span>
          </span>
          <span data-ttu-id="377f1-510">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-510">-or-</span>
          </span>
          <span data-ttu-id="377f1-511">
            <paramref name="offset" /> 加上 <paramref name="length" /> 大於 <paramref name="inArray" /> 的長度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-511">
              <paramref name="offset" /> plus <paramref name="length" /> is greater than the length of <paramref name="inArray" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Convert.FromBase64String(System.String)" />
        <altmember cref="T:System.Security.Cryptography.ToBase64Transform" />
      </Docs>
    </Member>
    <Member MemberName="ToBase64String">
      <MemberSignature Language="C#" Value="public static string ToBase64String (byte[] inArray, int offset, int length, Base64FormattingOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToBase64String(unsigned int8[] inArray, int32 offset, int32 length, valuetype System.Base64FormattingOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBase64String(System.Byte[],System.Int32,System.Int32,System.Base64FormattingOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBase64String (inArray As Byte(), offset As Integer, length As Integer, options As Base64FormattingOptions) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToBase64String(cli::array &lt;System::Byte&gt; ^ inArray, int offset, int length, Base64FormattingOptions options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inArray" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="options" Type="System.Base64FormattingOptions" />
      </Parameters>
      <Docs>
        <param name="inArray">
          <span data-ttu-id="377f1-512">8 位元不帶正負號的整數的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-512">An array of 8-bit unsigned integers.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="377f1-513">
            <c>inArray</c> 中的位移。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-513">An offset in <c>inArray</c>.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="377f1-514">要轉換的 <c>inArray</c> 元素數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-514">The number of elements of <c>inArray</c> to convert.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="377f1-515">
            <see cref="F:System.Base64FormattingOptions.InsertLineBreaks" /> 以便於每 76 個字元之後插入分行符號，或是 <see cref="F:System.Base64FormattingOptions.None" /> 不插入分行符號。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-515">
              <see cref="F:System.Base64FormattingOptions.InsertLineBreaks" /> to insert a line break every 76 characters, or <see cref="F:System.Base64FormattingOptions.None" /> to not insert line breaks.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-516">將 8 位元不帶正負號的整數陣列子集，轉換為使用 Base-64 位數編碼的相等字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-516">Converts a subset of an array of 8-bit unsigned integers to its equivalent string representation that is encoded with base-64 digits.</span>
          </span>
          <span data-ttu-id="377f1-517">參數會指定可在輸入陣列中當成位移 (Offset) 的子集、輸入陣列中要轉換的項目個數，以及是否要在傳回值中插入分行符號。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-517">Parameters specify the subset as an offset in the input array, the number of elements in the array to convert, and whether to insert line breaks in the return value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-518">
            <paramref name="length" /> 中開始於位置 <paramref name="inArray" /> 之 <paramref name="offset" /> 項目的字串表示 (格式為 Base 64)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-518">The string representation in base 64 of <paramref name="length" /> elements of <paramref name="inArray" />, starting at position <paramref name="offset" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-519">項目`inArray`參數會被視為數字的值，轉換為 base 64 的字串表示。</span><span class="sxs-lookup"><span data-stu-id="377f1-519">The elements of the `inArray` parameter are taken as a numeric value and converted to a string representation in base 64.</span></span>  
  
 <span data-ttu-id="377f1-520">Base 64 數字以遞增順序，從零是否為大寫的字元"A"到"Z"、 小寫字元"a"到"z"、 數字"0"到"9"和符號"+"和"/"。</span><span class="sxs-lookup"><span data-stu-id="377f1-520">The base-64 digits in ascending order from zero are the uppercase characters "A" to "Z", the lowercase characters "a" to "z", the numerals "0" to "9", and the symbols "+" and "/".</span></span> <span data-ttu-id="377f1-521">用處字元"="用於尾端填補。</span><span class="sxs-lookup"><span data-stu-id="377f1-521">The valueless character "=" is used for trailing padding.</span></span>  
  
 <span data-ttu-id="377f1-522">`offset`和`length`參數是 32 位元帶正負號的數字。</span><span class="sxs-lookup"><span data-stu-id="377f1-522">The `offset` and `length` parameters are 32-bit signed numbers.</span></span> <span data-ttu-id="377f1-523">`offset`參數以零為起始。</span><span class="sxs-lookup"><span data-stu-id="377f1-523">The `offset` parameter is zero-based.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="377f1-524"><xref:System.Convert.ToBase64String%2A>方法設計來處理單一位元組陣列，其中包含要編碼的所有資料。</span><span class="sxs-lookup"><span data-stu-id="377f1-524">The <xref:System.Convert.ToBase64String%2A> method is designed to process a single byte array that contains all the data to be encoded.</span></span> <span data-ttu-id="377f1-525">若要編碼的資料流的資料，請使用<xref:System.Security.Cryptography.ToBase64Transform?displayProperty=nameWithType>類別。</span><span class="sxs-lookup"><span data-stu-id="377f1-525">To encode data from a stream, use the <xref:System.Security.Cryptography.ToBase64Transform?displayProperty=nameWithType> class.</span></span>  
  
 <span data-ttu-id="377f1-526">如果`options`參數設定為<xref:System.Base64FormattingOptions.InsertLineBreaks>和轉換的輸出是超過 76 個字元，就會插入分行符號每 76 個字元。</span><span class="sxs-lookup"><span data-stu-id="377f1-526">If the `options` parameter is set to <xref:System.Base64FormattingOptions.InsertLineBreaks> and the output of the conversion is longer than 76 characters, a line break is inserted every 76 characters.</span></span> <span data-ttu-id="377f1-527">分行符號的定義是歸位字元 (U + 000d) 後面接著行換頁字元 (U + 000A)。</span><span class="sxs-lookup"><span data-stu-id="377f1-527">A line break is defined as a carriage return character (U+000D) followed by a line feed character (U+000A).</span></span> <span data-ttu-id="377f1-528">如需詳細資訊，請參閱 RFC 2045，「 多用途網際網路郵件延伸標準 」，網址[ http://www.rfc-editor.org/ ](http://www.rfc-editor.org/)。</span><span class="sxs-lookup"><span data-stu-id="377f1-528">For more information, see RFC 2045, "Multipurpose Internet Mail Extensions", at [http://www.rfc-editor.org/](http://www.rfc-editor.org/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-529">下列範例會示範<xref:System.Convert.ToBase64String%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="377f1-529">The following example demonstrates the <xref:System.Convert.ToBase64String%2A> method.</span></span> <span data-ttu-id="377f1-530">輸入會分成三個位元組 （24 位元） 每個群組。</span><span class="sxs-lookup"><span data-stu-id="377f1-530">The input is divided into groups of three bytes (24 bits) each.</span></span> <span data-ttu-id="377f1-531">因此，每個群組包含四個每個數字，範圍從十進位的 0 到 63 的 6 位元數字。</span><span class="sxs-lookup"><span data-stu-id="377f1-531">Consequently, each group consists of four 6-bit numbers where each number ranges from decimal 0 to 63.</span></span> <span data-ttu-id="377f1-532">在此範例中，有具有一個位元組其餘 85 3 位元組的群組。</span><span class="sxs-lookup"><span data-stu-id="377f1-532">In this example, there are 85 3-byte groups with one byte remaining.</span></span> <span data-ttu-id="377f1-533">第一個群組包含 00，01、 02 產生四個十進位的 0、 0、 4 和 2 相等的 6 位元值的十六進位值。</span><span class="sxs-lookup"><span data-stu-id="377f1-533">The first group consists of the hexadecimal values 00, 01, and 02, which yield four 6-bit values equal to decimal 0, 0, 4, and 2.</span></span> <span data-ttu-id="377f1-534">這些四個值對應至 base 64 數字"A"、"A"、"E"和"C"開頭的輸出。</span><span class="sxs-lookup"><span data-stu-id="377f1-534">Those four values correspond to the base-64 digits "A", "A", "E", and "C" at the beginning of the output.</span></span>  
  
 <span data-ttu-id="377f1-535">整數數字 3 位元組的群組不存在，如果剩餘的位元組會有效地以零填補來形成完整的群組。</span><span class="sxs-lookup"><span data-stu-id="377f1-535">If an integral number of 3-byte groups does not exist, the remaining bytes are effectively padded with zeros to form a complete group.</span></span> <span data-ttu-id="377f1-536">在此範例中，最後一個位元組的值為十六進位 FF。</span><span class="sxs-lookup"><span data-stu-id="377f1-536">In this example, the value of the last byte is hexadecimal FF.</span></span> <span data-ttu-id="377f1-537">前 6 個位元等於十進位 63，對應為 base 64 數字"/"結尾的輸出，而接下來的 2 位元填補零，以產生十進位 48，對應至 base 64 數字，"w"。</span><span class="sxs-lookup"><span data-stu-id="377f1-537">The first 6 bits are equal to decimal 63, which corresponds to the base-64 digit "/" at the end of the output, and the next 2 bits are padded with zeros to yield decimal 48, which corresponds to the base-64 digit, "w".</span></span> <span data-ttu-id="377f1-538">最後兩個的 6 位元值會填補，並對應至用處填補字元，"="。</span><span class="sxs-lookup"><span data-stu-id="377f1-538">The last two 6-bit values are padding and correspond to the valueless padding character, "=".</span></span>  
  
 [!code-cpp[convert.tobase64string#1](~/samples/snippets/cpp/VS_Snippets_CLR/convert.tobase64string/CPP/tb64s.cpp#1)]
 [!code-csharp[convert.tobase64string#1](~/samples/snippets/csharp/VS_Snippets_CLR/convert.tobase64string/CS/tb64s.cs#1)]
 [!code-vb[convert.tobase64string#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/convert.tobase64string/VB/tb64s.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="377f1-539">
            <paramref name="inArray" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-539">
              <paramref name="inArray" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="377f1-540">
            <paramref name="offset" /> 或 <paramref name="length" /> 為負。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-540">
              <paramref name="offset" /> or <paramref name="length" /> is negative.</span>
          </span>
          <span data-ttu-id="377f1-541">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-541">-or-</span>
          </span>
          <span data-ttu-id="377f1-542">
            <paramref name="offset" /> 加上 <paramref name="length" /> 大於 <paramref name="inArray" /> 的長度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-542">
              <paramref name="offset" /> plus <paramref name="length" /> is greater than the length of <paramref name="inArray" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="377f1-543">
            <paramref name="options" /> 不是有效的 <see cref="T:System.Base64FormattingOptions" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-543">
              <paramref name="options" /> is not a valid <see cref="T:System.Base64FormattingOptions" /> value.</span>
          </span>
        </exception>
        <altmember cref="M:System.Convert.FromBase64String(System.String)" />
        <altmember cref="T:System.Security.Cryptography.ToBase64Transform" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToBoolean">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="377f1-544">將指定的值轉換為相等的布林值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-544">Converts a specified value to an equivalent Boolean value.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(bool value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-545">要傳回的布林值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-545">The Boolean value to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-546">傳回指定的布林值 (Boolean)；不會執行實際的轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-546">Returns the specified Boolean value; no actual conversion is performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-547">傳回未變更的 <paramref name="value" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-547">
              <paramref name="value" /> is returned unchanged.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Boolean" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As Byte) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(System::Byte value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-548">要轉換之 8 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-548">The 8-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-549">將指定的 8 位元不帶正負號整數的值，轉換為相等的布林值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-549">Converts the value of the specified 8-bit unsigned integer to an equivalent Boolean value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-550">如果 <paramref name="value" /> 不是零，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-550">
              <see langword="true" /> if <paramref name="value" /> is not zero; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-551">下列範例會將陣列轉換<xref:System.Byte>值<xref:System.Boolean>值。</span><span class="sxs-lookup"><span data-stu-id="377f1-551">The following example converts an array of <xref:System.Byte> values to <xref:System.Boolean> values.</span></span>  
  
 [!code-cpp[System.Convert.ToBoolean#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cpp/toboolean2.cpp#12)]
 [!code-csharp[System.Convert.ToBoolean#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cs/toboolean2.cs#12)]
 [!code-vb[System.Convert.ToBoolean#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToBoolean/vb/toboolean2.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Byte" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(char value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-552">要轉換的 Unicode 字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-552">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-553">呼叫這個方法一律會擲回 <see cref="T:System.InvalidCastException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-553">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-554">不支援這個轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-554">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="377f1-555">沒有傳回值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-555">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="377f1-556">不支援這個轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-556">This conversion is not supported.</span>
          </span>
        </exception>
        <altmember cref="T:System.Char" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(DateTime value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-557">要轉換的日期和時間值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-557">The date and time value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-558">呼叫這個方法一律會擲回 <see cref="T:System.InvalidCastException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-558">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-559">不支援這個轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-559">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="377f1-560">沒有傳回值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-560">No value is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-561">下列範例會示範，嘗試將轉換<xref:System.DateTime>布林類型的值會擲回<xref:System.InvalidCastException>。</span><span class="sxs-lookup"><span data-stu-id="377f1-561">The following example demonstrates that an attempt to convert a <xref:System.DateTime> value to a Boolean type throws <xref:System.InvalidCastException>.</span></span>  
  
 [!code-cpp[System.Convert Snippets#20](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#20)]
 [!code-csharp[System.Convert Snippets#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#20)]
 [!code-vb[System.Convert Snippets#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="377f1-562">不支援這個轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-562">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(System::Decimal value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-563">要轉換的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-563">The number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-564">將指定之十進位數字的值，轉換為相等的布林值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-564">Converts the value of the specified decimal number to an equivalent Boolean value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-565">如果 <paramref name="value" /> 不是零，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-565">
              <see langword="true" /> if <paramref name="value" /> is not zero; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-566">下列範例會將陣列轉換<xref:System.Decimal>值<xref:System.Boolean>值。</span><span class="sxs-lookup"><span data-stu-id="377f1-566">The following example converts an array of <xref:System.Decimal> values to <xref:System.Boolean> values.</span></span>  
  
 [!code-cpp[System.Convert.ToBoolean#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cpp/toboolean2.cpp#2)]
 [!code-csharp[System.Convert.ToBoolean#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cs/toboolean2.cs#2)]
 [!code-vb[System.Convert.ToBoolean#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToBoolean/vb/toboolean2.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Decimal" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As Double) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(double value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-567">要轉換的雙精確度浮點數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-567">The double-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-568">將指定之雙精確度浮點數的值，轉換為相等的布林值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-568">Converts the value of the specified double-precision floating-point number to an equivalent Boolean value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-569">如果 <paramref name="value" /> 不是零，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-569">
              <see langword="true" /> if <paramref name="value" /> is not zero; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-570">下列範例會將布林值，轉換<xref:System.Double>和<xref:System.Double>布林值。</span><span class="sxs-lookup"><span data-stu-id="377f1-570">The following example converts a Boolean to a <xref:System.Double> and a <xref:System.Double> to a Boolean value.</span></span>  
  
 [!code-cpp[System.Convert Snippets#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#1)]
 [!code-csharp[System.Convert Snippets#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#1)]
 [!code-vb[System.Convert Snippets#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Double" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As Short) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(short value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-571">要轉換的 16 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-571">The 16-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-572">將指定的 16 位元帶正負號整數的值，轉換為相等的布林值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-572">Converts the value of the specified 16-bit signed integer to an equivalent Boolean value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-573">如果 <paramref name="value" /> 不是零，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-573">
              <see langword="true" /> if <paramref name="value" /> is not zero; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-574">下列範例會將陣列轉換<xref:System.Int16>值<xref:System.Boolean>值。</span><span class="sxs-lookup"><span data-stu-id="377f1-574">The following example converts an array of <xref:System.Int16> values to <xref:System.Boolean> values.</span></span>  
  
 [!code-cpp[System.Convert.ToBoolean#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cpp/toboolean2.cpp#3)]
 [!code-csharp[System.Convert.ToBoolean#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cs/toboolean2.cs#3)]
 [!code-vb[System.Convert.ToBoolean#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToBoolean/vb/toboolean2.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Int16" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(int value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-575">要轉換的 32 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-575">The 32-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-576">將指定的 32 位元帶正負號整數的值，轉換為相等的布林值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-576">Converts the value of the specified 32-bit signed integer to an equivalent Boolean value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-577">如果 <paramref name="value" /> 不是零，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-577">
              <see langword="true" /> if <paramref name="value" /> is not zero; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-578">下列範例會將陣列轉換<xref:System.Int32>值<xref:System.Boolean>值。</span><span class="sxs-lookup"><span data-stu-id="377f1-578">The following example converts an array of <xref:System.Int32> values to <xref:System.Boolean> values.</span></span>  
  
 [!code-cpp[System.Convert.ToBoolean#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cpp/toboolean2.cpp#4)]
 [!code-csharp[System.Convert.ToBoolean#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cs/toboolean2.cs#4)]
 [!code-vb[System.Convert.ToBoolean#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToBoolean/vb/toboolean2.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Int32" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(long value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-579">要轉換的 64 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-579">The 64-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-580">將指定的 64 位元帶正負號整數的值，轉換為相等的布林值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-580">Converts the value of the specified 64-bit signed integer to an equivalent Boolean value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-581">如果 <paramref name="value" /> 不是零，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-581">
              <see langword="true" /> if <paramref name="value" /> is not zero; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-582">下列範例會將陣列轉換<xref:System.Int64>值<xref:System.Boolean>值。</span><span class="sxs-lookup"><span data-stu-id="377f1-582">The following example converts an array of <xref:System.Int64> values to <xref:System.Boolean> values.</span></span>  
  
 [!code-cpp[System.Convert.ToBoolean#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cpp/toboolean2.cpp#5)]
 [!code-csharp[System.Convert.ToBoolean#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cs/toboolean2.cs#5)]
 [!code-vb[System.Convert.ToBoolean#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToBoolean/vb/toboolean2.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Int64" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-583">實作 <see cref="T:System.IConvertible" /> 介面的物件，或是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-583">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-584">將指定之物件的值轉換為相等的布林值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-584">Converts the value of a specified object to an equivalent Boolean value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-585">
            <see langword="true" /> 或 <see langword="false" />，其會反映為 <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" /> 的基礎類型所叫用之 <paramref name="value" /> 方法所傳回的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-585">
              <see langword="true" /> or <see langword="false" />, which reflects the value returned by invoking the <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" /> method for the underlying type of <paramref name="value" />.</span>
          </span>
          <span data-ttu-id="377f1-586">如果 <paramref name="value" /> 是 <see langword="null" />，則方法會傳回 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-586">If <paramref name="value" /> is <see langword="null" />, the method returns <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-587">下列範例會將轉換的物件值陣列<xref:System.Boolean>值。</span><span class="sxs-lookup"><span data-stu-id="377f1-587">The following example converts an array of object values to <xref:System.Boolean> values.</span></span>  
  
 [!code-cpp[System.Convert.ToBoolean#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cpp/toboolean2.cpp#11)]
 [!code-csharp[System.Convert.ToBoolean#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cs/toboolean2.cs#11)]
 [!code-vb[System.Convert.ToBoolean#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToBoolean/vb/toboolean2.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="377f1-588">
            <paramref name="value" /> 是一個不等於 <see cref="F:System.Boolean.TrueString" /> 或 <see cref="F:System.Boolean.FalseString" /> 的字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-588">
              <paramref name="value" /> is a string that does not equal <see cref="F:System.Boolean.TrueString" /> or <see cref="F:System.Boolean.FalseString" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="377f1-589">
            <paramref name="value" /> 未實作 <see cref="T:System.IConvertible" /> 介面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-589">
              <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
          <span data-ttu-id="377f1-590">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-590">-or-</span>
          </span>
          <span data-ttu-id="377f1-591">不支援將  <paramref name="value" /> 轉換為 <see cref="T:System.Boolean" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-591">The conversion of <paramref name="value" /> to a <see cref="T:System.Boolean" /> is not supported.</span>
          </span>
        </exception>
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As SByte) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(System::SByte value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-592">要轉換的 8 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-592">The 8-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-593">將指定的 8 位元帶正負號整數的值，轉換為相等的布林值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-593">Converts the value of the specified 8-bit signed integer to an equivalent Boolean value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-594">如果 <paramref name="value" /> 不是零，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-594">
              <see langword="true" /> if <paramref name="value" /> is not zero; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-595">下列範例會將陣列轉換<xref:System.SByte>值<xref:System.Boolean>值。</span><span class="sxs-lookup"><span data-stu-id="377f1-595">The following example converts an array of <xref:System.SByte> values to <xref:System.Boolean> values.</span></span>  
  
 [!code-cpp[System.Convert.ToBoolean#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cpp/toboolean2.cpp#6)]
 [!code-csharp[System.Convert.ToBoolean#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cs/toboolean2.cs#6)]
 [!code-vb[System.Convert.ToBoolean#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToBoolean/vb/toboolean2.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.SByte" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As Single) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(float value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-596">要轉換的單精確度浮點數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-596">The single-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-597">將指定之單精確度浮點數的值，轉換為相等的布林值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-597">Converts the value of the specified single-precision floating-point number to an equivalent Boolean value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-598">如果 <paramref name="value" /> 不是零，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-598">
              <see langword="true" /> if <paramref name="value" /> is not zero; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-599">下列範例會將陣列轉換<xref:System.Single>值<xref:System.Boolean>值。</span><span class="sxs-lookup"><span data-stu-id="377f1-599">The following example converts an array of <xref:System.Single> values to <xref:System.Boolean> values.</span></span>  
  
 [!code-cpp[System.Convert.ToBoolean#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cpp/toboolean2.cpp#7)]
 [!code-csharp[System.Convert.ToBoolean#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cs/toboolean2.cs#7)]
 [!code-vb[System.Convert.ToBoolean#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToBoolean/vb/toboolean2.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Single" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-600">字串，包含 <see cref="F:System.Boolean.TrueString" /> 或 <see cref="F:System.Boolean.FalseString" /> 的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-600">A string that contains the value of either <see cref="F:System.Boolean.TrueString" /> or <see cref="F:System.Boolean.FalseString" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-601">將指定之邏輯值的字串表示，轉換為相等的布林值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-601">Converts the specified string representation of a logical value to its Boolean equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-602">當 <see langword="true" /> 等於 <paramref name="value" /> 時為 <see cref="F:System.Boolean.TrueString" />，否則，當 <see langword="false" /> 等於 <paramref name="value" /> 或 <see cref="F:System.Boolean.FalseString" /> 時，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-602">
              <see langword="true" /> if <paramref name="value" /> equals <see cref="F:System.Boolean.TrueString" />, or <see langword="false" /> if <paramref name="value" /> equals <see cref="F:System.Boolean.FalseString" /> or <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-603">成功轉換發生時，`value`參數必須等於  <xref:System.Boolean.TrueString?displayProperty=nameWithType>，其值為常數`True`， <xref:System.Boolean.FalseString?displayProperty=nameWithType>，常數，其值是`False`，或必須是`null`。</span><span class="sxs-lookup"><span data-stu-id="377f1-603">For a successful conversion to occur, the `value` parameter must equal either <xref:System.Boolean.TrueString?displayProperty=nameWithType>, a constant whose value is `True`, <xref:System.Boolean.FalseString?displayProperty=nameWithType>, a constant whose value is `False`, or it must be `null`.</span></span> <span data-ttu-id="377f1-604">在比較`value`與<xref:System.Boolean.TrueString?displayProperty=nameWithType>和<xref:System.Boolean.FalseString?displayProperty=nameWithType>，這個方法會忽略大小寫也為開頭和尾端空白字元。</span><span class="sxs-lookup"><span data-stu-id="377f1-604">In comparing `value` with <xref:System.Boolean.TrueString?displayProperty=nameWithType> and <xref:System.Boolean.FalseString?displayProperty=nameWithType>, the method ignores case as well as leading and trailing white space.</span></span>  
  
 <span data-ttu-id="377f1-605">如果您不想處理的例外狀況，如果轉換失敗，您可以呼叫<xref:System.Boolean.TryParse%2A?displayProperty=nameWithType>方法改為。</span><span class="sxs-lookup"><span data-stu-id="377f1-605">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Boolean.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="377f1-606">它會傳回<xref:System.Boolean>值，指出轉換成功或失敗。</span><span class="sxs-lookup"><span data-stu-id="377f1-606">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-607">下列範例會使用<xref:System.Convert.ToBoolean%28System.String%29?displayProperty=nameWithType>方法，將各種字串轉換成布林值。</span><span class="sxs-lookup"><span data-stu-id="377f1-607">The following example uses the <xref:System.Convert.ToBoolean%28System.String%29?displayProperty=nameWithType> method to convert various strings to Boolean values.</span></span>  
  
 [!code-cpp[System.Convert.ToBoolean#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cpp/toboolean1.cpp#1)]
 [!code-csharp[System.Convert.ToBoolean#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cs/ToBoolean1.cs#1)]
 [!code-vb[System.Convert.ToBoolean#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToBoolean/vb/ToBoolean1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="377f1-608">
            <paramref name="value" /> 不等於 <see cref="F:System.Boolean.TrueString" /> 或 <see cref="F:System.Boolean.FalseString" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-608">
              <paramref name="value" /> is not equal to <see cref="F:System.Boolean.TrueString" /> or <see cref="F:System.Boolean.FalseString" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As UShort) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(System::UInt16 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-609">要轉換之 16 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-609">The 16-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-610">將指定的 16 位元不帶正負號整數的值，轉換為相等的布林值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-610">Converts the value of the specified 16-bit unsigned integer to an equivalent Boolean value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-611">如果 <paramref name="value" /> 不是零，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-611">
              <see langword="true" /> if <paramref name="value" /> is not zero; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-612">下列範例會將陣列轉換<xref:System.UInt16>值<xref:System.Boolean>值。</span><span class="sxs-lookup"><span data-stu-id="377f1-612">The following example converts an array of <xref:System.UInt16> values to <xref:System.Boolean> values.</span></span>  
  
 [!code-cpp[System.Convert.ToBoolean#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cpp/toboolean2.cpp#8)]
 [!code-csharp[System.Convert.ToBoolean#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cs/toboolean2.cs#8)]
 [!code-vb[System.Convert.ToBoolean#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToBoolean/vb/toboolean2.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.UInt16" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As UInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(System::UInt32 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-613">要轉換之 32 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-613">The 32-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-614">將指定的 32 位元不帶正負號整數的值，轉換為相等的布林值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-614">Converts the value of the specified 32-bit unsigned integer to an equivalent Boolean value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-615">如果 <paramref name="value" /> 不是零，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-615">
              <see langword="true" /> if <paramref name="value" /> is not zero; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-616">下列範例會將陣列轉換<xref:System.Int32>值<xref:System.Boolean>值。</span><span class="sxs-lookup"><span data-stu-id="377f1-616">The following example converts an array of <xref:System.Int32> values to <xref:System.Boolean> values.</span></span>  
  
 [!code-cpp[System.Convert.ToBoolean#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cpp/toboolean2.cpp#9)]
 [!code-csharp[System.Convert.ToBoolean#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cs/toboolean2.cs#9)]
 [!code-vb[System.Convert.ToBoolean#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToBoolean/vb/toboolean2.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.UInt32" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(System::UInt64 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-617">要轉換之 64 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-617">The 64-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-618">將指定的 64 位元不帶正負號整數的值，轉換為相等的布林值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-618">Converts the value of the specified 64-bit unsigned integer to an equivalent Boolean value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-619">如果 <paramref name="value" /> 不是零，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-619">
              <see langword="true" /> if <paramref name="value" /> is not zero; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-620">下列範例會將陣列轉換<xref:System.UInt64>值<xref:System.Boolean>值。</span><span class="sxs-lookup"><span data-stu-id="377f1-620">The following example converts an array of <xref:System.UInt64> values to <xref:System.Boolean> values.</span></span>  
  
 [!code-cpp[System.Convert.ToBoolean#10](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cpp/toboolean2.cpp#10)]
 [!code-csharp[System.Convert.ToBoolean#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cs/toboolean2.cs#10)]
 [!code-vb[System.Convert.ToBoolean#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToBoolean/vb/toboolean2.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.UInt64" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (object value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(object value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As Object, provider As IFormatProvider) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(System::Object ^ value, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-621">實作 <see cref="T:System.IConvertible" /> 介面的物件，或是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-621">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="377f1-622">物件，提供特定文化特性格式資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-622">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-623">使用指定之特定文化特性格式資訊，將指定之物件的值轉換為相等的布林值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-623">Converts the value of the specified object to an equivalent Boolean value, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-624">
            <see langword="true" /> 或 <see langword="false" />，其會反映為 <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" /> 的基礎類型所叫用之 <paramref name="value" /> 方法所傳回的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-624">
              <see langword="true" /> or <see langword="false" />, which reflects the value returned by invoking the <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" /> method for the underlying type of <paramref name="value" />.</span>
          </span>
          <span data-ttu-id="377f1-625">如果 <paramref name="value" /> 是 <see langword="null" />，則方法會傳回 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-625">If <paramref name="value" /> is <see langword="null" />, the method returns <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-626">`provider` 可讓使用者指定的內容的相關特定文化特性的轉換資訊`value`。</span><span class="sxs-lookup"><span data-stu-id="377f1-626">`provider` enables the user to specify culture-specific conversion information about the contents of `value`.</span></span> <span data-ttu-id="377f1-627">基底類型忽略`provider`參數; 不過，此參數可能會使用`value`是使用者定義型別可實作<xref:System.IConvertible>介面。</span><span class="sxs-lookup"><span data-stu-id="377f1-627">The base types ignore the `provider` parameter; however, the parameter may be used if `value` is a user-defined type that implements the <xref:System.IConvertible> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-628">下列範例會定義一個類別，實作<xref:System.IConvertible>和類別可實作<xref:System.IFormatProvider>。</span><span class="sxs-lookup"><span data-stu-id="377f1-628">The following example defines a class that implements <xref:System.IConvertible> and a class that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="377f1-629">實作類別的物件<xref:System.IConvertible>保存陣列<xref:System.Double>值。</span><span class="sxs-lookup"><span data-stu-id="377f1-629">Objects of the class that implements <xref:System.IConvertible> hold an array of <xref:System.Double> values.</span></span> <span data-ttu-id="377f1-630">每個類別的物件傳遞至<xref:System.Convert.ToBoolean%28System.Object%2CSystem.IFormatProvider%29>方法。</span><span class="sxs-lookup"><span data-stu-id="377f1-630">An object of each class is passed to the <xref:System.Convert.ToBoolean%28System.Object%2CSystem.IFormatProvider%29> method.</span></span> <span data-ttu-id="377f1-631">這個方法會傳回`true`如果非捨棄陣列任何的值非零。</span><span class="sxs-lookup"><span data-stu-id="377f1-631">This method returns `true` if any of the non-discarded array values are non-zero.</span></span> <span data-ttu-id="377f1-632"><xref:System.IFormatProvider>物件可以決定如何將項目會捨棄這項計算。</span><span class="sxs-lookup"><span data-stu-id="377f1-632">The <xref:System.IFormatProvider> object determines how elements are discarded for this calculation.</span></span>  
  
 [!code-cpp[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/CPP/objectifp.cpp#1)]
 [!code-csharp[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/CS/objectifp.cs#1)]
 [!code-vb[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/VB/objectifp.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="377f1-633">
            <paramref name="value" /> 是一個不等於 <see cref="F:System.Boolean.TrueString" /> 或 <see cref="F:System.Boolean.FalseString" /> 的字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-633">
              <paramref name="value" /> is a string that does not equal <see cref="F:System.Boolean.TrueString" /> or <see cref="F:System.Boolean.FalseString" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="377f1-634">
            <paramref name="value" /> 未實作 <see cref="T:System.IConvertible" /> 介面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-634">
              <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
          <span data-ttu-id="377f1-635">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-635">-or-</span>
          </span>
          <span data-ttu-id="377f1-636">不支援將  <paramref name="value" /> 轉換為 <see cref="T:System.Boolean" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-636">The conversion of <paramref name="value" /> to a <see cref="T:System.Boolean" /> is not supported.</span>
          </span>
        </exception>
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As String, provider As IFormatProvider) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-637">字串，包含 <see cref="F:System.Boolean.TrueString" /> 或 <see cref="F:System.Boolean.FalseString" /> 的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-637">A string that contains the value of either <see cref="F:System.Boolean.TrueString" /> or <see cref="F:System.Boolean.FalseString" />.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="377f1-638">物件，提供特定文化特性格式資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-638">An object that supplies culture-specific formatting information.</span>
          </span>
          <span data-ttu-id="377f1-639">這個參數已忽略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-639">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-640">使用指定之特定文化特性格式資訊，將指定之邏輯值的字串表示轉換為相等的布林值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-640">Converts the specified string representation of a logical value to its Boolean equivalent, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-641">當 <see langword="true" /> 等於 <paramref name="value" /> 時為 <see cref="F:System.Boolean.TrueString" />，否則，當 <see langword="false" /> 等於 <paramref name="value" /> 或 <see cref="F:System.Boolean.FalseString" /> 時，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-641">
              <see langword="true" /> if <paramref name="value" /> equals <see cref="F:System.Boolean.TrueString" />, or <see langword="false" /> if <paramref name="value" /> equals <see cref="F:System.Boolean.FalseString" /> or <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-642">如果您不想處理的例外狀況，如果轉換失敗，您可以呼叫<xref:System.Boolean.TryParse%2A?displayProperty=nameWithType>方法改為。</span><span class="sxs-lookup"><span data-stu-id="377f1-642">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Boolean.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="377f1-643">它會傳回<xref:System.Boolean>值，指出轉換成功或失敗。</span><span class="sxs-lookup"><span data-stu-id="377f1-643">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="377f1-644">
            <paramref name="value" /> 不等於 <see cref="F:System.Boolean.TrueString" /> 或 <see cref="F:System.Boolean.FalseString" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-644">
              <paramref name="value" /> is not equal to <see cref="F:System.Boolean.TrueString" /> or <see cref="F:System.Boolean.FalseString" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToByte">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="377f1-645">將指定的值轉換為 8 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-645">Converts a specified value to an 8-bit unsigned integer.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As Boolean) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(bool value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-646">要轉換的布林值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-646">The Boolean value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-647">將指定的布林值轉換為相等的 8 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-647">Converts the specified Boolean value to the equivalent 8-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-648">如果 <paramref name="value" /> 為 <see langword="true" />，則為數字 1，否則為 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-648">The number 1 if <paramref name="value" /> is <see langword="true" />; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-649">下列範例說明的轉換<xref:System.Boolean>至<xref:System.Byte>值。</span><span class="sxs-lookup"><span data-stu-id="377f1-649">The following example illustrates the conversion of <xref:System.Boolean> to <xref:System.Byte> values.</span></span>  
  
 [!code-cpp[System.Convert.ToByte#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.convert.tobyte/cpp/tobyte1.cpp#1)]
 [!code-csharp[System.Convert.ToByte#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tobyte/cs/tobyte1.cs#1)]
 [!code-vb[System.Convert.ToByte#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tobyte/vb/tobyte1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As Byte) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(System::Byte value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-650">要傳回之 8 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-650">The 8-bit unsigned integer to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-651">傳回指定的 8 位元不帶正負號整數；不會執行實際的轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-651">Returns the specified 8-bit unsigned integer; no actual conversion is performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-652">傳回未變更的 <paramref name="value" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-652">
              <paramref name="value" /> is returned unchanged.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As Char) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(char value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-653">要轉換的 Unicode 字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-653">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-654">將指定的 Unicode 字元值轉換為相等的 8 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-654">Converts the value of the specified Unicode character to the equivalent 8-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-655">等於 <paramref name="value" /> 的 8 位元不帶正負號整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-655">An 8-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-656">這個方法會傳回不帶正負號的位元組值，表示的數字的代碼<xref:System.Char>物件傳遞給它。</span><span class="sxs-lookup"><span data-stu-id="377f1-656">This method returns an unsigned byte value that represents the numeric code of the <xref:System.Char> object passed to it.</span></span> <span data-ttu-id="377f1-657">在.NET Framework 中，<xref:System.Char>物件是 16 位元值。</span><span class="sxs-lookup"><span data-stu-id="377f1-657">In the .NET Framework, a <xref:System.Char> object is a 16-bit value.</span></span> <span data-ttu-id="377f1-658">這表示，該方法是適用於字元的 ascii 或 Unicode C0 控制項和基本拉丁文，和 C1 控制項以及拉丁文 1 補充資訊的範圍，從 U + 0000 到 U + 00FF 中傳回的字元數字的代碼。</span><span class="sxs-lookup"><span data-stu-id="377f1-658">This means that the method is suitable for returning the numeric codes of characters in the ASCII character range or in the Unicode C0 Controls and Basic Latin, and C1 Controls and Latin-1 Supplement ranges, from U+0000 to U+00FF.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-659">下列範例會將陣列轉換<xref:System.Char>值<xref:System.Byte>值。</span><span class="sxs-lookup"><span data-stu-id="377f1-659">The following example converts an array of <xref:System.Char> values to <xref:System.Byte> values.</span></span>  
  
 [!code-csharp[System.Convert.ToByte#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tobyte/cs/tobyte1.cs#2)]
 [!code-vb[System.Convert.ToByte#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tobyte/vb/tobyte1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-660">
            <paramref name="value" /> 代表一個大於 <see cref="F:System.Byte.MaxValue" /> 的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-660">
              <paramref name="value" /> represents a number that is greater than <see cref="F:System.Byte.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As DateTime) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(DateTime value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-661">要轉換的日期和時間值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-661">The date and time value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-662">呼叫這個方法一律會擲回 <see cref="T:System.InvalidCastException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-662">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-663">不支援這個轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-663">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="377f1-664">沒有傳回值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-664">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="377f1-665">不支援這個轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-665">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As Decimal) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(System::Decimal value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-666">要轉換的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-666">The number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-667">將指定之十進位數字的值，轉換為相等的 8 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-667">Converts the value of the specified decimal number to an equivalent 8-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-668">
            <paramref name="value" />，捨入至最接近的 8 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-668">
              <paramref name="value" />, rounded to the nearest 8-bit unsigned integer.</span>
          </span>
          <span data-ttu-id="377f1-669">如果 <paramref name="value" /> 介於兩個整數正中間時，則傳回偶數；也就是 4.5 會轉換為 4，5.5 會轉換為 6。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-669">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-670">下列範例會將轉換<xref:System.Byte>值設定為<xref:System.Decimal>和<xref:System.Decimal>值設定為<xref:System.Byte>。</span><span class="sxs-lookup"><span data-stu-id="377f1-670">The following example converts a <xref:System.Byte> value to a <xref:System.Decimal> and a <xref:System.Decimal> value to a <xref:System.Byte>.</span></span>  
  
 [!code-cpp[System.Convert Snippets#18](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#18)]
 [!code-csharp[System.Convert Snippets#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#18)]
 [!code-vb[System.Convert Snippets#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-671">
            <paramref name="value" /> 大於 <see cref="F:System.Byte.MaxValue" /> 或小於 <see cref="F:System.Byte.MinValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-671">
              <paramref name="value" /> is greater than <see cref="F:System.Byte.MaxValue" /> or less than <see cref="F:System.Byte.MinValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As Double) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(double value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-672">要轉換的雙精確度浮點數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-672">The double-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-673">將指定之雙精確度浮點數的值，轉換為相等的 8 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-673">Converts the value of the specified double-precision floating-point number to an equivalent 8-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-674">
            <paramref name="value" />，捨入至最接近的 8 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-674">
              <paramref name="value" />, rounded to the nearest 8-bit unsigned integer.</span>
          </span>
          <span data-ttu-id="377f1-675">如果 <paramref name="value" /> 介於兩個整數正中間時，則傳回偶數；也就是 4.5 會轉換為 4，5.5 會轉換為 6。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-675">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-676">下列範例會將轉換<xref:System.Byte>值設定為<xref:System.Double>和<xref:System.Double>值設定為<xref:System.Byte>。</span><span class="sxs-lookup"><span data-stu-id="377f1-676">The following example converts a <xref:System.Byte> value to a <xref:System.Double> and a <xref:System.Double> value to a <xref:System.Byte>.</span></span>  
  
 [!code-cpp[System.Convert Snippets#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#2)]
 [!code-csharp[System.Convert Snippets#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#2)]
 [!code-vb[System.Convert Snippets#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-677">
            <paramref name="value" /> 大於 <see cref="F:System.Byte.MaxValue" /> 或小於 <see cref="F:System.Byte.MinValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-677">
              <paramref name="value" /> is greater than <see cref="F:System.Byte.MaxValue" /> or less than <see cref="F:System.Byte.MinValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As Short) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(short value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-678">要轉換的 16 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-678">The 16-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-679">將指定的 16 位元帶正負號的整數值轉換為相等的 8 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-679">Converts the value of the specified 16-bit signed integer to an equivalent 8-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-680">等於 <paramref name="value" /> 的 8 位元不帶正負號整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-680">An 8-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-681">下列範例會將陣列轉換<xref:System.Int16>值<xref:System.Byte>值。</span><span class="sxs-lookup"><span data-stu-id="377f1-681">The following example converts an array of <xref:System.Int16> values to <xref:System.Byte> values.</span></span>  
  
 [!code-csharp[System.Convert.ToByte#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tobyte/cs/tobyte1.cs#3)]
 [!code-vb[System.Convert.ToByte#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tobyte/vb/tobyte1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-682">
            <paramref name="value" /> 小於 <see cref="F:System.Byte.MinValue" /> 或大於 <see cref="F:System.Byte.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-682">
              <paramref name="value" /> is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As Integer) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(int value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-683">要轉換的 32 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-683">The 32-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-684">將指定的 32 位元帶正負號的整數值轉換為相等的 8 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-684">Converts the value of the specified 32-bit signed integer to an equivalent 8-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-685">等於 <paramref name="value" /> 的 8 位元不帶正負號整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-685">An 8-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-686">下列範例會將陣列轉換<xref:System.Int32>值<xref:System.Byte>值。</span><span class="sxs-lookup"><span data-stu-id="377f1-686">The following example converts an array of <xref:System.Int32> values to <xref:System.Byte> values.</span></span>  
  
 [!code-csharp[System.Convert.ToByte#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tobyte/cs/tobyte1.cs#4)]
 [!code-vb[System.Convert.ToByte#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tobyte/vb/tobyte1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-687">
            <paramref name="value" /> 小於 <see cref="F:System.Byte.MinValue" /> 或大於 <see cref="F:System.Byte.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-687">
              <paramref name="value" /> is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As Long) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(long value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-688">要轉換的 64 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-688">The 64-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-689">將指定的 64 位元帶正負號的整數值轉換為相等的 8 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-689">Converts the value of the specified 64-bit signed integer to an equivalent 8-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-690">等於 <paramref name="value" /> 的 8 位元不帶正負號整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-690">An 8-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-691">下列範例會將陣列轉換<xref:System.Int64>值<xref:System.Byte>值。</span><span class="sxs-lookup"><span data-stu-id="377f1-691">The following example converts an array of <xref:System.Int64> values to <xref:System.Byte> values.</span></span>  
  
 [!code-csharp[System.Convert.ToByte#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tobyte/cs/tobyte1.cs#5)]
 [!code-vb[System.Convert.ToByte#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tobyte/vb/tobyte1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-692">
            <paramref name="value" /> 小於 <see cref="F:System.Byte.MinValue" /> 或大於 <see cref="F:System.Byte.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-692">
              <paramref name="value" /> is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As Object) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-693">實作 <see cref="T:System.IConvertible" /> 介面的物件，或是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-693">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-694">將指定之物件的值轉換為 8 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-694">Converts the value of the specified object to an 8-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-695">8 位元不帶正負號的整數，等於 <paramref name="value" />；而若 <paramref name="value" /> 為 <see langword="null" />，則為零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-695">An 8-bit unsigned integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-696">如果`value`不`null`，這個方法會包裝呼叫<xref:System.IConvertible.ToByte%2A?displayProperty=nameWithType>的基礎類型的實作`value`。</span><span class="sxs-lookup"><span data-stu-id="377f1-696">If `value` is not `null`, this method wraps a call to the <xref:System.IConvertible.ToByte%2A?displayProperty=nameWithType> implementation of the underlying type of `value`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-697">下列範例會使用<xref:System.Convert.ToByte%28System.Object%29>方法，將轉換的物件陣列<xref:System.Byte>值。</span><span class="sxs-lookup"><span data-stu-id="377f1-697">The following example uses the <xref:System.Convert.ToByte%28System.Object%29> method to convert an array of objects to <xref:System.Byte> values.</span></span>  
  
 [!code-csharp[System.Convert.ToByte#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tobyte/cs/tobyte1.cs#6)]
 [!code-vb[System.Convert.ToByte#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tobyte/vb/tobyte1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="377f1-698">
            <paramref name="value" /> 不是使用 <see cref="T:System.Byte" /> 值的屬性格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-698">
              <paramref name="value" /> is not in the property format for a <see cref="T:System.Byte" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="377f1-699">
            <paramref name="value" /> 沒有實作 <see cref="T:System.IConvertible" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-699">
              <paramref name="value" /> does not implement <see cref="T:System.IConvertible" />.</span>
          </span>
          <span data-ttu-id="377f1-700">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-700">-or-</span>
          </span>
          <span data-ttu-id="377f1-701">不支援從 <paramref name="value" /> 轉換為 <see cref="T:System.Byte" /> 型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-701">Conversion from <paramref name="value" /> to the <see cref="T:System.Byte" /> type is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-702">
            <paramref name="value" /> 代表小於 <see cref="F:System.Byte.MinValue" /> 或大於 <see cref="F:System.Byte.MaxValue" /> 的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-702">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As SByte) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(System::SByte value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-703">要轉換的 8 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-703">The 8-bit signed integer to be converted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-704">將指定的 8 位元帶正負號的整數值轉換為相等的 8 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-704">Converts the value of the specified 8-bit signed integer to an equivalent 8-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-705">等於 <paramref name="value" /> 的 8 位元不帶正負號整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-705">An 8-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-706">下列範例會將陣列轉換<xref:System.SByte>值<xref:System.Byte>值。</span><span class="sxs-lookup"><span data-stu-id="377f1-706">The following example converts an array of <xref:System.SByte> values to <xref:System.Byte> values.</span></span>  
  
 [!code-csharp[System.Convert.ToByte#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tobyte/cs/tobyte1.cs#7)]
 [!code-vb[System.Convert.ToByte#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tobyte/vb/tobyte1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-707">
            <paramref name="value" /> 小於 <see cref="F:System.Byte.MinValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-707">
              <paramref name="value" /> is less than <see cref="F:System.Byte.MinValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As Single) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(float value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-708">單精確度浮點數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-708">A single-precision floating-point number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-709">將指定之單精確度浮點數的值，轉換為相等的 8 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-709">Converts the value of the specified single-precision floating-point number to an equivalent 8-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-710">
            <paramref name="value" />，捨入至最接近的 8 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-710">
              <paramref name="value" />, rounded to the nearest 8-bit unsigned integer.</span>
          </span>
          <span data-ttu-id="377f1-711">如果 <paramref name="value" /> 介於兩個整數正中間時，則傳回偶數；也就是 4.5 會轉換為 4，5.5 會轉換為 6。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-711">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-712">下列範例會將轉換<xref:System.Single>值設定為<xref:System.Byte>。</span><span class="sxs-lookup"><span data-stu-id="377f1-712">The following example converts a <xref:System.Single> value to a <xref:System.Byte>.</span></span>  
  
 [!code-cpp[System.Convert Snippets#19](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#19)]
 [!code-csharp[System.Convert Snippets#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#19)]
 [!code-vb[System.Convert Snippets#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-713">
            <paramref name="value" /> 大於 <see cref="F:System.Byte.MaxValue" /> 或小於 <see cref="F:System.Byte.MinValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-713">
              <paramref name="value" /> is greater than <see cref="F:System.Byte.MaxValue" /> or less than <see cref="F:System.Byte.MinValue" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As String) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-714">字串，包含要轉換的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-714">A string that contains the number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-715">將指定之數字的字串表示，轉換為相等的 8 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-715">Converts the specified string representation of a number to an equivalent 8-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-716">8 位元不帶正負號的整數，等於 <paramref name="value" />；而若 <paramref name="value" /> 為 <see langword="null" />，則為零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-716">An 8-bit unsigned integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-717">使用<xref:System.Convert.ToByte%28System.String%29>方法相當於傳遞`value`至<xref:System.Byte.Parse%28System.String%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="377f1-717">Using the <xref:System.Convert.ToByte%28System.String%29> method is equivalent to passing `value` to the <xref:System.Byte.Parse%28System.String%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="377f1-718">`value` 是使用目前執行緒文化特性的格式化慣例來解譯。</span><span class="sxs-lookup"><span data-stu-id="377f1-718">`value` is interpreted by using the formatting conventions of the current thread culture.</span></span>  
  
 <span data-ttu-id="377f1-719">如果您不想處理的例外狀況，如果轉換失敗，您可以呼叫<xref:System.Byte.TryParse%2A?displayProperty=nameWithType>方法改為。</span><span class="sxs-lookup"><span data-stu-id="377f1-719">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Byte.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="377f1-720">它會傳回<xref:System.Boolean>值，指出轉換成功或失敗。</span><span class="sxs-lookup"><span data-stu-id="377f1-720">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-721">下列範例定義的字串陣列，並嘗試將每個將字串轉換為<xref:System.Byte>。</span><span class="sxs-lookup"><span data-stu-id="377f1-721">The following example defines a string array and attempts to convert each string to a <xref:System.Byte>.</span></span>  <span data-ttu-id="377f1-722">請注意，當`null`字串剖析為零，<xref:System.String.Empty?displayProperty=nameWithType>會擲回<xref:System.FormatException>。</span><span class="sxs-lookup"><span data-stu-id="377f1-722">Note that while a `null` string parses to zero, <xref:System.String.Empty?displayProperty=nameWithType> throws a <xref:System.FormatException>.</span></span> <span data-ttu-id="377f1-723">也請注意，雖然開頭和尾端空白剖析成功，格式化符號，例如貨幣符號群組分隔符號或小數分隔符號，則否。</span><span class="sxs-lookup"><span data-stu-id="377f1-723">Also note that while leading and trailing spaces parse successfully, formatting symbols, such as currency symbols, group separators, or decimal separators, do not.</span></span>  
  
 [!code-csharp[System.Convert.ToByte#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tobyte/cs/ToByte5.cs#15)]
 [!code-vb[System.Convert.ToByte#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tobyte/vb/tobyte5.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="377f1-724">
            <paramref name="value" /> 不是由選擇性正負號之後跟隨一連串數字 (0 到 9) 所組成。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-724">
              <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-725">
            <paramref name="value" /> 代表小於 <see cref="F:System.Byte.MinValue" /> 或大於 <see cref="F:System.Byte.MaxValue" /> 的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-725">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Byte.Parse(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As UShort) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(System::UInt16 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-726">要轉換之 16 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-726">The 16-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-727">將指定的 16 位元不帶正負號整數的值，轉換為相等的 8 位元不帶正負號整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-727">Converts the value of the specified 16-bit unsigned integer to an equivalent 8-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-728">等於 <paramref name="value" /> 的 8 位元不帶正負號整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-728">An 8-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-729">下列範例將以不帶正負號的 16 位元整數的陣列，轉換<xref:System.Byte>值。</span><span class="sxs-lookup"><span data-stu-id="377f1-729">The following example converts an array of unsigned 16-bit integers to <xref:System.Byte> values.</span></span>  
  
 [!code-csharp[System.Convert.ToByte#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tobyte/cs/tobyte1.cs#8)]
 [!code-vb[System.Convert.ToByte#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tobyte/vb/tobyte1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-730">
            <paramref name="value" /> 大於 <see cref="F:System.Byte.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-730">
              <paramref name="value" /> is greater than <see cref="F:System.Byte.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As UInteger) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(System::UInt32 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-731">要轉換之 32 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-731">The 32-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-732">將指定的 32 位元不帶正負號整數的值，轉換為相等的 8 位元不帶正負號整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-732">Converts the value of the specified 32-bit unsigned integer to an equivalent 8-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-733">等於 <paramref name="value" /> 的 8 位元不帶正負號整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-733">An 8-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-734">下列範例會將轉換至不帶正負號整數的陣列<xref:System.Byte>值。</span><span class="sxs-lookup"><span data-stu-id="377f1-734">The following example converts an array of unsigned integers to <xref:System.Byte> values.</span></span>  
  
 [!code-csharp[System.Convert.ToByte#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tobyte/cs/tobyte1.cs#9)]
 [!code-vb[System.Convert.ToByte#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tobyte/vb/tobyte1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-735">
            <paramref name="value" /> 大於 <see cref="F:System.Byte.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-735">
              <paramref name="value" /> is greater than <see cref="F:System.Byte.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As ULong) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(System::UInt64 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-736">要轉換之 64 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-736">The 64-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-737">將指定的 64 位元不帶正負號整數的值，轉換為相等的 8 位元不帶正負號整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-737">Converts the value of the specified 64-bit unsigned integer to an equivalent 8-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-738">等於 <paramref name="value" /> 的 8 位元不帶正負號整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-738">An 8-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-739">下列範例會將轉換至不帶正負號長整數的陣列<xref:System.Byte>值。</span><span class="sxs-lookup"><span data-stu-id="377f1-739">The following example converts an array of unsigned long integers to <xref:System.Byte> values.</span></span>  
  
 [!code-csharp[System.Convert.ToByte#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tobyte/cs/tobyte1.cs#10)]
 [!code-vb[System.Convert.ToByte#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tobyte/vb/tobyte1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-740">
            <paramref name="value" /> 大於 <see cref="F:System.Byte.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-740">
              <paramref name="value" /> is greater than <see cref="F:System.Byte.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (object value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(object value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As Object, provider As IFormatProvider) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(System::Object ^ value, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-741">實作 <see cref="T:System.IConvertible" /> 介面的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-741">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="377f1-742">物件，提供特定文化特性格式資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-742">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-743">使用指定之特定文化特性格式資訊，將指定之物件的值轉換為 8 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-743">Converts the value of the specified object to an 8-bit unsigned integer, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-744">8 位元不帶正負號的整數，等於 <paramref name="value" />；而若 <paramref name="value" /> 為 <see langword="null" />，則為零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-744">An 8-bit unsigned integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-745">`provider` 可讓使用者指定的內容的相關特定文化特性的轉換資訊`value`。</span><span class="sxs-lookup"><span data-stu-id="377f1-745">`provider` enables the user to specify culture-specific conversion information about the contents of `value`.</span></span> <span data-ttu-id="377f1-746">基底類型忽略`provider`; 不過，如果，可能會使用參數`value`是使用者定義型別可實作<xref:System.IConvertible>介面。</span><span class="sxs-lookup"><span data-stu-id="377f1-746">The base types ignore `provider`; however, the parameter may be used if `value` is a user-defined type that implements the <xref:System.IConvertible> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-747">下列範例定義一個實作 `ByteString` 介面的 <xref:System.IConvertible> 類別。</span><span class="sxs-lookup"><span data-stu-id="377f1-747">The following example defines a `ByteString` class that implements the <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="377f1-748">類別會儲存符號欄位，以及一個位元組值的字串表示，使其能夠表示這兩個位元組帶正負號和不帶正負號的位元組值。</span><span class="sxs-lookup"><span data-stu-id="377f1-748">The class stores the string representation of a byte value along with a sign field, so that it is able to represent both signed and unsigned byte values.</span></span>  
  
 [!code-csharp[System.Convert.ToByte#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tobyte/cs/tobyte3.cs#12)]
 [!code-vb[System.Convert.ToByte#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tobyte/vb/tobyte3.vb#12)]  
  
 <span data-ttu-id="377f1-749">下列範例將數個會具現化`ByteString`物件並呼叫<xref:System.Convert.ToByte%28System.Object%2CSystem.IFormatProvider%29>將它們轉換成位元組值的方法。</span><span class="sxs-lookup"><span data-stu-id="377f1-749">The following example instantiates several `ByteString` objects and calls the <xref:System.Convert.ToByte%28System.Object%2CSystem.IFormatProvider%29> method to convert them to byte values.</span></span> <span data-ttu-id="377f1-750">它說明了<xref:System.Convert.ToByte%28System.Object%2CSystem.IFormatProvider%29>方法會包裝呼叫<xref:System.IConvertible.ToByte%2A?displayProperty=nameWithType>要轉換之物件的方法。</span><span class="sxs-lookup"><span data-stu-id="377f1-750">It illustrates that the <xref:System.Convert.ToByte%28System.Object%2CSystem.IFormatProvider%29> method wraps a call to the <xref:System.IConvertible.ToByte%2A?displayProperty=nameWithType> method of the object to be converted.</span></span>  
  
 [!code-csharp[System.Convert.ToByte#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tobyte/cs/tobyte3.cs#13)]
 [!code-vb[System.Convert.ToByte#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tobyte/vb/tobyte3.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="377f1-751">
            <paramref name="value" /> 不是使用 <see cref="T:System.Byte" /> 值的屬性格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-751">
              <paramref name="value" /> is not in the property format for a <see cref="T:System.Byte" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="377f1-752">
            <paramref name="value" /> 沒有實作 <see cref="T:System.IConvertible" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-752">
              <paramref name="value" /> does not implement <see cref="T:System.IConvertible" />.</span>
          </span>
          <span data-ttu-id="377f1-753">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-753">-or-</span>
          </span>
          <span data-ttu-id="377f1-754">不支援從 <paramref name="value" /> 轉換為 <see cref="T:System.Byte" /> 型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-754">Conversion from <paramref name="value" /> to the <see cref="T:System.Byte" /> type is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-755">
            <paramref name="value" /> 代表小於 <see cref="F:System.Byte.MinValue" /> 或大於 <see cref="F:System.Byte.MaxValue" /> 的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-755">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As String, provider As IFormatProvider) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-756">字串，包含要轉換的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-756">A string that contains the number to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="377f1-757">物件，提供特定文化特性格式資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-757">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-758">使用指定之特定文化特性格式資訊，將指定之數字的字串表示轉換為相等的 8 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-758">Converts the specified string representation of a number to an equivalent 8-bit unsigned integer, using specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-759">8 位元不帶正負號的整數，等於 <paramref name="value" />；而若 <paramref name="value" /> 為 <see langword="null" />，則為零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-759">An 8-bit unsigned integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-760">`provider` 是<xref:System.IFormatProvider>取得的執行個體<xref:System.Globalization.NumberFormatInfo>物件。</span><span class="sxs-lookup"><span data-stu-id="377f1-760">`provider` is an <xref:System.IFormatProvider> instance that obtains a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="377f1-761"><xref:System.Globalization.NumberFormatInfo>物件提供特定文化特性格式資訊`value`。</span><span class="sxs-lookup"><span data-stu-id="377f1-761">The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of `value`.</span></span> <span data-ttu-id="377f1-762">如果`provider`是`null`、<xref:System.Globalization.NumberFormatInfo>物件會使用目前文化特性。</span><span class="sxs-lookup"><span data-stu-id="377f1-762">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>  
  
 <span data-ttu-id="377f1-763">如果您不想處理的例外狀況，如果轉換失敗，您可以呼叫<xref:System.Byte.TryParse%2A?displayProperty=nameWithType>方法改為。</span><span class="sxs-lookup"><span data-stu-id="377f1-763">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Byte.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="377f1-764">它會傳回<xref:System.Boolean>值，指出轉換成功或失敗。</span><span class="sxs-lookup"><span data-stu-id="377f1-764">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-765">下列範例會建立自訂<xref:System.Globalization.NumberFormatInfo>物件，用以定義"協商"，它會使用呼叫中的 「 位置 」 和負號為正號<xref:System.Convert.ToByte%28System.String%2CSystem.IFormatProvider%29>方法。</span><span class="sxs-lookup"><span data-stu-id="377f1-765">The following example creates a custom <xref:System.Globalization.NumberFormatInfo> object that defines the positive sign as "pos" and the negative sign as "neg", which it uses in calls to the <xref:System.Convert.ToByte%28System.String%2CSystem.IFormatProvider%29> method.</span></span> <span data-ttu-id="377f1-766">然後它會呼叫<xref:System.Convert.ToByte%28System.String%2CSystem.IFormatProvider%29>方法重複，將轉換的字串陣列中每個項目<xref:System.Byte>值。</span><span class="sxs-lookup"><span data-stu-id="377f1-766">It then calls the <xref:System.Convert.ToByte%28System.String%2CSystem.IFormatProvider%29> method repeatedly to convert each element in a string array to a <xref:System.Byte> value.</span></span>  
  
 [!code-csharp[System.Convert.ToByte#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tobyte/cs/tobyte4.cs#14)]
 [!code-vb[System.Convert.ToByte#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tobyte/vb/tobyte4.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="377f1-767">
            <paramref name="value" /> 不是由選擇性正負號之後跟隨一連串數字 (0 到 9) 所組成。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-767">
              <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-768">
            <paramref name="value" /> 代表小於 <see cref="F:System.Byte.MinValue" /> 或大於 <see cref="F:System.Byte.MaxValue" /> 的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-768">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Byte.Parse(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (string value, int fromBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(string value, int32 fromBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As String, fromBase As Integer) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(System::String ^ value, int fromBase);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fromBase" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-769">字串，包含要轉換的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-769">A string that contains the number to convert.</span>
          </span>
        </param>
        <param name="fromBase">
          <span data-ttu-id="377f1-770">
            <c>value</c> 中數字的基底，必須是 2、8、10 或 16。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-770">The base of the number in <c>value</c>, which must be 2, 8, 10, or 16.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-771">將指定基底中數字的字串表示，轉換為相等的 8 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-771">Converts the string representation of a number in a specified base to an equivalent 8-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-772">與 <paramref name="value" /> 中之數字相等的 8 位元不帶正負號的整數；如果 <paramref name="value" /> 為 <see langword="null" />，則為 0 (零)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-772">An 8-bit unsigned integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-773">如果`fromBase`是 16，您可以使用前置詞指定的數字`value`與 「 0x 」 或 「 0x 」 的參數。</span><span class="sxs-lookup"><span data-stu-id="377f1-773">If `fromBase` is 16, you can prefix the number specified by the `value` parameter with "0x" or "0X".</span></span>  
  
 <span data-ttu-id="377f1-774">因為<xref:System.Byte>資料型別支援不帶正負號的值僅<xref:System.Convert.ToByte%28System.String%2CSystem.Int32%29>方法會假設`value`使用不帶正負號的二進位表示法來表示。</span><span class="sxs-lookup"><span data-stu-id="377f1-774">Because the <xref:System.Byte> data type supports unsigned values only, the <xref:System.Convert.ToByte%28System.String%2CSystem.Int32%29> method assumes that `value` is expressed using unsigned binary representation.</span></span> <span data-ttu-id="377f1-775">換句話說，所有的八位元用來表示數字的值，並正負號位元不存在。</span><span class="sxs-lookup"><span data-stu-id="377f1-775">In other words, all eight bits are used to represent the numeric value, and a sign bit is absent.</span></span> <span data-ttu-id="377f1-776">如此一來，就可以撰寫程式碼所在的帶正負號的位元組值，超出的範圍<xref:System.Byte>資料類型轉換成<xref:System.Byte>值而不擲回例外狀況的方法。</span><span class="sxs-lookup"><span data-stu-id="377f1-776">As a result, it is possible to write code in which a signed byte value that is out of the range of the <xref:System.Byte> data type is converted to a <xref:System.Byte> value without the method throwing an exception.</span></span> <span data-ttu-id="377f1-777">下列範例會將轉換<xref:System.SByte.MinValue>其十六進位字串表示法，然後呼叫<xref:System.Convert.ToByte%28System.String%2CSystem.Int32%29>方法。</span><span class="sxs-lookup"><span data-stu-id="377f1-777">The following example converts <xref:System.SByte.MinValue> to its hexadecimal string representation, and then calls the <xref:System.Convert.ToByte%28System.String%2CSystem.Int32%29> method.</span></span> <span data-ttu-id="377f1-778">而不是擲回例外狀況，此方法會顯示訊息，「"0x80 轉換成 128。</span><span class="sxs-lookup"><span data-stu-id="377f1-778">Instead of throwing an exception, the method displays the message, "0x80 converts to 128."</span></span>  
  
 [!code-csharp[System.Convert.BaseConversion#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#3)]
 [!code-vb[System.Convert.BaseConversion#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#3)]  
  
 <span data-ttu-id="377f1-779">執行的二進位運算或數值的轉換時一律驗證方法或運算子使用適當的數值表示法來轉譯特定的值，開發人員的責任。</span><span class="sxs-lookup"><span data-stu-id="377f1-779">When performing binary operations or numeric conversions, it is always the responsibility of the developer to verify that a method or operator is using the appropriate numeric representation to interpret a particular value.</span></span> <span data-ttu-id="377f1-780">下列範例說明的技巧，確保，該方法不適當地使用不帶正負號的二進位表示將轉換的十六進位字串表示的<xref:System.Byte>值。</span><span class="sxs-lookup"><span data-stu-id="377f1-780">The following example illustrates one technique for ensuring that the method does not inappropriately use unsigned binary representation when it converts a hexadecimal string representation to a <xref:System.Byte> value.</span></span> <span data-ttu-id="377f1-781">此範例會判斷值，代表帶正負號或不帶正負號的整數，而它會將該值轉換為其字串表示。</span><span class="sxs-lookup"><span data-stu-id="377f1-781">The example determines whether a value represents a signed or an unsigned integer while it is converting that value to its string representation.</span></span> <span data-ttu-id="377f1-782">值在此範例會將轉換已返回<xref:System.Byte>值，它會檢查原始的值是否為帶正負號的整數。</span><span class="sxs-lookup"><span data-stu-id="377f1-782">When the example converts the value back to a <xref:System.Byte> value, it checks whether the original value was a signed integer.</span></span> <span data-ttu-id="377f1-783">因此，和其高序位位元會設 （這表示的值為負數且它會使用兩個互補而不是不帶正負號的二進位表示法），在方法擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="377f1-783">If so, and if its high-order bit is set (which indicates that the value is negative and that it uses two's complement instead of unsigned binary representation), the method throws an exception.</span></span>  
  
 [!code-csharp[System.Convert.BaseConversion#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#4)]
 [!code-vb[System.Convert.BaseConversion#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#4)]  
  
   
  
## Examples  
 <span data-ttu-id="377f1-784">下列範例或者嘗試將字串陣列，則會解譯為二進位、 八進位、 十進位和十六進位值的表示法。</span><span class="sxs-lookup"><span data-stu-id="377f1-784">The following example alternately attempts to interpret an array of strings as the representation of binary, octal, decimal, and hexadecimal values.</span></span>  
  
 [!code-csharp[System.Convert.ToByte#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tobyte/cs/tobyte2.cs#11)]
 [!code-vb[System.Convert.ToByte#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tobyte/vb/tobyte2.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="377f1-785">
            <paramref name="fromBase" /> 不是 2、8、10 或 16。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-785">
              <paramref name="fromBase" /> is not 2, 8, 10, or 16.</span>
          </span>
          <span data-ttu-id="377f1-786">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-786">-or-</span>
          </span>
          <span data-ttu-id="377f1-787">代表非 10 進位不帶正負號數字的 <paramref name="value" />，有前置負號。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-787">
              <paramref name="value" />, which represents a non-base 10 unsigned number, is prefixed with a negative sign.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="377f1-788">
            <paramref name="value" /> 為 <see cref="F:System.String.Empty" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-788">
              <paramref name="value" /> is <see cref="F:System.String.Empty" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="377f1-789">
            <paramref name="value" /> 所包含的字元在 <paramref name="fromBase" /> 指定的基底中不是有效數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-789">
              <paramref name="value" /> contains a character that is not a valid digit in the base specified by <paramref name="fromBase" />.</span>
          </span>
          <span data-ttu-id="377f1-790">如果 <paramref name="value" /> 中的第一個字元無效，例外狀況訊息會指出沒有數字可進行轉換；否則訊息會指出 <paramref name="value" /> 包含無效的尾端字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-790">The exception message indicates that there are no digits to convert if the first character in <paramref name="value" /> is invalid; otherwise, the message indicates that <paramref name="value" /> contains invalid trailing characters.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-791">
            <paramref name="value" />，表示 Base 10 的不帶正負號的數字有前置一個負號。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-791">
              <paramref name="value" />, which represents a base 10 unsigned number, is prefixed with a negative sign.</span>
          </span>
          <span data-ttu-id="377f1-792">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-792">-or-</span>
          </span>
          <span data-ttu-id="377f1-793">
            <paramref name="value" /> 代表小於 <see cref="F:System.Byte.MinValue" /> 或大於 <see cref="F:System.Byte.MaxValue" /> 的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-793">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToChar">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="377f1-794">將指定的值轉換為 Unicode 字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-794">Converts a specified value to a Unicode character.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As Boolean) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(bool value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-795">要轉換的布林值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-795">The Boolean value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-796">呼叫這個方法一律會擲回 <see cref="T:System.InvalidCastException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-796">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-797">不支援這個轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-797">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="377f1-798">沒有傳回值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-798">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="377f1-799">不支援這個轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-799">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As Byte) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(System::Byte value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-800">要轉換之 8 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-800">The 8-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-801">將指定的 8 位元不帶正負號整數的值，轉換為它的相等 Unicode 字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-801">Converts the value of the specified 8-bit unsigned integer to its equivalent Unicode character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-802">Unicode 字元，其與 <paramref name="value" /> 相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-802">A Unicode character that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-803">下列範例會將不帶正負號的位元組陣列轉換<xref:System.Char>值。</span><span class="sxs-lookup"><span data-stu-id="377f1-803">The following example converts an array of unsigned bytes to <xref:System.Char> values.</span></span>  
  
 [!code-csharp[System.Convert.ToChar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tochar/cs/tochar1.cs#1)]
 [!code-vb[System.Convert.ToChar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tochar/vb/tochar1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As Char) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(char value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-804">要傳回的 Unicode 字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-804">The Unicode character to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-805">傳回指定的 Unicode 字元值；不會執行實際的轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-805">Returns the specified Unicode character value; no actual conversion is performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-806">傳回未變更的 <paramref name="value" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-806">
              <paramref name="value" /> is returned unchanged.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As DateTime) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(DateTime value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-807">要轉換的日期和時間值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-807">The date and time value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-808">呼叫這個方法一律會擲回 <see cref="T:System.InvalidCastException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-808">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-809">不支援這個轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-809">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="377f1-810">沒有傳回值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-810">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="377f1-811">不支援這個轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-811">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As Decimal) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(System::Decimal value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-812">要轉換的十進位數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-812">The decimal number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-813">呼叫這個方法一律會擲回 <see cref="T:System.InvalidCastException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-813">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-814">不支援這個轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-814">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="377f1-815">沒有傳回值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-815">No value is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-816">下列範例會嘗試將<xref:System.Decimal>至<xref:System.Char>，並擲回<xref:System.InvalidCastException>失敗。</span><span class="sxs-lookup"><span data-stu-id="377f1-816">The following example attempts to convert a <xref:System.Decimal> to <xref:System.Char>, and throws <xref:System.InvalidCastException> on failure.</span></span>  
  
 [!code-cpp[System.Convert Snippets#17](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#17)]
 [!code-csharp[System.Convert Snippets#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#17)]
 [!code-vb[System.Convert Snippets#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="377f1-817">不支援這個轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-817">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As Double) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(double value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-818">要轉換的雙精確度浮點數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-818">The double-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-819">呼叫這個方法一律會擲回 <see cref="T:System.InvalidCastException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-819">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-820">不支援這個轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-820">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="377f1-821">沒有傳回值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-821">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="377f1-822">不支援這個轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-822">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As Short) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(short value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-823">要轉換的 16 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-823">The 16-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-824">將指定的 16 位元帶正負號整數的值，轉換為它的相等 Unicode 字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-824">Converts the value of the specified 16-bit signed integer to its equivalent Unicode character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-825">Unicode 字元，其與 <paramref name="value" /> 相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-825">A Unicode character that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-826">下列範例將以帶正負號的 16 位元整數的陣列，轉換<xref:System.Char>值。</span><span class="sxs-lookup"><span data-stu-id="377f1-826">The following example converts an array of signed 16-bit integers to <xref:System.Char> values.</span></span>  
  
 [!code-csharp[System.Convert.ToChar#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tochar/cs/tochar1.cs#2)]
 [!code-vb[System.Convert.ToChar#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tochar/vb/tochar1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-827">
            <paramref name="value" /> 小於 <see cref="F:System.Char.MinValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-827">
              <paramref name="value" /> is less than <see cref="F:System.Char.MinValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As Integer) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(int value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-828">要轉換的 32 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-828">The 32-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-829">將指定的 32 位元帶正負號整數的值，轉換為它的相等 Unicode 字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-829">Converts the value of the specified 32-bit signed integer to its equivalent Unicode character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-830">Unicode 字元，其與 <paramref name="value" /> 相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-830">A Unicode character that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-831">下列範例將帶正負號的整數的陣列，轉換<xref:System.Char>值。</span><span class="sxs-lookup"><span data-stu-id="377f1-831">The following example converts an array of signed integers to <xref:System.Char> values.</span></span>  
  
 [!code-csharp[System.Convert.ToChar#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tochar/cs/tochar1.cs#3)]
 [!code-vb[System.Convert.ToChar#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tochar/vb/tochar1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-832">
            <paramref name="value" /> 小於 <see cref="F:System.Char.MinValue" /> 或大於 <see cref="F:System.Char.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-832">
              <paramref name="value" /> is less than <see cref="F:System.Char.MinValue" /> or greater than <see cref="F:System.Char.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As Long) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(long value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-833">要轉換的 64 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-833">The 64-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-834">將指定的 64 位元帶正負號整數的值，轉換為它的相等 Unicode 字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-834">Converts the value of the specified 64-bit signed integer to its equivalent Unicode character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-835">Unicode 字元，其與 <paramref name="value" /> 相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-835">A Unicode character that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-836">下列範例會嘗試將長整數來<xref:System.Char>，並擲回<xref:System.OverflowException>失敗。</span><span class="sxs-lookup"><span data-stu-id="377f1-836">The following example attempts to convert a long integer to a <xref:System.Char>, and throws a <xref:System.OverflowException> on failure.</span></span>  
  
 [!code-cpp[System.Convert Snippets#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#8)]
 [!code-csharp[System.Convert Snippets#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#8)]
 [!code-vb[System.Convert Snippets#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-837">
            <paramref name="value" /> 小於 <see cref="F:System.Char.MinValue" /> 或大於 <see cref="F:System.Char.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-837">
              <paramref name="value" /> is less than <see cref="F:System.Char.MinValue" /> or greater than <see cref="F:System.Char.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As Object) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-838">實作 <see cref="T:System.IConvertible" /> 介面的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-838">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-839">將指定之物件的值轉換為 Unicode 字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-839">Converts the value of the specified object to a Unicode character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-840">與 value 相等的 Unicode 字元；如果 <see cref="F:System.Char.MinValue" /> 為 <paramref name="value" />，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-840">A Unicode character that is equivalent to value, or <see cref="F:System.Char.MinValue" /> if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-841">如果`value`不`null`，這個方法會包裝呼叫<xref:System.IConvertible.ToChar%2A?displayProperty=nameWithType>的基礎類型的實作`value`。</span><span class="sxs-lookup"><span data-stu-id="377f1-841">If `value` is not `null`, this method wraps a call to the <xref:System.IConvertible.ToChar%2A?displayProperty=nameWithType> implementation of the underlying type of `value`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-842">下列範例會嘗試將物件陣列中的每個項目<xref:System.Char>值。</span><span class="sxs-lookup"><span data-stu-id="377f1-842">The following example attempts to convert each element in an object array to a <xref:System.Char> value.</span></span>  
  
 [!code-csharp[System.Convert.ToChar#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tochar/cs/tochar1.cs#9)]
 [!code-vb[System.Convert.ToChar#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tochar/vb/tochar1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="377f1-843">
            <paramref name="value" /> 是一個 Null 字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-843">
              <paramref name="value" /> is a null string.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="377f1-844">
            <paramref name="value" /> 未實作 <see cref="T:System.IConvertible" /> 介面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-844">
              <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
          <span data-ttu-id="377f1-845">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-845">-or-</span>
          </span>
          <span data-ttu-id="377f1-846">不支援將  <paramref name="value" /> 轉換為 <see cref="T:System.Char" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-846">The conversion of <paramref name="value" /> to a <see cref="T:System.Char" /> is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-847">
            <paramref name="value" /> 小於 <see cref="F:System.Char.MinValue" /> 或大於 <see cref="F:System.Char.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-847">
              <paramref name="value" /> is less than <see cref="F:System.Char.MinValue" /> or greater than <see cref="F:System.Char.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As SByte) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(System::SByte value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-848">要轉換的 8 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-848">The 8-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-849">將指定的 8 位元帶正負號整數的值，轉換為它的相等 Unicode 字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-849">Converts the value of the specified 8-bit signed integer to its equivalent Unicode character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-850">Unicode 字元，其與 <paramref name="value" /> 相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-850">A Unicode character that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-851">下列範例會將帶正負號的位元組陣列轉換<xref:System.Char>值。</span><span class="sxs-lookup"><span data-stu-id="377f1-851">The following example converts an array of signed bytes to <xref:System.Char> values.</span></span>  
  
 [!code-csharp[System.Convert.ToChar#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tochar/cs/tochar1.cs#4)]
 [!code-vb[System.Convert.ToChar#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tochar/vb/tochar1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-852">
            <paramref name="value" /> 小於 <see cref="F:System.Char.MinValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-852">
              <paramref name="value" /> is less than <see cref="F:System.Char.MinValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As Single) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(float value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-853">要轉換的單精確度浮點數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-853">The single-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-854">呼叫這個方法一律會擲回 <see cref="T:System.InvalidCastException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-854">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-855">不支援這個轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-855">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="377f1-856">沒有傳回值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-856">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="377f1-857">不支援這個轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-857">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As String) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-858">長度為 1 的字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-858">A string of length 1.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-859">將指定之字串的第一個字元轉換為 Unicode 字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-859">Converts the first character of a specified string to a Unicode character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-860">與 <paramref name="value" /> 中第一且唯一的字元相等之 Unicode 字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-860">A Unicode character that is equivalent to the first and only character in <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-861">`value` 必須是包含單一字元的字串。</span><span class="sxs-lookup"><span data-stu-id="377f1-861">`value` must be a string that contains a single character.</span></span>  
  
 <span data-ttu-id="377f1-862">如果您不想處理的例外狀況，如果轉換失敗，您可以呼叫<xref:System.Char.TryParse%2A?displayProperty=nameWithType>方法改為。</span><span class="sxs-lookup"><span data-stu-id="377f1-862">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Char.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="377f1-863">它會傳回<xref:System.Boolean>值，指出轉換成功或失敗。</span><span class="sxs-lookup"><span data-stu-id="377f1-863">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-864">下列範例將轉換的字串陣列中的每個項目<xref:System.Char>值。</span><span class="sxs-lookup"><span data-stu-id="377f1-864">The following example converts each element in a string array to a <xref:System.Char> value.</span></span>  
  
 [!code-csharp[System.Convert.ToChar#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tochar/cs/tochar1.cs#5)]
 [!code-vb[System.Convert.ToChar#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tochar/vb/tochar1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="377f1-865">
            <paramref name="value" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-865">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="377f1-866">
            <paramref name="value" /> 的長度不為 1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-866">The length of <paramref name="value" /> is not 1.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As UShort) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(System::UInt16 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-867">要轉換之 16 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-867">The 16-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-868">將指定的 16 位元不帶正負號整數的值，轉換為它的相等 Unicode 字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-868">Converts the value of the specified 16-bit unsigned integer to its equivalent Unicode character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-869">Unicode 字元，其與 <paramref name="value" /> 相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-869">A Unicode character that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-870">下列範例會將轉換至不帶正負號的 16 位元整數的陣列中每個項目<xref:System.Char>值。</span><span class="sxs-lookup"><span data-stu-id="377f1-870">The following example converts each element in an array of unsigned 16-bit integers to a <xref:System.Char> value.</span></span>  
  
 [!code-csharp[System.Convert.ToChar#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tochar/cs/tochar1.cs#6)]
 [!code-vb[System.Convert.ToChar#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tochar/vb/tochar1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As UInteger) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(System::UInt32 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-871">要轉換之 32 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-871">The 32-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-872">將指定的 32 位元不帶正負號整數的值，轉換為它的相等 Unicode 字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-872">Converts the value of the specified 32-bit unsigned integer to its equivalent Unicode character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-873">Unicode 字元，其與 <paramref name="value" /> 相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-873">A Unicode character that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-874">下列範例會將轉換至不帶正負號整數的陣列中每個項目<xref:System.Char>值。</span><span class="sxs-lookup"><span data-stu-id="377f1-874">The following example converts each element in an array of unsigned integers to a <xref:System.Char> value.</span></span>  
  
 [!code-csharp[System.Convert.ToChar#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tochar/cs/tochar1.cs#7)]
 [!code-vb[System.Convert.ToChar#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tochar/vb/tochar1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-875">
            <paramref name="value" /> 大於 <see cref="F:System.Char.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-875">
              <paramref name="value" /> is greater than <see cref="F:System.Char.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As ULong) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(System::UInt64 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-876">要轉換之 64 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-876">The 64-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-877">將指定的 64 位元不帶正負號整數的值，轉換為它的相等 Unicode 字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-877">Converts the value of the specified 64-bit unsigned integer to its equivalent Unicode character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-878">Unicode 字元，其與 <paramref name="value" /> 相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-878">A Unicode character that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-879">下列範例會將轉換至不帶正負號長整數的陣列中每個項目<xref:System.Char>值。</span><span class="sxs-lookup"><span data-stu-id="377f1-879">The following example converts each element in an array of unsigned long integers to a <xref:System.Char> value.</span></span>  
  
 [!code-csharp[System.Convert.ToChar#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tochar/cs/tochar1.cs#8)]
 [!code-vb[System.Convert.ToChar#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tochar/vb/tochar1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-880">
            <paramref name="value" /> 大於 <see cref="F:System.Char.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-880">
              <paramref name="value" /> is greater than <see cref="F:System.Char.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (object value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(object value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As Object, provider As IFormatProvider) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(System::Object ^ value, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-881">實作 <see cref="T:System.IConvertible" /> 介面的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-881">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="377f1-882">物件，提供特定文化特性格式資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-882">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-883">使用指定之特定文化特性格式資訊，將指定之物件的值轉換為它的相等 Unicode 字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-883">Converts the value of the specified object to its equivalent Unicode character, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-884">與 <paramref name="value" /> 相等的 Unicode 字元；如果 <see cref="F:System.Char.MinValue" /> 為 <paramref name="value" />，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-884">A Unicode character that is equivalent to <paramref name="value" />, or <see cref="F:System.Char.MinValue" /> if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-885">傳回值是叫用的結果<xref:System.IConvertible.ToChar%2A?displayProperty=nameWithType>方法的基礎類型`value`。</span><span class="sxs-lookup"><span data-stu-id="377f1-885">The return value is the result of invoking the <xref:System.IConvertible.ToChar%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
 <span data-ttu-id="377f1-886">`provider` 可讓使用者指定的內容的相關特定文化特性的轉換資訊`value`。</span><span class="sxs-lookup"><span data-stu-id="377f1-886">`provider` enables the user to specify culture-specific conversion information about the contents of `value`.</span></span> <span data-ttu-id="377f1-887">基底類型忽略`provider`; 不過，如果，可能會使用參數`value`是使用者定義型別可實作<xref:System.IConvertible>介面。</span><span class="sxs-lookup"><span data-stu-id="377f1-887">The base types ignore `provider`; however, the parameter may be used if `value` is a user-defined type that implements the <xref:System.IConvertible> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-888">下列範例會定義一個類別，實作<xref:System.IConvertible>和類別可實作<xref:System.IFormatProvider>。</span><span class="sxs-lookup"><span data-stu-id="377f1-888">The following example defines a class that implements <xref:System.IConvertible> and a class that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="377f1-889">實作類別的物件<xref:System.IConvertible>保存陣列<xref:System.Double>值。</span><span class="sxs-lookup"><span data-stu-id="377f1-889">Objects of the class that implements <xref:System.IConvertible> hold an array of <xref:System.Double> values.</span></span> <span data-ttu-id="377f1-890">每個類別的物件傳遞至`ToChar`方法。</span><span class="sxs-lookup"><span data-stu-id="377f1-890">An object of each class is passed to the `ToChar` method.</span></span> <span data-ttu-id="377f1-891">這個方法會傳回字元的 Unicode 值是一維陣列的平均<xref:System.Double>，使用值實作的物件<xref:System.IFormatProvider>來判斷如何計算平均。</span><span class="sxs-lookup"><span data-stu-id="377f1-891">This method returns a character whose Unicode value is the average of the array of <xref:System.Double> values, using the object that implements <xref:System.IFormatProvider> to determine how to calculate the average.</span></span>  
  
 [!code-cpp[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/CPP/objectifp.cpp#1)]
 [!code-csharp[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/CS/objectifp.cs#1)]
 [!code-vb[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/VB/objectifp.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="377f1-892">
            <paramref name="value" /> 是一個 Null 字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-892">
              <paramref name="value" /> is a null string.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="377f1-893">
            <paramref name="value" /> 未實作 <see cref="T:System.IConvertible" /> 介面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-893">
              <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
          <span data-ttu-id="377f1-894">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-894">-or-</span>
          </span>
          <span data-ttu-id="377f1-895">不支援將  <paramref name="value" /> 轉換為 <see cref="T:System.Char" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-895">The conversion of <paramref name="value" /> to a <see cref="T:System.Char" /> is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-896">
            <paramref name="value" /> 小於 <see cref="F:System.Char.MinValue" /> 或大於 <see cref="F:System.Char.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-896">
              <paramref name="value" /> is less than <see cref="F:System.Char.MinValue" /> or greater than <see cref="F:System.Char.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As String, provider As IFormatProvider) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-897">長度為 1 或 <see langword="null" /> 的字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-897">A string of length 1 or <see langword="null" />.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="377f1-898">物件，提供特定文化特性格式資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-898">An object that supplies culture-specific formatting information.</span>
          </span>
          <span data-ttu-id="377f1-899">這個參數已忽略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-899">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-900">使用指定之特定文化特性格式資訊，將指定之字串的第一個字元轉換為 Unicode 字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-900">Converts the first character of a specified string to a Unicode character, using specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-901">與 <paramref name="value" /> 中第一且唯一的字元相等之 Unicode 字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-901">A Unicode character that is equivalent to the first and only character in <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-902">`value` 必須是包含單一字元的字串。</span><span class="sxs-lookup"><span data-stu-id="377f1-902">`value` must be a string that contains a single character.</span></span>  
  
 <span data-ttu-id="377f1-903">如果您不想處理的例外狀況，如果轉換失敗，您可以呼叫<xref:System.Char.TryParse%2A?displayProperty=nameWithType>方法改為。</span><span class="sxs-lookup"><span data-stu-id="377f1-903">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Char.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="377f1-904">它會傳回<xref:System.Boolean>值，指出轉換成功或失敗。</span><span class="sxs-lookup"><span data-stu-id="377f1-904">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-905">下列範例會將轉換的字串表示法<xref:System.Char>值與`ToChar`方法，使用<xref:System.IFormatProvider>顯示的格式提供者，它會呼叫其類型的物件。</span><span class="sxs-lookup"><span data-stu-id="377f1-905">The following example converts a string representation of a <xref:System.Char> value with the `ToChar` method, using an <xref:System.IFormatProvider> object that displays the type of the format provider for which it is called.</span></span> <span data-ttu-id="377f1-906">此範例顯示的格式提供者不參考。</span><span class="sxs-lookup"><span data-stu-id="377f1-906">The example shows that the format provider is not referenced.</span></span>  
  
 [!code-cpp[System.Convert.ToNonNum_String#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToNonNum_String/CPP/stringnonnum.cpp#2)]
 [!code-csharp[System.Convert.ToNonNum_String#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToNonNum_String/CS/stringnonnum.cs#2)]
 [!code-vb[System.Convert.ToNonNum_String#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToNonNum_String/VB/stringnonnum.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="377f1-907">
            <paramref name="value" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-907">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="377f1-908">
            <paramref name="value" /> 的長度不為 1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-908">The length of <paramref name="value" /> is not 1.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToDateTime">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="377f1-909">將指定的值轉換為 <see cref="T:System.DateTime" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-909">Converts a specified value to a <see cref="T:System.DateTime" /> value.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As Boolean) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(bool value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-910">要轉換的布林值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-910">The Boolean value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-911">呼叫這個方法一律會擲回 <see cref="T:System.InvalidCastException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-911">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-912">不支援這個轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-912">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="377f1-913">沒有傳回值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-913">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="377f1-914">不支援這個轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-914">This conversion is not supported.</span>
          </span>
        </exception>
        <altmember cref="T:System.Boolean" />
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As Byte) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(System::Byte value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-915">要轉換之 8 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-915">The 8-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-916">呼叫這個方法一律會擲回 <see cref="T:System.InvalidCastException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-916">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-917">不支援這個轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-917">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="377f1-918">沒有傳回值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-918">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="377f1-919">不支援這個轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-919">This conversion is not supported.</span>
          </span>
        </exception>
        <altmember cref="T:System.Byte" />
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As Char) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(char value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-920">要轉換的 Unicode 字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-920">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-921">呼叫這個方法一律會擲回 <see cref="T:System.InvalidCastException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-921">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-922">不支援這個轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-922">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="377f1-923">沒有傳回值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-923">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="377f1-924">不支援這個轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-924">This conversion is not supported.</span>
          </span>
        </exception>
        <altmember cref="T:System.Char" />
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As DateTime) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(DateTime value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-925">日期和時間值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-925">A date and time value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-926">傳回指定的 <see cref="T:System.DateTime" /> 物件；不會執行實際的轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-926">Returns the specified <see cref="T:System.DateTime" /> object; no actual conversion is performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-927">傳回未變更的 <paramref name="value" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-927">
              <paramref name="value" /> is returned unchanged.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As Decimal) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(System::Decimal value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-928">要轉換的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-928">The number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-929">呼叫這個方法一律會擲回 <see cref="T:System.InvalidCastException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-929">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-930">不支援這個轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-930">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="377f1-931">沒有傳回值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-931">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="377f1-932">不支援這個轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-932">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As Double) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(double value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-933">要轉換的雙精確度浮點數值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-933">The double-precision floating-point value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-934">呼叫這個方法一律會擲回 <see cref="T:System.InvalidCastException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-934">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-935">不支援這個轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-935">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="377f1-936">沒有傳回值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-936">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="377f1-937">不支援這個轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-937">This conversion is not supported.</span>
          </span>
        </exception>
        <altmember cref="T:System.Double" />
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As Short) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(short value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-938">要轉換的 16 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-938">The 16-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-939">呼叫這個方法一律會擲回 <see cref="T:System.InvalidCastException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-939">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-940">不支援這個轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-940">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="377f1-941">沒有傳回值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-941">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="377f1-942">不支援這個轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-942">This conversion is not supported.</span>
          </span>
        </exception>
        <altmember cref="T:System.Int16" />
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(int value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-943">要轉換的 32 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-943">The 32-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-944">呼叫這個方法一律會擲回 <see cref="T:System.InvalidCastException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-944">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-945">不支援這個轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-945">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="377f1-946">沒有傳回值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-946">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="377f1-947">不支援這個轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-947">This conversion is not supported.</span>
          </span>
        </exception>
        <altmember cref="T:System.Int32" />
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As Long) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(long value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-948">要轉換的 64 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-948">The 64-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-949">呼叫這個方法一律會擲回 <see cref="T:System.InvalidCastException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-949">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-950">不支援這個轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-950">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="377f1-951">沒有傳回值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-951">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="377f1-952">不支援這個轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-952">This conversion is not supported.</span>
          </span>
        </exception>
        <altmember cref="T:System.Int64" />
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As Object) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-953">實作 <see cref="T:System.IConvertible" /> 介面的物件，或是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-953">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-954">將指定之物件的值轉換為 <see cref="T:System.DateTime" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-954">Converts the value of the specified object to a <see cref="T:System.DateTime" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-955">與 <paramref name="value" /> 值相等的日期和時間；如果 <see cref="F:System.DateTime.MinValue" /> 為 <paramref name="value" />，則為與 <see langword="null" /> 相等的日期和時間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-955">The date and time equivalent of the value of <paramref name="value" />, or a date and time equivalent of <see cref="F:System.DateTime.MinValue" /> if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-956">若要成功，則執行階段型別轉換`value`參數必須是<xref:System.DateTime>或<xref:System.String>，或`value`必須`null`。</span><span class="sxs-lookup"><span data-stu-id="377f1-956">For the conversion to succeed, the runtime type of the `value` parameter must be either a <xref:System.DateTime> or a <xref:System.String>, or `value` must be `null`.</span></span> <span data-ttu-id="377f1-957">否則，方法會擲回<xref:System.InvalidCastException>。</span><span class="sxs-lookup"><span data-stu-id="377f1-957">Otherwise, the method throws an <xref:System.InvalidCastException>.</span></span> <span data-ttu-id="377f1-958">此外，如果`value`是一個字串，它必須包含在目前的文化特性的日期和時間值的有效表示法或<xref:System.FormatException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="377f1-958">In addition, if `value` is a string, it must contain a valid representation of a date and time value in the current culture or a <xref:System.FormatException> is thrown.</span></span>  
  
 <span data-ttu-id="377f1-959">傳回值是叫用的結果<xref:System.IConvertible.ToDateTime%2A?displayProperty=nameWithType>方法的基礎類型`value`。</span><span class="sxs-lookup"><span data-stu-id="377f1-959">The return value is the result of invoking the <xref:System.IConvertible.ToDateTime%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-960">下列範例會呼叫<xref:System.Convert.ToDateTime%28System.Object%29>具有各種不同的方法<xref:System.Object>變數。</span><span class="sxs-lookup"><span data-stu-id="377f1-960">The following example calls the <xref:System.Convert.ToDateTime%28System.Object%29> method with a variety of <xref:System.Object> variables.</span></span>  
  
 [!code-csharp[System.Convert.ToDateTime#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToDateTime/cs/ToDateTime1.cs#1)]
 [!code-vb[System.Convert.ToDateTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToDateTime/vb/ToDateTime1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="377f1-961">
            <paramref name="value" /> 不是日期及時間值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-961">
              <paramref name="value" /> is not a valid date and time value.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="377f1-962">
            <paramref name="value" /> 未實作 <see cref="T:System.IConvertible" /> 介面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-962">
              <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
          <span data-ttu-id="377f1-963">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-963">-or-</span>
          </span>
          <span data-ttu-id="377f1-964">不支援轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-964">The conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As SByte) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(System::SByte value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-965">要轉換的 8 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-965">The 8-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-966">呼叫這個方法一律會擲回 <see cref="T:System.InvalidCastException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-966">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-967">不支援這個轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-967">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="377f1-968">沒有傳回值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-968">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="377f1-969">不支援這個轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-969">This conversion is not supported.</span>
          </span>
        </exception>
        <altmember cref="T:System.Byte" />
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As Single) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(float value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-970">要轉換的單精確度浮點數值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-970">The single-precision floating-point value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-971">呼叫這個方法一律會擲回 <see cref="T:System.InvalidCastException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-971">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-972">不支援這個轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-972">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="377f1-973">沒有傳回值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-973">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="377f1-974">不支援這個轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-974">This conversion is not supported.</span>
          </span>
        </exception>
        <altmember cref="T:System.Single" />
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As String) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-975">日期和時間的字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-975">The string representation of a date and time.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-976">將指定之日期和時間的字串表示，轉換為相等的日期和時間值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-976">Converts the specified string representation of a date and time to an equivalent date and time value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-977">與 <paramref name="value" /> 值相等的日期和時間；如果 <see cref="F:System.DateTime.MinValue" /> 為 <paramref name="value" />，則為與 <see langword="null" /> 相等的日期和時間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-977">The date and time equivalent of the value of <paramref name="value" />, or the date and time equivalent of <see cref="F:System.DateTime.MinValue" /> if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-978">如果`value`不`null`，則傳回值是叫用的結果<xref:System.DateTime.Parse%2A?displayProperty=nameWithType>方法`value`使用中的格式設定資訊<xref:System.Globalization.DateTimeFormatInfo>初始化目前的文化特性的物件。</span><span class="sxs-lookup"><span data-stu-id="377f1-978">If `value` is not `null`, the return value is the result of invoking the <xref:System.DateTime.Parse%2A?displayProperty=nameWithType> method on `value` using the formatting information in a <xref:System.Globalization.DateTimeFormatInfo> object that is initialized for the current culture.</span></span> <span data-ttu-id="377f1-979">`value`引數必須包含日期表示法，而且其中一種格式的時間述<xref:System.Globalization.DateTimeFormatInfo>主題。</span><span class="sxs-lookup"><span data-stu-id="377f1-979">The `value` argument must contain the representation of a date and time in one of the formats described in the <xref:System.Globalization.DateTimeFormatInfo> topic.</span></span> <span data-ttu-id="377f1-980">如果 `value` 是 `null`，則方法會傳回 <xref:System.DateTime.MinValue?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="377f1-980">If `value` is `null`, the method returns <xref:System.DateTime.MinValue?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="377f1-981">這個方法會嘗試剖析`value`完全並避免擲回<xref:System.FormatException>。</span><span class="sxs-lookup"><span data-stu-id="377f1-981">This method tries to parse `value` completely and avoid throwing a <xref:System.FormatException>.</span></span> <span data-ttu-id="377f1-982">完成遺漏月、 日和年資訊以目前的日期。</span><span class="sxs-lookup"><span data-stu-id="377f1-982">It completes missing month, day, and year information with the current date.</span></span> <span data-ttu-id="377f1-983">如果`value`包含的日期和沒有時間中，這個方法會假設午夜的時間。</span><span class="sxs-lookup"><span data-stu-id="377f1-983">If `value` contains only a date and no time, this method assumes a time of midnight.</span></span> <span data-ttu-id="377f1-984">前置、 內部或尾端空格字元`value`都會被忽略。</span><span class="sxs-lookup"><span data-stu-id="377f1-984">Any leading, inner, or trailing white-space characters in `value` are ignored.</span></span>  
  
 <span data-ttu-id="377f1-985">如果您不想處理的例外狀況，如果轉換失敗，您可以呼叫<xref:System.DateTime.TryParse%2A?displayProperty=nameWithType>方法改為。</span><span class="sxs-lookup"><span data-stu-id="377f1-985">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.DateTime.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="377f1-986">它會傳回<xref:System.Boolean>值，指出轉換成功或失敗。</span><span class="sxs-lookup"><span data-stu-id="377f1-986">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-987">下列範例會使用<xref:System.Convert.ToDateTime%2A>方法，將轉換的日期和時間的各種字串表示法<xref:System.DateTime>值。</span><span class="sxs-lookup"><span data-stu-id="377f1-987">The following example uses the <xref:System.Convert.ToDateTime%2A> method to convert various string representations of dates and times to <xref:System.DateTime> values.</span></span>  
  
 [!code-csharp[System.Convert.ToDateTime#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToDateTime/cs/ToDateTime2.cs#2)]
 [!code-vb[System.Convert.ToDateTime#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToDateTime/vb/ToDateTime2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="377f1-988">
            <paramref name="value" /> 不是正確的日期和時間字串格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-988">
              <paramref name="value" /> is not a properly formatted date and time string.</span>
          </span>
        </exception>
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As UShort) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(System::UInt16 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-989">要轉換之 16 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-989">The 16-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-990">呼叫這個方法一律會擲回 <see cref="T:System.InvalidCastException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-990">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-991">不支援這個轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-991">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="377f1-992">沒有傳回值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-992">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="377f1-993">不支援這個轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-993">This conversion is not supported.</span>
          </span>
        </exception>
        <altmember cref="T:System.UInt16" />
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As UInteger) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(System::UInt32 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-994">要轉換之 32 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-994">The 32-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-995">呼叫這個方法一律會擲回 <see cref="T:System.InvalidCastException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-995">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-996">不支援這個轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-996">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="377f1-997">沒有傳回值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-997">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="377f1-998">不支援這個轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-998">This conversion is not supported.</span>
          </span>
        </exception>
        <altmember cref="T:System.UInt32" />
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As ULong) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(System::UInt64 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-999">要轉換之 64 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-999">The 64-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1000">呼叫這個方法一律會擲回 <see cref="T:System.InvalidCastException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1000">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1001">不支援這個轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1001">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="377f1-1002">沒有傳回值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1002">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="377f1-1003">不支援這個轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1003">This conversion is not supported.</span>
          </span>
        </exception>
        <altmember cref="T:System.UInt64" />
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (object value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(object value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As Object, provider As IFormatProvider) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(System::Object ^ value, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1004">實作 <see cref="T:System.IConvertible" /> 介面的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1004">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="377f1-1005">物件，提供特定文化特性格式資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1005">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1006">使用指定之特定文化特性格式資訊，將指定之物件的值轉換為 <see cref="T:System.DateTime" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1006">Converts the value of the specified object to a <see cref="T:System.DateTime" /> object, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1007">與 <paramref name="value" /> 值相等的日期和時間；如果 <see cref="F:System.DateTime.MinValue" /> 為 <paramref name="value" />，則為與 <see langword="null" /> 相等的日期和時間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1007">The date and time equivalent of the value of <paramref name="value" />, or the date and time equivalent of <see cref="F:System.DateTime.MinValue" /> if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-1008">傳回值是叫用的結果<xref:System.IConvertible.ToDateTime%2A?displayProperty=nameWithType>方法的基礎類型`value`。</span><span class="sxs-lookup"><span data-stu-id="377f1-1008">The return value is the result of invoking the <xref:System.IConvertible.ToDateTime%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
 <span data-ttu-id="377f1-1009">`provider` 可讓使用者指定的內容的相關特定文化特性的轉換資訊`value`。</span><span class="sxs-lookup"><span data-stu-id="377f1-1009">`provider` enables the user to specify culture-specific conversion information about the contents of `value`.</span></span> <span data-ttu-id="377f1-1010">例如，如果`value`是<xref:System.String>表示日期，`provider`可能會提供用來表示該日期的表示法的特定文化特性資訊。</span><span class="sxs-lookup"><span data-stu-id="377f1-1010">For example, if `value` is a <xref:System.String> that represents a date, `provider` could supply culture-specific information about the notation used to represent that date.</span></span> <span data-ttu-id="377f1-1011">`provider` 轉換的`value`執行階段類型，是否`value`是<xref:System.String>，或如果`value`是使用者定義類型的<xref:System.IConvertible.ToDateTime%2A?displayProperty=nameWithType>實作利用`provider`。</span><span class="sxs-lookup"><span data-stu-id="377f1-1011">`provider` is involved in the conversion of `value` if the runtime type of `value` is a <xref:System.String>, or if `value` is a user-defined type whose <xref:System.IConvertible.ToDateTime%2A?displayProperty=nameWithType> implementation makes use of `provider`.</span></span> <span data-ttu-id="377f1-1012">執行階段類型，是否`value`是<xref:System.String>和`provider`是`null`、<xref:System.Globalization.CultureInfo>使用代表目前執行緒文化特性的物件。</span><span class="sxs-lookup"><span data-stu-id="377f1-1012">If the runtime type of `value` is <xref:System.String> and `provider` is `null`, the <xref:System.Globalization.CultureInfo> object that represents the current thread culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-1013">下列範例會定義自訂的格式提供者， `CustomProvider`、 其<xref:System.IFormatProvider.GetFormat%2A>方法輸出至主控台，它已叫用，然後傳回訊息<xref:System.Globalization.DateTimeFormatInfo>文化特性名稱做為參數傳遞給它的類別物件建構函式。</span><span class="sxs-lookup"><span data-stu-id="377f1-1013">The following example defines a custom format provider, `CustomProvider`, whose <xref:System.IFormatProvider.GetFormat%2A> method outputs a message to the console that it has been invoked, and then returns the <xref:System.Globalization.DateTimeFormatInfo> object of the culture whose name was passed as a parameter to its class constructor.</span></span> <span data-ttu-id="377f1-1014">每一種`CustomProvider`物件用來將物件陣列中的項目轉換成日期和時間值。</span><span class="sxs-lookup"><span data-stu-id="377f1-1014">Each of these `CustomProvider` objects is used to convert the elements in an object array to date and time values.</span></span> <span data-ttu-id="377f1-1015">輸出會指出`CustomProvider`轉換中使用物件時，才的型別`value`參數是<xref:System.String>。</span><span class="sxs-lookup"><span data-stu-id="377f1-1015">The output indicates that the `CustomProvider` object is used in the conversion only when the type of the `value` parameter is a <xref:System.String>.</span></span>  
  
 [!code-csharp[System.Convert.ToDateTime#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToDateTime/cs/todatetime4.cs#4)]
 [!code-vb[System.Convert.ToDateTime#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToDateTime/vb/todatetime4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="377f1-1016">
            <paramref name="value" /> 不是日期及時間值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1016">
              <paramref name="value" /> is not a valid date and time value.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="377f1-1017">
            <paramref name="value" /> 未實作 <see cref="T:System.IConvertible" /> 介面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1017">
              <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
          <span data-ttu-id="377f1-1018">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1018">-or-</span>
          </span>
          <span data-ttu-id="377f1-1019">不支援轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1019">The conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As String, provider As IFormatProvider) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1020">字串，包含要轉換的日期和時間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1020">A string that contains a date and time to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="377f1-1021">物件，提供特定文化特性格式資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1021">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1022">使用指定之特定文化特性格式資訊，將指定之數字的字串表示轉換為相等的日期和時間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1022">Converts the specified string representation of a number to an equivalent date and time, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1023">與 <paramref name="value" /> 值相等的日期和時間；如果 <see cref="F:System.DateTime.MinValue" /> 為 <paramref name="value" />，則為與 <see langword="null" /> 相等的日期和時間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1023">The date and time equivalent of the value of <paramref name="value" />, or the date and time equivalent of <see cref="F:System.DateTime.MinValue" /> if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-1024">傳回值是叫用的結果<xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType>方法`value`。</span><span class="sxs-lookup"><span data-stu-id="377f1-1024">The return value is the result of invoking the <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method on `value`.</span></span>  
  
 <span data-ttu-id="377f1-1025">`provider` 是<xref:System.IFormatProvider>取得的執行個體<xref:System.Globalization.DateTimeFormatInfo>物件。</span><span class="sxs-lookup"><span data-stu-id="377f1-1025">`provider` is an <xref:System.IFormatProvider> instance that obtains a <xref:System.Globalization.DateTimeFormatInfo> object.</span></span> <span data-ttu-id="377f1-1026"><xref:System.Globalization.DateTimeFormatInfo>物件提供特定文化特性格式資訊`value`。</span><span class="sxs-lookup"><span data-stu-id="377f1-1026">The <xref:System.Globalization.DateTimeFormatInfo> object provides culture-specific information about the format of `value`.</span></span> <span data-ttu-id="377f1-1027">如果`provider`是`null`、<xref:System.Globalization.DateTimeFormatInfo>會使用目前文化特性。</span><span class="sxs-lookup"><span data-stu-id="377f1-1027">If `provider` is `null`, the <xref:System.Globalization.DateTimeFormatInfo> for the current culture is used.</span></span>  
  
 <span data-ttu-id="377f1-1028">如果您不想處理的例外狀況，如果轉換失敗，您可以呼叫<xref:System.DateTime.TryParse%2A?displayProperty=nameWithType>方法改為。</span><span class="sxs-lookup"><span data-stu-id="377f1-1028">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.DateTime.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="377f1-1029">它會傳回<xref:System.Boolean>值，指出轉換成功或失敗。</span><span class="sxs-lookup"><span data-stu-id="377f1-1029">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-1030">下列範例將轉換的日期值的字串表示法`ToDateTime`方法，使用<xref:System.IFormatProvider>物件。</span><span class="sxs-lookup"><span data-stu-id="377f1-1030">The following example converts string representations of date values with the `ToDateTime` method, using an <xref:System.IFormatProvider> object.</span></span>  
  
 [!code-csharp[System.Convert.ToDateTime#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToDateTime/cs/ToDateTime3.cs#3)]
 [!code-vb[System.Convert.ToDateTime#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToDateTime/vb/ToDateTime3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="377f1-1031">
            <paramref name="value" /> 不是正確的日期和時間字串格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1031">
              <paramref name="value" /> is not a properly formatted date and time string.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToDecimal">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="377f1-1032">將指定的值轉換為十進位數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1032">Converts a specified value to a decimal number.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As Boolean) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(bool value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1033">要轉換的布林值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1033">The Boolean value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1034">將指定的布林值轉換為相等的十進位數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1034">Converts the specified Boolean value to the equivalent decimal number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1035">如果 <paramref name="value" /> 為 <see langword="true" />，則為數字 1，否則為 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1035">The number 1 if <paramref name="value" /> is <see langword="true" />; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-1036">下列範例說明的轉換<xref:System.Boolean>至<xref:System.Decimal>值。</span><span class="sxs-lookup"><span data-stu-id="377f1-1036">The following example illustrates the conversion of <xref:System.Boolean> to <xref:System.Decimal> values.</span></span>  
  
 [!code-csharp[System.Convert.ToDecimal2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todecimal2/cs/todecimal1.cs#1)]
 [!code-vb[System.Convert.ToDecimal2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todecimal2/vb/todecimal1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Decimal" />
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As Byte) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(System::Byte value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1037">要轉換之 8 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1037">The 8-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1038">將指定之 8 位元不帶正負號的整數值，轉換為相等的十進位數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1038">Converts the value of the specified 8-bit unsigned integer to the equivalent decimal number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1039">與 <paramref name="value" /> 相等的十進位數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1039">The decimal number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-1040">下列範例會將轉換<xref:System.Byte>值設定為<xref:System.Decimal>值。</span><span class="sxs-lookup"><span data-stu-id="377f1-1040">The following example converts a <xref:System.Byte> value to a <xref:System.Decimal> value.</span></span>  
  
 [!code-cpp[System.Convert Snippets#18](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#18)]
 [!code-csharp[System.Convert Snippets#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#18)]
 [!code-vb[System.Convert Snippets#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#18)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Decimal" />
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As Char) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(char value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1041">要轉換的 Unicode 字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1041">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1042">呼叫這個方法一律會擲回 <see cref="T:System.InvalidCastException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1042">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1043">不支援這個轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1043">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="377f1-1044">沒有傳回值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1044">No value is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-1045">下列範例會嘗試將<xref:System.Char>值設定為<xref:System.Decimal>，並擲回<xref:System.InvalidCastException>失敗時。</span><span class="sxs-lookup"><span data-stu-id="377f1-1045">The following example attempts to convert a <xref:System.Char> value to <xref:System.Decimal>, and throws <xref:System.InvalidCastException> upon failure.</span></span>  
  
 [!code-cpp[System.Convert Snippets#17](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#17)]
 [!code-csharp[System.Convert Snippets#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#17)]
 [!code-vb[System.Convert Snippets#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="377f1-1046">不支援這個轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1046">This conversion is not supported.</span>
          </span>
        </exception>
        <altmember cref="T:System.Char" />
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As DateTime) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(DateTime value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1047">要轉換的日期和時間值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1047">The date and time value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1048">呼叫這個方法一律會擲回 <see cref="T:System.InvalidCastException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1048">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1049">不支援這個轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1049">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="377f1-1050">沒有傳回值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1050">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="377f1-1051">不支援這個轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1051">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(System::Decimal value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1052">十進位數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1052">A decimal number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1053">傳回指定的十進位數字，不執行實際的轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1053">Returns the specified decimal number; no actual conversion is performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1054">傳回未變更的 <paramref name="value" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1054">
              <paramref name="value" /> is returned unchanged.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As Double) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(double value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1055">要轉換的雙精確度浮點數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1055">The double-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1056">將指定之雙精確度浮點數的值，轉換為相等的十進位數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1056">Converts the value of the specified double-precision floating-point number to an equivalent decimal number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1057">十進位數字，其與 <paramref name="value" /> 相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1057">A decimal number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-1058"><xref:System.Decimal>這個方法所傳回的值包含 15 個有效位數的最大值。</span><span class="sxs-lookup"><span data-stu-id="377f1-1058">The <xref:System.Decimal> value returned by this method contains a maximum of 15 significant digits.</span></span> <span data-ttu-id="377f1-1059">如果`value`參數包含超過 15 個有效位數，它會四捨五入為最接近。</span><span class="sxs-lookup"><span data-stu-id="377f1-1059">If the `value` parameter contains more than 15 significant digits, it is rounded using rounding to nearest.</span></span> <span data-ttu-id="377f1-1060">下列範例說明如何<xref:System.Convert.ToDecimal%28System.Double%29?displayProperty=nameWithType>方法會使用傳回接近捨入為<xref:System.Decimal>有 15 個有效位數的值。</span><span class="sxs-lookup"><span data-stu-id="377f1-1060">The following example illustrates how the <xref:System.Convert.ToDecimal%28System.Double%29?displayProperty=nameWithType> method uses rounding to nearest to return a <xref:System.Decimal> value with 15 significant digits.</span></span>  
  
 [!code-csharp[System.Convert.ToDecimal#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToDecimal/cs/ToDecimal1.cs#2)]
 [!code-vb[System.Convert.ToDecimal#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToDecimal/vb/ToDecimal1.vb#2)]  
  
   
  
## Examples  
 <span data-ttu-id="377f1-1061">下列範例會將轉換<xref:System.Double>值設定為<xref:System.Decimal>值。</span><span class="sxs-lookup"><span data-stu-id="377f1-1061">The following example converts a <xref:System.Double> value to a <xref:System.Decimal> value.</span></span>  
  
 [!code-cpp[System.Convert Snippets#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#5)]
 [!code-csharp[System.Convert Snippets#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#5)]
 [!code-vb[System.Convert Snippets#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-1062">
            <paramref name="value" /> 大於 <see cref="F:System.Decimal.MaxValue" /> 或小於 <see cref="F:System.Decimal.MinValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1062">
              <paramref name="value" /> is greater than <see cref="F:System.Decimal.MaxValue" /> or less than <see cref="F:System.Decimal.MinValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Double" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As Short) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(short value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1063">要轉換的 16 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1063">The 16-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1064">將指定之 16 位元帶正負號的整數值，轉換為相等的十進位數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1064">Converts the value of the specified 16-bit signed integer to an equivalent decimal number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1065">十進位數字，其與 <paramref name="value" /> 相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1065">A decimal number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-1066">下列範例將以 16 位元帶正負號整數的陣列，轉換<xref:System.Decimal>值。</span><span class="sxs-lookup"><span data-stu-id="377f1-1066">The following example converts an array of 16-bit signed integers to <xref:System.Decimal> values.</span></span>  
  
 [!code-csharp[System.Convert.ToDecimal2#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todecimal2/cs/todecimal1.cs#2)]
 [!code-vb[System.Convert.ToDecimal2#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todecimal2/vb/todecimal1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Decimal" />
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As Integer) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(int value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1067">要轉換的 32 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1067">The 32-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1068">將指定之 32 位元帶正負號的整數值，轉換為相等的十進位數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1068">Converts the value of the specified 32-bit signed integer to an equivalent decimal number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1069">十進位數字，其與 <paramref name="value" /> 相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1069">A decimal number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-1070">下列範例將帶正負號的整數的陣列，轉換<xref:System.Decimal>值。</span><span class="sxs-lookup"><span data-stu-id="377f1-1070">The following example converts an array of signed integers to <xref:System.Decimal> values.</span></span>  
  
 [!code-csharp[System.Convert.ToDecimal2#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todecimal2/cs/todecimal1.cs#3)]
 [!code-vb[System.Convert.ToDecimal2#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todecimal2/vb/todecimal1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Decimal" />
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As Long) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(long value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1071">要轉換的 64 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1071">The 64-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1072">將指定之 64 位元帶正負號的整數值，轉換為相等的十進位數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1072">Converts the value of the specified 64-bit signed integer to an equivalent decimal number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1073">十進位數字，其與 <paramref name="value" /> 相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1073">A decimal number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-1074">下列範例會將轉換<xref:System.Int64>值設定為<xref:System.Decimal>值。</span><span class="sxs-lookup"><span data-stu-id="377f1-1074">The following example converts an <xref:System.Int64> value to a <xref:System.Decimal> value.</span></span>  
  
 [!code-cpp[System.Convert Snippets#10](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#10)]
 [!code-csharp[System.Convert Snippets#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#10)]
 [!code-vb[System.Convert Snippets#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Decimal" />
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As Object) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1075">實作 <see cref="T:System.IConvertible" /> 介面的物件，或是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1075">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1076">將指定之物件的值，轉換為相等的十進位數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1076">Converts the value of the specified object to an equivalent decimal number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1077">與 <paramref name="value" /> 相等的十進位數字；如果 <paramref name="value" /> 為 <see langword="null" />，則為 0 (零)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1077">A decimal number that is equivalent to <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-1078">傳回值是叫用的結果<xref:System.IConvertible.ToDecimal%2A?displayProperty=nameWithType>方法的基礎類型`value`。</span><span class="sxs-lookup"><span data-stu-id="377f1-1078">The return value is the result of invoking the <xref:System.IConvertible.ToDecimal%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-1079">下列範例會嘗試將轉換物件陣列中的每個項目<xref:System.Decimal>值。</span><span class="sxs-lookup"><span data-stu-id="377f1-1079">The following example tries to convert each element in an object array to a <xref:System.Decimal> value.</span></span>  
  
 [!code-csharp[System.Convert.ToDecimal2#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todecimal2/cs/todecimal1.cs#4)]
 [!code-vb[System.Convert.ToDecimal2#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todecimal2/vb/todecimal1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="377f1-1080">
            <paramref name="value" /> 不是使用 <see cref="T:System.Decimal" /> 型別的適當格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1080">
              <paramref name="value" /> is not in an appropriate format for a <see cref="T:System.Decimal" /> type.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="377f1-1081">
            <paramref name="value" /> 未實作 <see cref="T:System.IConvertible" /> 介面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1081">
              <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
          <span data-ttu-id="377f1-1082">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1082">-or-</span>
          </span>
          <span data-ttu-id="377f1-1083">不支援轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1083">The conversion is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-1084">
            <paramref name="value" /> 代表小於 <see cref="F:System.Decimal.MinValue" /> 或大於 <see cref="F:System.Decimal.MaxValue" /> 的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1084">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Decimal" />
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As SByte) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(System::SByte value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1085">要轉換的 8 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1085">The 8-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1086">將指定之 8 位元帶正負號的整數值，轉換為相等的十進位數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1086">Converts the value of the specified 8-bit signed integer to the equivalent decimal number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1087">十進位數字，其與 <paramref name="value" /> 相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1087">A decimal number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-1088">下列範例會將轉換的帶正負號的位元組陣列中每個項目<xref:System.Decimal>值。</span><span class="sxs-lookup"><span data-stu-id="377f1-1088">The following example converts each element in an array of signed bytes to a <xref:System.Decimal> value.</span></span>  
  
 [!code-csharp[System.Convert.ToDecimal2#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todecimal2/cs/todecimal1.cs#5)]
 [!code-vb[System.Convert.ToDecimal2#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todecimal2/vb/todecimal1.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Decimal" />
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As Single) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(float value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1089">要轉換的單精確度浮點數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1089">The single-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1090">將指定之單精確度浮點數的值，轉換為相等的十進位數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1090">Converts the value of the specified single-precision floating-point number to the equivalent decimal number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1091">十進位數字，其與 <paramref name="value" /> 相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1091">A decimal number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-1092"><xref:System.Decimal>這個方法所傳回的值包含七個有效位數的最大值。</span><span class="sxs-lookup"><span data-stu-id="377f1-1092">The <xref:System.Decimal> value returned by this method contains a maximum of seven significant digits.</span></span> <span data-ttu-id="377f1-1093">如果`value`參數包含七個以上的有效位數，它會四捨五入為最接近。</span><span class="sxs-lookup"><span data-stu-id="377f1-1093">If the `value` parameter contains more than seven significant digits, it is rounded using rounding to nearest.</span></span> <span data-ttu-id="377f1-1094">下列範例說明如何<xref:System.Convert.ToDecimal%28System.Single%29>方法會使用傳回接近捨入為<xref:System.Decimal>包含七個有效位數的值。</span><span class="sxs-lookup"><span data-stu-id="377f1-1094">The following example illustrates how the <xref:System.Convert.ToDecimal%28System.Single%29> method uses rounding to nearest to return a <xref:System.Decimal> value with seven significant digits.</span></span>  
  
 [!code-csharp[System.Convert.ToDecimal#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToDecimal/cs/ToDecimal1.cs#1)]
 [!code-vb[System.Convert.ToDecimal#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToDecimal/vb/ToDecimal1.vb#1)]  
  
   
  
## Examples  
 <span data-ttu-id="377f1-1095">下列範例會嘗試將轉換陣列中的每個項目<xref:System.Single>值<xref:System.Decimal>值。</span><span class="sxs-lookup"><span data-stu-id="377f1-1095">The following example tries to convert each element in an array of <xref:System.Single> values to a <xref:System.Decimal> value.</span></span>  
  
 [!code-csharp[System.Convert.ToDecimal2#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todecimal2/cs/todecimal1.cs#6)]
 [!code-vb[System.Convert.ToDecimal2#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todecimal2/vb/todecimal1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-1096">
            <paramref name="value" /> 大於 <see cref="F:System.Decimal.MaxValue" /> 或小於 <see cref="F:System.Decimal.MinValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1096">
              <paramref name="value" /> is greater than <see cref="F:System.Decimal.MaxValue" /> or less than <see cref="F:System.Decimal.MinValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Single" />
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As String) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1097">字串，包含要轉換的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1097">A string that contains a number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1098">將指定之數字的字串表示，轉換為相等的十進位數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1098">Converts the specified string representation of a number to an equivalent decimal number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1099">與 <paramref name="value" /> 中之數字相等的十進位數字；如果 <paramref name="value" /> 為 <see langword="null" />，則為 0 (零)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1099">A decimal number that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-1100">使用<xref:System.Convert.ToDecimal%28System.String%29>方法相當於傳遞`value`至<xref:System.Decimal.Parse%28System.String%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="377f1-1100">Using the <xref:System.Convert.ToDecimal%28System.String%29> method is equivalent to passing `value` to the <xref:System.Decimal.Parse%28System.String%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="377f1-1101">`value` 是使用目前執行緒文化特性的格式化慣例來解譯。</span><span class="sxs-lookup"><span data-stu-id="377f1-1101">`value` is interpreted by using the formatting conventions of the current thread culture.</span></span>  
  
 <span data-ttu-id="377f1-1102">如果您不想處理的例外狀況，如果轉換失敗，您可以呼叫<xref:System.Decimal.TryParse%2A?displayProperty=nameWithType>方法改為。</span><span class="sxs-lookup"><span data-stu-id="377f1-1102">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Decimal.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="377f1-1103">它會傳回<xref:System.Boolean>值，指出轉換成功或失敗。</span><span class="sxs-lookup"><span data-stu-id="377f1-1103">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-1104">下列範例說明使用`ToDecimal`。</span><span class="sxs-lookup"><span data-stu-id="377f1-1104">The following example illustrates the use of `ToDecimal`.</span></span> <span data-ttu-id="377f1-1105">它會嘗試將<xref:System.String>至<xref:System.Decimal>，而且可能在轉換期間可能發生的例外狀況會擲回。</span><span class="sxs-lookup"><span data-stu-id="377f1-1105">It attempts to convert a <xref:System.String> to a <xref:System.Decimal>, and throws the possible exceptions that may arise during the conversion.</span></span>  
  
 [!code-cpp[System.Convert Snippets#15](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#15)]
 [!code-csharp[System.Convert Snippets#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#15)]
 [!code-vb[System.Convert Snippets#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="377f1-1106">
            <paramref name="value" /> 不是有效格式的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1106">
              <paramref name="value" /> is not a number in a valid format.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-1107">
            <paramref name="value" /> 代表小於 <see cref="F:System.Decimal.MinValue" /> 或大於 <see cref="F:System.Decimal.MaxValue" /> 的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1107">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As UShort) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(System::UInt16 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1108">要轉換之 16 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1108">The 16-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1109">將指定之 16 位元不帶正負號的整數值，轉換為相等的十進位數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1109">Converts the value of the specified 16-bit unsigned integer to an equivalent decimal number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1110">與 <paramref name="value" /> 相等的十進位數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1110">The decimal number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-1111">下列範例會將轉換的 16 位元不帶正負號的整數陣列<xref:System.Decimal>值。</span><span class="sxs-lookup"><span data-stu-id="377f1-1111">The following example converts an array of 16-bit unsigned integers to <xref:System.Decimal> values.</span></span>  
  
 [!code-csharp[System.Convert.ToDecimal2#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todecimal2/cs/todecimal1.cs#7)]
 [!code-vb[System.Convert.ToDecimal2#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todecimal2/vb/todecimal1.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Decimal" />
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As UInteger) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(System::UInt32 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1112">要轉換之 32 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1112">The 32-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1113">將指定之 32 位元不帶正負號的整數值，轉換為相等的十進位數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1113">Converts the value of the specified 32-bit unsigned integer to an equivalent decimal number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1114">十進位數字，其與 <paramref name="value" /> 相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1114">A decimal number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-1115">下列範例會將轉換至不帶正負號整數的陣列<xref:System.Decimal>值。</span><span class="sxs-lookup"><span data-stu-id="377f1-1115">The following example converts an array of unsigned integers to <xref:System.Decimal> values.</span></span>  
  
 [!code-csharp[System.Convert.ToDecimal2#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todecimal2/cs/todecimal1.cs#8)]
 [!code-vb[System.Convert.ToDecimal2#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todecimal2/vb/todecimal1.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Decimal" />
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As ULong) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(System::UInt64 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1116">要轉換之 64 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1116">The 64-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1117">將指定之 64 位元不帶正負號的整數值，轉換為相等的十進位數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1117">Converts the value of the specified 64-bit unsigned integer to an equivalent decimal number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1118">十進位數字，其與 <paramref name="value" /> 相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1118">A decimal number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-1119">下列範例會將轉換至不帶正負號長整數的陣列<xref:System.Decimal>值。</span><span class="sxs-lookup"><span data-stu-id="377f1-1119">The following example converts an array of unsigned long integers to <xref:System.Decimal> values.</span></span>  
  
 [!code-csharp[System.Convert.ToDecimal2#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todecimal2/cs/todecimal1.cs#9)]
 [!code-vb[System.Convert.ToDecimal2#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todecimal2/vb/todecimal1.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Decimal" />
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (object value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(object value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As Object, provider As IFormatProvider) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(System::Object ^ value, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1120">實作 <see cref="T:System.IConvertible" /> 介面的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1120">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="377f1-1121">物件，提供特定文化特性格式資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1121">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1122">使用指定之特定文化特性格式資訊，將指定之物件的值轉換為相等的十進位數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1122">Converts the value of the specified object to an equivalent decimal number, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1123">與 <paramref name="value" /> 相等的十進位數字；如果 <paramref name="value" /> 為 <see langword="null" />，則為 0 (零)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1123">A decimal number that is equivalent to <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-1124">傳回值是叫用的結果<xref:System.IConvertible.ToDecimal%2A?displayProperty=nameWithType>方法的基礎類型`value`。</span><span class="sxs-lookup"><span data-stu-id="377f1-1124">The return value is the result of invoking the <xref:System.IConvertible.ToDecimal%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
 <span data-ttu-id="377f1-1125">`provider` 可讓使用者指定的內容的相關特定文化特性的轉換資訊`value`。</span><span class="sxs-lookup"><span data-stu-id="377f1-1125">`provider` enables the user to specify culture-specific conversion information about the contents of `value`.</span></span> <span data-ttu-id="377f1-1126">基底類型忽略`provider`; 不過，如果，可能會使用參數`value`是使用者定義型別可實作<xref:System.IConvertible>介面。</span><span class="sxs-lookup"><span data-stu-id="377f1-1126">The base types ignore `provider`; however, the parameter may be used if `value` is a user-defined type that implements the <xref:System.IConvertible> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-1127">下列範例定義一個實作 `Temperature` 介面的 <xref:System.IConvertible> 類別。</span><span class="sxs-lookup"><span data-stu-id="377f1-1127">The following example defines a `Temperature` class that implements the <xref:System.IConvertible> interface.</span></span>  
  
 [!code-csharp[System.Convert.ToDecimal2#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todecimal2/cs/todecimal2.cs#10)]
 [!code-vb[System.Convert.ToDecimal2#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todecimal2/vb/todecimal2.vb#10)]  
  
 <span data-ttu-id="377f1-1128">下列範例會顯示當`Temperature`物件傳遞為參數，以<xref:System.Convert.ToDecimal%28System.Object%2CSystem.IFormatProvider%29>方法，<xref:System.IConvertible.ToDecimal%2A?displayProperty=nameWithType>實作`Temperature`類別呼叫以執行轉換。</span><span class="sxs-lookup"><span data-stu-id="377f1-1128">The following example shows that when a `Temperature` object is passed as a parameter to the <xref:System.Convert.ToDecimal%28System.Object%2CSystem.IFormatProvider%29> method, the <xref:System.IConvertible.ToDecimal%2A?displayProperty=nameWithType> implementation of the `Temperature` class is called to perform the conversion.</span></span>  
  
 [!code-csharp[System.Convert.ToDecimal2#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todecimal2/cs/todecimal2.cs#11)]
 [!code-vb[System.Convert.ToDecimal2#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todecimal2/vb/todecimal2.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="377f1-1129">
            <paramref name="value" /> 不是使用 <see cref="T:System.Decimal" /> 型別的適當格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1129">
              <paramref name="value" /> is not in an appropriate format for a <see cref="T:System.Decimal" /> type.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="377f1-1130">
            <paramref name="value" /> 未實作 <see cref="T:System.IConvertible" /> 介面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1130">
              <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
          <span data-ttu-id="377f1-1131">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1131">-or-</span>
          </span>
          <span data-ttu-id="377f1-1132">不支援轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1132">The conversion is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-1133">
            <paramref name="value" /> 代表小於 <see cref="F:System.Decimal.MinValue" /> 或大於 <see cref="F:System.Decimal.MaxValue" /> 的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1133">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Decimal" />
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As String, provider As IFormatProvider) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1134">字串，包含要轉換的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1134">A string that contains a number to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="377f1-1135">物件，提供特定文化特性格式資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1135">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1136">使用指定之特定文化特性格式資訊，將指定之數字的字串表示轉換為相等的十進位數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1136">Converts the specified string representation of a number to an equivalent decimal number, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1137">與 <paramref name="value" /> 中之數字相等的十進位數字；如果 <paramref name="value" /> 為 <see langword="null" />，則為 0 (零)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1137">A decimal number that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-1138">傳回值是叫用的結果<xref:System.Decimal.Parse%2A?displayProperty=nameWithType>方法`value`。</span><span class="sxs-lookup"><span data-stu-id="377f1-1138">The return value is the result of invoking the <xref:System.Decimal.Parse%2A?displayProperty=nameWithType> method on `value`.</span></span>  
  
 <span data-ttu-id="377f1-1139">`provider` 是<xref:System.IFormatProvider>取得的執行個體<xref:System.Globalization.NumberFormatInfo>物件。</span><span class="sxs-lookup"><span data-stu-id="377f1-1139">`provider` is an <xref:System.IFormatProvider> instance that obtains a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="377f1-1140"><xref:System.Globalization.NumberFormatInfo>物件提供特定文化特性格式資訊`value`。</span><span class="sxs-lookup"><span data-stu-id="377f1-1140">The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of `value`.</span></span> <span data-ttu-id="377f1-1141">如果`provider`是`null`、<xref:System.Globalization.NumberFormatInfo>會使用目前文化特性。</span><span class="sxs-lookup"><span data-stu-id="377f1-1141">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> for the current culture is used.</span></span>  
  
 <span data-ttu-id="377f1-1142">如果您不想處理的例外狀況，如果轉換失敗，您可以呼叫<xref:System.Decimal.TryParse%2A?displayProperty=nameWithType>方法改為。</span><span class="sxs-lookup"><span data-stu-id="377f1-1142">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Decimal.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="377f1-1143">它會傳回<xref:System.Boolean>值，指出轉換成功或失敗。</span><span class="sxs-lookup"><span data-stu-id="377f1-1143">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-1144">下列範例會嘗試將字串的陣列轉換<xref:System.Decimal>藉由使用<xref:System.Globalization.NumberFormatInfo>代表兩個不同的文化特性的物件。</span><span class="sxs-lookup"><span data-stu-id="377f1-1144">The following example attempts to convert an array of strings to <xref:System.Decimal> values by using <xref:System.Globalization.NumberFormatInfo> objects that represent two different cultures.</span></span>  
  
 [!code-csharp[System.Convert.ToDecimal2#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todecimal2/cs/todecimal3.cs#12)]
 [!code-vb[System.Convert.ToDecimal2#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todecimal2/vb/todecimal3.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="377f1-1145">
            <paramref name="value" /> 不是有效格式的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1145">
              <paramref name="value" /> is not a number in a valid format.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-1146">
            <paramref name="value" /> 代表小於 <see cref="F:System.Decimal.MinValue" /> 或大於 <see cref="F:System.Decimal.MaxValue" /> 的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1146">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToDouble">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="377f1-1147">將指定的值轉換為雙精確度浮點數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1147">Converts a specified value to a double-precision floating-point number.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As Boolean) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(bool value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1148">要轉換的布林值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1148">The Boolean value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1149">將指定的布林值轉換為相等的雙精確度浮點數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1149">Converts the specified Boolean value to the equivalent double-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1150">如果 <paramref name="value" /> 為 <see langword="true" />，則為數字 1，否則為 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1150">The number 1 if <paramref name="value" /> is <see langword="true" />; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-1151">下列範例會將轉換<xref:System.Boolean>值設定為<xref:System.Double>值。</span><span class="sxs-lookup"><span data-stu-id="377f1-1151">The following example converts a <xref:System.Boolean> value to a <xref:System.Double> value.</span></span>  
  
 [!code-cpp[System.Convert Snippets#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#1)]
 [!code-csharp[System.Convert Snippets#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#1)]
 [!code-vb[System.Convert Snippets#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As Byte) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(System::Byte value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1152">要轉換之 8 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1152">The 8-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1153">將指定之 8 位元不帶正負號的整數值，轉換為相等的雙精確度浮點數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1153">Converts the value of the specified 8-bit unsigned integer to the equivalent double-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1154">雙精確度浮點數，其與 <paramref name="value" /> 相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1154">The double-precision floating-point number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-1155">下列範例會將轉換<xref:System.Byte>值設定為<xref:System.Double>值。</span><span class="sxs-lookup"><span data-stu-id="377f1-1155">The following example converts a <xref:System.Byte> value to a <xref:System.Double> value.</span></span>  
  
 [!code-cpp[System.Convert Snippets#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#2)]
 [!code-csharp[System.Convert Snippets#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#2)]
 [!code-vb[System.Convert Snippets#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As Char) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(char value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1156">要轉換的 Unicode 字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1156">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1157">呼叫這個方法一律會擲回 <see cref="T:System.InvalidCastException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1157">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1158">不支援這個轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1158">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="377f1-1159">沒有傳回值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1159">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="377f1-1160">不支援這個轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1160">This conversion is not supported.</span>
          </span>
        </exception>
        <altmember cref="T:System.Char" />
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As DateTime) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(DateTime value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1161">要轉換的日期和時間值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1161">The date and time value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1162">呼叫這個方法一律會擲回 <see cref="T:System.InvalidCastException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1162">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1163">不支援這個轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1163">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="377f1-1164">沒有傳回值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1164">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="377f1-1165">不支援這個轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1165">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As Decimal) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(System::Decimal value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1166">要轉換的十進位數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1166">The decimal number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1167">將指定之十進位數字的值，轉換為相等的雙精確度浮點數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1167">Converts the value of the specified decimal number to an equivalent double-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1168">雙精確度浮點數，其與 <paramref name="value" /> 相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1168">A double-precision floating-point number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-1169">下列範例會將轉換<xref:System.Decimal>值設定為<xref:System.Double>值。</span><span class="sxs-lookup"><span data-stu-id="377f1-1169">The following example converts a <xref:System.Decimal> value to a <xref:System.Double> value.</span></span>  
  
 [!code-cpp[System.Convert Snippets#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#5)]
 [!code-csharp[System.Convert Snippets#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#5)]
 [!code-vb[System.Convert Snippets#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(double value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1170">要傳回的雙精確度浮點數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1170">The double-precision floating-point number to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1171">傳回指定的雙精確度浮點數，不執行實際的轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1171">Returns the specified double-precision floating-point number; no actual conversion is performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1172">傳回未變更的 <paramref name="value" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1172">
              <paramref name="value" /> is returned unchanged.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Double" />
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As Short) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(short value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1173">要轉換的 16 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1173">The 16-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1174">將指定之 16 位元帶正負號的整數值，轉換為相等的雙精確度浮點數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1174">Converts the value of the specified 16-bit signed integer to an equivalent double-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1175">雙精確度浮點數，等於 <paramref name="value" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1175">A double-precision floating-point number equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-1176">下列範例將轉換的 16 位元帶正負號整數到陣列中每個項目<xref:System.Double>值。</span><span class="sxs-lookup"><span data-stu-id="377f1-1176">The following example converts each element in an array of 16-bit signed integers to a <xref:System.Double> value.</span></span>  
  
 [!code-csharp[System.Convert.ToDouble#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todouble/cs/todouble1.cs#1)]
 [!code-vb[System.Convert.ToDouble#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todouble/vb/todouble1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(int value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1177">要轉換的 32 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1177">The 32-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1178">將指定之 32 位元帶正負號的整數值，轉換為相等的雙精確度浮點數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1178">Converts the value of the specified 32-bit signed integer to an equivalent double-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1179">雙精確度浮點數，其與 <paramref name="value" /> 相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1179">A double-precision floating-point number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-1180">下列範例會將轉換<xref:System.Int32>值設定為<xref:System.Double>值。</span><span class="sxs-lookup"><span data-stu-id="377f1-1180">The following example converts an <xref:System.Int32> value to a <xref:System.Double> value.</span></span>  
  
 [!code-cpp[System.Convert Snippets#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#3)]
 [!code-csharp[System.Convert Snippets#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#3)]
 [!code-vb[System.Convert Snippets#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As Long) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(long value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1181">要轉換的 64 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1181">The 64-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1182">將指定之 64 位元帶正負號的整數值，轉換為相等的雙精確度浮點數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1182">Converts the value of the specified 64-bit signed integer to an equivalent double-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1183">雙精確度浮點數，其與 <paramref name="value" /> 相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1183">A double-precision floating-point number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-1184">下列範例會將轉換至帶正負號的長整數陣列中每個項目<xref:System.Double>值。</span><span class="sxs-lookup"><span data-stu-id="377f1-1184">The following example converts each element in an array of signed long integers to a <xref:System.Double> value.</span></span>  
  
 [!code-csharp[System.Convert.ToDouble#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todouble/cs/todouble1.cs#2)]
 [!code-vb[System.Convert.ToDouble#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todouble/vb/todouble1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1185">實作 <see cref="T:System.IConvertible" /> 介面的物件，或是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1185">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1186">將指定之物件的值，轉換為雙精確度浮點數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1186">Converts the value of the specified object to a double-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1187">與 <paramref name="value" /> 相等的雙精確度浮點數；如果 <paramref name="value" /> 為 <see langword="null" />，則為零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1187">A double-precision floating-point number that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-1188">如果`value`不`null`，這個方法會包裝呼叫<xref:System.IConvertible.ToDouble%2A?displayProperty=nameWithType>的基礎類型的實作`value`。</span><span class="sxs-lookup"><span data-stu-id="377f1-1188">If `value` is not `null`, this method wraps a call to the <xref:System.IConvertible.ToDouble%2A?displayProperty=nameWithType> implementation of the underlying type of `value`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-1189">下列範例會嘗試將物件陣列中的每個值<xref:System.Double>。</span><span class="sxs-lookup"><span data-stu-id="377f1-1189">The following example attempts to convert each value in an object array to a <xref:System.Double>.</span></span>  
  
 [!code-csharp[System.Convert.ToDouble#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todouble/cs/todouble1.cs#3)]
 [!code-vb[System.Convert.ToDouble#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todouble/vb/todouble1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="377f1-1190">
            <paramref name="value" /> 不是使用 <see cref="T:System.Double" /> 型別的適當格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1190">
              <paramref name="value" /> is not in an appropriate format for a <see cref="T:System.Double" /> type.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="377f1-1191">
            <paramref name="value" /> 未實作 <see cref="T:System.IConvertible" /> 介面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1191">
              <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
          <span data-ttu-id="377f1-1192">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1192">-or-</span>
          </span>
          <span data-ttu-id="377f1-1193">不支援轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1193">The conversion is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-1194">
            <paramref name="value" /> 代表小於 <see cref="F:System.Double.MinValue" /> 或大於 <see cref="F:System.Double.MaxValue" /> 的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1194">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Double.MinValue" /> or greater than <see cref="F:System.Double.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As SByte) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(System::SByte value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1195">要轉換的 8 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1195">The 8-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1196">將指定之 8 位元帶正負號的整數值，轉換為相等的雙精確度浮點數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1196">Converts the value of the specified 8-bit signed integer to the equivalent double-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1197">與 <paramref name="value" /> 相等的 8 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1197">The 8-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-1198">下列範例會將轉換陣列中的每個項目<xref:System.SByte>值<xref:System.Double>值。</span><span class="sxs-lookup"><span data-stu-id="377f1-1198">The following example converts each element in an array of <xref:System.SByte> values to a <xref:System.Double> value.</span></span>  
  
 [!code-csharp[System.Convert.ToDouble#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todouble/cs/todouble1.cs#4)]
 [!code-vb[System.Convert.ToDouble#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todouble/vb/todouble1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As Single) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(float value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1199">單精確度浮點數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1199">The single-precision floating-point number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1200">將指定之單精確度浮點數的值，轉換為相等的雙精確度浮點數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1200">Converts the value of the specified single-precision floating-point number to an equivalent double-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1201">雙精確度浮點數，其與 <paramref name="value" /> 相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1201">A double-precision floating-point number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-1202">下列範例會將轉換<xref:System.Single>值設定為<xref:System.Double>值。</span><span class="sxs-lookup"><span data-stu-id="377f1-1202">The following example converts a <xref:System.Single> value to a <xref:System.Double> value.</span></span>  
  
 [!code-cpp[System.Convert Snippets#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#6)]
 [!code-csharp[System.Convert Snippets#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#6)]
 [!code-vb[System.Convert Snippets#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Single" />
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As String) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1203">字串，包含要轉換的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1203">A string that contains the number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1204">將指定之數字的字串表示，轉換為相等的雙精確度浮點數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1204">Converts the specified string representation of a number to an equivalent double-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1205">與 <paramref name="value" /> 中之數字相等的雙精確度浮點數；如果 <paramref name="value" /> 為 <see langword="null" />，則為 0 (零)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1205">A double-precision floating-point number that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-1206">使用<xref:System.Convert.ToDouble%28System.String%29>方法相當於傳遞`value`至<xref:System.Double.Parse%28System.String%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="377f1-1206">Using the <xref:System.Convert.ToDouble%28System.String%29> method is equivalent to passing `value` to the <xref:System.Double.Parse%28System.String%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="377f1-1207">`value` 是使用目前執行緒文化特性的格式化慣例來解譯。</span><span class="sxs-lookup"><span data-stu-id="377f1-1207">`value` is interpreted by using the formatting conventions of the current thread culture.</span></span>  
  
 <span data-ttu-id="377f1-1208">如果您不想處理的例外狀況，如果轉換失敗，您可以呼叫<xref:System.Double.TryParse%2A?displayProperty=nameWithType>方法改為。</span><span class="sxs-lookup"><span data-stu-id="377f1-1208">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Double.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="377f1-1209">它會傳回<xref:System.Boolean>值，指出轉換成功或失敗。</span><span class="sxs-lookup"><span data-stu-id="377f1-1209">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-1210">下列範例會嘗試將數字的字串陣列中每個項目<xref:System.Double>。</span><span class="sxs-lookup"><span data-stu-id="377f1-1210">The following example attempts to convert each element in an array of numeric strings to a <xref:System.Double>.</span></span> <span data-ttu-id="377f1-1211">這個範例的輸出是從其目前的文化特性為 ZH-TW 的系統。</span><span class="sxs-lookup"><span data-stu-id="377f1-1211">The example's output is from a system whose current culture is en-US.</span></span>  
  
 [!code-csharp[System.Convert.ToDouble#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todouble/cs/example8.cs#8)]
 [!code-vb[System.Convert.ToDouble#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todouble/vb/example8.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="377f1-1212">
            <paramref name="value" /> 不是有效格式的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1212">
              <paramref name="value" /> is not a number in a valid format.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-1213">
            <paramref name="value" /> 代表小於 <see cref="F:System.Double.MinValue" /> 或大於 <see cref="F:System.Double.MaxValue" /> 的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1213">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Double.MinValue" /> or greater than <see cref="F:System.Double.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As UShort) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(System::UInt16 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1214">要轉換之 16 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1214">The 16-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1215">將指定之 16 位元不帶正負號的整數值，轉換為相等的雙精確度浮點數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1215">Converts the value of the specified 16-bit unsigned integer to the equivalent double-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1216">雙精確度浮點數，其與 <paramref name="value" /> 相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1216">A double-precision floating-point number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-1217">下列範例會將轉換陣列中的每個項目<xref:System.UInt16>值<xref:System.Double>值。</span><span class="sxs-lookup"><span data-stu-id="377f1-1217">The following example converts each element in an array of <xref:System.UInt16> values to a <xref:System.Double> value.</span></span>  
  
 [!code-csharp[System.Convert.ToDouble#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todouble/cs/todouble1.cs#5)]
 [!code-vb[System.Convert.ToDouble#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todouble/vb/todouble1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As UInteger) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(System::UInt32 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1218">要轉換之 32 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1218">The 32-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1219">將指定之 32 位元不帶正負號的整數值，轉換為相等的雙精確度浮點數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1219">Converts the value of the specified 32-bit unsigned integer to an equivalent double-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1220">雙精確度浮點數，其與 <paramref name="value" /> 相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1220">A double-precision floating-point number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-1221">下列範例會將轉換陣列中的每個項目<xref:System.UInt32>值<xref:System.Double>值。</span><span class="sxs-lookup"><span data-stu-id="377f1-1221">The following example converts each element in an array of <xref:System.UInt32> values to a <xref:System.Double> value.</span></span>  
  
 [!code-csharp[System.Convert.ToDouble#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todouble/cs/todouble1.cs#6)]
 [!code-vb[System.Convert.ToDouble#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todouble/vb/todouble1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As ULong) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(System::UInt64 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1222">要轉換之 64 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1222">The 64-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1223">將指定之 64 位元不帶正負號的整數值，轉換為相等的雙精確度浮點數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1223">Converts the value of the specified 64-bit unsigned integer to an equivalent double-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1224">雙精確度浮點數，其與 <paramref name="value" /> 相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1224">A double-precision floating-point number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-1225">下列範例會將轉換陣列中的每個項目<xref:System.UInt64>值<xref:System.Double>值。</span><span class="sxs-lookup"><span data-stu-id="377f1-1225">The following example converts each element in an array of <xref:System.UInt64> values to a <xref:System.Double> value.</span></span>  
  
 [!code-csharp[System.Convert.ToDouble#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todouble/cs/todouble1.cs#7)]
 [!code-vb[System.Convert.ToDouble#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todouble/vb/todouble1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (object value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(object value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As Object, provider As IFormatProvider) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(System::Object ^ value, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1226">實作 <see cref="T:System.IConvertible" /> 介面的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1226">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="377f1-1227">物件，提供特定文化特性格式資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1227">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1228">使用指定之特定文化特性格式資訊，將指定之物件的值轉換為雙精確度浮點數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1228">Converts the value of the specified object to an double-precision floating-point number, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1229">與 <paramref name="value" /> 相等的雙精確度浮點數；如果 <paramref name="value" /> 為 <see langword="null" />，則為零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1229">A double-precision floating-point number that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-1230">傳回值是叫用的結果<xref:System.IConvertible.ToDouble%2A?displayProperty=nameWithType>方法的基礎類型`value`。</span><span class="sxs-lookup"><span data-stu-id="377f1-1230">The return value is the result of invoking the <xref:System.IConvertible.ToDouble%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
 <span data-ttu-id="377f1-1231">`provider` 可讓使用者指定的內容的相關特定文化特性的轉換資訊`value`。</span><span class="sxs-lookup"><span data-stu-id="377f1-1231">`provider` enables the user to specify culture-specific conversion information about the contents of `value`.</span></span> <span data-ttu-id="377f1-1232">例如，如果`value`是<xref:System.String>表示數字，`provider`可能會提供用來代表該數字的標記法的特定文化特性資訊。</span><span class="sxs-lookup"><span data-stu-id="377f1-1232">For example, if `value` is a <xref:System.String> that represents a number, `provider` could supply culture-specific information about the notation used to represent that number.</span></span>  
  
 <span data-ttu-id="377f1-1233">基底類型忽略`provider`; 不過，如果，可能會使用參數`value`是使用者定義型別可實作<xref:System.IConvertible>介面。</span><span class="sxs-lookup"><span data-stu-id="377f1-1233">The base types ignore `provider`; however, the parameter may be used if `value` is a user-defined type that implements the <xref:System.IConvertible> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-1234">下列範例會定義一個類別，實作<xref:System.IConvertible>和類別可實作<xref:System.IFormatProvider>。</span><span class="sxs-lookup"><span data-stu-id="377f1-1234">The following example defines a class that implements <xref:System.IConvertible> and a class that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="377f1-1235">實作類別的物件<xref:System.IConvertible>保存陣列<xref:System.Double>值。</span><span class="sxs-lookup"><span data-stu-id="377f1-1235">Objects of the class that implements <xref:System.IConvertible> hold an array of <xref:System.Double> values.</span></span> <span data-ttu-id="377f1-1236">每個類別的物件傳遞至`ToDouble`方法。</span><span class="sxs-lookup"><span data-stu-id="377f1-1236">An object of each class is passed to the `ToDouble` method.</span></span> <span data-ttu-id="377f1-1237">這個方法會傳回一維陣列的平均<xref:System.Double>，使用值實作的物件<xref:System.IFormatProvider>來判斷如何計算平均。</span><span class="sxs-lookup"><span data-stu-id="377f1-1237">This method returns an average of the array of <xref:System.Double> values, using the object that implements <xref:System.IFormatProvider> to determine how to calculate the average.</span></span>  
  
 [!code-cpp[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/CPP/objectifp.cpp#1)]
 [!code-csharp[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/CS/objectifp.cs#1)]
 [!code-vb[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/VB/objectifp.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="377f1-1238">
            <paramref name="value" /> 不是使用 <see cref="T:System.Double" /> 型別的適當格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1238">
              <paramref name="value" /> is not in an appropriate format for a <see cref="T:System.Double" /> type.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="377f1-1239">
            <paramref name="value" /> 未實作 <see cref="T:System.IConvertible" /> 介面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1239">
              <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-1240">
            <paramref name="value" /> 代表小於 <see cref="F:System.Double.MinValue" /> 或大於 <see cref="F:System.Double.MaxValue" /> 的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1240">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Double.MinValue" /> or greater than <see cref="F:System.Double.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As String, provider As IFormatProvider) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1241">字串，包含要轉換的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1241">A string that contains the number to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="377f1-1242">物件，提供特定文化特性格式資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1242">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1243">使用指定之特定文化特性格式資訊，將指定之數字的字串表示轉換為相等的雙精確度浮點數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1243">Converts the specified string representation of a number to an equivalent double-precision floating-point number, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1244">與 <paramref name="value" /> 中之數字相等的雙精確度浮點數；如果 <paramref name="value" /> 為 <see langword="null" />，則為 0 (零)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1244">A double-precision floating-point number that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-1245">傳回值是叫用的結果<xref:System.Double.Parse%2A?displayProperty=nameWithType>方法`value`。</span><span class="sxs-lookup"><span data-stu-id="377f1-1245">The return value is the result of invoking the <xref:System.Double.Parse%2A?displayProperty=nameWithType> method on `value`.</span></span>  
  
 <span data-ttu-id="377f1-1246">`provider` 是<xref:System.IFormatProvider>取得的執行個體<xref:System.Globalization.NumberFormatInfo>物件。</span><span class="sxs-lookup"><span data-stu-id="377f1-1246">`provider` is an <xref:System.IFormatProvider> instance that obtains a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="377f1-1247"><xref:System.Globalization.NumberFormatInfo>物件提供特定文化特性格式資訊`value`。</span><span class="sxs-lookup"><span data-stu-id="377f1-1247">The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of `value`.</span></span> <span data-ttu-id="377f1-1248">如果`provider`是`null`、<xref:System.Globalization.NumberFormatInfo>會使用目前文化特性。</span><span class="sxs-lookup"><span data-stu-id="377f1-1248">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> for the current culture is used.</span></span>  
  
 <span data-ttu-id="377f1-1249">如果您不想處理的例外狀況，如果轉換失敗，您可以呼叫<xref:System.Double.TryParse%2A?displayProperty=nameWithType>方法改為。</span><span class="sxs-lookup"><span data-stu-id="377f1-1249">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Double.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="377f1-1250">它會傳回<xref:System.Boolean>值，指出轉換成功或失敗。</span><span class="sxs-lookup"><span data-stu-id="377f1-1250">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-1251">下列範例會將轉換的字串表示法<xref:System.Double>值與`ToDouble`方法，使用<xref:System.IFormatProvider>物件。</span><span class="sxs-lookup"><span data-stu-id="377f1-1251">The following example converts string representations of <xref:System.Double> values with the `ToDouble` method, using an <xref:System.IFormatProvider> object.</span></span>  
  
 [!code-csharp[System.Convert.ToReals_String#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToReals_String/CS/todouble.cs#2)]
 [!code-vb[System.Convert.ToReals_String#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToReals_String/VB/todouble.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="377f1-1252">
            <paramref name="value" /> 不是有效格式的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1252">
              <paramref name="value" /> is not a number in a valid format.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-1253">
            <paramref name="value" /> 代表小於 <see cref="F:System.Double.MinValue" /> 或大於 <see cref="F:System.Double.MaxValue" /> 的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1253">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Double.MinValue" /> or greater than <see cref="F:System.Double.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToInt16">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="377f1-1254">將指定的值轉換為 16 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1254">Converts a specified value to a 16-bit signed integer.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As Boolean) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(bool value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1255">要轉換的布林值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1255">The Boolean value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1256">將指定的布林值轉換為相等的 16 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1256">Converts the specified Boolean value to the equivalent 16-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1257">如果 <paramref name="value" /> 為 <see langword="true" />，則為數字 1，否則為 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1257">The number 1 if <paramref name="value" /> is <see langword="true" />; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-1258">下列範例會將轉換的布林值`true`和`false`至<xref:System.Int16>值。</span><span class="sxs-lookup"><span data-stu-id="377f1-1258">The following example converts the Boolean values `true` and `false` to <xref:System.Int16> values.</span></span>  
  
 [!code-csharp[System.Convert.ToInt16#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint16/cs/toint16_1.cs#1)]
 [!code-vb[System.Convert.ToInt16#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint16/vb/toint16_1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As Byte) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(System::Byte value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1259">要轉換之 8 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1259">The 8-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1260">將指定的 8 位元不帶正負號的整數值，轉換為相等的 16 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1260">Converts the value of the specified 8-bit unsigned integer to the equivalent 16-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1261">與 <paramref name="value" /> 相等的 16 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1261">A 16-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-1262">下列範例會將轉換陣列中的每個項目<xref:System.Byte>16 位元帶正負號的整數值。</span><span class="sxs-lookup"><span data-stu-id="377f1-1262">The following example converts each element in an array of <xref:System.Byte> values to a 16-bit signed integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt16#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint16/cs/toint16_1.cs#2)]
 [!code-vb[System.Convert.ToInt16#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint16/vb/toint16_1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As Char) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(char value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1263">要轉換的 Unicode 字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1263">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1264">將指定的 Unicode 字元值轉換為相等的 16 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1264">Converts the value of the specified Unicode character to the equivalent 16-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1265">與 <paramref name="value" /> 相等的 16 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1265">A 16-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-1266">下列範例會嘗試將陣列中的每個項目<xref:System.Char>16 位元帶正負號的整數值。</span><span class="sxs-lookup"><span data-stu-id="377f1-1266">The following example attempts to convert each element in an array of <xref:System.Char> values to a 16-bit signed integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt16#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint16/cs/toint16_1.cs#3)]
 [!code-vb[System.Convert.ToInt16#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint16/vb/toint16_1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-1267">
            <paramref name="value" /> 大於 <see cref="F:System.Int16.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1267">
              <paramref name="value" /> is greater than <see cref="F:System.Int16.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As DateTime) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(DateTime value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1268">要轉換的日期和時間值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1268">The date and time value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1269">呼叫這個方法一律會擲回 <see cref="T:System.InvalidCastException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1269">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1270">不支援這個轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1270">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="377f1-1271">沒有傳回值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1271">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="377f1-1272">不支援這個轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1272">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As Decimal) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(System::Decimal value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1273">要轉換的十進位數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1273">The decimal number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1274">將指定之十進位數字的值，轉換為相等的 16 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1274">Converts the value of the specified decimal number to an equivalent 16-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1275">
            <paramref name="value" />，捨入至最接近的 16 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1275">
              <paramref name="value" />, rounded to the nearest 16-bit signed integer.</span>
          </span>
          <span data-ttu-id="377f1-1276">如果 <paramref name="value" /> 介於兩個整數正中間時，則傳回偶數；也就是 4.5 會轉換為 4，5.5 會轉換為 6。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1276">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-1277">下列範例會嘗試將陣列中的每個項目<xref:System.Decimal>16 位元帶正負號的整數值。</span><span class="sxs-lookup"><span data-stu-id="377f1-1277">The following example attempts to convert each element in an array of <xref:System.Decimal> values to a 16-bit signed integer.</span></span> <span data-ttu-id="377f1-1278">該範例會說明的任何小數部分<xref:System.Decimal>執行轉換時，會捨入值。</span><span class="sxs-lookup"><span data-stu-id="377f1-1278">The example illustrates that any fractional part of a <xref:System.Decimal> value is rounded when performing the conversion.</span></span>  
  
 [!code-csharp[System.Convert.ToInt16#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint16/cs/toint16_1.cs#4)]
 [!code-vb[System.Convert.ToInt16#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint16/vb/toint16_1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-1279">
            <paramref name="value" /> 大於 <see cref="F:System.Int16.MaxValue" /> 或小於 <see cref="F:System.Int16.MinValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1279">
              <paramref name="value" /> is greater than <see cref="F:System.Int16.MaxValue" /> or less than <see cref="F:System.Int16.MinValue" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As Double) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(double value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1280">要轉換的雙精確度浮點數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1280">The double-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1281">將指定之雙精確度浮點數的值，轉換為相等的 16 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1281">Converts the value of the specified double-precision floating-point number to an equivalent 16-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1282">
            <paramref name="value" />，捨入至最接近的 16 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1282">
              <paramref name="value" />, rounded to the nearest 16-bit signed integer.</span>
          </span>
          <span data-ttu-id="377f1-1283">如果 <paramref name="value" /> 介於兩個整數正中間時，則傳回偶數；也就是 4.5 會轉換為 4，5.5 會轉換為 6。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1283">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-1284">下列範例會將轉換陣列中的每個項目<xref:System.Double>16 位元帶正負號的整數值。</span><span class="sxs-lookup"><span data-stu-id="377f1-1284">The following example converts each element in an array of <xref:System.Double> values to a 16-bit signed integer.</span></span> <span data-ttu-id="377f1-1285">該範例會說明的任何小數部分<xref:System.Double>值捨入前執行轉換。</span><span class="sxs-lookup"><span data-stu-id="377f1-1285">The example illustrates that any fractional part of a <xref:System.Double> value is rounded before performing the conversion.</span></span>  
  
 [!code-csharp[System.Convert.ToInt16#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint16/cs/toint16_1.cs#5)]
 [!code-vb[System.Convert.ToInt16#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint16/vb/toint16_1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-1286">
            <paramref name="value" /> 大於 <see cref="F:System.Int16.MaxValue" /> 或小於 <see cref="F:System.Int16.MinValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1286">
              <paramref name="value" /> is greater than <see cref="F:System.Int16.MaxValue" /> or less than <see cref="F:System.Int16.MinValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Double" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As Short) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(short value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1287">傳回 16 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1287">The 16-bit signed integer to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1288">傳回指定的 16 位元帶正負號的整數；不會執行實際的轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1288">Returns the specified 16-bit signed integer; no actual conversion is performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1289">傳回未變更的 <paramref name="value" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1289">
              <paramref name="value" /> is returned unchanged.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As Integer) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(int value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1290">要轉換的 32 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1290">The 32-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1291">將指定的 32 位元帶正負號的整數值轉換為相等的 16 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1291">Converts the value of the specified 32-bit signed integer to an equivalent 16-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1292">16 位元帶正負號的整數，與 <paramref name="value" /> 相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1292">The 16-bit signed integer equivalent of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-1293">下列範例會嘗試將整數的陣列中每個項目轉換成 16 位元帶正負號的整數。</span><span class="sxs-lookup"><span data-stu-id="377f1-1293">The following example attempts to convert each element in an array of integers to a 16-bit signed integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt16#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint16/cs/toint16_1.cs#6)]
 [!code-vb[System.Convert.ToInt16#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint16/vb/toint16_1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-1294">
            <paramref name="value" /> 大於 <see cref="F:System.Int16.MaxValue" /> 或小於 <see cref="F:System.Int16.MinValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1294">
              <paramref name="value" /> is greater than <see cref="F:System.Int16.MaxValue" /> or less than <see cref="F:System.Int16.MinValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As Long) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(long value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1295">要轉換的 64 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1295">The 64-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1296">將指定的 64 位元帶正負號的整數值轉換成對等的 16 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1296">Converts the value of the specified 64-bit signed integer to an equivalent 16-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1297">與 <paramref name="value" /> 相等的 16 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1297">A 16-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-1298">下列範例會嘗試將長整數的陣列中每個項目轉換成 16 位元帶正負號的整數。</span><span class="sxs-lookup"><span data-stu-id="377f1-1298">The following example attempts to convert each element in an array of long integers to a 16-bit signed integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt16#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint16/cs/toint16_1.cs#7)]
 [!code-vb[System.Convert.ToInt16#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint16/vb/toint16_1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-1299">
            <paramref name="value" /> 大於 <see cref="F:System.Int16.MaxValue" /> 或小於 <see cref="F:System.Int16.MinValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1299">
              <paramref name="value" /> is greater than <see cref="F:System.Int16.MaxValue" /> or less than <see cref="F:System.Int16.MinValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As Object) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1300">實作 <see cref="T:System.IConvertible" /> 介面的物件，或是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1300">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1301">將指定之物件的值，轉換為 16 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1301">Converts the value of the specified object to a 16-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1302">與 <paramref name="value" /> 相等的 16 位元帶正負號的整數；如果 <paramref name="value" /> 為 <see langword="null" />，則為零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1302">A 16-bit signed integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-1303">如果`value`不`null`，這個方法會包裝呼叫<xref:System.IConvertible.ToInt16%2A?displayProperty=nameWithType>的基礎類型的實作`value`。</span><span class="sxs-lookup"><span data-stu-id="377f1-1303">If `value` is not `null`, this method wraps a call to the <xref:System.IConvertible.ToInt16%2A?displayProperty=nameWithType> implementation of the underlying type of `value`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-1304">下列範例會嘗試將物件陣列中的每個項目轉換成 16 位元帶正負號的整數。</span><span class="sxs-lookup"><span data-stu-id="377f1-1304">The following example attempts to convert each element in an object array to a 16-bit signed integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt16#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint16/cs/toint16_1.cs#8)]
 [!code-vb[System.Convert.ToInt16#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint16/vb/toint16_1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="377f1-1305">
            <paramref name="value" /> 不是使用 <see cref="T:System.Int16" /> 型別的適當格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1305">
              <paramref name="value" /> is not in an appropriate format for an <see cref="T:System.Int16" /> type.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="377f1-1306">
            <paramref name="value" /> 未實作 <see cref="T:System.IConvertible" /> 介面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1306">
              <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
          <span data-ttu-id="377f1-1307">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1307">-or-</span>
          </span>
          <span data-ttu-id="377f1-1308">不支援轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1308">The conversion is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-1309">
            <paramref name="value" /> 代表小於 <see cref="F:System.Int16.MinValue" /> 或大於 <see cref="F:System.Int16.MaxValue" /> 的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1309">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As SByte) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(System::SByte value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1310">要轉換的 8 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1310">The 8-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1311">將指定的 8 位元帶正負號的整數值，轉換為相等的 16 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1311">Converts the value of the specified 8-bit signed integer to the equivalent 16-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1312">與 <paramref name="value" /> 相等的 8 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1312">A 8-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-1313">下列範例會將帶正負號的位元組陣列中每個項目轉換成 16 位元帶正負號的整數。</span><span class="sxs-lookup"><span data-stu-id="377f1-1313">The following example converts each element in an array of signed bytes to a 16-bit signed integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt16#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint16/cs/toint16_1.cs#9)]
 [!code-vb[System.Convert.ToInt16#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint16/vb/toint16_1.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As Single) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(float value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1314">要轉換的單精確度浮點數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1314">The single-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1315">將指定之單精確度浮點數的值，轉換為相等的 16 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1315">Converts the value of the specified single-precision floating-point number to an equivalent 16-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1316">
            <paramref name="value" />，捨入至最接近的 16 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1316">
              <paramref name="value" />, rounded to the nearest 16-bit signed integer.</span>
          </span>
          <span data-ttu-id="377f1-1317">如果 <paramref name="value" /> 介於兩個整數正中間時，則傳回偶數；也就是 4.5 會轉換為 4，5.5 會轉換為 6。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1317">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-1318">下列範例會嘗試將陣列中的每個項目<xref:System.Single>16 位元帶正負號的整數值。</span><span class="sxs-lookup"><span data-stu-id="377f1-1318">The following example attempts to convert each element in an array of <xref:System.Single> values to a 16-bit signed integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt16#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint16/cs/toint16_1.cs#10)]
 [!code-vb[System.Convert.ToInt16#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint16/vb/toint16_1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-1319">
            <paramref name="value" /> 大於 <see cref="F:System.Int16.MaxValue" /> 或小於 <see cref="F:System.Int16.MinValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1319">
              <paramref name="value" /> is greater than <see cref="F:System.Int16.MaxValue" /> or less than <see cref="F:System.Int16.MinValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Single" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As String) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1320">字串，包含要轉換的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1320">A string that contains the number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1321">將指定之數字的字串表示，轉換為相等的 16 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1321">Converts the specified string representation of a number to an equivalent 16-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1322">與 <paramref name="value" /> 中之數字相等的 16 位元帶正負號的整數；如果 <paramref name="value" /> 為 <see langword="null" />，則為 0 (零)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1322">A 16-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-1323">使用<xref:System.Convert.ToInt16%28System.String%29>方法相當於傳遞`value`至<xref:System.Int16.Parse%28System.String%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="377f1-1323">Using the <xref:System.Convert.ToInt16%28System.String%29> method is equivalent to passing `value` to the <xref:System.Int16.Parse%28System.String%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="377f1-1324">`value` 是使用目前執行緒文化特性的格式化慣例來解譯。</span><span class="sxs-lookup"><span data-stu-id="377f1-1324">`value` is interpreted by using the formatting conventions of the current thread culture.</span></span>  
  
 <span data-ttu-id="377f1-1325">如果您不想處理的例外狀況，如果轉換失敗，您可以呼叫<xref:System.Int16.TryParse%2A?displayProperty=nameWithType>方法改為。</span><span class="sxs-lookup"><span data-stu-id="377f1-1325">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Int16.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="377f1-1326">它會傳回<xref:System.Boolean>值，指出轉換成功或失敗。</span><span class="sxs-lookup"><span data-stu-id="377f1-1326">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-1327">下列範例會將轉換的 16 位元整數的字串表示`ToInt16`方法，使用預設格式。</span><span class="sxs-lookup"><span data-stu-id="377f1-1327">The following example converts string representations of 16-bit integers with the `ToInt16` method, using default formatting.</span></span>  
  
 [!code-cpp[System.Convert.ToSInts_String#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToSInts_String/CPP/toint16.cpp#3)]
 [!code-csharp[System.Convert.ToSInts_String#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToSInts_String/CS/toint16.cs#3)]
 [!code-vb[System.Convert.ToSInts_String#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToSInts_String/VB/toint16.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="377f1-1328">
            <paramref name="value" /> 不是由選擇性正負號之後跟隨一連串數字 (0 到 9) 所組成。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1328">
              <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-1329">
            <paramref name="value" /> 代表小於 <see cref="F:System.Int16.MinValue" /> 或大於 <see cref="F:System.Int16.MaxValue" /> 的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1329">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Int16.Parse(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As UShort) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(System::UInt16 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1330">要轉換之 16 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1330">The 16-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1331">將指定的 16 位元不帶正負號的整數值，轉換為相等的 16 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1331">Converts the value of the specified 16-bit unsigned integer to the equivalent 16-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1332">與 <paramref name="value" /> 相等的 16 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1332">A 16-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-1333">下列範例會嘗試將不帶正負號的 16 位元整數的陣列中每個項目轉換成 16 位元帶正負號的整數。</span><span class="sxs-lookup"><span data-stu-id="377f1-1333">The following example attempts to convert each element in an array of unsigned 16-bit integers to a 16-bit signed integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt16#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint16/cs/toint16_1.cs#11)]
 [!code-vb[System.Convert.ToInt16#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint16/vb/toint16_1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-1334">
            <paramref name="value" /> 大於 <see cref="F:System.Int16.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1334">
              <paramref name="value" /> is greater than <see cref="F:System.Int16.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As UInteger) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(System::UInt32 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1335">要轉換之 32 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1335">The 32-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1336">將指定的 32 位元不帶正負號整數的值，轉換為相等的 16 位元帶正負號整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1336">Converts the value of the specified 32-bit unsigned integer to an equivalent 16-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1337">與 <paramref name="value" /> 相等的 16 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1337">A 16-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-1338">下列範例會嘗試將不帶正負號整數的陣列中每個項目轉換成 16 位元帶正負號的整數。</span><span class="sxs-lookup"><span data-stu-id="377f1-1338">The following example attempts to convert each element in an array of unsigned integers to a 16-bit signed integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt16#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint16/cs/toint16_1.cs#12)]
 [!code-vb[System.Convert.ToInt16#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint16/vb/toint16_1.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-1339">
            <paramref name="value" /> 大於 <see cref="F:System.Int16.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1339">
              <paramref name="value" /> is greater than <see cref="F:System.Int16.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As ULong) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(System::UInt64 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1340">要轉換之 64 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1340">The 64-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1341">將指定的 64 位元不帶正負號整數的值，轉換為相等的 16 位元帶正負號整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1341">Converts the value of the specified 64-bit unsigned integer to an equivalent 16-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1342">與 <paramref name="value" /> 相等的 16 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1342">A 16-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-1343">下列範例會嘗試將不帶正負號的長整數的陣列中每個項目轉換成 16 位元帶正負號的整數。</span><span class="sxs-lookup"><span data-stu-id="377f1-1343">The following example attempts to convert each element in an array of unsigned long integers to a 16-bit signed integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt16#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint16/cs/toint16_1.cs#13)]
 [!code-vb[System.Convert.ToInt16#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint16/vb/toint16_1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-1344">
            <paramref name="value" /> 大於 <see cref="F:System.Int16.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1344">
              <paramref name="value" /> is greater than <see cref="F:System.Int16.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (object value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(object value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As Object, provider As IFormatProvider) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(System::Object ^ value, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1345">實作 <see cref="T:System.IConvertible" /> 介面的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1345">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="377f1-1346">物件，提供特定文化特性格式資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1346">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1347">使用指定之特定文化特性格式資訊，將指定之物件的值轉換為 16 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1347">Converts the value of the specified object to a 16-bit signed integer, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1348">與 <paramref name="value" /> 相等的 16 位元帶正負號的整數；如果 <paramref name="value" /> 為 <see langword="null" />，則為零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1348">A 16-bit signed integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-1349">`provider` 可讓使用者指定的內容的相關特定文化特性的轉換資訊`value`。</span><span class="sxs-lookup"><span data-stu-id="377f1-1349">`provider` enables the user to specify culture-specific conversion information about the contents of `value`.</span></span> <span data-ttu-id="377f1-1350">例如，如果`value`是<xref:System.String>表示數字，`provider`可能會提供用來代表該數字的標記法的特定文化特性資訊。</span><span class="sxs-lookup"><span data-stu-id="377f1-1350">For example, if `value` is a <xref:System.String> that represents a number, `provider` could supply culture-specific information about the notation used to represent that number.</span></span>  
  
 <span data-ttu-id="377f1-1351">基底類型忽略`provider`; 不過，如果，可能會使用參數`value`是使用者定義型別可實作<xref:System.IConvertible>介面。</span><span class="sxs-lookup"><span data-stu-id="377f1-1351">The base types ignore `provider`; however, the parameter may be used if `value` is a user-defined type that implements the <xref:System.IConvertible> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-1352">下列範例會定義一個類別，實作<xref:System.IConvertible>和類別可實作<xref:System.IFormatProvider>。</span><span class="sxs-lookup"><span data-stu-id="377f1-1352">The following example defines a class that implements <xref:System.IConvertible> and a class that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="377f1-1353">實作類別的物件<xref:System.IConvertible>保存陣列<xref:System.Double>值。</span><span class="sxs-lookup"><span data-stu-id="377f1-1353">Objects of the class that implements <xref:System.IConvertible> hold an array of <xref:System.Double> values.</span></span> <span data-ttu-id="377f1-1354">每個類別的物件傳遞至`ToInt16`方法。</span><span class="sxs-lookup"><span data-stu-id="377f1-1354">An object of each class is passed to the `ToInt16` method.</span></span> <span data-ttu-id="377f1-1355">這個方法會傳回一維陣列的平均<xref:System.Double>，使用值實作的物件<xref:System.IFormatProvider>來判斷如何計算平均。</span><span class="sxs-lookup"><span data-stu-id="377f1-1355">This method returns an average of the array of <xref:System.Double> values, using the object that implements <xref:System.IFormatProvider> to determine how to calculate the average.</span></span>  
  
 [!code-cpp[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/CPP/objectifp.cpp#1)]
 [!code-csharp[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/CS/objectifp.cs#1)]
 [!code-vb[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/VB/objectifp.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="377f1-1356">
            <paramref name="value" /> 不是使用 <see cref="T:System.Int16" /> 型別的適當格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1356">
              <paramref name="value" /> is not in an appropriate format for an <see cref="T:System.Int16" /> type.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="377f1-1357">
            <paramref name="value" /> 沒有實作 <see cref="T:System.IConvertible" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1357">
              <paramref name="value" /> does not implement <see cref="T:System.IConvertible" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-1358">
            <paramref name="value" /> 代表小於 <see cref="F:System.Int16.MinValue" /> 或大於 <see cref="F:System.Int16.MaxValue" /> 的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1358">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As String, provider As IFormatProvider) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1359">字串，包含要轉換的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1359">A string that contains the number to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="377f1-1360">物件，提供特定文化特性格式資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1360">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1361">使用指定之特定文化特性格式資訊，將指定之數字的字串表示轉換為相等的 16 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1361">Converts the specified string representation of a number to an equivalent 16-bit signed integer, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1362">與 <paramref name="value" /> 中之數字相等的 16 位元帶正負號的整數；如果 <paramref name="value" /> 為 <see langword="null" />，則為 0 (零)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1362">A 16-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-1363">`provider` 是<xref:System.IFormatProvider>取得的執行個體<xref:System.Globalization.NumberFormatInfo>物件。</span><span class="sxs-lookup"><span data-stu-id="377f1-1363">`provider` is an <xref:System.IFormatProvider> instance that obtains a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="377f1-1364"><xref:System.Globalization.NumberFormatInfo>物件提供特定文化特性格式資訊`value`。</span><span class="sxs-lookup"><span data-stu-id="377f1-1364">The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of `value`.</span></span> <span data-ttu-id="377f1-1365">如果`provider`是`null`、<xref:System.Globalization.NumberFormatInfo>會使用目前文化特性。</span><span class="sxs-lookup"><span data-stu-id="377f1-1365">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> for the current culture is used.</span></span>  
  
 <span data-ttu-id="377f1-1366">如果您不想處理的例外狀況，如果轉換失敗，您可以呼叫<xref:System.Int16.TryParse%2A?displayProperty=nameWithType>方法改為。</span><span class="sxs-lookup"><span data-stu-id="377f1-1366">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Int16.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="377f1-1367">它會傳回<xref:System.Boolean>值，指出轉換成功或失敗。</span><span class="sxs-lookup"><span data-stu-id="377f1-1367">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-1368">下列範例會將轉換的 16 位元整數的字串表示`ToInt16`方法，使用<xref:System.IFormatProvider>物件。</span><span class="sxs-lookup"><span data-stu-id="377f1-1368">The following example converts string representations of 16-bit integers with the `ToInt16` method, using an <xref:System.IFormatProvider> object.</span></span>  
  
 [!code-cpp[System.Convert.ToSInts_String#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToSInts_String/CPP/toint16.cpp#3)]
 [!code-csharp[System.Convert.ToSInts_String#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToSInts_String/CS/toint16.cs#3)]
 [!code-vb[System.Convert.ToSInts_String#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToSInts_String/VB/toint16.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="377f1-1369">
            <paramref name="value" /> 不是由選擇性正負號之後跟隨一連串數字 (0 到 9) 所組成。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1369">
              <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-1370">
            <paramref name="value" /> 代表小於 <see cref="F:System.Int16.MinValue" /> 或大於 <see cref="F:System.Int16.MaxValue" /> 的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1370">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Int16.Parse(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (string value, int fromBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(string value, int32 fromBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As String, fromBase As Integer) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(System::String ^ value, int fromBase);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fromBase" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1371">字串，包含要轉換的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1371">A string that contains the number to convert.</span>
          </span>
        </param>
        <param name="fromBase">
          <span data-ttu-id="377f1-1372">
            <c>value</c> 中數字的基底，必須是 2、8、10 或 16。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1372">The base of the number in <c>value</c>, which must be 2, 8, 10, or 16.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1373">將指定基底中數字的字串表示，轉換為相等的 16 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1373">Converts the string representation of a number in a specified base to an equivalent 16-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1374">與 <paramref name="value" /> 中之數字相等的 16 位元帶正負號的整數；如果 <paramref name="value" /> 為 <see langword="null" />，則為 0 (零)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1374">A 16-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-1375">如果`fromBase`是 16，您可以使用前置詞指定的數字`value`與 「 0x 」 或 「 0x 」 的參數。</span><span class="sxs-lookup"><span data-stu-id="377f1-1375">If `fromBase` is 16, you can prefix the number specified by the `value` parameter with "0x" or "0X".</span></span>  
  
 <span data-ttu-id="377f1-1376">因為非基底 10 數值表示，不支援負號<xref:System.Convert.ToInt16%28System.String%2CSystem.Int32%29>方法會假設負數使用二的補數表示法。</span><span class="sxs-lookup"><span data-stu-id="377f1-1376">Because the negative sign is not supported for non-base 10 numeric representations, the <xref:System.Convert.ToInt16%28System.String%2CSystem.Int32%29> method assumes that negative numbers use two’s complement representation.</span></span> <span data-ttu-id="377f1-1377">換句話說，此方法一定會將最高順序二進位位元的整數 （位元 15） 解譯其正負號位元。</span><span class="sxs-lookup"><span data-stu-id="377f1-1377">In other words, the method always interprets the highest-order binary bit of an integer (bit 15) as its sign bit.</span></span> <span data-ttu-id="377f1-1378">如此一來，就可以撰寫程式碼中非基底 10 編號超出範圍的<xref:System.Int16>資料類型轉換成<xref:System.Int16>值而不擲回例外狀況的方法。</span><span class="sxs-lookup"><span data-stu-id="377f1-1378">As a result, it is possible to write code in which a non-base 10 number that is out of the range of the <xref:System.Int16> data type is converted to an <xref:System.Int16> value without the method throwing an exception.</span></span> <span data-ttu-id="377f1-1379">下列範例為增量單位<xref:System.Int16.MaxValue?displayProperty=nameWithType>，轉換為十六進位字串表示，產生的數字，然後呼叫<xref:System.Convert.ToInt16%28System.String%2CSystem.Int32%29>方法。</span><span class="sxs-lookup"><span data-stu-id="377f1-1379">The following example increments <xref:System.Int16.MaxValue?displayProperty=nameWithType> by one, converts the resulting number to its hexadecimal string representation, and then calls the <xref:System.Convert.ToInt16%28System.String%2CSystem.Int32%29> method.</span></span> <span data-ttu-id="377f1-1380">而不是擲回例外狀況，此方法會顯示訊息，「"0x8000 轉換成-32768。</span><span class="sxs-lookup"><span data-stu-id="377f1-1380">Instead of throwing an exception, the method displays the message, "0x8000 converts to -32768."</span></span>  
  
 [!code-csharp[System.Convert.BaseConversion#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#5)]
 [!code-vb[System.Convert.BaseConversion#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#5)]  
  
 <span data-ttu-id="377f1-1381">執行的二進位運算或數值的轉換時一律確認的方法使用適當的數值表示法，來轉譯特定的值，開發人員的責任。</span><span class="sxs-lookup"><span data-stu-id="377f1-1381">When performing binary operations or numeric conversions, it is always the responsibility of the developer to verify that a method is using the appropriate numeric representation to interpret a particular value.</span></span> <span data-ttu-id="377f1-1382">如下列範例所示，您可以確保，方法會處理溢位適當地藉由第一個擷取的數值正負號之前將它轉換成其十六進位字串表示。</span><span class="sxs-lookup"><span data-stu-id="377f1-1382">As the following example illustrates, you can ensure that the method handles overflows appropriately by first retrieving the sign of the numeric value before converting it to its hexadecimal string representation.</span></span> <span data-ttu-id="377f1-1383">如果原始值為正數，但是在轉換回整數會產生負數值，會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="377f1-1383">Throw an exception if the original value was positive but the conversion back to an integer yields a negative value.</span></span>  
  
 [!code-csharp[System.Convert.BaseConversion#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#6)]
 [!code-vb[System.Convert.BaseConversion#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#6)]  
  
   
  
## Examples  
 <span data-ttu-id="377f1-1384">下列範例會嘗試解譯為十六進位字串的字串陣列中每個項目，並將它轉換成 16 位元帶正負號的整數。</span><span class="sxs-lookup"><span data-stu-id="377f1-1384">The following example attempts to interpret each element in a string array as a hexadecimal string and to convert it to a 16-bit signed integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt16#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint16/cs/toint16_2.cs#14)]
 [!code-vb[System.Convert.ToInt16#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint16/vb/toint16_2.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="377f1-1385">
            <paramref name="fromBase" /> 不是 2、8、10 或 16。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1385">
              <paramref name="fromBase" /> is not 2, 8, 10, or 16.</span>
          </span>
          <span data-ttu-id="377f1-1386">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1386">-or-</span>
          </span>
          <span data-ttu-id="377f1-1387">
            <paramref name="value" />，表示非 Base 10 的帶正負號的數字有前置一個負號。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1387">
              <paramref name="value" />, which represents a non-base 10 signed number, is prefixed with a negative sign.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="377f1-1388">
            <paramref name="value" /> 為 <see cref="F:System.String.Empty" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1388">
              <paramref name="value" /> is <see cref="F:System.String.Empty" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="377f1-1389">
            <paramref name="value" /> 所包含的字元在 <paramref name="fromBase" /> 指定的基底中不是有效數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1389">
              <paramref name="value" /> contains a character that is not a valid digit in the base specified by <paramref name="fromBase" />.</span>
          </span>
          <span data-ttu-id="377f1-1390">如果 <paramref name="value" /> 中的第一個字元無效，例外狀況訊息會指出沒有數字可進行轉換；否則訊息會指出 <paramref name="value" /> 包含無效的尾端字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1390">The exception message indicates that there are no digits to convert if the first character in <paramref name="value" /> is invalid; otherwise, the message indicates that <paramref name="value" /> contains invalid trailing characters.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-1391">
            <paramref name="value" />，表示非 Base 10 的帶正負號的數字有前置一個負號。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1391">
              <paramref name="value" />, which represents a non-base 10 signed number, is prefixed with a negative sign.</span>
          </span>
          <span data-ttu-id="377f1-1392">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1392">-or-</span>
          </span>
          <span data-ttu-id="377f1-1393">
            <paramref name="value" /> 代表小於 <see cref="F:System.Int16.MinValue" /> 或大於 <see cref="F:System.Int16.MaxValue" /> 的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1393">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToInt32">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="377f1-1394">將指定的值轉換為 32 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1394">Converts a specified value to a 32-bit signed integer.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(bool value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1395">要轉換的布林值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1395">The Boolean value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1396">將指定的布林值轉換為相等的 32 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1396">Converts the specified Boolean value to the equivalent 32-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1397">如果 <paramref name="value" /> 為 <see langword="true" />，則為數字 1，否則為 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1397">The number 1 if <paramref name="value" /> is <see langword="true" />; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-1398">下列範例會將轉換<xref:System.Boolean>值`true`和`false`為整數。</span><span class="sxs-lookup"><span data-stu-id="377f1-1398">The following example converts the <xref:System.Boolean> values `true` and `false` to integers.</span></span>  
  
 [!code-csharp[System.Convert.ToInt32#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#1)]
 [!code-vb[System.Convert.ToInt32#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As Byte) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(System::Byte value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1399">要轉換之 8 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1399">The 8-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1400">將指定的 8 位元不帶正負號的整數值，轉換為相等的 32 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1400">Converts the value of the specified 8-bit unsigned integer to the equivalent 32-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1401">與 <paramref name="value" /> 相等的 32 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1401">A 32-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-1402">下列範例會將每個項目中的位元組陣列轉換成整數。</span><span class="sxs-lookup"><span data-stu-id="377f1-1402">The following example converts each element in an array of bytes to an integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt32#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#2)]
 [!code-vb[System.Convert.ToInt32#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(char value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1403">要轉換的 Unicode 字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1403">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1404">將指定的 Unicode 字元值轉換為相等的 32 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1404">Converts the value of the specified Unicode character to the equivalent 32-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1405">與 <paramref name="value" /> 相等的 32 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1405">A 32-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-1406"><xref:System.Convert.ToInt32%28System.Char%29>方法會傳回 32 位元帶正負號的整數，表示 utf-16 編碼的程式碼單位`value`引數。</span><span class="sxs-lookup"><span data-stu-id="377f1-1406">The <xref:System.Convert.ToInt32%28System.Char%29> method returns a 32-bit signed integer that represents the UTF-16 encoded code unit of the `value` argument.</span></span> <span data-ttu-id="377f1-1407">如果`value`不是低 surrogate，或為高 surrogate，此傳回值也代表 Unicode 字碼指標的值。</span><span class="sxs-lookup"><span data-stu-id="377f1-1407">If `value` is not a low surrogate or a high surrogate, this return value also represents the Unicode code point of value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-1408">下列範例會將轉換陣列中的每個項目<xref:System.Char>為整數的值。</span><span class="sxs-lookup"><span data-stu-id="377f1-1408">The following example converts each element in an array of <xref:System.Char> values to an integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt32#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#3)]
 [!code-vb[System.Convert.ToInt32#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(DateTime value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1409">要轉換的日期和時間值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1409">The date and time value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1410">呼叫這個方法一律會擲回 <see cref="T:System.InvalidCastException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1410">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1411">不支援這個轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1411">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="377f1-1412">沒有傳回值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1412">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="377f1-1413">不支援這個轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1413">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As Decimal) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(System::Decimal value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1414">要轉換的十進位數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1414">The decimal number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1415">將指定之十進位數字的值，轉換為相等的 32 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1415">Converts the value of the specified decimal number to an equivalent 32-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1416">
            <paramref name="value" />，四捨五入為最接近的 32 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1416">
              <paramref name="value" />, rounded to the nearest 32-bit signed integer.</span>
          </span>
          <span data-ttu-id="377f1-1417">如果 <paramref name="value" /> 介於兩個整數正中間時，則傳回偶數；也就是 4.5 會轉換為 4，5.5 會轉換為 6。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1417">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-1418">下列範例會嘗試將陣列中的每個項目<xref:System.Decimal>為整數的值。</span><span class="sxs-lookup"><span data-stu-id="377f1-1418">The following example attempts to convert each element in an array of <xref:System.Decimal> values to an integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt32#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#4)]
 [!code-vb[System.Convert.ToInt32#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-1419">
            <paramref name="value" /> 大於 <see cref="F:System.Int32.MaxValue" /> 或小於 <see cref="F:System.Int32.MinValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1419">
              <paramref name="value" /> is greater than <see cref="F:System.Int32.MaxValue" /> or less than <see cref="F:System.Int32.MinValue" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As Double) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(double value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1420">要轉換的雙精確度浮點數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1420">The double-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1421">將指定之雙精確度浮點數的值，轉換為相等的 32 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1421">Converts the value of the specified double-precision floating-point number to an equivalent 32-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1422">
            <paramref name="value" />，四捨五入為最接近的 32 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1422">
              <paramref name="value" />, rounded to the nearest 32-bit signed integer.</span>
          </span>
          <span data-ttu-id="377f1-1423">如果 <paramref name="value" /> 介於兩個整數正中間時，則傳回偶數；也就是 4.5 會轉換為 4，5.5 會轉換為 6。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1423">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-1424">下列範例會嘗試將陣列中的每個項目<xref:System.Double>aninteger 的值。</span><span class="sxs-lookup"><span data-stu-id="377f1-1424">The following example attempts to convert each element in an array of <xref:System.Double> values to aninteger.</span></span>  
  
 [!code-csharp[System.Convert.ToInt32#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#5)]
 [!code-vb[System.Convert.ToInt32#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-1425">
            <paramref name="value" /> 大於 <see cref="F:System.Int32.MaxValue" /> 或小於 <see cref="F:System.Int32.MinValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1425">
              <paramref name="value" /> is greater than <see cref="F:System.Int32.MaxValue" /> or less than <see cref="F:System.Int32.MinValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Double" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As Short) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(short value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1426">要轉換的 16 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1426">The 16-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1427">將指定的 16 位元帶正負號的整數值轉換成對等的 32 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1427">Converts the value of the specified 16-bit signed integer to an equivalent 32-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1428">與 <paramref name="value" /> 相等的 32 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1428">A 32-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-1429">下列範例會將 16 位元帶正負號的整數陣列中每個項目轉換為整數。</span><span class="sxs-lookup"><span data-stu-id="377f1-1429">The following example converts each element in an array of 16-bit signed integers to an integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt32#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#6)]
 [!code-vb[System.Convert.ToInt32#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(int value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1430">傳回 32 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1430">The 32-bit signed integer to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1431">傳回指定的 32 位元帶正負號的整數；不會執行實際的轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1431">Returns the specified 32-bit signed integer; no actual conversion is performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1432">傳回未變更的 <paramref name="value" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1432">
              <paramref name="value" /> is returned unchanged.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As Long) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(long value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1433">要轉換的 64 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1433">The 64-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1434">將指定的 64 位元帶正負號的整數值轉換成對等的 32 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1434">Converts the value of the specified 64-bit signed integer to an equivalent 32-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1435">與 <paramref name="value" /> 相等的 32 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1435">A 32-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-1436">下列範例會嘗試在長整數的陣列中每個項目轉換成整數。</span><span class="sxs-lookup"><span data-stu-id="377f1-1436">The following example attempts to convert each element in an array of long integers to an integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt32#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#7)]
 [!code-vb[System.Convert.ToInt32#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-1437">
            <paramref name="value" /> 大於 <see cref="F:System.Int32.MaxValue" /> 或小於 <see cref="F:System.Int32.MinValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1437">
              <paramref name="value" /> is greater than <see cref="F:System.Int32.MaxValue" /> or less than <see cref="F:System.Int32.MinValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1438">實作 <see cref="T:System.IConvertible" /> 介面的物件，或是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1438">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1439">將指定之物件的值，轉換為 32 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1439">Converts the value of the specified object to a 32-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1440">與 <paramref name="value" /> 相等的 32 位元帶正負號的整數；如果 <paramref name="value" /> 為 <see langword="null" />，則為零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1440">A 32-bit signed integer equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-1441">如果`value`不`null`，這個方法會包裝呼叫<xref:System.IConvertible.ToInt32%2A?displayProperty=nameWithType>的基礎類型的實作`value`。</span><span class="sxs-lookup"><span data-stu-id="377f1-1441">If`value` is not `null`, this method wraps a call to the <xref:System.IConvertible.ToInt32%2A?displayProperty=nameWithType> implementation of the underlying type of `value`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-1442">下列範例會嘗試將物件陣列中的每個項目轉換成整數。</span><span class="sxs-lookup"><span data-stu-id="377f1-1442">The following example attempts to convert each element in an object array to an integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt32#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#8)]
 [!code-vb[System.Convert.ToInt32#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="377f1-1443">
            <paramref name="value" /> 不是適當的格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1443">
              <paramref name="value" /> is not in an appropriate format.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="377f1-1444">
            <paramref name="value" /> 未實作 <see cref="T:System.IConvertible" /> 介面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1444">
              <paramref name="value" /> does not implement the  <see cref="T:System.IConvertible" /> interface.</span>
          </span>
          <span data-ttu-id="377f1-1445">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1445">-or-</span>
          </span>
          <span data-ttu-id="377f1-1446">不支援轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1446">The conversion is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-1447">
            <paramref name="value" /> 代表小於 <see cref="F:System.Int32.MinValue" /> 或大於 <see cref="F:System.Int32.MaxValue" /> 的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1447">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As SByte) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(System::SByte value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1448">要轉換的 8 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1448">The 8-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1449">將指定的 8 位元帶正負號的整數值，轉換為相等的 32 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1449">Converts the value of the specified 8-bit signed integer to the equivalent 32-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1450">與 <paramref name="value" /> 相等的 8 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1450">A 8-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-1451">下列範例會將帶正負號的位元組陣列中每個項目轉換為整數。</span><span class="sxs-lookup"><span data-stu-id="377f1-1451">The following example converts each element in an array of signed bytes to an integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt32#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#9)]
 [!code-vb[System.Convert.ToInt32#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As Single) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(float value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1452">要轉換的單精確度浮點數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1452">The single-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1453">將指定之單精確度浮點數的值，轉換為相等的 32 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1453">Converts the value of the specified single-precision floating-point number to an equivalent 32-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1454">
            <paramref name="value" />，四捨五入為最接近的 32 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1454">
              <paramref name="value" />, rounded to the nearest 32-bit signed integer.</span>
          </span>
          <span data-ttu-id="377f1-1455">如果 <paramref name="value" /> 介於兩個整數正中間時，則傳回偶數；也就是 4.5 會轉換為 4，5.5 會轉換為 6。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1455">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-1456">下列範例會嘗試將陣列中的每個項目<xref:System.Single>為整數的值。</span><span class="sxs-lookup"><span data-stu-id="377f1-1456">The following example attempts to convert each element in an array of <xref:System.Single> values to an integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt32#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#10)]
 [!code-vb[System.Convert.ToInt32#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-1457">
            <paramref name="value" /> 大於 <see cref="F:System.Int32.MaxValue" /> 或小於 <see cref="F:System.Int32.MinValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1457">
              <paramref name="value" /> is greater than <see cref="F:System.Int32.MaxValue" /> or less than <see cref="F:System.Int32.MinValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Single" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1458">字串，包含要轉換的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1458">A string that contains the number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1459">將指定之數字的字串表示，轉換為相等的 32 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1459">Converts the specified string representation of a number to an equivalent 32-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1460">與 <paramref name="value" /> 中之數字相等的 32 位元帶正負號的整數；如果 <paramref name="value" /> 為 <see langword="null" />，則為 0 (零)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1460">A 32-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-1461">使用<xref:System.Convert.ToInt32%28System.String%29>方法相當於傳遞`value`至<xref:System.Int32.Parse%28System.String%29?displayProperty=nameWithType>方法。`value`</span><span class="sxs-lookup"><span data-stu-id="377f1-1461">Using the <xref:System.Convert.ToInt32%28System.String%29> method is equivalent to passing `value` to the <xref:System.Int32.Parse%28System.String%29?displayProperty=nameWithType> method.`value`</span></span> <span data-ttu-id="377f1-1462">是使用目前執行緒文化特性的格式化慣例來解譯。</span><span class="sxs-lookup"><span data-stu-id="377f1-1462">is interpreted by using the formatting conventions of the current thread culture.</span></span>  
  
 <span data-ttu-id="377f1-1463">如果您不想處理的例外狀況，如果轉換失敗，您可以呼叫<xref:System.Int32.TryParse%2A?displayProperty=nameWithType>方法改為。</span><span class="sxs-lookup"><span data-stu-id="377f1-1463">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Int32.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="377f1-1464">它會傳回<xref:System.Boolean>值，指出轉換成功或失敗。</span><span class="sxs-lookup"><span data-stu-id="377f1-1464">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-1465">下列範例會嘗試將數字的字串陣列中每個項目轉換成整數。</span><span class="sxs-lookup"><span data-stu-id="377f1-1465">The following example attempts to convert each element in a numeric string array to an integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt32#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#11)]
 [!code-vb[System.Convert.ToInt32#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="377f1-1466">
            <paramref name="value" /> 不是由選擇性正負號之後跟隨一連串數字 (0 到 9) 所組成。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1466">
              <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-1467">
            <paramref name="value" /> 代表小於 <see cref="F:System.Int32.MinValue" /> 或大於 <see cref="F:System.Int32.MaxValue" /> 的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1467">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As UShort) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(System::UInt16 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1468">要轉換之 16 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1468">The 16-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1469">將指定的 16 位元不帶正負號的整數值，轉換為相等的 32 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1469">Converts the value of the specified 16-bit unsigned integer to the equivalent 32-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1470">與 <paramref name="value" /> 相等的 32 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1470">A 32-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-1471">下列範例會將 16 位元不帶正負號整數的陣列中每個項目轉換為整數。</span><span class="sxs-lookup"><span data-stu-id="377f1-1471">The following example converts each element in an array of 16-bit unsigned integers to an integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt32#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#12)]
 [!code-vb[System.Convert.ToInt32#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As UInteger) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(System::UInt32 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1472">要轉換之 32 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1472">The 32-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1473">將指定的 32 位元不帶正負號整數的值，轉換為相等的 32 位元帶正負號整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1473">Converts the value of the specified 32-bit unsigned integer to an equivalent 32-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1474">與 <paramref name="value" /> 相等的 32 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1474">A 32-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-1475">下列範例會嘗試將不帶正負號整數的陣列中每個項目轉換成帶正負號的整數。</span><span class="sxs-lookup"><span data-stu-id="377f1-1475">The following example attempts to convert each element in an array of unsigned integers to a signed integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt32#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#13)]
 [!code-vb[System.Convert.ToInt32#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-1476">
            <paramref name="value" /> 大於 <see cref="F:System.Int32.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1476">
              <paramref name="value" /> is greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As ULong) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(System::UInt64 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1477">要轉換之 64 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1477">The 64-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1478">將指定的 64 位元不帶正負號整數的值，轉換為相等的 32 位元帶正負號整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1478">Converts the value of the specified 64-bit unsigned integer to an equivalent 32-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1479">與 <paramref name="value" /> 相等的 32 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1479">A 32-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-1480">下列範例會嘗試將不帶正負號的長整數的陣列中每個項目轉換成帶正負號的整數。</span><span class="sxs-lookup"><span data-stu-id="377f1-1480">The following example attempts to convert each element in an array of unsigned long integers to a signed integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt32#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#14)]
 [!code-vb[System.Convert.ToInt32#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-1481">
            <paramref name="value" /> 大於 <see cref="F:System.Int32.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1481">
              <paramref name="value" /> is greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (object value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(object value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As Object, provider As IFormatProvider) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(System::Object ^ value, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1482">實作 <see cref="T:System.IConvertible" /> 介面的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1482">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="377f1-1483">物件，提供特定文化特性格式資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1483">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1484">使用指定之特定文化特性格式資訊，將指定之物件的值轉換為 32 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1484">Converts the value of the specified object to a 32-bit signed integer, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1485">與 <paramref name="value" /> 相等的 32 位元帶正負號的整數；如果 <paramref name="value" /> 為 <see langword="null" />，則為零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1485">A 32-bit signed integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-1486">傳回值是叫用的結果<xref:System.IConvertible.ToInt32%2A?displayProperty=nameWithType>方法的基礎類型`value`。</span><span class="sxs-lookup"><span data-stu-id="377f1-1486">The return value is the result of invoking the <xref:System.IConvertible.ToInt32%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
 <span data-ttu-id="377f1-1487">`provider` 可讓使用者指定的內容的相關特定文化特性的轉換資訊`value`。</span><span class="sxs-lookup"><span data-stu-id="377f1-1487">`provider` enables the user to specify culture-specific conversion information about the contents of `value`.</span></span> <span data-ttu-id="377f1-1488">例如，如果`value`是<xref:System.String>表示數字，`provider`可能會提供用來代表該數字的標記法的特定文化特性資訊。</span><span class="sxs-lookup"><span data-stu-id="377f1-1488">For example, if `value` is a <xref:System.String> that represents a number, `provider` could supply culture-specific information about the notation used to represent that number.</span></span>  
  
 <span data-ttu-id="377f1-1489">基底類型忽略`provider`; 不過，如果，可能會使用參數`value`是使用者定義型別可實作<xref:System.IConvertible>介面。</span><span class="sxs-lookup"><span data-stu-id="377f1-1489">The base types ignore `provider`; however, the parameter may be used if `value` is a user-defined type that implements the <xref:System.IConvertible> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-1490">下列範例會定義一個類別，實作<xref:System.IConvertible>和類別可實作<xref:System.IFormatProvider>。</span><span class="sxs-lookup"><span data-stu-id="377f1-1490">The following example defines a class that implements <xref:System.IConvertible> and a class that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="377f1-1491">實作類別的物件<xref:System.IConvertible>保存陣列<xref:System.Double>值。</span><span class="sxs-lookup"><span data-stu-id="377f1-1491">Objects of the class that implements <xref:System.IConvertible> hold an array of <xref:System.Double> values.</span></span> <span data-ttu-id="377f1-1492">每個類別的物件傳遞至`ToInt32`方法。</span><span class="sxs-lookup"><span data-stu-id="377f1-1492">An object of each class is passed to the `ToInt32` method.</span></span> <span data-ttu-id="377f1-1493">這個方法會傳回一維陣列的平均<xref:System.Double>，使用值實作的物件<xref:System.IFormatProvider>來判斷如何計算平均。</span><span class="sxs-lookup"><span data-stu-id="377f1-1493">This method returns an average of the array of <xref:System.Double> values, using the object that implements <xref:System.IFormatProvider> to determine how to calculate the average.</span></span>  
  
 [!code-cpp[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/CPP/objectifp.cpp#1)]
 [!code-csharp[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/CS/objectifp.cs#1)]
 [!code-vb[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/VB/objectifp.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="377f1-1494">
            <paramref name="value" /> 不是適當的格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1494">
              <paramref name="value" /> is not in an appropriate format.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="377f1-1495">
            <paramref name="value" /> 沒有實作 <see cref="T:System.IConvertible" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1495">
              <paramref name="value" /> does not implement <see cref="T:System.IConvertible" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-1496">
            <paramref name="value" /> 代表小於 <see cref="F:System.Int32.MinValue" /> 或大於 <see cref="F:System.Int32.MaxValue" /> 的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1496">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As String, provider As IFormatProvider) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1497">字串，包含要轉換的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1497">A string that contains the number to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="377f1-1498">物件，提供特定文化特性格式資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1498">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1499">使用指定之特定文化特性格式資訊，將指定之數字的字串表示轉換為相等的 32 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1499">Converts the specified string representation of a number to an equivalent 32-bit signed integer, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1500">與 <paramref name="value" /> 中之數字相等的 32 位元帶正負號的整數；如果 <paramref name="value" /> 為 <see langword="null" />，則為 0 (零)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1500">A 32-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-1501">傳回值是叫用的結果<xref:System.Int32.Parse%2A?displayProperty=nameWithType>方法`value`。</span><span class="sxs-lookup"><span data-stu-id="377f1-1501">The return value is the result of invoking the <xref:System.Int32.Parse%2A?displayProperty=nameWithType> method on `value`.</span></span>  
  
 <span data-ttu-id="377f1-1502">`provider` 是<xref:System.IFormatProvider>取得的執行個體<xref:System.Globalization.NumberFormatInfo>物件。</span><span class="sxs-lookup"><span data-stu-id="377f1-1502">`provider` is an <xref:System.IFormatProvider> instance that obtains a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="377f1-1503"><xref:System.Globalization.NumberFormatInfo>物件提供特定文化特性格式資訊`value`。</span><span class="sxs-lookup"><span data-stu-id="377f1-1503">The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of `value`.</span></span> <span data-ttu-id="377f1-1504">如果`provider`是`null`、<xref:System.Globalization.NumberFormatInfo>會使用目前文化特性。</span><span class="sxs-lookup"><span data-stu-id="377f1-1504">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> for the current culture is used.</span></span>  
  
 <span data-ttu-id="377f1-1505">如果您不想處理的例外狀況，如果轉換失敗，您可以呼叫<xref:System.Int32.TryParse%2A?displayProperty=nameWithType>方法改為。</span><span class="sxs-lookup"><span data-stu-id="377f1-1505">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Int32.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="377f1-1506">它會傳回<xref:System.Boolean>值，指出轉換成功或失敗。</span><span class="sxs-lookup"><span data-stu-id="377f1-1506">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-1507">下列範例會定義自訂<xref:System.Globalization.NumberFormatInfo>物件，會將字串"pos"辨識為正號和字串"協商"做為負號。</span><span class="sxs-lookup"><span data-stu-id="377f1-1507">The following example defines a custom <xref:System.Globalization.NumberFormatInfo> object that recognizes the string "pos" as the positive sign and the string "neg" as the negative sign.</span></span> <span data-ttu-id="377f1-1508">即會嘗試將數字的字串陣列的每個項目轉換成整數使用此提供者和<xref:System.Globalization.NumberFormatInfo>文化特性而異的提供者。</span><span class="sxs-lookup"><span data-stu-id="377f1-1508">It then attempts to convert each element of a numeric string array to an integer using both this provider and the <xref:System.Globalization.NumberFormatInfo> provider for the invariant culture.</span></span>  
  
 [!code-csharp[System.Convert.ToInt32#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_2.cs#15)]
 [!code-vb[System.Convert.ToInt32#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_2.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="377f1-1509">
            <paramref name="value" /> 不是由選擇性正負號之後跟隨一連串數字 (0 到 9) 所組成。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1509">
              <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-1510">
            <paramref name="value" /> 代表小於 <see cref="F:System.Int32.MinValue" /> 或大於 <see cref="F:System.Int32.MaxValue" /> 的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1510">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (string value, int fromBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(string value, int32 fromBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As String, fromBase As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(System::String ^ value, int fromBase);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fromBase" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1511">字串，包含要轉換的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1511">A string that contains the number to convert.</span>
          </span>
        </param>
        <param name="fromBase">
          <span data-ttu-id="377f1-1512">
            <c>value</c> 中數字的基底，必須是 2、8、10 或 16。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1512">The base of the number in <c>value</c>, which must be 2, 8, 10, or 16.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1513">將指定基底中數字的字串表示，轉換為相等的 32 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1513">Converts the string representation of a number in a specified base to an equivalent 32-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1514">與 <paramref name="value" /> 中之數字相等的 32 位元帶正負號的整數；如果 <paramref name="value" /> 為 <see langword="null" />，則為 0 (零)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1514">A 32-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-1515">如果`fromBase`是 16，您可以使用前置詞指定的數字`value`與 「 0x 」 或 「 0x 」 的參數。</span><span class="sxs-lookup"><span data-stu-id="377f1-1515">If `fromBase` is 16, you can prefix the number specified by the `value` parameter with "0x" or "0X".</span></span>  
  
 <span data-ttu-id="377f1-1516">因為非基底 10 數值表示，不支援負號<xref:System.Convert.ToInt32%28System.String%2CSystem.Int32%29>方法會假設負數使用二的補數表示法。</span><span class="sxs-lookup"><span data-stu-id="377f1-1516">Because the negative sign is not supported for non-base 10 numeric representations, the <xref:System.Convert.ToInt32%28System.String%2CSystem.Int32%29> method assumes that negative numbers use two’s complement representation.</span></span> <span data-ttu-id="377f1-1517">換句話說，此方法一定會將整數 （位元 31） 的最高順序二進位位元解譯其正負號位元。</span><span class="sxs-lookup"><span data-stu-id="377f1-1517">In other words, the method always interprets the highest-order binary bit of an integer (bit 31) as its sign bit.</span></span> <span data-ttu-id="377f1-1518">如此一來，就可以撰寫程式碼中非基底 10 編號超出範圍的<xref:System.Int32>資料類型轉換成<xref:System.Int32>值而不擲回例外狀況的方法。</span><span class="sxs-lookup"><span data-stu-id="377f1-1518">As a result, it is possible to write code in which a non-base 10 number that is out of the range of the <xref:System.Int32> data type is converted to an <xref:System.Int32> value without the method throwing an exception.</span></span> <span data-ttu-id="377f1-1519">下列範例為增量單位<xref:System.Int32.MaxValue?displayProperty=nameWithType>，轉換為十六進位字串表示，產生的數字，然後呼叫<xref:System.Convert.ToInt32%28System.String%2CSystem.Int32%29>方法。</span><span class="sxs-lookup"><span data-stu-id="377f1-1519">The following example increments <xref:System.Int32.MaxValue?displayProperty=nameWithType> by one, converts the resulting number to its hexadecimal string representation, and then calls the <xref:System.Convert.ToInt32%28System.String%2CSystem.Int32%29> method.</span></span> <span data-ttu-id="377f1-1520">而不是擲回例外狀況，此方法會顯示訊息，「"0x80000000 轉換成-2147483648。</span><span class="sxs-lookup"><span data-stu-id="377f1-1520">Instead of throwing an exception, the method displays the message, "0x80000000 converts to -2147483648."</span></span>  
  
 [!code-cpp[System.Convert.BaseConversion#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cpp/toint_str_int32.cpp#1)]
 [!code-csharp[System.Convert.BaseConversion#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#1)]
 [!code-vb[System.Convert.BaseConversion#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#1)]  
  
 <span data-ttu-id="377f1-1521">執行的二進位運算或數值的轉換時一律確認的方法使用適當的數值表示法，來轉譯特定的值，開發人員的責任。</span><span class="sxs-lookup"><span data-stu-id="377f1-1521">When performing binary operations or numeric conversions, it is always the responsibility of the developer to verify that a method is using the appropriate numeric representation to interpret a particular value.</span></span> <span data-ttu-id="377f1-1522">如下列範例所示，您可以確保，方法會處理溢位適當地藉由第一個擷取的數值正負號之前將它轉換成其十六進位字串表示。</span><span class="sxs-lookup"><span data-stu-id="377f1-1522">As the following example illustrates, you can ensure that the method handles overflows appropriately by first retrieving the sign of the numeric value before converting it to its hexadecimal string representation.</span></span> <span data-ttu-id="377f1-1523">如果原始值為正數，但是在轉換回整數會產生負數值，會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="377f1-1523">Throw an exception if the original value was positive but the conversion back to an integer yields a negative value.</span></span>  
  
 [!code-cpp[System.Convert.BaseConversion#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cpp/toint_str_int32.cpp#2)]
 [!code-csharp[System.Convert.BaseConversion#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#2)]
 [!code-vb[System.Convert.BaseConversion#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="377f1-1524">
            <paramref name="fromBase" /> 不是 2、8、10 或 16。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1524">
              <paramref name="fromBase" /> is not 2, 8, 10, or 16.</span>
          </span>
          <span data-ttu-id="377f1-1525">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1525">-or-</span>
          </span>
          <span data-ttu-id="377f1-1526">
            <paramref name="value" />，表示非 Base 10 的帶正負號的數字有前置一個負號。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1526">
              <paramref name="value" />, which represents a non-base 10 signed number, is prefixed with a negative sign.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="377f1-1527">
            <paramref name="value" /> 為 <see cref="F:System.String.Empty" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1527">
              <paramref name="value" /> is <see cref="F:System.String.Empty" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="377f1-1528">
            <paramref name="value" /> 所包含的字元在 <paramref name="fromBase" /> 指定的基底中不是有效數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1528">
              <paramref name="value" /> contains a character that is not a valid digit in the base specified by <paramref name="fromBase" />.</span>
          </span>
          <span data-ttu-id="377f1-1529">如果 <paramref name="value" /> 中的第一個字元無效，例外狀況訊息會指出沒有數字可進行轉換；否則訊息會指出 <paramref name="value" /> 包含無效的尾端字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1529">The exception message indicates that there are no digits to convert if the first character in <paramref name="value" /> is invalid; otherwise, the message indicates that <paramref name="value" /> contains invalid trailing characters.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-1530">
            <paramref name="value" />，表示非 Base 10 的帶正負號的數字有前置一個負號。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1530">
              <paramref name="value" />, which represents a non-base 10 signed number, is prefixed with a negative sign.</span>
          </span>
          <span data-ttu-id="377f1-1531">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1531">-or-</span>
          </span>
          <span data-ttu-id="377f1-1532">
            <paramref name="value" /> 代表小於 <see cref="F:System.Int32.MinValue" /> 或大於 <see cref="F:System.Int32.MaxValue" /> 的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1532">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToInt64">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="377f1-1533">將指定的值轉換為 64 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1533">Converts a specified value to a 64-bit signed integer.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As Boolean) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(bool value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1534">要轉換的布林值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1534">The Boolean value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1535">將指定的布林值轉換為相等的 64 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1535">Converts the specified Boolean value to the equivalent 64-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1536">如果 <paramref name="value" /> 為 <see langword="true" />，則為數字 1，否則為 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1536">The number 1 if <paramref name="value" /> is <see langword="true" />; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-1537">下列範例會將轉換<xref:System.Boolean>值`true`和`false`長整數。</span><span class="sxs-lookup"><span data-stu-id="377f1-1537">The following example converts the <xref:System.Boolean> values `true` and `false` to long integers.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_1.cs#1)]
 [!code-vb[System.Convert.ToInt64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As Byte) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(System::Byte value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1538">要轉換之 8 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1538">The 8-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1539">將指定的 8 位元不帶正負號的整數值，轉換為相等的 64 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1539">Converts the value of the specified 8-bit unsigned integer to the equivalent 64-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1540">與 <paramref name="value" /> 相等的 64 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1540">A 64-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-1541">下列範例會將位元組陣列中的每個項目轉換為長整數。</span><span class="sxs-lookup"><span data-stu-id="377f1-1541">The following example converts each element in an array of bytes to a long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_1.cs#2)]
 [!code-vb[System.Convert.ToInt64#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As Char) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(char value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1542">要轉換的 Unicode 字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1542">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1543">將指定的 Unicode 字元值轉換為相等的 64 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1543">Converts the value of the specified Unicode character to the equivalent 64-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1544">與 <paramref name="value" /> 相等的 64 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1544">A 64-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-1545">下列範例會將轉換中的每個項目<xref:System.Char>長整數的陣列。</span><span class="sxs-lookup"><span data-stu-id="377f1-1545">The following example converts each element in a <xref:System.Char> array to a long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_1.cs#3)]
 [!code-vb[System.Convert.ToInt64#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As DateTime) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(DateTime value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1546">要轉換的日期和時間值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1546">The date and time value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1547">呼叫這個方法一律會擲回 <see cref="T:System.InvalidCastException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1547">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1548">不支援這個轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1548">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="377f1-1549">沒有傳回值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1549">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="377f1-1550">不支援這個轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1550">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As Decimal) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(System::Decimal value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1551">要轉換的十進位數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1551">The decimal number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1552">將指定之十進位數字的值，轉換為相等的 64 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1552">Converts the value of the specified decimal number to an equivalent 64-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1553">
            <paramref name="value" />，四捨五入為最接近的 64 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1553">
              <paramref name="value" />, rounded to the nearest 64-bit signed integer.</span>
          </span>
          <span data-ttu-id="377f1-1554">如果 <paramref name="value" /> 介於兩個整數正中間時，則傳回偶數；也就是 4.5 會轉換為 4，5.5 會轉換為 6。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1554">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-1555">下列範例會嘗試將陣列中的每個項目<xref:System.Decimal>長整數的值。</span><span class="sxs-lookup"><span data-stu-id="377f1-1555">The following example attempts to convert each element in an array of <xref:System.Decimal> values to a long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_1.cs#4)]
 [!code-vb[System.Convert.ToInt64#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-1556">
            <paramref name="value" /> 大於 <see cref="F:System.Int64.MaxValue" /> 或小於 <see cref="F:System.Int64.MinValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1556">
              <paramref name="value" /> is greater than <see cref="F:System.Int64.MaxValue" /> or less than <see cref="F:System.Int64.MinValue" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As Double) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(double value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1557">要轉換的雙精確度浮點數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1557">The double-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1558">將指定之雙精確度浮點數的值，轉換為相等的 64 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1558">Converts the value of the specified double-precision floating-point number to an equivalent 64-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1559">
            <paramref name="value" />，四捨五入為最接近的 64 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1559">
              <paramref name="value" />, rounded to the nearest 64-bit signed integer.</span>
          </span>
          <span data-ttu-id="377f1-1560">如果 <paramref name="value" /> 介於兩個整數正中間時，則傳回偶數；也就是 4.5 會轉換為 4，5.5 會轉換為 6。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1560">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-1561">下列範例會嘗試將陣列中的每個項目<xref:System.Double>長整數的值。</span><span class="sxs-lookup"><span data-stu-id="377f1-1561">The following example attempts to convert each element in an array of <xref:System.Double> values to a long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_1.cs#5)]
 [!code-vb[System.Convert.ToInt64#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-1562">
            <paramref name="value" /> 大於 <see cref="F:System.Int64.MaxValue" /> 或小於 <see cref="F:System.Int64.MinValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1562">
              <paramref name="value" /> is greater than <see cref="F:System.Int64.MaxValue" /> or less than <see cref="F:System.Int64.MinValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Double" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As Short) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(short value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1563">要轉換的 16 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1563">The 16-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1564">將指定的 16 位元帶正負號的整數值轉換為相等的 64 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1564">Converts the value of the specified 16-bit signed integer to an equivalent 64-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1565">與 <paramref name="value" /> 相等的 64 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1565">A 64-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-1566">下列範例會將 16 位元整數的陣列中每個項目轉換為長整數。</span><span class="sxs-lookup"><span data-stu-id="377f1-1566">The following example converts each element in an array of 16-bit integers to a long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_1.cs#6)]
 [!code-vb[System.Convert.ToInt64#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(int value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1567">要轉換的 32 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1567">The 32-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1568">將指定的 32 位元帶正負號的整數值轉換為相等的 64 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1568">Converts the value of the specified 32-bit signed integer to an equivalent 64-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1569">與 <paramref name="value" /> 相等的 64 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1569">A 64-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(long value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1570">64 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1570">A 64-bit signed integer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1571">傳回指定的 64 位元帶正負號的整數；不會執行實際的轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1571">Returns the specified 64-bit signed integer; no actual conversion is performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1572">傳回未變更的 <paramref name="value" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1572">
              <paramref name="value" /> is returned unchanged.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-1573">下列範例會將整數的陣列中每個項目轉換為長整數。</span><span class="sxs-lookup"><span data-stu-id="377f1-1573">The following example converts each element in an array of integers to a long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_1.cs#7)]
 [!code-vb[System.Convert.ToInt64#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As Object) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1574">實作 <see cref="T:System.IConvertible" /> 介面的物件，或是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1574">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1575">將指定之物件的值，轉換為 64 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1575">Converts the value of the specified object to a 64-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1576">與 <paramref name="value" /> 相等的 64 位元帶正負號的整數；如果 <paramref name="value" /> 為 <see langword="null" />，則為零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1576">A 64-bit signed integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-1577">如果`value`不`null`，這個方法會包裝呼叫<xref:System.IConvertible.ToInt64%2A?displayProperty=nameWithType>的基礎類型的實作`value`。</span><span class="sxs-lookup"><span data-stu-id="377f1-1577">If `value` is not `null`, this method wraps a call to the <xref:System.IConvertible.ToInt64%2A?displayProperty=nameWithType> implementation of the underlying type of `value`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-1578">下列範例會嘗試長整數轉換成物件陣列中的每個項目。</span><span class="sxs-lookup"><span data-stu-id="377f1-1578">The following example attempts to convert each element in an object array to a long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_1.cs#8)]
 [!code-vb[System.Convert.ToInt64#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="377f1-1579">
            <paramref name="value" /> 不是適當的格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1579">
              <paramref name="value" /> is not in an appropriate format.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="377f1-1580">
            <paramref name="value" /> 未實作 <see cref="T:System.IConvertible" /> 介面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1580">
              <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
          <span data-ttu-id="377f1-1581">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1581">-or-</span>
          </span>
          <span data-ttu-id="377f1-1582">不支援轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1582">The conversion is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-1583">
            <paramref name="value" /> 代表小於 <see cref="F:System.Int64.MinValue" /> 或大於 <see cref="F:System.Int64.MaxValue" /> 的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1583">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As SByte) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(System::SByte value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1584">要轉換的 8 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1584">The 8-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1585">將指定的 8 位元帶正負號的整數值，轉換為相等的 64 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1585">Converts the value of the specified 8-bit signed integer to the equivalent 64-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1586">與 <paramref name="value" /> 相等的 64 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1586">A 64-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-1587">下列範例會將帶正負號之位元組陣列中的每個項目轉換為長整數。</span><span class="sxs-lookup"><span data-stu-id="377f1-1587">The following example converts each element in a signed byte array to a long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_1.cs#9)]
 [!code-vb[System.Convert.ToInt64#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_1.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As Single) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(float value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1588">要轉換的單精確度浮點數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1588">The single-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1589">將指定之單精確度浮點數的值，轉換為相等的 64 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1589">Converts the value of the specified single-precision floating-point number to an equivalent 64-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1590">
            <paramref name="value" />，四捨五入為最接近的 64 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1590">
              <paramref name="value" />, rounded to the nearest 64-bit signed integer.</span>
          </span>
          <span data-ttu-id="377f1-1591">如果 <paramref name="value" /> 介於兩個整數正中間時，則傳回偶數；也就是 4.5 會轉換為 4，5.5 會轉換為 6。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1591">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-1592">下列範例會嘗試將陣列中的每個項目<xref:System.Single>長整數的值。</span><span class="sxs-lookup"><span data-stu-id="377f1-1592">The following example attempts to convert each element in an array of <xref:System.Single> values to a long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_1.cs#10)]
 [!code-vb[System.Convert.ToInt64#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-1593">
            <paramref name="value" /> 大於 <see cref="F:System.Int64.MaxValue" /> 或小於 <see cref="F:System.Int64.MinValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1593">
              <paramref name="value" /> is greater than <see cref="F:System.Int64.MaxValue" /> or less than <see cref="F:System.Int64.MinValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Single" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As String) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1594">字串，包含要轉換的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1594">A string that contains a number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1595">將指定之數字的字串表示，轉換為相等的 64 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1595">Converts the specified string representation of a number to an equivalent 64-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1596">與 <paramref name="value" /> 中之數字相等的 64 位元帶正負號的整數；如果 <paramref name="value" /> 為 <see langword="null" />，則為 0 (零)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1596">A 64-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-1597">使用<xref:System.Convert.ToInt64%28System.String%29>方法相當於傳遞`value`至<xref:System.Int64.Parse%28System.String%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="377f1-1597">Using the <xref:System.Convert.ToInt64%28System.String%29> method is equivalent to passing `value` to the <xref:System.Int64.Parse%28System.String%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="377f1-1598">`value` 是使用目前執行緒文化特性的格式化慣例來解譯。</span><span class="sxs-lookup"><span data-stu-id="377f1-1598">`value` is interpreted by using the formatting conventions of the current thread culture.</span></span>  
  
 <span data-ttu-id="377f1-1599">如果您不想處理的例外狀況，如果轉換失敗，您可以呼叫<xref:System.Int64.TryParse%2A?displayProperty=nameWithType>方法改為。</span><span class="sxs-lookup"><span data-stu-id="377f1-1599">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Int64.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="377f1-1600">它會傳回<xref:System.Boolean>值，指出轉換成功或失敗。</span><span class="sxs-lookup"><span data-stu-id="377f1-1600">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-1601">下列範例會嘗試轉換為長整數的數字的字串陣列中每個項目。</span><span class="sxs-lookup"><span data-stu-id="377f1-1601">The following example attempts to convert each element in an array of numeric strings to a long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_1.cs#11)]
 [!code-vb[System.Convert.ToInt64#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="377f1-1602">
            <paramref name="value" /> 不是由選擇性正負號之後跟隨一連串數字 (0 到 9) 所組成。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1602">
              <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-1603">
            <paramref name="value" /> 代表小於 <see cref="F:System.Int64.MinValue" /> 或大於 <see cref="F:System.Int64.MaxValue" /> 的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1603">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As UShort) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(System::UInt16 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1604">要轉換之 16 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1604">The 16-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1605">將指定的 16 位元不帶正負號的整數值，轉換為相等的 64 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1605">Converts the value of the specified 16-bit unsigned integer to the equivalent 64-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1606">與 <paramref name="value" /> 相等的 64 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1606">A 64-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-1607">下列範例將長整數轉換的 16 位元不帶正負號的整數陣列中每個項目。</span><span class="sxs-lookup"><span data-stu-id="377f1-1607">The following example converts each element in an array of 16-bit unsigned integers to a long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_1.cs#12)]
 [!code-vb[System.Convert.ToInt64#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_1.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As UInteger) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(System::UInt32 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1608">要轉換之 32 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1608">The 32-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1609">將指定的 32 位元不帶正負號整數的值，轉換為相等的 64 位元帶正負號整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1609">Converts the value of the specified 32-bit unsigned integer to an equivalent 64-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1610">與 <paramref name="value" /> 相等的 64 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1610">A 64-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-1611">下列範例會將不帶正負號整數的陣列中每個項目轉換為長整數。</span><span class="sxs-lookup"><span data-stu-id="377f1-1611">The following example converts each element in an array of unsigned integers to a long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_1.cs#13)]
 [!code-vb[System.Convert.ToInt64#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_1.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As ULong) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(System::UInt64 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1612">要轉換之 64 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1612">The 64-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1613">將指定的 64 位元不帶正負號整數的值，轉換為相等的 64 位元帶正負號整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1613">Converts the value of the specified 64-bit unsigned integer to an equivalent 64-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1614">與 <paramref name="value" /> 相等的 64 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1614">A 64-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-1615">下列範例會嘗試長整數轉換成不帶正負號的長整數的陣列中每個項目。</span><span class="sxs-lookup"><span data-stu-id="377f1-1615">The following example attempts to convert each element in an array of unsigned long integers to a long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_1.cs#14)]
 [!code-vb[System.Convert.ToInt64#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_1.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-1616">
            <paramref name="value" /> 大於 <see cref="F:System.Int64.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1616">
              <paramref name="value" /> is greater than <see cref="F:System.Int64.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (object value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(object value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As Object, provider As IFormatProvider) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(System::Object ^ value, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1617">實作 <see cref="T:System.IConvertible" /> 介面的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1617">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="377f1-1618">物件，提供特定文化特性格式資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1618">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1619">使用指定之特定文化特性格式資訊，將指定之物件的值轉換為 64 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1619">Converts the value of the specified object to a 64-bit signed integer, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1620">與 <paramref name="value" /> 相等的 64 位元帶正負號的整數；如果 <paramref name="value" /> 為 <see langword="null" />，則為零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1620">A 64-bit signed integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-1621">傳回值是叫用的結果<xref:System.IConvertible.ToInt64%2A?displayProperty=nameWithType>方法的基礎類型`value`。</span><span class="sxs-lookup"><span data-stu-id="377f1-1621">The return value is the result of invoking the <xref:System.IConvertible.ToInt64%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
 <span data-ttu-id="377f1-1622">`provider` 可讓使用者指定的內容的相關特定文化特性的轉換資訊`value`。</span><span class="sxs-lookup"><span data-stu-id="377f1-1622">`provider` enables the user to specify culture-specific conversion information about the contents of `value`.</span></span> <span data-ttu-id="377f1-1623">例如，如果`value`是<xref:System.String>表示數字，`provider`可能會提供用來代表該數字的標記法的特定文化特性資訊。</span><span class="sxs-lookup"><span data-stu-id="377f1-1623">For example, if `value` is a <xref:System.String> that represents a number, `provider` could supply culture-specific information about the notation used to represent that number.</span></span>  
  
 <span data-ttu-id="377f1-1624">基底類型忽略`provider`; 不過，如果，可能會使用參數`value`是使用者定義型別可實作<xref:System.IConvertible>介面。</span><span class="sxs-lookup"><span data-stu-id="377f1-1624">The base types ignore `provider`; however, the parameter may be used if `value` is a user-defined type that implements the <xref:System.IConvertible> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-1625">下列範例會定義一個類別，實作<xref:System.IConvertible>和類別可實作<xref:System.IFormatProvider>。</span><span class="sxs-lookup"><span data-stu-id="377f1-1625">The following example defines a class that implements <xref:System.IConvertible> and a class that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="377f1-1626">實作類別的物件<xref:System.IConvertible>保存陣列<xref:System.Double>值。</span><span class="sxs-lookup"><span data-stu-id="377f1-1626">Objects of the class that implements <xref:System.IConvertible> hold an array of <xref:System.Double> values.</span></span> <span data-ttu-id="377f1-1627">每個類別的物件傳遞至`ToInt64`方法。</span><span class="sxs-lookup"><span data-stu-id="377f1-1627">An object of each class is passed to the `ToInt64` method.</span></span> <span data-ttu-id="377f1-1628">這個方法會傳回一維陣列的平均<xref:System.Double>，使用值實作的物件<xref:System.IFormatProvider>來判斷如何計算平均。</span><span class="sxs-lookup"><span data-stu-id="377f1-1628">This method returns an average of the array of <xref:System.Double> values, using the object that implements <xref:System.IFormatProvider> to determine how to calculate the average.</span></span>  
  
 [!code-cpp[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/CPP/objectifp.cpp#1)]
 [!code-csharp[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/CS/objectifp.cs#1)]
 [!code-vb[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/VB/objectifp.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="377f1-1629">
            <paramref name="value" /> 不是適當的格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1629">
              <paramref name="value" /> is not in an appropriate format.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="377f1-1630">
            <paramref name="value" /> 未實作 <see cref="T:System.IConvertible" /> 介面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1630">
              <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
          <span data-ttu-id="377f1-1631">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1631">-or-</span>
          </span>
          <span data-ttu-id="377f1-1632">不支援轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1632">The conversion is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-1633">
            <paramref name="value" /> 代表小於 <see cref="F:System.Int64.MinValue" /> 或大於 <see cref="F:System.Int64.MaxValue" /> 的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1633">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As String, provider As IFormatProvider) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1634">字串，包含要轉換的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1634">A string that contains the number to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="377f1-1635">物件，提供特定文化特性格式資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1635">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1636">使用指定之特定文化特性格式資訊，將指定之數字的字串表示轉換為相等的 64 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1636">Converts the specified string representation of a number to an equivalent 64-bit signed integer, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1637">與 <paramref name="value" /> 中之數字相等的 64 位元帶正負號的整數；如果 <paramref name="value" /> 為 <see langword="null" />，則為 0 (零)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1637">A 64-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-1638">傳回值是叫用的結果<xref:System.Int64.Parse%2A?displayProperty=nameWithType>方法`value`。</span><span class="sxs-lookup"><span data-stu-id="377f1-1638">The return value is the result of invoking the <xref:System.Int64.Parse%2A?displayProperty=nameWithType> method on `value`.</span></span>  
  
 <span data-ttu-id="377f1-1639">`provider` 是`IFormatProvider`取得的執行個體<xref:System.Globalization.NumberFormatInfo>物件。</span><span class="sxs-lookup"><span data-stu-id="377f1-1639">`provider` is an `IFormatProvider` instance that obtains a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="377f1-1640">`NumberFormatInfo`物件提供特定文化特性格式資訊`value`。</span><span class="sxs-lookup"><span data-stu-id="377f1-1640">The `NumberFormatInfo` object provides culture-specific information about the format of `value`.</span></span> <span data-ttu-id="377f1-1641">如果`provider`是`null`、`NumberFormatInfo`會使用目前文化特性。</span><span class="sxs-lookup"><span data-stu-id="377f1-1641">If `provider` is `null`, the `NumberFormatInfo` for the current culture is used.</span></span>  
  
 <span data-ttu-id="377f1-1642">如果您不想處理的例外狀況，如果轉換失敗，您可以呼叫<xref:System.Int64.TryParse%2A?displayProperty=nameWithType>方法改為。</span><span class="sxs-lookup"><span data-stu-id="377f1-1642">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Int64.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="377f1-1643">它會傳回<xref:System.Boolean>值，指出轉換成功或失敗。</span><span class="sxs-lookup"><span data-stu-id="377f1-1643">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-1644">下列範例會定義自訂<xref:System.Globalization.NumberFormatInfo>物件，會將字串"pos"辨識為正號和字串"協商"做為負號。</span><span class="sxs-lookup"><span data-stu-id="377f1-1644">The following example defines a custom <xref:System.Globalization.NumberFormatInfo> object that recognizes the string "pos" as the positive sign and the string "neg" as the negative sign.</span></span> <span data-ttu-id="377f1-1645">即會嘗試將數字的字串陣列的每個項目轉換成整數使用此提供者和<xref:System.Globalization.NumberFormatInfo>文化特性而異的提供者。</span><span class="sxs-lookup"><span data-stu-id="377f1-1645">It then attempts to convert each element of a numeric string array to an integer using both this provider and the <xref:System.Globalization.NumberFormatInfo> provider for the invariant culture.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_3.cs#16)]
 [!code-vb[System.Convert.ToInt64#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_3.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="377f1-1646">
            <paramref name="value" /> 不是由選擇性正負號之後跟隨一連串數字 (0 到 9) 所組成。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1646">
              <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-1647">
            <paramref name="value" /> 代表小於 <see cref="F:System.Int64.MinValue" /> 或大於 <see cref="F:System.Int64.MaxValue" /> 的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1647">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (string value, int fromBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(string value, int32 fromBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As String, fromBase As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(System::String ^ value, int fromBase);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fromBase" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1648">字串，包含要轉換的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1648">A string that contains the number to convert.</span>
          </span>
        </param>
        <param name="fromBase">
          <span data-ttu-id="377f1-1649">
            <c>value</c> 中數字的基底，必須是 2、8、10 或 16。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1649">The base of the number in <c>value</c>, which must be 2, 8, 10, or 16.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1650">將指定基底中數字的字串表示，轉換為相等的 64 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1650">Converts the string representation of a number in a specified base to an equivalent 64-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1651">與 <paramref name="value" /> 中之數字相等的 64 位元帶正負號的整數；如果 <paramref name="value" /> 為 <see langword="null" />，則為 0 (零)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1651">A 64-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-1652">如果`fromBase`是 16，您可以使用前置詞指定的數字`value`與 「 0x 」 或 「 0x 」 的參數。</span><span class="sxs-lookup"><span data-stu-id="377f1-1652">If `fromBase` is 16, you can prefix the number specified by the `value` parameter with "0x" or "0X".</span></span>  
  
 <span data-ttu-id="377f1-1653">因為非基底 10 數值表示，不支援負號<xref:System.Convert.ToInt64%28System.String%2CSystem.Int32%29>方法會假設負數使用二的補數表示法。</span><span class="sxs-lookup"><span data-stu-id="377f1-1653">Because the negative sign is not supported for non-base 10 numeric representations, the <xref:System.Convert.ToInt64%28System.String%2CSystem.Int32%29> method assumes that negative numbers use two’s complement representation.</span></span> <span data-ttu-id="377f1-1654">換句話說，此方法一定會將長整數 （位元 63） 的最高順序二進位位元解譯其正負號位元。</span><span class="sxs-lookup"><span data-stu-id="377f1-1654">In other words, the method always interprets the highest-order binary bit of a long integer (bit 63) as its sign bit.</span></span> <span data-ttu-id="377f1-1655">如此一來，就可以撰寫程式碼中非基底 10 編號超出範圍的<xref:System.Int64>資料類型轉換成<xref:System.Int64>值而不擲回例外狀況的方法。</span><span class="sxs-lookup"><span data-stu-id="377f1-1655">As a result, it is possible to write code in which a non-base 10 number that is out of the range of the <xref:System.Int64> data type is converted to an <xref:System.Int64> value without the method throwing an exception.</span></span> <span data-ttu-id="377f1-1656">下列範例會將轉換<xref:System.UInt64.MaxValue>其十六進位字串表示法，然後呼叫<xref:System.Convert.ToInt64%28System.String%2CSystem.Int32%29>方法。</span><span class="sxs-lookup"><span data-stu-id="377f1-1656">The following example converts <xref:System.UInt64.MaxValue> to its hexadecimal string representation, and then calls the <xref:System.Convert.ToInt64%28System.String%2CSystem.Int32%29> method.</span></span> <span data-ttu-id="377f1-1657">而不是擲回例外狀況，此方法會顯示訊息，「"0xFFFFFFFFFFFFFFFF 轉換為-1。</span><span class="sxs-lookup"><span data-stu-id="377f1-1657">Instead of throwing an exception, the method displays the message, "0xFFFFFFFFFFFFFFFF converts to -1."</span></span>  
  
 [!code-csharp[System.Convert.BaseConversion#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#7)]
 [!code-vb[System.Convert.BaseConversion#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#7)]  
  
 <span data-ttu-id="377f1-1658">執行的二進位運算或數值的轉換時一律確認的方法使用適當的數值表示法，來轉譯特定的值，開發人員的責任。</span><span class="sxs-lookup"><span data-stu-id="377f1-1658">When performing binary operations or numeric conversions, it is always the responsibility of the developer to verify that a method is using the appropriate numeric representation to interpret a particular value.</span></span> <span data-ttu-id="377f1-1659">如下列範例所示，您可以確保，方法會處理溢位適當是先判斷值是否代表不帶正負號或帶正負號的類型時將它轉換成其十六進位字串表示。</span><span class="sxs-lookup"><span data-stu-id="377f1-1659">As the following example illustrates, you can ensure that the method handles overflows appropriately by first determining whether a value represents an unsigned or a signed type when converting it to its hexadecimal string representation.</span></span> <span data-ttu-id="377f1-1660">如果原始值為不帶正負號的類型，但是在轉換回整數的結果的值的正負號位元為開啟，會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="377f1-1660">Throw an exception if the original value was an unsigned type but the conversion back to an integer yields a value whose sign bit is on.</span></span>  
  
 [!code-csharp[System.Convert.BaseConversion#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#8)]
 [!code-vb[System.Convert.BaseConversion#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#8)]  
  
 <span data-ttu-id="377f1-1661">下列範例會嘗試解譯為十六進位字串的字串陣列中每個項目，並將它轉換為長整數。</span><span class="sxs-lookup"><span data-stu-id="377f1-1661">The following example attempts to interpret each element in a string array as a hexadecimal string and convert it to a long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_2.cs#15)]
 [!code-vb[System.Convert.ToInt64#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_2.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="377f1-1662">
            <paramref name="fromBase" /> 不是 2、8、10 或 16。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1662">
              <paramref name="fromBase" /> is not 2, 8, 10, or 16.</span>
          </span>
          <span data-ttu-id="377f1-1663">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1663">-or-</span>
          </span>
          <span data-ttu-id="377f1-1664">
            <paramref name="value" />，表示非 Base 10 的帶正負號的數字有前置一個負號。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1664">
              <paramref name="value" />, which represents a non-base 10 signed number, is prefixed with a negative sign.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="377f1-1665">
            <paramref name="value" /> 為 <see cref="F:System.String.Empty" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1665">
              <paramref name="value" /> is <see cref="F:System.String.Empty" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="377f1-1666">
            <paramref name="value" /> 所包含的字元在 <paramref name="fromBase" /> 指定的基底中不是有效數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1666">
              <paramref name="value" /> contains a character that is not a valid digit in the base specified by <paramref name="fromBase" />.</span>
          </span>
          <span data-ttu-id="377f1-1667">如果 <paramref name="value" /> 中的第一個字元無效，例外狀況訊息會指出沒有數字可進行轉換；否則訊息會指出 <paramref name="value" /> 包含無效的尾端字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1667">The exception message indicates that there are no digits to convert if the first character in <paramref name="value" /> is invalid; otherwise, the message indicates that <paramref name="value" /> contains invalid trailing characters.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-1668">
            <paramref name="value" />，表示非 Base 10 的帶正負號的數字有前置一個負號。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1668">
              <paramref name="value" />, which represents a non-base 10 signed number, is prefixed with a negative sign.</span>
          </span>
          <span data-ttu-id="377f1-1669">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1669">-or-</span>
          </span>
          <span data-ttu-id="377f1-1670">
            <paramref name="value" /> 代表小於 <see cref="F:System.Int64.MinValue" /> 或大於 <see cref="F:System.Int64.MaxValue" /> 的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1670">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToSByte">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="377f1-1671">將指定的值轉換為 8 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1671">Converts a specified value to an 8-bit signed integer.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As Boolean) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(bool value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1672">要轉換的布林值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1672">The Boolean value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1673">將指定的布林值轉換為相等的 8 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1673">Converts the specified Boolean value to the equivalent 8-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1674">如果 <paramref name="value" /> 為 <see langword="true" />，則為數字 1，否則為 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1674">The number 1 if <paramref name="value" /> is <see langword="true" />; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-1675">下列範例會將轉換的布林值`true`和`false`為已簽署的位元組值。</span><span class="sxs-lookup"><span data-stu-id="377f1-1675">The following example converts the Boolean values `true` and `false` to signed byte values.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte1.cs#1)]
 [!code-vb[System.Convert.ToSByte#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As Byte) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(System::Byte value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1676">要轉換之 8 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1676">The 8-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1677">將指定的 8 位元不帶正負號的整數值，轉換為相等的 8 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1677">Converts the value of the specified 8-bit unsigned integer to the equivalent 8-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1678">與 <paramref name="value" /> 相等的 8 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1678">An 8-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-1679">下列範例會嘗試將位元組陣列中的每個項目轉換成帶正負號的位元組。</span><span class="sxs-lookup"><span data-stu-id="377f1-1679">The following example attempts to convert each element in a byte array to a signed byte.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte1.cs#2)]
 [!code-vb[System.Convert.ToSByte#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-1680">
            <paramref name="value" /> 大於 <see cref="F:System.SByte.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1680">
              <paramref name="value" /> is greater than <see cref="F:System.SByte.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As Char) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(char value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1681">要轉換的 Unicode 字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1681">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1682">將指定的 Unicode 字元值轉換為相等的 8 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1682">Converts the value of the specified Unicode character to the equivalent 8-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1683">與 <paramref name="value" /> 相等的 8 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1683">An 8-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-1684">下列範例會嘗試將陣列中的每個項目<xref:System.Char>帶正負號位元組的值。</span><span class="sxs-lookup"><span data-stu-id="377f1-1684">The following example attempts to convert each element in an array of <xref:System.Char> values to a signed byte.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte1.cs#3)]
 [!code-vb[System.Convert.ToSByte#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-1685">
            <paramref name="value" /> 大於 <see cref="F:System.SByte.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1685">
              <paramref name="value" /> is greater than <see cref="F:System.SByte.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As DateTime) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(DateTime value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1686">要轉換的日期和時間值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1686">The date and time value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1687">呼叫這個方法一律會擲回 <see cref="T:System.InvalidCastException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1687">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1688">不支援這個轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1688">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="377f1-1689">沒有傳回值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1689">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="377f1-1690">不支援這個轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1690">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As Decimal) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(System::Decimal value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1691">要轉換的十進位數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1691">The decimal number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1692">將指定之十進位數字的值，轉換為相等的 8 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1692">Converts the value of the specified decimal number to an equivalent 8-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1693">
            <paramref name="value" />，四捨五入為最接近的 8 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1693">
              <paramref name="value" />, rounded to the nearest 8-bit signed integer.</span>
          </span>
          <span data-ttu-id="377f1-1694">如果 <paramref name="value" /> 介於兩個整數正中間時，則傳回偶數；也就是 4.5 會轉換為 4，5.5 會轉換為 6。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1694">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-1695">下列範例會嘗試將陣列中的每個項目<xref:System.Decimal>帶正負號位元組的值。</span><span class="sxs-lookup"><span data-stu-id="377f1-1695">The following example attempts to convert each element in an array of <xref:System.Decimal> values to a signed byte.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte1.cs#4)]
 [!code-vb[System.Convert.ToSByte#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-1696">
            <paramref name="value" /> 大於 <see cref="F:System.SByte.MaxValue" /> 或小於 <see cref="F:System.SByte.MinValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1696">
              <paramref name="value" /> is greater than <see cref="F:System.SByte.MaxValue" /> or less than <see cref="F:System.SByte.MinValue" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As Double) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(double value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1697">要轉換的雙精確度浮點數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1697">The double-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1698">將指定之雙精確度浮點數的值，轉換為相等的 8 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1698">Converts the value of the specified double-precision floating-point number to an equivalent 8-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1699">
            <paramref name="value" />，四捨五入為最接近的 8 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1699">
              <paramref name="value" />, rounded to the nearest 8-bit signed integer.</span>
          </span>
          <span data-ttu-id="377f1-1700">如果 <paramref name="value" /> 介於兩個整數正中間時，則傳回偶數；也就是 4.5 會轉換為 4，5.5 會轉換為 6。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1700">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-1701">下列範例會嘗試將陣列中的每個項目<xref:System.Double>帶正負號位元組的值。</span><span class="sxs-lookup"><span data-stu-id="377f1-1701">The following example attempts to convert each element in an array of <xref:System.Double> values to a signed byte.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte1.cs#5)]
 [!code-vb[System.Convert.ToSByte#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-1702">
            <paramref name="value" /> 大於 <see cref="F:System.SByte.MaxValue" /> 或小於 <see cref="F:System.SByte.MinValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1702">
              <paramref name="value" /> is greater than <see cref="F:System.SByte.MaxValue" /> or less than <see cref="F:System.SByte.MinValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Double" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As Short) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(short value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1703">要轉換的 16 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1703">The 16-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1704">將指定的 16 位元帶正負號的整數值，轉換為相等的 8 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1704">Converts the value of the specified 16-bit signed integer to the equivalent 8-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1705">與 <paramref name="value" /> 相等的 8 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1705">An 8-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-1706">下列範例會嘗試將帶正負號的 16 位元整數的陣列中每個項目轉換成帶正負號的位元組。</span><span class="sxs-lookup"><span data-stu-id="377f1-1706">The following example attempts to convert each element in an array of signed 16-bit integers to a signed byte.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte1.cs#6)]
 [!code-vb[System.Convert.ToSByte#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-1707">
            <paramref name="value" /> 大於 <see cref="F:System.SByte.MaxValue" /> 或小於 <see cref="F:System.SByte.MinValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1707">
              <paramref name="value" /> is greater than <see cref="F:System.SByte.MaxValue" /> or less than <see cref="F:System.SByte.MinValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As Integer) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(int value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1708">要轉換的 32 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1708">The 32-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1709">將指定的 32 位元帶正負號的整數值轉換為相等的 8 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1709">Converts the value of the specified 32-bit signed integer to an equivalent 8-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1710">與 <paramref name="value" /> 相等的 8 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1710">An 8-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-1711">下列範例會嘗試將帶正負號整數的陣列中每個項目轉換成帶正負號的位元組。</span><span class="sxs-lookup"><span data-stu-id="377f1-1711">The following example attempts to convert each element in an array of signed integers to a signed byte.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte1.cs#7)]
 [!code-vb[System.Convert.ToSByte#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-1712">
            <paramref name="value" /> 大於 <see cref="F:System.SByte.MaxValue" /> 或小於 <see cref="F:System.SByte.MinValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1712">
              <paramref name="value" /> is greater than <see cref="F:System.SByte.MaxValue" /> or less than <see cref="F:System.SByte.MinValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As Long) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(long value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1713">要轉換的 64 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1713">The 64-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1714">將指定的 64 位元帶正負號的整數值轉換成對等的 8 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1714">Converts the value of the specified 64-bit signed integer to an equivalent 8-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1715">與 <paramref name="value" /> 相等的 8 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1715">An 8-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-1716">下列範例會嘗試將長整數的陣列中每個項目轉換成帶正負號的位元組。</span><span class="sxs-lookup"><span data-stu-id="377f1-1716">The following example attempts to convert each element in an array of long integers to a signed byte.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte1.cs#8)]
 [!code-vb[System.Convert.ToSByte#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-1717">
            <paramref name="value" /> 大於 <see cref="F:System.SByte.MaxValue" /> 或小於 <see cref="F:System.SByte.MinValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1717">
              <paramref name="value" /> is greater than <see cref="F:System.SByte.MaxValue" /> or less than <see cref="F:System.SByte.MinValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As Object) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1718">實作 <see cref="T:System.IConvertible" /> 介面的物件，或是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1718">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1719">將指定之物件的值，轉換為 8 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1719">Converts the value of the specified object to an 8-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1720">與 <paramref name="value" /> 相等的 8 位元帶正負號的整數；如果 <paramref name="value" /> 為 <see langword="null" />，則為零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1720">An 8-bit signed integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-1721">傳回值是叫用的結果<xref:System.IConvertible.ToSByte%2A?displayProperty=nameWithType>方法的基礎類型`value`。</span><span class="sxs-lookup"><span data-stu-id="377f1-1721">The return value is the result of invoking the <xref:System.IConvertible.ToSByte%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-1722">下列範例會嘗試將物件陣列中的每個項目轉換成帶正負號的位元組。</span><span class="sxs-lookup"><span data-stu-id="377f1-1722">The following example attempts to convert each element in an object array to a signed byte.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte1.cs#9)]
 [!code-vb[System.Convert.ToSByte#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="377f1-1723">
            <paramref name="value" /> 不是適當的格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1723">
              <paramref name="value" /> is not in an appropriate format.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="377f1-1724">
            <paramref name="value" /> 未實作 <see cref="T:System.IConvertible" /> 介面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1724">
              <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
          <span data-ttu-id="377f1-1725">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1725">-or-</span>
          </span>
          <span data-ttu-id="377f1-1726">不支援轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1726">The conversion is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-1727">
            <paramref name="value" /> 代表小於 <see cref="F:System.SByte.MinValue" /> 或大於 <see cref="F:System.SByte.MaxValue" /> 的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1727">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As SByte) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(System::SByte value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1728">傳回 8 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1728">The 8-bit signed integer to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1729">傳回指定的 8 位元帶正負號的整數；不會執行實際的轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1729">Returns the specified 8-bit signed integer; no actual conversion is performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1730">傳回未變更的 <paramref name="value" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1730">
              <paramref name="value" /> is returned unchanged.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As Single) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(float value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1731">要轉換的單精確度浮點數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1731">The single-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1732">將指定之單精確度浮點數的值，轉換為相等的 8 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1732">Converts the value of the specified single-precision floating-point number to an equivalent 8-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1733">
            <paramref name="value" />，四捨五入為最接近的 8 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1733">
              <paramref name="value" />, rounded to the nearest 8-bit signed integer.</span>
          </span>
          <span data-ttu-id="377f1-1734">如果 <paramref name="value" /> 介於兩個整數正中間時，則傳回偶數；也就是 4.5 會轉換為 4，5.5 會轉換為 6。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1734">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-1735">下列範例會嘗試將陣列中的每個項目<xref:System.Single>帶正負號位元組的值。</span><span class="sxs-lookup"><span data-stu-id="377f1-1735">The following example attempts to convert each element in an array of <xref:System.Single> values to a signed byte.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte1.cs#9)]
 [!code-vb[System.Convert.ToSByte#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-1736">
            <paramref name="value" /> 大於 <see cref="F:System.SByte.MaxValue" /> 或小於 <see cref="F:System.SByte.MinValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1736">
              <paramref name="value" /> is greater than <see cref="F:System.SByte.MaxValue" /> or less than <see cref="F:System.SByte.MinValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Single" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As String) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1737">字串，包含要轉換的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1737">A string that contains the number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1738">將指定之數字的字串表示，轉換為相等的 8 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1738">Converts the specified string representation of a number to an equivalent 8-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1739">與 <paramref name="value" /> 中之數字相等的 8 位元帶正負號的整數；如果 value 為 <see langword="null" />，則為 0 (零)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1739">An 8-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if value is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-1740">使用<xref:System.Convert.ToSByte%28System.String%29>方法相當於傳遞`value`至<xref:System.SByte.Parse%28System.String%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="377f1-1740">Using the <xref:System.Convert.ToSByte%28System.String%29> method is equivalent to passing `value` to the <xref:System.SByte.Parse%28System.String%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="377f1-1741">`value` 是使用目前執行緒文化特性的格式化慣例來解譯。</span><span class="sxs-lookup"><span data-stu-id="377f1-1741">`value` is interpreted by using the formatting conventions of the current thread culture.</span></span>  
  
 <span data-ttu-id="377f1-1742">如果您不想處理的例外狀況，如果轉換失敗，您可以呼叫<xref:System.SByte.TryParse%2A?displayProperty=nameWithType>方法改為。</span><span class="sxs-lookup"><span data-stu-id="377f1-1742">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.SByte.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="377f1-1743">它會傳回<xref:System.Boolean>值，指出轉換成功或失敗。</span><span class="sxs-lookup"><span data-stu-id="377f1-1743">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-1744">下列範例會將轉換的字串表示法<xref:System.SByte>值與`ToSByte`方法，使用預設格式。</span><span class="sxs-lookup"><span data-stu-id="377f1-1744">The following example converts string representations of <xref:System.SByte> values with the `ToSByte` method, using default formatting.</span></span>  
  
 [!code-cpp[System.Convert.ToSInts_String#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToSInts_String/CPP/tosbyte.cpp#4)]
 [!code-csharp[System.Convert.ToSInts_String#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToSInts_String/CS/tosbyte.cs#4)]
 [!code-vb[System.Convert.ToSInts_String#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToSInts_String/VB/tosbyte.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="377f1-1745">
            <paramref name="value" /> 不是由選擇性正負號之後跟隨一連串數字 (0 到 9) 所組成。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1745">
              <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-1746">
            <paramref name="value" /> 代表小於 <see cref="F:System.SByte.MinValue" /> 或大於 <see cref="F:System.SByte.MaxValue" /> 的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1746">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.SByte.Parse(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As UShort) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(System::UInt16 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1747">要轉換之 16 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1747">The 16-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1748">將指定的 16 位元不帶正負號的整數值，轉換為相等的 8 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1748">Converts the value of the specified 16-bit unsigned integer to the equivalent 8-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1749">與 <paramref name="value" /> 相等的 8 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1749">An 8-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-1750">下列範例會嘗試將不帶正負號的 16 位元整數的陣列中每個項目轉換成帶正負號的位元組。</span><span class="sxs-lookup"><span data-stu-id="377f1-1750">The following example attempts to convert each element in an array of unsigned 16-bit integers to a signed byte.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte1.cs#11)]
 [!code-vb[System.Convert.ToSByte#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-1751">
            <paramref name="value" /> 大於 <see cref="F:System.SByte.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1751">
              <paramref name="value" /> is greater than <see cref="F:System.SByte.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As UInteger) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(System::UInt32 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1752">要轉換之 32 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1752">The 32-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1753">將指定的 32 位元不帶正負號整數的值，轉換為相等的 8 位元帶正負號整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1753">Converts the value of the specified 32-bit unsigned integer to an equivalent 8-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1754">與 <paramref name="value" /> 相等的 8 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1754">An 8-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-1755">下列範例會嘗試將整數陣列中的每個項目轉換成帶正負號的位元組。</span><span class="sxs-lookup"><span data-stu-id="377f1-1755">The following example attempts to convert each element in an integer array to a signed byte.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte1.cs#12)]
 [!code-vb[System.Convert.ToSByte#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte1.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-1756">
            <paramref name="value" /> 大於 <see cref="F:System.SByte.MaxValue" /> 或小於 <see cref="F:System.SByte.MinValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1756">
              <paramref name="value" /> is greater than <see cref="F:System.SByte.MaxValue" /> or less than <see cref="F:System.SByte.MinValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As ULong) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(System::UInt64 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1757">要轉換之 64 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1757">The 64-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1758">將指定的 64 位元不帶正負號整數的值，轉換為相等的 8 位元帶正負號整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1758">Converts the value of the specified 64-bit unsigned integer to an equivalent 8-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1759">與 <paramref name="value" /> 相等的 8 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1759">An 8-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-1760">下列範例會嘗試將長整數的陣列中每個項目轉換成帶正負號的位元組。</span><span class="sxs-lookup"><span data-stu-id="377f1-1760">The following example attempts to convert each element in an array of long integers to a signed byte.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte1.cs#13)]
 [!code-vb[System.Convert.ToSByte#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-1761">
            <paramref name="value" /> 大於 <see cref="F:System.SByte.MaxValue" /> 或小於 <see cref="F:System.SByte.MinValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1761">
              <paramref name="value" /> is greater than <see cref="F:System.SByte.MaxValue" /> or less than <see cref="F:System.SByte.MinValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (object value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(object value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As Object, provider As IFormatProvider) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(System::Object ^ value, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1762">實作 <see cref="T:System.IConvertible" /> 介面的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1762">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="377f1-1763">物件，提供特定文化特性格式資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1763">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1764">使用指定之特定文化特性格式資訊，將指定之物件的值轉換為 8 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1764">Converts the value of the specified object to an 8-bit signed integer, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1765">與 <paramref name="value" /> 相等的 8 位元帶正負號的整數；如果 <paramref name="value" /> 為 <see langword="null" />，則為零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1765">An 8-bit signed integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-1766">`provider` 可讓使用者指定的內容的相關特定文化特性的轉換資訊`value`。</span><span class="sxs-lookup"><span data-stu-id="377f1-1766">`provider` enables the user to specify culture-specific conversion information about the contents of `value`.</span></span> <span data-ttu-id="377f1-1767">例如，如果`value`是<xref:System.String>表示數字，`provider`可能會提供用來代表該數字的標記法的特定文化特性資訊。</span><span class="sxs-lookup"><span data-stu-id="377f1-1767">For example, if `value` is a <xref:System.String> that represents a number, `provider` could supply culture-specific information about the notation used to represent that number.</span></span>  
  
 <span data-ttu-id="377f1-1768">基底類型忽略`provider`; 不過，如果，可能會使用參數`value`是使用者定義型別可實作<xref:System.IConvertible>介面。</span><span class="sxs-lookup"><span data-stu-id="377f1-1768">The base types ignore `provider`; however, the parameter may be used if `value` is a user-defined type that implements the <xref:System.IConvertible> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-1769">下列範例會定義`ByteString`類別，以儲存兩者帶正負號和不帶正負號為沿著與欄位，指出位元組的正負號的十六進位字串的位元組。</span><span class="sxs-lookup"><span data-stu-id="377f1-1769">The following example defines a `ByteString` class that stores both signed and unsigned bytes as hexadecimal strings along with a field that indicates the sign of the byte.</span></span> <span data-ttu-id="377f1-1770">`ByteString` 類別會實作 <xref:System.IConvertible> 介面。</span><span class="sxs-lookup"><span data-stu-id="377f1-1770">The `ByteString` class implements the <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="377f1-1771">其<xref:System.IConvertible.ToSByte%2A?displayProperty=nameWithType>方法呼叫<xref:System.SByte.Parse%28System.String%2CSystem.IFormatProvider%29>方法，以執行轉換。</span><span class="sxs-lookup"><span data-stu-id="377f1-1771">Its <xref:System.IConvertible.ToSByte%2A?displayProperty=nameWithType> method calls the <xref:System.SByte.Parse%28System.String%2CSystem.IFormatProvider%29> method to perform the conversion.</span></span> <span data-ttu-id="377f1-1772">如果失敗，就會擲回<xref:System.OverflowException>。</span><span class="sxs-lookup"><span data-stu-id="377f1-1772">If it fails, it throws an <xref:System.OverflowException>.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte2.cs#14)]
 [!code-vb[System.Convert.ToSByte#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte2.vb#14)]  
  
 <span data-ttu-id="377f1-1773">下列範例會示範如何<xref:System.IConvertible.ToSByte%2A?displayProperty=nameWithType>實作`ByteString`類別會呼叫<xref:System.Convert.ToSByte%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="377f1-1773">The following example shows how the <xref:System.IConvertible.ToSByte%2A?displayProperty=nameWithType> implementation of the `ByteString` class is called by the <xref:System.Convert.ToSByte%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte2.cs#15)]
 [!code-vb[System.Convert.ToSByte#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte2.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="377f1-1774">
            <paramref name="value" /> 不是適當的格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1774">
              <paramref name="value" /> is not in an appropriate format.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="377f1-1775">
            <paramref name="value" /> 未實作 <see cref="T:System.IConvertible" /> 介面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1775">
              <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
          <span data-ttu-id="377f1-1776">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1776">-or-</span>
          </span>
          <span data-ttu-id="377f1-1777">不支援轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1777">The conversion is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-1778">
            <paramref name="value" /> 代表小於 <see cref="F:System.SByte.MinValue" /> 或大於 <see cref="F:System.SByte.MaxValue" /> 的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1778">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As String, provider As IFormatProvider) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1779">字串，包含要轉換的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1779">A string that contains the number to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="377f1-1780">物件，提供特定文化特性格式資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1780">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1781">使用指定之特定文化特性格式資訊，將指定之數字的字串表示轉換為相等的 8 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1781">Converts the specified string representation of a number to an equivalent 8-bit signed integer, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1782">與 <paramref name="value" /> 相等的 8 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1782">An 8-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-1783">`provider` 是<xref:System.IFormatProvider>取得的執行個體<xref:System.Globalization.NumberFormatInfo>物件。</span><span class="sxs-lookup"><span data-stu-id="377f1-1783">`provider` is an <xref:System.IFormatProvider> instance that obtains a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="377f1-1784"><xref:System.Globalization.NumberFormatInfo>物件提供特定文化特性格式資訊`value`。</span><span class="sxs-lookup"><span data-stu-id="377f1-1784">The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of `value`.</span></span> <span data-ttu-id="377f1-1785">如果`provider`是`null`、<xref:System.Globalization.NumberFormatInfo>會使用目前文化特性。</span><span class="sxs-lookup"><span data-stu-id="377f1-1785">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> for the current culture is used.</span></span>  
  
 <span data-ttu-id="377f1-1786">如果您不想處理的例外狀況，如果轉換失敗，您可以呼叫<xref:System.SByte.TryParse%2A?displayProperty=nameWithType>方法改為。</span><span class="sxs-lookup"><span data-stu-id="377f1-1786">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.SByte.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="377f1-1787">它會傳回<xref:System.Boolean>值，指出轉換成功或失敗。</span><span class="sxs-lookup"><span data-stu-id="377f1-1787">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-1788">下列範例會將轉換的字串表示法<xref:System.SByte>值與`ToSByte`方法，使用<xref:System.IFormatProvider>物件。</span><span class="sxs-lookup"><span data-stu-id="377f1-1788">The following example converts string representations of <xref:System.SByte> values with the `ToSByte` method, using an <xref:System.IFormatProvider> object.</span></span>  
  
 [!code-cpp[System.Convert.ToSInts_String#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToSInts_String/CPP/tosbyte.cpp#4)]
 [!code-csharp[System.Convert.ToSInts_String#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToSInts_String/CS/tosbyte.cs#4)]
 [!code-vb[System.Convert.ToSInts_String#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToSInts_String/VB/tosbyte.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="377f1-1789">
            <paramref name="value" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1789">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="377f1-1790">
            <paramref name="value" /> 不是由選擇性正負號之後跟隨一連串數字 (0 到 9) 所組成。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1790">
              <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-1791">
            <paramref name="value" /> 代表小於 <see cref="F:System.SByte.MinValue" /> 或大於 <see cref="F:System.SByte.MaxValue" /> 的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1791">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.SByte.Parse(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (string value, int fromBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(string value, int32 fromBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As String, fromBase As Integer) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(System::String ^ value, int fromBase);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fromBase" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1792">字串，包含要轉換的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1792">A string that contains the number to convert.</span>
          </span>
        </param>
        <param name="fromBase">
          <span data-ttu-id="377f1-1793">
            <c>value</c> 中數字的基底，必須是 2、8、10 或 16。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1793">The base of the number in <c>value</c>, which must be 2, 8, 10, or 16.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1794">將指定基底中數字的字串表示，轉換為相等的 8 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1794">Converts the string representation of a number in a specified base to an equivalent 8-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1795">與 <paramref name="value" /> 中之數字相等的 8 位元帶正負號的整數；如果 <paramref name="value" /> 為 <see langword="null" />，則為 0 (零)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1795">An 8-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-1796">如果`fromBase`是 16，您可以使用前置詞指定的數字`value`與 「 0x 」 或 「 0x 」 的參數。</span><span class="sxs-lookup"><span data-stu-id="377f1-1796">If `fromBase` is 16, you can prefix the number specified by the `value` parameter with "0x" or "0X".</span></span>  
  
 <span data-ttu-id="377f1-1797">因為非基底 10 數值表示，不支援負號<xref:System.Convert.ToSByte%28System.String%2CSystem.Int32%29>方法會假設負數使用二的補數表示法。</span><span class="sxs-lookup"><span data-stu-id="377f1-1797">Because the negative sign is not supported for non-base 10 numeric representations, the <xref:System.Convert.ToSByte%28System.String%2CSystem.Int32%29> method assumes that negative numbers use two’s complement representation.</span></span> <span data-ttu-id="377f1-1798">換句話說，此方法一定會將一個位元組 （7 位元） 的高序位位元解譯其正負號位元。</span><span class="sxs-lookup"><span data-stu-id="377f1-1798">In other words, the method always interprets the high-order bit of a byte (bit 7) as its sign bit.</span></span> <span data-ttu-id="377f1-1799">如此一來，就可以撰寫程式碼中非基底 10 編號超出範圍的<xref:System.SByte>資料類型轉換成<xref:System.SByte>值而不擲回例外狀況的方法。</span><span class="sxs-lookup"><span data-stu-id="377f1-1799">As a result, it is possible to write code in which a non-base 10 number that is out of the range of the <xref:System.SByte> data type is converted to an <xref:System.SByte> value without the method throwing an exception.</span></span> <span data-ttu-id="377f1-1800">下列範例會將轉換<xref:System.Byte.MaxValue>其十六進位字串表示法，然後呼叫<xref:System.Convert.ToSByte%28System.String%2CSystem.Int32%29>方法。</span><span class="sxs-lookup"><span data-stu-id="377f1-1800">The following example converts <xref:System.Byte.MaxValue> to its hexadecimal string representation, and then calls the <xref:System.Convert.ToSByte%28System.String%2CSystem.Int32%29> method.</span></span> <span data-ttu-id="377f1-1801">而不是擲回例外狀況，此方法會顯示訊息，「"0xff 轉換為-1。</span><span class="sxs-lookup"><span data-stu-id="377f1-1801">Instead of throwing an exception, the method displays the message, "0xff converts to -1."</span></span>  
  
 [!code-csharp[System.Convert.BaseConversion#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#9)]
 [!code-vb[System.Convert.BaseConversion#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#9)]  
  
 <span data-ttu-id="377f1-1802">執行的二進位運算或數值的轉換時一律確認的方法使用適當的數值表示法，來轉譯特定的值，開發人員的責任。</span><span class="sxs-lookup"><span data-stu-id="377f1-1802">When performing binary operations or numeric conversions, it is always the responsibility of the developer to verify that a method is using the appropriate numeric representation to interpret a particular value.</span></span> <span data-ttu-id="377f1-1803">如下列範例所示，您可以確保，方法會處理溢位適當是先判斷值是否代表不帶正負號或帶正負號的類型時將它轉換成其十六進位字串表示。</span><span class="sxs-lookup"><span data-stu-id="377f1-1803">As the following example illustrates, you can ensure that the method handles overflows appropriately by first determining whether a value represents an unsigned or a signed type when converting it to its hexadecimal string representation.</span></span> <span data-ttu-id="377f1-1804">如果原始值為不帶正負號的類型，但在轉換回帶正負號的位元組會產生其正負號位元的值，會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="377f1-1804">Throw an exception if the original value was an unsigned type but the conversion back to a signed byte yields a value whose sign bit is on.</span></span>  
  
 [!code-csharp[System.Convert.BaseConversion#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#10)]
 [!code-vb[System.Convert.BaseConversion#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#10)]  
  
   
  
## Examples  
 <span data-ttu-id="377f1-1805">下列範例會嘗試解譯為二進位，八進位，將字串陣列中的項目和數字值的十六進位表示法，以便將它們轉換成不帶正負號的位元組。</span><span class="sxs-lookup"><span data-stu-id="377f1-1805">The following example attempts to interpret the elements in a string array as the binary, octal, and hexadecimal representation of numeric values in order to convert them to unsigned bytes.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte3.cs#16)]
 [!code-vb[System.Convert.ToSByte#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte3.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="377f1-1806">
            <paramref name="fromBase" /> 不是 2、8、10 或 16。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1806">
              <paramref name="fromBase" /> is not 2, 8, 10, or 16.</span>
          </span>
          <span data-ttu-id="377f1-1807">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1807">-or-</span>
          </span>
          <span data-ttu-id="377f1-1808">
            <paramref name="value" />，表示非 Base 10 的帶正負號的數字有前置一個負號。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1808">
              <paramref name="value" />, which represents a non-base 10 signed number, is prefixed with a negative sign.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="377f1-1809">
            <paramref name="value" /> 為 <see cref="F:System.String.Empty" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1809">
              <paramref name="value" /> is <see cref="F:System.String.Empty" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="377f1-1810">
            <paramref name="value" /> 所包含的字元在 <paramref name="fromBase" /> 指定的基底中不是有效數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1810">
              <paramref name="value" /> contains a character that is not a valid digit in the base specified by <paramref name="fromBase" />.</span>
          </span>
          <span data-ttu-id="377f1-1811">如果 <paramref name="value" /> 中的第一個字元無效，例外狀況訊息會指出沒有數字可進行轉換；否則訊息會指出 <paramref name="value" /> 包含無效的尾端字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1811">The exception message indicates that there are no digits to convert if the first character in <paramref name="value" /> is invalid; otherwise, the message indicates that <paramref name="value" /> contains invalid trailing characters.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-1812">
            <paramref name="value" />，表示非 Base 10 的帶正負號的數字有前置一個負號。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1812">
              <paramref name="value" />, which represents a non-base 10 signed number, is prefixed with a negative sign.</span>
          </span>
          <span data-ttu-id="377f1-1813">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1813">-or-</span>
          </span>
          <span data-ttu-id="377f1-1814">
            <paramref name="value" /> 代表小於 <see cref="F:System.SByte.MinValue" /> 或大於 <see cref="F:System.SByte.MaxValue" /> 的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1814">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToSingle">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="377f1-1815">將指定的值轉換為單精確度浮點數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1815">Converts a specified value to a single-precision floating-point number.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As Boolean) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(bool value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1816">要轉換的布林值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1816">The Boolean value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1817">將指定的布林值轉換為相等的單精確度浮點數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1817">Converts the specified Boolean value to the equivalent single-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1818">如果 <paramref name="value" /> 為 <see langword="true" />，則為數字 1，否則為 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1818">The number 1 if <paramref name="value" /> is <see langword="true" />; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-1819">下列範例會將轉換的布林值`true`和`false`至<xref:System.Single>值。</span><span class="sxs-lookup"><span data-stu-id="377f1-1819">The following example converts the Boolean values `true` and `false` to <xref:System.Single> values.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle1.cs#1)]
 [!code-vb[System.Convert.ToSingle#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As Byte) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(System::Byte value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1820">要轉換之 8 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1820">The 8-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1821">將指定之 8 位元不帶正負號的整數值，轉換為相等的單精確度浮點數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1821">Converts the value of the specified 8-bit unsigned integer to the equivalent single-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1822">單精確度浮點數，與 <paramref name="value" /> 相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1822">A single-precision floating-point number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-1823">下列範例會將轉換的位元組值陣列中每個項目<xref:System.Single>值。</span><span class="sxs-lookup"><span data-stu-id="377f1-1823">The following example converts each element in an array of byte values to a <xref:System.Single> value.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle1.cs#2)]
 [!code-vb[System.Convert.ToSingle#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As Char) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(char value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1824">要轉換的 Unicode 字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1824">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1825">呼叫這個方法一律會擲回 <see cref="T:System.InvalidCastException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1825">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1826">不支援這個轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1826">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="377f1-1827">沒有傳回值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1827">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="377f1-1828">不支援這個轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1828">This conversion is not supported.</span>
          </span>
        </exception>
        <altmember cref="T:System.Char" />
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As DateTime) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(DateTime value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1829">要轉換的日期和時間值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1829">The date and time value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1830">呼叫這個方法一律會擲回 <see cref="T:System.InvalidCastException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1830">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1831">不支援這個轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1831">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="377f1-1832">沒有傳回值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1832">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="377f1-1833">不支援這個轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1833">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As Decimal) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(System::Decimal value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1834">要轉換的十進位數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1834">The decimal number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1835">將指定之十進位數字的值，轉換為相等的單精確度浮點數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1835">Converts the value of the specified decimal number to an equivalent single-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1836">單精確度浮點數，與 <paramref name="value" /> 相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1836">A single-precision floating-point number that is equivalent to <paramref name="value" />.</span>
          </span>
          <span data-ttu-id="377f1-1837">
            <paramref name="value" /> 會以捨入為最接近的數字來捨入。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1837">
              <paramref name="value" /> is rounded using rounding to nearest.</span>
          </span>
          <span data-ttu-id="377f1-1838">例如，在四捨五入為兩個小數位數時，值 2.345 會變成 2.34，而值 2.355 會變成 2.36。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1838">For example, when rounded to two decimals, the value 2.345 becomes 2.34 and the value 2.355 becomes 2.36.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-1839">下列範例會將轉換陣列中的每個項目<xref:System.Decimal>值<xref:System.Single>值。</span><span class="sxs-lookup"><span data-stu-id="377f1-1839">The following example converts each element in an array of <xref:System.Decimal> values to a <xref:System.Single> value.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle1.cs#3)]
 [!code-vb[System.Convert.ToSingle#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As Double) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(double value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1840">要轉換的雙精確度浮點數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1840">The double-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1841">將指定之雙精確度浮點數的值，轉換為相等的單精確度浮點數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1841">Converts the value of the specified double-precision floating-point number to an equivalent single-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1842">單精確度浮點數，與 <paramref name="value" /> 相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1842">A single-precision floating-point number that is equivalent to <paramref name="value" />.</span>
          </span>
          <span data-ttu-id="377f1-1843">
            <paramref name="value" /> 會以捨入為最接近的數字來捨入。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1843">
              <paramref name="value" /> is rounded using rounding to nearest.</span>
          </span>
          <span data-ttu-id="377f1-1844">例如，在四捨五入為兩個小數位數時，值 2.345 會變成 2.34，而值 2.355 會變成 2.36。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1844">For example, when rounded to two decimals, the value 2.345 becomes 2.34 and the value 2.355 becomes 2.36.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-1845">下列範例會將轉換陣列中的每個項目<xref:System.Double>值<xref:System.Single>值。</span><span class="sxs-lookup"><span data-stu-id="377f1-1845">The following example converts each element in an array of <xref:System.Double> values to a <xref:System.Single> value.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle1.cs#4)]
 [!code-vb[System.Convert.ToSingle#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Double" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As Short) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(short value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1846">要轉換的 16 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1846">The 16-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1847">將指定之 16 位元帶正負號的整數值，轉換為相等的單精確度浮點數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1847">Converts the value of the specified 16-bit signed integer to an equivalent single-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1848">單精確度浮點數，與 <paramref name="value" /> 相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1848">A single-precision floating-point number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-1849">下列範例會將轉換的 16 位元的整數陣列中每個項目<xref:System.Single>值。</span><span class="sxs-lookup"><span data-stu-id="377f1-1849">The following example converts each element in an array of 16-bit integers to a <xref:System.Single> value.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle1.cs#5)]
 [!code-vb[System.Convert.ToSingle#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As Integer) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(int value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1850">要轉換的 32 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1850">The 32-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1851">將指定之 32 位元帶正負號的整數值，轉換為相等的單精確度浮點數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1851">Converts the value of the specified 32-bit signed integer to an equivalent single-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1852">單精確度浮點數，與 <paramref name="value" /> 相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1852">A single-precision floating-point number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-1853">下列範例會將轉換的整數陣列中每個項目<xref:System.Single>值。</span><span class="sxs-lookup"><span data-stu-id="377f1-1853">The following example converts each element in an integer array to a <xref:System.Single> value.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle1.cs#6)]
 [!code-vb[System.Convert.ToSingle#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As Long) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(long value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1854">要轉換的 64 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1854">The 64-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1855">將指定之 64 位元帶正負號的整數值，轉換為相等的單精確度浮點數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1855">Converts the value of the specified 64-bit signed integer to an equivalent single-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1856">單精確度浮點數，與 <paramref name="value" /> 相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1856">A single-precision floating-point number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-1857">下列範例會將轉換至的長整數的陣列中每個項目<xref:System.Single>值。</span><span class="sxs-lookup"><span data-stu-id="377f1-1857">The following example converts each element in an array of long integers to a <xref:System.Single> value.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle1.cs#7)]
 [!code-vb[System.Convert.ToSingle#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As Object) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1858">實作 <see cref="T:System.IConvertible" /> 介面的物件，或是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1858">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1859">將指定之物件的值，轉換為單精確度浮點數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1859">Converts the value of the specified object to a single-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1860">與 <paramref name="value" /> 相等的單精確度浮點數；如果 <paramref name="value" /> 為 <see langword="null" />，則為零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1860">A single-precision floating-point number that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-1861">傳回值是叫用的結果<xref:System.IConvertible.ToSingle%2A?displayProperty=nameWithType>方法的基礎類型`value`。</span><span class="sxs-lookup"><span data-stu-id="377f1-1861">The return value is the result of invoking the <xref:System.IConvertible.ToSingle%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-1862">下列範例會嘗試將物件陣列中的每個項目<xref:System.Single>值。</span><span class="sxs-lookup"><span data-stu-id="377f1-1862">The following example attempts to convert each element in an object array to a <xref:System.Single> value.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle1.cs#8)]
 [!code-vb[System.Convert.ToSingle#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="377f1-1863">
            <paramref name="value" /> 不是適當的格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1863">
              <paramref name="value" /> is not in an appropriate format.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="377f1-1864">
            <paramref name="value" /> 未實作 <see cref="T:System.IConvertible" /> 介面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1864">
              <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
          <span data-ttu-id="377f1-1865">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1865">-or-</span>
          </span>
          <span data-ttu-id="377f1-1866">不支援轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1866">The conversion is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-1867">
            <paramref name="value" /> 代表小於 <see cref="F:System.Single.MinValue" /> 或大於 <see cref="F:System.Single.MaxValue" /> 的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1867">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Single.MinValue" /> or greater than <see cref="F:System.Single.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As SByte) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(System::SByte value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1868">要轉換的 8 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1868">The 8-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1869">將指定之 8 位元帶正負號的整數值，轉換為相等的單精確度浮點數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1869">Converts the value of the specified 8-bit signed integer to the equivalent single-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1870">與 <paramref name="value" /> 相等的 8 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1870">An 8-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-1871">下列範例將轉換成帶正負號的位元組陣列中每個項目<xref:System.Single>值。</span><span class="sxs-lookup"><span data-stu-id="377f1-1871">The following example converts each element in a signed byte array to a <xref:System.Single> value.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle1.cs#9)]
 [!code-vb[System.Convert.ToSingle#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle1.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(float value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1872">要傳回的單精確度浮點數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1872">The single-precision floating-point number to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1873">傳回指定的單精確度浮點數，不執行實際的轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1873">Returns the specified single-precision floating-point number; no actual conversion is performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1874">傳回未變更的 <paramref name="value" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1874">
              <paramref name="value" /> is returned unchanged.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Single" />
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As String) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1875">字串，包含要轉換的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1875">A string that contains the number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1876">將指定之數字的字串表示，轉換為相等的單精確度浮點數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1876">Converts the specified string representation of a number to an equivalent single-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1877">與 <paramref name="value" /> 中之數字相等的單精確度浮點數；如果 <paramref name="value" /> 為 <see langword="null" />，則為 0 (零)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1877">A single-precision floating-point number that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-1878">使用<xref:System.Convert.ToSingle%28System.String%29>方法相當於傳遞`value`至<xref:System.Single.Parse%28System.String%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="377f1-1878">Using the <xref:System.Convert.ToSingle%28System.String%29> method is equivalent to passing `value` to the <xref:System.Single.Parse%28System.String%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="377f1-1879">`value` 是使用目前執行緒文化特性的格式化慣例來解譯。</span><span class="sxs-lookup"><span data-stu-id="377f1-1879">`value` is interpreted by using the formatting conventions of the current thread culture.</span></span>  
  
 <span data-ttu-id="377f1-1880">如果您不想處理的例外狀況，如果轉換失敗，您可以呼叫<xref:System.Single.TryParse%2A?displayProperty=nameWithType>方法改為。</span><span class="sxs-lookup"><span data-stu-id="377f1-1880">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Single.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="377f1-1881">它會傳回<xref:System.Boolean>值，指出轉換成功或失敗。</span><span class="sxs-lookup"><span data-stu-id="377f1-1881">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-1882">下列範例會嘗試將數字的字串陣列中每個項目<xref:System.Single>值。</span><span class="sxs-lookup"><span data-stu-id="377f1-1882">The following example attempts to convert each element in an array of numeric strings to a <xref:System.Single> value.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle1.cs#10)]
 [!code-vb[System.Convert.ToSingle#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="377f1-1883">
            <paramref name="value" /> 不是有效格式的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1883">
              <paramref name="value" /> is not a number in a valid format.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-1884">
            <paramref name="value" /> 代表小於 <see cref="F:System.Single.MinValue" /> 或大於 <see cref="F:System.Single.MaxValue" /> 的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1884">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Single.MinValue" /> or greater than <see cref="F:System.Single.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As UShort) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(System::UInt16 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1885">要轉換之 16 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1885">The 16-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1886">將指定之 16 位元不帶正負號的整數值，轉換為相等的單精確度浮點數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1886">Converts the value of the specified 16-bit unsigned integer to the equivalent single-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1887">單精確度浮點數，與 <paramref name="value" /> 相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1887">A single-precision floating-point number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-1888">下列範例會將轉換至不帶正負號的 16 位元整數的陣列中每個項目<xref:System.Single>值。</span><span class="sxs-lookup"><span data-stu-id="377f1-1888">The following example converts each element in an array of unsigned 16-bit integers to a <xref:System.Single> value.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle1.cs#11)]
 [!code-vb[System.Convert.ToSingle#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle1.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As UInteger) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(System::UInt32 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1889">要轉換之 32 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1889">The 32-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1890">將指定之 32 位元不帶正負號的整數值，轉換為相等的單精確度浮點數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1890">Converts the value of the specified 32-bit unsigned integer to an equivalent single-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1891">單精確度浮點數，與 <paramref name="value" /> 相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1891">A single-precision floating-point number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-1892">下列範例會將轉換至不帶正負號整數的陣列中每個項目<xref:System.Single>值。</span><span class="sxs-lookup"><span data-stu-id="377f1-1892">The following example converts each element in an array of unsigned integers to a <xref:System.Single> value.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle1.cs#12)]
 [!code-vb[System.Convert.ToSingle#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle1.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As ULong) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(System::UInt64 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1893">要轉換之 64 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1893">The 64-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1894">將指定之 64 位元不帶正負號的整數值，轉換為相等的單精確度浮點數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1894">Converts the value of the specified 64-bit unsigned integer to an equivalent single-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1895">單精確度浮點數，與 <paramref name="value" /> 相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1895">A single-precision floating-point number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-1896">下列範例會將轉換至不帶正負號長整數的陣列中每個項目<xref:System.Single>值。</span><span class="sxs-lookup"><span data-stu-id="377f1-1896">The following example converts each element in an array of unsigned long integers to a <xref:System.Single> value.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle1.cs#13)]
 [!code-vb[System.Convert.ToSingle#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle1.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (object value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(object value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As Object, provider As IFormatProvider) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(System::Object ^ value, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1897">實作 <see cref="T:System.IConvertible" /> 介面的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1897">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="377f1-1898">物件，提供特定文化特性格式資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1898">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1899">使用指定之特定文化特性格式資訊，將指定之物件的值轉換為單精確度浮點數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1899">Converts the value of the specified object to an single-precision floating-point number, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1900">與 <paramref name="value" /> 相等的單精確度浮點數；如果 <paramref name="value" /> 為 <see langword="null" />，則為零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1900">A single-precision floating-point number that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-1901">傳回值是叫用的結果<xref:System.IConvertible.ToSingle%2A?displayProperty=nameWithType>方法的基礎類型`value`。</span><span class="sxs-lookup"><span data-stu-id="377f1-1901">The return value is the result of invoking the <xref:System.IConvertible.ToSingle%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
 <span data-ttu-id="377f1-1902">`provider` 可讓使用者指定的內容的相關特定文化特性的轉換資訊`value`。</span><span class="sxs-lookup"><span data-stu-id="377f1-1902">`provider` enables the user to specify culture-specific conversion information about the contents of `value`.</span></span> <span data-ttu-id="377f1-1903">例如，如果`value`是<xref:System.String>表示數字，`provider`可能會提供用來代表該數字的標記法的特定文化特性資訊。</span><span class="sxs-lookup"><span data-stu-id="377f1-1903">For example, if `value` is a <xref:System.String> that represents a number, `provider` could supply culture-specific information about the notation used to represent that number.</span></span>  
  
 <span data-ttu-id="377f1-1904">基底類型忽略`provider`; 不過，如果，可能會使用參數`value`是使用者定義型別可實作<xref:System.IConvertible>介面。</span><span class="sxs-lookup"><span data-stu-id="377f1-1904">The base types ignore `provider`; however, the parameter may be used if `value` is a user-defined type that implements the <xref:System.IConvertible> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-1905">下列範例定義一個實作 `Temperature` 介面的 <xref:System.IConvertible> 類別。</span><span class="sxs-lookup"><span data-stu-id="377f1-1905">The following example defines a `Temperature` class that implements the <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="377f1-1906">它的實作<xref:System.IConvertible.ToSingle%2A?displayProperty=nameWithType>方法會傳回私用的內部值<xref:System.Single>溫度表示變數。</span><span class="sxs-lookup"><span data-stu-id="377f1-1906">Its implementation of the <xref:System.IConvertible.ToSingle%2A?displayProperty=nameWithType> method returns the internal value of a private <xref:System.Single> variable that represents the temperature.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle2.cs#14)]
 [!code-vb[System.Convert.ToSingle#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle2.vb#14)]  
  
 <span data-ttu-id="377f1-1907">下列範例說明如何呼叫<xref:System.Convert.ToSingle%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType>方法又呼叫<xref:System.IConvertible.ToSingle%2A?displayProperty=nameWithType>實作`Temperature`類別。</span><span class="sxs-lookup"><span data-stu-id="377f1-1907">The following example illustrates how a call to the <xref:System.Convert.ToSingle%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method, in turn, calls the <xref:System.IConvertible.ToSingle%2A?displayProperty=nameWithType> implementation of the `Temperature` class.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle2.cs#15)]
 [!code-vb[System.Convert.ToSingle#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle2.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="377f1-1908">
            <paramref name="value" /> 不是適當的格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1908">
              <paramref name="value" /> is not in an appropriate format.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="377f1-1909">
            <paramref name="value" /> 沒有實作 <see cref="T:System.IConvertible" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1909">
              <paramref name="value" /> does not implement <see cref="T:System.IConvertible" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-1910">
            <paramref name="value" /> 代表小於 <see cref="F:System.Single.MinValue" /> 或大於 <see cref="F:System.Single.MaxValue" /> 的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1910">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Single.MinValue" /> or greater than <see cref="F:System.Single.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As String, provider As IFormatProvider) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1911">字串，包含要轉換的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1911">A string that contains the number to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="377f1-1912">物件，提供特定文化特性格式資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1912">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1913">使用指定之特定文化特性格式資訊，將指定之數字的字串表示轉換為相等的單精確度浮點數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1913">Converts the specified string representation of a number to an equivalent single-precision floating-point number, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1914">與 <paramref name="value" /> 中之數字相等的單精確度浮點數；如果 <paramref name="value" /> 為 <see langword="null" />，則為 0 (零)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1914">A single-precision floating-point number that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-1915">傳回值是叫用的結果<xref:System.Single.Parse%2A?displayProperty=nameWithType>方法`value`。</span><span class="sxs-lookup"><span data-stu-id="377f1-1915">The return value is the result of invoking the <xref:System.Single.Parse%2A?displayProperty=nameWithType> method on `value`.</span></span>  
  
 <span data-ttu-id="377f1-1916">`provider` 是<xref:System.IFormatProvider>取得的執行個體<xref:System.Globalization.NumberFormatInfo>物件。</span><span class="sxs-lookup"><span data-stu-id="377f1-1916">`provider` is an <xref:System.IFormatProvider> instance that obtains a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="377f1-1917"><xref:System.Globalization.NumberFormatInfo>物件提供特定文化特性格式資訊`value`。</span><span class="sxs-lookup"><span data-stu-id="377f1-1917">The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of `value`.</span></span> <span data-ttu-id="377f1-1918">如果`provider`是`null`、<xref:System.Globalization.NumberFormatInfo>會使用目前文化特性。</span><span class="sxs-lookup"><span data-stu-id="377f1-1918">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> for the current culture is used.</span></span>  
  
 <span data-ttu-id="377f1-1919">如果您不想處理的例外狀況，如果轉換失敗，您可以呼叫<xref:System.Single.TryParse%2A?displayProperty=nameWithType>方法改為。</span><span class="sxs-lookup"><span data-stu-id="377f1-1919">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Single.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="377f1-1920">它會傳回<xref:System.Boolean>值，指出轉換成功或失敗。</span><span class="sxs-lookup"><span data-stu-id="377f1-1920">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-1921">下列範例會使用<xref:System.IFormatProvider>轉換的數字的字串陣列中的項目時，代表 EN-US 和 FR-FR 文化特性物件<xref:System.Single>值。</span><span class="sxs-lookup"><span data-stu-id="377f1-1921">The following example uses <xref:System.IFormatProvider> objects that represent the en-US and fr-FR cultures when it converts the elements in an array of numeric strings to <xref:System.Single> values.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle3.cs#16)]
 [!code-vb[System.Convert.ToSingle#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle3.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="377f1-1922">
            <paramref name="value" /> 不是有效格式的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1922">
              <paramref name="value" /> is not a number in a valid format.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-1923">
            <paramref name="value" /> 代表小於 <see cref="F:System.Single.MinValue" /> 或大於 <see cref="F:System.Single.MaxValue" /> 的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1923">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Single.MinValue" /> or greater than <see cref="F:System.Single.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="377f1-1924">將指定的值轉換成其相等的字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1924">Converts the specified value to its equivalent string representation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(bool value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1925">要轉換的布林值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1925">The Boolean value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1926">將指定的布林值轉換為它的相等字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1926">Converts the specified Boolean value to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1927">
            <paramref name="value" /> 的字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1927">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-1928">這項實作等同於<xref:System.Boolean.ToString%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="377f1-1928">This implementation is identical to <xref:System.Boolean.ToString%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="377f1-1929">它會傳回<xref:System.Boolean.TrueString?displayProperty=nameWithType>如`true`值和<xref:System.Boolean.FalseString?displayProperty=nameWithType>如`false`值。</span><span class="sxs-lookup"><span data-stu-id="377f1-1929">It returns <xref:System.Boolean.TrueString?displayProperty=nameWithType> for `true` values and <xref:System.Boolean.FalseString?displayProperty=nameWithType> for `false` values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-1930">下列範例說明的轉換<xref:System.Boolean>至<xref:System.String>，並使用`ToString`。</span><span class="sxs-lookup"><span data-stu-id="377f1-1930">The following example illustrates the conversion of a <xref:System.Boolean> to a <xref:System.String>, using `ToString`.</span></span> <span data-ttu-id="377f1-1931">它也會說明如何轉換所傳回的字串等於 <xref:System.Boolean.TrueString?displayProperty=nameWithType>或<xref:System.Boolean.FalseString?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="377f1-1931">It also illustrates that the string returned by the conversion equals either <xref:System.Boolean.TrueString?displayProperty=nameWithType> or <xref:System.Boolean.FalseString?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Convert.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToString/cs/ToString_Bool1.cs#1)]
 [!code-vb[System.Convert.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToString/vb/ToString_Bool1.vb#1)]  
 [!code-fsharp[System.Convert.ToString#1](~/samples/snippets/fsharp/VS_Snippets_CLR_System/system.Convert.ToString/fs/ToString_Bool1.fs#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Byte) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::Byte value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1932">要轉換之 8 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1932">The 8-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1933">將指定之 8 位元不帶正負號的整數值，轉換為它的相等字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1933">Converts the value of the specified 8-bit unsigned integer to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1934">
            <paramref name="value" /> 的字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1934">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-1935">這項實作等同於<xref:System.Byte.ToString?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="377f1-1935">This implementation is identical to <xref:System.Byte.ToString?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-1936">下列範例中的每個值的轉換<xref:System.Byte>為字串的陣列。</span><span class="sxs-lookup"><span data-stu-id="377f1-1936">The following example converts each value in a <xref:System.Byte> array to a string.</span></span>  
  
 [!code-csharp[System.Convert.ToString#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToString/cs/ToString.Byte1.cs#3)]
 [!code-vb[System.Convert.ToString#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToString/vb/ToString.Byte1.vb#3)]
 [!code-fsharp[System.Convert.ToString#3](~/samples/snippets/fsharp/VS_Snippets_CLR_System/system.Convert.ToString/fs/ToString_Byte1.fs#3)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Char) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(char value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1937">要轉換的 Unicode 字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1937">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1938">將指定之 Unicode 字元的值，轉換為它的相等字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1938">Converts the value of the specified Unicode character to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1939">
            <paramref name="value" /> 的字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1939">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-1940">這項實作等同於<xref:System.Char.ToString%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="377f1-1940">This implementation is identical to <xref:System.Char.ToString%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-1941">下列範例會將轉換<xref:System.Char>至<xref:System.String>。</span><span class="sxs-lookup"><span data-stu-id="377f1-1941">The following example converts a <xref:System.Char> to a <xref:System.String>.</span></span>  
  
 [!code-cpp[System.Convert Snippets#14](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#14)]
 [!code-csharp[System.Convert Snippets#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#14)]
 [!code-vb[System.Convert Snippets#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As DateTime) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(DateTime value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1942">要轉換的日期和時間值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1942">The date and time value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1943">將指定之 <see cref="T:System.DateTime" /> 的值轉換為它的相等字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1943">Converts the value of the specified <see cref="T:System.DateTime" /> to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1944">
            <paramref name="value" /> 的字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1944">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-1945">這項實作等同於<xref:System.DateTime.ToString?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="377f1-1945">This implementation is identical to <xref:System.DateTime.ToString?displayProperty=nameWithType>.</span></span> <span data-ttu-id="377f1-1946">它使用目前的文化特性和"G"格式規範的格式設定慣例轉換<xref:System.DateTime>為其字串表示的值。</span><span class="sxs-lookup"><span data-stu-id="377f1-1946">It uses the formatting conventions of the current culture and the "G" format specifier to convert a <xref:System.DateTime> value to its string representation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-1947">下列範例會將轉換陣列中的每個項目<xref:System.DateTime>值設定為<xref:System.String>值。</span><span class="sxs-lookup"><span data-stu-id="377f1-1947">The following example converts each element in an array of a <xref:System.DateTime> value to a <xref:System.String> value.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring1.cs#1)]
 [!code-vb[System.Convert.ToString2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Decimal) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::Decimal value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1948">要轉換的十進位數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1948">The decimal number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1949">將指定之十進位數字的值，轉換為它的相等字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1949">Converts the value of the specified decimal number to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1950">
            <paramref name="value" /> 的字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1950">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-1951">這項實作等同於<xref:System.Decimal.ToString?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="377f1-1951">This implementation is identical to <xref:System.Decimal.ToString?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-1952">下列範例會將轉換<xref:System.Decimal>至<xref:System.String>。</span><span class="sxs-lookup"><span data-stu-id="377f1-1952">The following example converts a <xref:System.Decimal> to a <xref:System.String>.</span></span>  
  
 [!code-cpp[System.Convert Snippets#15](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#15)]
 [!code-csharp[System.Convert Snippets#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#15)]
 [!code-vb[System.Convert Snippets#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Double) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(double value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1953">要轉換的雙精確度浮點數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1953">The double-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1954">將指定之雙精確度浮點數的值，轉換為它的相等字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1954">Converts the value of the specified double-precision floating-point number to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1955">
            <paramref name="value" /> 的字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1955">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-1956">這項實作等同於<xref:System.Double.ToString?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="377f1-1956">This implementation is identical to <xref:System.Double.ToString?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-1957">下列範例會將轉換<xref:System.Double>至<xref:System.String>。</span><span class="sxs-lookup"><span data-stu-id="377f1-1957">The following example converts a <xref:System.Double> to a <xref:System.String>.</span></span>  
  
 [!code-cpp[System.Convert Snippets#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#7)]
 [!code-csharp[System.Convert Snippets#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#7)]
 [!code-vb[System.Convert Snippets#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Short) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(short value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1958">要轉換的 16 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1958">The 16-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1959">將指定之 16 位元帶正負號的整數值，轉換為它的相等字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1959">Converts the value of the specified 16-bit signed integer to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1960">
            <paramref name="value" /> 的字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1960">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-1961">這項實作等同於<xref:System.Int16.ToString?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="377f1-1961">This implementation is identical to <xref:System.Int16.ToString?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-1962">下列範例會將 16 位元整數的陣列中每個項目轉換為其相等字串表示。</span><span class="sxs-lookup"><span data-stu-id="377f1-1962">The following example converts each element in an array of 16-bit integers to its equivalent string representation.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring1.cs#2)]
 [!code-vb[System.Convert.ToString2#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(int value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1963">要轉換的 32 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1963">The 32-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1964">將指定之 32 位元帶正負號的整數值，轉換為它的相等字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1964">Converts the value of the specified 32-bit signed integer to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1965">
            <paramref name="value" /> 的字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1965">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-1966">這項實作等同於<xref:System.Int32.ToString?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="377f1-1966">This implementation is identical to <xref:System.Int32.ToString?displayProperty=nameWithType>.</span></span> <span data-ttu-id="377f1-1967">格式化`value`使用目前執行緒文化特性的格式設定慣例。</span><span class="sxs-lookup"><span data-stu-id="377f1-1967">It formats `value` by using the formatting conventions of the current thread culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-1968">下列範例會比較<xref:System.Convert.ToString%28System.Int32%29>方法<xref:System.Convert.ToString%28System.UInt16%2CSystem.IFormatProvider%29>方法。</span><span class="sxs-lookup"><span data-stu-id="377f1-1968">The following example compares the <xref:System.Convert.ToString%28System.Int32%29> method with the <xref:System.Convert.ToString%28System.UInt16%2CSystem.IFormatProvider%29> method.</span></span> <span data-ttu-id="377f1-1969">它會定義自訂<xref:System.Globalization.NumberFormatInfo>物件，使用字串"負"來代表負號。</span><span class="sxs-lookup"><span data-stu-id="377f1-1969">It defines a custom <xref:System.Globalization.NumberFormatInfo> object that uses the sting "minus" to represent the negative sign.</span></span> <span data-ttu-id="377f1-1970">它會將整數陣列中的每個項目轉換為其相等字串表示，使用預設格式 （目前的文化特性的格式化慣例） 和自訂的格式提供者。</span><span class="sxs-lookup"><span data-stu-id="377f1-1970">It converts each element in an integer array to its equivalent string representation using default formatting (the formatting conventions of the current culture) and the custom format provider.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#27](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring7.cs#27)]
 [!code-vb[System.Convert.ToString2#27](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring7.vb#27)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Long) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(long value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1971">要轉換的 64 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1971">The 64-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1972">將指定之 64 位元帶正負號的整數值，轉換為它的相等字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1972">Converts the value of the specified 64-bit signed integer to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1973">
            <paramref name="value" /> 的字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1973">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-1974">這項實作等同於<xref:System.Int64.ToString?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="377f1-1974">This implementation is identical to <xref:System.Int64.ToString?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-1975">下列範例會將長整數陣列中的每個項目轉換為其相等字串表示。</span><span class="sxs-lookup"><span data-stu-id="377f1-1975">The following example converts each element in a long integer array to its equivalent string representation.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#28](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring6.cs#28)]
 [!code-vb[System.Convert.ToString2#28](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring6.vb#28)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1976">提供要轉換之值的物件，或是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1976">An object that supplies the value to convert, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1977">將指定之物件的值轉換為它的相等字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1977">Converts the value of the specified object to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1978">
            <paramref name="value" /> 的字串表示；如果 <paramref name="value" /> 為 <see langword="null" />，則為 <see cref="F:System.String.Empty" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1978">The string representation of <paramref name="value" />, or <see cref="F:System.String.Empty" /> if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-1979">要轉換`value`為其字串表示，此方法會嘗試呼叫<xref:System.IConvertible.ToString%2A?displayProperty=nameWithType>實作`value`。</span><span class="sxs-lookup"><span data-stu-id="377f1-1979">To convert `value` to its string representation, the method tries to call the <xref:System.IConvertible.ToString%2A?displayProperty=nameWithType> implementation of `value`.</span></span> <span data-ttu-id="377f1-1980">如果`value`未實作<xref:System.IConvertible>介面，方法會嘗試呼叫<xref:System.IFormattable.ToString%2A?displayProperty=nameWithType>實作`value`。</span><span class="sxs-lookup"><span data-stu-id="377f1-1980">If `value` does not implement the <xref:System.IConvertible> interface, the method tries to call the <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> implementation of `value`.</span></span> <span data-ttu-id="377f1-1981">如果值不會實作<xref:System.IFormattable>介面，這個方法會呼叫`ToString`方法的基礎類型`value`。</span><span class="sxs-lookup"><span data-stu-id="377f1-1981">If value does not implement the <xref:System.IFormattable> interface, the method calls the `ToString` method of the underlying type of `value`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-1982">下列範例會將物件陣列中的每個項目轉換為其相等字串表示。</span><span class="sxs-lookup"><span data-stu-id="377f1-1982">The following example converts each element in an object array to its equivalent string representation.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring1.cs#3)]
 [!code-vb[System.Convert.ToString2#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As SByte) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::SByte value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1983">要轉換的 8 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1983">The 8-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1984">將指定之 8 位元帶正負號的整數值，轉換為它的相等字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1984">Converts the value of the specified 8-bit signed integer to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1985">
            <paramref name="value" /> 的字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1985">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-1986">這項實作等同於<xref:System.SByte.ToString?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="377f1-1986">This implementation is identical to <xref:System.SByte.ToString?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-1987">下列範例會將帶正負號之位元組陣列中的每個項目轉換為其相等字串表示。</span><span class="sxs-lookup"><span data-stu-id="377f1-1987">The following example converts each element in a signed byte array to its equivalent string representation.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring1.cs#4)]
 [!code-vb[System.Convert.ToString2#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Single) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(float value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1988">要轉換的單精確度浮點數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1988">The single-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1989">將指定之單精確度浮點數的值，轉換為它的相等字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1989">Converts the value of the specified single-precision floating-point number to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1990">
            <paramref name="value" /> 的字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1990">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-1991">這項實作等同於<xref:System.Single.ToString?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="377f1-1991">This implementation is identical to <xref:System.Single.ToString?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-1992">下列範例會將轉換陣列中的每個項目<xref:System.Single>為其相等字串表示的值。</span><span class="sxs-lookup"><span data-stu-id="377f1-1992">The following example converts each element in an array of <xref:System.Single> values to its equivalent string representation.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring1.cs#5)]
 [!code-vb[System.Convert.ToString2#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1993">要傳回的字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1993">The string to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1994">傳回指定的字串執行個體，不執行實際的轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1994">Returns the specified string instance; no actual conversion is performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-1995">傳回未變更的 <paramref name="value" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1995">
              <paramref name="value" /> is returned unchanged.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-1996">下列範例傳遞字串給<xref:System.Convert.ToString%28System.String%29>方法，呼叫<xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType>方法以確認，方法會傳回原始的字串。</span><span class="sxs-lookup"><span data-stu-id="377f1-1996">The following example passes a string to the <xref:System.Convert.ToString%28System.String%29> method and calls the <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> method to confirm that the method returns the original string.</span></span> <span data-ttu-id="377f1-1997">此範例也會呼叫<xref:System.String.IsInterned%2A?displayProperty=nameWithType>方法，以確保兩個字串不相同，因為實習的原始字串。</span><span class="sxs-lookup"><span data-stu-id="377f1-1997">The example also calls the <xref:System.String.IsInterned%2A?displayProperty=nameWithType> method to ensure that the two strings are not identical because the original string is interned.</span></span>  
  
 [!code-csharp[System.Convert.ToString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToString/cs/tostring_string1.cs#2)]
 [!code-vb[System.Convert.ToString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToString/vb/tostring_string1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As UShort) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::UInt16 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-1998">要轉換之 16 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1998">The 16-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-1999">將指定之 16 位元不帶正負號的整數值，轉換為它的相等字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-1999">Converts the value of the specified 16-bit unsigned integer to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-2000">
            <paramref name="value" /> 的字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2000">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-2001">這項實作等同於<xref:System.UInt16.ToString?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="377f1-2001">This implementation is identical to <xref:System.UInt16.ToString?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-2002">下列範例將為其相等字串表示轉換的 16 位元不帶正負號的整數值陣列中每個項目。</span><span class="sxs-lookup"><span data-stu-id="377f1-2002">The following example converts each element in an array of unsigned 16-bit integer values to its equivalent string representation.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring1.cs#6)]
 [!code-vb[System.Convert.ToString2#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As UInteger) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::UInt32 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-2003">要轉換之 32 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2003">The 32-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-2004">將指定之 32 位元不帶正負號的整數值，轉換為它的相等字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2004">Converts the value of the specified 32-bit unsigned integer to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-2005">
            <paramref name="value" /> 的字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2005">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-2006">這項實作等同於<xref:System.UInt32.ToString?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="377f1-2006">This implementation is identical to <xref:System.UInt32.ToString?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-2007">下列範例會將不帶正負號的整數陣列中每個項目轉換為其相等字串表示。</span><span class="sxs-lookup"><span data-stu-id="377f1-2007">The following example converts each element in an unsigned integer array to its equivalent string representation.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring1.cs#7)]
 [!code-vb[System.Convert.ToString2#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As ULong) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::UInt64 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-2008">要轉換之 64 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2008">The 64-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-2009">將指定之 64 位元不帶正負號的整數值，轉換為它的相等字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2009">Converts the value of the specified 64-bit unsigned integer to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-2010">
            <paramref name="value" /> 的字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2010">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-2011">這項實作等同於<xref:System.UInt64.ToString?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="377f1-2011">This implementation is identical to <xref:System.UInt64.ToString?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-2012">下列範例會將不帶正負號的長整數陣列中每個項目轉換為其相等字串表示。</span><span class="sxs-lookup"><span data-stu-id="377f1-2012">The following example converts each element in an unsigned long integer array to its equivalent string representation.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring1.cs#8)]
 [!code-vb[System.Convert.ToString2#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (bool value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(bool value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Boolean,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Boolean, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(bool value, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-2013">要轉換的布林值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2013">The Boolean value to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="377f1-2014">物件的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2014">An instance of an object.</span>
          </span>
          <span data-ttu-id="377f1-2015">這個參數已忽略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2015">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-2016">將指定的布林值轉換為它的相等字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2016">Converts the specified Boolean value to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-2017">
            <paramref name="value" /> 的字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2017">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-2018">這項實作等同於<xref:System.Boolean.ToString%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="377f1-2018">This implementation is identical to <xref:System.Boolean.ToString%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="377f1-2019">它會傳回<xref:System.Boolean.TrueString?displayProperty=nameWithType>如`true`值和<xref:System.Boolean.FalseString?displayProperty=nameWithType>如`false`值。</span><span class="sxs-lookup"><span data-stu-id="377f1-2019">It returns <xref:System.Boolean.TrueString?displayProperty=nameWithType> for `true` values and <xref:System.Boolean.FalseString?displayProperty=nameWithType> for `false` values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-2020">下列範例會將轉換<xref:System.Boolean>值設定為<xref:System.String>與`ToString`方法，使用<xref:System.IFormatProvider>顯示的格式提供者，它會呼叫其類型的物件。</span><span class="sxs-lookup"><span data-stu-id="377f1-2020">The following example converts a <xref:System.Boolean> value to a <xref:System.String> with the `ToString` method, using an <xref:System.IFormatProvider> object that displays the type of the format provider for which it is called.</span></span> <span data-ttu-id="377f1-2021">此範例顯示<xref:System.IFormatProvider>未參考物件。</span><span class="sxs-lookup"><span data-stu-id="377f1-2021">The example shows that the <xref:System.IFormatProvider> object is not referenced.</span></span>  
  
 [!code-cpp[System.Convert.ToString.IFormatProvider#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToString.IFormatProvider/CPP/nonnumeric.cpp#2)]
 [!code-csharp[System.Convert.ToString.IFormatProvider#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToString.IFormatProvider/CS/nonnumeric.cs#2)]
 [!code-vb[System.Convert.ToString.IFormatProvider#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToString.IFormatProvider/VB/nonnumeric.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (byte value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(unsigned int8 value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Byte,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Byte, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::Byte value, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-2022">要轉換之 8 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2022">The 8-bit unsigned integer to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="377f1-2023">物件，提供特定文化特性格式資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2023">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-2024">使用指定之特定文化特性格式資訊，將指定之 8 位元不帶正負號的整數的值轉換為它的相等字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2024">Converts the value of the specified 8-bit unsigned integer to its equivalent string representation, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-2025">
            <paramref name="value" /> 的字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2025">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-2026">這項實作等同於<xref:System.Byte.ToString%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="377f1-2026">This implementation is identical to <xref:System.Byte.ToString%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-2027">下列範例會將不帶正負號的位元組陣列中每個項目轉換為它的相等字串表示使用 EN-US 和 FR-FR 文化特性的格式化慣例。</span><span class="sxs-lookup"><span data-stu-id="377f1-2027">The following example converts each element in an unsigned byte array to its equivalent string representation using the formatting conventions of the en-US and fr-FR cultures.</span></span> <span data-ttu-id="377f1-2028">因為"G"規範，依預設會輸出位元組值的字串表示中，只包含十進位數字`provider`參數不會影響傳回之字串的格式。</span><span class="sxs-lookup"><span data-stu-id="377f1-2028">Because the "G" specifier by default outputs only decimal digits in a byte value's string representation, the `provider` parameter does not affect the formatting of the returned string.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring3.cs#16)]
 [!code-vb[System.Convert.ToString2#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring3.vb#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (byte value, int toBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(unsigned int8 value, int32 toBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Byte,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Byte, toBase As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::Byte value, int toBase);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
        <Parameter Name="toBase" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-2029">要轉換之 8 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2029">The 8-bit unsigned integer to convert.</span>
          </span>
        </param>
        <param name="toBase">
          <span data-ttu-id="377f1-2030">傳回值的基底，必須是 2、8、10 或 16。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2030">The base of the return value, which must be 2, 8, 10, or 16.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-2031">將 8 位元不帶正負號整數的值，轉換為它在指定基底中的相等字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2031">Converts the value of an 8-bit unsigned integer to its equivalent string representation in a specified base.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-2032">在基底 <paramref name="value" /> 中 <paramref name="toBase" /> 的字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2032">The string representation of <paramref name="value" /> in base <paramref name="toBase" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-2033">如果`toBase`不等於 10 時，所傳回的字串<xref:System.Convert.ToString%28System.Byte%2CSystem.Int32%29?displayProperty=nameWithType>方法代表`value`依據只有其重要性。</span><span class="sxs-lookup"><span data-stu-id="377f1-2033">If `toBase` does not equal 10, the string that is returned by the <xref:System.Convert.ToString%28System.Byte%2CSystem.Int32%29?displayProperty=nameWithType> method represents `value` by its magnitude only.</span></span> <span data-ttu-id="377f1-2034">如果方法呼叫來建立稍後將會轉換回數字的字串，會假設範圍僅限數值表示法的對應方法應該呼叫來執行轉換。</span><span class="sxs-lookup"><span data-stu-id="377f1-2034">If the method is called to create a string that will later be converted back to a number, a corresponding method that assumes a magnitude-only numeric representation should be called to perform the conversion.</span></span> <span data-ttu-id="377f1-2035">這類方法包括<xref:System.Convert.ToByte%28System.String%2CSystem.Int32%29?displayProperty=nameWithType>或<xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="377f1-2035">Such methods include <xref:System.Convert.ToByte%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> or <xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-2036">下列範例會將位元組陣列中的每個項目轉換成其對等二進位、 十六進位、 十進位和十六進位字串表示。</span><span class="sxs-lookup"><span data-stu-id="377f1-2036">The following example converts each element in a byte array to its equivalent binary, hexadecimal, decimal, and hexadecimal string representations.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring2.cs#9)]
 [!code-vb[System.Convert.ToString2#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring2.vb#9)]
 [!code-fsharp[System.Convert.ToString2#9](~/samples/snippets/fsharp/VS_Snippets_CLR_System/system.convert.tostring2/fs/tostring2.fs#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="377f1-2037">
            <paramref name="toBase" /> 不是 2、8、10 或 16。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2037">
              <paramref name="toBase" /> is not 2, 8, 10, or 16.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (char value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(char value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Char,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Char, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(char value, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-2038">要轉換的 Unicode 字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2038">The Unicode character to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="377f1-2039">物件，提供特定文化特性格式資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2039">An object that supplies culture-specific formatting information.</span>
          </span>
          <span data-ttu-id="377f1-2040">這個參數已忽略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2040">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-2041">使用指定之特定文化特性格式資訊，將指定之 Unicode 字元的值轉換為它的相等字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2041">Converts the value of the specified Unicode character to its equivalent string representation, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-2042">
            <paramref name="value" /> 的字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2042">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-2043">這項實作等同於<xref:System.Char.ToString?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="377f1-2043">This implementation is identical to <xref:System.Char.ToString?displayProperty=nameWithType>.</span></span> <span data-ttu-id="377f1-2044">`provider`參數已忽略。</span><span class="sxs-lookup"><span data-stu-id="377f1-2044">The `provider` parameter is ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-2045">下列範例會將轉換<xref:System.Char>值設定為<xref:System.String>與`ToString`方法，使用<xref:System.IFormatProvider>顯示的格式提供者，它會呼叫其類型的物件。</span><span class="sxs-lookup"><span data-stu-id="377f1-2045">The following example converts a <xref:System.Char> value to a <xref:System.String> with the `ToString` method, using an <xref:System.IFormatProvider> object that displays the type of the format provider for which it is called.</span></span> <span data-ttu-id="377f1-2046">此範例顯示<xref:System.IFormatProvider>未參考物件。</span><span class="sxs-lookup"><span data-stu-id="377f1-2046">The example shows that the <xref:System.IFormatProvider> object is not referenced.</span></span>  
  
 [!code-cpp[System.Convert.ToString.IFormatProvider#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToString.IFormatProvider/CPP/nonnumeric.cpp#2)]
 [!code-csharp[System.Convert.ToString.IFormatProvider#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToString.IFormatProvider/CS/nonnumeric.cs#2)]
 [!code-vb[System.Convert.ToString.IFormatProvider#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToString.IFormatProvider/VB/nonnumeric.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (DateTime value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(valuetype System.DateTime value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.DateTime,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As DateTime, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(DateTime value, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-2047">要轉換的日期和時間值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2047">The date and time value to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="377f1-2048">物件，提供特定文化特性格式資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2048">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-2049">使用指定之特定文化特性格式資訊，將指定之 <see cref="T:System.DateTime" /> 的值轉換為它的相等字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2049">Converts the value of the specified <see cref="T:System.DateTime" /> to its equivalent string representation, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-2050">
            <paramref name="value" /> 的字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2050">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-2051">這項實作等同於<xref:System.DateTime.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="377f1-2051">This implementation is identical to <xref:System.DateTime.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-2052">下列範例會將轉換<xref:System.DateTime>八個不同的文化特性中的相等字串表示的值。</span><span class="sxs-lookup"><span data-stu-id="377f1-2052">The following example converts a <xref:System.DateTime> value to its equivalent string representation in eight different cultures.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring3.cs#13)]
 [!code-vb[System.Convert.ToString2#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring3.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (decimal value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(valuetype System.Decimal value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Decimal,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Decimal, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::Decimal value, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-2053">要轉換的十進位數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2053">The decimal number to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="377f1-2054">物件，提供特定文化特性格式資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2054">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-2055">使用指定之特定文化特性格式資訊，將指定之十進位數字的值轉換為它的相等字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2055">Converts the value of the specified decimal number to its equivalent string representation, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-2056">
            <paramref name="value" /> 的字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2056">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-2057">這項實作等同於<xref:System.Decimal.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="377f1-2057">This implementation is identical to <xref:System.Decimal.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-2058">下列範例會將轉換陣列中的每個項目<xref:System.Decimal>四個不同的文化特性中的相等字串表示的值。</span><span class="sxs-lookup"><span data-stu-id="377f1-2058">The following example converts each element in an array of <xref:System.Decimal> values to its equivalent string representation in four different cultures.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring3.cs#14)]
 [!code-vb[System.Convert.ToString2#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring3.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (double value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(float64 value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Double,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Double, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(double value, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-2059">要轉換的雙精確度浮點數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2059">The double-precision floating-point number to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="377f1-2060">物件，提供特定文化特性格式資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2060">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-2061">將指定之雙精確度浮點數的值，轉換為它的相等字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2061">Converts the value of the specified double-precision floating-point number to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-2062">
            <paramref name="value" /> 的字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2062">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-2063">這項實作等同於 <xref:System.Double.ToString%28System.IFormatProvider%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="377f1-2063">This implementation is identical to <xref:System.Double.ToString%28System.IFormatProvider%29?displayProperty=nameWithType></span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-2064">下列範例會將轉換陣列中的每個項目<xref:System.Double>四個不同的文化特性中的相等字串表示的值。</span><span class="sxs-lookup"><span data-stu-id="377f1-2064">The following example converts each element in an array of <xref:System.Double> values to its equivalent string representation in four different cultures.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring3.cs#15)]
 [!code-vb[System.Convert.ToString2#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring3.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (short value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(int16 value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Int16,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Short, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(short value, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-2065">要轉換的 16 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2065">The 16-bit signed integer to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="377f1-2066">物件，提供特定文化特性格式資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2066">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-2067">使用指定之特定文化特性格式資訊，將指定之 16 位元帶正負號的整數的值轉換為它的相等字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2067">Converts the value of the specified 16-bit signed integer to its equivalent string representation, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-2068">
            <paramref name="value" /> 的字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2068">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-2069">這項實作等同於<xref:System.Int16.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="377f1-2069">This implementation is identical to <xref:System.Int16.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-2070">下列範例會定義自訂<xref:System.Globalization.NumberFormatInfo>類別來定義其負號做為字串 「 ~"和其正號做為字串"！"。</span><span class="sxs-lookup"><span data-stu-id="377f1-2070">The following example defines a custom <xref:System.Globalization.NumberFormatInfo> class that defines its negative sign as the string "~" and its positive sign as the string "!".</span></span> <span data-ttu-id="377f1-2071">然後它會呼叫<xref:System.Convert.ToString%28System.Int16%2CSystem.IFormatProvider%29>方法，將 16 位元整數的陣列中每個項目轉換為其相等字串表示。</span><span class="sxs-lookup"><span data-stu-id="377f1-2071">It then calls the <xref:System.Convert.ToString%28System.Int16%2CSystem.IFormatProvider%29> method to convert each element in an array of 16-bit integers to its equivalent string representation.</span></span> <span data-ttu-id="377f1-2072">轉換會使用文化特性而異，以及自訂<xref:System.Globalization.NumberFormatInfo>物件。</span><span class="sxs-lookup"><span data-stu-id="377f1-2072">The conversion uses the invariant culture as well as the custom <xref:System.Globalization.NumberFormatInfo> object.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring3.cs#19)]
 [!code-vb[System.Convert.ToString2#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring3.vb#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (short value, int toBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(int16 value, int32 toBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Int16,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Short, toBase As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(short value, int toBase);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
        <Parameter Name="toBase" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-2073">要轉換的 16 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2073">The 16-bit signed integer to convert.</span>
          </span>
        </param>
        <param name="toBase">
          <span data-ttu-id="377f1-2074">傳回值的基底，必須是 2、8、10 或 16。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2074">The base of the return value, which must be 2, 8, 10, or 16.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-2075">將 16 位元帶正負號整數的值，轉換為它在指定之基底中的相等字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2075">Converts the value of a 16-bit signed integer to its equivalent string representation in a specified base.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-2076">在基底 <paramref name="value" /> 中 <paramref name="toBase" /> 的字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2076">The string representation of <paramref name="value" /> in base <paramref name="toBase" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-2077">如果`value`為正數及`toBase`為 2、 8 或 16，則傳回的字串會使用正負號和大小表示。</span><span class="sxs-lookup"><span data-stu-id="377f1-2077">If `value` is positive and `toBase` is 2, 8, or 16, the returned string uses sign-and-magnitude representation.</span></span> <span data-ttu-id="377f1-2078">如果`value`是負數，`toBase`為 2、 8 或 16，則傳回的字串會使用二的補數表示法。</span><span class="sxs-lookup"><span data-stu-id="377f1-2078">If `value` is negative and `toBase` is 2, 8, or 16, the returned string uses two's complement representation.</span></span> <span data-ttu-id="377f1-2079">這表示高序位位元的高序位位元 （位元 15） 會解譯為正負號位元。</span><span class="sxs-lookup"><span data-stu-id="377f1-2079">This means that the high-order bit of the high-order byte (bit 15) is interpreted as the sign bit.</span></span> <span data-ttu-id="377f1-2080">如果<xref:System.Convert.ToString%28System.Int16%2CSystem.Int32%29>呼叫方法來建立稍後將會轉換回數字的字串，會假設類似的數值表示法的對應方法應該呼叫來執行轉換。</span><span class="sxs-lookup"><span data-stu-id="377f1-2080">If the <xref:System.Convert.ToString%28System.Int16%2CSystem.Int32%29> method is called to create a string that will later be converted back to a number, a corresponding method that assumes a similar numeric representation should be called to perform the conversion.</span></span> <span data-ttu-id="377f1-2081">這類方法包括<xref:System.Convert.ToInt16%28System.String%2CSystem.Int32%29?displayProperty=nameWithType>和<xref:System.Int16.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="377f1-2081">Such methods include <xref:System.Convert.ToInt16%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> and <xref:System.Int16.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-2082">下列範例會將 16 位元帶正負號的整數陣列中每個項目轉換成其對等二進位、 八進位、 十進位和十六進位字串表示。</span><span class="sxs-lookup"><span data-stu-id="377f1-2082">The following example converts each element in an array of 16-bit signed integers to its equivalent binary, octal, decimal, and hexadecimal string representations.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring2.cs#10)]
 [!code-vb[System.Convert.ToString2#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring2.vb#10)]
 [!code-fsharp[System.Convert.ToString2#10](~/samples/snippets/fsharp/VS_Snippets_CLR_System/system.convert.tostring2/fs/tostring2.fs#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="377f1-2083">
            <paramref name="toBase" /> 不是 2、8、10 或 16。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2083">
              <paramref name="toBase" /> is not 2, 8, 10, or 16.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (int value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(int32 value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Int32,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Integer, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(int value, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-2084">要轉換的 32 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2084">The 32-bit signed integer to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="377f1-2085">物件，提供特定文化特性格式資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2085">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-2086">使用指定之特定文化特性格式資訊，將指定之 32 位元帶正負號的整數的值轉換為它的相等字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2086">Converts the value of the specified 32-bit signed integer to its equivalent string representation, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-2087">
            <paramref name="value" /> 的字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2087">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-2088">這項實作等同於<xref:System.Int32.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="377f1-2088">This implementation is identical to <xref:System.Int32.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-2089">下列範例會定義自訂<xref:System.Globalization.NumberFormatInfo>類別來定義其負號做為字串 「 ~"和其正號做為字串"！"。</span><span class="sxs-lookup"><span data-stu-id="377f1-2089">The following example defines a custom <xref:System.Globalization.NumberFormatInfo> class that defines its negative sign as the string "~" and its positive sign as the string "!".</span></span> <span data-ttu-id="377f1-2090">然後它會呼叫<xref:System.Convert.ToString%28System.Int32%2CSystem.IFormatProvider%29>方法，將整數的陣列中每個項目轉換為其相等字串表示。</span><span class="sxs-lookup"><span data-stu-id="377f1-2090">It then calls the <xref:System.Convert.ToString%28System.Int32%2CSystem.IFormatProvider%29> method to convert each element in an array of integers to its equivalent string representation.</span></span> <span data-ttu-id="377f1-2091">轉換會使用文化特性而異，以及自訂<xref:System.Globalization.NumberFormatInfo>物件。</span><span class="sxs-lookup"><span data-stu-id="377f1-2091">The conversion uses the invariant culture as well as the custom <xref:System.Globalization.NumberFormatInfo> object.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring3.cs#20)]
 [!code-vb[System.Convert.ToString2#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring3.vb#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (int value, int toBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(int32 value, int32 toBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Integer, toBase As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(int value, int toBase);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
        <Parameter Name="toBase" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-2092">要轉換的 32 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2092">The 32-bit signed integer to convert.</span>
          </span>
        </param>
        <param name="toBase">
          <span data-ttu-id="377f1-2093">傳回值的基底，必須是 2、8、10 或 16。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2093">The base of the return value, which must be 2, 8, 10, or 16.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-2094">將 32 位元帶正負號整數的值，轉換為它在指定之基底中的相等字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2094">Converts the value of a 32-bit signed integer to its equivalent string representation in a specified base.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-2095">在基底 <paramref name="value" /> 中 <paramref name="toBase" /> 的字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2095">The string representation of <paramref name="value" /> in base <paramref name="toBase" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-2096">如果`value`為正數及`toBase`為 2、 8 或 16，則傳回的字串會使用正負號和大小表示。</span><span class="sxs-lookup"><span data-stu-id="377f1-2096">If `value` is positive and `toBase` is 2, 8, or 16, the returned string uses sign-and-magnitude representation.</span></span> <span data-ttu-id="377f1-2097">如果`value`是負數，`toBase`為 2、 8 或 16，則傳回的字串會使用二的補數表示法。</span><span class="sxs-lookup"><span data-stu-id="377f1-2097">If `value` is negative and `toBase` is 2, 8, or 16, the returned string uses two's complement representation.</span></span> <span data-ttu-id="377f1-2098">這表示最高序位位元組 （位元 31） 的高序位位元會解譯為正負號位元。</span><span class="sxs-lookup"><span data-stu-id="377f1-2098">This means that the high-order bit of the highest-order byte (bit 31) is interpreted as the sign bit.</span></span> <span data-ttu-id="377f1-2099">如果<xref:System.Convert.ToString%28System.Int32%2CSystem.Int32%29>呼叫方法來建立稍後將會轉換回數字的字串，會假設類似的數值表示法的對應方法應該呼叫來執行轉換。</span><span class="sxs-lookup"><span data-stu-id="377f1-2099">If the <xref:System.Convert.ToString%28System.Int32%2CSystem.Int32%29> method is called to create a string that will later be converted back to a number, a corresponding method that assumes a similar numeric representation should be called to perform the conversion.</span></span> <span data-ttu-id="377f1-2100">這類方法包括<xref:System.Convert.ToInt32%28System.String%2CSystem.Int32%29?displayProperty=nameWithType>和<xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="377f1-2100">Such methods include <xref:System.Convert.ToInt32%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> and <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-2101">下列範例會將整數陣列中的每個項目轉換成其對等二進位、 十六進位、 十進位和十六進位字串表示。</span><span class="sxs-lookup"><span data-stu-id="377f1-2101">The following example converts each element in an integer array to its equivalent binary, hexadecimal, decimal, and hexadecimal string representations.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring2.cs#11)]
 [!code-vb[System.Convert.ToString2#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring2.vb#11)]
 [!code-fsharp[System.Convert.ToString2#11](~/samples/snippets/fsharp/VS_Snippets_CLR_System/system.convert.tostring2/fs/tostring2.fs#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="377f1-2102">
            <paramref name="toBase" /> 不是 2、8、10 或 16。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2102">
              <paramref name="toBase" /> is not 2, 8, 10, or 16.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (long value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(int64 value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Int64,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Long, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(long value, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-2103">要轉換的 64 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2103">The 64-bit signed integer to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="377f1-2104">物件，提供特定文化特性格式資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2104">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-2105">使用指定之特定文化特性格式資訊，將指定之 64 位元帶正負號的整數的值轉換為它的相等字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2105">Converts the value of the specified 64-bit signed integer to its equivalent string representation, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-2106">
            <paramref name="value" /> 的字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2106">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-2107">這項實作等同於<xref:System.Int64.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="377f1-2107">This implementation is identical to <xref:System.Int64.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-2108">下列範例會定義自訂<xref:System.Globalization.NumberFormatInfo>類別來定義其負號做為字串 「 ~"和其正號做為字串"！"。</span><span class="sxs-lookup"><span data-stu-id="377f1-2108">The following example defines a custom <xref:System.Globalization.NumberFormatInfo> class that defines its negative sign as the string "~" and its positive sign as the string "!".</span></span> <span data-ttu-id="377f1-2109">然後它會呼叫<xref:System.Convert.ToString%28System.Int64%2CSystem.IFormatProvider%29>方法，將長整數陣列中的每個項目轉換為其相等字串表示。</span><span class="sxs-lookup"><span data-stu-id="377f1-2109">It then calls the <xref:System.Convert.ToString%28System.Int64%2CSystem.IFormatProvider%29> method to convert each element in a long integer array to its equivalent string representation.</span></span> <span data-ttu-id="377f1-2110">轉換會使用文化特性而異，以及自訂<xref:System.Globalization.NumberFormatInfo>物件。</span><span class="sxs-lookup"><span data-stu-id="377f1-2110">The conversion uses the invariant culture as well as the custom <xref:System.Globalization.NumberFormatInfo> object.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#21](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring3.cs#21)]
 [!code-vb[System.Convert.ToString2#21](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring3.vb#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (long value, int toBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(int64 value, int32 toBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Int64,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Long, toBase As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(long value, int toBase);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
        <Parameter Name="toBase" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-2111">要轉換的 64 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2111">The 64-bit signed integer to convert.</span>
          </span>
        </param>
        <param name="toBase">
          <span data-ttu-id="377f1-2112">傳回值的基底，必須是 2、8、10 或 16。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2112">The base of the return value, which must be 2, 8, 10, or 16.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-2113">將 64 位元帶正負號整數的值，轉換為它在指定之基底中的相等字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2113">Converts the value of a 64-bit signed integer to its equivalent string representation in a specified base.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-2114">在基底 <paramref name="value" /> 中 <paramref name="toBase" /> 的字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2114">The string representation of <paramref name="value" /> in base <paramref name="toBase" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-2115">如果`value`為正數及`toBase`不是 10，傳回的字串使用的標誌大小表示。</span><span class="sxs-lookup"><span data-stu-id="377f1-2115">If `value` is positive and `toBase` is not 10, the returned string uses sign-and-magnitude representation.</span></span> <span data-ttu-id="377f1-2116">如果`value`是負數，`toBase`不是 10，傳回的字串使用二的補數表示法。</span><span class="sxs-lookup"><span data-stu-id="377f1-2116">If `value` is negative and `toBase` is not 10, the returned string uses two's complement representation.</span></span> <span data-ttu-id="377f1-2117">這表示最高序位位元組 （位元 63） 的高序位位元會解譯為正負號位元。</span><span class="sxs-lookup"><span data-stu-id="377f1-2117">This means that the high-order bit of the highest-order byte (bit 63) is interpreted as the sign bit.</span></span> <span data-ttu-id="377f1-2118">如果<xref:System.Convert.ToString%28System.Int64%2CSystem.Int32%29>呼叫方法來建立稍後將會轉換回數字的字串，會假設類似的數值表示法的對應方法應該呼叫來執行轉換。</span><span class="sxs-lookup"><span data-stu-id="377f1-2118">If the <xref:System.Convert.ToString%28System.Int64%2CSystem.Int32%29> method is called to create a string that will later be converted back to a number, a corresponding method that assumes a similar numeric representation should be called to perform the conversion.</span></span> <span data-ttu-id="377f1-2119">這類方法包括<xref:System.Convert.ToInt64%28System.String%2CSystem.Int32%29?displayProperty=nameWithType>和<xref:System.Int64.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="377f1-2119">Such methods include <xref:System.Convert.ToInt64%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> and <xref:System.Int64.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-2120">下列範例會將長整數陣列中的每個項目轉換成其對等二進位、 十六進位、 十進位和十六進位字串表示。</span><span class="sxs-lookup"><span data-stu-id="377f1-2120">The following example converts each element in a long integer array to its equivalent binary, hexadecimal, decimal, and hexadecimal string representations.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring2.cs#12)]
 [!code-vb[System.Convert.ToString2#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring2.vb#12)]  
 [!code-fsharp[System.Convert.ToString2#12](~/samples/snippets/fsharp/VS_Snippets_CLR_System/system.convert.tostring2/fs/tostring2.fs#12)]  

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="377f1-2121">
            <paramref name="toBase" /> 不是 2、8、10 或 16。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2121">
              <paramref name="toBase" /> is not 2, 8, 10, or 16.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (object value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(object value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Object, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::Object ^ value, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-2122">提供要轉換之值的物件，或是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2122">An object that supplies the value to convert, or <see langword="null" />.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="377f1-2123">物件，提供特定文化特性格式資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2123">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-2124">使用指定之特定文化特性格式資訊，將指定之物件的值轉換為它的相等字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2124">Converts the value of the specified object to its equivalent string representation using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-2125">
            <paramref name="value" /> 的字串表示；如果 <see cref="F:System.String.Empty" /> 是值為 <paramref name="value" /> 的物件，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2125">The string representation of <paramref name="value" />, or <see cref="F:System.String.Empty" /> if <paramref name="value" /> is an object whose value is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="377f1-2126">如果 <paramref name="value" /> 是 <see langword="null" />，則方法會傳回 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2126">If <paramref name="value" /> is <see langword="null" />, the method returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-2127">如果`value`參數實作<xref:System.IConvertible>介面，這個方法會呼叫<xref:System.IConvertible.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>實作`value`。</span><span class="sxs-lookup"><span data-stu-id="377f1-2127">If the `value` parameter implements the <xref:System.IConvertible> interface, the method calls the <xref:System.IConvertible.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> implementation of `value`.</span></span> <span data-ttu-id="377f1-2128">否則，如果`value`參數實作<xref:System.IFormattable>介面，這個方法會呼叫其<xref:System.IFormattable.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType>實作。</span><span class="sxs-lookup"><span data-stu-id="377f1-2128">Otherwise, if the `value` parameter implements the <xref:System.IFormattable> interface, the method calls its <xref:System.IFormattable.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> implementation.</span></span> <span data-ttu-id="377f1-2129">如果`value`實作都沒有介面，這個方法會呼叫`value`參數的`ToString()`方法，而`provider`參數已忽略。</span><span class="sxs-lookup"><span data-stu-id="377f1-2129">If `value` implements neither interface, the method calls the `value` parameter's `ToString()` method, and the `provider` parameter is ignored.</span></span>  
  
 <span data-ttu-id="377f1-2130">`provider`參數用如果`value`參數實作<xref:System.IConvertible>或<xref:System.IFormattable>介面。</span><span class="sxs-lookup"><span data-stu-id="377f1-2130">The `provider` parameter is used if the `value` parameter implements the <xref:System.IConvertible> or <xref:System.IFormattable> interface.</span></span> <span data-ttu-id="377f1-2131">最常見的用法`provider`參數是指定的轉換使用的特定文化特性資訊`value`。</span><span class="sxs-lookup"><span data-stu-id="377f1-2131">The most common use of the `provider` parameter is to specify culture-specific information used in the conversion of `value`.</span></span> <span data-ttu-id="377f1-2132">例如，如果`value`參數是負的十進位數字，`provider`參數可以提供用於負號和小數點標記法的特定文化特性資訊。</span><span class="sxs-lookup"><span data-stu-id="377f1-2132">For example, if the `value` parameter is a negative decimal number, the `provider` parameter can supply culture-specific information about the notation used for the negative sign and decimal separator.</span></span> <span data-ttu-id="377f1-2133">第二個範例下, 一節中的說明的格式提供者，並不提供區分文化特性格式資訊。</span><span class="sxs-lookup"><span data-stu-id="377f1-2133">The second example in the next section illustrates a format provider that does not supply culture-sensitive formatting information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-2134">下列範例會定義`Temperature`類別會覆寫<xref:System.Object.ToString%2A?displayProperty=nameWithType>方法但未實作<xref:System.IConvertible>介面。</span><span class="sxs-lookup"><span data-stu-id="377f1-2134">The following example defines a `Temperature` class that overrides the <xref:System.Object.ToString%2A?displayProperty=nameWithType> method but does not implement the <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="377f1-2135">本範例會示範如何呼叫<xref:System.Convert.ToString%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType>方法，再呼叫`Temperature.ToString`方法。</span><span class="sxs-lookup"><span data-stu-id="377f1-2135">The example illustrates how calls to the <xref:System.Convert.ToString%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method, in turn, call the `Temperature.ToString` method.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#26](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring5.cs#26)]
 [!code-vb[System.Convert.ToString2#26](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring5.vb#26)]  
  
 <span data-ttu-id="377f1-2136">下列範例會定義`Temperature`類別可實作<xref:System.IFormattable>介面，但未實作<xref:System.IConvertible>介面。</span><span class="sxs-lookup"><span data-stu-id="377f1-2136">The following example defines a `Temperature` class that implements the <xref:System.IFormattable> interface but does not implement the <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="377f1-2137">其<xref:System.IFormattable.ToString%2A?displayProperty=nameWithType>實作代表`Temperature`攝氏、 華氏，或這個類別，根據格式字串的值。</span><span class="sxs-lookup"><span data-stu-id="377f1-2137">Its <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> implementation represents the `Temperature` value in Celsius, Fahrenheit, or Kelvin, depending on the format  string.</span></span> <span data-ttu-id="377f1-2138">此範例也會定義`TemperatureProvider`實作類別<xref:System.IFormatProvider>，並提供隨機產生的格式字串，由<xref:System.IFormattable>實作`Temperature`類別。</span><span class="sxs-lookup"><span data-stu-id="377f1-2138">The example also defines a `TemperatureProvider` class that implements <xref:System.IFormatProvider> and provides a randomly generated format string that is used by the <xref:System.IFormattable> implementation of the `Temperature` class.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#30](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring_obj30.cs#30)]
 [!code-vb[System.Convert.ToString2#30](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring_obj30.vb#30)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (sbyte value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(int8 value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.SByte,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As SByte, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::SByte value, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-2139">要轉換的 8 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2139">The 8-bit signed integer to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="377f1-2140">物件，提供特定文化特性格式資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2140">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-2141">使用指定之特定文化特性格式資訊，將指定之 8 位元帶正負號的整數的值轉換為它的相等字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2141">Converts the value of the specified 8-bit signed integer to its equivalent string representation, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-2142">
            <paramref name="value" /> 的字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2142">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-2143">這項實作等同於<xref:System.SByte.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="377f1-2143">This implementation is identical to <xref:System.SByte.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-2144">下列範例會定義自訂<xref:System.Globalization.NumberFormatInfo>類別來定義其負號做為字串 「 ~"和其正號做為字串"！"。</span><span class="sxs-lookup"><span data-stu-id="377f1-2144">The following example defines a custom <xref:System.Globalization.NumberFormatInfo> class that defines its negative sign as the string "~" and its positive sign as the string "!".</span></span> <span data-ttu-id="377f1-2145">然後它會呼叫<xref:System.Convert.ToString%28System.SByte%2CSystem.IFormatProvider%29?displayProperty=nameWithType>方法，將帶正負號的位元組陣列中每個項目轉換為其相等字串表示。</span><span class="sxs-lookup"><span data-stu-id="377f1-2145">It then calls the <xref:System.Convert.ToString%28System.SByte%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method to convert each element in signed byte array to its equivalent string representation.</span></span> <span data-ttu-id="377f1-2146">轉換會使用文化特性而異，以及自訂<xref:System.Globalization.NumberFormatInfo>物件。</span><span class="sxs-lookup"><span data-stu-id="377f1-2146">The conversion uses the invariant culture as well as the custom <xref:System.Globalization.NumberFormatInfo> object.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring3.cs#17)]
 [!code-vb[System.Convert.ToString2#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring3.vb#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (float value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(float32 value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Single,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Single, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(float value, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-2147">要轉換的單精確度浮點數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2147">The single-precision floating-point number to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="377f1-2148">物件，提供特定文化特性格式資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2148">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-2149">使用指定之特定文化特性格式資訊，將指定之單精確度浮點數的值轉換為它的相等字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2149">Converts the value of the specified single-precision floating-point number to its equivalent string representation, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-2150">
            <paramref name="value" /> 的字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2150">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-2151">這項實作等同於<xref:System.Single.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="377f1-2151">This implementation is identical to <xref:System.Single.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-2152">下列範例會將轉換陣列中的每個項目<xref:System.Single>四個不同的文化特性中的相等字串表示的值。</span><span class="sxs-lookup"><span data-stu-id="377f1-2152">The following example converts each element in an array of <xref:System.Single> values to its equivalent string representation in four different cultures.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring3.cs#18)]
 [!code-vb[System.Convert.ToString2#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring3.vb#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As String, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-2153">要傳回的字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2153">The string to return.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="377f1-2154">物件，提供特定文化特性格式資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2154">An object that supplies culture-specific formatting information.</span>
          </span>
          <span data-ttu-id="377f1-2155">這個參數已忽略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2155">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-2156">傳回指定的字串執行個體，不執行實際的轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2156">Returns the specified string instance; no actual conversion is performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-2157">傳回未變更的 <paramref name="value" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2157">
              <paramref name="value" /> is returned unchanged.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-2158">下列範例會呼叫`ToString`方法<xref:System.String>參數。</span><span class="sxs-lookup"><span data-stu-id="377f1-2158">The following example calls the `ToString` method with a <xref:System.String> parameter.</span></span> <span data-ttu-id="377f1-2159">方法會傳回未修改<xref:System.String>不需參考<xref:System.IFormatProvider>物件。</span><span class="sxs-lookup"><span data-stu-id="377f1-2159">The method returns the unmodified <xref:System.String> without referencing the <xref:System.IFormatProvider> object.</span></span>  
  
 [!code-cpp[System.Convert.ToString.IFormatProvider#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToString.IFormatProvider/CPP/nonnumeric.cpp#2)]
 [!code-csharp[System.Convert.ToString.IFormatProvider#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToString.IFormatProvider/CS/nonnumeric.cs#2)]
 [!code-vb[System.Convert.ToString.IFormatProvider#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToString.IFormatProvider/VB/nonnumeric.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (ushort value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(unsigned int16 value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.UInt16,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As UShort, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::UInt16 value, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-2160">要轉換之 16 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2160">The 16-bit unsigned integer to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="377f1-2161">物件，提供特定文化特性格式資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2161">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-2162">使用指定之特定文化特性格式資訊，將指定之 16 位元不帶正負號的整數的值轉換為它的相等字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2162">Converts the value of the specified 16-bit unsigned integer to its equivalent string representation, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-2163">
            <paramref name="value" /> 的字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2163">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-2164">這項實作等同於<xref:System.UInt16.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="377f1-2164">This implementation is identical to <xref:System.UInt16.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-2165">下列範例會定義自訂<xref:System.Globalization.NumberFormatInfo>類別來定義其負號做為字串 「 ~"和其正號做為字串"！"。</span><span class="sxs-lookup"><span data-stu-id="377f1-2165">The following example defines a custom <xref:System.Globalization.NumberFormatInfo> class that defines its negative sign as the string "~" and its positive sign as the string "!".</span></span> <span data-ttu-id="377f1-2166">然後它會呼叫<xref:System.Convert.ToString%28System.UInt16%2CSystem.IFormatProvider%29>方法，將 16 位元不帶正負號的整數值轉換為其相等字串表示。</span><span class="sxs-lookup"><span data-stu-id="377f1-2166">It then calls the <xref:System.Convert.ToString%28System.UInt16%2CSystem.IFormatProvider%29> method to convert a 16-bit unsigned integer value to its equivalent string representation.</span></span> <span data-ttu-id="377f1-2167">轉換會使用文化特性而異，以及自訂<xref:System.Globalization.NumberFormatInfo>物件。</span><span class="sxs-lookup"><span data-stu-id="377f1-2167">The conversion uses both the invariant culture and the custom <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="377f1-2168">輸出會指出，此格式的資訊將不會使用，因為根據預設，"G"格式規範不包含正值與正號。</span><span class="sxs-lookup"><span data-stu-id="377f1-2168">The output indicates that this formatting information is not used, because by default the "G" format specifier does not include a positive sign with positive values.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#22](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring3.cs#22)]
 [!code-vb[System.Convert.ToString2#22](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring3.vb#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (uint value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(unsigned int32 value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.UInt32,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As UInteger, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::UInt32 value, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-2169">要轉換之 32 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2169">The 32-bit unsigned integer to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="377f1-2170">物件，提供特定文化特性格式資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2170">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-2171">使用指定之特定文化特性格式資訊，將指定之 32 位元不帶正負號的整數的值轉換為它的相等字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2171">Converts the value of the specified 32-bit unsigned integer to its equivalent string representation, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-2172">
            <paramref name="value" /> 的字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2172">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-2173">這項實作等同於<xref:System.UInt32.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="377f1-2173">This implementation is identical to <xref:System.UInt32.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-2174">下列範例會定義自訂<xref:System.Globalization.NumberFormatInfo>類別來定義其負號做為字串 「 ~"和其正號做為字串"！"。</span><span class="sxs-lookup"><span data-stu-id="377f1-2174">The following example defines a custom <xref:System.Globalization.NumberFormatInfo> class that defines its negative sign as the string "~" and its positive sign as the string "!".</span></span> <span data-ttu-id="377f1-2175">然後它會呼叫<xref:System.Convert.ToString%28System.UInt32%2CSystem.IFormatProvider%29>方法，將不帶正負號的整數值轉換為其相等字串表示。</span><span class="sxs-lookup"><span data-stu-id="377f1-2175">It then calls the <xref:System.Convert.ToString%28System.UInt32%2CSystem.IFormatProvider%29> method to convert an unsigned integer value to its equivalent string representation.</span></span> <span data-ttu-id="377f1-2176">轉換會使用文化特性而異，以及自訂<xref:System.Globalization.NumberFormatInfo>物件。</span><span class="sxs-lookup"><span data-stu-id="377f1-2176">The conversion uses both the invariant culture and the custom <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="377f1-2177">輸出會指出，此格式的資訊將不會使用，因為根據預設，"G"格式規範不包含正值與正號。</span><span class="sxs-lookup"><span data-stu-id="377f1-2177">The output indicates that this formatting information is not used, because by default the "G" format specifier does not include a positive sign with positive values.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#23](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring3.cs#23)]
 [!code-vb[System.Convert.ToString2#23](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring3.vb#23)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (ulong value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(unsigned int64 value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.UInt64,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As ULong, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::UInt64 value, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-2178">要轉換之 64 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2178">The 64-bit unsigned integer to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="377f1-2179">物件，提供特定文化特性格式資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2179">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-2180">使用指定之特定文化特性格式資訊，將指定之 64 位元不帶正負號的整數的值轉換為它的相等字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2180">Converts the value of the specified 64-bit unsigned integer to its equivalent string representation, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-2181">
            <paramref name="value" /> 的字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2181">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-2182">這項實作等同於<xref:System.UInt64.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="377f1-2182">This implementation is identical to <xref:System.UInt64.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-2183">下列範例會定義自訂<xref:System.Globalization.NumberFormatInfo>類別來定義其負號做為字串 「 ~"和其正號做為字串"！"。</span><span class="sxs-lookup"><span data-stu-id="377f1-2183">The following example defines a custom <xref:System.Globalization.NumberFormatInfo> class that defines its negative sign as the string "~" and its positive sign as the string "!".</span></span> <span data-ttu-id="377f1-2184">然後它會呼叫<xref:System.Convert.ToString%28System.UInt64%2CSystem.IFormatProvider%29>方法，將不帶正負號的長整數值轉換為其相等字串表示。</span><span class="sxs-lookup"><span data-stu-id="377f1-2184">It then calls the <xref:System.Convert.ToString%28System.UInt64%2CSystem.IFormatProvider%29> method to convert an unsigned long integer value to its equivalent string representation.</span></span> <span data-ttu-id="377f1-2185">轉換會使用文化特性而異，以及自訂<xref:System.Globalization.NumberFormatInfo>物件。</span><span class="sxs-lookup"><span data-stu-id="377f1-2185">The conversion uses both the invariant culture and the custom <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="377f1-2186">輸出會指出，此格式的資訊將不會使用，因為根據預設，"G"格式規範不包含正值與正號。</span><span class="sxs-lookup"><span data-stu-id="377f1-2186">The output indicates that this formatting information is not used, because by default the "G" format specifier does not include a positive sign with positive values.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#24](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring3.cs#24)]
 [!code-vb[System.Convert.ToString2#24](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring3.vb#24)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToUInt16">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="377f1-2187">將指定的值轉換為 16 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2187">Converts a specified value to a 16-bit unsigned integer.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As Boolean) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(bool value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-2188">要轉換的布林值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2188">The Boolean value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-2189">將指定的布林值轉換為相等的 16 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2189">Converts the specified Boolean value to the equivalent 16-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-2190">如果 <paramref name="value" /> 為 <see langword="true" />，則為數字 1，否則為 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2190">The number 1 if <paramref name="value" /> is <see langword="true" />; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-2191">下列範例會將轉換的布林值`true`和`false`不帶正負號的 16 位元整數。</span><span class="sxs-lookup"><span data-stu-id="377f1-2191">The following example converts the Boolean values `true` and `false` to unsigned 16-bit integers.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_1.cs#1)]
 [!code-vb[System.Convert.ToUInt16#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As Byte) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(System::Byte value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-2192">要轉換之 8 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2192">The 8-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-2193">將指定的 8 位元不帶正負號整數的值，轉換為相等的 16 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2193">Converts the value of the specified 8-bit unsigned integer to the equivalent 16-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-2194">與 <paramref name="value" /> 相等的 16 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2194">A 16-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-2195">下列範例會將位元組陣列中的每個項目轉換成不帶正負號的 16 位元整數。</span><span class="sxs-lookup"><span data-stu-id="377f1-2195">The following example converts each element in a byte array to an unsigned 16-bit integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_1.cs#2)]
 [!code-vb[System.Convert.ToUInt16#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As Char) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(char value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-2196">要轉換的 Unicode 字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2196">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-2197">將指定的 Unicode 字元值轉換為相等的 16 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2197">Converts the value of the specified Unicode character to the equivalent 16-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-2198">等於 <paramref name="value" /> 的 16 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2198">The 16-bit unsigned integer equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-2199">下列範例會將字元陣列中的每個項目轉換成不帶正負號的 16 位元整數。</span><span class="sxs-lookup"><span data-stu-id="377f1-2199">The following example converts each element in a character array to an unsigned 16-bit integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_1.cs#3)]
 [!code-vb[System.Convert.ToUInt16#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As DateTime) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(DateTime value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-2200">要轉換的日期和時間值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2200">The date and time value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-2201">呼叫這個方法一律會擲回 <see cref="T:System.InvalidCastException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2201">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-2202">不支援這個轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2202">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="377f1-2203">沒有傳回值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2203">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="377f1-2204">不支援這個轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2204">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As Decimal) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(System::Decimal value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-2205">要轉換的十進位數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2205">The decimal number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-2206">將指定之十進位數字的值，轉換為相等的 16 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2206">Converts the value of the specified decimal number to an equivalent 16-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-2207">
            <paramref name="value" />，四捨五入為最接近的 16 位元不帶正負號整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2207">
              <paramref name="value" />, rounded to the nearest 16-bit unsigned integer.</span>
          </span>
          <span data-ttu-id="377f1-2208">如果 <paramref name="value" /> 介於兩個整數正中間時，則傳回偶數；也就是 4.5 會轉換為 4，5.5 會轉換為 6。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2208">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-2209">下列範例會將轉換陣列中的每個項目<xref:System.Decimal>不帶正負號的 16 位元整數的值。</span><span class="sxs-lookup"><span data-stu-id="377f1-2209">The following example converts each element in an array of <xref:System.Decimal> values to an unsigned 16-bit integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_1.cs#4)]
 [!code-vb[System.Convert.ToUInt16#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-2210">
            <paramref name="value" /> 小於零或大於 <see cref="F:System.UInt16.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2210">
              <paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt16.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As Double) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(double value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-2211">要轉換的雙精確度浮點數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2211">The double-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-2212">將指定之雙精確度浮點數的值，轉換為相等的 16 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2212">Converts the value of the specified double-precision floating-point number to an equivalent 16-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-2213">
            <paramref name="value" />，四捨五入為最接近的 16 位元不帶正負號整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2213">
              <paramref name="value" />, rounded to the nearest 16-bit unsigned integer.</span>
          </span>
          <span data-ttu-id="377f1-2214">如果 <paramref name="value" /> 介於兩個整數正中間時，則傳回偶數；也就是 4.5 會轉換為 4，5.5 會轉換為 6。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2214">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-2215">下列範例會將轉換陣列中的每個項目<xref:System.Double>不帶正負號的 16 位元整數的值。</span><span class="sxs-lookup"><span data-stu-id="377f1-2215">The following example converts each element in an array of <xref:System.Double> values to an unsigned 16-bit integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_1.cs#5)]
 [!code-vb[System.Convert.ToUInt16#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-2216">
            <paramref name="value" /> 小於零或大於 <see cref="F:System.UInt16.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2216">
              <paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt16.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Double" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As Short) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(short value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-2217">要轉換的 16 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2217">The 16-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-2218">將指定的 16 位元帶正負號整數的值，轉換為相等的 16 位元不帶正負號整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2218">Converts the value of the specified 16-bit signed integer to the equivalent 16-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-2219">與 <paramref name="value" /> 相等的 16 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2219">A 16-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-2220">下列範例會嘗試將 16 位元整數陣列中的每個項目轉換成不帶正負號的 16 位元整數。</span><span class="sxs-lookup"><span data-stu-id="377f1-2220">The following example attempts to convert each element in a 16-bit integer array to an unsigned 16-bit integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_1.cs#6)]
 [!code-vb[System.Convert.ToUInt16#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-2221">
            <paramref name="value" /> 小於零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2221">
              <paramref name="value" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As Integer) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(int value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-2222">要轉換的 32 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2222">The 32-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-2223">將指定的 32 位元帶正負號的整數值轉換為相等的 16 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2223">Converts the value of the specified 32-bit signed integer to an equivalent 16-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-2224">與 <paramref name="value" /> 相等的 16 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2224">A 16-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-2225">下列範例會將整數陣列中的每個項目轉換成不帶正負號的 16 位元整數。</span><span class="sxs-lookup"><span data-stu-id="377f1-2225">The following example converts each element in an integer array to an unsigned 16-bit integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_1.cs#7)]
 [!code-vb[System.Convert.ToUInt16#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-2226">
            <paramref name="value" /> 小於零或大於 <see cref="F:System.UInt16.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2226">
              <paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt16.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As Long) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(long value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-2227">要轉換的 64 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2227">The 64-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-2228">將指定的 64 位元帶正負號的整數值轉換為相等的 16 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2228">Converts the value of the specified 64-bit signed integer to an equivalent 16-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-2229">與 <paramref name="value" /> 相等的 16 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2229">A 16-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-2230">下列範例會將長整數陣列中的每個項目轉換成不帶正負號的 16 位元整數。</span><span class="sxs-lookup"><span data-stu-id="377f1-2230">The following example converts each element in a long integer array to an unsigned 16-bit integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_1.cs#8)]
 [!code-vb[System.Convert.ToUInt16#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-2231">
            <paramref name="value" /> 小於零或大於 <see cref="F:System.UInt16.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2231">
              <paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt16.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As Object) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-2232">實作 <see cref="T:System.IConvertible" /> 介面的物件，或是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2232">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-2233">將指定之物件的值轉換為 16 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2233">Converts the value of the specified object to a 16-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-2234">與 <paramref name="value" /> 相等的 16 位元不帶正負號的整數；如果 <paramref name="value" /> 為 <see langword="null" />，則為零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2234">A 16-bit unsigned integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-2235">傳回值是叫用的結果<xref:System.IConvertible.ToUInt16%2A?displayProperty=nameWithType>方法的基礎類型`value`。</span><span class="sxs-lookup"><span data-stu-id="377f1-2235">The return value is the result of invoking the <xref:System.IConvertible.ToUInt16%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-2236">下列範例會嘗試將物件陣列中的每個項目轉換成不帶正負號的 16 位元整數。</span><span class="sxs-lookup"><span data-stu-id="377f1-2236">The following example attempts to convert each element in an object array to an unsigned 16-bit integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_1.cs#9)]
 [!code-vb[System.Convert.ToUInt16#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="377f1-2237">
            <paramref name="value" /> 不是適當的格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2237">
              <paramref name="value" /> is not in an appropriate format.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="377f1-2238">
            <paramref name="value" /> 未實作 <see cref="T:System.IConvertible" /> 介面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2238">
              <paramref name="value" /> does not implement the  <see cref="T:System.IConvertible" /> interface.</span>
          </span>
          <span data-ttu-id="377f1-2239">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2239">-or-</span>
          </span>
          <span data-ttu-id="377f1-2240">不支援轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2240">The conversion is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-2241">
            <paramref name="value" /> 代表小於 <see cref="F:System.UInt16.MinValue" /> 或大於 <see cref="F:System.UInt16.MaxValue" /> 的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2241">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As SByte) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(System::SByte value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-2242">要轉換的 8 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2242">The 8-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-2243">將指定的 8 位元帶正負號整數的值，轉換為相等的 16 位元不帶正負號整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2243">Converts the value of the specified 8-bit signed integer to the equivalent 16-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-2244">與 <paramref name="value" /> 相等的 16 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2244">A 16-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-2245">下列範例會將帶正負號之位元組陣列中的每個項目轉換成不帶正負號的 16 位元整數。</span><span class="sxs-lookup"><span data-stu-id="377f1-2245">The following example converts each element in a signed byte array to an unsigned 16-bit integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_1.cs#10)]
 [!code-vb[System.Convert.ToUInt16#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-2246">
            <paramref name="value" /> 小於零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2246">
              <paramref name="value" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As Single) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(float value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-2247">要轉換的單精確度浮點數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2247">The single-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-2248">將指定之單精確度浮點數的值，轉換為相等的 16 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2248">Converts the value of the specified single-precision floating-point number to an equivalent 16-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-2249">
            <paramref name="value" />，四捨五入為最接近的 16 位元不帶正負號整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2249">
              <paramref name="value" />, rounded to the nearest 16-bit unsigned integer.</span>
          </span>
          <span data-ttu-id="377f1-2250">如果 <paramref name="value" /> 介於兩個整數正中間時，則傳回偶數；也就是 4.5 會轉換為 4，5.5 會轉換為 6。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2250">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-2251">下列範例會將轉換陣列中的每個項目<xref:System.String>不帶正負號的 16 位元整數的值。</span><span class="sxs-lookup"><span data-stu-id="377f1-2251">The following example converts each element in an array of <xref:System.String> values to an unsigned 16-bit integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_1.cs#11)]
 [!code-vb[System.Convert.ToUInt16#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-2252">
            <paramref name="value" /> 小於零或大於 <see cref="F:System.UInt16.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2252">
              <paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt16.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Single" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As String) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-2253">字串，包含要轉換的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2253">A string that contains the number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-2254">將指定之數字的字串表示，轉換為相等的 16 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2254">Converts the specified string representation of a number to an equivalent 16-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-2255">與 <paramref name="value" /> 中之數字相等的 16 位元不帶正負號的整數；如果 <paramref name="value" /> 為 <see langword="null" />，則為 0 (零)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2255">A 16-bit unsigned integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-2256">使用<xref:System.Convert.ToUInt16%28System.String%29>方法相當於傳遞`value`至<xref:System.UInt16.Parse%28System.String%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="377f1-2256">Using the <xref:System.Convert.ToUInt16%28System.String%29> method is equivalent to passing `value` to the <xref:System.UInt16.Parse%28System.String%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="377f1-2257">`value` 是使用目前執行緒文化特性的格式化慣例來解譯。</span><span class="sxs-lookup"><span data-stu-id="377f1-2257">`value` is interpreted by using the formatting conventions of the current thread culture.</span></span>  
  
 <span data-ttu-id="377f1-2258">如果您不想處理的例外狀況，如果轉換失敗，您可以呼叫<xref:System.UInt16.TryParse%2A?displayProperty=nameWithType>方法改為。</span><span class="sxs-lookup"><span data-stu-id="377f1-2258">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.UInt16.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="377f1-2259">它會傳回<xref:System.Boolean>值，指出轉換成功或失敗。</span><span class="sxs-lookup"><span data-stu-id="377f1-2259">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-2260">下列範例會嘗試將數字的字串陣列中每個項目轉換成 16 位元不帶正負號的整數。</span><span class="sxs-lookup"><span data-stu-id="377f1-2260">The following example attempts to convert each element in a numeric string array to a 16-bit unsigned integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_1.cs#12)]
 [!code-vb[System.Convert.ToUInt16#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_1.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="377f1-2261">
            <paramref name="value" /> 不是由選擇性正負號之後跟隨一連串數字 (0 到 9) 所組成。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2261">
              <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-2262">
            <paramref name="value" /> 代表小於 <see cref="F:System.UInt16.MinValue" /> 或大於 <see cref="F:System.UInt16.MaxValue" /> 的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2262">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As UShort) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(System::UInt16 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-2263">要傳回之 16 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2263">The 16-bit unsigned integer to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-2264">傳回指定的 16 位元不帶正負號整數；不會執行實際的轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2264">Returns the specified 16-bit unsigned integer; no actual conversion is performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-2265">傳回未變更的 <paramref name="value" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2265">
              <paramref name="value" /> is returned unchanged.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As UInteger) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(System::UInt32 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-2266">要轉換之 32 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2266">The 32-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-2267">將指定的 32 位元不帶正負號整數的值，轉換為相等的 16 位元不帶正負號整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2267">Converts the value of the specified 32-bit unsigned integer to an equivalent 16-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-2268">與 <paramref name="value" /> 相等的 16 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2268">A 16-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-2269">下列範例會嘗試將不帶正負號整數的陣列中每個項目轉換成不帶正負號的 16 位元整數。</span><span class="sxs-lookup"><span data-stu-id="377f1-2269">The following example attempts to convert each element in an array of unsigned integers to an unsigned 16-bit integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_1.cs#13)]
 [!code-vb[System.Convert.ToUInt16#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-2270">
            <paramref name="value" /> 大於 <see cref="F:System.UInt16.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2270">
              <paramref name="value" /> is greater than <see cref="F:System.UInt16.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As ULong) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(System::UInt64 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-2271">要轉換之 64 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2271">The 64-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-2272">將指定的 64 位元不帶正負號整數的值，轉換為相等的 16 位元不帶正負號整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2272">Converts the value of the specified 64-bit unsigned integer to an equivalent 16-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-2273">與 <paramref name="value" /> 相等的 16 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2273">A 16-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-2274">下列範例會嘗試將不帶正負號的長整數的陣列中每個項目轉換成不帶正負號的 16 位元整數。</span><span class="sxs-lookup"><span data-stu-id="377f1-2274">The following example attempts to convert each element in an array of unsigned long integers to an unsigned 16-bit integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_1.cs#14)]
 [!code-vb[System.Convert.ToUInt16#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_1.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-2275">
            <paramref name="value" /> 大於 <see cref="F:System.UInt16.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2275">
              <paramref name="value" /> is greater than <see cref="F:System.UInt16.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (object value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(object value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As Object, provider As IFormatProvider) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(System::Object ^ value, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-2276">實作 <see cref="T:System.IConvertible" /> 介面的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2276">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="377f1-2277">物件，提供特定文化特性格式資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2277">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-2278">使用指定之特定文化特性格式資訊，將指定之物件的值轉換為 16 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2278">Converts the value of the specified object to a 16-bit unsigned integer, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-2279">與 <paramref name="value" /> 相等的 16 位元不帶正負號的整數；如果 <paramref name="value" /> 為 <see langword="null" />，則為零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2279">A 16-bit unsigned integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-2280">傳回值是叫用的結果<xref:System.IConvertible.ToUInt16%2A?displayProperty=nameWithType>方法的基礎類型`value`。</span><span class="sxs-lookup"><span data-stu-id="377f1-2280">The return value is the result of invoking the <xref:System.IConvertible.ToUInt16%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
 <span data-ttu-id="377f1-2281">`provider` 可讓使用者指定的內容的相關特定文化特性的轉換資訊`value`。</span><span class="sxs-lookup"><span data-stu-id="377f1-2281">`provider` enables the user to specify culture-specific conversion information about the contents of `value`.</span></span> <span data-ttu-id="377f1-2282">例如，如果`value`是<xref:System.String>表示數字，`provider`可能會提供用來代表該數字的標記法的特定文化特性資訊。</span><span class="sxs-lookup"><span data-stu-id="377f1-2282">For example, if `value` is a <xref:System.String> that represents a number, `provider` could supply culture-specific information about the notation used to represent that number.</span></span>  
  
 <span data-ttu-id="377f1-2283">基底類型忽略`provider`; 不過，如果，可能會使用參數`value`是使用者定義型別可實作<xref:System.IConvertible>介面。</span><span class="sxs-lookup"><span data-stu-id="377f1-2283">The base types ignore `provider`; however, the parameter may be used if `value` is a user-defined type that implements the <xref:System.IConvertible> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-2284">下列範例會定義`HexString`類別可實作<xref:System.IConvertible>介面，為了容納這兩個 16 位元帶正負號和 16 位元不帶正負號值的字串表示。</span><span class="sxs-lookup"><span data-stu-id="377f1-2284">The following example defines a `HexString` class that implements the <xref:System.IConvertible> interface and that is designed to hold the string representation of both 16-bit signed and 16-bit unsigned values.</span></span> <span data-ttu-id="377f1-2285">類別包含`Sign`表示正負號的十六進位值的屬性。</span><span class="sxs-lookup"><span data-stu-id="377f1-2285">The class includes a `Sign` property that indicates the sign of its hexadecimal value.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_3.cs#16)]
 [!code-vb[System.Convert.ToUInt16#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_3.vb#16)]  
  
 <span data-ttu-id="377f1-2286">下列範例顯示呼叫<xref:System.Convert.ToUInt16%28System.Object%2CSystem.IFormatProvider%29>方法通過`HexString`物件做為參數，又呼叫<xref:System.IConvertible.ToUInt16%2A?displayProperty=nameWithType>實作`HexString`類別。</span><span class="sxs-lookup"><span data-stu-id="377f1-2286">The following example shows that a call to the <xref:System.Convert.ToUInt16%28System.Object%2CSystem.IFormatProvider%29> method that passes a `HexString` object as a parameter, in turn, calls the <xref:System.IConvertible.ToUInt16%2A?displayProperty=nameWithType> implementation of the `HexString` class.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_3.cs#17)]
 [!code-vb[System.Convert.ToUInt16#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_3.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="377f1-2287">
            <paramref name="value" /> 不是適當的格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2287">
              <paramref name="value" /> is not in an appropriate format.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="377f1-2288">
            <paramref name="value" /> 未實作 <see cref="T:System.IConvertible" /> 介面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2288">
              <paramref name="value" /> does not implement the  <see cref="T:System.IConvertible" /> interface.</span>
          </span>
          <span data-ttu-id="377f1-2289">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2289">-or-</span>
          </span>
          <span data-ttu-id="377f1-2290">不支援轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2290">The conversion is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-2291">
            <paramref name="value" /> 代表小於 <see cref="F:System.UInt16.MinValue" /> 或大於 <see cref="F:System.UInt16.MaxValue" /> 的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2291">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As String, provider As IFormatProvider) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-2292">字串，包含要轉換的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2292">A string that contains the number to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="377f1-2293">物件，提供特定文化特性格式資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2293">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-2294">使用指定之特定文化特性格式資訊，將指定之數字的字串表示轉換為相等的 16 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2294">Converts the specified string representation of a number to an equivalent 16-bit unsigned integer, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-2295">與 <paramref name="value" /> 中之數字相等的 16 位元不帶正負號的整數；如果 <paramref name="value" /> 為 <see langword="null" />，則為 0 (零)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2295">A 16-bit unsigned integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-2296">傳回值是叫用的結果<xref:System.UInt16.Parse%2A?displayProperty=nameWithType>上`value`。</span><span class="sxs-lookup"><span data-stu-id="377f1-2296">The return value is the result of invoking <xref:System.UInt16.Parse%2A?displayProperty=nameWithType> on `value`.</span></span>  
  
 <span data-ttu-id="377f1-2297">`provider` 是<xref:System.IFormatProvider>取得的執行個體<xref:System.Globalization.NumberFormatInfo>物件。</span><span class="sxs-lookup"><span data-stu-id="377f1-2297">`provider` is an <xref:System.IFormatProvider> instance that obtains a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="377f1-2298"><xref:System.Globalization.NumberFormatInfo>物件提供特定文化特性格式資訊`value`。</span><span class="sxs-lookup"><span data-stu-id="377f1-2298">The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of `value`.</span></span> <span data-ttu-id="377f1-2299">如果`provider`是`null`、<xref:System.Globalization.NumberFormatInfo>會使用目前文化特性。</span><span class="sxs-lookup"><span data-stu-id="377f1-2299">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> for the current culture is used.</span></span>  
  
 <span data-ttu-id="377f1-2300">如果您不想處理的例外狀況，如果轉換失敗，您可以呼叫<xref:System.UInt16.TryParse%2A?displayProperty=nameWithType>方法改為。</span><span class="sxs-lookup"><span data-stu-id="377f1-2300">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.UInt16.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="377f1-2301">它會傳回<xref:System.Boolean>值，指出轉換成功或失敗。</span><span class="sxs-lookup"><span data-stu-id="377f1-2301">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-2302">下列範例會定義自訂<xref:System.Globalization.NumberFormatInfo>物件，會將字串"pos"辨識為正號和字串"協商"做為負號。</span><span class="sxs-lookup"><span data-stu-id="377f1-2302">The following example defines a custom <xref:System.Globalization.NumberFormatInfo> object that recognizes the string "pos" as the positive sign and the string "neg" as the negative sign.</span></span> <span data-ttu-id="377f1-2303">即會嘗試將數字的字串陣列的每個項目轉換成整數使用此提供者和<xref:System.Globalization.NumberFormatInfo>文化特性而異的提供者。</span><span class="sxs-lookup"><span data-stu-id="377f1-2303">It then attempts to convert each element of a numeric string array to an integer using both this provider and the <xref:System.Globalization.NumberFormatInfo> provider for the invariant culture.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_4.cs#18)]
 [!code-vb[System.Convert.ToUInt16#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_4.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="377f1-2304">
            <paramref name="value" /> 不是由選擇性正負號之後跟隨一連串數字 (0 到 9) 所組成。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2304">
              <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-2305">
            <paramref name="value" /> 代表小於 <see cref="F:System.UInt16.MinValue" /> 或大於 <see cref="F:System.UInt16.MaxValue" /> 的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2305">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (string value, int fromBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(string value, int32 fromBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As String, fromBase As Integer) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(System::String ^ value, int fromBase);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fromBase" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-2306">字串，包含要轉換的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2306">A string that contains the number to convert.</span>
          </span>
        </param>
        <param name="fromBase">
          <span data-ttu-id="377f1-2307">
            <c>value</c> 中數字的基底，必須是 2、8、10 或 16。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2307">The base of the number in <c>value</c>, which must be 2, 8, 10, or 16.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-2308">將指定基底中數字的字串表示，轉換為相等的 16 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2308">Converts the string representation of a number in a specified base to an equivalent 16-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-2309">與 <paramref name="value" /> 中之數字相等的 16 位元不帶正負號的整數；如果 <paramref name="value" /> 為 <see langword="null" />，則為 0 (零)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2309">A 16-bit unsigned integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-2310">如果`fromBase`是 16，您可以使用前置詞指定的數字`value`與 「 0x 」 或 「 0x 」 的參數。</span><span class="sxs-lookup"><span data-stu-id="377f1-2310">If `fromBase` is 16, you can prefix the number specified by the `value` parameter with "0x" or "0X".</span></span>  
  
 <span data-ttu-id="377f1-2311">因為<xref:System.UInt16>資料型別支援不帶正負號的值僅<xref:System.Convert.ToUInt16%28System.String%2CSystem.Int32%29>方法會假設`value`使用不帶正負號的二進位表示法來表示。</span><span class="sxs-lookup"><span data-stu-id="377f1-2311">Because the <xref:System.UInt16> data type supports unsigned values only, the <xref:System.Convert.ToUInt16%28System.String%2CSystem.Int32%29> method assumes that `value` is expressed using unsigned binary representation.</span></span> <span data-ttu-id="377f1-2312">換句話說，所有的 16 位元用來表示數字的值，並正負號位元不存在。</span><span class="sxs-lookup"><span data-stu-id="377f1-2312">In other words, all 16 bits are used to represent the numeric value, and a sign bit is absent.</span></span> <span data-ttu-id="377f1-2313">如此一來，就可以撰寫程式碼所在的帶正負號的整數值，超出的範圍<xref:System.UInt16>資料類型轉換成<xref:System.UInt16>值而不擲回例外狀況的方法。</span><span class="sxs-lookup"><span data-stu-id="377f1-2313">As a result, it is possible to write code in which a signed integer value that is out of the range of the <xref:System.UInt16> data type is converted to a <xref:System.UInt16> value without the method throwing an exception.</span></span> <span data-ttu-id="377f1-2314">下列範例會將轉換<xref:System.Int16.MinValue?displayProperty=nameWithType>其十六進位字串表示法，然後呼叫<xref:System.Convert.ToUInt16%28System.String%2CSystem.Int32%29>方法。</span><span class="sxs-lookup"><span data-stu-id="377f1-2314">The following example converts <xref:System.Int16.MinValue?displayProperty=nameWithType> to its hexadecimal string representation, and then calls the <xref:System.Convert.ToUInt16%28System.String%2CSystem.Int32%29> method.</span></span> <span data-ttu-id="377f1-2315">而不是擲回例外狀況，此方法會顯示訊息，「"0x8000 轉換成 32768。</span><span class="sxs-lookup"><span data-stu-id="377f1-2315">Instead of throwing an exception, the method displays the message, "0x8000 converts to 32768."</span></span>  
  
 [!code-csharp[System.Convert.BaseConversion#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#11)]
 [!code-vb[System.Convert.BaseConversion#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#11)]  
  
 <span data-ttu-id="377f1-2316">執行的二進位運算或數值的轉換時一律驗證方法或運算子使用適當的數值表示法來轉譯特定的值，開發人員的責任。</span><span class="sxs-lookup"><span data-stu-id="377f1-2316">When performing binary operations or numeric conversions, it is always the responsibility of the developer to verify that a method or operator is using the appropriate numeric representation to interpret a particular value.</span></span> <span data-ttu-id="377f1-2317">下列範例說明的技巧，確保方法不會不當地使用二進位表示法來轉譯值時，所用二的補數表示十六進位字串轉換成<xref:System.UInt16>值。</span><span class="sxs-lookup"><span data-stu-id="377f1-2317">The following example illustrates one technique for ensuring that the method does not inappropriately use binary representation to interpret a value that uses two's complement representation when converting a hexadecimal string to a <xref:System.UInt16> value.</span></span> <span data-ttu-id="377f1-2318">此範例會判斷值，代表帶正負號或不帶正負號的整數，而它會將該值轉換為其字串表示。</span><span class="sxs-lookup"><span data-stu-id="377f1-2318">The example determines whether a value represents a signed or an unsigned integer while it is converting that value to its string representation.</span></span> <span data-ttu-id="377f1-2319">當此範例將值轉換成<xref:System.UInt16>值，它會檢查原始的值是否為帶正負號的整數。</span><span class="sxs-lookup"><span data-stu-id="377f1-2319">When the example converts the value to a <xref:System.UInt16> value, it checks whether the original value was a signed integer.</span></span> <span data-ttu-id="377f1-2320">若是如此，並設定其高序位位元 （表示原始值為負），方法會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="377f1-2320">If so, and if its high-order bit is set (which indicates that the original value was negative), the method throws an exception.</span></span>  
  
 [!code-csharp[System.Convert.BaseConversion#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#12)]
 [!code-vb[System.Convert.BaseConversion#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#12)]  
  
   
  
## Examples  
 <span data-ttu-id="377f1-2321">下列範例會嘗試解譯為十六進位值的數字的字串陣列中每個項目，並將它轉換成不帶正負號的 16 位元整數。</span><span class="sxs-lookup"><span data-stu-id="377f1-2321">The following example attempts to interpret each element in an array of numeric strings as a hexadecimal value and to convert it to an unsigned 16-bit integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_2.cs#15)]
 [!code-vb[System.Convert.ToUInt16#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_2.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="377f1-2322">
            <paramref name="fromBase" /> 不是 2、8、10 或 16。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2322">
              <paramref name="fromBase" /> is not 2, 8, 10, or 16.</span>
          </span>
          <span data-ttu-id="377f1-2323">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2323">-or-</span>
          </span>
          <span data-ttu-id="377f1-2324">代表非 10 進位不帶正負號數字的 <paramref name="value" />，有前置負號。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2324">
              <paramref name="value" />, which represents a non-base 10 unsigned number, is prefixed with a negative sign.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="377f1-2325">
            <paramref name="value" /> 為 <see cref="F:System.String.Empty" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2325">
              <paramref name="value" /> is <see cref="F:System.String.Empty" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="377f1-2326">
            <paramref name="value" /> 所包含的字元在 <paramref name="fromBase" /> 指定的基底中不是有效數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2326">
              <paramref name="value" /> contains a character that is not a valid digit in the base specified by <paramref name="fromBase" />.</span>
          </span>
          <span data-ttu-id="377f1-2327">如果 <paramref name="value" /> 中的第一個字元無效，例外狀況訊息會指出沒有數字可進行轉換；否則訊息會指出 <paramref name="value" /> 包含無效的尾端字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2327">The exception message indicates that there are no digits to convert if the first character in <paramref name="value" /> is invalid; otherwise, the message indicates that <paramref name="value" /> contains invalid trailing characters.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-2328">代表非 10 進位不帶正負號數字的 <paramref name="value" />，有前置負號。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2328">
              <paramref name="value" />, which represents a non-base 10 unsigned number, is prefixed with a negative sign.</span>
          </span>
          <span data-ttu-id="377f1-2329">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2329">-or-</span>
          </span>
          <span data-ttu-id="377f1-2330">
            <paramref name="value" /> 代表小於 <see cref="F:System.UInt16.MinValue" /> 或大於 <see cref="F:System.UInt16.MaxValue" /> 的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2330">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToUInt32">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="377f1-2331">將指定的值轉換為 32 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2331">Converts a specified value to a 32-bit unsigned integer.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As Boolean) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(bool value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-2332">要轉換的布林值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2332">The Boolean value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-2333">將指定的布林值轉換為相等的 32 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2333">Converts the specified Boolean value to the equivalent 32-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-2334">如果 <paramref name="value" /> 為 <see langword="true" />，則為數字 1，否則為 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2334">The number 1 if <paramref name="value" /> is <see langword="true" />; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-2335">下列範例會將轉換的布林值`true`和`false`成不帶正負號的整數。</span><span class="sxs-lookup"><span data-stu-id="377f1-2335">The following example converts the Boolean values `true` and `false` to unsigned integers.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_1.cs#1)]
 [!code-vb[System.Convert.ToUInt32#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As Byte) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(System::Byte value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-2336">要轉換之 8 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2336">The 8-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-2337">將指定的 8 位元不帶正負號整數的值，轉換為相等的 32 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2337">Converts the value of the specified 8-bit unsigned integer to the equivalent 32-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-2338">與 <paramref name="value" /> 相等的 32 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2338">A 32-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-2339">下列範例會將位元組陣列中的每個項目轉換成不帶正負號的整數。</span><span class="sxs-lookup"><span data-stu-id="377f1-2339">The following example converts each element in a byte array to an unsigned integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_1.cs#2)]
 [!code-vb[System.Convert.ToUInt32#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As Char) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(char value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-2340">要轉換的 Unicode 字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2340">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-2341">將指定的 Unicode 字元值轉換為相等的 32 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2341">Converts the value of the specified Unicode character to the equivalent 32-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-2342">與 <paramref name="value" /> 相等的 32 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2342">A 32-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-2343">下列範例會將字元陣列中的每個項目轉換成不帶正負號的整數。</span><span class="sxs-lookup"><span data-stu-id="377f1-2343">The following example converts each element in a character array to an unsigned integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_1.cs#3)]
 [!code-vb[System.Convert.ToUInt32#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As DateTime) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(DateTime value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-2344">要轉換的日期和時間值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2344">The date and time value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-2345">呼叫這個方法一律會擲回 <see cref="T:System.InvalidCastException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2345">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-2346">不支援這個轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2346">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="377f1-2347">沒有傳回值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2347">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="377f1-2348">不支援這個轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2348">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As Decimal) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(System::Decimal value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-2349">要轉換的十進位數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2349">The decimal number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-2350">將指定之十進位數字的值，轉換為相等的 32 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2350">Converts the value of the specified decimal number to an equivalent 32-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-2351">
            <paramref name="value" />，四捨五入為最接近的 32 位元不帶正負號整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2351">
              <paramref name="value" />, rounded to the nearest 32-bit unsigned integer.</span>
          </span>
          <span data-ttu-id="377f1-2352">如果 <paramref name="value" /> 介於兩個整數正中間時，則傳回偶數；也就是 4.5 會轉換為 4，5.5 會轉換為 6。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2352">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-2353">下列範例會嘗試將陣列中的每個項目<xref:System.Decimal>為不帶正負號的整數值。</span><span class="sxs-lookup"><span data-stu-id="377f1-2353">The following example attempts to convert each element in an array of <xref:System.Decimal> values to an unsigned integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_1.cs#4)]
 [!code-vb[System.Convert.ToUInt32#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-2354">
            <paramref name="value" /> 小於零或大於 <see cref="F:System.UInt32.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2354">
              <paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt32.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As Double) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(double value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-2355">要轉換的雙精確度浮點數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2355">The double-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-2356">將指定之雙精確度浮點數的值，轉換為相等的 32 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2356">Converts the value of the specified double-precision floating-point number to an equivalent 32-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-2357">
            <paramref name="value" />，四捨五入為最接近的 32 位元不帶正負號整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2357">
              <paramref name="value" />, rounded to the nearest 32-bit unsigned integer.</span>
          </span>
          <span data-ttu-id="377f1-2358">如果 <paramref name="value" /> 介於兩個整數正中間時，則傳回偶數；也就是 4.5 會轉換為 4，5.5 會轉換為 6。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2358">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-2359">下列範例會嘗試將陣列中的每個項目<xref:System.Double>為不帶正負號的整數值。</span><span class="sxs-lookup"><span data-stu-id="377f1-2359">The following example attempts to convert each element in an array of <xref:System.Double> values to an unsigned integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_1.cs#5)]
 [!code-vb[System.Convert.ToUInt32#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-2360">
            <paramref name="value" /> 小於零或大於 <see cref="F:System.UInt32.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2360">
              <paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt32.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Double" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As Short) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(short value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-2361">要轉換的 16 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2361">The 16-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-2362">將指定的 16 位元帶正負號整數的值，轉換為相等的 32 位元不帶正負號整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2362">Converts the value of the specified 16-bit signed integer to the equivalent 32-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-2363">與 <paramref name="value" /> 相等的 32 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2363">A 32-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-2364">下列範例會嘗試將 16 位元整數陣列中的每個項目轉換成不帶正負號的整數。</span><span class="sxs-lookup"><span data-stu-id="377f1-2364">The following example attempts to convert each element in a 16-bit integer array to an unsigned integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_1.cs#6)]
 [!code-vb[System.Convert.ToUInt32#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-2365">
            <paramref name="value" /> 小於零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2365">
              <paramref name="value" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As Integer) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(int value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-2366">要轉換的 32 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2366">The 32-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-2367">將指定的 32 位元帶正負號的整數值轉換為相等的 32 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2367">Converts the value of the specified 32-bit signed integer to an equivalent 32-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-2368">與 <paramref name="value" /> 相等的 32 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2368">A 32-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-2369">下列範例會嘗試將整數陣列中的每個項目轉換成不帶正負號的整數。</span><span class="sxs-lookup"><span data-stu-id="377f1-2369">The following example attempts to convert each element in an integer array to an unsigned integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_1.cs#7)]
 [!code-vb[System.Convert.ToUInt32#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-2370">
            <paramref name="value" /> 小於零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2370">
              <paramref name="value" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As Long) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(long value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-2371">要轉換的 64 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2371">The 64-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-2372">將指定的 64 位元帶正負號的整數值轉換為相等的 32 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2372">Converts the value of the specified 64-bit signed integer to an equivalent 32-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-2373">與 <paramref name="value" /> 相等的 32 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2373">A 32-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-2374">下列範例會嘗試將長整數陣列中的每個項目轉換成不帶正負號的整數。</span><span class="sxs-lookup"><span data-stu-id="377f1-2374">The following example attempts to convert each element in a long integer array to an unsigned integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_1.cs#8)]
 [!code-vb[System.Convert.ToUInt32#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-2375">
            <paramref name="value" /> 小於零或大於 <see cref="F:System.UInt32.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2375">
              <paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As Object) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-2376">實作 <see cref="T:System.IConvertible" /> 介面的物件，或是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2376">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-2377">將指定之物件的值轉換為 32 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2377">Converts the value of the specified object to a 32-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-2378">與 <paramref name="value" /> 相等的 32 位元不帶正負號的整數；如果 <paramref name="value" /> 為 <see langword="null" />，則為 0 (零)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2378">A 32-bit unsigned integer that is equivalent to <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-2379">傳回值是叫用的結果<xref:System.IConvertible.ToUInt32%2A?displayProperty=nameWithType>方法的基礎類型`value`。</span><span class="sxs-lookup"><span data-stu-id="377f1-2379">The return value is the result of invoking the <xref:System.IConvertible.ToUInt32%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-2380">下列範例會嘗試將物件陣列中的每個項目轉換成不帶正負號的整數。</span><span class="sxs-lookup"><span data-stu-id="377f1-2380">The following example attempts to convert each element in an object array to an unsigned integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_1.cs#9)]
 [!code-vb[System.Convert.ToUInt32#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="377f1-2381">
            <paramref name="value" /> 不是適當的格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2381">
              <paramref name="value" /> is not in an appropriate format.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="377f1-2382">
            <paramref name="value" /> 未實作 <see cref="T:System.IConvertible" /> 介面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2382">
              <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
          <span data-ttu-id="377f1-2383">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2383">-or-</span>
          </span>
          <span data-ttu-id="377f1-2384">不支援轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2384">The conversion is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-2385">
            <paramref name="value" /> 代表小於 <see cref="F:System.UInt32.MinValue" /> 或大於 <see cref="F:System.UInt32.MaxValue" /> 的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2385">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As SByte) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(System::SByte value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-2386">要轉換的 8 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2386">The 8-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-2387">將指定的 8 位元帶正負號整數的值，轉換為相等的 32 位元不帶正負號整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2387">Converts the value of the specified 8-bit signed integer to the equivalent 32-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-2388">與 <paramref name="value" /> 相等的 32 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2388">A 32-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-2389">下列範例會嘗試將帶正負號之位元組陣列中的每個項目轉換成不帶正負號的整數。</span><span class="sxs-lookup"><span data-stu-id="377f1-2389">The following example attempts to convert each element in a signed byte array to an unsigned integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_1.cs#10)]
 [!code-vb[System.Convert.ToUInt32#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-2390">
            <paramref name="value" /> 小於零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2390">
              <paramref name="value" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As Single) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(float value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-2391">要轉換的單精確度浮點數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2391">The single-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-2392">將指定之單精確度浮點數的值，轉換為相等的 32 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2392">Converts the value of the specified single-precision floating-point number to an equivalent 32-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-2393">
            <paramref name="value" />，四捨五入為最接近的 32 位元不帶正負號整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2393">
              <paramref name="value" />, rounded to the nearest 32-bit unsigned integer.</span>
          </span>
          <span data-ttu-id="377f1-2394">如果 <paramref name="value" /> 介於兩個整數正中間時，則傳回偶數；也就是 4.5 會轉換為 4，5.5 會轉換為 6。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2394">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-2395">下列範例會嘗試將陣列中的每個項目<xref:System.Single>為不帶正負號的整數值。</span><span class="sxs-lookup"><span data-stu-id="377f1-2395">The following example attempts to convert each element in an array of <xref:System.Single> values to an unsigned integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_1.cs#11)]
 [!code-vb[System.Convert.ToUInt32#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-2396">
            <paramref name="value" /> 小於零或大於 <see cref="F:System.UInt32.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2396">
              <paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt32.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Single" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As String) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-2397">字串，包含要轉換的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2397">A string that contains the number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-2398">將指定之數字的字串表示，轉換為相等的 32 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2398">Converts the specified string representation of a number to an equivalent 32-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-2399">與 <paramref name="value" /> 中之數字相等的 32 位元不帶正負號的整數；如果 <paramref name="value" /> 為 <see langword="null" />，則為 0 (零)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2399">A 32-bit unsigned integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-2400">使用<xref:System.Convert.ToUInt32%28System.String%29>方法相當於傳遞`value`至<xref:System.UInt32.Parse%28System.String%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="377f1-2400">Using the <xref:System.Convert.ToUInt32%28System.String%29> method is equivalent to passing `value` to the <xref:System.UInt32.Parse%28System.String%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="377f1-2401">`value` 是使用目前執行緒文化特性的格式化慣例來解譯。</span><span class="sxs-lookup"><span data-stu-id="377f1-2401">`value` is interpreted by using the formatting conventions of the current thread culture.</span></span>  
  
 <span data-ttu-id="377f1-2402">如果您不想處理的例外狀況，如果轉換失敗，您可以呼叫<xref:System.UInt32.TryParse%2A?displayProperty=nameWithType>方法改為。</span><span class="sxs-lookup"><span data-stu-id="377f1-2402">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.UInt32.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="377f1-2403">它會傳回<xref:System.Boolean>值，指出轉換成功或失敗。</span><span class="sxs-lookup"><span data-stu-id="377f1-2403">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-2404">下列範例會解譯為數值的字串將字串陣列中的項目，並嘗試將它們轉換成不帶正負號的整數。</span><span class="sxs-lookup"><span data-stu-id="377f1-2404">The following example interprets the elements in a string array as numeric strings and attempts to convert them to unsigned integers.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_1.cs#12)]
 [!code-vb[System.Convert.ToUInt32#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_1.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="377f1-2405">
            <paramref name="value" /> 不是由選擇性正負號之後跟隨一連串數字 (0 到 9) 所組成。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2405">
              <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-2406">
            <paramref name="value" /> 代表小於 <see cref="F:System.UInt32.MinValue" /> 或大於 <see cref="F:System.UInt32.MaxValue" /> 的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2406">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As UShort) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(System::UInt16 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-2407">要轉換之 16 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2407">The 16-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-2408">將指定的 16 位元不帶正負號整數的值，轉換為相等的 32 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2408">Converts the value of the specified 16-bit unsigned integer to the equivalent 32-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-2409">與 <paramref name="value" /> 相等的 32 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2409">A 32-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-2410">下列範例會將 16 位元不帶正負號的整數陣列中每個項目轉換成不帶正負號的整數值。</span><span class="sxs-lookup"><span data-stu-id="377f1-2410">The following example converts each element in an unsigned 16-bit integer array to an unsigned integer value.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_1.cs#13)]
 [!code-vb[System.Convert.ToUInt32#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_1.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As UInteger) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(System::UInt32 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-2411">要傳回之 32 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2411">The 32-bit unsigned integer to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-2412">傳回指定的 32 位元不帶正負號整數；不會執行實際的轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2412">Returns the specified 32-bit unsigned integer; no actual conversion is performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-2413">傳回未變更的 <paramref name="value" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2413">
              <paramref name="value" /> is returned unchanged.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As ULong) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(System::UInt64 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-2414">要轉換之 64 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2414">The 64-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-2415">將指定的 64 位元不帶正負號整數的值，轉換為相等的 32 位元不帶正負號整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2415">Converts the value of the specified 64-bit unsigned integer to an equivalent 32-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-2416">與 <paramref name="value" /> 相等的 32 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2416">A 32-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-2417">下列範例會嘗試將不帶正負號的長整數陣列中每個項目轉換成不帶正負號的整數值。</span><span class="sxs-lookup"><span data-stu-id="377f1-2417">The following example attempts to convert each element in an unsigned long integer array to an unsigned integer value.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_1.cs#14)]
 [!code-vb[System.Convert.ToUInt32#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_1.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-2418">
            <paramref name="value" /> 大於 <see cref="F:System.UInt32.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2418">
              <paramref name="value" /> is greater than <see cref="F:System.UInt32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (object value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(object value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As Object, provider As IFormatProvider) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(System::Object ^ value, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-2419">實作 <see cref="T:System.IConvertible" /> 介面的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2419">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="377f1-2420">物件，提供特定文化特性格式資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2420">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-2421">使用指定之特定文化特性格式資訊，將指定之物件的值轉換為 32 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2421">Converts the value of the specified object to a 32-bit unsigned integer, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-2422">與 <paramref name="value" /> 相等的 32 位元不帶正負號的整數；如果 <paramref name="value" /> 為 <see langword="null" />，則為零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2422">A 32-bit unsigned integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-2423">傳回值是叫用的結果<xref:System.IConvertible.ToUInt32%2A?displayProperty=nameWithType>方法的基礎類型`value`。</span><span class="sxs-lookup"><span data-stu-id="377f1-2423">The return value is the result of invoking the <xref:System.IConvertible.ToUInt32%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
 <span data-ttu-id="377f1-2424">`provider` 可讓使用者指定的內容的相關特定文化特性的轉換資訊`value`。</span><span class="sxs-lookup"><span data-stu-id="377f1-2424">`provider` enables the user to specify culture-specific conversion information about the contents of `value`.</span></span> <span data-ttu-id="377f1-2425">例如，如果`value`是<xref:System.String>表示數字，`provider`可能會提供用來代表該數字的標記法的特定文化特性資訊。</span><span class="sxs-lookup"><span data-stu-id="377f1-2425">For example, if `value` is a <xref:System.String> that represents a number, `provider` could supply culture-specific information about the notation used to represent that number.</span></span>  
  
 <span data-ttu-id="377f1-2426">基底類型忽略`provider`; 不過，如果，可能會使用參數`value`是使用者定義型別可實作<xref:System.IConvertible>介面。</span><span class="sxs-lookup"><span data-stu-id="377f1-2426">The base types ignore `provider`; however, the parameter may be used if `value` is a user-defined type that implements the <xref:System.IConvertible> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-2427">下列範例會定義`HexString`類別可實作<xref:System.IConvertible>介面，為了容納這兩個 32 位元帶正負號和 32 位元不帶正負號值的字串表示。</span><span class="sxs-lookup"><span data-stu-id="377f1-2427">The following example defines a `HexString` class that implements the <xref:System.IConvertible> interface and that is designed to hold the string representation of both 32-bit signed and 32-bit unsigned values.</span></span> <span data-ttu-id="377f1-2428">類別包含`Sign`表示正負號的十六進位值的屬性。</span><span class="sxs-lookup"><span data-stu-id="377f1-2428">The class includes a `Sign` property that indicates the sign of its hexadecimal value.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_4.cs#17)]
 [!code-vb[System.Convert.ToUInt32#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_4.vb#17)]  
  
 <span data-ttu-id="377f1-2429">下列範例顯示呼叫<xref:System.Convert.ToUInt32%28System.Object%2CSystem.IFormatProvider%29>方法通過`HexString`物件做為參數，又呼叫<xref:System.IConvertible.ToUInt32%2A?displayProperty=nameWithType>實作`HexString`類別。</span><span class="sxs-lookup"><span data-stu-id="377f1-2429">The following example shows that a call to the <xref:System.Convert.ToUInt32%28System.Object%2CSystem.IFormatProvider%29> method that passes a `HexString` object as a parameter, in turn, calls the <xref:System.IConvertible.ToUInt32%2A?displayProperty=nameWithType> implementation of the `HexString` class.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_4.cs#18)]
 [!code-vb[System.Convert.ToUInt32#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_4.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="377f1-2430">
            <paramref name="value" /> 不是適當的格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2430">
              <paramref name="value" /> is not in an appropriate format.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="377f1-2431">
            <paramref name="value" /> 未實作 <see cref="T:System.IConvertible" /> 介面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2431">
              <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
          <span data-ttu-id="377f1-2432">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2432">-or-</span>
          </span>
          <span data-ttu-id="377f1-2433">不支援轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2433">The conversion is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-2434">
            <paramref name="value" /> 代表小於 <see cref="F:System.UInt32.MinValue" /> 或大於 <see cref="F:System.UInt32.MaxValue" /> 的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2434">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As String, provider As IFormatProvider) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-2435">字串，包含要轉換的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2435">A string that contains the number to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="377f1-2436">物件，提供特定文化特性格式資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2436">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-2437">使用指定之特定文化特性格式資訊，將指定之數字的字串表示轉換為相等的 32 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2437">Converts the specified string representation of a number to an equivalent 32-bit unsigned integer, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-2438">與 <paramref name="value" /> 中之數字相等的 32 位元不帶正負號的整數；如果 <paramref name="value" /> 為 <see langword="null" />，則為 0 (零)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2438">A 32-bit unsigned integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-2439">傳回值是叫用的結果<xref:System.UInt32.Parse%2A?displayProperty=nameWithType>上`value`。</span><span class="sxs-lookup"><span data-stu-id="377f1-2439">The return value is the result of invoking <xref:System.UInt32.Parse%2A?displayProperty=nameWithType> on `value`.</span></span>  
  
 <span data-ttu-id="377f1-2440">`provider` 是<xref:System.IFormatProvider>取得的執行個體<xref:System.Globalization.NumberFormatInfo>物件。</span><span class="sxs-lookup"><span data-stu-id="377f1-2440">`provider` is an <xref:System.IFormatProvider> instance that obtains a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="377f1-2441"><xref:System.Globalization.NumberFormatInfo>物件提供特定文化特性格式資訊`value`。</span><span class="sxs-lookup"><span data-stu-id="377f1-2441">The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of `value`.</span></span> <span data-ttu-id="377f1-2442">如果`provider`是`null`、<xref:System.Globalization.NumberFormatInfo>會使用目前文化特性。</span><span class="sxs-lookup"><span data-stu-id="377f1-2442">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> for the current culture is used.</span></span>  
  
 <span data-ttu-id="377f1-2443">如果您不想處理的例外狀況，如果轉換失敗，您可以呼叫<xref:System.UInt32.TryParse%2A?displayProperty=nameWithType>方法改為。</span><span class="sxs-lookup"><span data-stu-id="377f1-2443">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.UInt32.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="377f1-2444">它會傳回<xref:System.Boolean>值，指出轉換成功或失敗。</span><span class="sxs-lookup"><span data-stu-id="377f1-2444">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-2445">下列範例會定義自訂<xref:System.Globalization.NumberFormatInfo>物件，會將字串"pos"辨識為正號和字串"協商"做為負號。</span><span class="sxs-lookup"><span data-stu-id="377f1-2445">The following example defines a custom <xref:System.Globalization.NumberFormatInfo> object that recognizes the string "pos" as the positive sign and the string "neg" as the negative sign.</span></span> <span data-ttu-id="377f1-2446">即會嘗試將數字的字串陣列的每個項目轉換成整數使用此提供者和<xref:System.Globalization.NumberFormatInfo>文化特性而異的提供者。</span><span class="sxs-lookup"><span data-stu-id="377f1-2446">It then attempts to convert each element of a numeric string array to an integer using both this provider and the <xref:System.Globalization.NumberFormatInfo> provider for the invariant culture.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_2.cs#15)]
 [!code-vb[System.Convert.ToUInt32#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_2.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="377f1-2447">
            <paramref name="value" /> 不是由選擇性正負號之後跟隨一連串數字 (0 到 9) 所組成。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2447">
              <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-2448">
            <paramref name="value" /> 代表小於 <see cref="F:System.UInt32.MinValue" /> 或大於 <see cref="F:System.UInt32.MaxValue" /> 的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2448">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (string value, int fromBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(string value, int32 fromBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As String, fromBase As Integer) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(System::String ^ value, int fromBase);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fromBase" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-2449">字串，包含要轉換的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2449">A string that contains the number to convert.</span>
          </span>
        </param>
        <param name="fromBase">
          <span data-ttu-id="377f1-2450">
            <c>value</c> 中數字的基底，必須是 2、8、10 或 16。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2450">The base of the number in <c>value</c>, which must be 2, 8, 10, or 16.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-2451">將指定基底中數字的字串表示，轉換為相等的 32 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2451">Converts the string representation of a number in a specified base to an equivalent 32-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-2452">與 <paramref name="value" /> 中之數字相等的 32 位元不帶正負號的整數；如果 <paramref name="value" /> 為 <see langword="null" />，則為 0 (零)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2452">A 32-bit unsigned integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-2453">如果`fromBase`是 16，您可以使用前置詞指定的數字`value`與 「 0x 」 或 「 0x 」 的參數。</span><span class="sxs-lookup"><span data-stu-id="377f1-2453">If `fromBase` is 16, you can prefix the number specified by the `value` parameter with "0x" or "0X".</span></span>  
  
 <span data-ttu-id="377f1-2454">因為<xref:System.UInt32>資料型別支援不帶正負號的值僅<xref:System.Convert.ToUInt32%28System.String%2CSystem.Int32%29>方法會假設`value`使用不帶正負號的二進位表示法來表示。</span><span class="sxs-lookup"><span data-stu-id="377f1-2454">Because the <xref:System.UInt32> data type supports unsigned values only, the <xref:System.Convert.ToUInt32%28System.String%2CSystem.Int32%29> method assumes that `value` is expressed using unsigned binary representation.</span></span> <span data-ttu-id="377f1-2455">換句話說，所有 32 位元用來表示數字的值，並正負號位元不存在。</span><span class="sxs-lookup"><span data-stu-id="377f1-2455">In other words, all 32 bits are used to represent the numeric value, and a sign bit is absent.</span></span> <span data-ttu-id="377f1-2456">如此一來，就可以撰寫程式碼所在的帶正負號的整數值，超出的範圍<xref:System.UInt32>資料類型轉換成<xref:System.UInt32>值而不擲回例外狀況的方法。</span><span class="sxs-lookup"><span data-stu-id="377f1-2456">As a result, it is possible to write code in which a signed integer value that is out of the range of the <xref:System.UInt32> data type is converted to a <xref:System.UInt32> value without the method throwing an exception.</span></span> <span data-ttu-id="377f1-2457">下列範例會將轉換<xref:System.Int32.MinValue>其十六進位字串表示法，然後呼叫<xref:System.Convert.ToUInt32%28System.String%2CSystem.Int32%29>方法。</span><span class="sxs-lookup"><span data-stu-id="377f1-2457">The following example converts <xref:System.Int32.MinValue> to its hexadecimal string representation, and then calls the <xref:System.Convert.ToUInt32%28System.String%2CSystem.Int32%29> method.</span></span> <span data-ttu-id="377f1-2458">而不是擲回例外狀況，此方法會顯示訊息，「"0x80000000 轉換成 2147483648。</span><span class="sxs-lookup"><span data-stu-id="377f1-2458">Instead of throwing an exception, the method displays the message, "0x80000000 converts to 2147483648."</span></span>  
  
 [!code-csharp[System.Convert.BaseConversion#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#13)]
 [!code-vb[System.Convert.BaseConversion#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#13)]  
  
 <span data-ttu-id="377f1-2459">執行的二進位運算或數值的轉換時一律驗證方法或運算子使用適當的數值表示法來轉譯特定的值，開發人員的責任。</span><span class="sxs-lookup"><span data-stu-id="377f1-2459">When performing binary operations or numeric conversions, it is always the responsibility of the developer to verify that a method or operator is using the appropriate numeric representation to interpret a particular value.</span></span> <span data-ttu-id="377f1-2460">下列範例說明的技巧，確保方法不會不當地使用二進位表示法來轉譯值時，所用二的補數表示十六進位字串轉換成<xref:System.UInt32>值。</span><span class="sxs-lookup"><span data-stu-id="377f1-2460">The following example illustrates one technique for ensuring that the method does not inappropriately use binary representation to interpret a value that uses two's complement representation when converting a hexadecimal string to a <xref:System.UInt32> value.</span></span> <span data-ttu-id="377f1-2461">此範例會判斷值，代表帶正負號或不帶正負號的整數，而它會將該值轉換為其字串表示。</span><span class="sxs-lookup"><span data-stu-id="377f1-2461">The example determines whether a value represents a signed or an unsigned integer while it is converting that value to its string representation.</span></span> <span data-ttu-id="377f1-2462">當此範例將值轉換成<xref:System.UInt32>值，它會檢查原始的值是否為帶正負號的整數。</span><span class="sxs-lookup"><span data-stu-id="377f1-2462">When the example converts the value to a <xref:System.UInt32> value, it checks whether the original value was a signed integer.</span></span> <span data-ttu-id="377f1-2463">若是如此，並設定其高序位位元 （表示原始值為負），方法會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="377f1-2463">If so, and if its high-order bit is set (which indicates that the original value was negative), the method throws an exception.</span></span>  
  
 [!code-csharp[System.Convert.BaseConversion#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#14)]
 [!code-vb[System.Convert.BaseConversion#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#14)]  
  
   
  
## Examples  
 <span data-ttu-id="377f1-2464">下列範例會嘗試解譯為十六進位值的數字的字串陣列中每個項目，並將它轉換成不帶正負號的整數。</span><span class="sxs-lookup"><span data-stu-id="377f1-2464">The following example attempts to interpret each element in an array of numeric strings as a hexadecimal value and to convert it to an unsigned integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_3.cs#16)]
 [!code-vb[System.Convert.ToUInt32#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_3.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="377f1-2465">
            <paramref name="fromBase" /> 不是 2、8、10 或 16。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2465">
              <paramref name="fromBase" /> is not 2, 8, 10, or 16.</span>
          </span>
          <span data-ttu-id="377f1-2466">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2466">-or-</span>
          </span>
          <span data-ttu-id="377f1-2467">代表非 10 進位不帶正負號數字的 <paramref name="value" />，有前置負號。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2467">
              <paramref name="value" />, which represents a non-base 10 unsigned number, is prefixed with a negative sign.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="377f1-2468">
            <paramref name="value" /> 為 <see cref="F:System.String.Empty" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2468">
              <paramref name="value" /> is <see cref="F:System.String.Empty" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="377f1-2469">
            <paramref name="value" /> 所包含的字元在 <paramref name="fromBase" /> 指定的基底中不是有效數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2469">
              <paramref name="value" /> contains a character that is not a valid digit in the base specified by <paramref name="fromBase" />.</span>
          </span>
          <span data-ttu-id="377f1-2470">如果 <paramref name="value" /> 中的第一個字元無效，例外狀況訊息會指出沒有數字可進行轉換；否則訊息會指出 <paramref name="value" /> 包含無效的尾端字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2470">The exception message indicates that there are no digits to convert if the first character in <paramref name="value" /> is invalid; otherwise, the message indicates that <paramref name="value" /> contains invalid trailing characters.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-2471">代表非 10 進位不帶正負號數字的 <paramref name="value" />，有前置負號。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2471">
              <paramref name="value" />, which represents a non-base 10 unsigned number, is prefixed with a negative sign.</span>
          </span>
          <span data-ttu-id="377f1-2472">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2472">-or-</span>
          </span>
          <span data-ttu-id="377f1-2473">
            <paramref name="value" /> 代表小於 <see cref="F:System.UInt32.MinValue" /> 或大於 <see cref="F:System.UInt32.MaxValue" /> 的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2473">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToUInt64">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="377f1-2474">將指定的值轉換為 64 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2474">Converts a specified value to a 64-bit unsigned integer.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As Boolean) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(bool value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-2475">要轉換的布林值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2475">The Boolean value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-2476">將指定的布林值轉換為相等的 64 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2476">Converts the specified Boolean value to the equivalent 64-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-2477">如果 <paramref name="value" /> 為 <see langword="true" />，則為數字 1，否則為 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2477">The number 1 if <paramref name="value" /> is <see langword="true" />; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-2478">下列範例將布林值，轉換`true`和`false`不帶正負號之長整數的值。</span><span class="sxs-lookup"><span data-stu-id="377f1-2478">The following example converts Boolean `true` and `false` values to unsigned long integers.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_1.cs#1)]
 [!code-vb[System.Convert.ToUInt64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As Byte) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(System::Byte value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-2479">要轉換之 8 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2479">The 8-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-2480">將指定的 8 位元不帶正負號整數的值，轉換為相等的 64 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2480">Converts the value of the specified 8-bit unsigned integer to the equivalent 64-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-2481">與 <paramref name="value" /> 相等的 64 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2481">A 64-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-2482">下列範例會將位元組陣列中的每個項目轉換成不帶正負號的長整數。</span><span class="sxs-lookup"><span data-stu-id="377f1-2482">The following example converts each element in a byte array to an unsigned long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_1.cs#2)]
 [!code-vb[System.Convert.ToUInt64#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As Char) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(char value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-2483">要轉換的 Unicode 字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2483">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-2484">將指定的 Unicode 字元值轉換為相等的 64 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2484">Converts the value of the specified Unicode character to the equivalent 64-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-2485">與 <paramref name="value" /> 相等的 64 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2485">A 64-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-2486">下列範例會將字元陣列中的每個項目轉換成不帶正負號的長整數。</span><span class="sxs-lookup"><span data-stu-id="377f1-2486">The following example converts each element in a character array to an unsigned long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_1.cs#3)]
 [!code-vb[System.Convert.ToUInt64#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As DateTime) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(DateTime value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-2487">要轉換的日期和時間值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2487">The date and time value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-2488">呼叫這個方法一律會擲回 <see cref="T:System.InvalidCastException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2488">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-2489">不支援這個轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2489">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="377f1-2490">沒有傳回值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2490">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="377f1-2491">不支援這個轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2491">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As Decimal) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(System::Decimal value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-2492">要轉換的十進位數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2492">The decimal number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-2493">將指定之十進位數字的值，轉換為相等的 64 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2493">Converts the value of the specified decimal number to an equivalent 64-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-2494">
            <paramref name="value" />，四捨五入為最接近的 64 位元不帶正負號整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2494">
              <paramref name="value" />, rounded to the nearest 64-bit unsigned integer.</span>
          </span>
          <span data-ttu-id="377f1-2495">如果 <paramref name="value" /> 介於兩個整數正中間時，則傳回偶數；也就是 4.5 會轉換為 4，5.5 會轉換為 6。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2495">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-2496">下列範例會嘗試將陣列中的每個項目<xref:System.Decimal>不帶正負號的長整數的值。</span><span class="sxs-lookup"><span data-stu-id="377f1-2496">The following example attempts to convert each element in an array of <xref:System.Decimal> values to an unsigned long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_1.cs#4)]
 [!code-vb[System.Convert.ToUInt64#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-2497">
            <paramref name="value" /> 小於零或大於 <see cref="F:System.UInt64.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2497">
              <paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt64.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As Double) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(double value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-2498">要轉換的雙精確度浮點數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2498">The double-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-2499">將指定之雙精確度浮點數的值，轉換為相等的 64 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2499">Converts the value of the specified double-precision floating-point number to an equivalent 64-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-2500">
            <paramref name="value" />，四捨五入為最接近的 64 位元不帶正負號整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2500">
              <paramref name="value" />, rounded to the nearest 64-bit unsigned integer.</span>
          </span>
          <span data-ttu-id="377f1-2501">如果 <paramref name="value" /> 介於兩個整數正中間時，則傳回偶數；也就是 4.5 會轉換為 4，5.5 會轉換為 6。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2501">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-2502">下列範例會嘗試將陣列中的每個項目<xref:System.Double>不帶正負號的長整數的值。</span><span class="sxs-lookup"><span data-stu-id="377f1-2502">The following example attempts to convert each element in an array of <xref:System.Double> values to an unsigned long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_1.cs#5)]
 [!code-vb[System.Convert.ToUInt64#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-2503">
            <paramref name="value" /> 小於零或大於 <see cref="F:System.UInt64.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2503">
              <paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt64.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Double" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As Short) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(short value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-2504">要轉換的 16 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2504">The 16-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-2505">將指定的 16 位元帶正負號整數的值，轉換為相等的 64 位元不帶正負號整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2505">Converts the value of the specified 16-bit signed integer to the equivalent 64-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-2506">與 <paramref name="value" /> 相等的 64 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2506">A 64-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-2507">下列範例會嘗試將 16 位元整數的陣列中每個項目轉換成不帶正負號的長整數。</span><span class="sxs-lookup"><span data-stu-id="377f1-2507">The following example attempts to convert each element in an array of 16-bit integers to an unsigned long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_1.cs#6)]
 [!code-vb[System.Convert.ToUInt64#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-2508">
            <paramref name="value" /> 小於零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2508">
              <paramref name="value" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As Integer) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(int value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-2509">要轉換的 32 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2509">The 32-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-2510">將指定的 32 位元帶正負號的整數值轉換為相等的 64 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2510">Converts the value of the specified 32-bit signed integer to an equivalent 64-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-2511">與 <paramref name="value" /> 相等的 64 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2511">A 64-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-2512">下列範例會嘗試將整數的陣列中每個項目轉換成不帶正負號的長整數。</span><span class="sxs-lookup"><span data-stu-id="377f1-2512">The following example attempts to convert each element in an array of integers to an unsigned long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_1.cs#7)]
 [!code-vb[System.Convert.ToUInt64#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-2513">
            <paramref name="value" /> 小於零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2513">
              <paramref name="value" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As Long) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(long value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-2514">要轉換的 64 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2514">The 64-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-2515">將指定的 64 位元帶正負號的整數值轉換為相等的 64 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2515">Converts the value of the specified 64-bit signed integer to an equivalent 64-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-2516">與 <paramref name="value" /> 相等的 64 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2516">A 64-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-2517">下列範例會嘗試將長整數的陣列中每個項目轉換成不帶正負號的長整數。</span><span class="sxs-lookup"><span data-stu-id="377f1-2517">The following example attempts to convert each element in an array of long integers to an unsigned long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_1.cs#8)]
 [!code-vb[System.Convert.ToUInt64#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-2518">
            <paramref name="value" /> 小於零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2518">
              <paramref name="value" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As Object) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-2519">實作 <see cref="T:System.IConvertible" /> 介面的物件，或是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2519">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-2520">將指定之物件的值轉換為 64 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2520">Converts the value of the specified object to a 64-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-2521">與 <paramref name="value" /> 相等的 64 位元不帶正負號的整數；如果 <paramref name="value" /> 為 <see langword="null" />，則為零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2521">A 64-bit unsigned integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-2522">傳回值是叫用的結果<xref:System.IConvertible.ToUInt64%2A?displayProperty=nameWithType>方法的基礎類型`value`。</span><span class="sxs-lookup"><span data-stu-id="377f1-2522">The return value is the result of invoking the <xref:System.IConvertible.ToUInt64%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-2523">下列範例會嘗試將物件陣列中的每個項目轉換成不帶正負號的長整數。</span><span class="sxs-lookup"><span data-stu-id="377f1-2523">The following example attempts to convert each element in an object array to an unsigned long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_1.cs#9)]
 [!code-vb[System.Convert.ToUInt64#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="377f1-2524">
            <paramref name="value" /> 不是適當的格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2524">
              <paramref name="value" /> is not in an appropriate format.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="377f1-2525">
            <paramref name="value" /> 未實作 <see cref="T:System.IConvertible" /> 介面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2525">
              <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
          <span data-ttu-id="377f1-2526">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2526">-or-</span>
          </span>
          <span data-ttu-id="377f1-2527">不支援轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2527">The conversion is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-2528">
            <paramref name="value" /> 代表小於 <see cref="F:System.UInt64.MinValue" /> 或大於 <see cref="F:System.UInt64.MaxValue" /> 的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2528">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As SByte) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(System::SByte value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-2529">要轉換的 8 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2529">The 8-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-2530">將指定的 8 位元帶正負號整數的值，轉換為相等的 64 位元不帶正負號整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2530">Converts the value of the specified 8-bit signed integer to the equivalent 64-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-2531">與 <paramref name="value" /> 相等的 64 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2531">A 64-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-2532">下列範例會嘗試將帶正負號之位元組陣列中的每個項目轉換成不帶正負號的長整數。</span><span class="sxs-lookup"><span data-stu-id="377f1-2532">The following example attempts to convert each element in a signed byte array to an unsigned long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_1.cs#10)]
 [!code-vb[System.Convert.ToUInt64#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-2533">
            <paramref name="value" /> 小於零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2533">
              <paramref name="value" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As Single) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(float value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-2534">要轉換的單精確度浮點數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2534">The single-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-2535">將指定之單精確度浮點數的值，轉換為相等的 64 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2535">Converts the value of the specified single-precision floating-point number to an equivalent 64-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-2536">
            <paramref name="value" />，四捨五入為最接近的 64 位元不帶正負號整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2536">
              <paramref name="value" />, rounded to the nearest 64-bit unsigned integer.</span>
          </span>
          <span data-ttu-id="377f1-2537">如果 <paramref name="value" /> 介於兩個整數正中間時，則傳回偶數；也就是 4.5 會轉換為 4，5.5 會轉換為 6。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2537">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-2538">下列範例會嘗試將陣列中的每個項目<xref:System.Single>不帶正負號的長整數的值。</span><span class="sxs-lookup"><span data-stu-id="377f1-2538">The following example attempts to convert each element in an array of <xref:System.Single> values to an unsigned long integer.</span></span> <span data-ttu-id="377f1-2539">輸出會顯示轉換執行之前，會四捨五入小數值。</span><span class="sxs-lookup"><span data-stu-id="377f1-2539">The output shows that fractional values are rounded before the conversion is performed.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_1.cs#11)]
 [!code-vb[System.Convert.ToUInt64#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-2540">
            <paramref name="value" /> 小於零或大於 <see cref="F:System.UInt64.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2540">
              <paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt64.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Single" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As String) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-2541">字串，包含要轉換的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2541">A string that contains the number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-2542">將指定之數字的字串表示，轉換為相等的 64 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2542">Converts the specified string representation of a number to an equivalent 64-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-2543">與 <paramref name="value" /> 中之數字相等的 64 位元帶正負號的整數；如果 <paramref name="value" /> 為 <see langword="null" />，則為 0 (零)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2543">A 64-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-2544">使用<xref:System.Convert.ToInt64%28System.String%29>方法相當於傳遞`value`至<xref:System.Int64.Parse%28System.String%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="377f1-2544">Using the <xref:System.Convert.ToInt64%28System.String%29> method is equivalent to passing `value` to the <xref:System.Int64.Parse%28System.String%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="377f1-2545">`value` 是使用目前執行緒文化特性的格式化慣例來解譯。</span><span class="sxs-lookup"><span data-stu-id="377f1-2545">`value` is interpreted by using the formatting conventions of the current thread culture.</span></span>  
  
 <span data-ttu-id="377f1-2546">如果您不想處理的例外狀況，如果轉換失敗，您可以呼叫<xref:System.UInt64.TryParse%2A?displayProperty=nameWithType>方法改為。</span><span class="sxs-lookup"><span data-stu-id="377f1-2546">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.UInt64.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="377f1-2547">它會傳回<xref:System.Boolean>值，指出轉換成功或失敗。</span><span class="sxs-lookup"><span data-stu-id="377f1-2547">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-2548">下列範例會解譯為數值字串的字串陣列的項目，並嘗試將它們轉換成不帶正負號之長整數。</span><span class="sxs-lookup"><span data-stu-id="377f1-2548">The following example interprets the elements of a string array as numeric strings and attempts to convert them to unsigned long integers.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_1.cs#12)]
 [!code-vb[System.Convert.ToUInt64#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_1.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="377f1-2549">
            <paramref name="value" /> 不是由選擇性正負號之後跟隨一連串數字 (0 到 9) 所組成。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2549">
              <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-2550">
            <paramref name="value" /> 代表小於 <see cref="F:System.UInt64.MinValue" /> 或大於 <see cref="F:System.UInt64.MaxValue" /> 的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2550">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As UShort) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(System::UInt16 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-2551">要轉換之 16 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2551">The 16-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-2552">將指定的 16 位元不帶正負號整數的值，轉換為相等的 64 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2552">Converts the value of the specified 16-bit unsigned integer to the equivalent 64-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-2553">與 <paramref name="value" /> 相等的 64 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2553">A 64-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-2554">下列範例會將不帶正負號的 16 位元整數的陣列中每個項目轉換成不帶正負號的長整數。</span><span class="sxs-lookup"><span data-stu-id="377f1-2554">The following example converts each element in an array of unsigned 16-bit integers to an unsigned long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_1.cs#13)]
 [!code-vb[System.Convert.ToUInt64#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_1.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As UInteger) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(System::UInt32 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-2555">要轉換之 32 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2555">The 32-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-2556">將指定的 32 位元不帶正負號整數的值，轉換為相等的 64 位元不帶正負號整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2556">Converts the value of the specified 32-bit unsigned integer to an equivalent 64-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-2557">與 <paramref name="value" /> 相等的 64 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2557">A 64-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="377f1-2558">下列範例會將不帶正負號的整數陣列中每個項目轉換成不帶正負號的長整數。</span><span class="sxs-lookup"><span data-stu-id="377f1-2558">The following example converts each element in an unsigned integer array to an unsigned long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_1.cs#14)]
 [!code-vb[System.Convert.ToUInt64#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_1.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As ULong) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(System::UInt64 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-2559">要傳回之 64 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2559">The 64-bit unsigned integer to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-2560">傳回指定的 64 位元不帶正負號整數；不會執行實際的轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2560">Returns the specified 64-bit unsigned integer; no actual conversion is performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-2561">傳回未變更的 <paramref name="value" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2561">
              <paramref name="value" /> is returned unchanged.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (object value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(object value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As Object, provider As IFormatProvider) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(System::Object ^ value, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-2562">實作 <see cref="T:System.IConvertible" /> 介面的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2562">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="377f1-2563">物件，提供特定文化特性格式資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2563">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-2564">使用指定之特定文化特性格式資訊，將指定之物件的值轉換為 64 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2564">Converts the value of the specified object to a 64-bit unsigned integer, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-2565">與 <paramref name="value" /> 相等的 64 位元不帶正負號的整數；如果 <paramref name="value" /> 為 <see langword="null" />，則為零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2565">A 64-bit unsigned integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-2566">傳回值是叫用的結果<xref:System.IConvertible.ToUInt64%2A?displayProperty=nameWithType>方法的基礎類型`value`。</span><span class="sxs-lookup"><span data-stu-id="377f1-2566">The return value is the result of invoking the <xref:System.IConvertible.ToUInt64%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
 <span data-ttu-id="377f1-2567">`provider` 可讓使用者指定的內容的相關特定文化特性的轉換資訊`value`。</span><span class="sxs-lookup"><span data-stu-id="377f1-2567">`provider` enables the user to specify culture-specific conversion information about the contents of `value`.</span></span> <span data-ttu-id="377f1-2568">例如，如果`value`是<xref:System.String>表示數字，`provider`可能會提供用來代表該數字的標記法的特定文化特性資訊。</span><span class="sxs-lookup"><span data-stu-id="377f1-2568">For example, if `value` is a <xref:System.String> that represents a number, `provider` could supply culture-specific information about the notation used to represent that number.</span></span>  
  
 <span data-ttu-id="377f1-2569">基底類型忽略`provider`; 不過，如果，可能會使用參數`value`是使用者定義型別可實作<xref:System.IConvertible>介面。</span><span class="sxs-lookup"><span data-stu-id="377f1-2569">The base types ignore `provider`; however, the parameter may be used if `value` is a user-defined type that implements the <xref:System.IConvertible> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-2570">下列範例會定義`HexString`類別可實作<xref:System.IConvertible>介面，為了容納這兩個 64 位元帶正負號和 64 位元不帶正負號值的字串表示。</span><span class="sxs-lookup"><span data-stu-id="377f1-2570">The following example defines a `HexString` class that implements the <xref:System.IConvertible> interface and that is designed to hold the string representation of both 64-bit signed and 64-bit unsigned values.</span></span> <span data-ttu-id="377f1-2571">類別包含`Sign`表示正負號的十六進位值的屬性。</span><span class="sxs-lookup"><span data-stu-id="377f1-2571">The class includes a `Sign` property that indicates the sign of its hexadecimal value.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_4.cs#17)]
 [!code-vb[System.Convert.ToUInt64#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_4.vb#17)]  
  
 <span data-ttu-id="377f1-2572">下列範例顯示呼叫<xref:System.Convert.ToUInt64%28System.Object%2CSystem.IFormatProvider%29>方法通過`HexString`物件做為參數，又呼叫<xref:System.IConvertible.ToUInt64%2A?displayProperty=nameWithType>實作`HexString`類別。</span><span class="sxs-lookup"><span data-stu-id="377f1-2572">The following example shows that a call to the <xref:System.Convert.ToUInt64%28System.Object%2CSystem.IFormatProvider%29> method that passes a `HexString` object as a parameter, in turn, calls the <xref:System.IConvertible.ToUInt64%2A?displayProperty=nameWithType> implementation of the `HexString` class.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_4.cs#18)]
 [!code-vb[System.Convert.ToUInt64#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_4.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="377f1-2573">
            <paramref name="value" /> 不是適當的格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2573">
              <paramref name="value" /> is not in an appropriate format.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="377f1-2574">
            <paramref name="value" /> 未實作 <see cref="T:System.IConvertible" /> 介面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2574">
              <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
          <span data-ttu-id="377f1-2575">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2575">-or-</span>
          </span>
          <span data-ttu-id="377f1-2576">不支援轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2576">The conversion is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-2577">
            <paramref name="value" /> 代表小於 <see cref="F:System.UInt64.MinValue" /> 或大於 <see cref="F:System.UInt64.MaxValue" /> 的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2577">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As String, provider As IFormatProvider) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-2578">字串，包含要轉換的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2578">A string that contains the number to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="377f1-2579">物件，提供特定文化特性格式資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2579">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-2580">使用指定之特定文化特性格式資訊，將指定之數字的字串表示轉換為相等的 64 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2580">Converts the specified string representation of a number to an equivalent 64-bit unsigned integer, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-2581">與 <paramref name="value" /> 中之數字相等的 64 位元不帶正負號的整數；如果 <paramref name="value" /> 為 <see langword="null" />，則為 0 (零)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2581">A 64-bit unsigned integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-2582">傳回值是叫用的結果<xref:System.UInt64.Parse%2A?displayProperty=nameWithType>上`value`。</span><span class="sxs-lookup"><span data-stu-id="377f1-2582">The return value is the result of invoking <xref:System.UInt64.Parse%2A?displayProperty=nameWithType> on `value`.</span></span>  
  
 <span data-ttu-id="377f1-2583">`provider` 是<xref:System.IFormatProvider>實作，會取得<xref:System.Globalization.NumberFormatInfo>物件。</span><span class="sxs-lookup"><span data-stu-id="377f1-2583">`provider` is an <xref:System.IFormatProvider> implementation that obtains a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="377f1-2584"><xref:System.Globalization.NumberFormatInfo>物件提供特定文化特性格式資訊`value`。</span><span class="sxs-lookup"><span data-stu-id="377f1-2584">The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of `value`.</span></span> <span data-ttu-id="377f1-2585">如果`provider`是`null`、<xref:System.Globalization.NumberFormatInfo>物件會使用目前文化特性。</span><span class="sxs-lookup"><span data-stu-id="377f1-2585">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>  
  
 <span data-ttu-id="377f1-2586">如果您不想處理的例外狀況，如果轉換失敗，您可以呼叫<xref:System.UInt64.TryParse%2A?displayProperty=nameWithType>方法改為。</span><span class="sxs-lookup"><span data-stu-id="377f1-2586">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.UInt64.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="377f1-2587">它會傳回<xref:System.Boolean>值，指出轉換成功或失敗。</span><span class="sxs-lookup"><span data-stu-id="377f1-2587">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="377f1-2588">下列範例會定義自訂<xref:System.Globalization.NumberFormatInfo>物件，會將字串"pos"辨識為正號和字串"協商"做為負號。</span><span class="sxs-lookup"><span data-stu-id="377f1-2588">The following example defines a custom <xref:System.Globalization.NumberFormatInfo> object that recognizes the string "pos" as the positive sign and the string "neg" as the negative sign.</span></span> <span data-ttu-id="377f1-2589">它會嘗試將數字的字串陣列的每個項目轉換成不帶正負號的長整數。</span><span class="sxs-lookup"><span data-stu-id="377f1-2589">It then attempts to convert each element of a numeric string array to an unsigned long integer.</span></span> <span data-ttu-id="377f1-2590">轉換會使用這兩個自訂提供者和<xref:System.Globalization.NumberFormatInfo>文化特性而異的提供者。</span><span class="sxs-lookup"><span data-stu-id="377f1-2590">The conversion uses both the custom provider and the <xref:System.Globalization.NumberFormatInfo> provider for the invariant culture.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_2.cs#15)]
 [!code-vb[System.Convert.ToUInt64#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_2.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="377f1-2591">
            <paramref name="value" /> 不是由選擇性正負號之後跟隨一連串數字 (0 到 9) 所組成。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2591">
              <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-2592">
            <paramref name="value" /> 代表小於 <see cref="F:System.UInt64.MinValue" /> 或大於 <see cref="F:System.UInt64.MaxValue" /> 的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2592">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (string value, int fromBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(string value, int32 fromBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As String, fromBase As Integer) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(System::String ^ value, int fromBase);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fromBase" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="377f1-2593">字串，包含要轉換的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2593">A string that contains the number to convert.</span>
          </span>
        </param>
        <param name="fromBase">
          <span data-ttu-id="377f1-2594">
            <c>value</c> 中數字的基底，必須是 2、8、10 或 16。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2594">The base of the number in <c>value</c>, which must be 2, 8, 10, or 16.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="377f1-2595">將指定基底中數字的字串表示，轉換為相等的 64 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2595">Converts the string representation of a number in a specified base to an equivalent 64-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="377f1-2596">與 <paramref name="value" /> 中之數字相等的 64 位元不帶正負號的整數；如果 <paramref name="value" /> 為 <see langword="null" />，則為 0 (零)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2596">A 64-bit unsigned integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="377f1-2597">如果`fromBase`是 16，您可以使用前置詞指定的數字`value`與 「 0x 」 或 「 0x 」 的參數。</span><span class="sxs-lookup"><span data-stu-id="377f1-2597">If `fromBase` is 16, you can prefix the number specified by the `value` parameter with "0x" or "0X".</span></span>  
  
 <span data-ttu-id="377f1-2598">因為<xref:System.UInt64>資料型別支援不帶正負號的值僅<xref:System.Convert.ToUInt64%28System.String%2CSystem.Int32%29>方法會假設`value`使用不帶正負號的二進位表示法來表示。</span><span class="sxs-lookup"><span data-stu-id="377f1-2598">Because the <xref:System.UInt64> data type supports unsigned values only, the <xref:System.Convert.ToUInt64%28System.String%2CSystem.Int32%29> method assumes that `value` is expressed using unsigned binary representation.</span></span> <span data-ttu-id="377f1-2599">換句話說，所有的 64 位元用來表示數字的值，並正負號位元不存在。</span><span class="sxs-lookup"><span data-stu-id="377f1-2599">In other words, all 64 bits are used to represent the numeric value, and a sign bit is absent.</span></span> <span data-ttu-id="377f1-2600">如此一來，就可以撰寫程式碼所在的帶正負號的長整數值，超出的範圍<xref:System.UInt64>資料類型轉換成<xref:System.UInt64>值而不擲回例外狀況的方法。</span><span class="sxs-lookup"><span data-stu-id="377f1-2600">As a result, it is possible to write code in which a signed long integer value that is out of the range of the <xref:System.UInt64> data type is converted to a <xref:System.UInt64> value without the method throwing an exception.</span></span> <span data-ttu-id="377f1-2601">下列範例會將轉換<xref:System.Int64.MinValue>其十六進位字串表示法，然後呼叫<xref:System.Convert.ToUInt64%28System.String%2CSystem.Int32%29>方法。</span><span class="sxs-lookup"><span data-stu-id="377f1-2601">The following example converts <xref:System.Int64.MinValue> to its hexadecimal string representation, and then calls the <xref:System.Convert.ToUInt64%28System.String%2CSystem.Int32%29> method.</span></span> <span data-ttu-id="377f1-2602">而不是擲回例外狀況，此方法會顯示訊息，「"0x8000000000000000 轉換成 9223372036854775808。</span><span class="sxs-lookup"><span data-stu-id="377f1-2602">Instead of throwing an exception, the method displays the message, "0x8000000000000000 converts to 9223372036854775808."</span></span>  
  
 [!code-csharp[System.Convert.BaseConversion#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#15)]
 [!code-vb[System.Convert.BaseConversion#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#15)]  
  
 <span data-ttu-id="377f1-2603">執行的二進位運算或數值的轉換時一律驗證方法或運算子使用適當的數值表示法來轉譯特定的值，開發人員的責任。</span><span class="sxs-lookup"><span data-stu-id="377f1-2603">When performing binary operations or numeric conversions, it is always the responsibility of the developer to verify that a method or operator is using the appropriate numeric representation to interpret a particular value.</span></span> <span data-ttu-id="377f1-2604">下列範例說明的技巧，確保方法不會不當地使用二進位表示法來轉譯值時，所用二的補數表示十六進位字串轉換成<xref:System.UInt64>值。</span><span class="sxs-lookup"><span data-stu-id="377f1-2604">The following example illustrates one technique for ensuring that the method does not inappropriately use binary representation to interpret a value that uses two's complement representation when converting a hexadecimal string to a <xref:System.UInt64> value.</span></span> <span data-ttu-id="377f1-2605">此範例會判斷值，代表帶正負號或不帶正負號的整數，而它會將該值轉換為其字串表示。</span><span class="sxs-lookup"><span data-stu-id="377f1-2605">The example determines whether a value represents a signed or an unsigned integer while it is converting that value to its string representation.</span></span> <span data-ttu-id="377f1-2606">當此範例將值轉換成<xref:System.UInt64>值，它會檢查原始的值是否為帶正負號的整數。</span><span class="sxs-lookup"><span data-stu-id="377f1-2606">When the example converts the value to a <xref:System.UInt64> value, it checks whether the original value was a signed integer.</span></span> <span data-ttu-id="377f1-2607">若是如此，並設定其高序位位元 （表示原始值為負），方法會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="377f1-2607">If so, and if its high-order bit is set (which indicates that the original value was negative), the method throws an exception.</span></span>  
  
 [!code-csharp[System.Convert.BaseConversion#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#16)]
 [!code-vb[System.Convert.BaseConversion#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#16)]  
  
   
  
## Examples  
 <span data-ttu-id="377f1-2608">下列範例會嘗試解譯為十六進位值的數字的字串陣列中每個項目，並將它轉換成不帶正負號的長整數。</span><span class="sxs-lookup"><span data-stu-id="377f1-2608">The following example attempts to interpret each element in an array of numeric strings as a hexadecimal value and to convert it to an unsigned long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_3.cs#16)]
 [!code-vb[System.Convert.ToUInt64#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_3.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="377f1-2609">
            <paramref name="fromBase" /> 不是 2、8、10 或 16。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2609">
              <paramref name="fromBase" /> is not 2, 8, 10, or 16.</span>
          </span>
          <span data-ttu-id="377f1-2610">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2610">-or-</span>
          </span>
          <span data-ttu-id="377f1-2611">代表非 10 進位不帶正負號數字的 <paramref name="value" />，有前置負號。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2611">
              <paramref name="value" />, which represents a non-base 10 unsigned number, is prefixed with a negative sign.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="377f1-2612">
            <paramref name="value" /> 為 <see cref="F:System.String.Empty" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2612">
              <paramref name="value" /> is <see cref="F:System.String.Empty" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="377f1-2613">
            <paramref name="value" /> 所包含的字元在 <paramref name="fromBase" /> 指定的基底中不是有效數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2613">
              <paramref name="value" /> contains a character that is not a valid digit in the base specified by <paramref name="fromBase" />.</span>
          </span>
          <span data-ttu-id="377f1-2614">如果 <paramref name="value" /> 中的第一個字元無效，例外狀況訊息會指出沒有數字可進行轉換；否則訊息會指出 <paramref name="value" /> 包含無效的尾端字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2614">The exception message indicates that there are no digits to convert if the first character in <paramref name="value" /> is invalid; otherwise, the message indicates that <paramref name="value" /> contains invalid trailing characters.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="377f1-2615">代表非 10 進位不帶正負號數字的 <paramref name="value" />，有前置負號。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2615">
              <paramref name="value" />, which represents a non-base 10 unsigned number, is prefixed with a negative sign.</span>
          </span>
          <span data-ttu-id="377f1-2616">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2616">-or-</span>
          </span>
          <span data-ttu-id="377f1-2617">
            <paramref name="value" /> 代表小於 <see cref="F:System.UInt64.MinValue" /> 或大於 <see cref="F:System.UInt64.MaxValue" /> 的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="377f1-2617">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TryFromBase64Chars">
      <MemberSignature Language="C#" Value="public static bool TryFromBase64Chars (ReadOnlySpan&lt;char&gt; chars, Span&lt;byte&gt; bytes, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFromBase64Chars(valuetype System.ReadOnlySpan`1&lt;char&gt; chars, valuetype System.Span`1&lt;unsigned int8&gt; bytes, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.TryFromBase64Chars(System.ReadOnlySpan{System.Char},System.Span{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFromBase64Chars (chars As ReadOnlySpan(Of Char), bytes As Span(Of Byte), ByRef bytesWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryFromBase64Chars(ReadOnlySpan&lt;char&gt; chars, Span&lt;System::Byte&gt; bytes, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="bytes" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="chars">To be added.</param>
        <param name="bytes">To be added.</param>
        <param name="bytesWritten">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFromBase64String">
      <MemberSignature Language="C#" Value="public static bool TryFromBase64String (string s, Span&lt;byte&gt; bytes, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFromBase64String(string s, valuetype System.Span`1&lt;unsigned int8&gt; bytes, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.TryFromBase64String(System.String,System.Span{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFromBase64String (s As String, bytes As Span(Of Byte), ByRef bytesWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryFromBase64String(System::String ^ s, Span&lt;System::Byte&gt; bytes, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="bytes" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="bytes">To be added.</param>
        <param name="bytesWritten">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryToBase64Chars">
      <MemberSignature Language="C#" Value="public static bool TryToBase64Chars (ReadOnlySpan&lt;byte&gt; bytes, Span&lt;char&gt; chars, out int charsWritten, Base64FormattingOptions options = System.Base64FormattingOptions.None);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryToBase64Chars(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; bytes, valuetype System.Span`1&lt;char&gt; chars, [out] int32&amp; charsWritten, valuetype System.Base64FormattingOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.TryToBase64Chars(System.ReadOnlySpan{System.Byte},System.Span{System.Char},System.Int32@,System.Base64FormattingOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryToBase64Chars (bytes As ReadOnlySpan(Of Byte), chars As Span(Of Char), ByRef charsWritten As Integer, Optional options As Base64FormattingOptions = System.Base64FormattingOptions.None) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="chars" Type="System.Span&lt;System.Char&gt;" />
        <Parameter Name="charsWritten" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="options" Type="System.Base64FormattingOptions" />
      </Parameters>
      <Docs>
        <param name="bytes">To be added.</param>
        <param name="chars">To be added.</param>
        <param name="charsWritten">To be added.</param>
        <param name="options">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>