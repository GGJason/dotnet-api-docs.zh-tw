<Type Name="IObservable&lt;T&gt;" FullName="System.IObservable&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c2589d1e6912470385b77aa8afee4b096c72c259" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30728432" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IObservable&lt;out T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IObservable`1&lt;+ T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.IObservable`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IObservable(Of Out T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IObservable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>Covariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="T">提供通知資訊的物件。</typeparam>
    <summary>定義推播通知的提供者。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IObserver%601>和<xref:System.IObservable%601>介面提供通用的機制，如需推入型通知，也稱為觀察器設計模式。 <xref:System.IObservable%601>介面表示的類別，就會傳送通知 （提供者）;<xref:System.IObserver%601>介面代表接收它們 （觀察者） 的類別。 `T` 代表提供通知資訊的類別。 在某些推入型通知，<xref:System.IObserver%601>實作和`T`可代表相同的型別。  
  
 提供者必須實作單一方法<xref:System.IObservable%601.Subscribe%2A>，指出觀察者想要接收推播通知。 方法的呼叫端傳遞觀察者的執行個體。 方法會傳回<xref:System.IDisposable>讓提供者已停止傳送之前隨時取消通知觀察者的實作。  
  
 在任何時候，給定的提供者可能有零個、 一個或多個觀察者。 提供者負責給觀察者的參考儲存，並確保它們有效傳送通知之前。 <xref:System.IObservable%601>介面不會假設觀察者的通知會傳送的順序號碼。  
  
 提供者所呼叫之觀察者傳送通知的下列三種<xref:System.IObserver%601>方法：  
  
-   目前的資料。 提供者可以呼叫<xref:System.IObserver%601.OnNext%2A?displayProperty=nameWithType>方法以傳遞觀察者`T`物件具有目前的資料、 變更的資料或全新的資料。  
  
-   錯誤狀況。 提供者可以呼叫<xref:System.IObserver%601.OnError%2A?displayProperty=nameWithType>方法來通知觀察者發生某個錯誤狀況。  
  
-   任何其他資料。 提供者可以呼叫<xref:System.IObserver%601.OnCompleted%2A?displayProperty=nameWithType>方法來通知觀察器發出它已完成傳送通知。  
  
   
  
## Examples  
 下列範例說明觀察器設計模式。 它會定義`Location`包含經度和緯度資訊類別。  
  
 [!code-csharp[System.IObserver.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/provider.cs#5)]
 [!code-vb[System.IObserver.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/provider.vb#5)]  
  
 `LocationTracker`類別提供<xref:System.IObservable%601>實作。 其`TrackLocation`方法會傳遞 null`Location`包含經度和緯度資料的物件。 如果`Location`值不是`null`、`TrackLocation`方法呼叫<xref:System.IObserver%601.OnNext%2A>方法的每個觀察者。  
  
 [!code-csharp[System.IObserver.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/provider.cs#6)]
 [!code-vb[System.IObserver.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/provider.vb#6)]  
  
 如果`Location`值是`null`、`TrackLocation`方法具現化`LocationUnknownException`物件，下列範例所示。 然後它會呼叫每個觀察者<xref:System.IObserver%601.OnError%2A>方法並將其傳遞`LocationUnknownException`物件。 請注意，`LocationUnknownException`衍生自<xref:System.Exception>，但不會新增任何新的成員。  
  
 [!code-csharp[System.IObserver.Class#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/provider.cs#7)]
 [!code-vb[System.IObserver.Class#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/provider.vb#7)]  
  
 觀察器註冊以接收來自通知`TrackLocation`物件藉由呼叫其<xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType>方法，將觀察者物件的參考指派給私用泛型<xref:System.Collections.Generic.List%601>物件。 方法會傳回`Unsubscriber`物件，它是<xref:System.IDisposable>讓觀察者停止接收通知的實作。 `LocationTracker`類別還包括`EndTransmission`方法。 任何其他位置的資料可用時，方法會呼叫每個觀察者<xref:System.IObserver%601.OnCompleted%2A>方法然後清除 觀察者的內部清單。  
  
 在此範例中，`LocationReporter`類別提供<xref:System.IObserver%601>實作。 它顯示到主控台的目前位置的相關資訊。 其建構函式包括`name`參數，可讓`LocationReporter`其字串輸出中識別本身的執行個體。 它也包含`Subscribe`方法，這個方法會包裝到提供者的呼叫<xref:System.IObservable%601.Subscribe%2A>方法。 這可讓方法將傳回的指定<xref:System.IDisposable>私用變數的參考。 `LocationReporter`類別還包括`Unsubscribe`方法，這個方法會呼叫<xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType>方法所傳回的物件<xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType>方法。 下列程式碼定義`LocationReporter`類別。  
  
 [!code-csharp[System.IObserver.Class#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/observer.cs#8)]
 [!code-vb[System.IObserver.Class#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/observer.vb#8)]  
  
 下列程式碼接著會執行個體化提供者和觀察者。  
  
 [!code-csharp[System.IObserver.Class#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/program.cs#9)]
 [!code-vb[System.IObserver.Class#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/module1.vb#9)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IObserver`1" />
  </Docs>
  <Members>
    <Member MemberName="Subscribe">
      <MemberSignature Language="C#" Value="public IDisposable Subscribe (IObserver&lt;out T&gt; observer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IDisposable Subscribe(class System.IObserver`1&lt;!T&gt; observer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IObservable`1.Subscribe(System.IObserver{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Subscribe (observer As IObserver(Of Out T)) As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IDisposable ^ Subscribe(IObserver&lt;T&gt; ^ observer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="observer" Type="System.IObserver&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="observer">要接收通知的物件。</param>
        <summary>通知提供者，觀察者將接收通知。</summary>
        <returns>可讓觀察者在提供者完成傳送通知之前停止接收通知的介面的參考。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IObservable%601.Subscribe%2A>註冊推播通知觀察者必須呼叫方法。 典型實作<xref:System.IObservable%601.Subscribe%2A>方法會進行下列作業：  
  
-   它會儲存參考觀察者的集合物件中，例如<xref:System.Collections.Generic.List%601>物件。  
  
-   它會傳回參考<xref:System.IDisposable>介面。 這可讓觀察者取消訂閱 (亦即，停止接收通知) 提供者完成傳送，並呼叫 「 訂閱者 」 之前<xref:System.IObserver%601.OnCompleted%2A>方法。  
  
 在任何給定的時間，特定的執行個體<xref:System.IObservable%601>實作都負責處理所有訂閱和通知所有訂閱者。 除非特定的文件<xref:System.IObservable%601>否則表示實作觀察者應該作任何假設<xref:System.IObservable%601>實作，例如多個觀察者將接收通知的順序。  
  
   
  
## Examples  
 下列範例說明<xref:System.IObservable%601.Subscribe%2A>報告緯度和經度資訊的應用程式的方法。 它會定義<xref:System.Collections.Generic.IList%601>會儲存所有觀察者的參考的集合物件。 它也會傳回名為私用類別`Unsubscriber`實作<xref:System.IDisposable>介面，並可讓訂閱者停止接收事件通知。  請參閱 < 範例 > 一節的<xref:System.IObservable%601>完整範例的主題。  
  
 [!code-csharp[System.IObserver.Class#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/provider.cs#13)]
 [!code-vb[System.IObserver.Class#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/provider.vb#13)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IObserver`1" />
      </Docs>
    </Member>
  </Members>
</Type>