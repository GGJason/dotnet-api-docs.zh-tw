<Type Name="AppContext" FullName="System.AppContext">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="22baeef40fafd807844df877ee179199629f82f1" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39909626" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class AppContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit AppContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.AppContext" />
  <TypeSignature Language="VB.NET" Value="Public Class AppContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class AppContext abstract sealed" />
  <TypeSignature Language="F#" Value="type AppContext = class" />
  <AssemblyInfo>
    <AssemblyName>System.AppContext</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="ae1ad-101">提供成員，用於設定和擷取應用程式內容的相關資料。</span>
      <span class="sxs-lookup">
        <span data-stu-id="ae1ad-101">Provides members for setting and retrieving data about an application's context.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ae1ad-102"><xref:System.AppContext>類別可讓您的程式庫作者為使用者提供的新功能的統一退出機制。</span><span class="sxs-lookup"><span data-stu-id="ae1ad-102">The <xref:System.AppContext> class enables library writers to provide a uniform opt-out mechanism for new functionality for their users.</span></span> <span data-ttu-id="ae1ad-103">它會建立元件之間的鬆散結合合約，以便溝通退出要求。</span><span class="sxs-lookup"><span data-stu-id="ae1ad-103">It establishes a loosely-coupled contract between components in order to communicate an opt-out request.</span></span> <span data-ttu-id="ae1ad-104">變更現有的功能時，此功能通常特別重要。</span><span class="sxs-lookup"><span data-stu-id="ae1ad-104">This capability is typically important when a change is made to existing functionality.</span></span> <span data-ttu-id="ae1ad-105">相反地，已經有新功能的隱含選擇加入。</span><span class="sxs-lookup"><span data-stu-id="ae1ad-105">Conversely, there is already an implicit opt-in for new functionality.</span></span>  
  
## <a name="appcontext-for-library-developers"></a><span data-ttu-id="ae1ad-106">程式庫開發人員的 AppContext</span><span class="sxs-lookup"><span data-stu-id="ae1ad-106">AppContext for library developers</span></span>  
 <span data-ttu-id="ae1ad-107">程式庫使用<xref:System.AppContext>切換來定義並公開相容性的類別，而程式庫使用者可以設定這些參數來影響程式庫行為。</span><span class="sxs-lookup"><span data-stu-id="ae1ad-107">Libraries use  the <xref:System.AppContext> class to define and expose compatibility switches, while library users can set those switches to affect the library behavior.</span></span> <span data-ttu-id="ae1ad-108">根據預設，程式庫可提供新的功能，且它們只會在已設定此參數時變更它 (亦即，它們提供先前的功能)。</span><span class="sxs-lookup"><span data-stu-id="ae1ad-108">By default, libraries provide the new functionality, and they only alter it (that is, they provide the previous functionality) if the switch is set.</span></span>  <span data-ttu-id="ae1ad-109">這可讓程式庫，以提供現有的 API 中的新行為，同時繼續支援取決於先前的行為的呼叫端。</span><span class="sxs-lookup"><span data-stu-id="ae1ad-109">This allows libraries to provide new behavior for an existing API while continuing to support callers who depend on the previous behavior.</span></span>  
  
### <a name="defining-the-switch-name"></a><span data-ttu-id="ae1ad-110">定義之參數名稱</span><span class="sxs-lookup"><span data-stu-id="ae1ad-110">Defining the switch name</span></span>  
 <span data-ttu-id="ae1ad-111">若要允許您的媒體櫃退出行為變更的取用者的最常見方式是定義具名的參數。</span><span class="sxs-lookup"><span data-stu-id="ae1ad-111">The most common way to allow consumers of your library to opt out of a change of behavior is to define a named switch.</span></span>  <span data-ttu-id="ae1ad-112">其`value`項目是參數的名稱所組成的名稱/值組和其<xref:System.Boolean>值。</span><span class="sxs-lookup"><span data-stu-id="ae1ad-112">Its `value` element is a name/value pair that consists of the name of a switch and its <xref:System.Boolean> value.</span></span>  <span data-ttu-id="ae1ad-113">根據預設，參數是一律以隱含方式`false`，它提供新的行為 （及選擇加入的新行為讓預設情況下）。</span><span class="sxs-lookup"><span data-stu-id="ae1ad-113">By default, the switch is always implicitly `false`, which provides the new behavior (and makes the new behavior opt-in by default).</span></span> <span data-ttu-id="ae1ad-114">將參數設定為`true`啟用它，它提供舊版的行為。</span><span class="sxs-lookup"><span data-stu-id="ae1ad-114">Setting the switch to `true` enables it, which provides the legacy behavior.</span></span> <span data-ttu-id="ae1ad-115">明確地將參數設定為`false`也提供新的行為。</span><span class="sxs-lookup"><span data-stu-id="ae1ad-115">Explicitly setting the switch to `false` also provides the new behavior.</span></span>  
  
 <span data-ttu-id="ae1ad-116">很有幫助的交換器名稱，使用一致的格式，因為它們是程式庫所公開的正式合約。</span><span class="sxs-lookup"><span data-stu-id="ae1ad-116">It's beneficial to use a consistent format for switch names, since they are a formal contract exposed by a library.</span></span> <span data-ttu-id="ae1ad-117">以下是兩種明顯的格式。</span><span class="sxs-lookup"><span data-stu-id="ae1ad-117">The following are two obvious formats.</span></span>  
  
-   <span data-ttu-id="ae1ad-118">*參數*.*命名空間*.*參數名稱*</span><span class="sxs-lookup"><span data-stu-id="ae1ad-118">*Switch*.*namespace*.*switchname*</span></span>  
  
-   <span data-ttu-id="ae1ad-119">*參數*.*程式庫*.*參數名稱*</span><span class="sxs-lookup"><span data-stu-id="ae1ad-119">*Switch*.*library*.*switchname*</span></span>  
  
 <span data-ttu-id="ae1ad-120">一旦您定義和文件切換時，呼叫端可以使用它使用登錄中，藉由新增[ \<Appcontextswitchoverrides> >](~/docs/framework/configure-apps/file-schema/runtime/appcontextswitchoverrides-element.md)項目至其應用程式組態檔中，或藉由呼叫<xref:System.AppContext.SetSwitch%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType>方法以程式設計的方式。</span><span class="sxs-lookup"><span data-stu-id="ae1ad-120">Once you define and document the switch, callers can use it by using the registry, by adding an  [\<AppContextSwitchOverrides>](~/docs/framework/configure-apps/file-schema/runtime/appcontextswitchoverrides-element.md) element to their application configuration file, or by calling the  <xref:System.AppContext.SetSwitch%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType> method programmatically.</span></span> <span data-ttu-id="ae1ad-121">請參閱[程式庫取用者 AppContext](#ForConsumers)一節，如需有關如何使用呼叫端，並將值<xref:System.AppContext>組態參數。</span><span class="sxs-lookup"><span data-stu-id="ae1ad-121">See the [AppContext for library consumers](#ForConsumers) section for more information about how callers use and set the value of <xref:System.AppContext> configuration switches.</span></span>  
  
 <span data-ttu-id="ae1ad-122">當 common language runtime 會執行的應用程式時，它會自動讀取登錄的相容性設定，並載入應用程式組態檔，以填入應用程式的<xref:System.AppContext>執行個體。</span><span class="sxs-lookup"><span data-stu-id="ae1ad-122">When the common language runtime runs an application, it automatically reads the registry's compatibility settings and loads the application configuration file in order to populate the application's <xref:System.AppContext> instance.</span></span> <span data-ttu-id="ae1ad-123">因為<xref:System.AppContext>執行個體已填入，以程式設計方式呼叫端或藉由執行階段，您不必採取任何動作，例如呼叫<xref:System.AppContext.SetSwitch%2A>方法，以設定<xref:System.AppContext>執行個體。</span><span class="sxs-lookup"><span data-stu-id="ae1ad-123">Because the <xref:System.AppContext> instance is populated either programmatically by the caller or by the runtime, you do not have to take any action, such as calling the <xref:System.AppContext.SetSwitch%2A> method,  to configure the <xref:System.AppContext> instance.</span></span>  
  
### <a name="checking-the-setting"></a><span data-ttu-id="ae1ad-124">檢查設定</span><span class="sxs-lookup"><span data-stu-id="ae1ad-124">Checking the setting</span></span>  
 <span data-ttu-id="ae1ad-125">您可以接著查看是否取用者已經宣告的參數並藉由呼叫適當的動作值<xref:System.AppContext.TryGetSwitch%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="ae1ad-125">You can then check if a consumer has declared the value of the switch and act appropriately by calling the <xref:System.AppContext.TryGetSwitch%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="ae1ad-126">此方法會傳回`true`如果`switchName`找到引數，而且此方法傳回時，其`isEnabled`引數會指出參數的值。</span><span class="sxs-lookup"><span data-stu-id="ae1ad-126">The method returns `true` if the `switchName` argument is found, and when the method returns, its `isEnabled` argument indicates the value of the switch.</span></span>  <span data-ttu-id="ae1ad-127">否則，方法會傳回 `false`。</span><span class="sxs-lookup"><span data-stu-id="ae1ad-127">Otherwise, the method returns `false`.</span></span>  
  
### <a name="an-example"></a><span data-ttu-id="ae1ad-128">範例</span><span class="sxs-lookup"><span data-stu-id="ae1ad-128">An example</span></span>  
 <span data-ttu-id="ae1ad-129">下列範例示範如何將<xref:System.AppContext>以允許客戶選擇的程式庫方法的原始行為的類別。</span><span class="sxs-lookup"><span data-stu-id="ae1ad-129">The following example illustrates the use of the <xref:System.AppContext> class to allow the customer to choose the original behavior of a library method.</span></span>   <span data-ttu-id="ae1ad-130">以下是名為程式庫版本 1.0 `StringLibrary`。</span><span class="sxs-lookup"><span data-stu-id="ae1ad-130">The following is version 1.0 of a library named `StringLibrary`.</span></span> <span data-ttu-id="ae1ad-131">它會定義`SubstringStartsAt`方法，以執行序數比較，來決定的較大的字串內的子字串的起始索引。</span><span class="sxs-lookup"><span data-stu-id="ae1ad-131">It defines a `SubstringStartsAt` method that performs an ordinal comparison to determine the starting index of a substring within a larger string.</span></span>  
  
 [!code-csharp[System.AppContext.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.AppContext.Class/cs/Example4.cs#4)]
 [!code-vb[System.AppContext.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.AppContext.Class/vb/Example4.vb#4)]  
  
 <span data-ttu-id="ae1ad-132">下列範例接著會使用程式庫"考古學"中尋找 「 archæ"的子字串的起始索引。</span><span class="sxs-lookup"><span data-stu-id="ae1ad-132">The following example then uses the library to find the starting index of the substring "archæ" in "The archaeologist".</span></span> <span data-ttu-id="ae1ad-133">此方法會執行序數比較，因為找不到子字串。</span><span class="sxs-lookup"><span data-stu-id="ae1ad-133">Because the method performs an ordinal comparison, the substring cannot be found.</span></span>  
  
 [!code-csharp[System.AppContext.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.AppContext.Class/cs/Example4.cs#5)]
 [!code-vb[System.AppContext.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.AppContext.Class/vb/Example4.vb#5)]  
  
 <span data-ttu-id="ae1ad-134">第 2 版的程式庫，不過，變更`SubstringStartsAt`来使用區分文化特性的比較方法。</span><span class="sxs-lookup"><span data-stu-id="ae1ad-134">Version 2 of the library, however, changes the `SubstringStartsAt` method to use culture-sensitive comparison.</span></span>  
  
 [!code-csharp[System.AppContext.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.AppContext.Class/cs/Example6.cs#6)]
 [!code-vb[System.AppContext.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.AppContext.Class/vb/Example6.vb#6)]  
  
 <span data-ttu-id="ae1ad-135">若要執行的程式庫的新版本重新編譯應用程式時，現在回報的子字串"archæ 「 位於索引 4 」 考古學 」 中。</span><span class="sxs-lookup"><span data-stu-id="ae1ad-135">When the app is recompiled to run against the new version of the library, it now reports that the substring "archæ" is found at index 4 in "The archaeologist".</span></span>  
  
 [!code-csharp[System.AppContext.Class#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.AppContext.Class/cs/Example6.cs#7)]
 [!code-vb[System.AppContext.Class#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.AppContext.Class/vb/Example6.vb#7)]  
  
 <span data-ttu-id="ae1ad-136">這項變更可以防止中斷依賴原始行為，藉由定義應用程式[ \<Appcontextswitchoverrides> >](~/docs/framework/configure-apps/file-schema/runtime/appcontextswitchoverrides-element.md)切換。</span><span class="sxs-lookup"><span data-stu-id="ae1ad-136">This change can be prevented from breaking the applications that depend on the original behavior by defining an [\<AppContextSwitchOverrides>](~/docs/framework/configure-apps/file-schema/runtime/appcontextswitchoverrides-element.md) switch.</span></span> <span data-ttu-id="ae1ad-137">在此情況下，名為交換器`StringLibrary.DoNotUseCultureSensitiveComparison`。</span><span class="sxs-lookup"><span data-stu-id="ae1ad-137">In this case, the switch is named `StringLibrary.DoNotUseCultureSensitiveComparison`.</span></span> <span data-ttu-id="ae1ad-138">預設值， `false`，指出程式庫應該執行其版本 2.0 區分文化特性的比較。</span><span class="sxs-lookup"><span data-stu-id="ae1ad-138">Its default value, `false`, indicates that the library should perform its version 2.0 culture-sensitive comparison.</span></span> <span data-ttu-id="ae1ad-139">`true` 表示程式庫應該執行其版本 1.0 的序數比較。</span><span class="sxs-lookup"><span data-stu-id="ae1ad-139">`true` indicates that the library should perform its version 1.0 ordinal comparison.</span></span>  <span data-ttu-id="ae1ad-140">先前的程式碼稍微修改可讓程式庫取用者設定參數來判斷的方法所執行的比較類型。</span><span class="sxs-lookup"><span data-stu-id="ae1ad-140">A slight modification of the previous code allows the library consumer to set the switch to determine the kind of comparison the method performs.</span></span>  
  
 [!code-csharp[System.AppContext.Class#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.AppContext.Class/cs/Example8.cs#8)]
 [!code-vb[System.AppContext.Class#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.AppContext.Class/vb/Example8.vb#8)]  
  
 <span data-ttu-id="ae1ad-141">如果應用程式接著可以使用下列組態檔以還原版本 1.0 的行為。</span><span class="sxs-lookup"><span data-stu-id="ae1ad-141">If application can then use the following configuration file to restore the version 1.0 behavior.</span></span>  
  
```xml  
  
<configuration>  
   <runtime>  
      <AppContextSwitchOverrides value="StringLibrary.DoNotUseCultureSensitiveComparison=true" />   
   </runtime>  
</configuration>  
  
```  
  
 <span data-ttu-id="ae1ad-142">當應用程式執行與組態檔存在時，它會產生下列輸出：</span><span class="sxs-lookup"><span data-stu-id="ae1ad-142">When the application is run with the configuration file present, it produces the following output:</span></span>  
  
```  
'archæ' not found in 'The archaeologist'  
```  
  
<a name="ForConsumers"></a>   
## <a name="appcontext-for-library-consumers"></a><span data-ttu-id="ae1ad-143">程式庫的取用者的 AppContext</span><span class="sxs-lookup"><span data-stu-id="ae1ad-143">AppContext for library consumers</span></span>  
 <span data-ttu-id="ae1ad-144">如果您的程式庫中，取用者<xref:System.AppContext>類別可讓您利用程式庫或程式庫方法的新功能的退出機制。</span><span class="sxs-lookup"><span data-stu-id="ae1ad-144">If you are the consumer of a library, the <xref:System.AppContext> class  allows you to take advantage of a library or library method's opt-out mechanism for new functionality.</span></span>   <span data-ttu-id="ae1ad-145">您要呼叫的類別庫的個別方法會定義特定的交換器，啟用或停用新的行為。</span><span class="sxs-lookup"><span data-stu-id="ae1ad-145">Individual methods of the class library that you are calling define particular switches that enable or disable a new behavior.</span></span> <span data-ttu-id="ae1ad-146">參數的值是布林值。</span><span class="sxs-lookup"><span data-stu-id="ae1ad-146">The value of the switch  is a Boolean.</span></span> <span data-ttu-id="ae1ad-147">如果它是`false`，通常是預設值，會啟用新的行為; 如果是`true`、 停用新的行為，和成員的行為就像先前一樣。</span><span class="sxs-lookup"><span data-stu-id="ae1ad-147">If it is `false`, which is typically the default value, the new behavior is enabled; if it is `true`, the new behavior is disabled, and the member behaves as it did previously.</span></span>  
  
 <span data-ttu-id="ae1ad-148">您可以使用三種方式之一來設定參數的值：</span><span class="sxs-lookup"><span data-stu-id="ae1ad-148">You can set the value of a switch in one of three ways:</span></span>  
  
-   <span data-ttu-id="ae1ad-149">藉由呼叫<xref:System.AppContext.SetSwitch%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType>程式碼中的方法。</span><span class="sxs-lookup"><span data-stu-id="ae1ad-149">By calling the <xref:System.AppContext.SetSwitch%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType> method in your code.</span></span>  <span data-ttu-id="ae1ad-150">`switchName`引數定義的參數名稱，而`isEnabled`屬性會定義參數的值。</span><span class="sxs-lookup"><span data-stu-id="ae1ad-150">The `switchName` argument defines the switch name, and the `isEnabled` property defines the value of the switch.</span></span> <span data-ttu-id="ae1ad-151">因為<xref:System.AppContext>是靜態類別，它位於每個應用程式定義域為基準。</span><span class="sxs-lookup"><span data-stu-id="ae1ad-151">Because <xref:System.AppContext> is a static class, it is available on a per-application domain basis.</span></span>  
  
     <span data-ttu-id="ae1ad-152">呼叫<xref:System.AppContext.SetSwitch%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType>有應用程式的範圍; 也就是說，它會影響應用程式。</span><span class="sxs-lookup"><span data-stu-id="ae1ad-152">Calling the <xref:System.AppContext.SetSwitch%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType> has application scope; that is, it affects only the application.</span></span>  
  
-   <span data-ttu-id="ae1ad-153">藉由新增`<AppContextSwitchOverrides>`項目[\<執行階段 >](~/docs/framework/configure-apps/file-schema/runtime/runtime-element.md) app.config 檔案的區段。</span><span class="sxs-lookup"><span data-stu-id="ae1ad-153">By adding an `<AppContextSwitchOverrides>` element to the [\<runtime>](~/docs/framework/configure-apps/file-schema/runtime/runtime-element.md) section of your app.config file.</span></span> <span data-ttu-id="ae1ad-154">參數具有單一屬性`value`，其值是字串，表示包含參數名稱和其值的索引鍵/值組。</span><span class="sxs-lookup"><span data-stu-id="ae1ad-154">The switch has a single attribute, `value`, whose value is a string that represents a key/value pair containing both the switch name and its value.</span></span>  
  
     <span data-ttu-id="ae1ad-155">若要定義多個參數，區隔中的每個參數的索引鍵/值配對[ \<Appcontextswitchoverrides> >](~/docs/framework/configure-apps/file-schema/runtime/appcontextswitchoverrides-element.md)項目的`value`使用分號的屬性。</span><span class="sxs-lookup"><span data-stu-id="ae1ad-155">To define multiple switches, separate each switch's key/value pair in the [\<AppContextSwitchOverrides>](~/docs/framework/configure-apps/file-schema/runtime/appcontextswitchoverrides-element.md) element's `value` attribute with a semicolon.</span></span> <span data-ttu-id="ae1ad-156">在此情況下，`<AppContextSwitchOverrides>`項目具有下列格式：</span><span class="sxs-lookup"><span data-stu-id="ae1ad-156">In that case, the `<AppContextSwitchOverrides>` element has the following format:</span></span>  
  
    ```xml  
    <AppContextSwitchOverrides value="switchName1=value1;switchName2=value2" />  
    ```  
  
     <span data-ttu-id="ae1ad-157">使用`<AppContextSwitchOverrides>`來定義組態設定的項目具有應用程式範圍，也就是會影響應用程式。</span><span class="sxs-lookup"><span data-stu-id="ae1ad-157">Using the `<AppContextSwitchOverrides>` element to define a configuration setting has application scope; that is, it affects only the application.</span></span>  

    > [!NOTE]    
    > <span data-ttu-id="ae1ad-158">如需.NET Framework 所定義的參數資訊，請參閱 < [ \<Appcontextswitchoverrides> > 項目](~/docs/framework/configure-apps/file-schema/runtime/appcontextswitchoverrides-element.md)。</span><span class="sxs-lookup"><span data-stu-id="ae1ad-158">For information on the switches defined by the .NET Framework, see the [\<AppContextSwitchOverrides> element](~/docs/framework/configure-apps/file-schema/runtime/appcontextswitchoverrides-element.md).</span></span>

-   <span data-ttu-id="ae1ad-159">藉由新增其名稱是參數名稱的字串值以`HKLM\SOFTWARE\Microsoft\.NETFramework\AppContext`金鑰在登錄中。</span><span class="sxs-lookup"><span data-stu-id="ae1ad-159">By adding a string value whose name is the name of the switch to the `HKLM\SOFTWARE\Microsoft\.NETFramework\AppContext` key in the registry.</span></span> <span data-ttu-id="ae1ad-160">其值必須是字串表示法<xref:System.Boolean>，就能剖析<xref:System.Boolean.Parse%2A?displayProperty=nameWithType>方法，也就是它必須是"True"，"true"，"False"或"false"。</span><span class="sxs-lookup"><span data-stu-id="ae1ad-160">Its value must be the string representation of a <xref:System.Boolean> that can be parsed by the <xref:System.Boolean.Parse%2A?displayProperty=nameWithType> method; that is, it must be "True", "true", "False", or "false".</span></span> <span data-ttu-id="ae1ad-161">如果執行階段遇到任何其他值，它會忽略此參數。</span><span class="sxs-lookup"><span data-stu-id="ae1ad-161">If the runtime encounters any other value, it ignores the switch.</span></span>  
  
     <span data-ttu-id="ae1ad-162">使用登錄來定義<xref:System.AppContext>交換器有電腦範圍，也就是會影響電腦上執行的每個應用程式。</span><span class="sxs-lookup"><span data-stu-id="ae1ad-162">Using the registry to define an <xref:System.AppContext> switch has machine scope; that is, it affects every application running on the machine.</span></span>  
  
 <span data-ttu-id="ae1ad-163">如果您在多個方法中設定相同的交換器，來判斷哪些設定會覆寫其他優先順序就會是：</span><span class="sxs-lookup"><span data-stu-id="ae1ad-163">If you set the same switch in more than one way, the order of precedence for determining which setting overrides the others is:</span></span>  
  
1.  <span data-ttu-id="ae1ad-164">以程式設計方式的設定。</span><span class="sxs-lookup"><span data-stu-id="ae1ad-164">The programmatic setting.</span></span>  
  
2.  <span data-ttu-id="ae1ad-165">應用程式組態檔中的設定。</span><span class="sxs-lookup"><span data-stu-id="ae1ad-165">The setting in the app config file.</span></span>  
  
3.  <span data-ttu-id="ae1ad-166">登錄設定。</span><span class="sxs-lookup"><span data-stu-id="ae1ad-166">The registry setting.</span></span>  
  
 <span data-ttu-id="ae1ad-167">以下是簡單的應用程式傳遞為檔案 URI 以<xref:System.IO.Path.GetDirectoryName%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="ae1ad-167">The following is a simple application that passes a file URI to the <xref:System.IO.Path.GetDirectoryName%2A?displayProperty=nameWithType> method.</span></span>  <span data-ttu-id="ae1ad-168">當以.NET Framework 4.6 執行時，就會擲回<xref:System.ArgumentException>因為`file://`不再有效的組件的檔案路徑。</span><span class="sxs-lookup"><span data-stu-id="ae1ad-168">When run under the .NET Framework 4.6, it throws an <xref:System.ArgumentException> because `file://` is no longer a valid part of a file path.</span></span>  
  
 [!code-csharp[System.AppContext.Class#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.AppContext.Class/cs/ForConsumers1.cs#10)]
 [!code-vb[System.AppContext.Class#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.AppContext.Class/vb/ForConsumers1.vb#10)]  
  
 <span data-ttu-id="ae1ad-169">若要還原方法的先前的行為，並避免這個例外狀況，您可以新增`Switch.System.IO.UseLegacyPathHandling`切換至 應用程式組態檔，例如：</span><span class="sxs-lookup"><span data-stu-id="ae1ad-169">To restore the method's previous behavior and prevent the exception, you can add the `Switch.System.IO.UseLegacyPathHandling` switch to the application configuration file for the example:</span></span>  
  
```xml  
<configuration>  
    <runtime>  
        <AppContextSwitchOverrides value="Switch.System.IO.UseLegacyPathHandling=true" />    
    </runtime>  
</configuration>  
```  
## <a name="see-also"></a><span data-ttu-id="ae1ad-170">另請參閱</span><span class="sxs-lookup"><span data-stu-id="ae1ad-170">See also</span></span>
[<span data-ttu-id="ae1ad-171">AppContext 參數</span><span class="sxs-lookup"><span data-stu-id="ae1ad-171">AppContext switch</span></span>](~/docs/framework/configure-apps/file-schema/runtime/appcontextswitchoverrides-element.md)

 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BaseDirectory">
      <MemberSignature Language="C#" Value="public static string BaseDirectory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string BaseDirectory" />
      <MemberSignature Language="DocId" Value="P:System.AppContext.BaseDirectory" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property BaseDirectory As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ BaseDirectory { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseDirectory : string" Usage="System.AppContext.BaseDirectory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AppContext</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ae1ad-172">取得組件解析程式用來探查組件之基底目錄的路徑名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae1ad-172">Gets the pathname of the base directory that the assembly resolver uses to probe for assemblies.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ae1ad-173">組件解析程式用來探查組件之基底目錄的路徑名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae1ad-173">the pathname of the base directory that the assembly resolver uses to probe for assemblies.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ae1ad-174">這是每個應用程式網域屬性。</span><span class="sxs-lookup"><span data-stu-id="ae1ad-174">This is a per application domain property.</span></span> <span data-ttu-id="ae1ad-175">其值會對應到<xref:System.AppDomain.BaseDirectory%2A?displayProperty=nameWithType>目前的應用程式定義域的屬性。</span><span class="sxs-lookup"><span data-stu-id="ae1ad-175">Its value corresponds to the <xref:System.AppDomain.BaseDirectory%2A?displayProperty=nameWithType> property of the current application domain.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public static object GetData (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetData(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppContext.GetData(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetData (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetData(System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetData : string -&gt; obj" Usage="System.AppContext.GetData name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AppContext</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netstandard-2.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="ae1ad-176">資料元素的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae1ad-176">The name of the data element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ae1ad-177">傳回指派給目前應用程式定義域的具名資料元素值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae1ad-177">Returns the value of the named data element assigned to the current application domain.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ae1ad-178">如果 <paramref name="name" /> 識別出具名的值，則為 <paramref name="name" /> 的值，否則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae1ad-178">The value of <paramref name="name" />, if <paramref name="name" /> identifies a named value; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSwitch">
      <MemberSignature Language="C#" Value="public static void SetSwitch (string switchName, bool isEnabled);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetSwitch(string switchName, bool isEnabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppContext.SetSwitch(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetSwitch (switchName As String, isEnabled As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetSwitch(System::String ^ switchName, bool isEnabled);" />
      <MemberSignature Language="F#" Value="static member SetSwitch : string * bool -&gt; unit" Usage="System.AppContext.SetSwitch (switchName, isEnabled)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AppContext</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="switchName" Type="System.String" />
        <Parameter Name="isEnabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="switchName">
          <span data-ttu-id="ae1ad-179">參數的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae1ad-179">The name of the switch.</span>
          </span>
        </param>
        <param name="isEnabled">
          <span data-ttu-id="ae1ad-180">參數的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae1ad-180">The value of the switch.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ae1ad-181">設定參數的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae1ad-181">Sets the value of a switch.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ae1ad-182"><xref:System.AppContext>類別可讓您的程式庫作者為使用者提供的新功能的統一退出機制。</span><span class="sxs-lookup"><span data-stu-id="ae1ad-182">The <xref:System.AppContext> class enables library writers to provide a uniform opt-out mechanism for new functionality for their users.</span></span> <span data-ttu-id="ae1ad-183">它會建立元件之間的鬆散結合合約，以便溝通退出要求。</span><span class="sxs-lookup"><span data-stu-id="ae1ad-183">It establishes a loosely-coupled contract between components in order to communicate an opt-out request.</span></span> <span data-ttu-id="ae1ad-184">變更現有的功能時，此功能通常特別重要。</span><span class="sxs-lookup"><span data-stu-id="ae1ad-184">This capability is typically important when a change is made to existing functionality.</span></span> <span data-ttu-id="ae1ad-185">相反地，已經有新功能的隱含選擇加入。</span><span class="sxs-lookup"><span data-stu-id="ae1ad-185">Conversely, there is already an implicit opt-in for new functionality.</span></span>  
  
 <span data-ttu-id="ae1ad-186"><xref:System.AppContext.SetSwitch%2A>方法會呼叫應用程式 （或程式庫） 來宣告參數的值 (一律為<xref:System.Boolean>值)，相依程式庫所定義。</span><span class="sxs-lookup"><span data-stu-id="ae1ad-186">The <xref:System.AppContext.SetSwitch%2A> method is called by an application (or a library) to declare the value of a switch (which is always a <xref:System.Boolean> value) that a dependent library defines.</span></span> <span data-ttu-id="ae1ad-187">參數是一律以隱含方式`false`，以提供新的行為。</span><span class="sxs-lookup"><span data-stu-id="ae1ad-187">The switch is always implicitly `false`, which provides the new behavior.</span></span> <span data-ttu-id="ae1ad-188">將參數設定為`true`啟用它，它提供舊版的行為。</span><span class="sxs-lookup"><span data-stu-id="ae1ad-188">Setting the switch to `true` enables it, which provides the legacy behavior.</span></span> <span data-ttu-id="ae1ad-189">明確地將參數設定為`false`也提供新的行為。</span><span class="sxs-lookup"><span data-stu-id="ae1ad-189">Explicitly setting the switch to `false` also provides the new behavior.</span></span> <span data-ttu-id="ae1ad-190">相依程式庫可以再檢查參數值呼叫<xref:System.AppContext.TryGetSwitch%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="ae1ad-190">The dependent library can then check the value of the switch by calling the <xref:System.AppContext.TryGetSwitch%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ae1ad-191">很有幫助的交換器名稱，使用一致的格式，因為它們是程式庫所公開的正式合約。</span><span class="sxs-lookup"><span data-stu-id="ae1ad-191">It's beneficial to use a consistent format for switch names, since they are a formal contract exposed by a library.</span></span> <span data-ttu-id="ae1ad-192">以下是兩種明顯的格式。</span><span class="sxs-lookup"><span data-stu-id="ae1ad-192">The following are two obvious formats.</span></span>  
>   
>  -   <span data-ttu-id="ae1ad-193">*參數*.*命名空間*.*參數名稱*</span><span class="sxs-lookup"><span data-stu-id="ae1ad-193">*Switch*.*namespace*.*switchname*</span></span>  
> -   <span data-ttu-id="ae1ad-194">*參數*.*程式庫*.*參數名稱*</span><span class="sxs-lookup"><span data-stu-id="ae1ad-194">*Switch*.*library*.*switchname*</span></span>  
  
 <span data-ttu-id="ae1ad-195">在.NET Framework 中，除了以程式設計方式設定參數的值上執行的應用程式它也可以設定：</span><span class="sxs-lookup"><span data-stu-id="ae1ad-195">For applications running on the .NET Framework, in addition to setting the value of a switch programmatically, it can also be set:</span></span>  
  
-   <span data-ttu-id="ae1ad-196">藉由新增的參數名稱和值[ \<Appcontextswitchoverrides> >](~/docs/framework/configure-apps/file-schema/runtime/appcontextswitchoverrides-element.md)中的項目[\<執行階段 >](~/docs/framework/configure-apps/file-schema/runtime/runtime-element.md)應用程式組態檔區段。</span><span class="sxs-lookup"><span data-stu-id="ae1ad-196">By adding the switch name and value to the [\<AppContextSwitchOverrides>](~/docs/framework/configure-apps/file-schema/runtime/appcontextswitchoverrides-element.md) element in the [\<runtime>](~/docs/framework/configure-apps/file-schema/runtime/runtime-element.md) section of an application configuration file.</span></span> <span data-ttu-id="ae1ad-197">例如，下列範例會定義名為的交換器`Libraries.FPLibrary.UseExactFloatingPointComparison`增值是`False`。</span><span class="sxs-lookup"><span data-stu-id="ae1ad-197">For example, the following defines a switch named `Libraries.FPLibrary.UseExactFloatingPointComparison` whose value is `False`.</span></span>  
  
    ```xml  
  
    <configuration>  
       <runtime>  
          <AppContextSwitchOverrides value="Libraries.FPLibrary.UseExactFloatingPointComparison=false" />   
       </runtime>  
    </configuration>  
  
    ```  
  
-   <span data-ttu-id="ae1ad-198">藉由新增其名稱是參數名稱的字串值以`HKLM\SOFTWARE\Microsoft\.NETFramework\AppContext`金鑰在登錄中。</span><span class="sxs-lookup"><span data-stu-id="ae1ad-198">By adding a string value whose name is the name of the switch to the `HKLM\SOFTWARE\Microsoft\.NETFramework\AppContext` key in the registry.</span></span> <span data-ttu-id="ae1ad-199">其值必須是字串表示法<xref:System.Boolean>，就能剖析<xref:System.Boolean.Parse%2A?displayProperty=nameWithType>方法，也就是它必須是"True"，"true"，"False"或"false"。</span><span class="sxs-lookup"><span data-stu-id="ae1ad-199">Its value must be the string representation of a <xref:System.Boolean> that can be parsed by the <xref:System.Boolean.Parse%2A?displayProperty=nameWithType> method; that is, it must be "True", "true", "False", or "false".</span></span>  
  
 <span data-ttu-id="ae1ad-200">如果`switchName`已經存在，其值會覆寫`isEnabled`引數。</span><span class="sxs-lookup"><span data-stu-id="ae1ad-200">If `switchName` already exists, its value is overwritten by the `isEnabled` argument.</span></span>  <span data-ttu-id="ae1ad-201">也就是最新的呼叫來<xref:System.AppContext.SetSwitch%2A>方法會覆寫登錄，在應用程式組態檔，或由先前呼叫中所定義的值<xref:System.AppContext.SetSwitch%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="ae1ad-201">That is, the most recent call to the <xref:System.AppContext.SetSwitch%2A> method overrides the value defined in the registry, in an app configuration file, or by previous calls to the <xref:System.AppContext.SetSwitch%2A> method.</span></span>  
 
 ### <a name="appcontextsetswitch-and-net-core"></a><span data-ttu-id="ae1ad-202">AppContext.SetSwitch 和.NET Core</span><span class="sxs-lookup"><span data-stu-id="ae1ad-202">AppContext.SetSwitch and .NET Core</span></span>

<span data-ttu-id="ae1ad-203">.NET core 支援使用以程式設計方式呼叫<xref:System.AppContext.SetSwitch%2A>僅方法。</span><span class="sxs-lookup"><span data-stu-id="ae1ad-203">.NET Core supports programmatic calls with the <xref:System.AppContext.SetSwitch%2A> method only.</span></span> <span data-ttu-id="ae1ad-204">支援下列參數：</span><span class="sxs-lookup"><span data-stu-id="ae1ad-204">The following switches are supported:</span></span>

|<span data-ttu-id="ae1ad-205">參數</span><span class="sxs-lookup"><span data-stu-id="ae1ad-205">Switch</span></span>|<span data-ttu-id="ae1ad-206">值</span><span class="sxs-lookup"><span data-stu-id="ae1ad-206">Values</span></span>|<span data-ttu-id="ae1ad-207">描述</span><span class="sxs-lookup"><span data-stu-id="ae1ad-207">Description</span></span>|
|--|--|--|
|`System.Net.Http.useSocketsHttpHandler` |`true`|`false`|<span data-ttu-id="ae1ad-208">判斷是否有高層級網路 Api，例如<xref:System.Net.Http.HttpClient>使用<xref:System.Net.Http.SocketsHttpHandler?displayProperty=nameWithType>(`true`) 或<xref:System.Net.Http.HttpClientHandler?displayProperty=nameWithType>(`false`)。</span><span class="sxs-lookup"><span data-stu-id="ae1ad-208">Determines whether high-level networking APIs such as <xref:System.Net.Http.HttpClient> use <xref:System.Net.Http.SocketsHttpHandler?displayProperty=nameWithType> (`true`) or <xref:System.Net.Http.HttpClientHandler?displayProperty=nameWithType> (`false`).</span></span>|   
  
## Examples  
 <span data-ttu-id="ae1ad-209">下列程式碼會設定名為的交換器`Switch.AmazingLib.ThrowOnException`至`true`，可使用舊版的行為。</span><span class="sxs-lookup"><span data-stu-id="ae1ad-209">The following line of code sets a switch named `Switch.AmazingLib.ThrowOnException` to `true`, which enables a legacy behavior.</span></span> <span data-ttu-id="ae1ad-210">程式庫接著可以選取程式庫取用者是否已設定參數值呼叫<xref:System.AppContext.TryGetSwitch%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="ae1ad-210">The library can then check whether a library consumer has set the value of the switch by calling the <xref:System.AppContext.TryGetSwitch%2A> method.</span></span>  
  
 [!code-csharp[System.AppContext.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.AppContext.Class/cs/TestValue1.cs#1)]
 [!code-vb[System.AppContext.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.AppContext.Class/vb/TestValue1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ae1ad-211">
            <paramref name="switchName" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae1ad-211">
              <paramref name="switchName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ae1ad-212">
            <paramref name="switchName" /> 為 <see cref="F:System.String.Empty" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae1ad-212">
              <paramref name="switchName" /> is <see cref="F:System.String.Empty" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.AppContext.TryGetSwitch(System.String,System.Boolean@)" />
      </Docs>
    </Member>
    <Member MemberName="TargetFrameworkName">
      <MemberSignature Language="C#" Value="public static string TargetFrameworkName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string TargetFrameworkName" />
      <MemberSignature Language="DocId" Value="P:System.AppContext.TargetFrameworkName" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TargetFrameworkName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ TargetFrameworkName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetFrameworkName : string" Usage="System.AppContext.TargetFrameworkName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AppContext</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netstandard-2.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ae1ad-213">取得目前應用程式設為目標的 Framework 版本名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae1ad-213">Gets the name of the framework version targeted by the current application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ae1ad-214">目前應用程式設為目標的 Framework 版本名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae1ad-214">The name of the framework version targeted by the current application.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ae1ad-215">目標 framework 版本的名稱會對應至值<xref:System.Runtime.Versioning.TargetFrameworkAttribute.FrameworkName%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="ae1ad-215">The name of the target framework version corresponds to the value of the <xref:System.Runtime.Versioning.TargetFrameworkAttribute.FrameworkName%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="ae1ad-216">如需.NET Framework 的目標架構名稱的清單，請參閱 < [ &lt;Supportedruntime>&gt;項目](~/docs/framework/configure-apps/file-schema/startup/supportedruntime-element.md)項目。</span><span class="sxs-lookup"><span data-stu-id="ae1ad-216">For a list of target framework names for the .NET Framework, see the [&lt;supportedRuntime&gt; Element](~/docs/framework/configure-apps/file-schema/startup/supportedruntime-element.md) element.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.Versioning.TargetFrameworkAttribute" />
        <altmember cref="P:System.Runtime.Versioning.TargetFrameworkAttribute.FrameworkName" />
      </Docs>
    </Member>
    <Member MemberName="TryGetSwitch">
      <MemberSignature Language="C#" Value="public static bool TryGetSwitch (string switchName, out bool isEnabled);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryGetSwitch(string switchName, [out] bool&amp; isEnabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppContext.TryGetSwitch(System.String,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryGetSwitch (switchName As String, ByRef isEnabled As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryGetSwitch(System::String ^ switchName, [Runtime::InteropServices::Out] bool % isEnabled);" />
      <MemberSignature Language="F#" Value="static member TryGetSwitch : string *  -&gt; bool" Usage="System.AppContext.TryGetSwitch (switchName, isEnabled)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AppContext</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="switchName" Type="System.String" />
        <Parameter Name="isEnabled" Type="System.Boolean" RefType="out" />
      </Parameters>
      <Docs>
        <param name="switchName">
          <span data-ttu-id="ae1ad-217">參數的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae1ad-217">The name of the switch.</span>
          </span>
        </param>
        <param name="isEnabled">
          <span data-ttu-id="ae1ad-218">當這個方法傳回時，如果找到 <c>switchName</c>，則會包含 <c>switchName</c> 的值；如果找不到 <c>switchName</c>，則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae1ad-218">When this method returns, contains the value of <c>switchName</c> if <c>switchName</c> was found, or <see langword="false" /> if <c>switchName</c> was not found.</span>
          </span>
          <span data-ttu-id="ae1ad-219">這個參數會以未初始化的狀態傳遞。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae1ad-219">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ae1ad-220">嘗試取得參數的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae1ad-220">Tries to get the value of a switch.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ae1ad-221">如果已設定 <paramref name="switchName" /> 且 <paramref name="isEnabled" /> 引數包含參數的值，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae1ad-221">
              <see langword="true" /> if <paramref name="switchName" /> was set and the <paramref name="isEnabled" /> argument contains the value of the switch; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ae1ad-222"><xref:System.AppContext>類別可讓您的程式庫作者為使用者提供的新功能的統一退出機制。</span><span class="sxs-lookup"><span data-stu-id="ae1ad-222">The <xref:System.AppContext> class enables library writers to provide a uniform opt-out mechanism for new functionality for their users.</span></span> <span data-ttu-id="ae1ad-223">它會建立元件之間的鬆散結合合約，以便溝通退出要求。</span><span class="sxs-lookup"><span data-stu-id="ae1ad-223">It establishes a loosely-coupled contract between components in order to communicate an opt-out request.</span></span> <span data-ttu-id="ae1ad-224">變更現有的功能時，此功能通常特別重要。</span><span class="sxs-lookup"><span data-stu-id="ae1ad-224">This capability is typically important when a change is made to existing functionality.</span></span> <span data-ttu-id="ae1ad-225">相反地，已經有新功能的隱含選擇加入。</span><span class="sxs-lookup"><span data-stu-id="ae1ad-225">Conversely, there is already an implicit opt-in for new functionality.</span></span>  
  
 <span data-ttu-id="ae1ad-226">Common language runtime 會自動填入參數指派給<xref:System.AppContext>藉由讀取登錄和應用程式的組態檔的執行個體。</span><span class="sxs-lookup"><span data-stu-id="ae1ad-226">The common language runtime automatically populates the switches assigned to an <xref:System.AppContext> instance by reading the registry and the application's configuration file.</span></span> <span data-ttu-id="ae1ad-227">然後可以覆寫這些參數的值，並加入新的參數，藉由呼叫<xref:System.AppContext.SetSwitch%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="ae1ad-227">The value of these switches can then be overridden, and new switches added, by calling the <xref:System.AppContext.SetSwitch%2A> method.</span></span>  
  
 <span data-ttu-id="ae1ad-228">程式庫呼叫<xref:System.AppContext.TryGetSwitch%2A>方法來檢查其取用者是否已宣告參數的值，然後適當地處理它。</span><span class="sxs-lookup"><span data-stu-id="ae1ad-228">A library calls the <xref:System.AppContext.TryGetSwitch%2A> method to check whether its consumers have declared the value of the switch and then act appropriately on it.</span></span>  <span data-ttu-id="ae1ad-229">預設情況下，如果未定義此參數，就會啟用新功能...</span><span class="sxs-lookup"><span data-stu-id="ae1ad-229">By default, if the switch is not defined, the new functionality is enabled..</span></span> <span data-ttu-id="ae1ad-230">如果在定義參數，且其值為`false`，也會啟用新功能。</span><span class="sxs-lookup"><span data-stu-id="ae1ad-230">If the switch is defined and its value is `false`, the new functionality is also enabled.</span></span> <span data-ttu-id="ae1ad-231">如果其值為`true`，會啟用舊版行為。</span><span class="sxs-lookup"><span data-stu-id="ae1ad-231">If its value is `true`, the legacy behavior is enabled.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ae1ad-232">下列範例會判斷程式庫取用者是否已設定名為的交換器`Switch.AmazingLib.ThrowOnException`。</span><span class="sxs-lookup"><span data-stu-id="ae1ad-232">The following example determines whether a library consumer has set a switch named `Switch.AmazingLib.ThrowOnException`.</span></span>  
  
 [!code-csharp[System.AppContext.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.AppContext.Class/cs/TestValue1.cs#2)]
 [!code-vb[System.AppContext.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.AppContext.Class/vb/TestValue1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ae1ad-233">
            <paramref name="switchName" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae1ad-233">
              <paramref name="switchName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ae1ad-234">
            <paramref name="switchName" /> 為 <see cref="F:System.String.Empty" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae1ad-234">
              <paramref name="switchName" /> is <see cref="F:System.String.Empty" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.AppContext.SetSwitch(System.String,System.Boolean)" />
      </Docs>
    </Member>
  </Members>
</Type>