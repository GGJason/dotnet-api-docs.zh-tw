<Type Name="IFormattable" FullName="System.IFormattable">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fc806c33d54c770db49c6f4962c847e2e41cb635" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36431179" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IFormattable" />
  <TypeSignature Language="DocId" Value="T:System.IFormattable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IFormattable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IFormattable" />
  <TypeSignature Language="F#" Value="type IFormattable = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Provides functionality to format the value of an object into a string representation.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IFormattable>介面將物件轉換為其根據格式字串和格式提供者的字串表示。  
  
 格式字串通常會定義物件的一般的外觀。 例如，.NET Framework 支援以下功能：  
  
-   格式設定列舉值的標準格式字串 (請參閱[列舉格式字串](~/docs/standard/base-types/enumeration-format-strings.md))。  
  
-   標準和自訂格式字串來格式化數字值 (請參閱[標準數值格式字串](~/docs/standard/base-types/standard-numeric-format-strings.md)和[自訂數值格式字串](~/docs/standard/base-types/custom-numeric-format-strings.md))。  
  
-   用來格式化日期和時間值的標準和自訂格式字串 (請參閱[標準日期和時間格式字串](~/docs/standard/base-types/standard-date-and-time-format-strings.md)和[自訂日期和時間格式字串](~/docs/standard/base-types/custom-date-and-time-format-strings.md))。  
  
-   標準和自訂格式字串來格式化時間間隔 (請參閱[標準 TimeSpan 格式字串](~/docs/standard/base-types/standard-timespan-format-strings.md)和[自訂 TimeSpan 格式字串](~/docs/standard/base-types/custom-timespan-format-strings.md))。  
  
 您也可以定義自己的格式字串，以支援您的應用程式定義類型的格式。  
  
 格式提供者傳回格式化的物件，通常會使用符號定義中將物件轉換為其字串表示。 比方說，當您將數字轉換成貨幣值時，格式提供者會定義顯示的貨幣符號結果字串中。 .NET Framework 會定義三個格式提供者：  
  
-   <xref:System.Globalization.CultureInfo?displayProperty=nameWithType>類別，會傳回<xref:System.Globalization.NumberFormatInfo>物件格式化數值，或<xref:System.Globalization.DateTimeFormatInfo>格式化日期和時間值的物件。  
  
-   <xref:System.Globalization.NumberFormatInfo?displayProperty=nameWithType>類別，它會傳回本身的執行個體，用來格式化數字值。  
  
-   <xref:System.Globalization.DateTimeFormatInfo?displayProperty=nameWithType>類別，它會傳回本身的執行個體，用來格式化日期和時間值。  
  
 此外，您可以定義自己的自訂格式提供者，提供特定文化特性，行業特有的或格式會使用業界的特定資訊。 如需有關如何實作使用自訂的格式提供者的自訂格式的詳細資訊，請參閱<xref:System.ICustomFormatter>。  
  
 <xref:System.IFormattable>介面會定義單一方法<xref:System.IFormattable.ToString%2A>，提供格式化服務的實作類型。 <xref:System.IFormattable.ToString%2A>直接呼叫方法。 此外，它就會呼叫自動<xref:System.Convert.ToString%28System.Object%29?displayProperty=nameWithType>和<xref:System.Convert.ToString%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType>方法，以及使用方法[複合格式功能](~/docs/standard/base-types/composite-formatting.md).NET Framework 中。 這類方法包括<xref:System.Console.WriteLine%28System.String%2CSystem.Object%29?displayProperty=nameWithType>， <xref:System.String.Format%2A?displayProperty=nameWithType>，和<xref:System.Text.StringBuilder.AppendFormat%28System.String%2CSystem.Object%29?displayProperty=nameWithType>，和其他項目。 <xref:System.IFormattable.ToString%2A>方法呼叫方法的格式字串中的每個格式項目。  
  
 <xref:System.IFormattable>介面的實作方法的基底資料型別。  
  
   
  
## Examples  
 下列範例定義一個實作 `Temperature` 介面的 <xref:System.IFormattable> 類別。 此類別支援四個格式規範:"G"和"C"，表示溫度為攝氏; 顯示"F"，這表示溫度為顯示華氏;和"K"，這表示要顯示這個類別是溫度。 此外，<xref:System.IFormattable.ToString%2A?displayProperty=nameWithType>實作也可以處理的格式字串`null`或空白。 其他兩個`ToString`所定義的方法`Temperature`類別只是呼叫包裝至<xref:System.IFormattable.ToString%2A?displayProperty=nameWithType>實作。  
  
 [!code-csharp[System.IFormattable#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iformattable/cs/example1.cs#1)]
 [!code-vb[System.IFormattable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iformattable/vb/example1.vb#1)]  
  
 下列範例會接著呼叫<xref:System.IFormattable.ToString%2A?displayProperty=nameWithType>實作直接或使用複合格式字串。  
  
 [!code-csharp[System.IFormattable#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iformattable/cs/example1.cs#2)]
 [!code-vb[System.IFormattable#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iformattable/vb/example1.vb#2)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>需要更多控制格式設定的字串比類別<see cref="M:System.Object.ToString" />提供應該實作<see cref="T:System.IFormattable" />。類別可實作<see cref="T:System.IFormattable" />必須支援"G"（一般） 格式規範。"G"規範，除了類別可以定義它所支援的格式規範的清單。此外，類別必須準備好處理格式規範所<see langword="null" />。如需格式化和格式化程式碼的詳細資訊，請參閱 [格式化 Types](~/docs/standard/base-types/formatting-types.md)</para>
    </block>
    <altmember cref="T:System.IFormatProvider" />
    <altmember cref="M:System.Object.ToString" />
    <altmember cref="P:System.Threading.Thread.CurrentCulture" />
  </Docs>
  <Members>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format, IFormatProvider formatProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(string format, class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String, formatProvider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(System::String ^ format, IFormatProvider ^ formatProvider);" />
      <MemberSignature Language="F#" Value="abstract member ToString : string * IFormatProvider -&gt; string" Usage="iFormattable.ToString (format, formatProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format">The format to use.  -or-  A null reference (<see langword="Nothing" /> in Visual Basic) to use the default format defined for the type of the <see cref="T:System.IFormattable" /> implementation.</param>
        <param name="formatProvider">The provider to use to format the value.  -or-  A null reference (<see langword="Nothing" /> in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.</param>
        <summary>Formats the value of the current instance using the specified format.</summary>
        <returns>The value of the current instance in the specified format.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IFormattable.ToString%2A>方法會將值轉換成可以多種方式表示的字串表示法。 其精確的格式取決於特定的符號或指定的順序，由特定文化特性、 專業人員或產業所定義。 您可以直接呼叫方法。 它也稱為自動<xref:System.Convert.ToString%28System.Object%29?displayProperty=nameWithType>和<xref:System.Convert.ToString%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType>方法的方法，使用複合格式化的功能在.NET Framework 中，例如<xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>， <xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>，和<xref:System.Text.StringBuilder.AppendFormat%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>。 (如需詳細資訊，請參閱[複合格式化](~/docs/standard/base-types/composite-formatting.md)。)  
  
 複合格式方法呼叫<xref:System.IFormattable.ToString%2A>方法針對在格式字串中的每個格式項目執行一次。 傳遞給方法的參數，如下所示依據特定的格式化方法之呼叫以及內容的格式項目：  
  
-   如果格式項目不會包含格式字串 (例如，如果格式項目是單純`{0}`)，它會傳遞`null`做為值<xref:System.String?displayProperty=nameWithType>參數。  
  
-   如果格式項目包含格式字串 (例如， `{0:G}`)，格式字串會傳遞做為值<xref:System.String?displayProperty=nameWithType>參數。  
  
-   如果不包含原始方法呼叫<xref:System.IFormatProvider?displayProperty=nameWithType>參數，<xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>傳遞的值為<xref:System.IFormatProvider?displayProperty=nameWithType>參數。  
  
-   如果原始方法呼叫包含<xref:System.IFormatProvider?displayProperty=nameWithType>參數，方法呼叫中提供的提供者會傳遞做為值<xref:System.IFormatProvider?displayProperty=nameWithType>參數。  
  
> [!NOTE]
>  物件的<xref:System.IFormattable.ToString%2A>才並不會實作會呼叫複合格式方法<xref:System.ICustomFormatter>格式提供者，或如果<xref:System.ICustomFormatter.Format%2A>方法的自訂格式提供者會傳回`null`。  
  
 .NET Framework 包含三個格式提供者，其中實作<xref:System.IFormatProvider>介面：  
  
-   <xref:System.Globalization.NumberFormatInfo> 提供數值格式資訊，例如用於十進位和群組分隔符號字元拼字和貨幣值中的貨幣符號的位置。  
  
-   <xref:System.Globalization.DateTimeFormatInfo> 提供相關的日期和時間相關格式資訊，例如月、 日和年的日期模式中的位置。  
  
-   <xref:System.Globalization.CultureInfo> 包含預設的格式化特定文化特性，包括數值格式資訊中的資訊和相關的日期和時間相關的格式資訊。  
  
 此外，您可以定義自己的自訂格式提供者。  
  
   
  
## Examples  
 下列範例會示範`Temperature`類別可實作<xref:System.IFormattable.ToString%2A>方法。 這個程式碼範例是針對所提供之較大範例的一部分<xref:System.IFormattable>類別。  
  
 [!code-csharp[System.IFormattable#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iformattable/cs/example1.cs#1)]
 [!code-vb[System.IFormattable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iformattable/vb/example1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" />方法必須支援"G"（一般） 格式規範。"G"規範，除了類別可以定義它所支援的格式規範的清單。此外，類別必須準備好處理格式規範所<see langword="null" />。如需格式化和格式化程式碼的詳細資訊，請參閱 [格式化 Types](~/docs/standard/base-types/formatting-types.md)。</para>
        </block>
        <altmember cref="T:System.String" />
        <altmember cref="T:System.IFormatProvider" />
        <altmember cref="T:System.Globalization.NumberFormatInfo" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
  </Members>
</Type>