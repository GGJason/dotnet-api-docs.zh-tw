<Type Name="Converter&lt;TInput,TOutput&gt;" FullName="System.Converter&lt;TInput,TOutput&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3d572a9ac7cdd88d83e2e60e3ab38a089b5d7b1a" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="37728364" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate TOutput Converter&lt;in TInput,out TOutput&gt;(TInput input);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Converter`2&lt;- TInput, + TOutput&gt; extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Converter`2" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function Converter(Of In TInput, Out TOutput)(input As TInput) As TOutput " />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TInput, typename TOutput&gt;&#xA;public delegate TOutput Converter(TInput input);" />
  <TypeSignature Language="F#" Value="type Converter&lt;'Input, 'Output&gt; = delegate of 'Input -&gt; 'Output" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TInput">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TOutput">
      <Constraints>
        <ParameterAttribute>Covariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="input" Type="TInput" />
  </Parameters>
  <ReturnValue>
    <ReturnType>TOutput</ReturnType>
  </ReturnValue>
  <Docs>
    <typeparam name="TInput">要轉換的成員型別。</typeparam>
    <typeparam name="TOutput">輸入物件要轉換成的型別。</typeparam>
    <param name="input">要轉換的物件。</param>
    <summary>表示將物件從某個型別轉換成另一個型別的方法。</summary>
    <returns>
      <typeparamref name="TOutput" />，表示轉換的 <typeparamref name="TInput" />。</returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個委派由<xref:System.Array.ConvertAll%2A>方法<xref:System.Array>類別和<xref:System.Collections.Generic.List`1.ConvertAll*>方法<xref:System.Collections.Generic.List%601>將集合的每個項目轉換成另一種類型的類別。  
  
   
  
## Examples  
 本節包含兩個程式碼範例。 第一個範例示範<xref:System.Converter%602>具有委派<xref:System.Array.ConvertAll%2A>方法<xref:System.Array>類別，而第二個示範與委派<xref:System.Collections.Generic.List`1.ConvertAll*>方法<xref:System.Collections.Generic.List%601>泛型類別。  
  
 範例 1  
  
 下列程式碼範例定義名為的方法`PointFToPoint`以將轉換成<xref:System.Drawing.PointF>結構<xref:System.Drawing.Point>結構。 這個範例會建立的陣列<xref:System.Drawing.PointF>結構，則會建立`Converter<PointF, Point>`委派 (`Converter(Of PointF, Point)`在 Visual Basic 中) 來代表`PointFToPoint`方法，並傳遞至委派<xref:System.Array.ConvertAll%2A>方法。 <xref:System.Array.ConvertAll%2A>方法會傳遞至輸入清單的每個項目`PointFToPoint`方法並將已轉換的項目放入新的清單<xref:System.Drawing.Point>結構。 這兩份清單會顯示。  
  
 [!code-cpp[Array_ConvertAll#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_ConvertAll/cpp/source.cpp#1)]
 [!code-csharp[Array_ConvertAll#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_ConvertAll/cs/source.cs#1)]
 [!code-vb[Array_ConvertAll#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_ConvertAll/vb/source.vb#1)]  
  
 範例 2  
  
 下列程式碼範例定義名為的方法`PointFToPoint`以將轉換成<xref:System.Drawing.PointF>結構<xref:System.Drawing.Point>結構。 這個範例會建立<xref:System.Collections.Generic.List%601>的<xref:System.Drawing.PointF>結構，則會建立`Converter\<PointF, Point>`委派 (`Converter(Of PointF, Point)` Visual Basic 中) 來代表`PointFToPoint`方法，並傳遞至委派<xref:System.Collections.Generic.List`1.ConvertAll*>方法。 <xref:System.Collections.Generic.List`1.ConvertAll*>方法會傳遞至輸入清單的每個項目`PointFToPoint`方法並將已轉換的項目放入新的清單<xref:System.Drawing.Point>結構。 這兩份清單會顯示。  
  
 [!code-cpp[List\`1_ConvertAll#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_ConvertAll/cpp/source.cpp#1)]
 [!code-csharp[List\`1_ConvertAll#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_ConvertAll/cs/source.cs#1)]
 [!code-vb[List\`1_ConvertAll#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_ConvertAll/vb/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
</Type>