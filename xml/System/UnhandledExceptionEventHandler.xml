<Type Name="UnhandledExceptionEventHandler" FullName="System.UnhandledExceptionEventHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cbba707fa3fd525f233f754d3479564dc7927a01" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36427371" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void UnhandledExceptionEventHandler(object sender, UnhandledExceptionEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed UnhandledExceptionEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.UnhandledExceptionEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub UnhandledExceptionEventHandler(sender As Object, e As UnhandledExceptionEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void UnhandledExceptionEventHandler(System::Object ^ sender, UnhandledExceptionEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type UnhandledExceptionEventHandler = delegate of obj * UnhandledExceptionEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.UnhandledExceptionEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">
      <span data-ttu-id="0212f-101">未處理的例外狀況事件來源。</span>
      <span class="sxs-lookup">
        <span data-stu-id="0212f-101">The source of the unhandled exception event.</span>
      </span>
    </param>
    <param name="e">
      <span data-ttu-id="0212f-102">包含事件資料的 <c>UnhandledExceptionEventArgs</c>。</span>
      <span class="sxs-lookup">
        <span data-stu-id="0212f-102">An <c>UnhandledExceptionEventArgs</c> that contains the event data.</span>
      </span>
    </param>
    <summary>
      <span data-ttu-id="0212f-103">表示將處理例外狀況所引發之事件的方法，而該例外狀況不是由應用程式定義域處理。</span>
      <span class="sxs-lookup">
        <span data-stu-id="0212f-103">Represents the method that will handle the event raised by an exception that is not handled by the application domain.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0212f-104"><xref:System.UnhandledExceptionEventHandler>只能指定為預設應用程式網域所建立的系統上，以執行應用程式。</span><span class="sxs-lookup"><span data-stu-id="0212f-104">An <xref:System.UnhandledExceptionEventHandler> can only be specified for the default application domain that is created by the system to execute an application.</span></span> <span data-ttu-id="0212f-105">指定<xref:System.UnhandledExceptionEventHandler>如<xref:System.AppDomain>所建立的應用程式沒有任何作用。</span><span class="sxs-lookup"><span data-stu-id="0212f-105">Specifying an <xref:System.UnhandledExceptionEventHandler> for an <xref:System.AppDomain> created by an application has no effect.</span></span>  
  
 <span data-ttu-id="0212f-106">當您建立 <xref:System.UnhandledExceptionEventHandler> 委派 (Delegate) 時，就可以識別即將處理此事件的方法。</span><span class="sxs-lookup"><span data-stu-id="0212f-106">When you create an <xref:System.UnhandledExceptionEventHandler> delegate, you identify the method that will handle the event.</span></span> <span data-ttu-id="0212f-107">若要與事件關聯的事件處理常式，加入事件委派的執行個體。</span><span class="sxs-lookup"><span data-stu-id="0212f-107">To associate the event handler with your event, add an instance of the delegate to the event.</span></span> <span data-ttu-id="0212f-108">除非您移除委派，否則每當事件發生時就會呼叫事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="0212f-108">The event handler is called whenever the event occurs, unless you remove the delegate.</span></span> <span data-ttu-id="0212f-109">如需事件處理常式委派的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="0212f-109">For more information about event handler delegates, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.UnhandledExceptionEventArgs" />
    <altmember cref="T:System.EventHandler" />
  </Docs>
</Type>