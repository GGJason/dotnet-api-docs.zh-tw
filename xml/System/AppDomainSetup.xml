<Type Name="AppDomainSetup" FullName="System.AppDomainSetup">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1f05dce13542dbb9caf55c70a48dd0b48580cdc9" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37481692" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class AppDomainSetup : IAppDomainSetup" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit AppDomainSetup extends System.Object implements class System.IAppDomainSetup" />
  <TypeSignature Language="DocId" Value="T:System.AppDomainSetup" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AppDomainSetup&#xA;Implements IAppDomainSetup" />
  <TypeSignature Language="C++ CLI" Value="public ref class AppDomainSetup sealed : IAppDomainSetup" />
  <TypeSignature Language="F#" Value="type AppDomainSetup = class&#xA;    interface IAppDomainSetup" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IAppDomainSetup</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="4df9e-101">Represents assembly binding information that can be added to an instance of <see cref="T:System.AppDomain" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4df9e-101">Represents assembly binding information that can be added to an instance of <see cref="T:System.AppDomain" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4df9e-102">變更的屬性<xref:System.AppDomainSetup>執行個體不會影響任何現有<xref:System.AppDomain>。</span><span class="sxs-lookup"><span data-stu-id="4df9e-102">Changing the properties of an <xref:System.AppDomainSetup> instance does not affect any existing <xref:System.AppDomain>.</span></span> <span data-ttu-id="4df9e-103">它可能會影響建立的新<xref:System.AppDomain>，當<xref:System.AppDomain.CreateDomain%2A>方法呼叫<xref:System.AppDomainSetup>做為參數的執行個體。</span><span class="sxs-lookup"><span data-stu-id="4df9e-103">It can affect only the creation of a new <xref:System.AppDomain>, when the <xref:System.AppDomain.CreateDomain%2A> method is called with the <xref:System.AppDomainSetup> instance as a parameter.</span></span>  
  
 <span data-ttu-id="4df9e-104">這個類別會實作 <xref:System.IAppDomainSetup> 介面。</span><span class="sxs-lookup"><span data-stu-id="4df9e-104">This class implements the <xref:System.IAppDomainSetup> interface.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="4df9e-105">預設值為<xref:System.AppDomainSetup.DisallowCodeDownload%2A>屬性為 false。</span><span class="sxs-lookup"><span data-stu-id="4df9e-105">The default value for the <xref:System.AppDomainSetup.DisallowCodeDownload%2A> property is false.</span></span> <span data-ttu-id="4df9e-106">此設定是不安全的服務。</span><span class="sxs-lookup"><span data-stu-id="4df9e-106">This setting is unsafe for services.</span></span> <span data-ttu-id="4df9e-107">為了防止服務下載部分信任程式碼，此屬性設定為 true</span><span class="sxs-lookup"><span data-stu-id="4df9e-107">To help prevent services from downloading partially trusted code, set this property to true</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4df9e-108">Initializes a new instance of the <see cref="T:System.AppDomainSetup" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-108">Initializes a new instance of the <see cref="T:System.AppDomainSetup" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AppDomainSetup ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomainSetup.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AppDomainSetup();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4df9e-109">Initializes a new instance of the <see cref="T:System.AppDomainSetup" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-109">Initializes a new instance of the <see cref="T:System.AppDomainSetup" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AppDomainSetup (ActivationContext activationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ActivationContext activationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomainSetup.#ctor(System.ActivationContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AppDomainSetup(ActivationContext ^ activationContext);" />
      <MemberSignature Language="F#" Value="new AppDomainSetup : ActivationContext -&gt; AppDomainSetup" Usage="new System.AppDomainSetup activationContext" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="activationContext" Type="System.ActivationContext" />
      </Parameters>
      <Docs>
        <param name="activationContext">
          <span data-ttu-id="4df9e-110">The activation context to be used for an application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-110">The activation context to be used for an application domain.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4df9e-111">Initializes a new instance of the <see cref="T:System.AppDomainSetup" /> class with the specified activation context to use for manifest-based activation of an application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-111">Initializes a new instance of the <see cref="T:System.AppDomainSetup" /> class with the specified activation context to use for manifest-based activation of an application domain.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4df9e-112"><xref:System.ActivationContext>針對指定的物件`activationContext`用來產生<xref:System.Runtime.Hosting.ActivationArguments>物件，包含啟動新的應用程式定義域所需的資訊。</span><span class="sxs-lookup"><span data-stu-id="4df9e-112">The <xref:System.ActivationContext> object specified for `activationContext` is used to generate an <xref:System.Runtime.Hosting.ActivationArguments> object containing information required to activate a new application domain.</span></span> <span data-ttu-id="4df9e-113">這<xref:System.Runtime.Hosting.ActivationArguments>可存取物件，請使用<xref:System.AppDomainSetup.ActivationArguments%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="4df9e-113">This <xref:System.Runtime.Hosting.ActivationArguments> object can be accessed by using the <xref:System.AppDomainSetup.ActivationArguments%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4df9e-114">
            <paramref name="activationContext" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-114">
              <paramref name="activationContext" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.AppDomainSetup.ActivationArguments" />
        <altmember cref="T:System.Runtime.Hosting.ActivationArguments" />
        <altmember cref="T:System.ActivationContext" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AppDomainSetup (System.Runtime.Hosting.ActivationArguments activationArguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Hosting.ActivationArguments activationArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomainSetup.#ctor(System.Runtime.Hosting.ActivationArguments)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AppDomainSetup(System::Runtime::Hosting::ActivationArguments ^ activationArguments);" />
      <MemberSignature Language="F#" Value="new AppDomainSetup : System.Runtime.Hosting.ActivationArguments -&gt; AppDomainSetup" Usage="new System.AppDomainSetup activationArguments" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="activationArguments" Type="System.Runtime.Hosting.ActivationArguments" />
      </Parameters>
      <Docs>
        <param name="activationArguments">
          <span data-ttu-id="4df9e-115">An object that specifies information required for the manifest-based activation of a new application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-115">An object that specifies information required for the manifest-based activation of a new application domain.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4df9e-116">Initializes a new instance of the <see cref="T:System.AppDomainSetup" /> class with the specified activation arguments required for manifest-based activation of an application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-116">Initializes a new instance of the <see cref="T:System.AppDomainSetup" /> class with the specified activation arguments required for manifest-based activation of an application domain.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4df9e-117">針對指定的物件`activationArguments`可以使用來存取<xref:System.AppDomainSetup.ActivationArguments%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="4df9e-117">The object specified for `activationArguments` can be accessed by using the <xref:System.AppDomainSetup.ActivationArguments%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4df9e-118">
            <paramref name="activationArguments" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-118">
              <paramref name="activationArguments" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ActivationArguments">
      <MemberSignature Language="C#" Value="public System.Runtime.Hosting.ActivationArguments ActivationArguments { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Hosting.ActivationArguments ActivationArguments" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.ActivationArguments" />
      <MemberSignature Language="VB.NET" Value="Public Property ActivationArguments As ActivationArguments" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Hosting::ActivationArguments ^ ActivationArguments { System::Runtime::Hosting::ActivationArguments ^ get(); void set(System::Runtime::Hosting::ActivationArguments ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ActivationArguments : System.Runtime.Hosting.ActivationArguments with get, set" Usage="System.AppDomainSetup.ActivationArguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Hosting.ActivationArguments</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4df9e-119">Gets or sets data about the activation of an application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-119">Gets or sets data about the activation of an application domain.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4df9e-120">物件，包含與應用程式定義域之啟動有關的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-120">An object that contains data about the activation of an application domain.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4df9e-121">如果這個屬性設定為將會擲回任何例外狀況`null`。</span><span class="sxs-lookup"><span data-stu-id="4df9e-121">No exception is thrown if this property is set to `null`.</span></span>  
  
 <span data-ttu-id="4df9e-122">所提供的資訊<xref:System.Runtime.Hosting.ActivationArguments>物件支援資訊清單型啟用。</span><span class="sxs-lookup"><span data-stu-id="4df9e-122">The information provided by the <xref:System.Runtime.Hosting.ActivationArguments> object supports manifest-based activation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="4df9e-123">The property is set to an <see cref="T:System.Runtime.Hosting.ActivationArguments" /> object whose application identity does not match the application identity of the <see cref="T:System.Security.Policy.ApplicationTrust" /> object returned by the <see cref="P:System.AppDomainSetup.ApplicationTrust" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-123">The property is set to an <see cref="T:System.Runtime.Hosting.ActivationArguments" /> object whose application identity does not match the application identity of the <see cref="T:System.Security.Policy.ApplicationTrust" /> object returned by the <see cref="P:System.AppDomainSetup.ApplicationTrust" /> property.</span>
          </span>
          <span data-ttu-id="4df9e-124">No exception is thrown if the <see cref="P:System.AppDomainSetup.ApplicationTrust" /> property is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-124">No exception is thrown if the <see cref="P:System.AppDomainSetup.ApplicationTrust" /> property is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AppDomainInitializer">
      <MemberSignature Language="C#" Value="public AppDomainInitializer AppDomainInitializer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.AppDomainInitializer AppDomainInitializer" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.AppDomainInitializer" />
      <MemberSignature Language="VB.NET" Value="Public Property AppDomainInitializer As AppDomainInitializer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property AppDomainInitializer ^ AppDomainInitializer { AppDomainInitializer ^ get(); void set(AppDomainInitializer ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AppDomainInitializer : AppDomainInitializer with get, set" Usage="System.AppDomainSetup.AppDomainInitializer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AppDomainInitializer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4df9e-125">Gets or sets the <see cref="T:System.AppDomainInitializer" /> delegate, which represents a callback method that is invoked when the application domain is initialized.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-125">Gets or sets the <see cref="T:System.AppDomainInitializer" /> delegate, which represents a callback method that is invoked when the application domain is initialized.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4df9e-126">表示回呼方法的委派，在應用程式定義域初始化時會叫用此方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-126">A delegate that represents a callback method that is invoked when the application domain is initialized.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4df9e-127">若要將資訊傳遞至回呼方法，將指派的字串陣列<xref:System.AppDomainSetup.AppDomainInitializerArguments%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="4df9e-127">To pass information to the callback method, assign an array of strings to the <xref:System.AppDomainSetup.AppDomainInitializerArguments%2A> property.</span></span> <span data-ttu-id="4df9e-128">陣列傳遞至回呼方法，每次<xref:System.AppDomain>初始化。</span><span class="sxs-lookup"><span data-stu-id="4df9e-128">The array is passed to the callback method each time an <xref:System.AppDomain> is initialized.</span></span>  
  
 <span data-ttu-id="4df9e-129">新建立的應用程式定義域的內容中執行的回呼方法。</span><span class="sxs-lookup"><span data-stu-id="4df9e-129">The callback method is executed in the context of the newly created application domain.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4df9e-130">下列範例會建立名為的子應用程式定義域`ChildDomain`，並使用<xref:System.AppDomainSetup>物件和從預設應用程式定義域的辨識項。</span><span class="sxs-lookup"><span data-stu-id="4df9e-130">The following example creates a child application domain named `ChildDomain`, using an <xref:System.AppDomainSetup> object and evidence from the default application domain.</span></span> <span data-ttu-id="4df9e-131"><xref:System.AppDomainSetup.AppDomainInitializer%2A>屬性設為回呼方法`AppDomainInit`，叫用所在的子定義域初始化時。</span><span class="sxs-lookup"><span data-stu-id="4df9e-131">The <xref:System.AppDomainSetup.AppDomainInitializer%2A> property is set to the callback method `AppDomainInit`, which is invoked when the child domain is initialized.</span></span> <span data-ttu-id="4df9e-132">回呼方法的引數會放在字串指派給陣列<xref:System.AppDomainSetup.AppDomainInitializerArguments%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="4df9e-132">The arguments for the callback method are placed in an array of strings, which is assigned to the <xref:System.AppDomainSetup.AppDomainInitializerArguments%2A> property.</span></span> <span data-ttu-id="4df9e-133">建立子網域時，回呼方法只會列印字串。</span><span class="sxs-lookup"><span data-stu-id="4df9e-133">When the child domain is created, the callback method simply prints the strings.</span></span>  
  
 [!code-cpp[AppDomainInitializer#1](~/samples/snippets/cpp/VS_Snippets_CLR/AppDomainInitializer/cpp/source.cpp#1)]
 [!code-csharp[AppDomainInitializer#1](~/samples/snippets/csharp/VS_Snippets_CLR/AppDomainInitializer/CS/source.cs#1)]
 [!code-vb[AppDomainInitializer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AppDomainInitializer/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.AppDomainInitializer" />
        <altmember cref="P:System.AppDomainSetup.AppDomainInitializerArguments" />
      </Docs>
    </Member>
    <Member MemberName="AppDomainInitializerArguments">
      <MemberSignature Language="C#" Value="public string[] AppDomainInitializerArguments { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] AppDomainInitializerArguments" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.AppDomainInitializerArguments" />
      <MemberSignature Language="VB.NET" Value="Public Property AppDomainInitializerArguments As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ AppDomainInitializerArguments { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AppDomainInitializerArguments : string[] with get, set" Usage="System.AppDomainSetup.AppDomainInitializerArguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4df9e-134">Gets or sets the arguments passed to the callback method represented by the <see cref="T:System.AppDomainInitializer" /> delegate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-134">Gets or sets the arguments passed to the callback method represented by the <see cref="T:System.AppDomainInitializer" /> delegate.</span>
          </span>
          <span data-ttu-id="4df9e-135">The callback method is invoked when the application domain is initialized.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-135">The callback method is invoked when the application domain is initialized.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4df9e-136">傳遞至回呼方法所表示的字串陣列<see cref="T:System.AppDomainInitializer" />期間叫用回呼方法的委派<see cref="T:System.AppDomain" />初始化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-136">An array of strings that is passed to the callback method represented by the <see cref="T:System.AppDomainInitializer" /> delegate, when the callback method is invoked during <see cref="T:System.AppDomain" /> initialization.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4df9e-137">使用<xref:System.AppDomainSetup.AppDomainInitializer%2A>屬性來指定期間叫用的回呼方法<xref:System.AppDomain>初始化。</span><span class="sxs-lookup"><span data-stu-id="4df9e-137">Use the <xref:System.AppDomainSetup.AppDomainInitializer%2A> property to specify a callback method that is invoked during <xref:System.AppDomain> initialization.</span></span> <span data-ttu-id="4df9e-138">如果<xref:System.AppDomainSetup.AppDomainInitializer%2A>屬性未設定時，不會使用指派給這個屬性的陣列。</span><span class="sxs-lookup"><span data-stu-id="4df9e-138">If the <xref:System.AppDomainSetup.AppDomainInitializer%2A> property is not set, the array assigned to this property is not used.</span></span>  
  
 <span data-ttu-id="4df9e-139">新建立的應用程式定義域的內容中執行的回呼方法。</span><span class="sxs-lookup"><span data-stu-id="4df9e-139">The callback method is executed in the context of the newly created application domain.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4df9e-140">下列程式碼範例會建立名為的子應用程式定義域`ChildDomain`，並使用<xref:System.AppDomainSetup>物件和從預設應用程式定義域的辨識項。</span><span class="sxs-lookup"><span data-stu-id="4df9e-140">The following code example creates a child application domain named `ChildDomain`, using an <xref:System.AppDomainSetup> object and evidence from the default application domain.</span></span> <span data-ttu-id="4df9e-141"><xref:System.AppDomainSetup.AppDomainInitializer%2A>屬性設為回呼方法`AppDomainInit`，叫用所在的子定義域初始化時。</span><span class="sxs-lookup"><span data-stu-id="4df9e-141">The <xref:System.AppDomainSetup.AppDomainInitializer%2A> property is set to the callback method `AppDomainInit`, which is invoked when the child domain is initialized.</span></span> <span data-ttu-id="4df9e-142">回呼方法的引數會放在字串指派給陣列<xref:System.AppDomainSetup.AppDomainInitializerArguments%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="4df9e-142">The arguments for the callback method are placed in an array of strings, which is assigned to the <xref:System.AppDomainSetup.AppDomainInitializerArguments%2A> property.</span></span> <span data-ttu-id="4df9e-143">建立子網域時，回呼方法只會列印字串。</span><span class="sxs-lookup"><span data-stu-id="4df9e-143">When the child domain is created, the callback method simply prints the strings.</span></span>  
  
 [!code-cpp[AppDomainInitializer#1](~/samples/snippets/cpp/VS_Snippets_CLR/AppDomainInitializer/cpp/source.cpp#1)]
 [!code-csharp[AppDomainInitializer#1](~/samples/snippets/csharp/VS_Snippets_CLR/AppDomainInitializer/CS/source.cs#1)]
 [!code-vb[AppDomainInitializer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AppDomainInitializer/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.AppDomainInitializer" />
        <altmember cref="P:System.AppDomainSetup.AppDomainInitializer" />
      </Docs>
    </Member>
    <Member MemberName="AppDomainManagerAssembly">
      <MemberSignature Language="C#" Value="public string AppDomainManagerAssembly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AppDomainManagerAssembly" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.AppDomainManagerAssembly" />
      <MemberSignature Language="VB.NET" Value="Public Property AppDomainManagerAssembly As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AppDomainManagerAssembly { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AppDomainManagerAssembly : string with get, set" Usage="System.AppDomainSetup.AppDomainManagerAssembly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4df9e-144">Gets or sets the display name of the assembly that provides the type of the application domain manager for application domains created using this <see cref="T:System.AppDomainSetup" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-144">Gets or sets the display name of the assembly that provides the type of the application domain manager for application domains created using this <see cref="T:System.AppDomainSetup" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4df9e-145">提供的組件的顯示名稱<see cref="T:System.Type" />應用程式定義域管理員。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-145">The display name of the assembly that provides the <see cref="T:System.Type" /> of the application domain manager.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4df9e-146">若要指定的應用程式定義域管理員類型，設定這個屬性和<xref:System.AppDomainSetup.AppDomainManagerType%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="4df9e-146">To specify the type of the application domain manager, set both this property and the <xref:System.AppDomainSetup.AppDomainManagerType%2A> property.</span></span> <span data-ttu-id="4df9e-147">如果未設定這些屬性的其中一個項目，則會忽略其他。</span><span class="sxs-lookup"><span data-stu-id="4df9e-147">If either of these properties is not set, the other is ignored.</span></span>  
  
 <span data-ttu-id="4df9e-148">如果未不提供任何型別，則應用程式定義域管理員會建立從父系應用程式網域相同的型別 (也就是應用程式定義域從中<xref:System.AppDomain.CreateDomain%2A?displayProperty=nameWithType>方法呼叫)。</span><span class="sxs-lookup"><span data-stu-id="4df9e-148">If no type is provided, the application domain manager is created from the same type as the parent application domain (that is, the application domain from which the <xref:System.AppDomain.CreateDomain%2A?displayProperty=nameWithType> method is called).</span></span>  
  
 <span data-ttu-id="4df9e-149">載入應用程式定義域時，<xref:System.TypeLoadException>組件不存在，則組件不包含所指定的型別會擲回<xref:System.AppDomainSetup.AppDomainManagerType%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="4df9e-149">When the application domain is loaded, <xref:System.TypeLoadException> is thrown if the assembly does not exist, or if the assembly does not contain the type specified by the <xref:System.AppDomainSetup.AppDomainManagerType%2A> property.</span></span> <span data-ttu-id="4df9e-150"><xref:System.IO.FileLoadException> 如果找到組件，但不是符合的版本資訊，會擲回。</span><span class="sxs-lookup"><span data-stu-id="4df9e-150"><xref:System.IO.FileLoadException> is thrown if the assembly is found but the version information does not match.</span></span>  
  
 <span data-ttu-id="4df9e-151">若要設定預設應用程式定義域的應用程式網域管理員，使用[ \<appDomainManagerAssembly >](~/docs/framework/configure-apps/file-schema/runtime/appdomainmanagerassembly-element.md)並[ \<appDomainManagerType >](~/docs/framework/configure-apps/file-schema/runtime/appdomainmanagertype-element.md)中的項目[\<執行階段 >](~/docs/framework/configure-apps/file-schema/runtime/runtime-element.md)應用程式組態檔或使用環境變數中所述的區段<xref:System.AppDomainManager>。</span><span class="sxs-lookup"><span data-stu-id="4df9e-151">To set the application domain manager for the default application domain, use the [\<appDomainManagerAssembly>](~/docs/framework/configure-apps/file-schema/runtime/appdomainmanagerassembly-element.md) and [\<appDomainManagerType>](~/docs/framework/configure-apps/file-schema/runtime/appdomainmanagertype-element.md) elements in the [\<runtime>](~/docs/framework/configure-apps/file-schema/runtime/runtime-element.md) section of the application configuration file, or use the environment variables described in <xref:System.AppDomainManager>.</span></span>  
  
 <span data-ttu-id="4df9e-152">這項功能需要有完全信任應用程式。</span><span class="sxs-lookup"><span data-stu-id="4df9e-152">This feature requires the application to have full trust.</span></span> <span data-ttu-id="4df9e-153">（例如，在桌面上執行的應用程式有完全信任）。如果應用程式並沒有完全信任，<xref:System.TypeLoadException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="4df9e-153">(For example, an application running on the desktop has full trust.) If the application does not have full trust, a <xref:System.TypeLoadException> is thrown.</span></span>  
  
 <span data-ttu-id="4df9e-154">組件顯示名稱的格式由指定<xref:System.Reflection.Assembly.FullName%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="4df9e-154">The format of the assembly display name is given by the <xref:System.Reflection.Assembly.FullName%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppDomainManagerType">
      <MemberSignature Language="C#" Value="public string AppDomainManagerType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AppDomainManagerType" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.AppDomainManagerType" />
      <MemberSignature Language="VB.NET" Value="Public Property AppDomainManagerType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AppDomainManagerType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AppDomainManagerType : string with get, set" Usage="System.AppDomainSetup.AppDomainManagerType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4df9e-155">Gets or sets the full name of the type that provides the application domain manager for application domains created using this <see cref="T:System.AppDomainSetup" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-155">Gets or sets the full name of the type that provides the application domain manager for application domains created using this <see cref="T:System.AppDomainSetup" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4df9e-156">類型的完整名稱，包含命名空間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-156">The full name of the type, including the namespace.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4df9e-157">若要指定的應用程式定義域管理員類型，設定這個屬性和<xref:System.AppDomainSetup.AppDomainManagerAssembly%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="4df9e-157">To specify the type of the application domain manager, set both this property and the <xref:System.AppDomainSetup.AppDomainManagerAssembly%2A> property.</span></span> <span data-ttu-id="4df9e-158">如果未設定這些屬性的其中一個項目，則會忽略其他。</span><span class="sxs-lookup"><span data-stu-id="4df9e-158">If either of these properties is not set, the other is ignored.</span></span>  
  
 <span data-ttu-id="4df9e-159">如果未不提供任何型別，則應用程式定義域管理員會建立從父系應用程式網域相同的型別 (也就是應用程式定義域從中<xref:System.AppDomain.CreateDomain%2A?displayProperty=nameWithType>方法呼叫)。</span><span class="sxs-lookup"><span data-stu-id="4df9e-159">If no type is provided, the application domain manager is created from the same type as the parent application domain (that is, the application domain from which the <xref:System.AppDomain.CreateDomain%2A?displayProperty=nameWithType> method is called).</span></span>  
  
 <span data-ttu-id="4df9e-160">載入應用程式定義域時，<xref:System.TypeLoadException>所指定的組件便會擲回<xref:System.AppDomainSetup.AppDomainManagerAssembly%2A>屬性不包含這個屬性所指定的型別。</span><span class="sxs-lookup"><span data-stu-id="4df9e-160">When the application domain is loaded, <xref:System.TypeLoadException> is thrown if the assembly specified by the <xref:System.AppDomainSetup.AppDomainManagerAssembly%2A> property does not contain the type specified by this property.</span></span>  
  
 <span data-ttu-id="4df9e-161">若要設定預設應用程式定義域的應用程式網域管理員，使用[ \<appDomainManagerAssembly >](~/docs/framework/configure-apps/file-schema/runtime/appdomainmanagerassembly-element.md)並[ \<appDomainManagerType >](~/docs/framework/configure-apps/file-schema/runtime/appdomainmanagertype-element.md)中的項目[\<執行階段 >](~/docs/framework/configure-apps/file-schema/runtime/runtime-element.md)應用程式組態檔或使用環境變數中所述的區段<xref:System.AppDomainManager>。</span><span class="sxs-lookup"><span data-stu-id="4df9e-161">To set the application domain manager for the default application domain, use the [\<appDomainManagerAssembly>](~/docs/framework/configure-apps/file-schema/runtime/appdomainmanagerassembly-element.md) and [\<appDomainManagerType>](~/docs/framework/configure-apps/file-schema/runtime/appdomainmanagertype-element.md) elements in the [\<runtime>](~/docs/framework/configure-apps/file-schema/runtime/runtime-element.md) section of the application configuration file, or use the environment variables described in <xref:System.AppDomainManager>.</span></span>  
  
 <span data-ttu-id="4df9e-162">這項功能需要有完全信任應用程式。</span><span class="sxs-lookup"><span data-stu-id="4df9e-162">This feature requires the application to have full trust.</span></span> <span data-ttu-id="4df9e-163">（例如，在桌面上執行的應用程式有完全信任）。如果應用程式並沒有完全信任，<xref:System.TypeLoadException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="4df9e-163">(For example, an application running on the desktop has full trust.) If the application does not have full trust, a <xref:System.TypeLoadException> is thrown.</span></span>  
  
 <span data-ttu-id="4df9e-164">型別的完整名稱的格式由指定<xref:System.Type.FullName%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="4df9e-164">The format of the full name of a type is given by the <xref:System.Type.FullName%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationBase">
      <MemberSignature Language="C#" Value="public string ApplicationBase { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationBase" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.ApplicationBase" />
      <MemberSignature Language="VB.NET" Value="Public Property ApplicationBase As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ApplicationBase { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationBase : string with get, set" Usage="System.AppDomainSetup.ApplicationBase" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAppDomainSetup.ApplicationBase</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4df9e-165">Gets or sets the name of the directory containing the application.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-165">Gets or sets the name of the directory containing the application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4df9e-166">應用程式基底目錄的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-166">The name of the application base directory.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4df9e-167">應用程式基底目錄是組件管理員開始探查組件。</span><span class="sxs-lookup"><span data-stu-id="4df9e-167">The application base directory is where the assembly manager begins probing for assemblies.</span></span>  
  
 <span data-ttu-id="4df9e-168"><xref:System.AppDomainSetup.ApplicationBase%2A>屬性可能會影響哪些權限會授與應用程式定義域。</span><span class="sxs-lookup"><span data-stu-id="4df9e-168">The <xref:System.AppDomainSetup.ApplicationBase%2A> property can influence which permissions are granted to an application domain.</span></span> <span data-ttu-id="4df9e-169">比方說，通常來自本機電腦的應用程式定義域會接收依據其原始位置的完全信任。</span><span class="sxs-lookup"><span data-stu-id="4df9e-169">For example, an application domain originating from the local computer normally receives full trust based on its location of origin.</span></span> <span data-ttu-id="4df9e-170">不過，如果<xref:System.AppDomainSetup.ApplicationBase%2A>屬性<xref:System.AppDomain>設定為內部網路目錄的完整名稱<xref:System.AppDomainSetup.ApplicationBase%2A>設定會限制授與 LocalIntranet 授與應用程式定義域即使應用程式定義域的權限確實來自本機電腦。</span><span class="sxs-lookup"><span data-stu-id="4df9e-170">However, if the <xref:System.AppDomainSetup.ApplicationBase%2A> property of that <xref:System.AppDomain> is set to the full name of an intranet directory, the <xref:System.AppDomainSetup.ApplicationBase%2A> setting restricts the permissions granted to the application domain to a LocalIntranet grant even though the application domain actually originates from the local computer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4df9e-171">下列範例示範如何使用<xref:System.AppDomainSetup.ApplicationBase%2A>屬性來設定組件載入器開始探查組件載入到新的應用程式定義域的位置。</span><span class="sxs-lookup"><span data-stu-id="4df9e-171">The following example demonstrates how to use the <xref:System.AppDomainSetup.ApplicationBase%2A> property to set the location where the assembly loader begins probing for assemblies to load into a new application domain.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4df9e-172">您必須確定您指定的資料夾存在。</span><span class="sxs-lookup"><span data-stu-id="4df9e-172">You must ensure that the folder you specify exists.</span></span>  
  
 [!code-cpp[ADApplicationBase#1](~/samples/snippets/cpp/VS_Snippets_CLR/ADApplicationBase/CPP/adapplicationbase.cpp#1)]
 [!code-csharp[ADApplicationBase#1](~/samples/snippets/csharp/VS_Snippets_CLR/ADApplicationBase/CS/adapplicationbase.cs#1)]
 [!code-vb[ADApplicationBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ADApplicationBase/VB/adapplicationbase.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="4df9e-173">用於存取的路徑資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-173">for access to the path information.</span>
          </span>
          <span data-ttu-id="4df9e-174">相關聯的列舉型別： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-174">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationName : string with get, set" Usage="System.AppDomainSetup.ApplicationName" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAppDomainSetup.ApplicationName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4df9e-175">Gets or sets the name of the application.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-175">Gets or sets the name of the application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4df9e-176">應用程式的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-176">The name of the application.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4df9e-177">下列範例示範如何設定<xref:System.AppDomainSetup.ApplicationName%2A>當您建立新的應用程式定義域的屬性。</span><span class="sxs-lookup"><span data-stu-id="4df9e-177">The following example shows how to set the <xref:System.AppDomainSetup.ApplicationName%2A> property when you create a new application domain.</span></span>  
  
 <span data-ttu-id="4df9e-178">此範例會建立新的應用程式定義域，然後呼叫<xref:System.AppDomain.CreateInstanceAndUnwrap%2A?displayProperty=nameWithType>方法來載入新的應用程式定義域中的範例組件，並建立的執行個體`Worker`類別。</span><span class="sxs-lookup"><span data-stu-id="4df9e-178">The example creates a new application domain, and then calls the <xref:System.AppDomain.CreateInstanceAndUnwrap%2A?displayProperty=nameWithType> method to load the example assembly into the new application domain and create an instance of the `Worker` class.</span></span> <span data-ttu-id="4df9e-179">`Worker`類別會繼承<xref:System.MarshalByRefObject>，所以此範例可以使用所傳回的 proxy<xref:System.AppDomain.CreateInstanceAndUnwrap%2A>呼叫`TestLoad`方法。</span><span class="sxs-lookup"><span data-stu-id="4df9e-179">The `Worker` class inherits <xref:System.MarshalByRefObject>, so the example can use the proxy returned by <xref:System.AppDomain.CreateInstanceAndUnwrap%2A> to call the `TestLoad` method.</span></span>  
  
 <span data-ttu-id="4df9e-180">`TestLoad`方法載入組件，您所指定。</span><span class="sxs-lookup"><span data-stu-id="4df9e-180">The `TestLoad` method loads an assembly that you specify.</span></span> <span data-ttu-id="4df9e-181">您必須指定有效的、 完整的組件的名稱，或取消註解<xref:System.Reflection.Assembly.Load%28System.String%29>方法。</span><span class="sxs-lookup"><span data-stu-id="4df9e-181">You must either specify a valid, fully qualified assembly name, or comment out the <xref:System.Reflection.Assembly.Load%28System.String%29> method.</span></span> <span data-ttu-id="4df9e-182">`TestLoad`方法列出的組件載入至新的應用程式定義域中，顯示您指定的組件和範例組件會載入。</span><span class="sxs-lookup"><span data-stu-id="4df9e-182">The `TestLoad` method lists the assemblies that are loaded into the new application domain, showing that your specified assembly and the example assembly are loaded.</span></span>  
  
 <span data-ttu-id="4df9e-183">此範例會使用<xref:System.LoaderOptimizationAttribute>告知如何應用程式時，會跨應用程式定義域共用程式碼的組件載入器的屬性。</span><span class="sxs-lookup"><span data-stu-id="4df9e-183">The example uses the <xref:System.LoaderOptimizationAttribute> attribute to tell the assembly loader how the application will share code across application domains.</span></span>  
  
 [!code-cpp[ADMultiDomain#1](~/samples/snippets/cpp/VS_Snippets_CLR/ADMultiDomain/CPP/admultidomain.cpp#1)]
 [!code-csharp[ADMultiDomain#1](~/samples/snippets/csharp/VS_Snippets_CLR/ADMultiDomain/CS/admultidomain.cs#1)]
 [!code-vb[ADMultiDomain#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ADMultiDomain/VB/admultidomain.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationTrust">
      <MemberSignature Language="C#" Value="public System.Security.Policy.ApplicationTrust ApplicationTrust { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Policy.ApplicationTrust ApplicationTrust" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.ApplicationTrust" />
      <MemberSignature Language="VB.NET" Value="Public Property ApplicationTrust As ApplicationTrust" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Policy::ApplicationTrust ^ ApplicationTrust { System::Security::Policy::ApplicationTrust ^ get(); void set(System::Security::Policy::ApplicationTrust ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationTrust : System.Security.Policy.ApplicationTrust with get, set" Usage="System.AppDomainSetup.ApplicationTrust" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.ApplicationTrust</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4df9e-184">Gets or sets an object containing security and trust information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-184">Gets or sets an object containing security and trust information.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4df9e-185">包含安全性和信任資訊的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-185">An object that contains security and trust information.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4df9e-186">這個屬性就`null`當<xref:System.AppDomainSetup>建立。</span><span class="sxs-lookup"><span data-stu-id="4df9e-186">This property is `null` when the <xref:System.AppDomainSetup> is created.</span></span> <span data-ttu-id="4df9e-187">變更後，無法重設為 null 參考。</span><span class="sxs-lookup"><span data-stu-id="4df9e-187">Once changed, it cannot be reset to a null reference.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="4df9e-188">The property is set to an <see cref="T:System.Security.Policy.ApplicationTrust" /> object whose application identity does not match the application identity of the <see cref="T:System.Runtime.Hosting.ActivationArguments" /> object returned by the <see cref="P:System.AppDomainSetup.ActivationArguments" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-188">The property is set to an <see cref="T:System.Security.Policy.ApplicationTrust" /> object whose application identity does not match the application identity of the <see cref="T:System.Runtime.Hosting.ActivationArguments" /> object returned by the <see cref="P:System.AppDomainSetup.ActivationArguments" /> property.</span>
          </span>
          <span data-ttu-id="4df9e-189">No exception is thrown if the <see cref="P:System.AppDomainSetup.ActivationArguments" /> property is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-189">No exception is thrown if the <see cref="P:System.AppDomainSetup.ActivationArguments" /> property is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4df9e-190">The property is set to <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-190">The property is set to <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CachePath">
      <MemberSignature Language="C#" Value="public string CachePath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CachePath" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.CachePath" />
      <MemberSignature Language="VB.NET" Value="Public Property CachePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CachePath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CachePath : string with get, set" Usage="System.AppDomainSetup.CachePath" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAppDomainSetup.CachePath</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4df9e-191">Gets or sets the name of an area specific to the application where files are shadow copied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-191">Gets or sets the name of an area specific to the application where files are shadow copied.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4df9e-192">陰影複製之檔案的目錄路徑與檔案名稱的完整限定名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-192">The fully qualified name of the directory path and file name where files are shadow copied.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4df9e-193">為了讓這個屬性，以造成的影響，<xref:System.AppDomainSetup.ApplicationName%2A>也必須設定屬性。</span><span class="sxs-lookup"><span data-stu-id="4df9e-193">In order for this property to have an effect, the <xref:System.AppDomainSetup.ApplicationName%2A> property must also be set.</span></span> <span data-ttu-id="4df9e-194">如果<xref:System.AppDomainSetup.ApplicationName%2A>未設定屬性，<xref:System.AppDomainSetup.CachePath%2A>屬性會被忽略，且預設為下載快取的陰影複本快取位置。</span><span class="sxs-lookup"><span data-stu-id="4df9e-194">If the <xref:System.AppDomainSetup.ApplicationName%2A> property is not set, the <xref:System.AppDomainSetup.CachePath%2A> property is ignored and the shadow copy cache location defaults to the download cache.</span></span>  
  
 <span data-ttu-id="4df9e-195">如需有關陰影複製的詳細資訊，請參閱[陰影複製組件](~/docs/framework/app-domains/shadow-copy-assemblies.md)。</span><span class="sxs-lookup"><span data-stu-id="4df9e-195">For more information on shadow copying, see [Shadow Copying Assemblies](~/docs/framework/app-domains/shadow-copy-assemblies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="4df9e-196">用於存取的路徑資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-196">for access to the path information.</span>
          </span>
          <span data-ttu-id="4df9e-197">相關聯的列舉型別： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-197">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          </span>
        </permission>
        <altmember cref="P:System.AppDomainSetup.ShadowCopyFiles" />
        <altmember cref="P:System.AppDomainSetup.ShadowCopyDirectories" />
      </Docs>
    </Member>
    <Member MemberName="ConfigurationFile">
      <MemberSignature Language="C#" Value="public string ConfigurationFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConfigurationFile" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.ConfigurationFile" />
      <MemberSignature Language="VB.NET" Value="Public Property ConfigurationFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ConfigurationFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConfigurationFile : string with get, set" Usage="System.AppDomainSetup.ConfigurationFile" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAppDomainSetup.ConfigurationFile</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4df9e-198">Gets or sets the name of the configuration file for an application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-198">Gets or sets the name of the configuration file for an application domain.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4df9e-199">組態檔的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-199">The name of the configuration file.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4df9e-200">組態檔會描述應用程式定義域的組態資料與搜尋規則。</span><span class="sxs-lookup"><span data-stu-id="4df9e-200">The configuration file describes the search rules and configuration data for the application domain.</span></span> <span data-ttu-id="4df9e-201">建立應用程式定義域主機負責提供這項資料，因為有意義的值不同的狀況。</span><span class="sxs-lookup"><span data-stu-id="4df9e-201">The host that creates the application domain is responsible for supplying this data because the meaningful values vary from situation to situation.</span></span>  
  
 <span data-ttu-id="4df9e-202">比方說，ASP.NET 應用程式的組態資料儲存為每個應用程式、 網站和電腦，而可執行檔的組態資料會儲存每個應用程式、 使用者和電腦。</span><span class="sxs-lookup"><span data-stu-id="4df9e-202">For example, the configuration data for ASP.NET applications is stored for each application, site, and computer, while the configuration data for an executable is stored for each application, user, and computer.</span></span> <span data-ttu-id="4df9e-203">主應用程式知道特定的一種情況的組態資料的細節。</span><span class="sxs-lookup"><span data-stu-id="4df9e-203">Only the host knows the specifics of the configuration data for a particular circumstance.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="4df9e-204">用於存取的路徑資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-204">for access to the path information.</span>
          </span>
          <span data-ttu-id="4df9e-205">相關聯的列舉型別： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-205">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="DisallowApplicationBaseProbing">
      <MemberSignature Language="C#" Value="public bool DisallowApplicationBaseProbing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisallowApplicationBaseProbing" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.DisallowApplicationBaseProbing" />
      <MemberSignature Language="VB.NET" Value="Public Property DisallowApplicationBaseProbing As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisallowApplicationBaseProbing { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DisallowApplicationBaseProbing : bool with get, set" Usage="System.AppDomainSetup.DisallowApplicationBaseProbing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4df9e-206">Specifies whether the application base path and private binary path are probed when searching for assemblies to load.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-206">Specifies whether the application base path and private binary path are probed when searching for assemblies to load.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4df9e-207">如果不允許探查，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-207">
              <see langword="true" /> if probing is not allowed; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="4df9e-208">預設值為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-208">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4df9e-209">如果<xref:System.AppDomainSetup.DisallowApplicationBaseProbing%2A>屬性是`true`，值<xref:System.AppDomainSetup.ApplicationBase%2A>屬性會被忽略。</span><span class="sxs-lookup"><span data-stu-id="4df9e-209">If the <xref:System.AppDomainSetup.DisallowApplicationBaseProbing%2A> property is `true`, the value of the <xref:System.AppDomainSetup.ApplicationBase%2A> property is ignored.</span></span> <span data-ttu-id="4df9e-210">也就是任何組件會探查如中所指定的目錄<xref:System.AppDomainSetup.ApplicationBase%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="4df9e-210">That is, no assemblies are probed for in the directories specified by the <xref:System.AppDomainSetup.ApplicationBase%2A> property.</span></span> <span data-ttu-id="4df9e-211">此外，值<xref:System.AppDomainSetup.PrivateBinPath%2A>屬性和<xref:System.AppDomainSetup.PrivateBinPathProbe%2A>屬性會被忽略。</span><span class="sxs-lookup"><span data-stu-id="4df9e-211">In addition, the values of the <xref:System.AppDomainSetup.PrivateBinPath%2A> property and the <xref:System.AppDomainSetup.PrivateBinPathProbe%2A> property are ignored.</span></span> <span data-ttu-id="4df9e-212">任何組件會針對所指定的目錄中探查<xref:System.AppDomainSetup.PrivateBinPath%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="4df9e-212">No assemblies are probed for in the directories specified by the <xref:System.AppDomainSetup.PrivateBinPath%2A> property.</span></span>  
  
 <span data-ttu-id="4df9e-213"><xref:System.AppDomainSetup.DisallowApplicationBaseProbing%2A>屬性會提供一層額外的載入程序的控制權。</span><span class="sxs-lookup"><span data-stu-id="4df9e-213">The <xref:System.AppDomainSetup.DisallowApplicationBaseProbing%2A> property provides an additional layer of control over the loading process.</span></span> <span data-ttu-id="4df9e-214">標準的組件載入順序時，應用程式基底會探查之前<xref:System.AppDomain.AssemblyResolve?displayProperty=nameWithType>就會引發事件。</span><span class="sxs-lookup"><span data-stu-id="4df9e-214">In the normal assembly loading sequence, the application base is probed before the <xref:System.AppDomain.AssemblyResolve?displayProperty=nameWithType> event is raised.</span></span> <span data-ttu-id="4df9e-215">不過，某些應用程式可能需要從 OLE 複合檔案的文件，或不在全域組件快取中，也不在所指定的目錄中唯一的已知位置載入組件<xref:System.AppDomainSetup.ApplicationBase%2A>和<xref:System.AppDomainSetup.PrivateBinPath%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="4df9e-215">However, some applications might need to load assemblies from an OLE compound file within a document, or from a unique known location that is neither in the global assembly cache nor in the directories specified by the <xref:System.AppDomainSetup.ApplicationBase%2A> and <xref:System.AppDomainSetup.PrivateBinPath%2A> properties.</span></span> <span data-ttu-id="4df9e-216">這類應用程式可以使用<xref:System.AppDomainSetup.DisallowApplicationBaseProbing%2A>屬性，以避免一般的探查時，所造成的延遲，並避免載入必要的組件可能會位於一般探查路徑的複本。</span><span class="sxs-lookup"><span data-stu-id="4df9e-216">Such applications can use the <xref:System.AppDomainSetup.DisallowApplicationBaseProbing%2A> property to avoid the delay caused by normal probing, and to avoid loading copies of the necessary assembly that might be located in the normal probing paths.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisallowBindingRedirects">
      <MemberSignature Language="C#" Value="public bool DisallowBindingRedirects { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisallowBindingRedirects" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.DisallowBindingRedirects" />
      <MemberSignature Language="VB.NET" Value="Public Property DisallowBindingRedirects As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisallowBindingRedirects { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DisallowBindingRedirects : bool with get, set" Usage="System.AppDomainSetup.DisallowBindingRedirects" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4df9e-217">Gets or sets a value that indicates whether an application domain allows assembly binding redirection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-217">Gets or sets a value that indicates whether an application domain allows assembly binding redirection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4df9e-218">如果不允許組件重新導向，則為 <see langword="true" />；如果允許，則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-218">
              <see langword="true" /> if redirection of assemblies is not allowed; <see langword="false" /> if it is allowed.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4df9e-219"><xref:System.AppDomainSetup.DisallowBindingRedirects%2A>屬性設計用於服務和伺服器應用程式組件繫結重新導向不是屬於應用程式案例。</span><span class="sxs-lookup"><span data-stu-id="4df9e-219">The <xref:System.AppDomainSetup.DisallowBindingRedirects%2A> property is designed to be used by services and server applications where assembly binding redirection is not part of the application scenario.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisallowCodeDownload">
      <MemberSignature Language="C#" Value="public bool DisallowCodeDownload { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisallowCodeDownload" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.DisallowCodeDownload" />
      <MemberSignature Language="VB.NET" Value="Public Property DisallowCodeDownload As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisallowCodeDownload { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DisallowCodeDownload : bool with get, set" Usage="System.AppDomainSetup.DisallowCodeDownload" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4df9e-220">Gets or sets a value that indicates whether HTTP download of assemblies is allowed for an application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-220">Gets or sets a value that indicates whether HTTP download of assemblies is allowed for an application domain.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4df9e-221">如果不允許以 HTTP 下載組件，則為 <see langword="true" />；如果允許，則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-221">
              <see langword="true" /> if HTTP download of assemblies is not allowed; <see langword="false" /> if it is allowed.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4df9e-222"><xref:System.AppDomainSetup.DisallowCodeDownload%2A>屬性設計用於服務和伺服器應用程式，從內部網路或網際網路下載的程式碼不是應用程式案例的一部分。</span><span class="sxs-lookup"><span data-stu-id="4df9e-222">The <xref:System.AppDomainSetup.DisallowCodeDownload%2A> property is designed to be used by services and server applications where downloading code from an intranet or the Internet is not part of the application scenario.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="4df9e-223">預設值<xref:System.AppDomainSetup.DisallowCodeDownload%2A>屬性是`false`。</span><span class="sxs-lookup"><span data-stu-id="4df9e-223">The default value for the <xref:System.AppDomainSetup.DisallowCodeDownload%2A> property is `false`.</span></span> <span data-ttu-id="4df9e-224">此設定是不安全的服務。</span><span class="sxs-lookup"><span data-stu-id="4df9e-224">This setting is unsafe for services.</span></span> <span data-ttu-id="4df9e-225">為了防止服務下載部分信任程式碼，請將此屬性設定為`true`。</span><span class="sxs-lookup"><span data-stu-id="4df9e-225">To help prevent services from downloading partially trusted code, set this property to `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisallowPublisherPolicy">
      <MemberSignature Language="C#" Value="public bool DisallowPublisherPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisallowPublisherPolicy" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.DisallowPublisherPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Property DisallowPublisherPolicy As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisallowPublisherPolicy { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DisallowPublisherPolicy : bool with get, set" Usage="System.AppDomainSetup.DisallowPublisherPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4df9e-226">Gets or sets a value that indicates whether the [&lt;publisherPolicy&gt;](~/docs/framework/configure-apps/file-schema/runtime/publisherpolicy-element.md) section of the configuration file is applied to an application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-226">Gets or sets a value that indicates whether the [&lt;publisherPolicy&gt;](~/docs/framework/configure-apps/file-schema/runtime/publisherpolicy-element.md) section of the configuration file is applied to an application domain.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4df9e-227">如果忽略應用程式定義域之組態檔的 <see langword="&lt;publisherPolicy&gt;" /> 區段，則為 <see langword="true" />；如果遵循所宣告的發行者原則，則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-227">
              <see langword="true" /> if the <see langword="&lt;publisherPolicy&gt;" /> section of the configuration file for an application domain is ignored; <see langword="false" /> if the declared publisher policy is honored.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4df9e-228"><xref:System.AppDomainSetup.DisallowPublisherPolicy%2A>屬性特別適用於在本機載入的 Web 應用程式。</span><span class="sxs-lookup"><span data-stu-id="4df9e-228">The <xref:System.AppDomainSetup.DisallowPublisherPolicy%2A> property specifically applies to a Web application that is loaded locally.</span></span> <span data-ttu-id="4df9e-229">使用這個屬性來協助防止惡意嘗試在安全模式中執行的不安全的 Web 應用程式。</span><span class="sxs-lookup"><span data-stu-id="4df9e-229">Use this property to help prevent a malicious attempt to execute an unsafe Web application in safe mode.</span></span>  
  
 <span data-ttu-id="4df9e-230">如需有關如何略過發行者原則的詳細資訊，請參閱[重新導向組件版本](~/docs/framework/configure-apps/redirect-assembly-versions.md)主題。</span><span class="sxs-lookup"><span data-stu-id="4df9e-230">For more information about bypassing publisher policy, see the [Redirecting Assembly Versions](~/docs/framework/configure-apps/redirect-assembly-versions.md) topic.</span></span> <span data-ttu-id="4df9e-231">如需安全模式的詳細資訊，請參閱 「 檢查組態檔 > 一節[執行階段如何找出組件](~/docs/framework/deployment/how-the-runtime-locates-assemblies.md)主題。</span><span class="sxs-lookup"><span data-stu-id="4df9e-231">For more information about safe mode, see the "Examining the Configuration Files" section of the [How the Runtime Locates Assemblies](~/docs/framework/deployment/how-the-runtime-locates-assemblies.md) topic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DynamicBase">
      <MemberSignature Language="C#" Value="public string DynamicBase { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DynamicBase" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.DynamicBase" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicBase As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DynamicBase { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DynamicBase : string with get, set" Usage="System.AppDomainSetup.DynamicBase" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAppDomainSetup.DynamicBase</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4df9e-232">Gets or sets the base directory where the directory for dynamically generated files is located.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-232">Gets or sets the base directory where the directory for dynamically generated files is located.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4df9e-233">
            <see cref="P:System.AppDomain.DynamicDirectory" /> 所在的目錄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-233">The directory where the <see cref="P:System.AppDomain.DynamicDirectory" /> is located.</span>
          </span>
          <span data-ttu-id="4df9e-234">
            <block subset="none" type="note">
              <para> 這個屬性的傳回值是不同於指派的值。 </para>
            </block>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-234">
              <block subset="none" type="note">
                <para> The return value of this property is different from the value assigned. </para>
              </block>
            </span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  

## Remarks  
 <span data-ttu-id="4df9e-235">若要設定的基底目錄即將放置新的應用程式定義域的動態目錄中使用這個屬性。</span><span class="sxs-lookup"><span data-stu-id="4df9e-235">Use this property to set the base directory where the dynamic directory for the new application domain will be located.</span></span> <span data-ttu-id="4df9e-236">當新的應用程式定義域中的程式碼會載入組件、 組件解析會尋找在一般探查路徑中第一個。</span><span class="sxs-lookup"><span data-stu-id="4df9e-236">When code in the new application domain loads an assembly, assembly resolution looks first in the normal probing paths.</span></span> <span data-ttu-id="4df9e-237">如果找不到組件，它會尋找在動態的目錄中，由<xref:System.AppDomain.DynamicDirectory%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="4df9e-237">If it does not find the assembly, it looks in the dynamic directory, which is returned by the <xref:System.AppDomain.DynamicDirectory%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="4df9e-238">會載入並執行新的應用程式定義域的動態組件可以放在該處。</span><span class="sxs-lookup"><span data-stu-id="4df9e-238">Dynamic assemblies that will be loaded and executed by the new application domain can be placed there.</span></span>  
  
 <span data-ttu-id="4df9e-239">當您將指派的路徑<xref:System.AppDomainSetup.DynamicBase%2A>屬性，加入額外的子目錄，這個子目錄的名稱是指派給值的雜湊碼<xref:System.AppDomainSetup.ApplicationName%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="4df9e-239">When you assign a path to the <xref:System.AppDomainSetup.DynamicBase%2A> property, an additional subdirectory is added; the name of this subdirectory is the hash code of the value assigned to the <xref:System.AppDomainSetup.ApplicationName%2A> property.</span></span> <span data-ttu-id="4df9e-240">因此，後續傳回這個屬性的基底目錄是永遠不同於指派的值。</span><span class="sxs-lookup"><span data-stu-id="4df9e-240">Thus, the base directory subsequently returned by this property is always different from the value assigned.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4df9e-241">將值指派給這個屬性不會建立任何目錄。</span><span class="sxs-lookup"><span data-stu-id="4df9e-241">Assigning a value to this property does not create any directories.</span></span> <span data-ttu-id="4df9e-242">必須建立或使用它們的程式碼所經過的目錄。</span><span class="sxs-lookup"><span data-stu-id="4df9e-242">The directories must be created or verified by the code that uses them.</span></span>  
  
 <span data-ttu-id="4df9e-243">動態的目錄是子目錄的<xref:System.AppDomainSetup.DynamicBase%2A>。</span><span class="sxs-lookup"><span data-stu-id="4df9e-243">The dynamic directory is a subdirectory of <xref:System.AppDomainSetup.DynamicBase%2A>.</span></span> <span data-ttu-id="4df9e-244">其簡單的名稱是所傳回的值<xref:System.AppDomainSetup.ApplicationName%2A>屬性，因此它的格式*原始路徑*\\*雜湊碼*\\*應用程式名稱*.</span><span class="sxs-lookup"><span data-stu-id="4df9e-244">Its simple name is the value returned by the <xref:System.AppDomainSetup.ApplicationName%2A> property, so its format is *original path*\\*hash code*\\*application name*.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4df9e-245">下列範例示範如何使用<xref:System.AppDomainSetup.DynamicBase%2A>載入動態組件時，探查路徑設為應用程式定義域的屬性。</span><span class="sxs-lookup"><span data-stu-id="4df9e-245">The following example demonstrates how to use the <xref:System.AppDomainSetup.DynamicBase%2A> property to set the path an application domain probes when loading dynamic assemblies.</span></span>  
  
 <span data-ttu-id="4df9e-246">此範例會建立<xref:System.AppDomainSetup>物件以及設定其<xref:System.AppDomainSetup.ApplicationName%2A>"Example"的屬性並將其<xref:System.AppDomainSetup.DynamicBase%2A>"C:\DynamicAssemblyDir"的屬性。</span><span class="sxs-lookup"><span data-stu-id="4df9e-246">The example creates an <xref:System.AppDomainSetup> object and sets its <xref:System.AppDomainSetup.ApplicationName%2A> property to "Example" and its <xref:System.AppDomainSetup.DynamicBase%2A> property to "C:\DynamicAssemblyDir".</span></span> <span data-ttu-id="4df9e-247">此範例接著會顯示<xref:System.AppDomainSetup.DynamicBase%2A>屬性，以顯示應用程式名稱的雜湊碼，已附加為原本指派路徑的子目錄。</span><span class="sxs-lookup"><span data-stu-id="4df9e-247">The example then displays the <xref:System.AppDomainSetup.DynamicBase%2A> property, to show that the hash code of the application name has been appended as a subdirectory of the path that was originally assigned.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4df9e-248">在此範例中的基底目錄就是要探查路徑外部的範例應用程式。</span><span class="sxs-lookup"><span data-stu-id="4df9e-248">The base directory in this example is intended to be outside the probing path for the example application.</span></span> <span data-ttu-id="4df9e-249">請務必在編譯中的不同位置的範例。</span><span class="sxs-lookup"><span data-stu-id="4df9e-249">Be sure to compile the example in a different location.</span></span> <span data-ttu-id="4df9e-250">刪除的基底目錄及其所有子目錄每次執行此範例的資訊。</span><span class="sxs-lookup"><span data-stu-id="4df9e-250">Delete the base directory and all its subdirectories each time you run the example.</span></span>  
  
 <span data-ttu-id="4df9e-251">此範例會建立新的應用程式網域使用<xref:System.AppDomainSetup>物件。</span><span class="sxs-lookup"><span data-stu-id="4df9e-251">The example creates a new application domain using the <xref:System.AppDomainSetup> object.</span></span> <span data-ttu-id="4df9e-252">如果不存在，這個範例會建立動態的目錄。</span><span class="sxs-lookup"><span data-stu-id="4df9e-252">The example then creates the dynamic directory if it does not already exist.</span></span> <span data-ttu-id="4df9e-253">雖然此範例會使用應用程式定義域的<xref:System.AppDomain.DynamicDirectory%2A?displayProperty=nameWithType>屬性來取得動態的目錄中，名稱就可輕鬆地建立目錄事先藉由串連的原始路徑，應用程式名稱的雜湊碼，應用程式名稱。</span><span class="sxs-lookup"><span data-stu-id="4df9e-253">Although the example uses the application domain's <xref:System.AppDomain.DynamicDirectory%2A?displayProperty=nameWithType> property to get the name of the dynamic directory, it could just as easily create the directory beforehand by concatenating the original path, the hash code of the application name, and the application name.</span></span>  
  
 <span data-ttu-id="4df9e-254">此範例包含 `GenerateDynamicAssembly`方法，會發出名為組件`DynamicHelloWorld.dll`並將它儲存在新的應用程式定義域的動態目錄中。</span><span class="sxs-lookup"><span data-stu-id="4df9e-254">The example has a `GenerateDynamicAssembly` method that emits an assembly named `DynamicHelloWorld.dll` and stores it in the new application domain's dynamic directory.</span></span> <span data-ttu-id="4df9e-255">動態組件包含一種類型， `HelloWorld`，，有一個靜態方法 (`Shared`方法，在 Visual Basic 中的) 名為`HelloFromAD`。</span><span class="sxs-lookup"><span data-stu-id="4df9e-255">The dynamic assembly contains one type, `HelloWorld`, that has a static method (`Shared` method in Visual Basic) named `HelloFromAD`.</span></span> <span data-ttu-id="4df9e-256">呼叫這個方法會顯示應用程式定義域的名稱。</span><span class="sxs-lookup"><span data-stu-id="4df9e-256">Calling this method displays the name of the application domain.</span></span>  
  
 <span data-ttu-id="4df9e-257">`Example`類別衍生自<xref:System.MarshalByRefObject>，因此範例可以建立類別的執行個體，在新的應用程式定義域，並呼叫其`Test`方法。</span><span class="sxs-lookup"><span data-stu-id="4df9e-257">The `Example` class derives from <xref:System.MarshalByRefObject>, so the example can create an instance of the class in the new application domain and call its `Test` method.</span></span> <span data-ttu-id="4df9e-258">`Test`方法會依其顯示名稱載入的動態組件，並呼叫靜態`HelloFromAD`方法。</span><span class="sxs-lookup"><span data-stu-id="4df9e-258">The `Test` method loads the dynamic assembly by its display name and calls the static `HelloFromAD` method.</span></span>  
  
 <span data-ttu-id="4df9e-259">您可以顯示的動態目錄搜尋一般探查路徑之後，撰寫程式碼組件名為`DynamicHelloWorld.dll`和編譯此範例中的相同目錄中。</span><span class="sxs-lookup"><span data-stu-id="4df9e-259">You can show that the dynamic directory is searched after the normal probing paths by writing code for an assembly named `DynamicHelloWorld.dll` and compiling it in the same directory as this example.</span></span> <span data-ttu-id="4df9e-260">組件必須具有一個名為類別`HelloWorld`靜態方法，名為`HelloFromAD`。</span><span class="sxs-lookup"><span data-stu-id="4df9e-260">The assembly must have a class named `HelloWorld` with a static method named `HelloFromAD`.</span></span> <span data-ttu-id="4df9e-261">這個方法不需要有相同的功能與在範例中，它只可以在主控台中顯示的字串。</span><span class="sxs-lookup"><span data-stu-id="4df9e-261">This method does not have to have the same functionality as the one in the example; it can simply display a string to the console.</span></span> <span data-ttu-id="4df9e-262">組件也必須<xref:System.Reflection.AssemblyVersionAttribute>將它的版本設定為 1.0.0.0 的屬性。</span><span class="sxs-lookup"><span data-stu-id="4df9e-262">The assembly must also have an <xref:System.Reflection.AssemblyVersionAttribute> attribute that sets its version to 1.0.0.0.</span></span> <span data-ttu-id="4df9e-263">當您執行範例時，才能動態的目錄中搜尋找到您編譯目前目錄中的組件。</span><span class="sxs-lookup"><span data-stu-id="4df9e-263">When you run the example, the assembly you compiled in the current directory is found before the dynamic directory is searched.</span></span>  
  
 [!code-cpp[ADDynamicBase#1](~/samples/snippets/cpp/VS_Snippets_CLR/ADDynamicBase/CPP/addynamicbase.cpp#1)]
 [!code-csharp[ADDynamicBase#1](~/samples/snippets/csharp/VS_Snippets_CLR/ADDynamicBase/CS/addynamicbase.cs#1)]
 [!code-vb[ADDynamicBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ADDynamicBase/VB/addynamicbase.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="4df9e-264">This property cannot be set because the application name on the application domain is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-264">This property cannot be set because the application name on the application domain is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="4df9e-265">用於存取的路徑資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-265">for access to the path information.</span>
          </span>
          <span data-ttu-id="4df9e-266">相關聯的列舉型別： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-266">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetConfigurationBytes">
      <MemberSignature Language="C#" Value="public byte[] GetConfigurationBytes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] GetConfigurationBytes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomainSetup.GetConfigurationBytes" />
      <MemberSignature Language="VB.NET" Value="Public Function GetConfigurationBytes () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ GetConfigurationBytes();" />
      <MemberSignature Language="F#" Value="member this.GetConfigurationBytes : unit -&gt; byte[]" Usage="appDomainSetup.GetConfigurationBytes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4df9e-267">Returns the XML configuration information set by the <see cref="M:System.AppDomainSetup.SetConfigurationBytes(System.Byte[])" /> method, which overrides the application's XML configuration information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-267">Returns the XML configuration information set by the <see cref="M:System.AppDomainSetup.SetConfigurationBytes(System.Byte[])" /> method, which overrides the application's XML configuration information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4df9e-268">An array that contains the XML configuration information that was set by the <see cref="M:System.AppDomainSetup.SetConfigurationBytes(System.Byte[])" /> method, or <see langword="null" /> if the <see cref="M:System.AppDomainSetup.SetConfigurationBytes(System.Byte[])" /> method has not been called.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-268">An array that contains the XML configuration information that was set by the <see cref="M:System.AppDomainSetup.SetConfigurationBytes(System.Byte[])" /> method, or <see langword="null" /> if the <see cref="M:System.AppDomainSetup.SetConfigurationBytes(System.Byte[])" /> method has not been called.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4df9e-269"><xref:System.AppDomainSetup.SetConfigurationBytes%2A>方法可用來覆寫的應用程式，建立新的應用程式定義域的組態資訊。</span><span class="sxs-lookup"><span data-stu-id="4df9e-269">The <xref:System.AppDomainSetup.SetConfigurationBytes%2A> method provides a way to override the configuration information of an application that creates a new application domain.</span></span> <span data-ttu-id="4df9e-270">中的設定檔資訊`value`覆寫應用程式的設定檔資訊。</span><span class="sxs-lookup"><span data-stu-id="4df9e-270">The configuration file information in `value` overrides the configuration file information for the application.</span></span> <span data-ttu-id="4df9e-271">例如，當 Example.exe 應用程式建立新的應用程式定義域時，它可以覆寫原先取自 Example.exe.config 檔案的組態資訊。</span><span class="sxs-lookup"><span data-stu-id="4df9e-271">For example, when the Example.exe application creates a new application domain, it can override the configuration information originally obtained from Example.exe.config file.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4df9e-272">部分的設定檔資訊的取用者不會使用儲存的資訊<xref:System.AppDomainSetup.SetConfigurationBytes%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="4df9e-272">Some consumers of configuration file information do not use the information stored by the <xref:System.AppDomainSetup.SetConfigurationBytes%2A> method.</span></span> <span data-ttu-id="4df9e-273">執行階段不會強制這。</span><span class="sxs-lookup"><span data-stu-id="4df9e-273">The runtime does not enforce this.</span></span> <span data-ttu-id="4df9e-274">若要確保新的應用程式定義域中遭到覆寫所有的設定檔資訊，請使用<xref:System.AppDomainSetup.ConfigurationFile%2A>屬性來指定組態檔。</span><span class="sxs-lookup"><span data-stu-id="4df9e-274">To ensure that all configuration file information is overridden in a new application domain, use the <xref:System.AppDomainSetup.ConfigurationFile%2A> property to specify a configuration file.</span></span> <span data-ttu-id="4df9e-275"><xref:System.AppDomainSetup.SetConfigurationBytes%2A>方法，並會影響組件繫結。</span><span class="sxs-lookup"><span data-stu-id="4df9e-275">The <xref:System.AppDomainSetup.SetConfigurationBytes%2A> method does affect assembly binding.</span></span>  
  
 <span data-ttu-id="4df9e-276">中的 XML`value`等同於在一般組態檔中，XML 不同之處在於它會儲存為<xref:System.Byte>陣列。</span><span class="sxs-lookup"><span data-stu-id="4df9e-276">The XML in `value` is the same as the XML in a normal configuration file, except that it is stored as a <xref:System.Byte> array.</span></span>  
  
 <span data-ttu-id="4df9e-277">若要存取應用程式定義域的組態位元組，使用<xref:System.AppDomain.SetupInformation%2A?displayProperty=nameWithType>屬性來取得<xref:System.AppDomainSetup>物件的應用程式定義域，然後使用<xref:System.AppDomainSetup.GetConfigurationBytes%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="4df9e-277">To access the configuration bytes for an application domain, use the <xref:System.AppDomain.SetupInformation%2A?displayProperty=nameWithType> property to get the <xref:System.AppDomainSetup> object for the application domain, then use the <xref:System.AppDomainSetup.GetConfigurationBytes%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LicenseFile">
      <MemberSignature Language="C#" Value="public string LicenseFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LicenseFile" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.LicenseFile" />
      <MemberSignature Language="VB.NET" Value="Public Property LicenseFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LicenseFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LicenseFile : string with get, set" Usage="System.AppDomainSetup.LicenseFile" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAppDomainSetup.LicenseFile</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4df9e-278">Gets or sets the location of the license file associated with this domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-278">Gets or sets the location of the license file associated with this domain.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4df9e-279">授權檔的位置和名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-279">The location and name of the license file.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="4df9e-280">用於存取的路徑資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-280">for access to the path information.</span>
          </span>
          <span data-ttu-id="4df9e-281">相關聯的列舉型別： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-281">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="LoaderOptimization">
      <MemberSignature Language="C#" Value="public LoaderOptimization LoaderOptimization { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.LoaderOptimization LoaderOptimization" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.LoaderOptimization" />
      <MemberSignature Language="VB.NET" Value="Public Property LoaderOptimization As LoaderOptimization" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property LoaderOptimization LoaderOptimization { LoaderOptimization get(); void set(LoaderOptimization value); };" />
      <MemberSignature Language="F#" Value="member this.LoaderOptimization : LoaderOptimization with get, set" Usage="System.AppDomainSetup.LoaderOptimization" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.LoaderOptimization</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4df9e-282">Specifies the optimization policy used to load an executable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-282">Specifies the optimization policy used to load an executable.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4df9e-283">列舉的常數，可搭配<see cref="T:System.LoaderOptimizationAttribute" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-283">An enumerated constant that is used with the <see cref="T:System.LoaderOptimizationAttribute" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4df9e-284">下列範例會建立動態組件，並將它儲存到磁碟，然後再使用<xref:System.AppDomainSetup.LoaderOptimization%2A>屬性來設定用來將組件載入應用程式定義域的最佳化原則。</span><span class="sxs-lookup"><span data-stu-id="4df9e-284">The following example creates a dynamic assembly and saves it to disk, and then uses the <xref:System.AppDomainSetup.LoaderOptimization%2A> property to set the optimization policy used to load the assembly into an application domain.</span></span>  
  
 [!code-cpp[ADDyno#1](~/samples/snippets/cpp/VS_Snippets_CLR/ADDyno/CPP/addyno.cpp#1)]
 [!code-csharp[ADDyno#1](~/samples/snippets/csharp/VS_Snippets_CLR/ADDyno/CS/addyno.cs#1)]
 [!code-vb[ADDyno#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ADDyno/VB/addyno.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PartialTrustVisibleAssemblies">
      <MemberSignature Language="C#" Value="public string[] PartialTrustVisibleAssemblies { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] PartialTrustVisibleAssemblies" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.PartialTrustVisibleAssemblies" />
      <MemberSignature Language="VB.NET" Value="Public Property PartialTrustVisibleAssemblies As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ PartialTrustVisibleAssemblies { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PartialTrustVisibleAssemblies : string[] with get, set" Usage="System.AppDomainSetup.PartialTrustVisibleAssemblies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4df9e-285">Gets or sets a list of assemblies marked with the <see cref="F:System.Security.PartialTrustVisibilityLevel.NotVisibleByDefault" /> flag that are made visible to partial-trust code running in a sandboxed application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-285">Gets or sets a list of assemblies marked with the <see cref="F:System.Security.PartialTrustVisibilityLevel.NotVisibleByDefault" /> flag that are made visible to partial-trust code running in a sandboxed application domain.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4df9e-286">部分組件名稱的陣列，其中每一個部分名稱都是由簡易組件名稱和公開金鑰組成。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-286">An array of partial assembly names, where each partial name consists of the simple assembly name and the public key.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4df9e-287">開頭[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]，則<xref:System.Security.AllowPartiallyTrustedCallersAttribute>(APTCA) 屬性可條件式藉由設定其<xref:System.Security.AllowPartiallyTrustedCallersAttribute.PartialTrustVisibilityLevel%2A>屬性設<xref:System.Security.PartialTrustVisibilityLevel.NotVisibleByDefault>。</span><span class="sxs-lookup"><span data-stu-id="4df9e-287">Beginning with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the <xref:System.Security.AllowPartiallyTrustedCallersAttribute> (APTCA) attribute can be made conditional by setting its <xref:System.Security.AllowPartiallyTrustedCallersAttribute.PartialTrustVisibilityLevel%2A> property to <xref:System.Security.PartialTrustVisibilityLevel.NotVisibleByDefault>.</span></span> <span data-ttu-id="4df9e-288">APTCA 組件標記為<xref:System.Security.PartialTrustVisibilityLevel.NotVisibleByDefault>除非主應用程式可讓它無法由部分信任程式碼。</span><span class="sxs-lookup"><span data-stu-id="4df9e-288">An APTCA assembly that is marked with <xref:System.Security.PartialTrustVisibilityLevel.NotVisibleByDefault> cannot be used by partially trusted code unless the host application allows it.</span></span>  
  
 <span data-ttu-id="4df9e-289">沙箱應用程式定義域的主應用程式可讓應用程式定義域，以搭配條件式 APTCA 屬性中的組件，藉由建立陣列，其中包含公開金鑰的每個組件，與簡單的名稱，並將陣列指派給這個屬性中的程式碼。</span><span class="sxs-lookup"><span data-stu-id="4df9e-289">The host of a sandboxed application domain allows code in the application domain to use assemblies with conditional APTCA attributes by creating an array that contains the simple name and public key of each assembly, and assigning the array to this property.</span></span> <span data-ttu-id="4df9e-290">例如，陣列項目可能如下所示:"MyAssembly，PublicKey =0024000004800000940000000602000000240000525341310004000001000100db2ad5e5fedc67ea526ff72ad426ef68e08e241d296c499eedfec6648dcc62b1a12f72be5833a45bbec481b68415b08a5fbc9f9ef247b523dd72bbea65bb532784ddc5c704544bd2f1c2d46fdbe41e4f949e76f9947357b2d5cf8ca9f970701bbd6e8ab64ad31b20ad0be9b56dae4f6b83332b92a2a3b8ea2804c40efbc0b6b9"。</span><span class="sxs-lookup"><span data-stu-id="4df9e-290">For example, an element of the array might look like the following: "MyAssembly, PublicKey=0024000004800000940000000602000000240000525341310004000001000100db2ad5e5fedc67ea526ff72ad426ef68e08e241d296c499eedfec6648dcc62b1a12f72be5833a45bbec481b68415b08a5fbc9f9ef247b523dd72bbea65bb532784ddc5c704544bd2f1c2d46fdbe41e4f949e76f9947357b2d5cf8ca9f970701bbd6e8ab64ad31b20ad0be9b56dae4f6b83332b92a2a3b8ea2804c40efbc0b6b9".</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4df9e-291">如果您使用的子類別<xref:System.AppDomainManager>，並定義它的組件相依於以條件式 APTCA 屬性標記的組件，您必須包含這些組件的清單中，您將傳遞給<xref:System.AppDomainSetup.PartialTrustVisibleAssemblies%2A>屬性<xref:System.AppDomainSetup>您用來建立應用程式定義域。</span><span class="sxs-lookup"><span data-stu-id="4df9e-291">If you are using a subclass of <xref:System.AppDomainManager>, and the assembly that defines it depends on assemblies that are marked with the conditional APTCA attribute, you must include those assemblies in the list that you pass to the <xref:System.AppDomainSetup.PartialTrustVisibleAssemblies%2A> property of the <xref:System.AppDomainSetup> you use to create application domains.</span></span> <span data-ttu-id="4df9e-292">否則將會停用條件式 APTCA 屬性標記的組件。</span><span class="sxs-lookup"><span data-stu-id="4df9e-292">Otherwise the assemblies that are marked with the conditional APTCA attribute will be disabled.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4df9e-293">當您偵錯的應用程式，在沙箱應用程式網域中，執行某些<xref:System.Security.SecurityException>訊息可能會產生誤導。</span><span class="sxs-lookup"><span data-stu-id="4df9e-293">When you are debugging an application that is running in a sandboxed application domain, some <xref:System.Security.SecurityException> messages can be misleading.</span></span> <span data-ttu-id="4df9e-294">例如，訊息可能狀態，您完全信任的組件的其中一個只能進行有限的權限，當實際問題的原因是超過沙箱應用程式定義域的授權集的安全性要求，傳播到的界限沙箱應用程式定義域但失敗。</span><span class="sxs-lookup"><span data-stu-id="4df9e-294">For example, a message might state that one of your fully trusted assemblies has only limited permissions, when the real cause of the problem is that a security demand that exceeds the grant set of the sandboxed application domain has propagated to the boundary of the sandboxed application domain and failed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Security.AllowPartiallyTrustedCallersAttribute" />
        <altmember cref="P:System.Security.AllowPartiallyTrustedCallersAttribute.PartialTrustVisibilityLevel" />
        <altmember cref="F:System.Security.PartialTrustVisibilityLevel.NotVisibleByDefault" />
      </Docs>
    </Member>
    <Member MemberName="PrivateBinPath">
      <MemberSignature Language="C#" Value="public string PrivateBinPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PrivateBinPath" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.PrivateBinPath" />
      <MemberSignature Language="VB.NET" Value="Public Property PrivateBinPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PrivateBinPath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PrivateBinPath : string with get, set" Usage="System.AppDomainSetup.PrivateBinPath" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAppDomainSetup.PrivateBinPath</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4df9e-295">Gets or sets the list of directories under the application base directory that are probed for private assemblies.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-295">Gets or sets the list of directories under the application base directory that are probed for private assemblies.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4df9e-296">以分號分隔的目錄名稱清單。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-296">A list of directory names separated by semicolons.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4df9e-297">私用組件會部署在相同的目錄結構與應用程式。</span><span class="sxs-lookup"><span data-stu-id="4df9e-297">Private assemblies are deployed in the same directory structure as the application.</span></span> <span data-ttu-id="4df9e-298">如果針對指定的目錄<xref:System.AppDomainSetup.PrivateBinPath%2A>不是下方<xref:System.AppDomainSetup.ApplicationBase%2A>，則會予以忽略。</span><span class="sxs-lookup"><span data-stu-id="4df9e-298">If the directories specified for <xref:System.AppDomainSetup.PrivateBinPath%2A> are not under <xref:System.AppDomainSetup.ApplicationBase%2A>, they are ignored.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrivateBinPathProbe">
      <MemberSignature Language="C#" Value="public string PrivateBinPathProbe { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PrivateBinPathProbe" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.PrivateBinPathProbe" />
      <MemberSignature Language="VB.NET" Value="Public Property PrivateBinPathProbe As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PrivateBinPathProbe { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PrivateBinPathProbe : string with get, set" Usage="System.AppDomainSetup.PrivateBinPathProbe" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAppDomainSetup.PrivateBinPathProbe</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4df9e-299">Gets or sets a string value that includes or excludes <see cref="P:System.AppDomainSetup.ApplicationBase" /> from the search path for the application, and searches only <see cref="P:System.AppDomainSetup.PrivateBinPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-299">Gets or sets a string value that includes or excludes <see cref="P:System.AppDomainSetup.ApplicationBase" /> from the search path for the application, and searches only <see cref="P:System.AppDomainSetup.PrivateBinPath" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4df9e-300">Null 參考 (<see langword="Nothing" /> Visual Basic 中) 以包含搜尋組件時的應用程式基底路徑; 任何非 null 字串值的路徑排除。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-300">A null reference (<see langword="Nothing" /> in Visual Basic) to include the application base path when searching for assemblies; any non-null string value to exclude the path.</span>
          </span>
          <span data-ttu-id="4df9e-301">預設值是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-301">The default value is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4df9e-302">將此屬性設定為任何非 null 字串值，包括<xref:System.String.Empty?displayProperty=nameWithType>("")，若要排除的應用程式的目錄路徑，也就是<xref:System.AppDomainSetup.ApplicationBase%2A>— 應用程式，以及要搜尋的組件的搜尋路徑中只在<xref:System.AppDomainSetup.PrivateBinPath%2A>。</span><span class="sxs-lookup"><span data-stu-id="4df9e-302">Set this property to any non-null string value, including <xref:System.String.Empty?displayProperty=nameWithType> (""), to exclude the application directory path — that is, <xref:System.AppDomainSetup.ApplicationBase%2A> — from the search path for the application, and to search for assemblies only in <xref:System.AppDomainSetup.PrivateBinPath%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SandboxInterop">
      <MemberSignature Language="C#" Value="public bool SandboxInterop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SandboxInterop" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.SandboxInterop" />
      <MemberSignature Language="VB.NET" Value="Public Property SandboxInterop As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SandboxInterop { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SandboxInterop : bool with get, set" Usage="System.AppDomainSetup.SandboxInterop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4df9e-303">Gets or sets a value that indicates whether interface caching is disabled for interop calls in the application domain, so that a <c>QueryInterface</c> is performed on each call.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-303">Gets or sets a value that indicates whether interface caching is disabled for interop calls in the application domain, so that a <c>QueryInterface</c> is performed on each call.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4df9e-304">
            <see langword="true" /> 如果與目前所建立的應用程式定義域中 interop 呼叫介面快取已停用<see cref="T:System.AppDomainSetup" />物件; 否則<see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-304">
              <see langword="true" /> if interface caching is disabled for interop calls in application domains created with the current <see cref="T:System.AppDomainSetup" /> object; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4df9e-305">停用介面快取的 interop 呼叫的效能有重大影響。</span><span class="sxs-lookup"><span data-stu-id="4df9e-305">Disabling interface caching has a significant impact on the performance of interop calls.</span></span>  
  
 <span data-ttu-id="4df9e-306">這個成員在引進[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="4df9e-306">This member is introduced in the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)].</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCompatibilitySwitches">
      <MemberSignature Language="C#" Value="public void SetCompatibilitySwitches (System.Collections.Generic.IEnumerable&lt;string&gt; switches);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCompatibilitySwitches(class System.Collections.Generic.IEnumerable`1&lt;string&gt; switches) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomainSetup.SetCompatibilitySwitches(System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCompatibilitySwitches (switches As IEnumerable(Of String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCompatibilitySwitches(System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ switches);" />
      <MemberSignature Language="F#" Value="member this.SetCompatibilitySwitches : seq&lt;string&gt; -&gt; unit" Usage="appDomainSetup.SetCompatibilitySwitches switches" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="switches" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="switches">
          <span data-ttu-id="4df9e-307">An enumerable set of string values that specify compatibility switches, or <see langword="null" /> to erase the existing compatibility switches.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-307">An enumerable set of string values that specify compatibility switches, or <see langword="null" /> to erase the existing compatibility switches.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4df9e-308">Sets the specified switches, making the application domain compatible with previous versions of the .NET Framework for the specified issues.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-308">Sets the specified switches, making the application domain compatible with previous versions of the .NET Framework for the specified issues.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4df9e-309">.NET Framework 的主要版本有時候會引進重大變更來自舊版本。</span><span class="sxs-lookup"><span data-stu-id="4df9e-309">Major versions of the .NET Framework sometimes introduce breaking changes from the previous version.</span></span> <span data-ttu-id="4df9e-310">例如，[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]導入了少數的重大變更[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="4df9e-310">For example, the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] introduces a small number of breaking changes from the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)].</span></span> <span data-ttu-id="4df9e-311">使用<xref:System.AppDomainSetup.SetCompatibilitySwitches%2A>方法，以指定的一或多個這些重大變更將會回復應用程式定義域，以讓其行為與舊版的.NET Framework 相容。</span><span class="sxs-lookup"><span data-stu-id="4df9e-311">Use the <xref:System.AppDomainSetup.SetCompatibilitySwitches%2A> method to specify that one or more of these breaking changes should be rolled back for the application domain, to make the behavior compatible with the previous version of the .NET Framework.</span></span>  
  
 <span data-ttu-id="4df9e-312">每次呼叫此方法，它會取代現有的交換器設定。</span><span class="sxs-lookup"><span data-stu-id="4df9e-312">Each time you call this method, it replaces the existing switch settings.</span></span> <span data-ttu-id="4df9e-313">若要清除的設定值，指定`null`針對`switches`參數。</span><span class="sxs-lookup"><span data-stu-id="4df9e-313">To erase the settings, specify `null` for the `switches` parameter.</span></span>  
  
 <span data-ttu-id="4df9e-314">為所提供的字串值的集合`switches`可以是簡單的字串陣列，因為陣列實作<xref:System.Collections.IEnumerable>介面。</span><span class="sxs-lookup"><span data-stu-id="4df9e-314">The set of string values you provide for `switches` can be a simple string array, because arrays implement the <xref:System.Collections.IEnumerable> interface.</span></span>  
  
 <span data-ttu-id="4df9e-315">下表提供可以設定以還原舊版的.NET framework 的行為的相容性參數的範例。</span><span class="sxs-lookup"><span data-stu-id="4df9e-315">The following table provides examples of compatibility switches that can be set to restore the behavior of earlier versions of the .NET Framework.</span></span>  
  
|<span data-ttu-id="4df9e-316">參數</span><span class="sxs-lookup"><span data-stu-id="4df9e-316">Switch</span></span>|<span data-ttu-id="4df9e-317">意義</span><span class="sxs-lookup"><span data-stu-id="4df9e-317">Meaning</span></span>|  
|------------|-------------|  
|<span data-ttu-id="4df9e-318">"NetFx40_LegacySecurityPolicy"</span><span class="sxs-lookup"><span data-stu-id="4df9e-318">"NetFx40_LegacySecurityPolicy"</span></span>|<span data-ttu-id="4df9e-319">程式碼存取安全性 (CAS)[!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)]啟用此應用程式定義域中。</span><span class="sxs-lookup"><span data-stu-id="4df9e-319">Code access security (CAS) for the [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] is enabled in this application domain.</span></span> <span data-ttu-id="4df9e-320">請參閱[ &lt;NetFx40_LegacySecurityPolicy&gt;項目](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md)。</span><span class="sxs-lookup"><span data-stu-id="4df9e-320">See [&lt;NetFx40_LegacySecurityPolicy&gt; Element](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md).</span></span>|  
|<span data-ttu-id="4df9e-321">"NetFx40_Legacy20SortingBehavior"</span><span class="sxs-lookup"><span data-stu-id="4df9e-321">"NetFx40_Legacy20SortingBehavior"</span></span>|<span data-ttu-id="4df9e-322">排序的預設值的字串[!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)]這個應用程式定義域中已啟用。</span><span class="sxs-lookup"><span data-stu-id="4df9e-322">String sorting defaults for the [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] are enabled in this application domain.</span></span> <span data-ttu-id="4df9e-323">已成功還原舊版排序行為也需要在本機系統上提供的 sort00001000.dll 動態連結程式庫。</span><span class="sxs-lookup"><span data-stu-id="4df9e-323">Successfully restoring legacy sorting behavior also requires the sort00001000.dll dynamic link library to be available on the local system.</span></span> <span data-ttu-id="4df9e-324">請參閱[ &lt;CompatSortNLSVersion&gt;項目](~/docs/framework/configure-apps/file-schema/runtime/compatsortnlsversion-element.md)。</span><span class="sxs-lookup"><span data-stu-id="4df9e-324">See [&lt;CompatSortNLSVersion&gt; Element](~/docs/framework/configure-apps/file-schema/runtime/compatsortnlsversion-element.md).</span></span>|  
|<span data-ttu-id="4df9e-325">"NetFx40_Legacy40SortingBehavior"</span><span class="sxs-lookup"><span data-stu-id="4df9e-325">"NetFx40_Legacy40SortingBehavior"</span></span>|<span data-ttu-id="4df9e-326">排序的預設值的字串[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]和 Unicode 5.0 會啟用此應用程式定義域中。</span><span class="sxs-lookup"><span data-stu-id="4df9e-326">String sorting defaults for the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] and Unicode 5.0 are enabled in this application domain.</span></span> <span data-ttu-id="4df9e-327">已成功還原舊版排序行為時，也會需要 sort00060101.dll 動態連結程式庫，可在本機系統上。</span><span class="sxs-lookup"><span data-stu-id="4df9e-327">Successfully restoring legacy sorting behavior also requires the sort00060101.dll dynamic link library to be available on the local system.</span></span>|  
|<span data-ttu-id="4df9e-328">"NetFx40_TimeSpanLegacyFormatMode"</span><span class="sxs-lookup"><span data-stu-id="4df9e-328">"NetFx40_TimeSpanLegacyFormatMode"</span></span>|<span data-ttu-id="4df9e-329"><xref:System.TimeSpan> 格式化行為的[!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)]啟用此應用程式定義域中。</span><span class="sxs-lookup"><span data-stu-id="4df9e-329"><xref:System.TimeSpan> formatting behavior for the [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] is enabled in this application domain.</span></span> <span data-ttu-id="4df9e-330">請參閱[ &lt;TimeSpan_LegacyFormatMode&gt;項目](~/docs/framework/configure-apps/file-schema/runtime/timespan-legacyformatmode-element.md)和 「 還原舊版 TimeSpan 格式化 」 一節的<xref:System.TimeSpan>主題。</span><span class="sxs-lookup"><span data-stu-id="4df9e-330">See [&lt;TimeSpan_LegacyFormatMode&gt; Element](~/docs/framework/configure-apps/file-schema/runtime/timespan-legacyformatmode-element.md) and the "Restoring Legacy TimeSpan Formatting" section of the <xref:System.TimeSpan> topic.</span></span>|  
|<span data-ttu-id="4df9e-331">"UseRandomizedStringHashAlgorithm"</span><span class="sxs-lookup"><span data-stu-id="4df9e-331">"UseRandomizedStringHashAlgorithm"</span></span>|<span data-ttu-id="4df9e-332">執行階段計算字串的雜湊碼在每個應用程式定義域為基準，而不是使用單一的雜湊演算法可跨應用程式定義域產生一致雜湊碼。</span><span class="sxs-lookup"><span data-stu-id="4df9e-332">The runtime calculates hash codes for strings on a per application domain basis instead of using a single hashing algorithm that produces a consistent hash code across application domains.</span></span> <span data-ttu-id="4df9e-333">請參閱[ &lt;UseRandomizedStringHashAlgorithm&gt;項目](~/docs/framework/configure-apps/file-schema/runtime/userandomizedstringhashalgorithm-element.md)。</span><span class="sxs-lookup"><span data-stu-id="4df9e-333">See [&lt;UseRandomizedStringHashAlgorithm&gt; Element](~/docs/framework/configure-apps/file-schema/runtime/userandomizedstringhashalgorithm-element.md).</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.AppDomain.IsCompatibilitySwitchSet(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SetConfigurationBytes">
      <MemberSignature Language="C#" Value="public void SetConfigurationBytes (byte[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetConfigurationBytes(unsigned int8[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomainSetup.SetConfigurationBytes(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetConfigurationBytes (value As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetConfigurationBytes(cli::array &lt;System::Byte&gt; ^ value);" />
      <MemberSignature Language="F#" Value="member this.SetConfigurationBytes : byte[] -&gt; unit" Usage="appDomainSetup.SetConfigurationBytes value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4df9e-334">An array that contains the XML configuration information to be used for the application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-334">An array that contains the XML configuration information to be used for the application domain.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4df9e-335">Provides XML configuration information for the application domain, replacing the application's XML configuration information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-335">Provides XML configuration information for the application domain, replacing the application's XML configuration information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4df9e-336"><xref:System.AppDomainSetup.SetConfigurationBytes%2A>方法可用來取代建立新的應用程式定義域的應用程式的組態資訊。</span><span class="sxs-lookup"><span data-stu-id="4df9e-336">The <xref:System.AppDomainSetup.SetConfigurationBytes%2A> method provides a way to replace the configuration information of an application that creates a new application domain.</span></span> <span data-ttu-id="4df9e-337">中的設定檔資訊`value`取代應用程式的設定檔資訊。</span><span class="sxs-lookup"><span data-stu-id="4df9e-337">The configuration file information in `value` replaces the configuration file information for the application.</span></span> <span data-ttu-id="4df9e-338">比方說，當 Example.exe 應用程式建立新的應用程式定義域時，它可以取代原本取自 Example.exe.config 檔案的組態資訊。</span><span class="sxs-lookup"><span data-stu-id="4df9e-338">For example, when the Example.exe application creates a new application domain, it can replace the configuration information originally obtained from the Example.exe.config file.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4df9e-339">部分的設定檔資訊的取用者不會使用儲存的資訊<xref:System.AppDomainSetup.SetConfigurationBytes%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="4df9e-339">Some consumers of configuration file information do not use the information stored by the <xref:System.AppDomainSetup.SetConfigurationBytes%2A> method.</span></span> <span data-ttu-id="4df9e-340">執行階段不會強制這。</span><span class="sxs-lookup"><span data-stu-id="4df9e-340">The runtime does not enforce this.</span></span> <span data-ttu-id="4df9e-341">若要確保所有的設定檔資訊會取代新的應用程式定義域中，使用<xref:System.AppDomainSetup.ConfigurationFile%2A>屬性來指定組態檔。</span><span class="sxs-lookup"><span data-stu-id="4df9e-341">To ensure that all configuration file information is replaced in a new application domain, use the <xref:System.AppDomainSetup.ConfigurationFile%2A> property to specify a configuration file.</span></span> <span data-ttu-id="4df9e-342"><xref:System.AppDomainSetup.SetConfigurationBytes%2A>方法，並會影響組件繫結。</span><span class="sxs-lookup"><span data-stu-id="4df9e-342">The <xref:System.AppDomainSetup.SetConfigurationBytes%2A> method does affect assembly binding.</span></span>  
  
 <span data-ttu-id="4df9e-343">中的 XML`value`等同於在一般組態檔中，XML 不同之處在於它會儲存為<xref:System.Byte>陣列。</span><span class="sxs-lookup"><span data-stu-id="4df9e-343">The XML in `value` is the same as the XML in a normal configuration file, except that it is stored as a <xref:System.Byte> array.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetNativeFunction">
      <MemberSignature Language="C#" Value="public void SetNativeFunction (string functionName, int functionVersion, IntPtr functionPointer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetNativeFunction(string functionName, int32 functionVersion, native int functionPointer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomainSetup.SetNativeFunction(System.String,System.Int32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetNativeFunction (functionName As String, functionVersion As Integer, functionPointer As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetNativeFunction(System::String ^ functionName, int functionVersion, IntPtr functionPointer);" />
      <MemberSignature Language="F#" Value="member this.SetNativeFunction : string * int * nativeint -&gt; unit" Usage="appDomainSetup.SetNativeFunction (functionName, functionVersion, functionPointer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="functionName" Type="System.String" />
        <Parameter Name="functionVersion" Type="System.Int32" />
        <Parameter Name="functionPointer" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="functionName">
          <span data-ttu-id="4df9e-344">The name of the string comparison function to override.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-344">The name of the string comparison function to override.</span>
          </span>
        </param>
        <param name="functionVersion">
          <span data-ttu-id="4df9e-345">The function version.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-345">The function version.</span>
          </span>
          <span data-ttu-id="4df9e-346">For [!INCLUDE[net_v45](~/includes/net-v45-md.md)], its value must be 1 or greater.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-346">For [!INCLUDE[net_v45](~/includes/net-v45-md.md)], its value must be 1 or greater.</span>
          </span>
        </param>
        <param name="functionPointer">
          <span data-ttu-id="4df9e-347">A pointer to the function that overrides <c>functionName</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-347">A pointer to the function that overrides <c>functionName</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4df9e-348">Provides the common language runtime with an alternate implementation of a string comparison function.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-348">Provides the common language runtime with an alternate implementation of a string comparison function.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4df9e-349">下列的字串比較和排序方法可以覆寫<xref:System.AppDomainSetup.SetNativeFunction%2A>方法：</span><span class="sxs-lookup"><span data-stu-id="4df9e-349">The following string comparison and sorting methods can be overridden by the <xref:System.AppDomainSetup.SetNativeFunction%2A> method:</span></span>  
  
-   `IsNLSDefinedString`  
  
-   `CompareStringEx`  
  
-   `LCMapStringEx`  
  
-   `FindNLSStringEx`  
  
-   `CompareStringOrdinal`  
  
-   `GetNLSVersion`  
  
 <span data-ttu-id="4df9e-350">如需這些函式的詳細資訊，請參閱[國家語言支援函式](http://go.microsoft.com/fwlink/?LinkId=228134)。</span><span class="sxs-lookup"><span data-stu-id="4df9e-350">For information about these functions, see [National Language Support Functions](http://go.microsoft.com/fwlink/?LinkId=228134).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4df9e-351">
            <paramref name="functionName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-351">
              <paramref name="functionName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4df9e-352">
            <paramref name="functionVersion" /> is not 1 or greater.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-352">
              <paramref name="functionVersion" /> is not 1 or greater.</span>
          </span>
          <span data-ttu-id="4df9e-353">-or-  <paramref name="functionPointer" /> is <see cref="F:System.IntPtr.Zero" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-353">-or-  <paramref name="functionPointer" /> is <see cref="F:System.IntPtr.Zero" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="4df9e-354">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-354">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="4df9e-355">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-355">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ShadowCopyDirectories">
      <MemberSignature Language="C#" Value="public string ShadowCopyDirectories { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ShadowCopyDirectories" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.ShadowCopyDirectories" />
      <MemberSignature Language="VB.NET" Value="Public Property ShadowCopyDirectories As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ShadowCopyDirectories { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ShadowCopyDirectories : string with get, set" Usage="System.AppDomainSetup.ShadowCopyDirectories" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAppDomainSetup.ShadowCopyDirectories</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4df9e-356">Gets or sets the names of the directories containing assemblies to be shadow copied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-356">Gets or sets the names of the directories containing assemblies to be shadow copied.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4df9e-357">以分號分隔的目錄名稱清單。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-357">A list of directory names separated by semicolons.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4df9e-358">啟用陰影複製時，預設值是要透過探查; 找到的所有組件的陰影複製也就是指定的目錄中由<xref:System.AppDomainSetup.PrivateBinPath%2A>和<xref:System.AppDomainSetup.ApplicationBase%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="4df9e-358">When shadow copying is enabled, the default is to shadow copy all assemblies found through probing; that is, in the directories specified by the <xref:System.AppDomainSetup.PrivateBinPath%2A> and <xref:System.AppDomainSetup.ApplicationBase%2A> properties.</span></span> <span data-ttu-id="4df9e-359"><xref:System.AppDomainSetup.ShadowCopyDirectories%2A>屬性會限制所指定的目錄中的組件陰影複製<xref:System.AppDomainSetup.ShadowCopyDirectories%2A>。</span><span class="sxs-lookup"><span data-stu-id="4df9e-359">The <xref:System.AppDomainSetup.ShadowCopyDirectories%2A> property restricts the shadow copy to the assemblies in the directories specified by <xref:System.AppDomainSetup.ShadowCopyDirectories%2A>.</span></span>  
  
 <span data-ttu-id="4df9e-360">如果您不指派字串給 <xref:System.AppDomainSetup.ShadowCopyDirectories%2A> 屬性，或如果您將這個屬性設定為 `null`，則會陰影複製 <xref:System.AppDomainSetup.ApplicationBase%2A> 和 <xref:System.AppDomainSetup.PrivateBinPath%2A> 屬性所指定目錄中的所有組件。</span><span class="sxs-lookup"><span data-stu-id="4df9e-360">If you don’t assign a string to the <xref:System.AppDomainSetup.ShadowCopyDirectories%2A> property, or if you set this property to `null`, all assemblies in the directories specified by the <xref:System.AppDomainSetup.ApplicationBase%2A> and <xref:System.AppDomainSetup.PrivateBinPath%2A> properties are shadow copied.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4df9e-361">目錄路徑不可包含分號，因為分號是分隔符號字元。</span><span class="sxs-lookup"><span data-stu-id="4df9e-361">Directory paths must not contain semicolons, because the semicolon is the delimiter character.</span></span> <span data-ttu-id="4df9e-362">分號沒有逸出字元。</span><span class="sxs-lookup"><span data-stu-id="4df9e-362">There is no escape character for semicolons.</span></span>  
  
 <span data-ttu-id="4df9e-363">當陰影複製作用中時，組件檔會複製到另一個位置之前載入的組件。</span><span class="sxs-lookup"><span data-stu-id="4df9e-363">When shadow copying is in effect, assembly files are copied to another location before the assemblies are loaded.</span></span> <span data-ttu-id="4df9e-364">原始的組件檔未鎖定，因此可以更新。</span><span class="sxs-lookup"><span data-stu-id="4df9e-364">The original assembly file is not locked, so it can be updated.</span></span> <span data-ttu-id="4df9e-365">如需有關陰影複製的詳細資訊，請參閱[陰影複製組件](~/docs/framework/app-domains/shadow-copy-assemblies.md)。</span><span class="sxs-lookup"><span data-stu-id="4df9e-365">For more information on shadow copying, see [Shadow Copying Assemblies](~/docs/framework/app-domains/shadow-copy-assemblies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="4df9e-366">用於存取的路徑資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-366">for access to the path information.</span>
          </span>
          <span data-ttu-id="4df9e-367">相關聯的列舉型別： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-367">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          </span>
        </permission>
        <altmember cref="P:System.AppDomainSetup.CachePath" />
        <altmember cref="P:System.AppDomainSetup.ShadowCopyFiles" />
      </Docs>
    </Member>
    <Member MemberName="ShadowCopyFiles">
      <MemberSignature Language="C#" Value="public string ShadowCopyFiles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ShadowCopyFiles" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.ShadowCopyFiles" />
      <MemberSignature Language="VB.NET" Value="Public Property ShadowCopyFiles As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ShadowCopyFiles { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ShadowCopyFiles : string with get, set" Usage="System.AppDomainSetup.ShadowCopyFiles" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAppDomainSetup.ShadowCopyFiles</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4df9e-368">Gets or sets a string that indicates whether shadow copying is turned on or off.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-368">Gets or sets a string that indicates whether shadow copying is turned on or off.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4df9e-369">字串值 "true" 表示陰影複製為開啟，"false" 表示陰影複製為關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-369">The string value "true" to indicate that shadow copying is turned on; or "false" to indicate that shadow copying is turned off.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4df9e-370">如需有關陰影複製的詳細資訊，請參閱[陰影複製組件](~/docs/framework/app-domains/shadow-copy-assemblies.md)。</span><span class="sxs-lookup"><span data-stu-id="4df9e-370">For more information on shadow copying, see [Shadow Copying Assemblies](~/docs/framework/app-domains/shadow-copy-assemblies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.AppDomainSetup.CachePath" />
        <altmember cref="P:System.AppDomainSetup.ShadowCopyDirectories" />
      </Docs>
    </Member>
    <Member MemberName="TargetFrameworkName">
      <MemberSignature Language="C#" Value="public string TargetFrameworkName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TargetFrameworkName" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.TargetFrameworkName" />
      <MemberSignature Language="VB.NET" Value="Public Property TargetFrameworkName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TargetFrameworkName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TargetFrameworkName : string with get, set" Usage="System.AppDomainSetup.TargetFrameworkName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4df9e-371">Gets or sets a string that specifies the target version and profile of the .NET Framework for the application domain, in a format that can be parsed by the <see cref="M:System.Runtime.Versioning.FrameworkName.#ctor(System.String)" /> constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-371">Gets or sets a string that specifies the target version and profile of the .NET Framework for the application domain, in a format that can be parsed by the <see cref="M:System.Runtime.Versioning.FrameworkName.#ctor(System.String)" /> constructor.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4df9e-372">.NET Framework 的目標版本和設定檔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4df9e-372">The target version and profile of the .NET Framework.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4df9e-373">設定這個屬性，以告知目前執行版本的.NET Framework 應用程式定義域會用以載入和執行目標版本和設定檔的已編譯的組件。</span><span class="sxs-lookup"><span data-stu-id="4df9e-373">Set this property to tell the currently running version of the .NET Framework that the application domain will be used to load and run assemblies that have been compiled for the target version and profile.</span></span> <span data-ttu-id="4df9e-374">如果目前執行版本的.NET Framework 有選擇性的行為會影響使用目標版本所編譯的程式碼的相容性，它可以啟用或停用這些行為，視需要以提高相容性。</span><span class="sxs-lookup"><span data-stu-id="4df9e-374">If the currently running version of the .NET Framework has optional behaviors that affect the compatibility of code that was compiled with the target version, it can enable or disable those behaviors, as appropriate, to improve compatibility.</span></span> <span data-ttu-id="4df9e-375">當應用程式支援增益集的個別應用程式定義域中執行它們來使用多個版本的.NET framework 編譯時，這非常有用。</span><span class="sxs-lookup"><span data-stu-id="4df9e-375">This can be useful when an application supports add-ins compiled with multiple versions of the .NET Framework by running them in separate application domains.</span></span>  
  
 <span data-ttu-id="4df9e-376">用戶端應用程式，windows 7<xref:System.AppDomainSetup.TargetFrameworkName%2A>屬性會從推斷<xref:System.Runtime.Versioning.TargetFrameworkAttribute>屬性。</span><span class="sxs-lookup"><span data-stu-id="4df9e-376">For client applications, the value of the <xref:System.AppDomainSetup.TargetFrameworkName%2A> property is inferred from the <xref:System.Runtime.Versioning.TargetFrameworkAttribute> attribute.</span></span> <span data-ttu-id="4df9e-377">在 [!INCLUDE[vs_dev10_long](~/includes/vs-dev10-long-md.md)]和更新版本中，這個屬性會加入至組件會根據專案的設定，自動**目標 Framework**屬性。</span><span class="sxs-lookup"><span data-stu-id="4df9e-377">In [!INCLUDE[vs_dev10_long](~/includes/vs-dev10-long-md.md)] and later, this attribute is added to the assembly automatically based on the setting of the project's **Target Framework** property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>