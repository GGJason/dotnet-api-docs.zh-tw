<Type Name="TypeLoadException" FullName="System.TypeLoadException">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2f0474b82af72386a54b390346468efd9ae22b5f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TypeLoadException : SystemException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit TypeLoadException extends System.SystemException implements class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.TypeLoadException" />
  <TypeSignature Language="VB.NET" Value="Public Class TypeLoadException&#xA;Inherits SystemException" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeLoadException : SystemException" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.SystemException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="b2171-101">當發生類型載入失敗時，所擲回的例外狀況。</span>
      <span class="sxs-lookup">
        <span data-stu-id="b2171-101">The exception that is thrown when type-loading failures occur.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b2171-102"><xref:System.TypeLoadException> common language runtime 找不到組件，組件內的型別，或者無法載入型別時，會擲回。</span><span class="sxs-lookup"><span data-stu-id="b2171-102"><xref:System.TypeLoadException> is thrown when the common language runtime cannot find the assembly, the type within the assembly, or cannot load the type.</span></span> <span data-ttu-id="b2171-103"><xref:System.TypeLoadException.Message%2A>屬性包含可協助您識別例外狀況原因的詳細的資訊。</span><span class="sxs-lookup"><span data-stu-id="b2171-103">The <xref:System.TypeLoadException.Message%2A> property contains more detailed information that can help you identify the cause of the exception.</span></span>  
  
 <span data-ttu-id="b2171-104"><xref:System.TypeLoadException> 會使用 HRESULT COR_E_TYPELOAD，具有 0x80131522 的值。</span><span class="sxs-lookup"><span data-stu-id="b2171-104"><xref:System.TypeLoadException> uses the HRESULT COR_E_TYPELOAD, that has the value 0x80131522.</span></span>  
  
 <span data-ttu-id="b2171-105">如需執行個體的初始屬性值的清單<xref:System.TypeLoadException>，請參閱<xref:System.TypeLoadException.%23ctor%2A>建構函式。</span><span class="sxs-lookup"><span data-stu-id="b2171-105">For a list of initial property values for an instance of <xref:System.TypeLoadException>, see the <xref:System.TypeLoadException.%23ctor%2A> constructors.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Exception" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b2171-106">初始化 <see cref="T:System.TypeLoadException" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2171-106">Initializes a new instance of the <see cref="T:System.TypeLoadException" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeLoadException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TypeLoadException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeLoadException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b2171-107">初始化 <see cref="T:System.TypeLoadException" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2171-107">Initializes a new instance of the <see cref="T:System.TypeLoadException" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b2171-108">這個建構函式初始化<xref:System.TypeLoadException.Message%2A>屬性的新執行個體的系統提供的訊息描述錯誤，例如 「 發生失敗時載入的類型。 」</span><span class="sxs-lookup"><span data-stu-id="b2171-108">This constructor initializes the <xref:System.TypeLoadException.Message%2A> property of the new instance to a system-supplied message that describes the error, such as "A failure has occurred while loading a type."</span></span> <span data-ttu-id="b2171-109">此訊息會考量目前的系統文化特性。</span><span class="sxs-lookup"><span data-stu-id="b2171-109">This message takes into account the current system culture.</span></span>  
  
 <span data-ttu-id="b2171-110">下表顯示 <xref:System.TypeLoadException> 執行個體的初始屬性值。</span><span class="sxs-lookup"><span data-stu-id="b2171-110">The following table shows the initial property values for an instance of <xref:System.TypeLoadException>.</span></span>  
  
|<span data-ttu-id="b2171-111">屬性</span><span class="sxs-lookup"><span data-stu-id="b2171-111">Property</span></span>|<span data-ttu-id="b2171-112">值</span><span class="sxs-lookup"><span data-stu-id="b2171-112">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="b2171-113">null 參考 (在 Visual Basic 中為 `Nothing`)。</span><span class="sxs-lookup"><span data-stu-id="b2171-113">A null reference (`Nothing` in Visual Basic).</span></span>|  
|<xref:System.TypeLoadException.Message%2A>|<span data-ttu-id="b2171-114">當地語系化的錯誤訊息字串。</span><span class="sxs-lookup"><span data-stu-id="b2171-114">The localized error message string.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeLoadException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TypeLoadException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeLoadException(System::String ^ message);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="b2171-115">描述錯誤的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2171-115">The message that describes the error.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b2171-116">使用指定的錯誤訊息，初始化 <see cref="T:System.TypeLoadException" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2171-116">Initializes a new instance of the <see cref="T:System.TypeLoadException" /> class with a specified error message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b2171-117">內容`message`參數應該是讓使用者能夠讀懂。</span><span class="sxs-lookup"><span data-stu-id="b2171-117">The content of the `message` parameter should be understandable to the user.</span></span> <span data-ttu-id="b2171-118">這個建構函式的呼叫端必須確保這個字串已經被當地語系化 (為了目前系統的文化特性)。</span><span class="sxs-lookup"><span data-stu-id="b2171-118">The caller of this constructor is required to ensure that this string has been localized for the current system culture.</span></span>  
  
 <span data-ttu-id="b2171-119">下表顯示 <xref:System.TypeLoadException> 執行個體的初始屬性值。</span><span class="sxs-lookup"><span data-stu-id="b2171-119">The following table shows the initial property values for an instance of <xref:System.TypeLoadException>.</span></span>  
  
|<span data-ttu-id="b2171-120">屬性</span><span class="sxs-lookup"><span data-stu-id="b2171-120">Property</span></span>|<span data-ttu-id="b2171-121">值</span><span class="sxs-lookup"><span data-stu-id="b2171-121">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="b2171-122">null 參考 (在 Visual Basic 中為 `Nothing`)。</span><span class="sxs-lookup"><span data-stu-id="b2171-122">A null reference (`Nothing` in Visual Basic).</span></span>|  
|<xref:System.TypeLoadException.Message%2A>|<span data-ttu-id="b2171-123">錯誤訊息字串。</span><span class="sxs-lookup"><span data-stu-id="b2171-123">The error message string.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b2171-124">下列程式碼範例示範<xref:System.TypeLoadException.%23ctor%28System.String%29>建構函式。</span><span class="sxs-lookup"><span data-stu-id="b2171-124">The following code example demonstrates the <xref:System.TypeLoadException.%23ctor%28System.String%29> constructor.</span></span> <span data-ttu-id="b2171-125">它包含一個方法，會產生<xref:System.TypeLoadException>使用自訂訊息，以及顯示錯誤訊息至主控台。</span><span class="sxs-lookup"><span data-stu-id="b2171-125">It contains a method that generates a <xref:System.TypeLoadException> with a custom message, and displays the error message to the console.</span></span>  
  
 [!code-cpp[TypeLoadException_Constructor2#1](~/samples/snippets/cpp/VS_Snippets_CLR/TypeLoadException_Constructor2/CPP/typeloadexception_constructor2.cpp#1)]
 [!code-csharp[TypeLoadException_Constructor2#1](~/samples/snippets/csharp/VS_Snippets_CLR/TypeLoadException_Constructor2/CS/typeloadexception_constructor2.cs#1)]
 [!code-vb[TypeLoadException_Constructor2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/TypeLoadException_Constructor2/VB/typeloadexception_constructor2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TypeLoadException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TypeLoadException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TypeLoadException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="b2171-126">存放序列物件資料的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2171-126">The object that holds the serialized object data.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="b2171-127">關於來源或目的端的內容資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2171-127">The contextual information about the source or destination.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b2171-128">使用序列化資料，初始化 <see cref="T:System.TypeLoadException" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2171-128">Initializes a new instance of the <see cref="T:System.TypeLoadException" /> class with serialized data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b2171-129">進行還原序列化 (Deserialization) 期間會呼叫這個建構函式，以便重新構成經由資料流傳送的例外狀況物件。</span><span class="sxs-lookup"><span data-stu-id="b2171-129">This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</span></span> <span data-ttu-id="b2171-130">如需詳細資訊，請參閱[XML 和 SOAP 序列化](~/docs/standard/serialization/xml-and-soap-serialization.md)。</span><span class="sxs-lookup"><span data-stu-id="b2171-130">For more information, see [XML and SOAP Serialization](~/docs/standard/serialization/xml-and-soap-serialization.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b2171-131">下列範例會產生例外狀況，和例外狀況將資料序列化至檔案，並再重新組成例外狀況。</span><span class="sxs-lookup"><span data-stu-id="b2171-131">The following example generates an exception, and serializes the exception data to a file, and then reconstitutes the exception.</span></span> <span data-ttu-id="b2171-132">若要執行此程式碼範例，您必須提供完整的組件名稱。</span><span class="sxs-lookup"><span data-stu-id="b2171-132">For this code example to run, you must provide the fully qualified assembly name.</span></span> <span data-ttu-id="b2171-133">如需如何取得完整組件名稱資訊，請參閱[組件名稱](~/docs/framework/app-domains/assembly-names.md)。</span><span class="sxs-lookup"><span data-stu-id="b2171-133">For information about how to obtain the fully qualified assembly name, see [Assembly Names](~/docs/framework/app-domains/assembly-names.md).</span></span>  
  
 [!code-cpp[TypeLoadException_GetObjectData#1](~/samples/snippets/cpp/VS_Snippets_CLR/TypeLoadException_GetObjectData/CPP/typeloadexception_getobjectdata.cpp#1)]
 [!code-csharp[TypeLoadException_GetObjectData#1](~/samples/snippets/csharp/VS_Snippets_CLR/TypeLoadException_GetObjectData/CS/typeloadexception_getobjectdata.cs#1)]
 [!code-vb[TypeLoadException_GetObjectData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/TypeLoadException_GetObjectData/VB/typeloadexception_getobjectdata.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b2171-134">
            <paramref name="info" /> 物件為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2171-134">The <paramref name="info" /> object is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeLoadException (string message, Exception inner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception inner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TypeLoadException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, inner As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeLoadException(System::String ^ message, Exception ^ inner);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="inner" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="b2171-135">解釋例外狀況原因的錯誤訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2171-135">The error message that explains the reason for the exception.</span>
          </span>
        </param>
        <param name="inner">
          <span data-ttu-id="b2171-136">做為目前例外狀況發生原因的例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2171-136">The exception that is the cause of the current exception.</span>
          </span>
          <span data-ttu-id="b2171-137">如果 <c>inner</c> 參數不是 <see langword="null" />，則目前的例外狀況會在處理內部例外狀況的 <see langword="catch" /> 區塊中引發。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2171-137">If the <c>inner</c> parameter is not <see langword="null" />, the current exception is raised in a <see langword="catch" /> block that handles the inner exception.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b2171-138">使用指定的錯誤訊息以及造成此例外狀況的內部例外狀況的參考，初始化 <see cref="T:System.TypeLoadException" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2171-138">Initializes a new instance of the <see cref="T:System.TypeLoadException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b2171-139">直接因為前一個例外狀況而擲回的例外狀況可能包含對 <xref:System.Exception.InnerException%2A> 屬性中前一個例外狀況的參考。</span><span class="sxs-lookup"><span data-stu-id="b2171-139">An exception that is thrown as a direct result of a previous exception can include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property.</span></span> <span data-ttu-id="b2171-140"><xref:System.Exception.InnerException%2A> 屬性會傳回與傳入建構函式中相同的值；如果 `null` 屬性沒有提供內部例外值給建構函式，則傳回 <xref:System.Exception.InnerException%2A>。</span><span class="sxs-lookup"><span data-stu-id="b2171-140">The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.</span></span>  
  
 <span data-ttu-id="b2171-141">下表顯示 <xref:System.TypeLoadException> 執行個體的初始屬性值。</span><span class="sxs-lookup"><span data-stu-id="b2171-141">The following table shows the initial property values for an instance of <xref:System.TypeLoadException>.</span></span>  
  
|<span data-ttu-id="b2171-142">屬性</span><span class="sxs-lookup"><span data-stu-id="b2171-142">Property</span></span>|<span data-ttu-id="b2171-143">值</span><span class="sxs-lookup"><span data-stu-id="b2171-143">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="b2171-144">內部例外狀況參考。</span><span class="sxs-lookup"><span data-stu-id="b2171-144">The inner exception reference.</span></span>|  
|<xref:System.TypeLoadException.Message%2A>|<span data-ttu-id="b2171-145">錯誤訊息字串。</span><span class="sxs-lookup"><span data-stu-id="b2171-145">The error message string.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b2171-146">下列程式碼範例示範<xref:System.TypeLoadException.%23ctor%28System.String%2CSystem.Exception%29>建構函式。</span><span class="sxs-lookup"><span data-stu-id="b2171-146">The following code example demonstrates the <xref:System.TypeLoadException.%23ctor%28System.String%2CSystem.Exception%29> constructor.</span></span> <span data-ttu-id="b2171-147">它包含一個方法，會產生<xref:System.TypeLoadException>、 攔截該例外狀況，並擲回新<xref:System.TypeLoadException>自訂訊息，包括原始<xref:System.TypeLoadException>做內部例外狀況。</span><span class="sxs-lookup"><span data-stu-id="b2171-147">It contains a method that generates a <xref:System.TypeLoadException>, catches that exception, and throws a new <xref:System.TypeLoadException> with a custom message, including the original <xref:System.TypeLoadException> as the inner exception.</span></span>  
  
 [!code-cpp[TypeLoadException_Constructor3#1](~/samples/snippets/cpp/VS_Snippets_CLR/TypeLoadException_Constructor3/CPP/typeloadexception_constructor3.cpp#1)]
 [!code-csharp[TypeLoadException_Constructor3#1](~/samples/snippets/csharp/VS_Snippets_CLR/TypeLoadException_Constructor3/CS/typeloadexception_constructor3.cs#1)]
 [!code-vb[TypeLoadException_Constructor3#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/TypeLoadException_Constructor3/VB/typeloadexception_constructor3.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Exception" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TypeLoadException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="b2171-148">存放序列物件資料的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2171-148">The object that holds the serialized object data.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="b2171-149">關於來源或目的端的內容資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2171-149">The contextual information about the source or destination.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b2171-150">使用類別名稱、方法名稱、資源 ID 和額外的例外狀況資訊，來設定 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2171-150">Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with the class name, method name, resource ID, and additional exception information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b2171-151"><xref:System.TypeLoadException.GetObjectData%2A> 會使用所有指定要序列化的例外狀況物件資料來設定 <xref:System.Runtime.Serialization.SerializationInfo>。</span><span class="sxs-lookup"><span data-stu-id="b2171-151"><xref:System.TypeLoadException.GetObjectData%2A> sets a <xref:System.Runtime.Serialization.SerializationInfo> with all the exception object data targeted for serialization.</span></span> <span data-ttu-id="b2171-152">還原序列化期間的例外狀況物件重新組成從<xref:System.Runtime.Serialization.SerializationInfo>資料流上傳輸。</span><span class="sxs-lookup"><span data-stu-id="b2171-152">During deserialization, the exception object is reconstituted from the <xref:System.Runtime.Serialization.SerializationInfo> transmitted over the stream.</span></span>  
  
 <span data-ttu-id="b2171-153">如需詳細資訊，請參閱[XML 和 SOAP 序列化](~/docs/standard/serialization/xml-and-soap-serialization.md)。</span><span class="sxs-lookup"><span data-stu-id="b2171-153">For more information, see [XML and SOAP Serialization](~/docs/standard/serialization/xml-and-soap-serialization.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b2171-154">[Visual Basic、 C#]</span><span class="sxs-lookup"><span data-stu-id="b2171-154">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="b2171-155">下列範例會產生例外狀況，和例外狀況將資料序列化至檔案，並再重新組成例外狀況。</span><span class="sxs-lookup"><span data-stu-id="b2171-155">The following example generates an exception, and serializes the exception data to a file, and then reconstitutes the exception.</span></span> <span data-ttu-id="b2171-156">若要執行此程式碼範例，您必須提供完整的組件名稱。</span><span class="sxs-lookup"><span data-stu-id="b2171-156">For this code example to run, you must provide the fully qualified assembly name.</span></span> <span data-ttu-id="b2171-157">如需如何取得完整組件名稱資訊，請參閱[組件名稱](~/docs/framework/app-domains/assembly-names.md)。</span><span class="sxs-lookup"><span data-stu-id="b2171-157">For information about how to obtain the fully qualified assembly name, see [Assembly Names](~/docs/framework/app-domains/assembly-names.md).</span></span>  
  
 [!code-cpp[TypeLoadException_GetObjectData#1](~/samples/snippets/cpp/VS_Snippets_CLR/TypeLoadException_GetObjectData/CPP/typeloadexception_getobjectdata.cpp#1)]
 [!code-csharp[TypeLoadException_GetObjectData#1](~/samples/snippets/csharp/VS_Snippets_CLR/TypeLoadException_GetObjectData/CS/typeloadexception_getobjectdata.cs#1)]
 [!code-vb[TypeLoadException_GetObjectData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/TypeLoadException_GetObjectData/VB/typeloadexception_getobjectdata.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b2171-158">
            <paramref name="info" /> 物件為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2171-158">The <paramref name="info" /> object is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="b2171-159">需要完全信任立即呼叫者。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2171-159">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="b2171-160">這個成員無法供部分信任或安全性透明程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2171-160">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public override string Message { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Message" />
      <MemberSignature Language="DocId" Value="P:System.TypeLoadException.Message" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Message As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Message { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b2171-161">取得這個例外狀況的錯誤訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2171-161">Gets the error message for this exception.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b2171-162">錯誤訊息字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2171-162">The error message string.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b2171-163">這個屬性會覆寫<xref:System.Exception.Message%2A>。</span><span class="sxs-lookup"><span data-stu-id="b2171-163">This property overrides <xref:System.Exception.Message%2A>.</span></span> <span data-ttu-id="b2171-164">應該當地語系化的錯誤訊息。</span><span class="sxs-lookup"><span data-stu-id="b2171-164">The error message should be localized.</span></span>  
  
 <span data-ttu-id="b2171-165">這個屬性是唯讀的。</span><span class="sxs-lookup"><span data-stu-id="b2171-165">This property is read-only.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b2171-166">下列範例會嘗試載入的 mscorlib 組件不存在型別。</span><span class="sxs-lookup"><span data-stu-id="b2171-166">The following example attempts to load a non-existent type from the mscorlib assembly.</span></span> <span data-ttu-id="b2171-167">產生的例外狀況時，而<xref:System.TypeLoadException.TypeName%2A>和<xref:System.TypeLoadException.Message%2A>顯示值。</span><span class="sxs-lookup"><span data-stu-id="b2171-167">The resulting exception is caught, and the <xref:System.TypeLoadException.TypeName%2A> and <xref:System.TypeLoadException.Message%2A> values are displayed.</span></span> <span data-ttu-id="b2171-168">若要執行此程式碼範例，您必須提供完整的組件名稱。</span><span class="sxs-lookup"><span data-stu-id="b2171-168">For this code example to run, you must provide the fully qualified assembly name.</span></span> <span data-ttu-id="b2171-169">如需如何取得完整組件名稱資訊，請參閱[組件名稱](~/docs/framework/app-domains/assembly-names.md)。</span><span class="sxs-lookup"><span data-stu-id="b2171-169">For information about how to obtain the fully qualified assembly name, see [Assembly Names](~/docs/framework/app-domains/assembly-names.md).</span></span>  
  
 [!code-cpp[TypeLoadException_TypeName#1](~/samples/snippets/cpp/VS_Snippets_CLR/TypeLoadException_TypeName/CPP/typeloadexception_typename.cpp#1)]
 [!code-csharp[TypeLoadException_TypeName#1](~/samples/snippets/csharp/VS_Snippets_CLR/TypeLoadException_TypeName/CS/typeloadexception_typename.cs#1)]
 [!code-vb[TypeLoadException_TypeName#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/TypeLoadException_TypeName/VB/typeloadexception_typename.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public string TypeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeName" />
      <MemberSignature Language="DocId" Value="P:System.TypeLoadException.TypeName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TypeName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b2171-170">取得造成例外狀況的類型完整名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2171-170">Gets the fully qualified name of the type that causes the exception.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b2171-171">完整類型名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2171-171">The fully qualified type name.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b2171-172">下列範例會嘗試載入的 mscorlib 組件不存在型別。</span><span class="sxs-lookup"><span data-stu-id="b2171-172">The following example attempts to load a non-existent type from the mscorlib assembly.</span></span> <span data-ttu-id="b2171-173">產生的例外狀況時，而<xref:System.TypeLoadException.TypeName%2A>和<xref:System.TypeLoadException.Message%2A>顯示值。</span><span class="sxs-lookup"><span data-stu-id="b2171-173">The resulting exception is caught, and the <xref:System.TypeLoadException.TypeName%2A> and <xref:System.TypeLoadException.Message%2A> values are displayed.</span></span> <span data-ttu-id="b2171-174">若要執行此程式碼範例，您必須提供完整的組件名稱。</span><span class="sxs-lookup"><span data-stu-id="b2171-174">For this code example to run, you must provide the fully qualified assembly name.</span></span> <span data-ttu-id="b2171-175">如需如何取得完整組件名稱資訊，請參閱[組件名稱](~/docs/framework/app-domains/assembly-names.md)。</span><span class="sxs-lookup"><span data-stu-id="b2171-175">For information about how to obtain the fully qualified assembly name, see [Assembly Names](~/docs/framework/app-domains/assembly-names.md).</span></span>  
  
 [!code-cpp[TypeLoadException_TypeName#1](~/samples/snippets/cpp/VS_Snippets_CLR/TypeLoadException_TypeName/CPP/typeloadexception_typename.cpp#1)]
 [!code-csharp[TypeLoadException_TypeName#1](~/samples/snippets/csharp/VS_Snippets_CLR/TypeLoadException_TypeName/CS/typeloadexception_typename.cs#1)]
 [!code-vb[TypeLoadException_TypeName#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/TypeLoadException_TypeName/VB/typeloadexception_typename.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="b2171-176">在覆寫<see cref="P:System.TypeLoadException.TypeName" />在衍生類別中，請務必呼叫基底類別的<see cref="P:System.TypeLoadException.TypeName" />屬性。</span>
            <span class="sxs-lookup">
              <span data-stu-id="b2171-176">When overriding <see cref="P:System.TypeLoadException.TypeName" /> in a derived class, be sure to call the base class's <see cref="P:System.TypeLoadException.TypeName" /> property.</span>
            </span>
            <span data-ttu-id="b2171-177">這個屬性是唯讀的。</span>
            <span class="sxs-lookup">
              <span data-stu-id="b2171-177">This property is read-only.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>