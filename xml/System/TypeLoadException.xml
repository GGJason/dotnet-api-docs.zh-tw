<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="TypeLoadException.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac52f0474b82af72386a54b390346468efd9ae22b5f.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2f0474b82af72386a54b390346468efd9ae22b5f</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.TypeLoadException">
          <source>The exception that is thrown when type-loading failures occur.</source>
          <target state="translated">當發生類型載入失敗時，所擲回的例外狀況。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeLoadException">
          <source><ph id="ph1">&lt;xref:System.TypeLoadException&gt;</ph> is thrown when the common language runtime cannot find the assembly, the type within the assembly, or cannot load the type.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.TypeLoadException&gt;</ph> common language runtime 找不到組件，組件內的型別，或者無法載入型別時，會擲回。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeLoadException">
          <source>The <ph id="ph1">&lt;xref:System.TypeLoadException.Message%2A&gt;</ph> property contains more detailed information that can help you identify the cause of the exception.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.TypeLoadException.Message%2A&gt;</ph>屬性包含可協助您識別例外狀況原因的詳細的資訊。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeLoadException">
          <source><ph id="ph1">&lt;xref:System.TypeLoadException&gt;</ph> uses the HRESULT COR_E_TYPELOAD, that has the value 0x80131522.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.TypeLoadException&gt;</ph> 會使用 HRESULT COR_E_TYPELOAD，具有 0x80131522 的值。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeLoadException">
          <source>For a list of initial property values for an instance of <ph id="ph1">&lt;xref:System.TypeLoadException&gt;</ph>, see the <ph id="ph2">&lt;xref:System.TypeLoadException.%23ctor%2A&gt;</ph> constructors.</source>
          <target state="translated">如需執行個體的初始屬性值的清單<ph id="ph1">&lt;xref:System.TypeLoadException&gt;</ph>，請參閱<ph id="ph2">&lt;xref:System.TypeLoadException.%23ctor%2A&gt;</ph>建構函式。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="T:System.TypeLoadException">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.TypeLoadException" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.TypeLoadException" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.TypeLoadException.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.TypeLoadException" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.TypeLoadException" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TypeLoadException.#ctor">
          <source>This constructor initializes the <ph id="ph1">&lt;xref:System.TypeLoadException.Message%2A&gt;</ph> property of the new instance to a system-supplied message that describes the error, such as "A failure has occurred while loading a type."</source>
          <target state="translated">這個建構函式初始化<ph id="ph1">&lt;xref:System.TypeLoadException.Message%2A&gt;</ph>屬性的新執行個體的系統提供的訊息描述錯誤，例如 「 發生失敗時載入的類型。 」</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TypeLoadException.#ctor">
          <source>This message takes into account the current system culture.</source>
          <target state="translated">此訊息會考量目前的系統文化特性。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TypeLoadException.#ctor">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.TypeLoadException&gt;</ph>.</source>
          <target state="translated">下表顯示 <ph id="ph1">&lt;xref:System.TypeLoadException&gt;</ph> 執行個體的初始屬性值。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TypeLoadException.#ctor">
          <source>Property</source>
          <target state="translated">屬性</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TypeLoadException.#ctor">
          <source>Value</source>
          <target state="translated">值</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TypeLoadException.#ctor">
          <source>A null reference (<ph id="ph1">`Nothing`</ph> in Visual Basic).</source>
          <target state="translated">null 參考 (在 Visual Basic 中為 <ph id="ph1">`Nothing`</ph>)。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TypeLoadException.#ctor">
          <source>The localized error message string.</source>
          <target state="translated">當地語系化的錯誤訊息字串。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.TypeLoadException.#ctor(System.String)">
          <source>The message that describes the error.</source>
          <target state="translated">描述錯誤的訊息。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.TypeLoadException.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.TypeLoadException" /&gt;</ph> class with a specified error message.</source>
          <target state="translated">使用指定的錯誤訊息，初始化 <ph id="ph1">&lt;see cref="T:System.TypeLoadException" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TypeLoadException.#ctor(System.String)">
          <source>The content of the <ph id="ph1">`message`</ph> parameter should be understandable to the user.</source>
          <target state="translated">內容<ph id="ph1">`message`</ph>參數應該是讓使用者能夠讀懂。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TypeLoadException.#ctor(System.String)">
          <source>The caller of this constructor is required to ensure that this string has been localized for the current system culture.</source>
          <target state="translated">這個建構函式的呼叫端必須確保這個字串已經被當地語系化 (為了目前系統的文化特性)。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TypeLoadException.#ctor(System.String)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.TypeLoadException&gt;</ph>.</source>
          <target state="translated">下表顯示 <ph id="ph1">&lt;xref:System.TypeLoadException&gt;</ph> 執行個體的初始屬性值。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TypeLoadException.#ctor(System.String)">
          <source>Property</source>
          <target state="translated">屬性</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TypeLoadException.#ctor(System.String)">
          <source>Value</source>
          <target state="translated">值</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TypeLoadException.#ctor(System.String)">
          <source>A null reference (<ph id="ph1">`Nothing`</ph> in Visual Basic).</source>
          <target state="translated">null 參考 (在 Visual Basic 中為 <ph id="ph1">`Nothing`</ph>)。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TypeLoadException.#ctor(System.String)">
          <source>The error message string.</source>
          <target state="translated">錯誤訊息字串。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TypeLoadException.#ctor(System.String)">
          <source>The following code example demonstrates the <ph id="ph1">&lt;xref:System.TypeLoadException.%23ctor%28System.String%29&gt;</ph> constructor.</source>
          <target state="translated">下列程式碼範例示範<ph id="ph1">&lt;xref:System.TypeLoadException.%23ctor%28System.String%29&gt;</ph>建構函式。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TypeLoadException.#ctor(System.String)">
          <source>It contains a method that generates a <ph id="ph1">&lt;xref:System.TypeLoadException&gt;</ph> with a custom message, and displays the error message to the console.</source>
          <target state="translated">它包含一個方法，會產生<ph id="ph1">&lt;xref:System.TypeLoadException&gt;</ph>使用自訂訊息，以及顯示錯誤訊息至主控台。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.TypeLoadException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The object that holds the serialized object data.</source>
          <target state="translated">存放序列物件資料的物件。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.TypeLoadException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The contextual information about the source or destination.</source>
          <target state="translated">關於來源或目的端的內容資訊。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.TypeLoadException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.TypeLoadException" /&gt;</ph> class with serialized data.</source>
          <target state="translated">使用序列化資料，初始化 <ph id="ph1">&lt;see cref="T:System.TypeLoadException" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TypeLoadException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</source>
          <target state="translated">進行還原序列化 (Deserialization) 期間會呼叫這個建構函式，以便重新構成經由資料流傳送的例外狀況物件。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TypeLoadException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>For more information, see <bpt id="p1">[</bpt>XML and SOAP Serialization<ept id="p1">](~/docs/standard/serialization/xml-and-soap-serialization.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>XML 和 SOAP 序列化<ept id="p1">](~/docs/standard/serialization/xml-and-soap-serialization.md)</ept>。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TypeLoadException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The following example generates an exception, and serializes the exception data to a file, and then reconstitutes the exception.</source>
          <target state="translated">下列範例會產生例外狀況，和例外狀況將資料序列化至檔案，並再重新組成例外狀況。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TypeLoadException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>For this code example to run, you must provide the fully qualified assembly name.</source>
          <target state="translated">若要執行此程式碼範例，您必須提供完整的組件名稱。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TypeLoadException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>For information about how to obtain the fully qualified assembly name, see <bpt id="p1">[</bpt>Assembly Names<ept id="p1">](~/docs/framework/app-domains/assembly-names.md)</ept>.</source>
          <target state="translated">如需如何取得完整組件名稱資訊，請參閱<bpt id="p1">[</bpt>組件名稱<ept id="p1">](~/docs/framework/app-domains/assembly-names.md)</ept>。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.TypeLoadException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;paramref name="info" /&gt;</ph> object is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="info" /&gt;</ph> 物件為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.TypeLoadException.#ctor(System.String,System.Exception)">
          <source>The error message that explains the reason for the exception.</source>
          <target state="translated">解釋例外狀況原因的錯誤訊息。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.TypeLoadException.#ctor(System.String,System.Exception)">
          <source>The exception that is the cause of the current exception.</source>
          <target state="translated">做為目前例外狀況發生原因的例外狀況。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.TypeLoadException.#ctor(System.String,System.Exception)">
          <source>If the <bpt id="p1">&lt;c&gt;</bpt>inner<ept id="p1">&lt;/c&gt;</ept> parameter is not <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the current exception is raised in a <ph id="ph2">&lt;see langword="catch" /&gt;</ph> block that handles the inner exception.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>inner<ept id="p1">&lt;/c&gt;</ept> 參數不是 <ph id="ph1">&lt;see langword="null" /&gt;</ph>，則目前的例外狀況會在處理內部例外狀況的 <ph id="ph2">&lt;see langword="catch" /&gt;</ph> 區塊中引發。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.TypeLoadException.#ctor(System.String,System.Exception)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.TypeLoadException" /&gt;</ph> class with a specified error message and a reference to the inner exception that is the cause of this exception.</source>
          <target state="translated">使用指定的錯誤訊息以及造成此例外狀況的內部例外狀況的參考，初始化 <ph id="ph1">&lt;see cref="T:System.TypeLoadException" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TypeLoadException.#ctor(System.String,System.Exception)">
          <source>An exception that is thrown as a direct result of a previous exception can include a reference to the previous exception in the <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property.</source>
          <target state="translated">直接因為前一個例外狀況而擲回的例外狀況可能包含對 <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> 屬性中前一個例外狀況的參考。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TypeLoadException.#ctor(System.String,System.Exception)">
          <source>The <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property returns the same value that is passed into the constructor, or <ph id="ph2">`null`</ph> if the <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property does not supply the inner exception value to the constructor.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> 屬性會傳回與傳入建構函式中相同的值；如果 <ph id="ph2">`null`</ph> 屬性沒有提供內部例外值給建構函式，則傳回 <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TypeLoadException.#ctor(System.String,System.Exception)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.TypeLoadException&gt;</ph>.</source>
          <target state="translated">下表顯示 <ph id="ph1">&lt;xref:System.TypeLoadException&gt;</ph> 執行個體的初始屬性值。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TypeLoadException.#ctor(System.String,System.Exception)">
          <source>Property</source>
          <target state="translated">屬性</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TypeLoadException.#ctor(System.String,System.Exception)">
          <source>Value</source>
          <target state="translated">值</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TypeLoadException.#ctor(System.String,System.Exception)">
          <source>The inner exception reference.</source>
          <target state="translated">內部例外狀況參考。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TypeLoadException.#ctor(System.String,System.Exception)">
          <source>The error message string.</source>
          <target state="translated">錯誤訊息字串。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TypeLoadException.#ctor(System.String,System.Exception)">
          <source>The following code example demonstrates the <ph id="ph1">&lt;xref:System.TypeLoadException.%23ctor%28System.String%2CSystem.Exception%29&gt;</ph> constructor.</source>
          <target state="translated">下列程式碼範例示範<ph id="ph1">&lt;xref:System.TypeLoadException.%23ctor%28System.String%2CSystem.Exception%29&gt;</ph>建構函式。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TypeLoadException.#ctor(System.String,System.Exception)">
          <source>It contains a method that generates a <ph id="ph1">&lt;xref:System.TypeLoadException&gt;</ph>, catches that exception, and throws a new <ph id="ph2">&lt;xref:System.TypeLoadException&gt;</ph> with a custom message, including the original <ph id="ph3">&lt;xref:System.TypeLoadException&gt;</ph> as the inner exception.</source>
          <target state="translated">它包含一個方法，會產生<ph id="ph1">&lt;xref:System.TypeLoadException&gt;</ph>、 攔截該例外狀況，並擲回新<ph id="ph2">&lt;xref:System.TypeLoadException&gt;</ph>自訂訊息，包括原始<ph id="ph3">&lt;xref:System.TypeLoadException&gt;</ph>做內部例外狀況。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.TypeLoadException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The object that holds the serialized object data.</source>
          <target state="translated">存放序列物件資料的物件。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.TypeLoadException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The contextual information about the source or destination.</source>
          <target state="translated">關於來源或目的端的內容資訊。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.TypeLoadException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Sets the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> object with the class name, method name, resource ID, and additional exception information.</source>
          <target state="translated">使用類別名稱、方法名稱、資源 ID 和額外的例外狀況資訊，來設定 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TypeLoadException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source><ph id="ph1">&lt;xref:System.TypeLoadException.GetObjectData%2A&gt;</ph> sets a <ph id="ph2">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph> with all the exception object data targeted for serialization.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.TypeLoadException.GetObjectData%2A&gt;</ph> 會使用所有指定要序列化的例外狀況物件資料來設定 <ph id="ph2">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TypeLoadException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>During deserialization, the exception object is reconstituted from the <ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph> transmitted over the stream.</source>
          <target state="translated">還原序列化期間的例外狀況物件重新組成從<ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph>資料流上傳輸。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TypeLoadException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>For more information, see <bpt id="p1">[</bpt>XML and SOAP Serialization<ept id="p1">](~/docs/standard/serialization/xml-and-soap-serialization.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>XML 和 SOAP 序列化<ept id="p1">](~/docs/standard/serialization/xml-and-soap-serialization.md)</ept>。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TypeLoadException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>[Visual Basic, C#]</source>
          <target state="translated">[Visual Basic、 C#]</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TypeLoadException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The following example generates an exception, and serializes the exception data to a file, and then reconstitutes the exception.</source>
          <target state="translated">下列範例會產生例外狀況，和例外狀況將資料序列化至檔案，並再重新組成例外狀況。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TypeLoadException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>For this code example to run, you must provide the fully qualified assembly name.</source>
          <target state="translated">若要執行此程式碼範例，您必須提供完整的組件名稱。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TypeLoadException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>For information about how to obtain the fully qualified assembly name, see <bpt id="p1">[</bpt>Assembly Names<ept id="p1">](~/docs/framework/app-domains/assembly-names.md)</ept>.</source>
          <target state="translated">如需如何取得完整組件名稱資訊，請參閱<bpt id="p1">[</bpt>組件名稱<ept id="p1">](~/docs/framework/app-domains/assembly-names.md)</ept>。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.TypeLoadException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;paramref name="info" /&gt;</ph> object is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="info" /&gt;</ph> 物件為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TypeLoadException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Requires full trust for the immediate caller.</source>
          <target state="translated">需要完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TypeLoadException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">這個成員無法供部分信任或安全性透明程式碼。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="P:System.TypeLoadException.Message">
          <source>Gets the error message for this exception.</source>
          <target state="translated">取得這個例外狀況的錯誤訊息。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.TypeLoadException.Message">
          <source>The error message string.</source>
          <target state="translated">錯誤訊息字串。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.TypeLoadException.Message">
          <source>This property overrides <ph id="ph1">&lt;xref:System.Exception.Message%2A&gt;</ph>.</source>
          <target state="translated">這個屬性會覆寫<ph id="ph1">&lt;xref:System.Exception.Message%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.TypeLoadException.Message">
          <source>The error message should be localized.</source>
          <target state="translated">應該當地語系化的錯誤訊息。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.TypeLoadException.Message">
          <source>This property is read-only.</source>
          <target state="translated">這個屬性是唯讀的。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.TypeLoadException.Message">
          <source>The following example attempts to load a non-existent type from the mscorlib assembly.</source>
          <target state="translated">下列範例會嘗試載入的 mscorlib 組件不存在型別。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.TypeLoadException.Message">
          <source>The resulting exception is caught, and the <ph id="ph1">&lt;xref:System.TypeLoadException.TypeName%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.TypeLoadException.Message%2A&gt;</ph> values are displayed.</source>
          <target state="translated">產生的例外狀況時，而<ph id="ph1">&lt;xref:System.TypeLoadException.TypeName%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.TypeLoadException.Message%2A&gt;</ph>顯示值。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.TypeLoadException.Message">
          <source>For this code example to run, you must provide the fully qualified assembly name.</source>
          <target state="translated">若要執行此程式碼範例，您必須提供完整的組件名稱。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.TypeLoadException.Message">
          <source>For information about how to obtain the fully qualified assembly name, see <bpt id="p1">[</bpt>Assembly Names<ept id="p1">](~/docs/framework/app-domains/assembly-names.md)</ept>.</source>
          <target state="translated">如需如何取得完整組件名稱資訊，請參閱<bpt id="p1">[</bpt>組件名稱<ept id="p1">](~/docs/framework/app-domains/assembly-names.md)</ept>。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="P:System.TypeLoadException.TypeName">
          <source>Gets the fully qualified name of the type that causes the exception.</source>
          <target state="translated">取得造成例外狀況的類型完整名稱。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.TypeLoadException.TypeName">
          <source>The fully qualified type name.</source>
          <target state="translated">完整類型名稱。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.TypeLoadException.TypeName">
          <source>The following example attempts to load a non-existent type from the mscorlib assembly.</source>
          <target state="translated">下列範例會嘗試載入的 mscorlib 組件不存在型別。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.TypeLoadException.TypeName">
          <source>The resulting exception is caught, and the <ph id="ph1">&lt;xref:System.TypeLoadException.TypeName%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.TypeLoadException.Message%2A&gt;</ph> values are displayed.</source>
          <target state="translated">產生的例外狀況時，而<ph id="ph1">&lt;xref:System.TypeLoadException.TypeName%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.TypeLoadException.Message%2A&gt;</ph>顯示值。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.TypeLoadException.TypeName">
          <source>For this code example to run, you must provide the fully qualified assembly name.</source>
          <target state="translated">若要執行此程式碼範例，您必須提供完整的組件名稱。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.TypeLoadException.TypeName">
          <source>For information about how to obtain the fully qualified assembly name, see <bpt id="p1">[</bpt>Assembly Names<ept id="p1">](~/docs/framework/app-domains/assembly-names.md)</ept>.</source>
          <target state="translated">如需如何取得完整組件名稱資訊，請參閱<bpt id="p1">[</bpt>組件名稱<ept id="p1">](~/docs/framework/app-domains/assembly-names.md)</ept>。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.TypeLoadException.TypeName">
          <source>When overriding <ph id="ph1">&lt;see cref="P:System.TypeLoadException.TypeName" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="P:System.TypeLoadException.TypeName" /&gt;</ph> property.</source>
          <target state="translated">在覆寫<ph id="ph1">&lt;see cref="P:System.TypeLoadException.TypeName" /&gt;</ph>在衍生類別中，請務必呼叫基底類別的<ph id="ph2">&lt;see cref="P:System.TypeLoadException.TypeName" /&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.TypeLoadException.TypeName">
          <source>This property is read-only.</source>
          <target state="translated">這個屬性是唯讀的。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>