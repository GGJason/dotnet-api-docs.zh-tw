<Type Name="MidpointRounding" FullName="System.MidpointRounding">
  <TypeSignature Language="C#" Value="public enum MidpointRounding" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed MidpointRounding extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.MidpointRounding" />
  <TypeSignature Language="VB.NET" Value="Public Enum MidpointRounding" />
  <TypeSignature Language="C++ CLI" Value="public enum class MidpointRounding" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="2d647-101">指定數學的四捨五入方法在遇到剛好位於兩個數字中間的數字時，應採用何種處理方式。</span><span class="sxs-lookup"><span data-stu-id="2d647-101">Specifies how mathematical rounding methods should process a number that is midway between two numbers.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d647-102">使用<xref:System.MidpointRounding>使用的適當多載<xref:System.Math.Round%2A?displayProperty=nameWithType>提供捨入的程序的更多的控制。</span><span class="sxs-lookup"><span data-stu-id="2d647-102">Use <xref:System.MidpointRounding> with appropriate overloads of <xref:System.Math.Round%2A?displayProperty=nameWithType> to provide more control of the rounding process.</span></span>  
  
 <span data-ttu-id="2d647-103">捨入運算會隱含或指定的有效位數; 原始數字會檢查下一個數字，會在該有效位數加上一次，並傳回最接近的數字，具有相同的有效位數為原始的數字。</span><span class="sxs-lookup"><span data-stu-id="2d647-103">A rounding operation takes an original number with an implicit or specified precision; examines the next digit, which is at that precision plus one; and returns the nearest number with the same precision as the original number.</span></span> <span data-ttu-id="2d647-104">正數，如果下一個數字是從 0 到 4，距離最近的數字的往負無限大方向。</span><span class="sxs-lookup"><span data-stu-id="2d647-104">For positive numbers, if the next digit is from 0 through 4, the nearest number is toward negative infinity.</span></span> <span data-ttu-id="2d647-105">如果下一個數字是 6 到 9，距離最近的數字就是朝向正無限大。</span><span class="sxs-lookup"><span data-stu-id="2d647-105">If the next digit is from 6 through 9, the nearest number is toward positive infinity.</span></span> <span data-ttu-id="2d647-106">負數，如果下一個數字是從 0 到 4，距離最近的數字是朝向正無限大。</span><span class="sxs-lookup"><span data-stu-id="2d647-106">For negative numbers, if the next digit is from 0 through 4, the nearest number is toward positive infinity.</span></span> <span data-ttu-id="2d647-107">如果下一個數字是 6 到 9，距離最近的數字為往負無限大方向。</span><span class="sxs-lookup"><span data-stu-id="2d647-107">If the next digit is from 6 through 9, the nearest number is toward negative infinity.</span></span>  
  
 <span data-ttu-id="2d647-108">在先前的情況下，<xref:System.MidpointRounding>列舉型別不會影響捨入運算的結果。</span><span class="sxs-lookup"><span data-stu-id="2d647-108">In the previous cases, the <xref:System.MidpointRounding> enumeration does not affect the result of the rounding operation.</span></span> <span data-ttu-id="2d647-109">不過，如果下一個數字為 5，也就是兩個可能的結果之間的中間點和所有剩餘的數字是零，或沒有剩餘的數字，最接近的數字是模稜兩可。</span><span class="sxs-lookup"><span data-stu-id="2d647-109">However, if the next digit is 5, which is the midpoint between two possible results, and all remaining digits are zero or there are no remaining digits, the nearest number is ambiguous.</span></span> <span data-ttu-id="2d647-110">在此情況下，<xref:System.MidpointRounding>列舉型別可讓您指定是否捨入運算會傳回最接近的數字遠離零或接近的偶數。</span><span class="sxs-lookup"><span data-stu-id="2d647-110">In this case, the <xref:System.MidpointRounding> enumeration enables you to specify whether the rounding operation returns the nearest number away from zero or the nearest even number.</span></span>  
  
 <span data-ttu-id="2d647-111">下表示範四捨五入的值搭配一些負數和正數數字的結果<xref:System.MidpointRounding>。</span><span class="sxs-lookup"><span data-stu-id="2d647-111">The following table demonstrates the results of rounding some negative and positive numbers in conjunction with the values of <xref:System.MidpointRounding>.</span></span> <span data-ttu-id="2d647-112">用來將數字四捨五入的有效位數為零，這表示數字之後小數點影響捨入運算。</span><span class="sxs-lookup"><span data-stu-id="2d647-112">The precision used to round the numbers is zero, which means the number after the decimal point affects the rounding operation.</span></span> <span data-ttu-id="2d647-113">例如，數-2.5，小數點後的數字為 5。</span><span class="sxs-lookup"><span data-stu-id="2d647-113">For example, for the number -2.5, the digit after the decimal point is 5.</span></span> <span data-ttu-id="2d647-114">因為該數字的中點，您可以使用<xref:System.MidpointRounding>值，以判斷四捨五入的結果。</span><span class="sxs-lookup"><span data-stu-id="2d647-114">Because that digit is the midpoint, you can use a <xref:System.MidpointRounding> value to determine the result of rounding.</span></span> <span data-ttu-id="2d647-115">如果指定 AwayFromZero，因為它是最接近編號遠離零有效位數為零，會傳回-3。</span><span class="sxs-lookup"><span data-stu-id="2d647-115">If AwayFromZero is specified, -3 is returned because it is the nearest number away from zero with a precision of zero.</span></span> <span data-ttu-id="2d647-116">如果指定 ToEven，因為它是有效位數為零距離最近的偶數，會傳回-2。</span><span class="sxs-lookup"><span data-stu-id="2d647-116">If ToEven is specified, -2 is returned because it is the nearest even number with a precision of zero.</span></span>  
  
|<span data-ttu-id="2d647-117">原始的編號</span><span class="sxs-lookup"><span data-stu-id="2d647-117">Original number</span></span>|<span data-ttu-id="2d647-118">AwayFromZero</span><span class="sxs-lookup"><span data-stu-id="2d647-118">AwayFromZero</span></span>|<span data-ttu-id="2d647-119">ToEven</span><span class="sxs-lookup"><span data-stu-id="2d647-119">ToEven</span></span>|  
|---------------------|------------------|------------|  
|<span data-ttu-id="2d647-120">3.5</span><span class="sxs-lookup"><span data-stu-id="2d647-120">3.5</span></span>|<span data-ttu-id="2d647-121">4</span><span class="sxs-lookup"><span data-stu-id="2d647-121">4</span></span>|<span data-ttu-id="2d647-122">4</span><span class="sxs-lookup"><span data-stu-id="2d647-122">4</span></span>|  
|<span data-ttu-id="2d647-123">2.8</span><span class="sxs-lookup"><span data-stu-id="2d647-123">2.8</span></span>|<span data-ttu-id="2d647-124">3</span><span class="sxs-lookup"><span data-stu-id="2d647-124">3</span></span>|<span data-ttu-id="2d647-125">3</span><span class="sxs-lookup"><span data-stu-id="2d647-125">3</span></span>|  
|<span data-ttu-id="2d647-126">2.5</span><span class="sxs-lookup"><span data-stu-id="2d647-126">2.5</span></span>|<span data-ttu-id="2d647-127">3</span><span class="sxs-lookup"><span data-stu-id="2d647-127">3</span></span>|<span data-ttu-id="2d647-128">2</span><span class="sxs-lookup"><span data-stu-id="2d647-128">2</span></span>|  
|<span data-ttu-id="2d647-129">2.1</span><span class="sxs-lookup"><span data-stu-id="2d647-129">2.1</span></span>|<span data-ttu-id="2d647-130">2</span><span class="sxs-lookup"><span data-stu-id="2d647-130">2</span></span>|<span data-ttu-id="2d647-131">2</span><span class="sxs-lookup"><span data-stu-id="2d647-131">2</span></span>|  
|<span data-ttu-id="2d647-132">-2.1</span><span class="sxs-lookup"><span data-stu-id="2d647-132">-2.1</span></span>|<span data-ttu-id="2d647-133">-2</span><span class="sxs-lookup"><span data-stu-id="2d647-133">-2</span></span>|<span data-ttu-id="2d647-134">-2</span><span class="sxs-lookup"><span data-stu-id="2d647-134">-2</span></span>|  
|<span data-ttu-id="2d647-135">-2.5</span><span class="sxs-lookup"><span data-stu-id="2d647-135">-2.5</span></span>|<span data-ttu-id="2d647-136">-3</span><span class="sxs-lookup"><span data-stu-id="2d647-136">-3</span></span>|<span data-ttu-id="2d647-137">-2</span><span class="sxs-lookup"><span data-stu-id="2d647-137">-2</span></span>|  
|<span data-ttu-id="2d647-138">-2.8</span><span class="sxs-lookup"><span data-stu-id="2d647-138">-2.8</span></span>|<span data-ttu-id="2d647-139">-3</span><span class="sxs-lookup"><span data-stu-id="2d647-139">-3</span></span>|<span data-ttu-id="2d647-140">-3</span><span class="sxs-lookup"><span data-stu-id="2d647-140">-3</span></span>|  
|<span data-ttu-id="2d647-141">-3.5</span><span class="sxs-lookup"><span data-stu-id="2d647-141">-3.5</span></span>|<span data-ttu-id="2d647-142">-4</span><span class="sxs-lookup"><span data-stu-id="2d647-142">-4</span></span>|<span data-ttu-id="2d647-143">-4</span><span class="sxs-lookup"><span data-stu-id="2d647-143">-4</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="2d647-144">下列程式碼範例示範<xref:System.Math.Round%2A>方法搭配<xref:System.MidpointRounding.ToEven>列舉型別。</span><span class="sxs-lookup"><span data-stu-id="2d647-144">The following code example demonstrates the <xref:System.Math.Round%2A> method in conjunction with the <xref:System.MidpointRounding.ToEven> enumeration.</span></span>  
  
 [!code-cpp[math.midpointrounding#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.midpointrounding/cpp/mpr.cpp#1)]
 [!code-csharp[math.midpointrounding#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.midpointrounding/CS/mpr.cs#1)]
 [!code-vb[math.midpointrounding#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.midpointrounding/VB/mpr.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AwayFromZero">
      <MemberSignature Language="C#" Value="AwayFromZero" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.MidpointRounding AwayFromZero = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.MidpointRounding.AwayFromZero" />
      <MemberSignature Language="VB.NET" Value="AwayFromZero" />
      <MemberSignature Language="C++ CLI" Value="AwayFromZero" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.MidpointRounding</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="2d647-145">當某個數字剛好位於另外兩個數字之間的中間時，將其四捨五入為離零距離最近的數字。</span><span class="sxs-lookup"><span data-stu-id="2d647-145">When a number is halfway between two others, it is rounded toward the nearest number that is away from zero.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="ToEven">
      <MemberSignature Language="C#" Value="ToEven" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.MidpointRounding ToEven = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.MidpointRounding.ToEven" />
      <MemberSignature Language="VB.NET" Value="ToEven" />
      <MemberSignature Language="C++ CLI" Value="ToEven" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.MidpointRounding</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="2d647-146">當某個數字剛好位於另外兩個數字之間的中點時，將其四捨五入為距離最近的偶數。</span><span class="sxs-lookup"><span data-stu-id="2d647-146">When a number is halfway between two others, it is rounded toward the nearest even number.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>