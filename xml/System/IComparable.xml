<Type Name="IComparable" FullName="System.IComparable">
  <Metadata><Meta Name="ms.openlocfilehash" Value="de45437685e7e2891c7f6e699cd8812bc393beca" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48589851" /></Metadata><TypeSignature Language="C#" Value="public interface IComparable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IComparable" />
  <TypeSignature Language="DocId" Value="T:System.IComparable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IComparable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IComparable" />
  <TypeSignature Language="F#" Value="type IComparable = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="514c1-101">定義通用的型別特定比較方法，實值型別 (Value Type) 或類別 (Class) 會實作這個方法，以排列或排序其執行個體。</span><span class="sxs-lookup"><span data-stu-id="514c1-101">Defines a generalized type-specific comparison method that a value type or class implements to order or sort its instances.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="514c1-102">實作這個介面是由可以排列或排序其值的型別。</span><span class="sxs-lookup"><span data-stu-id="514c1-102">This interface is implemented by types whose values can be ordered or sorted.</span></span> <span data-ttu-id="514c1-103">它需要實作的類型會定義單一方法<xref:System.IComparable.CompareTo%28System.Object%29>，指出是否目前的執行個體在排序次序的位置之前，之後，或是與相同類型的第二個物件相同。</span><span class="sxs-lookup"><span data-stu-id="514c1-103">It requires that implementing types define a single method, <xref:System.IComparable.CompareTo%28System.Object%29>, that indicates whether the position of the current instance in the sort order is before, after, or the same as a second object of the same type.</span></span> <span data-ttu-id="514c1-104">執行個體<xref:System.IComparable>實作會自動呼叫方法這類<xref:System.Array.Sort%2A?displayProperty=nameWithType>和<xref:System.Collections.ArrayList.Sort%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="514c1-104">The instance's <xref:System.IComparable> implementation is called automatically by methods such as <xref:System.Array.Sort%2A?displayProperty=nameWithType> and <xref:System.Collections.ArrayList.Sort%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="514c1-105">實作<xref:System.IComparable.CompareTo%28System.Object%29>方法必須傳回<xref:System.Int32>具有三個值之一下, 表所示。</span><span class="sxs-lookup"><span data-stu-id="514c1-105">The implementation of the <xref:System.IComparable.CompareTo%28System.Object%29> method must return an <xref:System.Int32> that has one of three values, as shown in the following table.</span></span>  
  
|<span data-ttu-id="514c1-106">值</span><span class="sxs-lookup"><span data-stu-id="514c1-106">Value</span></span>|<span data-ttu-id="514c1-107">意義</span><span class="sxs-lookup"><span data-stu-id="514c1-107">Meaning</span></span>|  
|-----------|-------------|  
|<span data-ttu-id="514c1-108">小於零</span><span class="sxs-lookup"><span data-stu-id="514c1-108">Less than zero</span></span>|<span data-ttu-id="514c1-109">目前的執行個體之前所指定的物件<xref:System.IComparable.CompareTo%2A>在排序次序的方法。</span><span class="sxs-lookup"><span data-stu-id="514c1-109">The current instance precedes the object specified by the <xref:System.IComparable.CompareTo%2A> method in the sort order.</span></span>|  
|<span data-ttu-id="514c1-110">零</span><span class="sxs-lookup"><span data-stu-id="514c1-110">Zero</span></span>|<span data-ttu-id="514c1-111">此目前執行個體，就會發生在相同位置中的排序次序所指定的物件為<xref:System.IComparable.CompareTo%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="514c1-111">This current instance occurs in the same position in the sort order as the object specified by the <xref:System.IComparable.CompareTo%2A> method.</span></span>|  
|<span data-ttu-id="514c1-112">大於零</span><span class="sxs-lookup"><span data-stu-id="514c1-112">Greater than zero</span></span>|<span data-ttu-id="514c1-113">此目前執行個體所指定的物件會遵循<xref:System.IComparable.CompareTo%2A>在排序次序的方法。</span><span class="sxs-lookup"><span data-stu-id="514c1-113">This current instance follows the object specified by the <xref:System.IComparable.CompareTo%2A> method in the sort order.</span></span>|  
  
 <span data-ttu-id="514c1-114">所有數字類型 (例如<xref:System.Int32>並<xref:System.Double>) 實作<xref:System.IComparable>，就像一樣<xref:System.String>， <xref:System.Char>，和<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="514c1-114">All numeric types (such as <xref:System.Int32> and <xref:System.Double>) implement <xref:System.IComparable>, as do <xref:System.String>, <xref:System.Char>, and <xref:System.DateTime>.</span></span> <span data-ttu-id="514c1-115">自訂類型應該也會提供其自己實作的<xref:System.IComparable>排列或排序的物件執行個體。</span><span class="sxs-lookup"><span data-stu-id="514c1-115">Custom types should also provide their own implementation of <xref:System.IComparable> to enable object instances to be ordered or sorted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="514c1-116">下列範例說明實作<xref:System.IComparable>和必要<xref:System.IComparable.CompareTo%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="514c1-116">The following example illustrates the implementation of <xref:System.IComparable> and the requisite <xref:System.IComparable.CompareTo%2A> method.</span></span>  
  
 [!code-cpp[IComparable Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/IComparable Example/CPP/source.cpp#1)]
 [!code-csharp[IComparable Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/IComparable Example/CS/source.cs#1)]
 [!code-vb[IComparable Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IComparable Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IComparable.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (obj As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int CompareTo(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj -&gt; int" Usage="iComparable.CompareTo obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="514c1-117">與這個執行個體相互比較的物件。</span><span class="sxs-lookup"><span data-stu-id="514c1-117">An object to compare with this instance.</span></span></param>
        <summary><span data-ttu-id="514c1-118">將目前的執行個體與相同型別的另一個物件相比較，並傳回整數，這個整數表示目前的執行個體在排序次序中，位於另一個物件之前、之後或相同位置。</span><span class="sxs-lookup"><span data-stu-id="514c1-118">Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.</span></span></summary>
        <returns><span data-ttu-id="514c1-119">值，表示所比較之物件的相對順序。</span><span class="sxs-lookup"><span data-stu-id="514c1-119">A value that indicates the relative order of the objects being compared.</span></span> <span data-ttu-id="514c1-120">傳回值具有這些意義：</span><span class="sxs-lookup"><span data-stu-id="514c1-120">The return value has these meanings:</span></span> 
 <list type="table"><listheader><term> <span data-ttu-id="514c1-121">值</span><span class="sxs-lookup"><span data-stu-id="514c1-121">Value</span></span> 
 </term><description> <span data-ttu-id="514c1-122">意義</span><span class="sxs-lookup"><span data-stu-id="514c1-122">Meaning</span></span> 
 </description></listheader><item><term> <span data-ttu-id="514c1-123">小於零</span><span class="sxs-lookup"><span data-stu-id="514c1-123">Less than zero</span></span> 
 </term><description> <span data-ttu-id="514c1-124">這個執行個體在排序次序中會在 <paramref name="obj" /> 之前。</span><span class="sxs-lookup"><span data-stu-id="514c1-124">This instance precedes <paramref name="obj" /> in the sort order.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="514c1-125">零</span><span class="sxs-lookup"><span data-stu-id="514c1-125">Zero</span></span> 
 </term><description> <span data-ttu-id="514c1-126">這個執行個體在排序次序中的位置和 <paramref name="obj" /> 相同。</span><span class="sxs-lookup"><span data-stu-id="514c1-126">This instance occurs in the same position in the sort order as <paramref name="obj" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="514c1-127">大於零</span><span class="sxs-lookup"><span data-stu-id="514c1-127">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="514c1-128">這個執行個體在排序次序中會跟隨在 <paramref name="obj" /> 之後。</span><span class="sxs-lookup"><span data-stu-id="514c1-128">This instance follows <paramref name="obj" /> in the sort order.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="514c1-129"><xref:System.IComparable.CompareTo%2A>可以排列或排序其值的型別所實作方法。</span><span class="sxs-lookup"><span data-stu-id="514c1-129">The <xref:System.IComparable.CompareTo%2A> method is implemented by types whose values can be ordered or sorted.</span></span> <span data-ttu-id="514c1-130">它會自動呼叫方法的非泛型集合物件，例如<xref:System.Array.Sort%2A?displayProperty=nameWithType>，以排序陣列的每個成員。</span><span class="sxs-lookup"><span data-stu-id="514c1-130">It is called automatically by methods of non-generic collection objects, such as <xref:System.Array.Sort%2A?displayProperty=nameWithType>, to order each member of the array.</span></span> <span data-ttu-id="514c1-131">如果自訂類別或結構不會實作<xref:System.IComparable>其成員不會按照順序，排序作業可能會擲回<xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="514c1-131">If a custom class or structure does not implement <xref:System.IComparable>, its members cannot be ordered and the sort operation can throw an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="514c1-132">這個方法是只定義，而且必須實作特定類別或實值類型的影響。</span><span class="sxs-lookup"><span data-stu-id="514c1-132">This method is only a definition and must be implemented by a specific class or value type to have effect.</span></span> <span data-ttu-id="514c1-133">傳回值取決於特定實作的 （「 之前 」、 「 發生相同的位置 」，和 「 遵循 」） 一節中所指定的比較的意義。</span><span class="sxs-lookup"><span data-stu-id="514c1-133">The meaning of the comparisons specified in the Return Value section ("precedes", "occurs in the same position as", and "follows") depends on the particular implementation.</span></span>  
  
 <span data-ttu-id="514c1-134">根據定義，任何物件會比較大於 （或遵循） `null`，並比較彼此相等的兩個 null 參考。</span><span class="sxs-lookup"><span data-stu-id="514c1-134">By definition, any object compares greater than (or follows) `null`, and two null references compare equal to each other.</span></span>  
  
 <span data-ttu-id="514c1-135">參數， `obj`，必須是相同的型別，做為類別或實值型別會實作這個介面; 否則<xref:System.ArgumentException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="514c1-135">The parameter, `obj`, must be the same type as the class or value type that implements this interface; otherwise, an <xref:System.ArgumentException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="514c1-136">下列範例示範如何將<xref:System.IComparable.CompareTo%2A>來比較`Temperature`物件，實作<xref:System.IComparable>與另一個物件。</span><span class="sxs-lookup"><span data-stu-id="514c1-136">The following example illustrates the use of <xref:System.IComparable.CompareTo%2A> to compare a `Temperature` object implementing <xref:System.IComparable> with another object.</span></span> <span data-ttu-id="514c1-137">`Temperature`物件會實作<xref:System.IComparable.CompareTo%2A>藉由直接包裝呼叫<xref:System.Int32.CompareTo%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="514c1-137">The `Temperature` object implements <xref:System.IComparable.CompareTo%2A> by simply wrapping a call to the <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> method.</span></span>  
  
 [!code-cpp[IComparable Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/IComparable Example/CPP/source.cpp#1)]
 [!code-csharp[IComparable Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/IComparable Example/CS/source.cs#1)]
 [!code-vb[IComparable Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IComparable Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="514c1-138"><paramref name="obj" /> 與這個執行個體的型別不同。</span><span class="sxs-lookup"><span data-stu-id="514c1-138"><paramref name="obj" /> is not the same type as this instance.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="514c1-139">物件 A、 B 和 C，下列條件必須為真：</span><span class="sxs-lookup"><span data-stu-id="514c1-139">For objects A, B and C, the following must be true:</span></span> 
 <span data-ttu-id="514c1-140"><c>A.CompareTo(A)</c>必須傳回零。</span><span class="sxs-lookup"><span data-stu-id="514c1-140"><c>A.CompareTo(A)</c> must return zero.</span></span>  
  
<span data-ttu-id="514c1-141">如果<c>A.CompareTo(B)</c>傳回零，然後<c>B.CompareTo(A)</c>必須傳回零。</span><span class="sxs-lookup"><span data-stu-id="514c1-141">If <c>A.CompareTo(B)</c> returns zero, then <c>B.CompareTo(A)</c> must return zero.</span></span>  
  
<span data-ttu-id="514c1-142">如果<c>A.CompareTo(B)</c>會傳回零並<c>B.CompareTo(C)</c>傳回零，然後<c>A.CompareTo(C)</c>必須傳回零。</span><span class="sxs-lookup"><span data-stu-id="514c1-142">If <c>A.CompareTo(B)</c> returns zero and <c>B.CompareTo(C)</c> returns zero, then <c>A.CompareTo(C)</c> must return zero.</span></span>  
  
<span data-ttu-id="514c1-143">如果<c>A.CompareTo(B)</c>傳回值不是零，然後<c>B.CompareTo(A)</c>必須傳回值的正負號相反。</span><span class="sxs-lookup"><span data-stu-id="514c1-143">If <c>A.CompareTo(B)</c> returns a value other than zero, then <c>B.CompareTo(A)</c> must return a value of the opposite sign.</span></span>  
  
<span data-ttu-id="514c1-144">如果<c>A.CompareTo(B)</c>傳回值<paramref name="x" />不等於零，和<c>B.CompareTo(C)</c>傳回的值<paramref name="y" />做為相同的正負號的<paramref name="x" />，然後<c>a。CompareTo(C)</c>必須傳回相同的正負號與值<paramref name="x" />和<paramref name="y" />。</span><span class="sxs-lookup"><span data-stu-id="514c1-144">If <c>A.CompareTo(B)</c> returns a value <paramref name="x" /> not equal to zero, and <c>B.CompareTo(C)</c> returns a value <paramref name="y" /> of the same sign as <paramref name="x" />, then <c>A.CompareTo(C)</c> must return a value of the same sign as <paramref name="x" /> and <paramref name="y" />.</span></span></para></block>
        <block subset="none" type="usage"><para><span data-ttu-id="514c1-145">使用<see cref="M:System.IComparable.CompareTo(System.Object)" />方法，以判斷類別的執行個體的順序。</span><span class="sxs-lookup"><span data-stu-id="514c1-145">Use the <see cref="M:System.IComparable.CompareTo(System.Object)" /> method to determine the ordering of instances of a class.</span></span></para></block>
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
  </Members>
</Type>