<Type Name="ThreadStaticAttribute" FullName="System.ThreadStaticAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="07d61cca1964f76b932d1ee8a032f6d54ae50db7" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ThreadStaticAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ThreadStaticAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ThreadStaticAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class ThreadStaticAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ThreadStaticAttribute : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="52352-101">表示每個執行緒的靜態欄位值是唯一的。</span>
      <span class="sxs-lookup">
        <span data-stu-id="52352-101">Indicates that the value of a static field is unique for each thread.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52352-102">A`static`欄位標示為<xref:System.ThreadStaticAttribute>不會在執行緒之間共用。</span><span class="sxs-lookup"><span data-stu-id="52352-102">A `static` field marked with <xref:System.ThreadStaticAttribute> is not shared between threads.</span></span> <span data-ttu-id="52352-103">每個執行中執行緒有個別的執行個體的欄位中，獨立設定和取得該欄位的值。</span><span class="sxs-lookup"><span data-stu-id="52352-103">Each executing thread has a separate instance of the field, and independently sets and gets values for that field.</span></span> <span data-ttu-id="52352-104">如果不同的執行緒上存取的欄位，它會包含不同的值。</span><span class="sxs-lookup"><span data-stu-id="52352-104">If the field is accessed on a different thread, it will contain a different value.</span></span>  
  
 <span data-ttu-id="52352-105">請注意，除了套用<xref:System.ThreadStaticAttribute>屬性欄位，您也必須定義成`static`欄位 （C# 中） 或`Shared`欄位 （在 Visual Basic)。</span><span class="sxs-lookup"><span data-stu-id="52352-105">Note that in addition to applying the <xref:System.ThreadStaticAttribute> attribute to a field, you must also define it as a `static` field (in C#) or a `Shared` field (in Visual Basic).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="52352-106">請勿指定起始值的欄位用來標記`ThreadStaticAttribute`，因為這類初始化就會發生一次，當類別建構函式會執行，而因此會影響只有一個執行緒。</span><span class="sxs-lookup"><span data-stu-id="52352-106">Do not specify initial values for fields marked with `ThreadStaticAttribute`, because such initialization occurs only once, when the class constructor executes, and therefore affects only one thread.</span></span> <span data-ttu-id="52352-107">如果您不指定一個初始值，您可以依賴如果它是實值類型，或為其預設值初始化的欄位`null`如果它是參考類型。</span><span class="sxs-lookup"><span data-stu-id="52352-107">If you do not specify an initial value, you can rely on the field being initialized to its default value if it is a value type, or to `null` if it is a reference type.</span></span>  
  
 <span data-ttu-id="52352-108">使用這個屬性，因為它，並不是衍生自它。</span><span class="sxs-lookup"><span data-stu-id="52352-108">Use this attribute as it is, and do not derive from it.</span></span>  
  
 <span data-ttu-id="52352-109">如需屬性用法的詳細資訊，請參閱[屬性](~/docs/standard/attributes/index.md)。</span><span class="sxs-lookup"><span data-stu-id="52352-109">For more information about using attributes, see [Attributes](~/docs/standard/attributes/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52352-110">下列範例會產生隨機號碼產生器、 建立 10 個執行緒主執行緒中，除了並且然後在每個執行緒中產生兩百萬隨機數字。</span><span class="sxs-lookup"><span data-stu-id="52352-110">The following example instantiates a random number generator, creates ten threads in addition to the main thread, and then generates two million random numbers in each thread.</span></span> <span data-ttu-id="52352-111">它會使用<xref:System.ThreadStaticAttribute>屬性來計算每個執行緒的隨機數字的計數與總和。</span><span class="sxs-lookup"><span data-stu-id="52352-111">It uses the <xref:System.ThreadStaticAttribute> attribute to calculate the sum and the count of random numbers per thread.</span></span> <span data-ttu-id="52352-112">它也會定義兩個個別執行緒的額外欄位，`previous`和`abnormal`，可讓它偵測到損毀的亂數產生器。</span><span class="sxs-lookup"><span data-stu-id="52352-112">It also defines two additional per-thread fields, `previous` and `abnormal`, that allows it to detect corruption of the random number generator.</span></span>  
  
 [!code-csharp[System.ThreadStaticAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threadstaticattribute/cs/threadsafe2a.cs#1)]
 [!code-vb[System.ThreadStaticAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threadstaticattribute/vb/threadsafe2a.vb#1)]  
  
 <span data-ttu-id="52352-113">此範例會使用`lock`C# 中的陳述式和`SyncLock`以同步存取之隨機號碼產生器的 Visual Basic 中建構。</span><span class="sxs-lookup"><span data-stu-id="52352-113">The example uses the `lock` statement in C# and the `SyncLock` construct in Visual Basic to synchronize access to the random number generator.</span></span> <span data-ttu-id="52352-114">這可避免損毀的亂數產生器，通常是在其傳回值為零的所有後續的呼叫。</span><span class="sxs-lookup"><span data-stu-id="52352-114">This prevents corruption of the random number generator, which typically results in its returning a value of zero for all subsequent calls.</span></span>  
  
 <span data-ttu-id="52352-115">此範例也會使用<xref:System.Threading.CountdownEvent>類別，以確保每個執行緒已完成的產生隨機數字，然後再顯示的呼叫次數總計。</span><span class="sxs-lookup"><span data-stu-id="52352-115">The example also uses the <xref:System.Threading.CountdownEvent> class to ensure that each thread has finished generating random numbers before it displays the total number of calls.</span></span> <span data-ttu-id="52352-116">否則，如果主執行緒完成執行，然後它會繁衍的其他執行緒，它會顯示不正確的值之方法呼叫的總數。</span><span class="sxs-lookup"><span data-stu-id="52352-116">Otherwise, if the main thread completes execution before the additional threads that it spawns, it displays an inaccurate value for the total number of method calls.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Attribute" />
    <altmember cref="T:System.Threading.Thread" />
    <altmember cref="T:System.Threading.AsyncLocal`1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ThreadStaticAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ThreadStaticAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ThreadStaticAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="52352-117">初始化 <see cref="T:System.ThreadStaticAttribute" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="52352-117">Initializes a new instance of the <see cref="T:System.ThreadStaticAttribute" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>