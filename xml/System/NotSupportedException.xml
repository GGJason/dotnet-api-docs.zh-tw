<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="NotSupportedException.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac58efb79e649d8ac96df50ccdc12c788e3be082c83.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8efb79e649d8ac96df50ccdc12c788e3be082c83</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.NotSupportedException">
          <source>The exception that is thrown when an invoked method is not supported, or when there is an attempt to read, seek, or write to a stream that does not support the invoked functionality.</source>
          <target state="translated">當叫用的方法不受支援，或者嘗試讀取、尋找或寫入不支援叫用功能的資料流時，所擲回的例外狀況。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source><ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph> indicates that no implementation exists for an invoked method or property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph> 表示叫用的方法或屬性有任何實作。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source><ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph> uses the HRESULT COR_E_NOTSUPPORTED, which has the value 0x80131515.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph> 會使用 HRESULT COR_E_NOTSUPPORTED，0x80131515 的值。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>For a list of initial property values for an instance of <ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph>, see the <ph id="ph2">&lt;xref:System.NotSupportedException.%23ctor%2A&gt;</ph> constructors.</source>
          <target state="translated">如需執行個體的初始屬性值的清單<ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph>，請參閱<ph id="ph2">&lt;xref:System.NotSupportedException.%23ctor%2A&gt;</ph>建構函式。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>Throwing a NotSupportedException exception</source>
          <target state="translated">擲回 NotSupportedException 例外狀況</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>You might consider throwing a <ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph> exception in the following cases:</source>
          <target state="translated">您可以考慮擲回<ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph>例外狀況，在下列情況：</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>You are implementing a general-purpose interface, and number of the methods have no meaningful implementation.</source>
          <target state="translated">您要實作的一般用途的介面和方法數目有任何有意義的實作。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>For example, if you are creating a date and time type that implements the <ph id="ph1">&lt;xref:System.IConvertible&gt;</ph> interface, you would throw a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> exception for most of the conversions.</source>
          <target state="translated">例如，如果您要建立的日期和時間輸入實作<ph id="ph1">&lt;xref:System.IConvertible&gt;</ph>介面，您會擲回<ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph>適用於大部分的轉換例外狀況。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>You've inherited from an abstract class that requires that you override a number of methods.</source>
          <target state="translated">您繼承自抽象類別需要覆寫的方法數目。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>However, you're only prepared to provide an implementation for a subset of these.</source>
          <target state="translated">不過，只有準備以提供這些子集的實作。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>For the methods that you decide not to implement, you can choose to throw a <ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph>.</source>
          <target state="translated">對於您決定不要實作的方法，您可以選擇要擲回<ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>You are defining a general-purpose type with a state that enables operations conditionally.</source>
          <target state="translated">您會定義具有條件式地啟用作業的狀態的一般用途的型別。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>For example, your type can be either read-only or read-write.</source>
          <target state="translated">例如，您的型別可以是唯讀或讀寫。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>In that case:</source>
          <target state="translated">在此情況下：</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>If the object is read-only, attempting to assign values to the properties of an instance or call methods that modify instance state should throw  a <ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph> exception.</source>
          <target state="translated">物件是唯讀的如果嘗試指派值給修改執行個體狀態執行個體或呼叫方法的屬性應該擲回<ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph>例外狀況。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>You should implement a property that returns a <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> value that indicates whether particular functionality is available.</source>
          <target state="translated">您應該實作屬性，傳回<ph id="ph1">&lt;xref:System.Boolean&gt;</ph>值，指出是否有提供特定功能。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>For example, for a type that can be either read-only or read-write, you could implement a <ph id="ph1">`IsReadOnly`</ph> property that indicates whether the set of read-write methods are available or unavailable.</source>
          <target state="translated">例如，可以是唯讀或讀寫的類型，您可以實作<ph id="ph1">`IsReadOnly`</ph>屬性，指出是否可以使用或無法使用一組讀寫的方法。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>Handling a NotSupportedException exception</source>
          <target state="translated">處理 NotSupportedException 例外狀況</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>The <ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph> exception indicates that a method has no implementation and that you should not call it.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph>例外狀況表示的方法具有任何實作，而且，您不應該呼叫它。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>You should not handle the exception.</source>
          <target state="translated">您不應該處理例外狀況。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>Instead, what you should do depends on the cause of the exception:  whether an implementation is completely absent , or the member invocation is inconsistent with the purpose of an object (such as a call to the <ph id="ph1">&lt;xref:System.IO.FileStream.Read%2A?displayProperty=nameWithType&gt;</ph> method on a read-only <ph id="ph2">&lt;xref:System.IO.FileStream&gt;</ph> object .</source>
          <target state="translated">相反地，該怎麼辦取決於例外狀況的原因： 實作是完全不存在，還是成員引動過程不一致乃物件 (例如呼叫<ph id="ph1">&lt;xref:System.IO.FileStream.Read%2A?displayProperty=nameWithType&gt;</ph>方法上的唯讀<ph id="ph2">&lt;xref:System.IO.FileStream&gt;</ph>物件.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source><bpt id="p1">**</bpt>An implementation has not been provided because the operation cannot be performed in a meaningful way.<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>中有意義的方式，就無法執行此作業，因為尚未提供實作。<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>This is a common exception when you are calling methods on an object that provides implementations for the methods of an abstract base class, or that implements a general-purpose interface, and the method has no meaningful implementation.</source>
          <target state="translated">這是常見的例外狀況，您會在一般用途的介面，提供抽象基底類別或實作的方法實作的物件上呼叫方法時，此方法沒有任何有意義的實作。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>For example, the <ph id="ph1">&lt;xref:System.Convert&gt;</ph> class implements the <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface, which means that it must include a method to convert every primitive type to every other primitive type.</source>
          <target state="translated">例如，<ph id="ph1">&lt;xref:System.Convert&gt;</ph>類別會實作<ph id="ph2">&lt;xref:System.IConvertible&gt;</ph>介面，這表示，它必須包含每個基本的類型轉換成每個其他基本類型的方法。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>Many of those conversions, however, are not possible.</source>
          <target state="translated">許多這些轉換，不過，不可能。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>As a result, a call to the <ph id="ph1">&lt;xref:System.Convert.ToBoolean%28System.DateTime%29?displayProperty=nameWithType&gt;</ph> method, for instance, throws a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> exception because there is no possible conversion between a <ph id="ph3">&lt;xref:System.DateTime&gt;</ph> and a <ph id="ph4">&lt;xref:System.Boolean&gt;</ph> value</source>
          <target state="translated">如此一來，呼叫<ph id="ph1">&lt;xref:System.Convert.ToBoolean%28System.DateTime%29?displayProperty=nameWithType&gt;</ph>方法，例如，會擲回<ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph>例外狀況，所以不可能的轉換之間<ph id="ph3">&lt;xref:System.DateTime&gt;</ph>和<ph id="ph4">&lt;xref:System.Boolean&gt;</ph>值</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>To eliminate the exception, you should eliminate the method call.</source>
          <target state="translated">若要消除例外狀況，您應該會排除在方法呼叫。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source><bpt id="p1">**</bpt>The method call is not supported given the state of the object.<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>方法呼叫不支援指定物件的狀態。<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>You are attempting to invoke a member whose functionality is unavailable because of the object's state.</source>
          <target state="translated">您嘗試叫用的成員，其功能是無法使用，因為物件的狀態。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>You can eliminate the exception in one of three ways:</source>
          <target state="translated">您可以解決其中一種方式中的例外狀況：</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>You know the state of the object in advance, but you've invoked an unsupported method or property.</source>
          <target state="translated">您事先知道物件的狀態，但不支援的方法或屬性所叫用。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>In this case, the member invocation is an error, and you can eliminate it.</source>
          <target state="translated">在此情況下，成員引動過程發生錯誤，但您也可以將它消除。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>You know the state of the object in advance (usually because your code has instantiated it), but the object is mis-configured.</source>
          <target state="translated">您已經知道物件的狀態 （通常是因為您的程式碼具現化），但此物件設定不正確。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>The following example illustrates this issue.</source>
          <target state="translated">下列範例說明這個問題。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>It creates a read-only <ph id="ph1">&lt;xref:System.IO.FileStream&gt;</ph> object  and then attempts to write to it.</source>
          <target state="translated">它會建立唯讀<ph id="ph1">&lt;xref:System.IO.FileStream&gt;</ph>物件，然後嘗試寫入其中。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>You can eliminate the exception by ensuring that the instantiated object supports the functionality you intend.</source>
          <target state="translated">您可以排除具現化的物件支援的功能，您想要確保例外狀況。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>The following example addresses the problem of the read-only <ph id="ph1">&lt;xref:System.IO.FileStream&gt;</ph> object by providing the correct arguments to the <ph id="ph2">&lt;xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%29?displayProperty=nameWithType&gt;</ph> constructor.</source>
          <target state="translated">下列範例將解決此問題的唯讀<ph id="ph1">&lt;xref:System.IO.FileStream&gt;</ph>藉由提供正確的引數物件<ph id="ph2">&lt;xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%29?displayProperty=nameWithType&gt;</ph>建構函式。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>You don't know the state of the object in advance, and the object doesn't support a particular operation.</source>
          <target state="translated">您事先不知道物件的狀態，此物件不支援特定的作業。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>In most cases, the object should include a property or method that indicates whether it supports a particular set of operations.</source>
          <target state="translated">在大部分情況下，該物件應該包含的屬性或方法，表示其是否支援一組特定的作業。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>You can eliminate the exception by checking the value of the object and invoking the member only if appropriate.</source>
          <target state="translated">您可以藉由檢查物件的值，並叫用成員，才適合消除例外狀況。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>The following example defines a <ph id="ph1">`DetectEncoding`</ph> method that throws a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> exception when it attempts to read from the beginning of a stream that does not support read access.</source>
          <target state="translated">下列範例會定義<ph id="ph1">`DetectEncoding`</ph>方法會擲回<ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph>例外狀況，當它嘗試讀取不支援讀取權限的資料流的開頭。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>You can eliminate the exception by examining the value of the <ph id="ph1">&lt;xref:System.IO.FileStream.CanRead%2A?displayProperty=nameWithType&gt;</ph> property  and exiting the method if the stream is read-only.</source>
          <target state="translated">您可以藉由檢查的值來消除例外狀況<ph id="ph1">&lt;xref:System.IO.FileStream.CanRead%2A?displayProperty=nameWithType&gt;</ph>屬性和結束方法，如果資料流是唯讀的。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>Related exception types</source>
          <target state="translated">相關的例外狀況類型</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>The <ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph> exception is closely related to two other exception types;</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph>為兩個其他的例外狀況類型，與密切相關的例外狀況</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source><ph id="ph1">&lt;xref:System.NotImplementedException&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.NotImplementedException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>This exception is thrown when a method could be implemented but is not, either because the member will be implemented in  a later version, the member is not available on  a particular platform, or the member belongs to an abstract class and a derived class must provide an implementation.</source>
          <target state="translated">擲回這個例外狀況時可能會實作方法，但不是，因為將較新版本中實作的成員、 成員並不適用於特定平台，或該成員所屬的抽象類別和衍生的類別必須提供 implementation。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>This exception is thrown in scenarios in which it is generally sometimes possible for the object to perform the requested operation, and the object state determines whether the operation can be performed.</source>
          <target state="translated">案例中通常有時可能會物件以執行要求的作業中擲回這個例外狀況和狀態物件可讓您判斷是否可以執行此作業。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>.NET Compact Framework notes</source>
          <target state="translated">.NET compact Framework 附註</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>When working with the <ph id="ph1">[!INCLUDE[Compact](~/includes/compact-md.md)]</ph> and using P/Invoke on a native function, this exception may be thrown if:</source>
          <target state="translated">與 <ph id="ph1">[!INCLUDE[Compact](~/includes/compact-md.md)]</ph> 搭配使用，並在原生函式中使用 P/Invoke 時，可能會在下列情況中擲回這個例外狀況：</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>The declaration in managed code is incorrect.</source>
          <target state="translated">Managed 程式碼中的宣告不正確。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>The <ph id="ph1">[!INCLUDE[Compact](~/includes/compact-md.md)]</ph> does not support what you are trying to do.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[Compact](~/includes/compact-md.md)]</ph> 不支援您嘗試進行的動作。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>The DLL names are mangled on export.</source>
          <target state="translated">DLL 名稱在輸出期間損壞。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>If a <ph id="ph1">&lt;xref:System.NotSupportedException.%23ctor%2A&gt;</ph> exception is thrown, check:</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.NotSupportedException.%23ctor%2A&gt;</ph>擲回例外狀況，請檢查：</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>For any violations of the <ph id="ph1">[!INCLUDE[Compact](~/includes/compact-md.md)]</ph> P/Invoke restrictions.</source>
          <target state="translated">任何違反 <ph id="ph1">[!INCLUDE[Compact](~/includes/compact-md.md)]</ph> P/Invoke 限制的行為。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>For any arguments that require pre-allocated memory.</source>
          <target state="translated">需要預先配置記憶體的任何引數。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>If these exist, you should pass a reference to an existing variable.</source>
          <target state="translated">如果這些引數存在的話，您必須將參考傳遞至現有變數。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>That the names of the exported functions are correct.</source>
          <target state="translated">輸出函式的所有名稱都是正確的。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>This can be verified with <bpt id="p1">[</bpt>DumpBin.exe<ept id="p1">](https://msdn.microsoft.com/library/c1h23y6c.aspx)</ept>.</source>
          <target state="translated">這可以透過確認<bpt id="p1">[</bpt>DumpBin.exe<ept id="p1">](https://msdn.microsoft.com/library/c1h23y6c.aspx)</ept>。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>That you are not attempting to pass too many arguments.</source>
          <target state="translated">您並未嘗試傳遞過多的引數。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="T:System.NotSupportedException">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.NotSupportedException.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> class, setting the <ph id="ph2">&lt;see cref="P:System.Exception.Message" /&gt;</ph> property of the new instance to a system-supplied message that describes the error.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> 類別的新執行個體，設定該新執行個體的 <ph id="ph2">&lt;see cref="P:System.Exception.Message" /&gt;</ph> 屬性為描述錯誤的系統提供訊息。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.NotSupportedException.#ctor">
          <source>This message takes into account the current system culture.</source>
          <target state="translated">此訊息會考量目前的系統文化特性。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.NotSupportedException.#ctor">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph>.</source>
          <target state="translated">下表顯示 <ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph> 執行個體的初始屬性值。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.NotSupportedException.#ctor">
          <source>Property</source>
          <target state="translated">屬性</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.NotSupportedException.#ctor">
          <source>Value</source>
          <target state="translated">值</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.NotSupportedException.#ctor">
          <source><ph id="ph1">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.NotSupportedException.#ctor">
          <source>The localized error message string.</source>
          <target state="translated">當地語系化的錯誤訊息字串。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.NotSupportedException.#ctor(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that describes the error.</source>
          <target state="translated">描述錯誤的 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.NotSupportedException.#ctor(System.String)">
          <source>The content of <bpt id="p1">&lt;c&gt;</bpt>message<ept id="p1">&lt;/c&gt;</ept> is intended to be understood by humans.</source>
          <target state="translated">「訊息」<bpt id="p1">&lt;c&gt;</bpt><ept id="p1">&lt;/c&gt;</ept>的內容必須能讓人了解。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.NotSupportedException.#ctor(System.String)">
          <source>The caller of this constructor is required to ensure that this string has been localized for the current system culture.</source>
          <target state="translated">這個建構函式的呼叫端必須確保這個字串已經被當地語系化 (為了目前系統的文化特性)。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.NotSupportedException.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> class with a specified error message.</source>
          <target state="translated">使用指定的錯誤訊息，初始化 <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.NotSupportedException.#ctor(System.String)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph>.</source>
          <target state="translated">下表顯示 <ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph> 執行個體的初始屬性值。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.NotSupportedException.#ctor(System.String)">
          <source>Property</source>
          <target state="translated">屬性</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.NotSupportedException.#ctor(System.String)">
          <source>Value</source>
          <target state="translated">值</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.NotSupportedException.#ctor(System.String)">
          <source><ph id="ph1">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.NotSupportedException.#ctor(System.String)">
          <source>The error message string.</source>
          <target state="translated">錯誤訊息字串。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.NotSupportedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The object that holds the serialized object data.</source>
          <target state="translated">存放序列物件資料的物件。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.NotSupportedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The contextual information about the source or destination.</source>
          <target state="translated">關於來源或目的端的內容資訊。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.NotSupportedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> class with serialized data.</source>
          <target state="translated">使用序列化資料，初始化 <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.NotSupportedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</source>
          <target state="translated">進行還原序列化 (Deserialization) 期間會呼叫這個建構函式，以便重新構成經由資料流傳送的例外狀況物件。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.NotSupportedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>For more information, see <bpt id="p1">[</bpt>XML and SOAP Serialization<ept id="p1">](~/docs/standard/serialization/xml-and-soap-serialization.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>XML 和 SOAP 序列化<ept id="p1">](~/docs/standard/serialization/xml-and-soap-serialization.md)</ept>。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.NotSupportedException.#ctor(System.String,System.Exception)">
          <source>The error message that explains the reason for the exception.</source>
          <target state="translated">解釋例外狀況原因的錯誤訊息。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.NotSupportedException.#ctor(System.String,System.Exception)">
          <source>The exception that is the cause of the current exception.</source>
          <target state="translated">做為目前例外狀況發生原因的例外狀況。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.NotSupportedException.#ctor(System.String,System.Exception)">
          <source>If the <bpt id="p1">&lt;c&gt;</bpt>innerException<ept id="p1">&lt;/c&gt;</ept> parameter is not a null reference, the current exception is raised in a <ph id="ph1">&lt;see langword="catch" /&gt;</ph> block that handles the inner exception.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>innerException<ept id="p1">&lt;/c&gt;</ept> 參數不是 Null 參考，目前的例外狀況會在處理內部例外的 <ph id="ph1">&lt;see langword="catch" /&gt;</ph> 區塊中引發。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.NotSupportedException.#ctor(System.String,System.Exception)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> class with a specified error message and a reference to the inner exception that is the cause of this exception.</source>
          <target state="translated">使用指定的錯誤訊息以及造成此例外狀況的內部例外狀況的參考，初始化 <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.NotSupportedException.#ctor(System.String,System.Exception)">
          <source>An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property.</source>
          <target state="translated">被擲回以做為前一個例外狀況直接結果的例外狀況，應該在 <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> 屬性中包含對前一個例外狀況的參考。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.NotSupportedException.#ctor(System.String,System.Exception)">
          <source>The <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property returns the same value that is passed into the constructor, or <ph id="ph2">`null`</ph> if the <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property does not supply the inner exception value to the constructor.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> 屬性會傳回與傳入建構函式中相同的值；如果 <ph id="ph2">`null`</ph> 屬性沒有提供內部例外值給建構函式，則傳回 <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.NotSupportedException.#ctor(System.String,System.Exception)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph>.</source>
          <target state="translated">下表顯示 <ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph> 執行個體的初始屬性值。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.NotSupportedException.#ctor(System.String,System.Exception)">
          <source>Property</source>
          <target state="translated">屬性</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.NotSupportedException.#ctor(System.String,System.Exception)">
          <source>Value</source>
          <target state="translated">值</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.NotSupportedException.#ctor(System.String,System.Exception)">
          <source>The inner exception reference.</source>
          <target state="translated">內部例外狀況參考。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.NotSupportedException.#ctor(System.String,System.Exception)">
          <source>The error message string.</source>
          <target state="translated">錯誤訊息字串。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>