<Type Name="AppDomainManager" FullName="System.AppDomainManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="42122049eeed0f6c1a39fa6ec6a2b24af684ada3" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48712649" /></Metadata><TypeSignature Language="C#" Value="public class AppDomainManager : MarshalByRefObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AppDomainManager extends System.MarshalByRefObject" />
  <TypeSignature Language="DocId" Value="T:System.AppDomainManager" />
  <TypeSignature Language="VB.NET" Value="Public Class AppDomainManager&#xA;Inherits MarshalByRefObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class AppDomainManager : MarshalByRefObject" />
  <TypeSignature Language="F#" Value="type AppDomainManager = class&#xA;    inherit MarshalByRefObject" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="cfc22-101">提供 Unmanaged 主機的 Managed 對等項目。</span><span class="sxs-lookup"><span data-stu-id="cfc22-101">Provides a managed equivalent of an unmanaged host.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="cfc22-102">請勿使用<xref:System.AppDomainManager>在 ASP.NET 中設定應用程式定義域。</span><span class="sxs-lookup"><span data-stu-id="cfc22-102">Do not use <xref:System.AppDomainManager> to configure an application domain in ASP.NET.</span></span> <span data-ttu-id="cfc22-103">在 ASP.NET 中，組態必須由主應用程式處理。</span><span class="sxs-lookup"><span data-stu-id="cfc22-103">In ASP.NET, configuration must be handled by the host.</span></span>  
  
 <span data-ttu-id="cfc22-104">實作<xref:System.AppDomainManager>類別可讓您建立新的應用程式定義域中參與裝載應用程式。</span><span class="sxs-lookup"><span data-stu-id="cfc22-104">Implementing the <xref:System.AppDomainManager> class enables a hosting application to participate in the creation of new application domains.</span></span> <span data-ttu-id="cfc22-105">若要取代預設<xref:System.AppDomainManager>，識別的組件和類型取代<xref:System.AppDomainManager>APPDOMAIN_MANAGER_ASM 和 APPDOMAIN_MANAGER_TYPE 環境變數，或使用[ \<appDomainManagerAssembly>](~/docs/framework/configure-apps/file-schema/runtime/appdomainmanagerassembly-element.md)並[ \<appDomainManagerType >](~/docs/framework/configure-apps/file-schema/runtime/appdomainmanagertype-element.md)組態檔中的項目。</span><span class="sxs-lookup"><span data-stu-id="cfc22-105">To replace the default <xref:System.AppDomainManager>, identify the assembly and type of the replacement <xref:System.AppDomainManager> in the APPDOMAIN_MANAGER_ASM and APPDOMAIN_MANAGER_TYPE environment variables, or use the [\<appDomainManagerAssembly>](~/docs/framework/configure-apps/file-schema/runtime/appdomainmanagerassembly-element.md) and [\<appDomainManagerType>](~/docs/framework/configure-apps/file-schema/runtime/appdomainmanagertype-element.md) elements in your configuration file.</span></span> <span data-ttu-id="cfc22-106">組件必須是完全受信任，而且包含在全域組件快取或啟動的應用程式的目錄。</span><span class="sxs-lookup"><span data-stu-id="cfc22-106">The assembly must be fully trusted and be contained in the global assembly cache or the directory of the starting application.</span></span> <span data-ttu-id="cfc22-107">環境變數中，必須完整限定的型別和組件名稱。</span><span class="sxs-lookup"><span data-stu-id="cfc22-107">The type and assembly names must be fully qualified in the environment variables.</span></span> <span data-ttu-id="cfc22-108">例如: </span><span class="sxs-lookup"><span data-stu-id="cfc22-108">For example:</span></span>  
  
 `set APPDOMAIN_MANAGER_TYPE=MyNamespace.TestAppDomainManager`  
  
 `set APPDOMAIN_MANAGER_ASM=customappDomainmanager, Version=1.0.0.0, Culture=neutral, PublicKeyToken=f1368f7b12a08d72`  
  
> [!IMPORTANT]
>  <span data-ttu-id="cfc22-109">如果組件包含您的子類別的<xref:System.AppDomainManager>會標有條件式的組件而定<xref:System.Security.AllowPartiallyTrustedCallersAttribute>(APTCA) 屬性，您必須包含這些組件的清單中，您將傳遞給<xref:System.AppDomainSetup.PartialTrustVisibleAssemblies%2A>屬性<xref:System.AppDomainSetup>您用來建立應用程式定義域。</span><span class="sxs-lookup"><span data-stu-id="cfc22-109">If the assembly that contains your subclass of <xref:System.AppDomainManager> depends on assemblies that are marked with the conditional <xref:System.Security.AllowPartiallyTrustedCallersAttribute> (APTCA) attribute, you must include those assemblies in the list that you pass to the <xref:System.AppDomainSetup.PartialTrustVisibleAssemblies%2A> property of the <xref:System.AppDomainSetup> you use to create application domains.</span></span> <span data-ttu-id="cfc22-110">否則，將停用條件式 APTCA 屬性標記的組件。</span><span class="sxs-lookup"><span data-stu-id="cfc22-110">Otherwise, the assemblies that are marked with the conditional APTCA attribute will be disabled.</span></span>  
  
 <span data-ttu-id="cfc22-111"><xref:System.AppDomainManager>相當於受管理的受管理的主機。</span><span class="sxs-lookup"><span data-stu-id="cfc22-111">The <xref:System.AppDomainManager> is the managed equivalent of the unmanaged host.</span></span> <span data-ttu-id="cfc22-112"><xref:System.AppDomainManager>物件參與新的應用程式定義域的處理序中建立，並且可以自訂新<xref:System.AppDomain>其他 managed 程式碼執行之前。</span><span class="sxs-lookup"><span data-stu-id="cfc22-112">An <xref:System.AppDomainManager> object participates in the creation of new application domains in a process and can customize the new <xref:System.AppDomain> before other managed code runs.</span></span> <span data-ttu-id="cfc22-113"><xref:System.AppDomainManager>也可以提供主機管理員參與執行 common language runtime 的其他層面。</span><span class="sxs-lookup"><span data-stu-id="cfc22-113">The <xref:System.AppDomainManager> can also supply host managers that participate in other aspects of common language runtime execution.</span></span> <span data-ttu-id="cfc22-114">例如，<xref:System.AppDomainManager>可識別<xref:System.Security.HostSecurityManager>參與應用程式定義域的安全性決策的物件。</span><span class="sxs-lookup"><span data-stu-id="cfc22-114">For example, an <xref:System.AppDomainManager> can identify a <xref:System.Security.HostSecurityManager> object that participates in the security decisions of the application domain.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cfc22-115">只授與的組件`FullTrust`，例如在全域組件快取中的組件或已識別為`fullTrustAssemblies`中<xref:System.AppDomain.CreateDomain%28System.String%2CSystem.Security.Policy.Evidence%2CSystem.AppDomainSetup%2CSystem.Security.PermissionSet%2CSystem.Security.Policy.StrongName%5B%5D%29?displayProperty=nameWithType>方法載入<xref:System.AppDomainManager.%23ctor%2A>建構函式和<xref:System.AppDomainManager.InitializeNewDomain%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="cfc22-115">Only assemblies granted `FullTrust`, such as assemblies in the global assembly cache or identified as `fullTrustAssemblies` in the <xref:System.AppDomain.CreateDomain%28System.String%2CSystem.Security.Policy.Evidence%2CSystem.AppDomainSetup%2CSystem.Security.PermissionSet%2CSystem.Security.Policy.StrongName%5B%5D%29?displayProperty=nameWithType> method can be loaded in the  <xref:System.AppDomainManager.%23ctor%2A> constructor and the <xref:System.AppDomainManager.InitializeNewDomain%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cfc22-116">這個類別包含的連結要求和繼承要求在類別層級。</span><span class="sxs-lookup"><span data-stu-id="cfc22-116">This class contains a link demand and an inheritance demand at the class level.</span></span> <span data-ttu-id="cfc22-117">A<xref:System.Security.SecurityException>立即呼叫端或衍生的類別沒有基礎結構權限時，會擲回。</span><span class="sxs-lookup"><span data-stu-id="cfc22-117">A <xref:System.Security.SecurityException> is thrown when either the immediate caller or the derived class does not have infrastructure permission.</span></span> <span data-ttu-id="cfc22-118">如需安全性需求的詳細資訊，請參閱[連結要求](~/docs/framework/misc/link-demands.md)並[繼承要求](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/x4yx82e6(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="cfc22-118">For details about security demands, see [Link Demands](~/docs/framework/misc/link-demands.md) and [Inheritance Demands](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/x4yx82e6(v=vs.100)).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cfc22-119">下列範例顯示的簡單實作<xref:System.AppDomainManager>。</span><span class="sxs-lookup"><span data-stu-id="cfc22-119">The following example shows a very simple implementation of <xref:System.AppDomainManager>.</span></span>  
  
 [!code-csharp[System.AppDomainManager#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.AppDomainManager/CS/customAppDomainManager.cs#1)]
 [!code-vb[System.AppDomainManager#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.AppDomainManager/VB/customAppDomainManager.vb#1)]  
  
 ]]></format>
    </remarks>
    <exception cref="T:System.Security.SecurityException"><span data-ttu-id="cfc22-120">呼叫端沒有正確的權限。</span><span class="sxs-lookup"><span data-stu-id="cfc22-120">The caller does not have the correct permissions.</span></span> <span data-ttu-id="cfc22-121">請參閱＜需求＞一節。</span><span class="sxs-lookup"><span data-stu-id="cfc22-121">See the Requirements section.</span></span></exception>
    <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="cfc22-122">需要完全信任立即呼叫端。</span><span class="sxs-lookup"><span data-stu-id="cfc22-122">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="cfc22-123">此成員不能由部分信任或不透明的程式碼。</span><span class="sxs-lookup"><span data-stu-id="cfc22-123">This member cannot be used by partially trusted or transparent code.</span></span></permission>
    <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="cfc22-124">讓衍生類別，可執行檔的程式碼插入 common language runtime 裝載基礎結構。</span><span class="sxs-lookup"><span data-stu-id="cfc22-124">for derived classes to plug executable code into the common language runtime hosting infrastructure.</span></span> <span data-ttu-id="cfc22-125">關聯的列舉型別：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" />。</span><span class="sxs-lookup"><span data-stu-id="cfc22-125">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" />.</span></span></permission>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AppDomainManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomainManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AppDomainManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cfc22-126">初始化 <see cref="T:System.AppDomainManager" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="cfc22-126">Initializes a new instance of the <see cref="T:System.AppDomainManager" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="cfc22-127">只授與的組件`FullTrust`，例如在全域組件快取中的組件或已識別為`fullTrustAssemblies`中<xref:System.AppDomain.CreateDomain%28System.String%2CSystem.Security.Policy.Evidence%2CSystem.AppDomainSetup%2CSystem.Security.PermissionSet%2CSystem.Security.Policy.StrongName%5B%5D%29?displayProperty=nameWithType>方法載入<xref:System.AppDomainManager.%23ctor%2A>建構函式和<xref:System.AppDomainManager.InitializeNewDomain%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="cfc22-127">Only assemblies granted `FullTrust`, such as assemblies in the global assembly cache or identified as `fullTrustAssemblies` in the <xref:System.AppDomain.CreateDomain%28System.String%2CSystem.Security.Policy.Evidence%2CSystem.AppDomainSetup%2CSystem.Security.PermissionSet%2CSystem.Security.Policy.StrongName%5B%5D%29?displayProperty=nameWithType> method can be loaded in the  <xref:System.AppDomainManager.%23ctor%2A> constructor and the <xref:System.AppDomainManager.InitializeNewDomain%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="cfc22-128">需要完全信任立即呼叫端。</span><span class="sxs-lookup"><span data-stu-id="cfc22-128">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="cfc22-129">此成員不能由部分信任或不透明的程式碼。</span><span class="sxs-lookup"><span data-stu-id="cfc22-129">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="ApplicationActivator">
      <MemberSignature Language="C#" Value="public virtual System.Runtime.Hosting.ApplicationActivator ApplicationActivator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Hosting.ApplicationActivator ApplicationActivator" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainManager.ApplicationActivator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ApplicationActivator As ApplicationActivator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Runtime::Hosting::ApplicationActivator ^ ApplicationActivator { System::Runtime::Hosting::ApplicationActivator ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationActivator : System.Runtime.Hosting.ApplicationActivator" Usage="System.AppDomainManager.ApplicationActivator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Hosting.ApplicationActivator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cfc22-130">取得應用程式啟動項，這個應用程式啟動項會處理定義域中增益集和資訊清單架構應用程式的啟動。</span><span class="sxs-lookup"><span data-stu-id="cfc22-130">Gets the application activator that handles the activation of add-ins and manifest-based applications for the domain.</span></span></summary>
        <value><span data-ttu-id="cfc22-131">應用程式啟動項 (Activator)。</span><span class="sxs-lookup"><span data-stu-id="cfc22-131">The application activator.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cfc22-132">沒有單一的指定執行個體的<xref:System.Runtime.Hosting.ApplicationActivator>類別中每個<xref:System.AppDomain>啟用呼叫路由傳送的所有增益集和資訊清單架構應用程式。</span><span class="sxs-lookup"><span data-stu-id="cfc22-132">There is a single designated instance of the <xref:System.Runtime.Hosting.ApplicationActivator> class in each <xref:System.AppDomain> to which all add-in and manifest-based application activation calls are routed.</span></span> <span data-ttu-id="cfc22-133"><xref:System.AppDomainManager>目前<xref:System.AppDomain>可以提供自己的自訂<xref:System.Runtime.Hosting.ApplicationActivator>，或執行個體的預設值<xref:System.Runtime.Hosting.ApplicationActivator>建立。</span><span class="sxs-lookup"><span data-stu-id="cfc22-133">The <xref:System.AppDomainManager> for the current <xref:System.AppDomain> can provide its own custom <xref:System.Runtime.Hosting.ApplicationActivator>, or an instance of the default <xref:System.Runtime.Hosting.ApplicationActivator> is created.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckSecuritySettings">
      <MemberSignature Language="C#" Value="public virtual bool CheckSecuritySettings (System.Security.SecurityState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CheckSecuritySettings(class System.Security.SecurityState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomainManager.CheckSecuritySettings(System.Security.SecurityState)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckSecuritySettings (state As SecurityState) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CheckSecuritySettings(System::Security::SecurityState ^ state);" />
      <MemberSignature Language="F#" Value="abstract member CheckSecuritySettings : System.Security.SecurityState -&gt; bool&#xA;override this.CheckSecuritySettings : System.Security.SecurityState -&gt; bool" Usage="appDomainManager.CheckSecuritySettings state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Security.SecurityState" />
      </Parameters>
      <Docs>
        <param name="state"><span data-ttu-id="cfc22-134"><see cref="T:System.Security.SecurityState" /> 的子類別，指出要求其安全性狀態的作業。</span><span class="sxs-lookup"><span data-stu-id="cfc22-134">A subclass of <see cref="T:System.Security.SecurityState" /> that identifies the operation whose security status is requested.</span></span></param>
        <summary><span data-ttu-id="cfc22-135">表示應用程式定義域中是否允許指定的作業。</span><span class="sxs-lookup"><span data-stu-id="cfc22-135">Indicates whether the specified operation is allowed in the application domain.</span></span></summary>
        <returns><span data-ttu-id="cfc22-136">如果主機允許在應用程式定義域中執行 <paramref name="state" /> 所指定的作業，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cfc22-136"><see langword="true" /> if the host allows the operation specified by <paramref name="state" /> to be performed in the application domain; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cfc22-137">這個方法的預設實作會傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="cfc22-137">The default implementation of this method returns `false`.</span></span>  
  
 <span data-ttu-id="cfc22-138">這個方法時，會呼叫<xref:System.IO.IsolatedStorage.IsolatedStorageFile.IncreaseQuotaTo%2A?displayProperty=nameWithType>已呼叫方法，來增加隔離儲存區配額。</span><span class="sxs-lookup"><span data-stu-id="cfc22-138">This method is called when the <xref:System.IO.IsolatedStorage.IsolatedStorageFile.IncreaseQuotaTo%2A?displayProperty=nameWithType> method has been called to increase the isolated storage quota.</span></span> <span data-ttu-id="cfc22-139">裝載 common language runtime (CLR) 的應用程式可以覆寫<xref:System.AppDomainManager.CheckSecuritySettings%2A>方法，以執行原則決策依據<xref:System.IO.IsolatedStorage.IsolatedStorageSecurityState>物件 (繼承<xref:System.Security.SecurityState>)，並可以再允許或防止增加。</span><span class="sxs-lookup"><span data-stu-id="cfc22-139">An application that hosts the common language runtime (CLR) can override the <xref:System.AppDomainManager.CheckSecuritySettings%2A> method to perform policy decisions based on an <xref:System.IO.IsolatedStorage.IsolatedStorageSecurityState> object (which inherits <xref:System.Security.SecurityState>), and can then allow or prevent the increase.</span></span> <span data-ttu-id="cfc22-140">比方說，主機可以提示使用者核准或拒絕要求，以增加配額。</span><span class="sxs-lookup"><span data-stu-id="cfc22-140">For example, a host could prompt the end user to approve or deny the request to increase the quota.</span></span> <span data-ttu-id="cfc22-141">主應用程式的實作<xref:System.AppDomainManager.CheckSecuritySettings%2A>應該列入考量的阻絕服務攻擊的可能性。</span><span class="sxs-lookup"><span data-stu-id="cfc22-141">The host's implementation of <xref:System.AppDomainManager.CheckSecuritySettings%2A> should take into account the possibility of denial-of-service attacks.</span></span> <span data-ttu-id="cfc22-142">比方說，它應該提示使用者，只有當方法呼叫從使用者起始的事件，例如按一下按鈕。</span><span class="sxs-lookup"><span data-stu-id="cfc22-142">For example, it should prompt the user only if the method is called from a user-initiated event such as a button click.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDomain">
      <MemberSignature Language="C#" Value="public virtual AppDomain CreateDomain (string friendlyName, System.Security.Policy.Evidence securityInfo, AppDomainSetup appDomainInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AppDomain CreateDomain(string friendlyName, class System.Security.Policy.Evidence securityInfo, class System.AppDomainSetup appDomainInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomainManager.CreateDomain(System.String,System.Security.Policy.Evidence,System.AppDomainSetup)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateDomain (friendlyName As String, securityInfo As Evidence, appDomainInfo As AppDomainSetup) As AppDomain" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual AppDomain ^ CreateDomain(System::String ^ friendlyName, System::Security::Policy::Evidence ^ securityInfo, AppDomainSetup ^ appDomainInfo);" />
      <MemberSignature Language="F#" Value="abstract member CreateDomain : string * System.Security.Policy.Evidence * AppDomainSetup -&gt; AppDomain&#xA;override this.CreateDomain : string * System.Security.Policy.Evidence * AppDomainSetup -&gt; AppDomain" Usage="appDomainManager.CreateDomain (friendlyName, securityInfo, appDomainInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.AppDomain</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="friendlyName" Type="System.String" />
        <Parameter Name="securityInfo" Type="System.Security.Policy.Evidence" />
        <Parameter Name="appDomainInfo" Type="System.AppDomainSetup" />
      </Parameters>
      <Docs>
        <param name="friendlyName"><span data-ttu-id="cfc22-143">定義域的易記名稱。</span><span class="sxs-lookup"><span data-stu-id="cfc22-143">The friendly name of the domain.</span></span></param>
        <param name="securityInfo"><span data-ttu-id="cfc22-144">物件，包含透過安全性原則對應的辨識項，以建立堆疊頂部使用權限集合。</span><span class="sxs-lookup"><span data-stu-id="cfc22-144">An object that contains evidence mapped through the security policy to establish a top-of-stack permission set.</span></span></param>
        <param name="appDomainInfo"><span data-ttu-id="cfc22-145">物件，包含應用程式定義域初始化資訊。</span><span class="sxs-lookup"><span data-stu-id="cfc22-145">An object that contains application domain initialization information.</span></span></param>
        <summary><span data-ttu-id="cfc22-146">傳回新的或現有的應用程式定義域。</span><span class="sxs-lookup"><span data-stu-id="cfc22-146">Returns a new or existing application domain.</span></span></summary>
        <returns><span data-ttu-id="cfc22-147">新的或現有的應用程式定義域。</span><span class="sxs-lookup"><span data-stu-id="cfc22-147">A new or existing application domain.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cfc22-148">所指定的易記名稱`friendlyName`參數，可以顯示在使用者介面，以識別該定義域中。</span><span class="sxs-lookup"><span data-stu-id="cfc22-148">The friendly name, specified by the `friendlyName` parameter, can be displayed in user interfaces to identify the domain.</span></span> <span data-ttu-id="cfc22-149">如需詳細資訊，請參閱 <xref:System.AppDomain.FriendlyName%2A> 屬性 (Property)。</span><span class="sxs-lookup"><span data-stu-id="cfc22-149">For more information, see the <xref:System.AppDomain.FriendlyName%2A> property.</span></span>  
  
 <span data-ttu-id="cfc22-150">預設值<xref:System.AppDomainManager.CreateDomain%2A>方法會呼叫受保護<xref:System.AppDomainManager.CreateDomainHelper%2A>方法，以建立<xref:System.AppDomain>。</span><span class="sxs-lookup"><span data-stu-id="cfc22-150">The default <xref:System.AppDomainManager.CreateDomain%2A> method calls the protected <xref:System.AppDomainManager.CreateDomainHelper%2A> method to create the <xref:System.AppDomain>.</span></span> <span data-ttu-id="cfc22-151">覆寫這個方法不需要呼叫<xref:System.AppDomainManager.CreateDomainHelper%2A>方法，但可以傳回現有的網域。</span><span class="sxs-lookup"><span data-stu-id="cfc22-151">Overrides of this method do not need to call the <xref:System.AppDomainManager.CreateDomainHelper%2A> method but can return an existing domain.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="cfc22-152">當您繼承自<see cref="T:System.AppDomainManager" />類別並覆寫<see cref="M:System.AppDomainManager.CreateDomain(System.String,System.Security.Policy.Evidence,System.AppDomainSetup)" />方法，您可以執行自訂的應用程式網域初始化活動，然後再呼叫<see cref="M:System.AppDomainManager.CreateDomainHelper(System.String,System.Security.Policy.Evidence,System.AppDomainSetup)" />方法或呼叫所有的 helper 方法。</span><span class="sxs-lookup"><span data-stu-id="cfc22-152">When you inherit from the <see cref="T:System.AppDomainManager" /> class and override the <see cref="M:System.AppDomainManager.CreateDomain(System.String,System.Security.Policy.Evidence,System.AppDomainSetup)" /> method, you can perform custom application domain initialization activities before calling the <see cref="M:System.AppDomainManager.CreateDomainHelper(System.String,System.Security.Policy.Evidence,System.AppDomainSetup)" /> method, or not call the helper method at all.</span></span>  <span data-ttu-id="cfc22-153">例如，您可以修改為傳入的辨識項<paramref name="securityInfo" />，相關聯的欄位更新為<see cref="T:System.AppDomainSetup" />，或重複使用現有的網域。</span><span class="sxs-lookup"><span data-stu-id="cfc22-153">For example, you could modify the evidence passed in as <paramref name="securityInfo" />, update the fields of the associated <see cref="T:System.AppDomainSetup" />, or reuse an exiting domain.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="CreateDomainHelper">
      <MemberSignature Language="C#" Value="protected static AppDomain CreateDomainHelper (string friendlyName, System.Security.Policy.Evidence securityInfo, AppDomainSetup appDomainInfo);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.AppDomain CreateDomainHelper(string friendlyName, class System.Security.Policy.Evidence securityInfo, class System.AppDomainSetup appDomainInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomainManager.CreateDomainHelper(System.String,System.Security.Policy.Evidence,System.AppDomainSetup)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function CreateDomainHelper (friendlyName As String, securityInfo As Evidence, appDomainInfo As AppDomainSetup) As AppDomain" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static AppDomain ^ CreateDomainHelper(System::String ^ friendlyName, System::Security::Policy::Evidence ^ securityInfo, AppDomainSetup ^ appDomainInfo);" />
      <MemberSignature Language="F#" Value="static member CreateDomainHelper : string * System.Security.Policy.Evidence * AppDomainSetup -&gt; AppDomain" Usage="System.AppDomainManager.CreateDomainHelper (friendlyName, securityInfo, appDomainInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.AppDomain</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="friendlyName" Type="System.String" />
        <Parameter Name="securityInfo" Type="System.Security.Policy.Evidence" />
        <Parameter Name="appDomainInfo" Type="System.AppDomainSetup" />
      </Parameters>
      <Docs>
        <param name="friendlyName"><span data-ttu-id="cfc22-154">定義域的易記名稱。</span><span class="sxs-lookup"><span data-stu-id="cfc22-154">The friendly name of the domain.</span></span></param>
        <param name="securityInfo"><span data-ttu-id="cfc22-155">物件，包含透過安全性原則對應的辨識項，以建立堆疊頂部使用權限集合。</span><span class="sxs-lookup"><span data-stu-id="cfc22-155">An object that contains evidence mapped through the security policy to establish a top-of-stack permission set.</span></span></param>
        <param name="appDomainInfo"><span data-ttu-id="cfc22-156">物件，包含應用程式定義域初始化資訊。</span><span class="sxs-lookup"><span data-stu-id="cfc22-156">An object that contains application domain initialization information.</span></span></param>
        <summary><span data-ttu-id="cfc22-157">提供建立應用程式定義域的 Helper 方法。</span><span class="sxs-lookup"><span data-stu-id="cfc22-157">Provides a helper method to create an application domain.</span></span></summary>
        <returns><span data-ttu-id="cfc22-158">新建立的應用程式定義域。</span><span class="sxs-lookup"><span data-stu-id="cfc22-158">A newly created application domain.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cfc22-159">這個受保護的 helper 方法會負責建立新的應用程式定義域。</span><span class="sxs-lookup"><span data-stu-id="cfc22-159">This protected helper method handles the creation of a new application domain.</span></span>  
  
 <span data-ttu-id="cfc22-160">此易記名稱，由指定`friendlyName`參數，可以顯示在使用者介面，以識別該定義域中。</span><span class="sxs-lookup"><span data-stu-id="cfc22-160">This friendly name, specified by the `friendlyName` parameter, can be displayed in user interfaces to identify the domain.</span></span> <span data-ttu-id="cfc22-161">如需詳細資訊，請參閱 <xref:System.AppDomain.FriendlyName%2A> 屬性 (Property)。</span><span class="sxs-lookup"><span data-stu-id="cfc22-161">For more information, see the <xref:System.AppDomain.FriendlyName%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cfc22-162"><paramref name="friendlyName" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="cfc22-162"><paramref name="friendlyName" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="cfc22-163">用於控制辨識項。</span><span class="sxs-lookup"><span data-stu-id="cfc22-163">for controlling evidence.</span></span> <span data-ttu-id="cfc22-164">安全性動作： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span><span class="sxs-lookup"><span data-stu-id="cfc22-164">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="cfc22-165">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span><span class="sxs-lookup"><span data-stu-id="cfc22-165">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="EntryAssembly">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.Assembly EntryAssembly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Assembly EntryAssembly" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainManager.EntryAssembly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property EntryAssembly As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::Assembly ^ EntryAssembly { System::Reflection::Assembly ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EntryAssembly : System.Reflection.Assembly" Usage="System.AppDomainManager.EntryAssembly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cfc22-166">取得應用程式的項目組件。</span><span class="sxs-lookup"><span data-stu-id="cfc22-166">Gets the entry assembly for an application.</span></span></summary>
        <value><span data-ttu-id="cfc22-167">應用程式的項目組件。</span><span class="sxs-lookup"><span data-stu-id="cfc22-167">The entry assembly for the application.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cfc22-168">如果應用程式資訊清單啟動的應用程式，進入點組件由應用程式資訊清單中。</span><span class="sxs-lookup"><span data-stu-id="cfc22-168">If the application is a manifest-activated application, the entry assembly is determined from the application manifest.</span></span> <span data-ttu-id="cfc22-169">如果應用程式不是資訊清單啟動，進入點組件是可執行程序在預設應用程式定義域中。</span><span class="sxs-lookup"><span data-stu-id="cfc22-169">If the application is not manifest activated, the entry assembly is the process executable in the default application domain.</span></span> <span data-ttu-id="cfc22-170">在其他應用程式網域中，進入點組件是由已執行的第一個可<xref:System.AppDomain.ExecuteAssembly%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="cfc22-170">In other application domains, the entry assembly is the first executable that was executed by the <xref:System.AppDomain.ExecuteAssembly%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HostExecutionContextManager">
      <MemberSignature Language="C#" Value="public virtual System.Threading.HostExecutionContextManager HostExecutionContextManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.HostExecutionContextManager HostExecutionContextManager" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainManager.HostExecutionContextManager" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HostExecutionContextManager As HostExecutionContextManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Threading::HostExecutionContextManager ^ HostExecutionContextManager { System::Threading::HostExecutionContextManager ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HostExecutionContextManager : System.Threading.HostExecutionContextManager" Usage="System.AppDomainManager.HostExecutionContextManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.HostExecutionContextManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cfc22-171">取得管理執行內容流程的主機執行內容管理員。</span><span class="sxs-lookup"><span data-stu-id="cfc22-171">Gets the host execution context manager that manages the flow of the execution context.</span></span></summary>
        <value><span data-ttu-id="cfc22-172">主機執行內容管理員。</span><span class="sxs-lookup"><span data-stu-id="cfc22-172">The host execution context manager.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cfc22-173">這個屬性可讓主機提供<xref:System.Threading.HostExecutionContextManager>可參與的流程的執行內容的非同步呼叫。</span><span class="sxs-lookup"><span data-stu-id="cfc22-173">This property allows a host to provide a <xref:System.Threading.HostExecutionContextManager> that can participate in the flow of the execution context across asynchronous calls.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HostSecurityManager">
      <MemberSignature Language="C#" Value="public virtual System.Security.HostSecurityManager HostSecurityManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.HostSecurityManager HostSecurityManager" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainManager.HostSecurityManager" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HostSecurityManager As HostSecurityManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::HostSecurityManager ^ HostSecurityManager { System::Security::HostSecurityManager ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HostSecurityManager : System.Security.HostSecurityManager" Usage="System.AppDomainManager.HostSecurityManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.HostSecurityManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cfc22-174">取得參與應用程式定義域安全性決策的主機安全性管理員。</span><span class="sxs-lookup"><span data-stu-id="cfc22-174">Gets the host security manager that participates in security decisions for the application domain.</span></span></summary>
        <value><span data-ttu-id="cfc22-175">主機安全性管理員。</span><span class="sxs-lookup"><span data-stu-id="cfc22-175">The host security manager.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cfc22-176">這個屬性可讓主機提供<xref:System.Security.HostSecurityManager>參與應用程式定義域的安全性決策。</span><span class="sxs-lookup"><span data-stu-id="cfc22-176">This property allows a host to provide a <xref:System.Security.HostSecurityManager> to participate in the security decisions for the application domain.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cfc22-177">下列範例示範的覆寫<xref:System.AppDomainManager.HostSecurityManager%2A>自訂應用程式定義域管理員的屬性。</span><span class="sxs-lookup"><span data-stu-id="cfc22-177">The following example shows an override of the <xref:System.AppDomainManager.HostSecurityManager%2A> property for a custom application domain manager.</span></span> <span data-ttu-id="cfc22-178">此程式碼範例是針對提供之較大範例的一部分<xref:System.AppDomainManager>類別。</span><span class="sxs-lookup"><span data-stu-id="cfc22-178">This code example is part of a larger example provided for the <xref:System.AppDomainManager> class.</span></span>  
  
 [!code-csharp[System.AppDomainManager#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.AppDomainManager/CS/customAppDomainManager.cs#3)]
 [!code-vb[System.AppDomainManager#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.AppDomainManager/VB/customAppDomainManager.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializationFlags">
      <MemberSignature Language="C#" Value="public AppDomainManagerInitializationOptions InitializationFlags { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.AppDomainManagerInitializationOptions InitializationFlags" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainManager.InitializationFlags" />
      <MemberSignature Language="VB.NET" Value="Public Property InitializationFlags As AppDomainManagerInitializationOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property AppDomainManagerInitializationOptions InitializationFlags { AppDomainManagerInitializationOptions get(); void set(AppDomainManagerInitializationOptions value); };" />
      <MemberSignature Language="F#" Value="member this.InitializationFlags : AppDomainManagerInitializationOptions with get, set" Usage="System.AppDomainManager.InitializationFlags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AppDomainManagerInitializationOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cfc22-179">取得自訂應用程式定義域管理員的初始設定旗標。</span><span class="sxs-lookup"><span data-stu-id="cfc22-179">Gets the initialization flags for custom application domain managers.</span></span></summary>
        <value><span data-ttu-id="cfc22-180">列舉值的位元組合，這些值描述要執行的初始設定動作。</span><span class="sxs-lookup"><span data-stu-id="cfc22-180">A bitwise combination of the enumeration values that describe the initialization action to perform.</span></span> <span data-ttu-id="cfc22-181">預設值為 <see cref="F:System.AppDomainManagerInitializationOptions.None" />。</span><span class="sxs-lookup"><span data-stu-id="cfc22-181">The default is <see cref="F:System.AppDomainManagerInitializationOptions.None" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeNewDomain">
      <MemberSignature Language="C#" Value="public virtual void InitializeNewDomain (AppDomainSetup appDomainInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitializeNewDomain(class System.AppDomainSetup appDomainInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomainManager.InitializeNewDomain(System.AppDomainSetup)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InitializeNewDomain (appDomainInfo As AppDomainSetup)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InitializeNewDomain(AppDomainSetup ^ appDomainInfo);" />
      <MemberSignature Language="F#" Value="abstract member InitializeNewDomain : AppDomainSetup -&gt; unit&#xA;override this.InitializeNewDomain : AppDomainSetup -&gt; unit" Usage="appDomainManager.InitializeNewDomain appDomainInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appDomainInfo" Type="System.AppDomainSetup" />
      </Parameters>
      <Docs>
        <param name="appDomainInfo"><span data-ttu-id="cfc22-182">物件，包含應用程式定義域初始化資訊。</span><span class="sxs-lookup"><span data-stu-id="cfc22-182">An object that contains application domain initialization information.</span></span></param>
        <summary><span data-ttu-id="cfc22-183">初始化新應用程式定義域。</span><span class="sxs-lookup"><span data-stu-id="cfc22-183">Initializes the new application domain.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="cfc22-184">請勿使用這個方法來初始化在 ASP.NET 應用程式定義域。</span><span class="sxs-lookup"><span data-stu-id="cfc22-184">Do not use this method to initialize an application domain in ASP.NET.</span></span> <span data-ttu-id="cfc22-185">在 ASP.NET 中，組態必須由主應用程式處理。</span><span class="sxs-lookup"><span data-stu-id="cfc22-185">In ASP.NET, configuration must be handled by the host.</span></span> <span data-ttu-id="cfc22-186">如果您使用這個方法來初始化應用程式定義域時，會擲回主機<xref:System.InvalidOperationException>它會嘗試將初始化應用程式定義域。</span><span class="sxs-lookup"><span data-stu-id="cfc22-186">If you use this method to initialize the application domain, the host throws <xref:System.InvalidOperationException> when it attempts to initialize the application domain.</span></span> <span data-ttu-id="cfc22-187">例外狀況訊息指出已經進行初始化。</span><span class="sxs-lookup"><span data-stu-id="cfc22-187">The exception message indicates that initialization has already occurred.</span></span>  
  
 <span data-ttu-id="cfc22-188">建構函式之後，立即呼叫此方法。</span><span class="sxs-lookup"><span data-stu-id="cfc22-188">This method is called immediately after the constructor.</span></span> <span data-ttu-id="cfc22-189">預設值<xref:System.AppDomainManager.InitializeNewDomain%2A>實作不做任何動作。</span><span class="sxs-lookup"><span data-stu-id="cfc22-189">The default <xref:System.AppDomainManager.InitializeNewDomain%2A> implementation does nothing.</span></span>  <span data-ttu-id="cfc22-190">自訂實作可以設定內部的類別和委派、 設定受管理的主機介面的介面，或設定新的事件處理常式<xref:System.AppDomain>。</span><span class="sxs-lookup"><span data-stu-id="cfc22-190">A custom implementation can set up internal classes and delegates, set up an interface with the unmanaged host interface, or set up event handlers for the new <xref:System.AppDomain>.</span></span>  
  
 <span data-ttu-id="cfc22-191">此外，增益集啟用的自訂實作可以識別目前<xref:System.AppDomain>為目標的應用程式網域。</span><span class="sxs-lookup"><span data-stu-id="cfc22-191">Also, for add-in activations, a custom implementation could identify the current <xref:System.AppDomain> as the target application domain.</span></span>  
  
 <span data-ttu-id="cfc22-192">開頭為[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]，您可以使用這個方法，以預設應用程式定義域沙箱，在應用程式啟動時，或修改新的應用程式網域的沙箱。</span><span class="sxs-lookup"><span data-stu-id="cfc22-192">Beginning with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], you can use this method to sandbox the default application domain at application startup, or to modify the sandbox of a new application domain.</span></span> <span data-ttu-id="cfc22-193">若要這樣做，請調整<xref:System.Security.Policy.ApplicationTrust.DefaultGrantSet%2A>並<xref:System.Security.Policy.ApplicationTrust.FullTrustAssemblies%2A>上的屬性<xref:System.Security.Policy.ApplicationTrust>物件指派給<xref:System.AppDomainSetup.ApplicationTrust%2A?displayProperty=nameWithType>屬性`appDomainInfo`之前初始化應用程式定義域。</span><span class="sxs-lookup"><span data-stu-id="cfc22-193">To do this, adjust the <xref:System.Security.Policy.ApplicationTrust.DefaultGrantSet%2A> and <xref:System.Security.Policy.ApplicationTrust.FullTrustAssemblies%2A> properties on the <xref:System.Security.Policy.ApplicationTrust> object that is assigned to the <xref:System.AppDomainSetup.ApplicationTrust%2A?displayProperty=nameWithType> property of `appDomainInfo`, before you initialize the application domain.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cfc22-194">只授與的組件`FullTrust`，例如在全域組件快取中的組件或已識別為`fullTrustAssemblies`中<xref:System.AppDomain.CreateDomain%28System.String%2CSystem.Security.Policy.Evidence%2CSystem.AppDomainSetup%2CSystem.Security.PermissionSet%2CSystem.Security.Policy.StrongName%5B%5D%29?displayProperty=nameWithType>方法載入<xref:System.AppDomainManager.%23ctor%2A>建構函式和<xref:System.AppDomainManager.InitializeNewDomain%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="cfc22-194">Only assemblies granted `FullTrust`, such as assemblies in the global assembly cache or identified as `fullTrustAssemblies` in the <xref:System.AppDomain.CreateDomain%28System.String%2CSystem.Security.Policy.Evidence%2CSystem.AppDomainSetup%2CSystem.Security.PermissionSet%2CSystem.Security.Policy.StrongName%5B%5D%29?displayProperty=nameWithType> method can be loaded in the  <xref:System.AppDomainManager.%23ctor%2A> constructor and the <xref:System.AppDomainManager.InitializeNewDomain%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cfc22-195">下列範例示範的覆寫<xref:System.AppDomainManager.InitializeNewDomain%2A>自訂應用程式定義域管理員的方法。</span><span class="sxs-lookup"><span data-stu-id="cfc22-195">The following example shows an override of the <xref:System.AppDomainManager.InitializeNewDomain%2A> method for a custom application domain manager.</span></span> <span data-ttu-id="cfc22-196">此程式碼範例是針對提供之較大範例的一部分<xref:System.AppDomainManager>類別。</span><span class="sxs-lookup"><span data-stu-id="cfc22-196">This code example is part of a larger example provided for the <xref:System.AppDomainManager> class.</span></span>  
  
 [!code-csharp[System.AppDomainManager#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.AppDomainManager/CS/customAppDomainManager.cs#2)]
 [!code-vb[System.AppDomainManager#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.AppDomainManager/VB/customAppDomainManager.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>