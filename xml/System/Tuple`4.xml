<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Tuple`4.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5361b517b3fa89e94bae2bd871dbff97540883363.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">361b517b3fa89e94bae2bd871dbff97540883363</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`4">
          <source>The type of the tuple's first component.</source>
          <target state="translated">Tuple 第 1 個元件的型別。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`4">
          <source>The type of the tuple's second component.</source>
          <target state="translated">Tuple 第 2 個元件的型別。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`4">
          <source>The type of the tuple's third component.</source>
          <target state="translated">Tuple 第 3 個元件的型別。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`4">
          <source>The type of the tuple's fourth component.</source>
          <target state="translated">Tuple 第 4 個元件的型別。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="T:System.Tuple`4">
          <source>Represents a 4-tuple, or quadruple.</source>
          <target state="translated">代表 4-Tuple 或四重物件。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`4">
          <source>A tuple is a data structure that has a specific number and sequence of values.</source>
          <target state="translated">Tuple 是具有特定數量和值序列的資料結構。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`4">
          <source>The <ph id="ph1">&lt;xref:System.Tuple%604&gt;</ph> class represents a 4-tuple, or quadruple, which is a tuple that has four components.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Tuple%604&gt;</ph>類別代表 4-tuple 或 4 倍，也就是 tuple，其中具有四個元件。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`4">
          <source>You can instantiate a <ph id="ph1">&lt;xref:System.Tuple%604&gt;</ph> object by calling either the <ph id="ph2">&lt;xref:System.Tuple%604.%23ctor%2A&gt;</ph> constructor or the static <ph id="ph3">&lt;xref:System.Tuple.Create%60%604%28%60%600%2C%60%601%2C%60%602%2C%60%603%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">您可以具現化<ph id="ph1">&lt;xref:System.Tuple%604&gt;</ph>藉由呼叫物件<ph id="ph2">&lt;xref:System.Tuple%604.%23ctor%2A&gt;</ph>建構函式或靜態<ph id="ph3">&lt;xref:System.Tuple.Create%60%604%28%60%600%2C%60%601%2C%60%602%2C%60%603%29?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`4">
          <source>You can retrieve the value of the tuple's components by using the read-only <ph id="ph1">&lt;xref:System.Tuple%604.Item1%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Tuple%604.Item2%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Tuple%604.Item3%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Tuple%604.Item4%2A&gt;</ph> instance properties.</source>
          <target state="translated">您可以擷取值的 tuple 的元件所使用的唯讀<ph id="ph1">&lt;xref:System.Tuple%604.Item1%2A&gt;</ph>， <ph id="ph2">&lt;xref:System.Tuple%604.Item2%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Tuple%604.Item3%2A&gt;</ph>，和<ph id="ph4">&lt;xref:System.Tuple%604.Item4%2A&gt;</ph>執行個體屬性。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`4">
          <source>Tuples are commonly used in four different ways:</source>
          <target state="translated">Tuple 常用於四種不同方式：</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`4">
          <source>To represent a single set of data.</source>
          <target state="translated">代表單一的資料集。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`4">
          <source>For example, a tuple can represent a database record, and its components can represent individual fields of the record.</source>
          <target state="translated">比方說，tuple 可以代表資料庫記錄，而其元件可以表示個別欄位的記錄。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`4">
          <source>To provide easy access to, and manipulation of, a data set.</source>
          <target state="translated">提供讓您輕鬆存取、 和操作的資料集。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`4">
          <source>The following example defines an array of <ph id="ph1">&lt;xref:System.Tuple%604&gt;</ph> objects that contain the names of baseball pitchers, the number of innings they pitched, and the number of earned runs (runs that scored without fielding errors), and hits that they gave up.</source>
          <target state="translated">下列範例會定義陣列<ph id="ph1">&lt;xref:System.Tuple%604&gt;</ph>物件，其中包含棒球 pitchers、 innings 它們音調、 數目和盈餘分析執行 （而不擲錯誤計分的執行），次數的名稱，並叫用它們放棄。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`4">
          <source>The array is passed to the <ph id="ph1">`ComputeStatistics`</ph> method, which calculates each pitcher's earned run average (the average number of runs given up in a nine-inning game), and the average number of hits given up per inning.</source>
          <target state="translated">陣列傳遞至<ph id="ph1">`ComputeStatistics`</ph>方法，它會計算每個罐狀盈餘分析執行平均 （放棄九 inning 遊戲中的回合的平均數目），以及叫用每個 inning 放棄的平均數目。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`4">
          <source>The method also uses these two averages to compute a hypothetical effectiveness average.</source>
          <target state="translated">方法也會使用這些兩個平均值計算假設的有效性平均值。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`4">
          <source>To return multiple values from a method without the use of <ph id="ph1">`out`</ph> parameters (in C#) or <ph id="ph2">`ByRef`</ph> parameters (in Visual Basic).</source>
          <target state="translated">若要傳回多個值的方法，而不會使用從<ph id="ph1">`out`</ph>參數 （在 C#) 或<ph id="ph2">`ByRef`</ph>參數 （在 Visual Basic)。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`4">
          <source>For example, the previous example returns its computed statistics, along with the name of the pitcher, in an array of <ph id="ph1">&lt;xref:System.Tuple%604&gt;</ph> objects.</source>
          <target state="translated">例如前, 一個範例會傳回其計算的統計資料，以及罐狀，名稱陣列中的<ph id="ph1">&lt;xref:System.Tuple%604&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`4">
          <source>To pass multiple values to a method through a single parameter.</source>
          <target state="translated">若要將多個值傳遞至方法，以透過單一參數。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`4">
          <source>For example, the <ph id="ph1">&lt;xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=nameWithType&gt;</ph> method has a single parameter that lets you supply one value to the method that the thread executes at startup.</source>
          <target state="translated">例如，<ph id="ph1">&lt;xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=nameWithType&gt;</ph>方法具有單一參數，可讓您提供一個執行緒啟動時執行之方法的值。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`4">
          <source>If you supply a <ph id="ph1">&lt;xref:System.Tuple%604&gt;</ph> object as the method argument, you can supply the thread’s startup routine with four items of data.</source>
          <target state="translated">如果您提供<ph id="ph1">&lt;xref:System.Tuple%604&gt;</ph>物件做為方法引數中，您可以提供四個項目之資料的執行緒啟動常式。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Tuple`4.#ctor(`0,`1,`2,`3)">
          <source>The value of the tuple's first component.</source>
          <target state="translated">Tuple 第 1 個元件的值。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Tuple`4.#ctor(`0,`1,`2,`3)">
          <source>The value of the tuple's second component.</source>
          <target state="translated">Tuple 第 2 個元件的值。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Tuple`4.#ctor(`0,`1,`2,`3)">
          <source>The value of the tuple's third component.</source>
          <target state="translated">Tuple 第 3 個元件的值。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Tuple`4.#ctor(`0,`1,`2,`3)">
          <source>The value of the tuple's fourth component</source>
          <target state="translated">Tuple 第 4 個元件的值。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Tuple`4.#ctor(`0,`1,`2,`3)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Tuple`4" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Tuple`4" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.#ctor(`0,`1,`2,`3)">
          <source>You can also use the static <ph id="ph1">&lt;xref:System.Tuple.Create%60%604%28%60%600%2C%60%601%2C%60%602%2C%60%603%29?displayProperty=nameWithType&gt;</ph> method to instantiate a 4-tuple object without having to explicitly specify the types of its components.</source>
          <target state="translated">您也可以使用靜態<ph id="ph1">&lt;xref:System.Tuple.Create%60%604%28%60%600%2C%60%601%2C%60%602%2C%60%603%29?displayProperty=nameWithType&gt;</ph>而不需要明確指定其元件的類型執行個體化的 4 tuple 物件的方法。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.#ctor(`0,`1,`2,`3)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Tuple.Create%60%604%28%60%600%2C%60%601%2C%60%602%2C%60%603%29?displayProperty=nameWithType&gt;</ph> method to instantiate a 4-tuple whose components are of type <ph id="ph2">&lt;xref:System.String&gt;</ph>, <ph id="ph3">&lt;xref:System.Double&gt;</ph>, <ph id="ph4">&lt;xref:System.Double&gt;</ph>, and <ph id="ph5">&lt;xref:System.Double&gt;</ph>.</source>
          <target state="translated">下列範例會使用<ph id="ph1">&lt;xref:System.Tuple.Create%60%604%28%60%600%2C%60%601%2C%60%602%2C%60%603%29?displayProperty=nameWithType&gt;</ph>方法來具現化元件都屬於類型 4 tuple <ph id="ph2">&lt;xref:System.String&gt;</ph>， <ph id="ph3">&lt;xref:System.Double&gt;</ph>， <ph id="ph4">&lt;xref:System.Double&gt;</ph>，和<ph id="ph5">&lt;xref:System.Double&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.#ctor(`0,`1,`2,`3)">
          <source>This is equivalent to the following call to the <ph id="ph1">&lt;xref:System.Tuple%604.%23ctor%2A&gt;</ph> class constructor.</source>
          <target state="translated">這相當於下列呼叫<ph id="ph1">&lt;xref:System.Tuple%604.%23ctor%2A&gt;</ph>類別建構函式。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Tuple`4.Equals(System.Object)">
          <source>The object to compare with this instance.</source>
          <target state="translated">與這個執行個體相互比較的物件。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Tuple`4.Equals(System.Object)">
          <source>Returns a value that indicates whether the current <ph id="ph1">&lt;see cref="T:System.Tuple`4" /&gt;</ph> object is equal to a specified object.</source>
          <target state="translated">傳回值，這個值表示目前的 <ph id="ph1">&lt;see cref="T:System.Tuple`4" /&gt;</ph> 物件是否等於指定的物件。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Tuple`4.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current instance is equal to the specified object; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果目前的執行個體和指定的物件相等，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.Equals(System.Object)">
          <source>The <ph id="ph1">`obj`</ph> parameter is considered to be equal to the current instance under the following conditions:</source>
          <target state="translated"><ph id="ph1">`obj`</ph>參數會被視為等於目前的執行個體，在下列情況下：</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.Equals(System.Object)">
          <source>It is a <ph id="ph1">&lt;xref:System.Tuple%604&gt;</ph> object.</source>
          <target state="translated">它是<ph id="ph1">&lt;xref:System.Tuple%604&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.Equals(System.Object)">
          <source>Its four components are of the same types as the current instance.</source>
          <target state="translated">其四個元件是與目前的執行個體相同的類型。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.Equals(System.Object)">
          <source>Its four components are equal to those of the current instance.</source>
          <target state="translated">其四個元件的目前執行個體相等。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.Equals(System.Object)">
          <source>Equality is determined by the default object equality comparer for each component.</source>
          <target state="translated">是否相等由每個元件的預設物件相等比較子決定。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.Equals(System.Object)">
          <source>The following example defines an array of <ph id="ph1">&lt;xref:System.Tuple%604&gt;</ph> objects that provide data on temperatures at three times during a particular day.</source>
          <target state="translated">下列範例會定義陣列<ph id="ph1">&lt;xref:System.Tuple%604&gt;</ph>在特定一天的三個時間提供溫度資料的物件。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.Equals(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Tuple%604.Equals%28System.Object%29&gt;</ph> method is called to compare every <ph id="ph2">&lt;xref:System.Tuple%604&gt;</ph> object with every other <ph id="ph3">&lt;xref:System.Tuple%604&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Tuple%604.Equals%28System.Object%29&gt;</ph>呼叫方法來比較每個<ph id="ph2">&lt;xref:System.Tuple%604&gt;</ph>物件與每個其他<ph id="ph3">&lt;xref:System.Tuple%604&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.Equals(System.Object)">
          <source>The output illustrates that the <ph id="ph1">&lt;xref:System.Tuple%604.Equals%28System.Object%29&gt;</ph> method returns <ph id="ph2">`true`</ph> only when all four components of the <ph id="ph3">&lt;xref:System.Tuple%604&gt;</ph> objects have equal values.</source>
          <target state="translated">輸出說明了<ph id="ph1">&lt;xref:System.Tuple%604.Equals%28System.Object%29&gt;</ph>方法會傳回<ph id="ph2">`true`</ph>只有當所有的四個元件的<ph id="ph3">&lt;xref:System.Tuple%604&gt;</ph>物件具有相等值。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Tuple`4.GetHashCode">
          <source>Returns the hash code for the current <ph id="ph1">&lt;see cref="T:System.Tuple`4" /&gt;</ph> object.</source>
          <target state="translated">傳回目前 <ph id="ph1">&lt;see cref="T:System.Tuple`4" /&gt;</ph> 物件的雜湊碼。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Tuple`4.GetHashCode">
          <source>A 32-bit signed integer hash code.</source>
          <target state="translated">32 位元帶正負號的整數雜湊碼。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="P:System.Tuple`4.Item1">
          <source>Gets the value of the current <ph id="ph1">&lt;see cref="T:System.Tuple`4" /&gt;</ph> object's first component.</source>
          <target state="translated">取得目前 <ph id="ph1">&lt;see cref="T:System.Tuple`4" /&gt;</ph> 物件之第一個元件的值。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`4.Item1">
          <source>The value of the current <ph id="ph1">&lt;see cref="T:System.Tuple`4" /&gt;</ph> object's first component.</source>
          <target state="translated">目前 <ph id="ph1">&lt;see cref="T:System.Tuple`4" /&gt;</ph> 物件之第一個元件的值。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`4.Item1">
          <source>You can dynamically determine the type of the <ph id="ph1">&lt;xref:System.Tuple%604.Item1%2A&gt;</ph> component in one of two ways:</source>
          <target state="translated">您可以動態決定的型別<ph id="ph1">&lt;xref:System.Tuple%604.Item1%2A&gt;</ph>元件中有兩種：</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`4.Item1">
          <source>By calling the <ph id="ph1">`GetType`</ph> method on the value that is returned by the <ph id="ph2">&lt;xref:System.Tuple%604.Item1%2A&gt;</ph> property.</source>
          <target state="translated">藉由呼叫<ph id="ph1">`GetType`</ph>方法所傳回的值<ph id="ph2">&lt;xref:System.Tuple%604.Item1%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`4.Item1">
          <source>By retrieving the <ph id="ph1">&lt;xref:System.Type&gt;</ph> object that represents the <ph id="ph2">&lt;xref:System.Tuple%604&gt;</ph> object, and retrieving the first element from the array that is returned by its <ph id="ph3">&lt;xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">藉由擷取<ph id="ph1">&lt;xref:System.Type&gt;</ph>物件，代表<ph id="ph2">&lt;xref:System.Tuple%604&gt;</ph>物件，並擷取第一個項目所傳回的陣列從其<ph id="ph3">&lt;xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`4.Item1">
          <source>The following example defines an array of <ph id="ph1">&lt;xref:System.Tuple%604&gt;</ph> objects whose components contain the name of a city, a month of the year, and the average high and low temperatures for that month.</source>
          <target state="translated">下列範例會定義陣列<ph id="ph1">&lt;xref:System.Tuple%604&gt;</ph>元件包含城市名稱、 年份和月份平均高低溫度該月份的物件。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`4.Item1">
          <source>It then retrieves and displays the value of each component.</source>
          <target state="translated">然後，它會擷取並顯示每個元件的值。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="P:System.Tuple`4.Item2">
          <source>Gets the value of the current <ph id="ph1">&lt;see cref="T:System.Tuple`4" /&gt;</ph> object's second component.</source>
          <target state="translated">取得目前 <ph id="ph1">&lt;see cref="T:System.Tuple`4" /&gt;</ph> 物件之第二個元件的值。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`4.Item2">
          <source>The value of the current <ph id="ph1">&lt;see cref="T:System.Tuple`4" /&gt;</ph> object's second component.</source>
          <target state="translated">目前 <ph id="ph1">&lt;see cref="T:System.Tuple`4" /&gt;</ph> 物件之第二個元件的值。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`4.Item2">
          <source>You can dynamically determine the type of the <ph id="ph1">&lt;xref:System.Tuple%604.Item2%2A&gt;</ph> component in one of two ways:</source>
          <target state="translated">您可以動態決定的型別<ph id="ph1">&lt;xref:System.Tuple%604.Item2%2A&gt;</ph>元件中有兩種：</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`4.Item2">
          <source>By calling the <ph id="ph1">`GetType`</ph> method on the value that is returned by the <ph id="ph2">&lt;xref:System.Tuple%604.Item2%2A&gt;</ph> property.</source>
          <target state="translated">藉由呼叫<ph id="ph1">`GetType`</ph>方法所傳回的值<ph id="ph2">&lt;xref:System.Tuple%604.Item2%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`4.Item2">
          <source>By retrieving the <ph id="ph1">&lt;xref:System.Type&gt;</ph> object that represents the <ph id="ph2">&lt;xref:System.Tuple%604&gt;</ph> object, and retrieving the second element from the array that is returned by its <ph id="ph3">&lt;xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">藉由擷取<ph id="ph1">&lt;xref:System.Type&gt;</ph>物件，代表<ph id="ph2">&lt;xref:System.Tuple%604&gt;</ph>物件，並擷取第二個元素所傳回的陣列從其<ph id="ph3">&lt;xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`4.Item2">
          <source>The following example defines an array of <ph id="ph1">&lt;xref:System.Tuple%604&gt;</ph> objects whose components contain the name of a city, a month of the year, and the average high and low temperatures for that month.</source>
          <target state="translated">下列範例會定義陣列<ph id="ph1">&lt;xref:System.Tuple%604&gt;</ph>元件包含城市名稱、 年份和月份平均高低溫度該月份的物件。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`4.Item2">
          <source>It then retrieves and displays the value of each component.</source>
          <target state="translated">然後，它會擷取並顯示每個元件的值。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="P:System.Tuple`4.Item3">
          <source>Gets the value of the current <ph id="ph1">&lt;see cref="T:System.Tuple`4" /&gt;</ph> object's third component.</source>
          <target state="translated">取得目前 <ph id="ph1">&lt;see cref="T:System.Tuple`4" /&gt;</ph> 物件之第三個元件的值。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`4.Item3">
          <source>The value of the current <ph id="ph1">&lt;see cref="T:System.Tuple`4" /&gt;</ph> object's third component.</source>
          <target state="translated">目前 <ph id="ph1">&lt;see cref="T:System.Tuple`4" /&gt;</ph> 物件之第三個元件的值。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`4.Item3">
          <source>You can dynamically determine the type of the <ph id="ph1">&lt;xref:System.Tuple%604.Item3%2A&gt;</ph> component in one of two ways:</source>
          <target state="translated">您可以動態決定的型別<ph id="ph1">&lt;xref:System.Tuple%604.Item3%2A&gt;</ph>元件中有兩種：</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`4.Item3">
          <source>By calling the <ph id="ph1">`GetType`</ph> method on the value that is returned by the <ph id="ph2">&lt;xref:System.Tuple%604.Item3%2A&gt;</ph> property.</source>
          <target state="translated">藉由呼叫<ph id="ph1">`GetType`</ph>方法所傳回的值<ph id="ph2">&lt;xref:System.Tuple%604.Item3%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`4.Item3">
          <source>By retrieving the <ph id="ph1">&lt;xref:System.Type&gt;</ph> object that represents the <ph id="ph2">&lt;xref:System.Tuple%604&gt;</ph> object, and retrieving the third element from the array that is returned by its <ph id="ph3">&lt;xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">藉由擷取<ph id="ph1">&lt;xref:System.Type&gt;</ph>物件，代表<ph id="ph2">&lt;xref:System.Tuple%604&gt;</ph>物件，並擷取第三個元素所傳回的陣列從其<ph id="ph3">&lt;xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`4.Item3">
          <source>The following example defines an array of <ph id="ph1">&lt;xref:System.Tuple%604&gt;</ph> objects whose components contain the name of a city, a month of the year, and the average high and low temperatures for that month.</source>
          <target state="translated">下列範例會定義陣列<ph id="ph1">&lt;xref:System.Tuple%604&gt;</ph>元件包含城市名稱、 年份和月份平均高低溫度該月份的物件。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`4.Item3">
          <source>It then retrieves and displays the value of each component.</source>
          <target state="translated">然後，它會擷取並顯示每個元件的值。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="P:System.Tuple`4.Item4">
          <source>Gets the value of the current <ph id="ph1">&lt;see cref="T:System.Tuple`4" /&gt;</ph> object's fourth component.</source>
          <target state="translated">取得目前 <ph id="ph1">&lt;see cref="T:System.Tuple`4" /&gt;</ph> 物件之第四個元件的值。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`4.Item4">
          <source>The value of the current <ph id="ph1">&lt;see cref="T:System.Tuple`4" /&gt;</ph> object's fourth component.</source>
          <target state="translated">目前 <ph id="ph1">&lt;see cref="T:System.Tuple`4" /&gt;</ph> 物件之第四個元件的值。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`4.Item4">
          <source>You can dynamically determine the type of the <ph id="ph1">&lt;xref:System.Tuple%604.Item4%2A&gt;</ph> component in one of two ways:</source>
          <target state="translated">您可以動態決定的型別<ph id="ph1">&lt;xref:System.Tuple%604.Item4%2A&gt;</ph>元件中有兩種：</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`4.Item4">
          <source>By calling the <ph id="ph1">`GetType`</ph> method on the value that is returned by the <ph id="ph2">&lt;xref:System.Tuple%604.Item4%2A&gt;</ph> property.</source>
          <target state="translated">藉由呼叫<ph id="ph1">`GetType`</ph>方法所傳回的值<ph id="ph2">&lt;xref:System.Tuple%604.Item4%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`4.Item4">
          <source>By retrieving the <ph id="ph1">&lt;xref:System.Type&gt;</ph> object that represents the <ph id="ph2">&lt;xref:System.Tuple%604&gt;</ph> object, and retrieving the fourth element from the array that is returned by its <ph id="ph3">&lt;xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">藉由擷取<ph id="ph1">&lt;xref:System.Type&gt;</ph>物件，代表<ph id="ph2">&lt;xref:System.Tuple%604&gt;</ph>物件，並傳回陣列中擷取的第四個項目及其<ph id="ph3">&lt;xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`4.Item4">
          <source>The following example defines an array of <ph id="ph1">&lt;xref:System.Tuple%604&gt;</ph> objects whose components contain the name of a city, a month of the year, and the average high and low temperatures for that month.</source>
          <target state="translated">下列範例會定義陣列<ph id="ph1">&lt;xref:System.Tuple%604&gt;</ph>元件包含城市名稱、 年份和月份平均高低溫度該月份的物件。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`4.Item4">
          <source>It then retrieves and displays the value of each component.</source>
          <target state="translated">然後，它會擷取並顯示每個元件的值。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Tuple`4.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>An object to compare with the current instance.</source>
          <target state="translated">要與目前執行個體比較的物件。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Tuple`4.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>An object that provides custom rules for comparison.</source>
          <target state="translated">提供自訂規則進行比較的物件。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Tuple`4.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>Compares the current <ph id="ph1">&lt;see cref="T:System.Tuple`4" /&gt;</ph> object to a specified object by using a specified comparer and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.</source>
          <target state="translated">使用指定的比較子將目前的 <ph id="ph1">&lt;see cref="T:System.Tuple`4" /&gt;</ph> 物件和指定的物件進行比較，並且傳回一個整數，表示目前的物件在排序順序中位於指定之物件的前面、後面還是相的位置。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Tuple`4.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>A signed integer that indicates the relative position of this instance and <ph id="ph1">&lt;paramref name="other" /&gt;</ph> in the sort order, as shown in the following table.</source>
          <target state="translated">帶正負號的整數，可指出此執行個體以及排序次序中 <ph id="ph1">&lt;paramref name="other" /&gt;</ph> 的相對位置，如下表所示。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Tuple`4.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> 值</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Tuple`4.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Description</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 描述</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Tuple`4.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> A negative integer</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 負整數</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Tuple`4.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance precedes <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph>這個執行個體位於 <ph id="ph3">&lt;paramref name="other" /&gt;</ph> 之前。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Tuple`4.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 零</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Tuple`4.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance and <ph id="ph3">&lt;paramref name="other" /&gt;</ph> have the same position in the sort order.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph>這個執行個體和 <ph id="ph3">&lt;paramref name="other" /&gt;</ph> 的排序位置相同。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Tuple`4.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> A positive integer</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph>正整數</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Tuple`4.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance follows <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph>這個執行個體位於 <ph id="ph3">&lt;paramref name="other" /&gt;</ph> 之後。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">這個成員是明確介面成員實作，</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Tuple%604&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IStructuralComparable&gt;</ph> interface.</source>
          <target state="translated">只有在 <ph id="ph1">&lt;xref:System.Tuple%604&gt;</ph> 執行個體轉換成 <ph id="ph2">&lt;xref:System.Collections.IStructuralComparable&gt;</ph> 介面時，才能使用這個成員。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>Although this method can be called directly, it is most commonly called by collection sorting methods that include <ph id="ph1">&lt;xref:System.Collections.IComparer&gt;</ph> parameters to order the members of a collection.</source>
          <target state="translated">雖然可以直接呼叫這個方法，但是最常呼叫此方法集合排序方法，包含了<ph id="ph1">&lt;xref:System.Collections.IComparer&gt;</ph>參數來排序集合的成員。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>For example, it is called by the <ph id="ph1">&lt;xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType&gt;</ph> method and the <ph id="ph2">&lt;xref:System.Collections.SortedList.Add%2A&gt;</ph> method of a <ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph> object that is instantiated by using the <ph id="ph4">&lt;xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=nameWithType&gt;</ph> constructor.</source>
          <target state="translated">例如，由呼叫<ph id="ph1">&lt;xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType&gt;</ph>方法和<ph id="ph2">&lt;xref:System.Collections.SortedList.Add%2A&gt;</ph>方法<ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph>具現化所使用的物件<ph id="ph4">&lt;xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=nameWithType&gt;</ph>建構函式。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>The <ph id="ph1">&lt;xref:System.Tuple%604.System%23Collections%23IStructuralComparable%23CompareTo%28System.Object%2CSystem.Collections.IComparer%29&gt;</ph> method is intended for use in sorting operations.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Tuple%604.System%23Collections%23IStructuralComparable%23CompareTo%28System.Object%2CSystem.Collections.IComparer%29&gt;</ph>方法僅供用於排序作業。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>It should not be used when the primary purpose of a comparison is to determine whether two objects are equal.</source>
          <target state="translated">此外，它不應該使用時比較的主要目的是要判斷兩個物件是否相等。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>To determine whether two objects are equal, call the <ph id="ph1">&lt;xref:System.Tuple%604.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29&gt;</ph> method.</source>
          <target state="translated">若要判斷兩個物件是否相等，請呼叫<ph id="ph1">&lt;xref:System.Tuple%604.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>The following example creates an array of <ph id="ph1">&lt;xref:System.Tuple%604&gt;</ph> objects that contain statistical data about baseball pitchers.</source>
          <target state="translated">下列範例會建立的陣列<ph id="ph1">&lt;xref:System.Tuple%604&gt;</ph>包含棒球 pitchers 相關的統計資料的物件。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>The data items include the name of the pitcher, the number of innings pitched, the pitcher's earned run average (the average number of runs a pitcher allows per game), and the number of hits the pitcher has given up.</source>
          <target state="translated">資料的項目包含罐狀的名稱、 innings 數目音調罐狀盈餘分析執行平均 （罐狀可讓每個遊戲的回合的平均數目），並已放棄罐狀叫用次數。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>The example displays the component of each tuple in the array in unsorted order, sorts the array, and then calls <ph id="ph1">&lt;xref:System.Tuple%604.ToString%2A&gt;</ph> to display the value of each tuple in sorted order.</source>
          <target state="translated">此範例顯示未排序的順序陣列中的每個 tuple 的元件，來排序陣列，然後呼叫<ph id="ph1">&lt;xref:System.Tuple%604.ToString%2A&gt;</ph>以排序順序顯示每個 tuple 的值。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>To sort the array, the example defines a generic <ph id="ph1">`PitcherComparer`</ph> class that implements the <ph id="ph2">&lt;xref:System.Collections.IComparer&gt;</ph> interface and sorts the <ph id="ph3">&lt;xref:System.Tuple%604&gt;</ph> objects in ascending order by the value of their third component (the earned run average) rather than their first component.</source>
          <target state="translated">若要排序的陣列，此範例會定義泛型<ph id="ph1">`PitcherComparer`</ph>類別可實作<ph id="ph2">&lt;xref:System.Collections.IComparer&gt;</ph>介面和排序<ph id="ph3">&lt;xref:System.Tuple%604&gt;</ph>其第三個元件 （盈餘分析執行平均） 的值依遞增順序排列，而不是其第一個物件元件。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>Note that the example does not directly call the <ph id="ph1">&lt;xref:System.Tuple%604.System%23Collections%23IStructuralComparable%23CompareTo%28System.Object%2CSystem.Collections.IComparer%29&gt;</ph> method.</source>
          <target state="translated">請注意，此範例不會直接呼叫<ph id="ph1">&lt;xref:System.Tuple%604.System%23Collections%23IStructuralComparable%23CompareTo%28System.Object%2CSystem.Collections.IComparer%29&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>This method is called implicitly by the <ph id="ph1">&lt;xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType&gt;</ph> method for each element in the array.</source>
          <target state="translated">這個方法會隱含地呼叫<ph id="ph1">&lt;xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType&gt;</ph>陣列中每個項目的方法。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Tuple`4.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;paramref name="other" /&gt;</ph> is not a <ph id="ph2">&lt;see cref="T:System.Tuple`4" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="other" /&gt;</ph> 不是 <ph id="ph2">&lt;see cref="T:System.Tuple`4" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Tuple`4.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The object to compare with this instance.</source>
          <target state="translated">與這個執行個體相互比較的物件。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Tuple`4.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>An object that defines the method to use to evaluate whether the two objects are equal.</source>
          <target state="translated">物件，定義要用來評估這兩個物件是否相等的方法。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Tuple`4.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>Returns a value that indicates whether the current <ph id="ph1">&lt;see cref="T:System.Tuple`4" /&gt;</ph> object is equal to a specified object based on a specified comparison method.</source>
          <target state="translated">傳回值，這個值表示依據指定的比較方法，目前的 <ph id="ph1">&lt;see cref="T:System.Tuple`4" /&gt;</ph> 物件是否等於指定的物件。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Tuple`4.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current instance is equal to the specified object; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果目前的執行個體和指定的物件相等，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">這個成員是明確介面成員實作，</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Tuple%604&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph> interface.</source>
          <target state="translated">只有在 <ph id="ph1">&lt;xref:System.Tuple%604&gt;</ph> 執行個體轉換成 <ph id="ph2">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph> 介面時，才能使用這個成員。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The <ph id="ph1">&lt;xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType&gt;</ph> implementation is called only if <ph id="ph2">`other`</ph> is not <ph id="ph3">`null`</ph>, and if it can be successfully cast (in C#) or converted (in Visual Basic) to a <ph id="ph4">&lt;xref:System.Tuple%604&gt;</ph> object whose components are of the same types as the current instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType&gt;</ph>才呼叫實作<ph id="ph2">`other`</ph>不<ph id="ph3">`null`</ph>，而且如果它可以是成功轉換 （C# 中） 或 （在 Visual Basic) 轉換成<ph id="ph4">&lt;xref:System.Tuple%604&gt;</ph>其元件是相同的類型與目前的執行個體的物件。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The <ph id="ph1">&lt;xref:System.Tuple%604.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29&gt;</ph> method first passes the <ph id="ph2">&lt;xref:System.Tuple%604.Item1%2A&gt;</ph> values of the <ph id="ph3">&lt;xref:System.Tuple%604&gt;</ph> objects to be compared to the <ph id="ph4">&lt;xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType&gt;</ph> implementation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Tuple%604.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29&gt;</ph>方法的第一個階段<ph id="ph2">&lt;xref:System.Tuple%604.Item1%2A&gt;</ph>值<ph id="ph3">&lt;xref:System.Tuple%604&gt;</ph>要比較的物件<ph id="ph4">&lt;xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType&gt;</ph>實作。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>If this method call returns <ph id="ph1">`true`</ph>, the method is called again and passed the <ph id="ph2">&lt;xref:System.Tuple%604.Item2%2A&gt;</ph> values of the two <ph id="ph3">&lt;xref:System.Tuple%604&gt;</ph> objects.</source>
          <target state="translated">如果這個方法呼叫傳回<ph id="ph1">`true`</ph>，方法是呼叫一次，並傳遞<ph id="ph2">&lt;xref:System.Tuple%604.Item2%2A&gt;</ph>兩個值<ph id="ph3">&lt;xref:System.Tuple%604&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>If this method call returns <ph id="ph1">`true`</ph> again, the method is called a third time and passed the <ph id="ph2">&lt;xref:System.Tuple%604.Item3%2A&gt;</ph> values of the two <ph id="ph3">&lt;xref:System.Tuple%604&gt;</ph> objects.</source>
          <target state="translated">如果這個方法呼叫傳回<ph id="ph1">`true`</ph>同樣地，此方法會呼叫第三個時間，並傳遞<ph id="ph2">&lt;xref:System.Tuple%604.Item3%2A&gt;</ph>兩個值<ph id="ph3">&lt;xref:System.Tuple%604&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>If this method call returns <ph id="ph1">`true`</ph> again, the method is called for the fourth and final time and passed the <ph id="ph2">&lt;xref:System.Tuple%604.Item4%2A&gt;</ph> values of the two <ph id="ph3">&lt;xref:System.Tuple%604&gt;</ph> objects.</source>
          <target state="translated">如果這個方法呼叫傳回<ph id="ph1">`true`</ph>同樣地，方法是呼叫第四個和最後一次，並傳遞<ph id="ph2">&lt;xref:System.Tuple%604.Item4%2A&gt;</ph>兩個值<ph id="ph3">&lt;xref:System.Tuple%604&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The following example defines an <ph id="ph1">`Item3And4Comparer`</ph> class that implements the <ph id="ph2">&lt;xref:System.Collections.IEqualityComparer&gt;</ph> interface and changes the way in which <ph id="ph3">&lt;xref:System.Tuple%604&gt;</ph> objects are evaluated for equality.</source>
          <target state="translated">下列範例會定義<ph id="ph1">`Item3And4Comparer`</ph>類別可實作<ph id="ph2">&lt;xref:System.Collections.IEqualityComparer&gt;</ph>介面，並變更的方式<ph id="ph3">&lt;xref:System.Tuple%604&gt;</ph>評估物件是否相等。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The method always returns <ph id="ph1">`true`</ph> when it is passed the <ph id="ph2">&lt;xref:System.Tuple%604.Item1%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Tuple%604.Item2%2A&gt;</ph> property values of two <ph id="ph4">&lt;xref:System.Tuple%604&gt;</ph> objects, and it calls the <ph id="ph5">`obj.Equals`</ph> method to evaluate their <ph id="ph6">&lt;xref:System.Tuple%604.Item3%2A&gt;</ph> property values.</source>
          <target state="translated">方法永遠都會傳回<ph id="ph1">`true`</ph>傳遞時<ph id="ph2">&lt;xref:System.Tuple%604.Item1%2A&gt;</ph>和<ph id="ph3">&lt;xref:System.Tuple%604.Item2%2A&gt;</ph>屬性值的兩個<ph id="ph4">&lt;xref:System.Tuple%604&gt;</ph>物件，並且呼叫<ph id="ph5">`obj.Equals`</ph>方法，評估其<ph id="ph6">&lt;xref:System.Tuple%604.Item3%2A&gt;</ph>屬性值。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>It this method call returns true, it also calls the <ph id="ph1">`obj.Equals`</ph> method to evaluate the tuples' <ph id="ph2">&lt;xref:System.Tuple%604.Item4%2A&gt;</ph> property values.</source>
          <target state="translated">這個方法呼叫才會傳回 true，它也會呼叫<ph id="ph1">`obj.Equals`</ph>方法，以評估 tuple<ph id="ph2">&lt;xref:System.Tuple%604.Item4%2A&gt;</ph>屬性值。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>As a result, the method tests for equality based only on the values of the <ph id="ph1">&lt;xref:System.Tuple%604.Item3%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Tuple%604.Item4%2A&gt;</ph> properties.</source>
          <target state="translated">如此一來，方法會測試是否相等的值只根據<ph id="ph1">&lt;xref:System.Tuple%604.Item3%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Tuple%604.Item4%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The output illustrates the result for a data set of <ph id="ph1">&lt;xref:System.Tuple%604&gt;</ph> objects that record the name of a U.S. city, the month of a year, and the average high and low temperature for that month.</source>
          <target state="translated">輸出說明結果的資料集<ph id="ph1">&lt;xref:System.Tuple%604&gt;</ph>該月份年份和平均高低溫度月份記錄的美國城市名稱的物件。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Tuple`4.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
          <source>An object whose <ph id="ph1">&lt;see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /&gt;</ph> method calculates the hash code of the current <ph id="ph2">&lt;see cref="T:System.Tuple`4" /&gt;</ph> object.</source>
          <target state="translated">其 <ph id="ph1">&lt;see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /&gt;</ph> 方法可以計算目前 <ph id="ph2">&lt;see cref="T:System.Tuple`4" /&gt;</ph> 物件之雜湊碼的物件。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Tuple`4.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
          <source>Calculates the hash code for the current <ph id="ph1">&lt;see cref="T:System.Tuple`4" /&gt;</ph> object by using a specified computation method.</source>
          <target state="translated">使用指定的計算方法，計算目前 <ph id="ph1">&lt;see cref="T:System.Tuple`4" /&gt;</ph> 物件的雜湊碼。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Tuple`4.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
          <source>A 32-bit signed integer hash code.</source>
          <target state="translated">32 位元帶正負號的整數雜湊碼。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">這個成員是明確介面成員實作，</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Tuple%604&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph> interface.</source>
          <target state="translated">只有在 <ph id="ph1">&lt;xref:System.Tuple%604&gt;</ph> 執行個體轉換成 <ph id="ph2">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph> 介面時，才能使用這個成員。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
          <source>The method simply wraps a call to the <ph id="ph1">`comparer`</ph> object's <ph id="ph2">&lt;xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=nameWithType&gt;</ph> implementation.</source>
          <target state="translated">方法只會包裝呼叫<ph id="ph1">`comparer`</ph>物件的<ph id="ph2">&lt;xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=nameWithType&gt;</ph>實作。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
          <source>The algorithm used to compute the hash code should return the same hash code for two <ph id="ph1">&lt;xref:System.Tuple%604&gt;</ph> objects that are considered to be equal.</source>
          <target state="translated">用來計算雜湊程式碼的演算法應該會傳回相同的雜湊程式碼，其中兩個<ph id="ph1">&lt;xref:System.Tuple%604&gt;</ph>會被視為相等的物件。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Tuple`4.System#IComparable#CompareTo(System.Object)">
          <source>An object to compare with the current instance.</source>
          <target state="translated">要與目前執行個體比較的物件。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Tuple`4.System#IComparable#CompareTo(System.Object)">
          <source>Compares the current <ph id="ph1">&lt;see cref="T:System.Tuple`4" /&gt;</ph> object to a specified object and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.</source>
          <target state="translated">將目前的 <ph id="ph1">&lt;see cref="T:System.Tuple`4" /&gt;</ph> 物件與指定的物件比較，並傳回可指出目前物件在排序次序中，是否在指定物件之前、之後或者相同之位置的整數。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Tuple`4.System#IComparable#CompareTo(System.Object)">
          <source>A signed integer that indicates the relative position of this instance and <ph id="ph1">&lt;paramref name="obj" /&gt;</ph> in the sort order, as shown in the following table.</source>
          <target state="translated">帶正負號的整數，可指出此執行個體以及排序次序中 <ph id="ph1">&lt;paramref name="obj" /&gt;</ph> 的相對位置，如下表所示。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Tuple`4.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> 值</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Tuple`4.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Description</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 描述</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Tuple`4.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> A negative integer</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 負整數</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Tuple`4.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance precedes <ph id="ph3">&lt;paramref name="obj" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph>這個執行個體位於 <ph id="ph3">&lt;paramref name="obj" /&gt;</ph> 之前。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Tuple`4.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 零</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Tuple`4.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance and <ph id="ph3">&lt;paramref name="obj" /&gt;</ph> have the same position in the sort order.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph>這個執行個體和 <ph id="ph3">&lt;paramref name="obj" /&gt;</ph> 的排序位置相同。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Tuple`4.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> A positive integer</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph>正整數</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Tuple`4.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance follows <ph id="ph3">&lt;paramref name="obj" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph>這個執行個體位於 <ph id="ph3">&lt;paramref name="obj" /&gt;</ph> 之後。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.System#IComparable#CompareTo(System.Object)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">這個成員是明確介面成員實作，</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.System#IComparable#CompareTo(System.Object)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Tuple%604&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IComparable&gt;</ph> interface.</source>
          <target state="translated">只有在 <ph id="ph1">&lt;xref:System.Tuple%604&gt;</ph> 執行個體轉換成 <ph id="ph2">&lt;xref:System.IComparable&gt;</ph> 介面時，才能使用這個成員。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.System#IComparable#CompareTo(System.Object)">
          <source>This method provides the <ph id="ph1">&lt;xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType&gt;</ph> implementation for the <ph id="ph2">&lt;xref:System.Tuple%604&gt;</ph> class.</source>
          <target state="translated">這個方法會提供<ph id="ph1">&lt;xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType&gt;</ph>實作<ph id="ph2">&lt;xref:System.Tuple%604&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.System#IComparable#CompareTo(System.Object)">
          <source>Although the method can be called directly, it is most commonly called by the default overloads of collection sorting methods, such as <ph id="ph1">&lt;xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.SortedList.Add%2A?displayProperty=nameWithType&gt;</ph>, to order the members of a collection.</source>
          <target state="translated">雖然可以直接呼叫的方法，但是最常呼叫此方法的排序方法，例如集合的預設多載<ph id="ph1">&lt;xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType&gt;</ph>和<ph id="ph2">&lt;xref:System.Collections.SortedList.Add%2A?displayProperty=nameWithType&gt;</ph>，若要排序之集合的成員。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.System#IComparable#CompareTo(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Tuple%604.System%23IComparable%23CompareTo%2A&gt;</ph> method is intended for use in sorting operations.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Tuple%604.System%23IComparable%23CompareTo%2A&gt;</ph>方法僅供用於排序作業。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.System#IComparable#CompareTo(System.Object)">
          <source>It should not be used when the primary purpose of a comparison is to determine whether two objects are equal.</source>
          <target state="translated">此外，它不應該使用時比較的主要目的是要判斷兩個物件是否相等。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.System#IComparable#CompareTo(System.Object)">
          <source>To determine whether two objects are equal, call the <ph id="ph1">&lt;xref:System.Tuple%604.Equals%2A&gt;</ph> method.</source>
          <target state="translated">若要判斷兩個物件是否相等，請呼叫<ph id="ph1">&lt;xref:System.Tuple%604.Equals%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.System#IComparable#CompareTo(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Tuple%604.System%23IComparable%23CompareTo%2A&gt;</ph> method uses the default object comparer to compare each component.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Tuple%604.System%23IComparable%23CompareTo%2A&gt;</ph>方法使用的預設物件的比較子來比較每個元件。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.System#IComparable#CompareTo(System.Object)">
          <source>The following example creates an array of <ph id="ph1">&lt;xref:System.Tuple%604&gt;</ph> objects whose components consist of a baseball pitcher's name, number of innings pitched, and number of hits and earned runs given up.</source>
          <target state="translated">下列範例會建立的陣列<ph id="ph1">&lt;xref:System.Tuple%604&gt;</ph>棒球罐狀名稱、 innings 音調、 數目和叫用數和放棄盈餘分析回合的數目組成其元件的物件。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.System#IComparable#CompareTo(System.Object)">
          <source>It displays the components of each tuple in the array in unsorted order, sorts the array, and then calls <ph id="ph1">&lt;xref:System.Tuple%604.ToString%2A&gt;</ph> to display each tuple in sorted order.</source>
          <target state="translated">它會顯示未排序的順序陣列中的每個 tuple 的元件，來排序陣列，然後呼叫<ph id="ph1">&lt;xref:System.Tuple%604.ToString%2A&gt;</ph>以排序順序顯示每個 tuple。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.System#IComparable#CompareTo(System.Object)">
          <source>The output shows that the array has been sorted by name, which is the first component.</source>
          <target state="translated">輸出會顯示名稱，也就是第一個元件的陣列，已排序。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.System#IComparable#CompareTo(System.Object)">
          <source>Note that the example does not directly call the <ph id="ph1">&lt;xref:System.Tuple%604.System%23IComparable%23CompareTo%28System.Object%29&gt;</ph> method.</source>
          <target state="translated">請注意，此範例不會直接呼叫<ph id="ph1">&lt;xref:System.Tuple%604.System%23IComparable%23CompareTo%28System.Object%29&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.System#IComparable#CompareTo(System.Object)">
          <source>This method is called implicitly by the <ph id="ph1">&lt;xref:System.Array.Sort%28System.Array%29&gt;</ph> method for each element in the array.</source>
          <target state="translated">這個方法會隱含地呼叫<ph id="ph1">&lt;xref:System.Array.Sort%28System.Array%29&gt;</ph>陣列中每個項目的方法。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Tuple`4.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;paramref name="obj" /&gt;</ph> is not a <ph id="ph2">&lt;see cref="T:System.Tuple`4" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="obj" /&gt;</ph> 不是 <ph id="ph2">&lt;see cref="T:System.Tuple`4" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="P:System.Tuple`4.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source>The index of the specified <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> element.</source>
          <target state="translated">指定的 <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> 項目索引。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="P:System.Tuple`4.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source><bpt id="p1">&lt;c&gt;</bpt>index<ept id="p1">&lt;/c&gt;</ept> can range from 0 to 3.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>index<ept id="p1">&lt;/c&gt;</ept> 的範圍可以從 0 到 3。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="P:System.Tuple`4.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source>Gets the value of the specified <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> element.</source>
          <target state="translated">取得指定的 <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> 項目值。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`4.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source>The value of the <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> element at the specified position.</source>
          <target state="translated">位在指定位置的 <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> 項目值。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`4.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Tuple%604.System%23Runtime%23CompilerServices%23ITuple%23Item%2A?displayProperty=nameWithType&gt;</ph> property is an explicit interface implementation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Tuple%604.System%23Runtime%23CompilerServices%23ITuple%23Item%2A?displayProperty=nameWithType&gt;</ph>屬性是明確介面實作。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`4.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source>To call it, you must cast or convert the <ph id="ph1">&lt;xref:System.Tuple%604&gt;</ph> object to an <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.ITuple&gt;</ph> interface object.</source>
          <target state="translated">若要呼叫它，您必須決定要轉型或轉換<ph id="ph1">&lt;xref:System.Tuple%604&gt;</ph>物件<ph id="ph2">&lt;xref:System.Runtime.CompilerServices.ITuple&gt;</ph>介面物件。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="P:System.Tuple`4.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than 0 or greater than 3.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 小於 0 或大於 3。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="P:System.Tuple`4.System#Runtime#CompilerServices#ITuple#Length">
          <source>Gets the number of elements in the <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph>.</source>
          <target state="translated">取得 <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> 中的項目數目。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`4.System#Runtime#CompilerServices#ITuple#Length">
          <source>4, the number of elements in a <ph id="ph1">&lt;see cref="T:System.Tuple`4" /&gt;</ph> object.</source>
          <target state="translated">4，<ph id="ph1">&lt;see cref="T:System.Tuple`4" /&gt;</ph> 物件中的項目數目。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`4.System#Runtime#CompilerServices#ITuple#Length">
          <source>The <ph id="ph1">&lt;xref:System.Tuple%604.System%23Runtime%23CompilerServices%23ITuple%23Length%2A&gt;</ph> property is an explicit interface implementation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Tuple%604.System%23Runtime%23CompilerServices%23ITuple%23Length%2A&gt;</ph>屬性是明確介面實作。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`4.System#Runtime#CompilerServices#ITuple#Length">
          <source>To call it, you must cast or convert the <ph id="ph1">&lt;xref:System.Tuple%604&gt;</ph> object to an <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.ITuple&gt;</ph> interface object.</source>
          <target state="translated">若要呼叫它，您必須決定要轉型或轉換<ph id="ph1">&lt;xref:System.Tuple%604&gt;</ph>物件<ph id="ph2">&lt;xref:System.Runtime.CompilerServices.ITuple&gt;</ph>介面物件。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Tuple`4.ToString">
          <source>Returns a string that represents the value of this <ph id="ph1">&lt;see cref="T:System.Tuple`4" /&gt;</ph> instance.</source>
          <target state="translated">傳回字串，表示這個 <ph id="ph1">&lt;see cref="T:System.Tuple`4" /&gt;</ph> 執行個體的值。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Tuple`4.ToString">
          <source>The string representation of this <ph id="ph1">&lt;see cref="T:System.Tuple`4" /&gt;</ph> object.</source>
          <target state="translated">此 <ph id="ph1">&lt;see cref="T:System.Tuple`4" /&gt;</ph> 物件的字串表示。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.ToString">
          <source>The string returned by this method takes the form (<bpt id="p1">*</bpt>Item1<ept id="p1">*</ept>, <bpt id="p2">*</bpt>Item2<ept id="p2">*</ept>, <bpt id="p3">*</bpt>Item3<ept id="p3">*</ept>, <bpt id="p4">*</bpt>Item4<ept id="p4">*</ept>), where <bpt id="p5">*</bpt>Item1<ept id="p5">*</ept>, <bpt id="p6">*</bpt>Item2<ept id="p6">*</ept>, <bpt id="p7">*</bpt>Item3<ept id="p7">*</ept>, and <bpt id="p8">*</bpt>Item4<ept id="p8">*</ept> represent the values of the <ph id="ph1">&lt;xref:System.Tuple%604.Item1%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Tuple%604.Item2%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Tuple%604.Item3%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Tuple%604.Item4%2A&gt;</ph> properties, respectively.</source>
          <target state="translated">這個方法所傳回的字串形式 (<bpt id="p1">*</bpt>Item1<ept id="p1">*</ept>， <bpt id="p2">*</bpt>Item2<ept id="p2">*</ept>， <bpt id="p3">*</bpt>Item3<ept id="p3">*</ept>， <bpt id="p4">*</bpt>Item4<ept id="p4">*</ept>)，其中<bpt id="p5">*</bpt>Item1<ept id="p5">*</ept>， <bpt id="p6">*</bpt>Item2<ept id="p6">*</ept>， <bpt id="p7">*</bpt>Item3<ept id="p7">*</ept>，和<bpt id="p8">*</bpt>Item4<ept id="p8">*</ept>代表的值<ph id="ph1">&lt;xref:System.Tuple%604.Item1%2A&gt;</ph>， <ph id="ph2">&lt;xref:System.Tuple%604.Item2%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Tuple%604.Item3%2A&gt;</ph>，和<ph id="ph4">&lt;xref:System.Tuple%604.Item4%2A&gt;</ph>屬性，分別。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.ToString">
          <source>If any of the property values is <ph id="ph1">`null`</ph>, it is represented as <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">如果有任何屬性值為<ph id="ph1">`null`</ph>，則會呈現為<ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.ToString">
          <source>The following example illustrates the <ph id="ph1">&lt;xref:System.Tuple%604.ToString%2A&gt;</ph> method.</source>
          <target state="translated">下列範例說明<ph id="ph1">&lt;xref:System.Tuple%604.ToString%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.ToString">
          <source>It displays the components of an array of 4-tuple objects that contain the name of a city, a month of the year, and the high and low average temperature for that month.</source>
          <target state="translated">它會顯示包含城市名稱、 的年份和最高和最低平均溫度該月份的某個月份的 4 tuple 物件的陣列的元件。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>