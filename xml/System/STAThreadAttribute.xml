<Type Name="STAThreadAttribute" FullName="System.STAThreadAttribute">
  <TypeSignature Language="C#" Value="public sealed class STAThreadAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit STAThreadAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.STAThreadAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class STAThreadAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class STAThreadAttribute sealed : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="a5310-101">指示應用程式的 COM 執行緒模型為單一執行緒 Apartment (Single-Threaded Apartment，STA)。</span><span class="sxs-lookup"><span data-stu-id="a5310-101">Indicates that the COM threading model for an application is single-threaded apartment (STA).</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5310-102">這個屬性套用至進入點方法 (`Main()`方法，在 C# 和 Visual Basic 中的)。</span><span class="sxs-lookup"><span data-stu-id="a5310-102">Apply this attribute to the entry point method (the `Main()` method in C# and Visual Basic).</span></span> <span data-ttu-id="a5310-103">它有其他的方法沒有作用。</span><span class="sxs-lookup"><span data-stu-id="a5310-103">It has no effect on other methods.</span></span> <span data-ttu-id="a5310-104">若要設定您在程式碼中啟動的執行緒的 apartment 狀態，請使用<xref:System.Threading.Thread.SetApartmentState%2A?displayProperty=nameWithType>或<xref:System.Threading.Thread.TrySetApartmentState%2A?displayProperty=nameWithType>方法啟動該執行緒之前。</span><span class="sxs-lookup"><span data-stu-id="a5310-104">To set the apartment state of threads you start in your code, use the <xref:System.Threading.Thread.SetApartmentState%2A?displayProperty=nameWithType> or <xref:System.Threading.Thread.TrySetApartmentState%2A?displayProperty=nameWithType> method before starting the thread.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a5310-105">如需 COM 執行緒模型的概觀，請參閱[了解與使用 COM 執行緒模型](http://msdn.microsoft.com/library/ms809971.aspx)。</span><span class="sxs-lookup"><span data-stu-id="a5310-105">For an overview of COM threading models, see [Understanding and Using COM Threading Models](http://msdn.microsoft.com/library/ms809971.aspx).</span></span>  
  
 <span data-ttu-id="a5310-106">使用 COM interop 應用程式僅適用於 COM 執行緒模型。</span><span class="sxs-lookup"><span data-stu-id="a5310-106">COM threading models only apply to applications that use COM interop.</span></span> <span data-ttu-id="a5310-107">COM 執行緒模型可以設定為單一執行緒 apartment 或多執行緒的 apartment 中。</span><span class="sxs-lookup"><span data-stu-id="a5310-107">The COM threading model can be set to single-threaded apartment or multithreaded apartment.</span></span> <span data-ttu-id="a5310-108">如果執行緒實際上會呼叫 COM 元件，應用程式執行緒只會初始化 COM interop。</span><span class="sxs-lookup"><span data-stu-id="a5310-108">The application thread is only initialized for COM interop if the thread actually makes a call to a COM component.</span></span> <span data-ttu-id="a5310-109">如果未使用 COM interop，則尚未初始化執行緒，而<xref:System.STAThreadAttribute>屬性，如果有的話，沒有任何作用。</span><span class="sxs-lookup"><span data-stu-id="a5310-109">If COM interop is not used, then the thread is not initialized, and the <xref:System.STAThreadAttribute> attribute, if it is present, has no effect.</span></span>  
  
 <span data-ttu-id="a5310-110">從.NET Framework 2.0 版開始，執行緒模型為 COM interop 的預設值取決於您開發應用程式中的，為下表顯示的語言。</span><span class="sxs-lookup"><span data-stu-id="a5310-110">Starting with the .NET Framework version 2.0, the default threading model for COM interop depends on the language in which you are developing your application, as the following table shows.</span></span>  
  
|<span data-ttu-id="a5310-111">語言</span><span class="sxs-lookup"><span data-stu-id="a5310-111">Language</span></span>|<span data-ttu-id="a5310-112">COM apartment 模型</span><span class="sxs-lookup"><span data-stu-id="a5310-112">COM apartment model</span></span>|  
|--------------|-------------------------|  
|<span data-ttu-id="a5310-113">C#</span><span class="sxs-lookup"><span data-stu-id="a5310-113">C#</span></span>|<span data-ttu-id="a5310-114">多執行緒的 apartment</span><span class="sxs-lookup"><span data-stu-id="a5310-114">Multithreaded apartment</span></span>|  
|<span data-ttu-id="a5310-115">C++</span><span class="sxs-lookup"><span data-stu-id="a5310-115">C++</span></span>|<span data-ttu-id="a5310-116">多執行緒的 apartment</span><span class="sxs-lookup"><span data-stu-id="a5310-116">Multithreaded apartment</span></span>|  
|<span data-ttu-id="a5310-117">Visual Basic</span><span class="sxs-lookup"><span data-stu-id="a5310-117">Visual Basic</span></span>|<span data-ttu-id="a5310-118">單一執行緒 apartment</span><span class="sxs-lookup"><span data-stu-id="a5310-118">Single-threaded apartment</span></span>|  
  
 <span data-ttu-id="a5310-119">若要變更這些預設值，您使用<xref:System.STAThreadAttribute>屬性來設定應用程式或呼叫的執行緒模型<xref:System.Threading.Thread.SetApartmentState%2A?displayProperty=nameWithType>或<xref:System.Threading.Thread.TrySetApartmentState%2A?displayProperty=nameWithType>方法，然後再啟動該執行緒來設定特定的執行緒的執行緒模型。</span><span class="sxs-lookup"><span data-stu-id="a5310-119">To change these defaults, you use the <xref:System.STAThreadAttribute> attribute to set the threading model for the application, or call the <xref:System.Threading.Thread.SetApartmentState%2A?displayProperty=nameWithType> or <xref:System.Threading.Thread.TrySetApartmentState%2A?displayProperty=nameWithType> method before starting the thread to set the threading model for a particular thread.</span></span> <span data-ttu-id="a5310-120">在 c + +，您也可以使用[/CLRTHREADATTRIBUTE](http://msdn.microsoft.com/library/4907e9ef-5031-446c-aecf-0a0b32fae1e8)連結器選項可指定 apartment 模型。</span><span class="sxs-lookup"><span data-stu-id="a5310-120">In C++, you can also use the [/CLRTHREADATTRIBUTE](http://msdn.microsoft.com/library/4907e9ef-5031-446c-aecf-0a0b32fae1e8) linker option to specify the apartment model.</span></span>  
  
 <span data-ttu-id="a5310-121">ASP.NET 應用程式應該設定`ASPCompat`屬性[@ Page](http://msdn.microsoft.com/library/f06cf9e5-22bb-461d-8b8f-549e53ff40a4)指示詞加入`true`強制 STA 執行緒集區，可服務頁面。</span><span class="sxs-lookup"><span data-stu-id="a5310-121">ASP.NET applications should set the `ASPCompat` attribute of the [@ Page](http://msdn.microsoft.com/library/f06cf9e5-22bb-461d-8b8f-549e53ff40a4) directive to `true` to force the page to be serviced by the STA thread pool.</span></span>  
  
 <span data-ttu-id="a5310-122">以下是一些情況下，您會想要使用<xref:System.STAThreadAttribute>設明確的執行緒模型為單一執行緒 apartment 的屬性：</span><span class="sxs-lookup"><span data-stu-id="a5310-122">Here are some of the cases in which you’ll want to use the <xref:System.STAThreadAttribute> attribute to explicitly set the threading model to single-threaded apartment:</span></span>  
  
-   <span data-ttu-id="a5310-123">您正在開發 Windows Form 應用程式。</span><span class="sxs-lookup"><span data-stu-id="a5310-123">You're developing a Windows Forms app.</span></span> <span data-ttu-id="a5310-124">Windows Forms 應用程式必須是單一執行緒或如果它們與通訊 Window 系統元件，例如剪貼簿或 Windows 通用對話方塊中，如果他們使用系統功能，例如拖放功能。</span><span class="sxs-lookup"><span data-stu-id="a5310-124">Windows Forms apps must be single-threaded if they communicate with Windows system components such as the Clipboard or Windows common dialog boxes, or if they use system features such as drag-and-drop functionality.</span></span> <span data-ttu-id="a5310-125">若為 C# Windows Forms 應用程式範本會自動加入<xref:System.STAThreadAttribute>屬性設定為 C# 專案。</span><span class="sxs-lookup"><span data-stu-id="a5310-125">The Windows Forms Application template for C# automatically adds the <xref:System.STAThreadAttribute> attribute to C# projects.</span></span> <span data-ttu-id="a5310-126">單一執行緒 apartment 模式是適用於 Visual Basic 預設值，因為沒有必要的屬性。</span><span class="sxs-lookup"><span data-stu-id="a5310-126">Because the single-threaded apartment model is the default for Visual Basic, there is no need for the attribute.</span></span>  
  
-   <span data-ttu-id="a5310-127">您正在開發的 Visual Basic 程式庫，其亦依賴 COM interop 會呼叫的 C# 應用程式。</span><span class="sxs-lookup"><span data-stu-id="a5310-127">You're developing a C# app that calls a Visual Basic library, which, in turn, relies on COM interop.</span></span> <span data-ttu-id="a5310-128">由於單一執行緒 apartment 模式是適用於 Visual Basic 預設值，您應該變更應用程式的執行緒模型為單一執行緒使用<xref:System.STAThreadAttribute>屬性。</span><span class="sxs-lookup"><span data-stu-id="a5310-128">Because the single-threaded apartment model is the default for Visual Basic, you should change your app's threading model to single-threaded by using the <xref:System.STAThreadAttribute> attribute.</span></span>  
  
-   <span data-ttu-id="a5310-129">您的應用程式會使用單一執行緒 apartment 模式的 COM 元件的呼叫。</span><span class="sxs-lookup"><span data-stu-id="a5310-129">Your application makes calls to COM components that use the single-threaded apartment model.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.MTAThreadAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public STAThreadAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.STAThreadAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; STAThreadAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a5310-130">初始化 <see cref="T:System.STAThreadAttribute" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="a5310-130">Initializes a new instance of the <see cref="T:System.STAThreadAttribute" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.MTAThreadAttribute" />
      </Docs>
    </Member>
  </Members>
</Type>