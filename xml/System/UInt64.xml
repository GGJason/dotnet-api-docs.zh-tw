<Type Name="UInt64" FullName="System.UInt64">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bf51cb4dbcdc3d2263758214cb012a1f2bf0f69e" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52199240" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct UInt64 : IComparable, IComparable&lt;ulong&gt;, IConvertible, IEquatable&lt;ulong&gt;, IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit unsigned int64 extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;unsigned int64&gt;, class System.IConvertible, class System.IEquatable`1&lt;unsigned int64&gt;, class System.IFormattable" />
  <TypeSignature Language="DocId" Value="T:System.UInt64" />
  <TypeSignature Language="VB.NET" Value="Public Structure UInt64&#xA;Implements IComparable, IComparable(Of ULong), IConvertible, IEquatable(Of ULong), IFormattable" />
  <TypeSignature Language="C++ CLI" Value="public value class UInt64 : IComparable, IComparable&lt;System::UInt64&gt;, IConvertible, IEquatable&lt;System::UInt64&gt;, IFormattable" />
  <TypeSignature Language="F#" Value="type uint64 = struct&#xA;    interface IFormattable&#xA;    interface IConvertible" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.UInt64&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IConvertible</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.UInt64&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
      <AttributeName>System.CLSCompliant(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="6770d-101">表示 64 位元不帶正負號的整數 (Unsigned Integer)。</span>
      <span class="sxs-lookup">
        <span data-stu-id="6770d-101">Represents a 64-bit unsigned integer.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6770d-102"><xref:System.UInt64>實值型別代表不帶正負號的整數值範圍從 0 到 18446744073709551615。</span><span class="sxs-lookup"><span data-stu-id="6770d-102">The <xref:System.UInt64> value type represents unsigned integers with values ranging from 0 to 18,446,744,073,709,551,615.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6770d-103"><xref:System.UInt64>類型不符合 CLS 標準。</span><span class="sxs-lookup"><span data-stu-id="6770d-103">The <xref:System.UInt64> type is not CLS-compliant.</span></span> <span data-ttu-id="6770d-104">符合 CLS 規範替代型別是<xref:System.Decimal>。</span><span class="sxs-lookup"><span data-stu-id="6770d-104">The CLS-compliant alternative type is <xref:System.Decimal>.</span></span> <span data-ttu-id="6770d-105"><xref:System.Int64> 可以改為用來取代<xref:System.UInt64>值，範圍從 0 到<xref:System.Int64.MaxValue>。</span><span class="sxs-lookup"><span data-stu-id="6770d-105"><xref:System.Int64> can be used instead to replace a <xref:System.UInt64> value that ranges from zero to <xref:System.Int64.MaxValue>.</span></span> <span data-ttu-id="6770d-106">如需 CLS 合規性的詳細資訊，請參閱[Language Independence and Language-independent Components](~/docs/standard/language-independence-and-language-independent-components.md)。</span><span class="sxs-lookup"><span data-stu-id="6770d-106">For more information about CLS compliance, see [Language Independence and Language-Independent Components](~/docs/standard/language-independence-and-language-independent-components.md).</span></span>  
  
 <span data-ttu-id="6770d-107"><xref:System.UInt64> 提供方法來比較此類型的執行個體、 執行個體的值轉換成其字串表示，並將數字的字串表示轉換成此型別的執行個體。</span><span class="sxs-lookup"><span data-stu-id="6770d-107"><xref:System.UInt64> provides methods to compare instances of this type, convert the value of an instance to its string representation, and convert the string representation of a number to an instance of this type.</span></span>  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="6770d-108">此型別的所有成員都是安全執行緒。</span>
      <span class="sxs-lookup">
        <span data-stu-id="6770d-108">All members of this type are thread safe.</span>
      </span>
      <span data-ttu-id="6770d-109">若要修改執行個體狀態會顯示的成員實際上會傳回新的值進行初始化的新執行個體。</span>
      <span class="sxs-lookup">
        <span data-stu-id="6770d-109">Members that appear to modify instance state actually return a new instance initialized with the new value.</span>
      </span>
      <span data-ttu-id="6770d-110">為與任何其他型別，讀取和寫入共用的變數，其中包含這個型別的執行個體必須受到鎖定，以確保執行緒安全性。</span>
      <span class="sxs-lookup">
        <span data-stu-id="6770d-110">As with any other type, reading and writing to a shared variable that contains an instance of this type must be protected by a lock to guarantee thread safety.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.Int64" />
    <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/NET-Framework-4-Formatting-9c4dae8d">
      <span data-ttu-id="6770d-111">範例：.NET Framework 4 格式化公用程式</span>
      <span class="sxs-lookup">
        <span data-stu-id="6770d-111">Sample: .NET Framework 4 Formatting Utility</span>
      </span>
    </related>
  </Docs>
  <Members>
    <MemberGroup MemberName="CompareTo">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6770d-112">將這個執行個體與指定的物件或 <see cref="T:System.UInt64" /> 相比較，並傳回它們的相對值指示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-112">Compares this instance to a specified object or <see cref="T:System.UInt64" /> and returns an indication of their relative values.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj -&gt; int&#xA;override this.CompareTo : obj -&gt; int" Usage="uint64.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="6770d-113">要比較的物件或 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-113">An object to compare, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6770d-114">將這個執行個體與指定的物件相比較，並傳回它們的相對值指示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-114">Compares this instance to a specified object and returns an indication of their relative values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6770d-115">帶正負號的數字，指出這個執行個體與 <paramref name="value" /> 的相對值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-115">A signed number indicating the relative values of this instance and <paramref name="value" />.</span>
          </span>
          <list type="table">
            <listheader>
              <term>
                <span data-ttu-id="6770d-116">傳回值</span>
                <span class="sxs-lookup">
                  <span data-stu-id="6770d-116">Return Value</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="6770d-117">描述</span>
                <span class="sxs-lookup">
                  <span data-stu-id="6770d-117">Description</span>
                </span>
              </description>
            </listheader>
            <item>
              <term>
                <span data-ttu-id="6770d-118">小於零</span>
                <span class="sxs-lookup">
                  <span data-stu-id="6770d-118">Less than zero</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="6770d-119">這個執行個體小於 <paramref name="value" />。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="6770d-119">This instance is less than <paramref name="value" />.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="6770d-120">零</span>
                <span class="sxs-lookup">
                  <span data-stu-id="6770d-120">Zero</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="6770d-121">這個執行個體等於 <paramref name="value" />。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="6770d-121">This instance is equal to <paramref name="value" />.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="6770d-122">大於零</span>
                <span class="sxs-lookup">
                  <span data-stu-id="6770d-122">Greater than zero</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="6770d-123">這個執行個體大於 <paramref name="value" />。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="6770d-123">This instance is greater than <paramref name="value" />.</span>
                </span>
                <span data-ttu-id="6770d-124">-或-</span>
                <span class="sxs-lookup">
                  <span data-stu-id="6770d-124">-or-</span>
                </span>
                <span data-ttu-id="6770d-125">
                  <paramref name="value" /> 為 <see langword="null" />。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="6770d-125">
                    <paramref name="value" /> is <see langword="null" />.</span>
                </span>
              </description>
            </item>
          </list>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6770d-126">任何執行個體<xref:System.UInt64>，不論其值會被視為大於`null`。</span><span class="sxs-lookup"><span data-stu-id="6770d-126">Any instance of <xref:System.UInt64>, regardless of its value, is considered greater than `null`.</span></span>  
  
 <span data-ttu-id="6770d-127">`value` 必須是`null`或執行個體<xref:System.UInt64>，否則會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="6770d-127">`value` must be `null` or an instance of <xref:System.UInt64>; otherwise, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6770d-128">下列程式碼範例示範<xref:System.UInt64.CompareTo%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="6770d-128">The following code example demonstrates the <xref:System.UInt64.CompareTo%2A> method.</span></span>  
  
 [!code-cpp[UInt64 Example#3](~/samples/snippets/cpp/VS_Snippets_CLR/UInt64 Example/CPP/source.cpp#3)]
 [!code-csharp[UInt64 Example#3](~/samples/snippets/csharp/VS_Snippets_CLR/UInt64 Example/CS/source.cs#3)]
 [!code-vb[UInt64 Example#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/UInt64 Example/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6770d-129">
            <paramref name="value" /> 不是 <see cref="T:System.UInt64" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-129">
              <paramref name="value" /> is not a <see cref="T:System.UInt64" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.UInt64.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.CompareTo(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As ULong) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : uint64 -&gt; int&#xA;override this.CompareTo : uint64 -&gt; int" Usage="uint64.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="6770d-130">要比較的不帶正負號整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-130">An unsigned integer to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6770d-131">將這個執行個體與指定的 64 位元不帶正負號的整數相比較，並傳回它們的相對值指示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-131">Compares this instance to a specified 64-bit unsigned integer and returns an indication of their relative values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6770d-132">帶正負號的數字，指出這個執行個體與 <paramref name="value" /> 的相對值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-132">A signed number indicating the relative values of this instance and <paramref name="value" />.</span>
          </span>
          <list type="table">
            <listheader>
              <term>
                <span data-ttu-id="6770d-133">傳回值</span>
                <span class="sxs-lookup">
                  <span data-stu-id="6770d-133">Return Value</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="6770d-134">描述</span>
                <span class="sxs-lookup">
                  <span data-stu-id="6770d-134">Description</span>
                </span>
              </description>
            </listheader>
            <item>
              <term>
                <span data-ttu-id="6770d-135">小於零</span>
                <span class="sxs-lookup">
                  <span data-stu-id="6770d-135">Less than zero</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="6770d-136">這個執行個體小於 <paramref name="value" />。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="6770d-136">This instance is less than <paramref name="value" />.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="6770d-137">零</span>
                <span class="sxs-lookup">
                  <span data-stu-id="6770d-137">Zero</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="6770d-138">這個執行個體等於 <paramref name="value" />。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="6770d-138">This instance is equal to <paramref name="value" />.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="6770d-139">大於零</span>
                <span class="sxs-lookup">
                  <span data-stu-id="6770d-139">Greater than zero</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="6770d-140">這個執行個體大於 <paramref name="value" />。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="6770d-140">This instance is greater than <paramref name="value" />.</span>
                </span>
              </description>
            </item>
          </list>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6770d-141">這個方法會實作<xref:System.IComparable%601?displayProperty=nameWithType>介面並執行稍微優於<xref:System.UInt64.CompareTo%2A?displayProperty=nameWithType>方法因為並沒有將`value`物件的參數。</span><span class="sxs-lookup"><span data-stu-id="6770d-141">This method implements the <xref:System.IComparable%601?displayProperty=nameWithType> interface and performs slightly better than the <xref:System.UInt64.CompareTo%2A?displayProperty=nameWithType> method because it does not have to convert the `value` parameter to an object.</span></span>  
  
 <span data-ttu-id="6770d-142">根據您的程式語言，可能是程式碼可能<xref:System.UInt64.CompareTo%2A>方法的參數類型具有較少的位元的位置 （較窄） 與執行個體類型。</span><span class="sxs-lookup"><span data-stu-id="6770d-142">Depending on your programming language, it might be possible to code a <xref:System.UInt64.CompareTo%2A> method where the parameter type has fewer bits (is narrower) than the instance type.</span></span> <span data-ttu-id="6770d-143">這可能是因為有些程式語言會執行隱含的擴展轉換，將參數表示為型別具有相同位元數與執行個體。</span><span class="sxs-lookup"><span data-stu-id="6770d-143">This is possible because some programming languages perform an implicit widening conversion that represents the parameter as a type with as many bits as the instance.</span></span>  
  
 <span data-ttu-id="6770d-144">例如，假設此執行個體類型是<xref:System.Int32>，且參數類型為<xref:System.Byte>。</span><span class="sxs-lookup"><span data-stu-id="6770d-144">For example, suppose the instance type is <xref:System.Int32> and the parameter type is <xref:System.Byte>.</span></span> <span data-ttu-id="6770d-145">Microsoft C# 編譯器會產生代表做為參數的值的指示<xref:System.Int32>物件，則會產生<xref:System.Int32.CompareTo%2A?displayProperty=nameWithType>比較的值的方法<xref:System.Int32>執行個體和<xref:System.Int32>參數表示法。</span><span class="sxs-lookup"><span data-stu-id="6770d-145">The Microsoft C# compiler generates instructions to represent the value of the parameter as an <xref:System.Int32> object, then generates a <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> method that compares the values of the <xref:System.Int32> instance and the <xref:System.Int32> parameter representation.</span></span>  
  
 <span data-ttu-id="6770d-146">請參閱您的程式語言的文件，以判斷其編譯器是否會執行隱含的擴展轉換數值類型上。</span><span class="sxs-lookup"><span data-stu-id="6770d-146">Consult your programming language's documentation to determine whether its compiler performs implicit widening conversions on numeric types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6770d-147">下列程式碼範例示範泛型和非泛型版本<xref:System.UInt64.CompareTo%2A>數的值和參考類型的方法。</span><span class="sxs-lookup"><span data-stu-id="6770d-147">The following code example demonstrates generic and nongeneric versions of the <xref:System.UInt64.CompareTo%2A> method for several value and reference types.</span></span>  
  
 [!code-cpp[T.CompareTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/T.CompareTo/CPP/cat.cpp#1)]
 [!code-csharp[T.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/T.CompareTo/CS/cat.cs#1)]
 [!code-vb[T.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/T.CompareTo/VB/cat.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.UInt64.Equals(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6770d-148">傳回表示這個執行個體是否等於指定物件或 <see cref="T:System.UInt64" /> 的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-148">Returns a value indicating whether this instance is equal to a specified object or <see cref="T:System.UInt64" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="uint64.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="6770d-149">與這個執行個體相比較的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-149">An object to compare to this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6770d-150">傳回值，指出這個執行個體 (Instance) 是否和指定的物件相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-150">Returns a value indicating whether this instance is equal to a specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6770d-151">如果 <see langword="true" /> 是 <paramref name="obj" /> 的執行個體，並且等於這個執行個體的值，則為 <see cref="T:System.UInt64" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-151">
              <see langword="true" /> if <paramref name="obj" /> is an instance of <see cref="T:System.UInt64" /> and equals the value of this instance; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6770d-152">下列範例示範<xref:System.UInt64.Equals%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="6770d-152">The following example demonstrates the <xref:System.UInt64.Equals%2A> method.</span></span>  
  
 [!code-csharp[System.UInt64.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint64.equals/cs/equals1.cs#1)]
 [!code-vb[System.UInt64.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint64.equals/vb/equals1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para>
            <span data-ttu-id="6770d-153">編譯器多載解析可能會說明行為中的兩個明顯的差別<see cref="M:System.UInt64.Equals(System.UInt64)" />方法多載。</span>
            <span class="sxs-lookup">
              <span data-stu-id="6770d-153">Compiler overload resolution may account for an apparent difference in the behavior of the two <see cref="M:System.UInt64.Equals(System.UInt64)" /> method overloads.</span>
            </span>
            <span data-ttu-id="6770d-154">如果之間的隱含轉換<paramref name="obj" />引數和<see cref="T:System.UInt64" />定義和引數型別不是作為<see cref="T:System.Object" />，編譯器會執行隱含轉換和呼叫<see cref="M:System.UInt64.Equals(System.UInt64)" />方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="6770d-154">If an implicit conversion between the <paramref name="obj" /> argument and a <see cref="T:System.UInt64" /> is defined and the argument is not typed as an <see cref="T:System.Object" />, compilers perform an implicit conversion and call the <see cref="M:System.UInt64.Equals(System.UInt64)" /> method.</span>
            </span>
            <span data-ttu-id="6770d-155">否則，呼叫<see cref="M:System.UInt64.Equals(System.Object)" />方法，它一定會傳回<see langword="false" />如果其<paramref name="obj" />引數不是<see cref="T:System.UInt64" />值。</span>
            <span class="sxs-lookup">
              <span data-stu-id="6770d-155">Otherwise, they call the <see cref="M:System.UInt64.Equals(System.Object)" /> method, which always returns <see langword="false" /> if its <paramref name="obj" /> argument is not a <see cref="T:System.UInt64" /> value.</span>
            </span>
            <span data-ttu-id="6770d-156">下列範例說明這兩個方法多載之間的行為差異。</span>
            <span class="sxs-lookup">
              <span data-stu-id="6770d-156">The following example illustrates the difference in behavior between the two method overloads.</span>
            </span>
            <span data-ttu-id="6770d-157">若是<see cref="T:System.Byte" />， <see cref="T:System.UInt16" />，和<see cref="T:System.UInt32" />值，傳回第一個比較<see langword="true" />因為編譯器會自動執行擴展轉換和呼叫<see cref="M:System.UInt64.Equals(System.UInt64)" />方法，而第二個比較會傳回<see langword="false" />因為編譯器會呼叫<see cref="M:System.UInt64.Equals(System.Object)" />方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="6770d-157">In the case of the <see cref="T:System.Byte" />, <see cref="T:System.UInt16" />, and <see cref="T:System.UInt32" /> values, the first comparison returns <see langword="true" /> because the compiler automatically performs a widening conversion and calls the <see cref="M:System.UInt64.Equals(System.UInt64)" /> method, whereas the second comparison returns <see langword="false" /> because the compiler calls the <see cref="M:System.UInt64.Equals(System.Object)" /> method.</span>
            </span>
            <span data-ttu-id="6770d-158">[！ 的程式碼 csharp[System.UInt64.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint64.equals/cs/equalsoverl.cs#2)] [！ 的程式碼 vb[System.UInt64.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint64.equals/vb/equalsoverl.vb#2)]</span>
            <span class="sxs-lookup">
              <span data-stu-id="6770d-158">[!code-csharp[System.UInt64.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint64.equals/cs/equalsoverl.cs#2)] [!code-vb[System.UInt64.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint64.equals/vb/equalsoverl.vb#2)]</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.UInt64.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (ulong obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(unsigned int64 obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.Equals(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::UInt64 obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : uint64 -&gt; bool" Usage="uint64.Equals obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="6770d-159">要與此執行個體相比較的 <see cref="T:System.UInt64" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-159">A <see cref="T:System.UInt64" /> value to compare to this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6770d-160">傳回值，表示這個執行個體是否等於指定的 <see cref="T:System.UInt64" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-160">Returns a value indicating whether this instance is equal to a specified <see cref="T:System.UInt64" /> value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6770d-161">如果 <see langword="true" /> 與這個執行個體具有相同的值，則為 <paramref name="obj" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-161">
              <see langword="true" /> if <paramref name="obj" /> has the same value as this instance; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6770d-162">這個方法會實作<xref:System.IEquatable%601?displayProperty=nameWithType>介面，並執行稍微優於<xref:System.UInt64.Equals%2A>因為並沒有將`obj`物件的參數。</span><span class="sxs-lookup"><span data-stu-id="6770d-162">This method implements the <xref:System.IEquatable%601?displayProperty=nameWithType> interface, and performs slightly better than <xref:System.UInt64.Equals%2A> because it does not have to convert the `obj` parameter to an object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6770d-163">下列範例示範<xref:System.UInt64.Equals%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="6770d-163">The following example demonstrates the <xref:System.UInt64.Equals%2A> method.</span></span>  
  
 [!code-cpp[UInt64_Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR/UInt64_Equals/CPP/uint64_equals.cpp#1)]
 [!code-csharp[UInt64_Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR/UInt64_Equals/CS/uint64_equals.cs#1)]
 [!code-vb[UInt64_Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/UInt64_Equals/VB/uint64_equals.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para>
            <span data-ttu-id="6770d-164">編譯器多載解析可能會說明行為中的兩個明顯的差別<see cref="M:System.UInt64.Equals(System.UInt64)" />方法多載。</span>
            <span class="sxs-lookup">
              <span data-stu-id="6770d-164">Compiler overload resolution may account for an apparent difference in the behavior of the two <see cref="M:System.UInt64.Equals(System.UInt64)" /> method overloads.</span>
            </span>
            <span data-ttu-id="6770d-165">如果之間的隱含轉換<paramref name="obj" />引數和<see cref="T:System.UInt64" />定義和引數型別不是作為<see cref="T:System.Object" />，編譯器會執行隱含轉換和呼叫<see cref="M:System.UInt64.Equals(System.UInt64)" />方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="6770d-165">If an implicit conversion between the <paramref name="obj" /> argument and a <see cref="T:System.UInt64" /> is defined and the argument is not typed as an <see cref="T:System.Object" />, compilers perform an implicit conversion and call the <see cref="M:System.UInt64.Equals(System.UInt64)" /> method.</span>
            </span>
            <span data-ttu-id="6770d-166">否則，呼叫<see cref="M:System.UInt64.Equals(System.Object)" />方法，它一定會傳回<see langword="false" />如果其<paramref name="obj" />引數不是<see cref="T:System.UInt64" />值。</span>
            <span class="sxs-lookup">
              <span data-stu-id="6770d-166">Otherwise, they call the <see cref="M:System.UInt64.Equals(System.Object)" /> method, which always returns <see langword="false" /> if its <paramref name="obj" /> argument is not a <see cref="T:System.UInt64" /> value.</span>
            </span>
            <span data-ttu-id="6770d-167">下列範例說明這兩個方法多載之間的行為差異。</span>
            <span class="sxs-lookup">
              <span data-stu-id="6770d-167">The following example illustrates the difference in behavior between the two method overloads.</span>
            </span>
            <span data-ttu-id="6770d-168">若是<see cref="T:System.Byte" />， <see cref="T:System.UInt16" />，和<see cref="T:System.UInt32" />值，傳回第一個比較<see langword="true" />因為編譯器會自動執行擴展轉換和呼叫<see cref="M:System.UInt64.Equals(System.UInt64)" />方法，而第二個比較會傳回<see langword="false" />因為編譯器會呼叫<see cref="M:System.UInt64.Equals(System.Object)" />方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="6770d-168">In the case of the <see cref="T:System.Byte" />, <see cref="T:System.UInt16" />, and <see cref="T:System.UInt32" /> values, the first comparison returns <see langword="true" /> because the compiler automatically performs a widening conversion and calls the <see cref="M:System.UInt64.Equals(System.UInt64)" /> method, whereas the second comparison returns <see langword="false" /> because the compiler calls the <see cref="M:System.UInt64.Equals(System.Object)" /> method.</span>
            </span>
            <span data-ttu-id="6770d-169">[！ 的程式碼 csharp[System.UInt64.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint64.equals/cs/equalsoverl.cs#2)] [！ 的程式碼 vb[System.UInt64.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint64.equals/vb/equalsoverl.vb#2)]</span>
            <span class="sxs-lookup">
              <span data-stu-id="6770d-169">[!code-csharp[System.UInt64.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint64.equals/cs/equalsoverl.cs#2)] [!code-vb[System.UInt64.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint64.equals/vb/equalsoverl.vb#2)]</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="uint64.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6770d-170">傳回這個執行個體的雜湊碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-170">Returns the hash code for this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6770d-171">32 位元帶正負號的整數雜湊碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-171">A 32-bit signed integer hash code.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeCode">
      <MemberSignature Language="C#" Value="public TypeCode GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TypeCode GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeCode () As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TypeCode GetTypeCode();" />
      <MemberSignature Language="F#" Value="abstract member GetTypeCode : unit -&gt; TypeCode&#xA;override this.GetTypeCode : unit -&gt; TypeCode" Usage="uint64.GetTypeCode " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6770d-172">傳回實值類型 <see cref="T:System.TypeCode" /> 的 <see cref="T:System.UInt64" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-172">Returns the <see cref="T:System.TypeCode" /> for value type <see cref="T:System.UInt64" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6770d-173">列舉常數 <see cref="F:System.TypeCode.UInt64" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-173">The enumerated constant, <see cref="F:System.TypeCode.UInt64" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.TypeCode" />
      </Docs>
    </Member>
    <Member MemberName="MaxValue">
      <MemberSignature Language="C#" Value="public const ulong MaxValue = 18446744073709551615;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal unsigned int64 MaxValue = unsigned int64(18446744073709551615)" />
      <MemberSignature Language="DocId" Value="F:System.UInt64.MaxValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MaxValue As ULong  = 18446744073709551615" />
      <MemberSignature Language="C++ CLI" Value="public: System::UInt64 MaxValue = 18446744073709551615;" />
      <MemberSignature Language="F#" Value="val mutable MaxValue : uint64" Usage="System.uint64.MaxValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <MemberValue>18446744073709551615</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="6770d-174">代表 <see cref="T:System.UInt64" /> 最大的可能值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-174">Represents the largest possible value of <see cref="T:System.UInt64" />.</span>
          </span>
          <span data-ttu-id="6770d-175">這個欄位是常數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-175">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6770d-176">這個常數的值是 18446744073709551615;也就是十六進位 0xFFFFFFFFFFFFFFFF。</span><span class="sxs-lookup"><span data-stu-id="6770d-176">The value of this constant is 18,446,744,073,709,551,615; that is, hexadecimal 0xFFFFFFFFFFFFFFFF.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6770d-177">下列範例會使用<xref:System.UInt64.MinValue>並<xref:System.UInt64.MaxValue>欄位，以確認<xref:System.Double>值的範圍內是<xref:System.UInt64>輸入之前它會執行類型轉換。</span><span class="sxs-lookup"><span data-stu-id="6770d-177">The following example uses the <xref:System.UInt64.MinValue> and <xref:System.UInt64.MaxValue> fields to verify that a <xref:System.Double> value is within the range of the <xref:System.UInt64> type before it performs a type conversion.</span></span> <span data-ttu-id="6770d-178">這可防止<xref:System.OverflowException>在執行階段。</span><span class="sxs-lookup"><span data-stu-id="6770d-178">This prevents an <xref:System.OverflowException> at run time.</span></span>  
  
 [!code-csharp[System.UInt64.MaxValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.UInt64.MaxValue/cs/MaxValue1.cs#1)]
 [!code-vb[System.UInt64.MaxValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.UInt64.MaxValue/vb/MaxValue1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.UInt64.MinValue" />
      </Docs>
    </Member>
    <Member MemberName="MinValue">
      <MemberSignature Language="C#" Value="public const ulong MinValue = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal unsigned int64 MinValue = unsigned int64(0)" />
      <MemberSignature Language="DocId" Value="F:System.UInt64.MinValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MinValue As ULong  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: System::UInt64 MinValue = 0;" />
      <MemberSignature Language="F#" Value="val mutable MinValue : uint64" Usage="System.uint64.MinValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="6770d-179">代表 <see cref="T:System.UInt64" /> 最小的可能值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-179">Represents the smallest possible value of <see cref="T:System.UInt64" />.</span>
          </span>
          <span data-ttu-id="6770d-180">這個欄位是常數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-180">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6770d-181">這個常數的值為 0。</span><span class="sxs-lookup"><span data-stu-id="6770d-181">The value of this constant is 0.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6770d-182">下列範例會使用<xref:System.UInt64.MinValue>並<xref:System.UInt64.MaxValue>欄位，以確認<xref:System.Double>值的範圍內是<xref:System.UInt64>輸入之前它會執行類型轉換。</span><span class="sxs-lookup"><span data-stu-id="6770d-182">The following example uses the <xref:System.UInt64.MinValue> and <xref:System.UInt64.MaxValue> fields to verify that a <xref:System.Double> value is within the range of the <xref:System.UInt64> type before it performs a type conversion.</span></span> <span data-ttu-id="6770d-183">這可防止<xref:System.OverflowException>在執行階段。</span><span class="sxs-lookup"><span data-stu-id="6770d-183">This prevents an <xref:System.OverflowException> at run time.</span></span>  
  
 [!code-csharp[System.UInt64.MaxValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.UInt64.MaxValue/cs/MaxValue1.cs#1)]
 [!code-vb[System.UInt64.MaxValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.UInt64.MaxValue/vb/MaxValue1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.UInt64.MaxValue" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Parse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6770d-184">將數字的字串表示轉換成它的對等 64 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-184">Converts the string representation of a number to its 64-bit unsigned integer equivalent.</span>
          </span>
        </summary>
        <altmember cref="Overload:System.UInt64.TryParse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static ulong Parse (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 Parse(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 Parse(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; uint64" Usage="System.uint64.Parse s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="6770d-185">字串，表示要轉換的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-185">A string that represents the number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6770d-186">將數字的字串表示轉換成它的對等 64 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-186">Converts the string representation of a number to its 64-bit unsigned integer equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6770d-187">64 位元不帶正負號的整數，與 <paramref name="s" /> 中所包含的數字相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-187">A 64-bit unsigned integer equivalent to the number contained in <paramref name="s" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6770d-188">`s`參數應該是下列格式之數字的字串表示。</span><span class="sxs-lookup"><span data-stu-id="6770d-188">The `s` parameter should be the string representation of a number in the following form.</span></span>  
  
 <span data-ttu-id="6770d-189">[*ws*][*sign*]*digits*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="6770d-189">[*ws*][*sign*]*digits*[*ws*]</span></span>  
  
 <span data-ttu-id="6770d-190">在方括號 ([ 和 ]) 中的項目是選擇性的項目。</span><span class="sxs-lookup"><span data-stu-id="6770d-190">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="6770d-191">下表說明每個元素。</span><span class="sxs-lookup"><span data-stu-id="6770d-191">The following table describes each element.</span></span>  
  
|<span data-ttu-id="6770d-192">元素</span><span class="sxs-lookup"><span data-stu-id="6770d-192">Element</span></span>|<span data-ttu-id="6770d-193">描述</span><span class="sxs-lookup"><span data-stu-id="6770d-193">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="6770d-194">*ws*</span><span class="sxs-lookup"><span data-stu-id="6770d-194">*ws*</span></span>|<span data-ttu-id="6770d-195">選擇性的泛空白字元。</span><span class="sxs-lookup"><span data-stu-id="6770d-195">Optional white space.</span></span>|  
|<span data-ttu-id="6770d-196">*簽署*</span><span class="sxs-lookup"><span data-stu-id="6770d-196">*sign*</span></span>|<span data-ttu-id="6770d-197">選擇性正負號。</span><span class="sxs-lookup"><span data-stu-id="6770d-197">An optional sign.</span></span> <span data-ttu-id="6770d-198">有效的符號字元由<xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType>和<xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType>目前文化特性的屬性。</span><span class="sxs-lookup"><span data-stu-id="6770d-198">Valid sign characters are determined by the <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType> properties of the current culture.</span></span> <span data-ttu-id="6770d-199">不過，使用負號，只使用零;否則，此方法會擲回<xref:System.OverflowException>。</span><span class="sxs-lookup"><span data-stu-id="6770d-199">However, the negative sign symbol can be used only with zero; otherwise, the method throws an <xref:System.OverflowException>.</span></span>|  
|<span data-ttu-id="6770d-200">*digits*</span><span class="sxs-lookup"><span data-stu-id="6770d-200">*digits*</span></span>|<span data-ttu-id="6770d-201">範圍從 0 到 9 的數字順序。</span><span class="sxs-lookup"><span data-stu-id="6770d-201">A sequence of digits ranging from 0 to 9.</span></span> <span data-ttu-id="6770d-202">任何前置的零都會被忽略。</span><span class="sxs-lookup"><span data-stu-id="6770d-202">Any leading zeros are ignored.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="6770d-203">所指定的字串`s`參數會解譯使用<xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType>樣式。</span><span class="sxs-lookup"><span data-stu-id="6770d-203">The string specified by the `s` parameter is interpreted by using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="6770d-204">它不能包含任何的群組分隔符號或小數分隔符號，而且不得有小數部分。</span><span class="sxs-lookup"><span data-stu-id="6770d-204">It cannot contain any group separators or decimal separator, and it cannot have a decimal portion.</span></span>  
  
 <span data-ttu-id="6770d-205">`s`參數會剖析使用的格式設定資訊中<xref:System.Globalization.NumberFormatInfo?displayProperty=nameWithType>初始化目前系統文化特性的物件。</span><span class="sxs-lookup"><span data-stu-id="6770d-205">The `s` parameter is parsed by using the formatting information in a <xref:System.Globalization.NumberFormatInfo?displayProperty=nameWithType> object that is initialized for the current system culture.</span></span> <span data-ttu-id="6770d-206">如需詳細資訊，請參閱<xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="6770d-206">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="6770d-207">若要將字串剖析使用特定文化特性格式資訊，請使用<xref:System.UInt64.Parse%28System.String%2CSystem.IFormatProvider%29>方法。</span><span class="sxs-lookup"><span data-stu-id="6770d-207">To parse a string by using the formatting information of a specific culture, use the <xref:System.UInt64.Parse%28System.String%2CSystem.IFormatProvider%29> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6770d-208">下列範例會使用<xref:System.UInt64.Parse%2A>方法來剖析的字串值陣列。</span><span class="sxs-lookup"><span data-stu-id="6770d-208">The following example uses the <xref:System.UInt64.Parse%2A> method to parse an array of string values.</span></span>  
  
 [!code-csharp[System.UInt64.Parse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint64.parse/cs/parse1.cs#1)]
 [!code-vb[System.UInt64.Parse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint64.parse/vb/parse1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Decimal.Parse(System.String)" />
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6770d-209">
            <paramref name="s" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-209">The <paramref name="s" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="6770d-210">
            <paramref name="s" /> 參數的格式不正確。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-210">The <paramref name="s" /> parameter is not in the correct format.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="6770d-211">
            <paramref name="s" /> 參數代表小於 <see cref="F:System.UInt64.MinValue" /> 或大於 <see cref="F:System.UInt64.MaxValue" /> 的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-211">The <paramref name="s" /> parameter represents a number less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.UInt64.ToString" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md">
          <span data-ttu-id="6770d-212">在 .NET 中剖析數值字串</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-212">Parsing Numeric Strings in .NET</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static ulong Parse (string s, System.Globalization.NumberStyles style);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 Parse(string s, valuetype System.Globalization.NumberStyles style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.Parse(System.String,System.Globalization.NumberStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, style As NumberStyles) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 Parse(System::String ^ s, System::Globalization::NumberStyles style);" />
      <MemberSignature Language="F#" Value="static member Parse : string * System.Globalization.NumberStyles -&gt; uint64" Usage="System.uint64.Parse (s, style)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="6770d-213">字串，表示要轉換的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-213">A string that represents the number to convert.</span>
          </span>
          <span data-ttu-id="6770d-214">這個字串使用 <paramref name="style" /> 參數指定的樣式來解譯。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-214">The string is interpreted by using the style specified by the <paramref name="style" /> parameter.</span>
          </span>
        </param>
        <param name="style">
          <span data-ttu-id="6770d-215">指定 <paramref name="s" /> 可以使用的格式之列舉值的位元組合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-215">A bitwise combination of the enumeration values that specifies the permitted format of <paramref name="s" />.</span>
          </span>
          <span data-ttu-id="6770d-216">一般會指定的值是 <see cref="F:System.Globalization.NumberStyles.Integer" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-216">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6770d-217">將指定樣式之數字的字串表示轉換成其對等 64 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-217">Converts the string representation of a number in a specified style to its 64-bit unsigned integer equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6770d-218">64 位元不帶正負號的整數，與 <paramref name="s" /> 中所指定的數字相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-218">A 64-bit unsigned integer equivalent to the number specified in <paramref name="s" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6770d-219">`style`參數定義中允許的樣式項目 （例如空白字元、 正數或負數符號、 群組分隔符號或小數點符號）`s`剖析作業成功的參數。</span><span class="sxs-lookup"><span data-stu-id="6770d-219">The `style` parameter defines the style elements (such as white space, the positive or negative sign symbol, the group separator symbol, or the decimal point symbol) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="6770d-220">`style` 必須是從位元旗標組合<xref:System.Globalization.NumberStyles>列舉型別。</span><span class="sxs-lookup"><span data-stu-id="6770d-220">`style` must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="6770d-221">`style`參數可讓這個方法多載有用的時機`s`包含十六進位值的字串表示，當所表示之數字系統，（十進位或十六進位）`s`已知只能在執行階段，或當您不允許空白字元，或登符號在`s`。</span><span class="sxs-lookup"><span data-stu-id="6770d-221">The `style` parameter makes this method overload useful when `s` contains the string representation of a hexadecimal value, when the number system (decimal or hexadecimal) represented by `s` is known only at run time, or when you want to disallow white space or a sign symbol in `s`.</span></span>  
  
 <span data-ttu-id="6770d-222">值而定`style`，則`s`參數可能包括下列項目：</span><span class="sxs-lookup"><span data-stu-id="6770d-222">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="6770d-223">[*ws*][*$*][*sign*][*digits*,]*digits*[.*fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span><span class="sxs-lookup"><span data-stu-id="6770d-223">[*ws*][*$*][*sign*][*digits*,]*digits*[.*fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span></span>  
  
 <span data-ttu-id="6770d-224">在方括號 ([ 和 ]) 中的項目是選擇性的項目。</span><span class="sxs-lookup"><span data-stu-id="6770d-224">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="6770d-225">如果`style`包含<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>，則`s`參數可能包含下列項目：</span><span class="sxs-lookup"><span data-stu-id="6770d-225">If `style` includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>, the `s` parameter may contain the following elements:</span></span>  
  
 <span data-ttu-id="6770d-226">[*ws*]*hexdigits*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="6770d-226">[*ws*]*hexdigits*[*ws*]</span></span>  
  
 <span data-ttu-id="6770d-227">下表說明每個元素。</span><span class="sxs-lookup"><span data-stu-id="6770d-227">The following table describes each element.</span></span>  
  
|<span data-ttu-id="6770d-228">元素</span><span class="sxs-lookup"><span data-stu-id="6770d-228">Element</span></span>|<span data-ttu-id="6770d-229">描述</span><span class="sxs-lookup"><span data-stu-id="6770d-229">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="6770d-230">*ws*</span><span class="sxs-lookup"><span data-stu-id="6770d-230">*ws*</span></span>|<span data-ttu-id="6770d-231">選擇性的泛空白字元。</span><span class="sxs-lookup"><span data-stu-id="6770d-231">Optional white space.</span></span> <span data-ttu-id="6770d-232">空白字元可以出現在開頭`s`如果`style`包含<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>旗標，也可以顯示在結尾`s`如果`style`包含<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="6770d-232">White space can appear at the start of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="6770d-233">特定文化特性的貨幣符號。</span><span class="sxs-lookup"><span data-stu-id="6770d-233">A culture-specific currency symbol.</span></span> <span data-ttu-id="6770d-234">在字串中的位置由定義<xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType>和<xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType>目前文化特性的屬性。</span><span class="sxs-lookup"><span data-stu-id="6770d-234">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> properties of the current culture.</span></span> <span data-ttu-id="6770d-235">目前的文化特性的貨幣符號會出現在`s`如果`style`包含<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="6770d-235">The current culture's currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="6770d-236">*簽署*</span><span class="sxs-lookup"><span data-stu-id="6770d-236">*sign*</span></span>|<span data-ttu-id="6770d-237">選擇性正負號。</span><span class="sxs-lookup"><span data-stu-id="6770d-237">An optional sign.</span></span> <span data-ttu-id="6770d-238">符號可以出現在開頭`s`如果`style`包含<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>旗標，也可以顯示在結尾`s`如果`style`包含<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="6770d-238">The sign can appear at the start of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="6770d-239">可用於括號`s`表示負值`style`包含<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="6770d-239">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="6770d-240">不過，使用負號，只使用零;否則，此方法會擲回<xref:System.OverflowException>。</span><span class="sxs-lookup"><span data-stu-id="6770d-240">However, the negative sign symbol can be used only with zero; otherwise, the method throws an <xref:System.OverflowException>.</span></span>|  
|<span data-ttu-id="6770d-241">*digits*</span><span class="sxs-lookup"><span data-stu-id="6770d-241">*digits*</span></span><br /><br /> <span data-ttu-id="6770d-242">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="6770d-242">*fractional_digits*</span></span><br /><br /> <span data-ttu-id="6770d-243">*exponential_digits*</span><span class="sxs-lookup"><span data-stu-id="6770d-243">*exponential_digits*</span></span>|<span data-ttu-id="6770d-244">從 0 到 9 的數字序列。</span><span class="sxs-lookup"><span data-stu-id="6770d-244">A sequence of digits from 0 through 9.</span></span> <span data-ttu-id="6770d-245">針對*fractional_digits*，只有數字 0 是有效。</span><span class="sxs-lookup"><span data-stu-id="6770d-245">For *fractional_digits*, only the digit 0 is valid.</span></span>|  
|<span data-ttu-id="6770d-246">*、*</span><span class="sxs-lookup"><span data-stu-id="6770d-246">*,*</span></span>|<span data-ttu-id="6770d-247">特定文化特性的群組分隔符號。</span><span class="sxs-lookup"><span data-stu-id="6770d-247">A culture-specific group separator symbol.</span></span> <span data-ttu-id="6770d-248">目前的文化特性的群組分隔符號可以出現在`s`如果`style`包含<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="6770d-248">The current culture's group separator can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="6770d-249">*.*</span><span class="sxs-lookup"><span data-stu-id="6770d-249">*.*</span></span>|<span data-ttu-id="6770d-250">特定文化特性的貨幣符號。</span><span class="sxs-lookup"><span data-stu-id="6770d-250">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="6770d-251">目前的文化特性的貨幣符號會出現在`s`如果`style`包含<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="6770d-251">The current culture's decimal point symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="6770d-252">只是數字 0 會顯示為小數位數的剖析作業才會成功;如果*fractional_digits*包含任何其他數字，<xref:System.FormatException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="6770d-252">Only the digit 0 can appear as a fractional digit for the parse operation to succeed; if *fractional_digits* includes any other digit, a <xref:System.FormatException> is thrown.</span></span>|  
|<span data-ttu-id="6770d-253">E</span><span class="sxs-lookup"><span data-stu-id="6770d-253">E</span></span>|<span data-ttu-id="6770d-254">"E"或者"E"字元，表示代表的值時，會以指數 （科學記號） 標記法。</span><span class="sxs-lookup"><span data-stu-id="6770d-254">The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</span></span> <span data-ttu-id="6770d-255">`s`參數可代表指數標記法之數字，如果`style`包含<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="6770d-255">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="6770d-256">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="6770d-256">*hexdigits*</span></span>|<span data-ttu-id="6770d-257">一連串的從 0 到 f 或 0 到 f 的十六進位數字</span><span class="sxs-lookup"><span data-stu-id="6770d-257">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
> [!NOTE]
> <span data-ttu-id="6770d-258">中的任何終止 NUL (u+0000) 字元`s`剖析作業中，不論值會忽略`style`引數。</span><span class="sxs-lookup"><span data-stu-id="6770d-258">Any terminating NUL (U+0000) characters in `s` are ignored by the parsing operation, regardless of the value of the `style` argument.</span></span>

 <span data-ttu-id="6770d-259">只有數字的字串 (對應至<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>樣式) 一律會成功剖析。</span><span class="sxs-lookup"><span data-stu-id="6770d-259">A string with digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully.</span></span> <span data-ttu-id="6770d-260">大部分的其餘<xref:System.Globalization.NumberStyles>成員控制可能存在，但不是一定要出現在輸入字串的項目。</span><span class="sxs-lookup"><span data-stu-id="6770d-260">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be present, but are not required to be present, in the input string.</span></span> <span data-ttu-id="6770d-261">下表指出如何個別<xref:System.Globalization.NumberStyles>成員會影響可能會出現在項目`s`。</span><span class="sxs-lookup"><span data-stu-id="6770d-261">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="6770d-262">`NumberStyles` 值</span><span class="sxs-lookup"><span data-stu-id="6770d-262">`NumberStyles` value</span></span>|<span data-ttu-id="6770d-263">中的項目允許`s`除了數字</span><span class="sxs-lookup"><span data-stu-id="6770d-263">Elements permitted in `s` in addition to digits</span></span>|  
|--------------------------|-----------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None>|<span data-ttu-id="6770d-264">*數字*只有項目。</span><span class="sxs-lookup"><span data-stu-id="6770d-264">The *digits* element only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|<span data-ttu-id="6770d-265">小數點 （.） 及*小數位數*項目。</span><span class="sxs-lookup"><span data-stu-id="6770d-265">The decimal point (.) and *fractional-digits* elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent>|<span data-ttu-id="6770d-266">"E"或"E"字元，這表示指數標記法，連同*exponential_digits*。</span><span class="sxs-lookup"><span data-stu-id="6770d-266">The "e" or "E" character, which indicates exponential notation, along with *exponential_digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|<span data-ttu-id="6770d-267">*Ws*開頭的項目`s`。</span><span class="sxs-lookup"><span data-stu-id="6770d-267">The *ws* element at the start of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|<span data-ttu-id="6770d-268">*Ws*結尾的項目`s`。</span><span class="sxs-lookup"><span data-stu-id="6770d-268">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|<span data-ttu-id="6770d-269">*號*開頭的項目`s`。</span><span class="sxs-lookup"><span data-stu-id="6770d-269">The *sign* element at the start of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|<span data-ttu-id="6770d-270">*號*結尾的項目`s`。</span><span class="sxs-lookup"><span data-stu-id="6770d-270">The *sign* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses>|<span data-ttu-id="6770d-271">*號*括號括住的數字值的形式的項目。</span><span class="sxs-lookup"><span data-stu-id="6770d-271">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands>|<span data-ttu-id="6770d-272">群組分隔符號 （，） 項目。</span><span class="sxs-lookup"><span data-stu-id="6770d-272">The group separator (,) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|<span data-ttu-id="6770d-273">貨幣 （$） 的項目。</span><span class="sxs-lookup"><span data-stu-id="6770d-273">The currency ($) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency>|<span data-ttu-id="6770d-274">所有項目。</span><span class="sxs-lookup"><span data-stu-id="6770d-274">All elements.</span></span> <span data-ttu-id="6770d-275">不過，`s`無法表示十六進位數字或指數標記法之數字。</span><span class="sxs-lookup"><span data-stu-id="6770d-275">However, `s` cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float>|<span data-ttu-id="6770d-276">*Ws*開頭或結尾的項目`s`，*登*開頭`s`，並在小數點 (*。*) 符號。</span><span class="sxs-lookup"><span data-stu-id="6770d-276">The *ws* element at the start or end of `s`, *sign* at the start of `s`, and the decimal point (*.*) symbol.</span></span> <span data-ttu-id="6770d-277">`s`參數也可以使用指數標記法。</span><span class="sxs-lookup"><span data-stu-id="6770d-277">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number>|<span data-ttu-id="6770d-278">`ws`， `sign`、 群組分隔符號 (*，*)，和小數點 (*。*) 項目。</span><span class="sxs-lookup"><span data-stu-id="6770d-278">The `ws`, `sign`, group separator (*,*), and decimal point (*.*) elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any>|<span data-ttu-id="6770d-279">所有項目。</span><span class="sxs-lookup"><span data-stu-id="6770d-279">All elements.</span></span> <span data-ttu-id="6770d-280">不過，`s`無法代表十六進位數字。</span><span class="sxs-lookup"><span data-stu-id="6770d-280">However, `s` cannot represent a hexadecimal number.</span></span>|  
  
 <span data-ttu-id="6770d-281">不同於其他<xref:System.Globalization.NumberStyles>的值，允許，但不是需要，在特定的樣式項目出現與否`s`，則<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>樣式值表示，在個別的數字字元`s`一律會解譯為十六進位字元。</span><span class="sxs-lookup"><span data-stu-id="6770d-281">Unlike the other <xref:System.Globalization.NumberStyles> values, which allow for, but do not require, the presence of particular style elements in `s`, the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> style value means that the individual numeric characters in `s` are always interpreted as hexadecimal characters.</span></span> <span data-ttu-id="6770d-282">有效的十六進位字元是 0-9、 A-F 和 a-f。</span><span class="sxs-lookup"><span data-stu-id="6770d-282">Valid hexadecimal characters are 0-9, A-F, and a-f.</span></span> <span data-ttu-id="6770d-283">前置詞，例如 「 0x 」 不支援，並造成失敗的剖析作業。</span><span class="sxs-lookup"><span data-stu-id="6770d-283">A prefix such as "0x" is not supported and causes the parse operation to fail.</span></span> <span data-ttu-id="6770d-284">只有其他旗標，可以結合`style`參數都<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>和<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="6770d-284">The only other flags that can be combined with the `style` parameter are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="6770d-285">(<xref:System.Globalization.NumberStyles>列舉會包含複合的數字樣式<xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>，其中包含這兩個空格旗標。)</span><span class="sxs-lookup"><span data-stu-id="6770d-285">(The <xref:System.Globalization.NumberStyles> enumeration includes a composite number style, <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, that includes both white-space flags.)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6770d-286">如果`s`的字串表示法的十六進位數字，它無法加上任何裝飾 (例如`0x`或`&h`)，區隔其為十六進位的數字。</span><span class="sxs-lookup"><span data-stu-id="6770d-286">If `s` is the string representation of a hexadecimal number, it cannot be preceded by any decoration (such as `0x` or `&h`) that differentiates it as a hexadecimal number.</span></span> <span data-ttu-id="6770d-287">這會導致轉換失敗。</span><span class="sxs-lookup"><span data-stu-id="6770d-287">This causes the conversion to fail.</span></span>  
  
 <span data-ttu-id="6770d-288">`s`參數會剖析使用的格式設定資訊中<xref:System.Globalization.NumberFormatInfo>初始化目前系統文化特性的物件。</span><span class="sxs-lookup"><span data-stu-id="6770d-288">The `s` parameter is parsed by using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object that is initialized for the current system culture.</span></span> <span data-ttu-id="6770d-289">若要指定的文化特性的格式資訊用於剖析作業，請呼叫<xref:System.UInt64.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29>多載。</span><span class="sxs-lookup"><span data-stu-id="6770d-289">To specify the culture whose formatting information is used for the parse operation, call the <xref:System.UInt64.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6770d-290">下列範例會嘗試使用來剖析字串陣列中的每個項目數目<xref:System.Globalization.NumberStyles>值。</span><span class="sxs-lookup"><span data-stu-id="6770d-290">The following example tries to parse each element in a string array by using a number of <xref:System.Globalization.NumberStyles> values.</span></span>  
  
 [!code-csharp[System.UInt64.Parse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint64.parse/cs/parseex2.cs#2)]
 [!code-vb[System.UInt64.Parse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint64.parse/vb/parseex2.vb#2)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Decimal.Parse(System.String)" />
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6770d-291">
            <paramref name="s" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-291">The <paramref name="s" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6770d-292">
            <paramref name="style" /> 不是 <see cref="T:System.Globalization.NumberStyles" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-292">
              <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span>
          </span>
          <span data-ttu-id="6770d-293">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-293">-or-</span>
          </span>
          <span data-ttu-id="6770d-294">
            <paramref name="style" /> 不是 <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 和 <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 值的組合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-294">
              <paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="6770d-295">
            <paramref name="s" /> 參數的格式與 <paramref name="style" /> 不相容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-295">The <paramref name="s" /> parameter is not in a format compliant with <paramref name="style" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="6770d-296">
            <paramref name="s" /> 參數代表小於 <see cref="F:System.UInt64.MinValue" /> 或大於 <see cref="F:System.UInt64.MaxValue" /> 的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-296">The <paramref name="s" /> parameter represents a number less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</span>
          </span>
          <span data-ttu-id="6770d-297">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-297">-or-</span>
          </span>
          <span data-ttu-id="6770d-298">
            <paramref name="s" /> 包含非零的小數點後數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-298">
              <paramref name="s" /> includes non-zero, fractional digits.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.UInt64.ToString" />
        <altmember cref="Overload:System.UInt64.TryParse" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md">
          <span data-ttu-id="6770d-299">在 .NET 中剖析數值字串</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-299">Parsing Numeric Strings in .NET</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static ulong Parse (string s, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 Parse(string s, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.Parse(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, provider As IFormatProvider) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 Parse(System::String ^ s, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member Parse : string * IFormatProvider -&gt; uint64" Usage="System.uint64.Parse (s, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="6770d-300">字串，表示要轉換的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-300">A string that represents the number to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="6770d-301">物件，提供關於 <paramref name="s" /> 的特定文化特性格式資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-301">An object that supplies culture-specific formatting information about <paramref name="s" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6770d-302">將指定之特定文化特性格式數字的字串表示轉換成它的對等 64 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-302">Converts the string representation of a number in a specified culture-specific format to its 64-bit unsigned integer equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6770d-303">64 位元不帶正負號的整數，與 <paramref name="s" /> 中所指定的數字相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-303">A 64-bit unsigned integer equivalent to the number specified in <paramref name="s" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6770d-304">這個多載<xref:System.UInt64.Parse%28System.String%2CSystem.IFormatProvider%29>方法通常用來將各種不同的方式來格式化的文字轉換<xref:System.UInt64>值。</span><span class="sxs-lookup"><span data-stu-id="6770d-304">This overload of the <xref:System.UInt64.Parse%28System.String%2CSystem.IFormatProvider%29> method is typically used to convert text that can be formatted in a variety of ways to a <xref:System.UInt64> value.</span></span> <span data-ttu-id="6770d-305">比方說，它可以用來轉換使用者 HTML 文字方塊中輸入數值的文字。</span><span class="sxs-lookup"><span data-stu-id="6770d-305">For example, it can be used to convert the text entered by a user into an HTML text box to a numeric value.</span></span>  
  
 <span data-ttu-id="6770d-306">`s`參數會包含數字的格式：</span><span class="sxs-lookup"><span data-stu-id="6770d-306">The `s` parameter contains a number of the form:</span></span>  
  
 <span data-ttu-id="6770d-307">[ws][簽署] 數字 [ws]</span><span class="sxs-lookup"><span data-stu-id="6770d-307">[ws][sign]digits[ws]</span></span>  
  
 <span data-ttu-id="6770d-308">在方括號 （[和]） 是選用項目。</span><span class="sxs-lookup"><span data-stu-id="6770d-308">Items in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="6770d-309">下表說明每個元素。</span><span class="sxs-lookup"><span data-stu-id="6770d-309">The following table describes each element.</span></span>  
  
|<span data-ttu-id="6770d-310">元素</span><span class="sxs-lookup"><span data-stu-id="6770d-310">Element</span></span>|<span data-ttu-id="6770d-311">描述</span><span class="sxs-lookup"><span data-stu-id="6770d-311">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="6770d-312">*ws*</span><span class="sxs-lookup"><span data-stu-id="6770d-312">*ws*</span></span>|<span data-ttu-id="6770d-313">選擇性的泛空白字元。</span><span class="sxs-lookup"><span data-stu-id="6770d-313">Optional white space.</span></span>|  
|<span data-ttu-id="6770d-314">*簽署*</span><span class="sxs-lookup"><span data-stu-id="6770d-314">*sign*</span></span>|<span data-ttu-id="6770d-315">選擇性的正號或負號如果`s`表示零的值。</span><span class="sxs-lookup"><span data-stu-id="6770d-315">An optional positive sign, or a negative sign if `s` represents the value zero.</span></span>|  
|<span data-ttu-id="6770d-316">*digits*</span><span class="sxs-lookup"><span data-stu-id="6770d-316">*digits*</span></span>|<span data-ttu-id="6770d-317">範圍從 0 到 9 的數字順序。</span><span class="sxs-lookup"><span data-stu-id="6770d-317">A sequence of digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="6770d-318">使用解譯的 s 參數<xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType>樣式。</span><span class="sxs-lookup"><span data-stu-id="6770d-318">The s parameter is interpreted using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="6770d-319">除了不帶正負號的整數值的十進位數字，只允許前置和後端空格，以及前置正負號是。</span><span class="sxs-lookup"><span data-stu-id="6770d-319">In addition to the unsigned integer value's decimal digits, only leading and trailing spaces along with a leading sign is allowed.</span></span> <span data-ttu-id="6770d-320">(負號存在，是否`s`必須代表的值為零或方法會擲回<xref:System.OverflowException>。)若要明確定義的樣式項目，以及可出現在特定文化特性格式資訊`s`，使用<xref:System.UInt64.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29>方法。</span><span class="sxs-lookup"><span data-stu-id="6770d-320">(If the negative sign is present, `s` must represent a value of zero, or the method throws an <xref:System.OverflowException>.) To explicitly define the style elements together with the culture-specific formatting information that can be present in `s`, use the <xref:System.UInt64.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> method.</span></span>  
  
 <span data-ttu-id="6770d-321">`provider`參數是<xref:System.IFormatProvider>實作其<xref:System.IFormatProvider.GetFormat%2A>方法會傳回<xref:System.Globalization.NumberFormatInfo>提供特定文化特性格式資訊的物件`s`。</span><span class="sxs-lookup"><span data-stu-id="6770d-321">The `provider` parameter is an <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of `s`.</span></span> <span data-ttu-id="6770d-322">若要使用的三種方式`provider`參數來提供自訂格式化剖析作業資訊：</span><span class="sxs-lookup"><span data-stu-id="6770d-322">There are three ways to use the `provider` parameter to supply custom formatting information to the parse operation:</span></span>  
  
-   <span data-ttu-id="6770d-323">您可以傳遞的實際<xref:System.Globalization.NumberFormatInfo>提供格式設定資訊的物件。</span><span class="sxs-lookup"><span data-stu-id="6770d-323">You can pass the actual <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span> <span data-ttu-id="6770d-324">(其實作的<xref:System.IFormatProvider.GetFormat%2A>只會傳回本身。)</span><span class="sxs-lookup"><span data-stu-id="6770d-324">(Its implementation of <xref:System.IFormatProvider.GetFormat%2A> simply returns itself.)</span></span>  
  
-   <span data-ttu-id="6770d-325">您可以傳遞<xref:System.Globalization.CultureInfo>指定其格式設定所要使用的文化特性的物件。</span><span class="sxs-lookup"><span data-stu-id="6770d-325">You can pass a <xref:System.Globalization.CultureInfo> object that specifies the culture whose formatting is to be used.</span></span> <span data-ttu-id="6770d-326">其<xref:System.Globalization.CultureInfo.NumberFormat%2A>屬性提供格式設定資訊。</span><span class="sxs-lookup"><span data-stu-id="6770d-326">Its <xref:System.Globalization.CultureInfo.NumberFormat%2A> property provides formatting information.</span></span>  
  
-   <span data-ttu-id="6770d-327">您可以傳遞自訂<xref:System.IFormatProvider>實作。</span><span class="sxs-lookup"><span data-stu-id="6770d-327">You can pass a custom <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="6770d-328">其<xref:System.IFormatProvider.GetFormat%2A>方法必須具現化，並傳回<xref:System.Globalization.NumberFormatInfo>提供格式設定資訊的物件。</span><span class="sxs-lookup"><span data-stu-id="6770d-328">Its <xref:System.IFormatProvider.GetFormat%2A> method must instantiate and return the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="6770d-329">如果`provider`已`null`，則<xref:System.Globalization.NumberFormatInfo>會使用目前的文化特性。</span><span class="sxs-lookup"><span data-stu-id="6770d-329">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6770d-330">下列範例是按鈕 click 事件處理常式的 Web 表單。</span><span class="sxs-lookup"><span data-stu-id="6770d-330">The following example is the button click event handler of a Web form.</span></span> <span data-ttu-id="6770d-331">它會使用所傳回的陣列<xref:System.Web.HttpRequest.UserLanguages%2A?displayProperty=nameWithType>屬性來判斷使用者的地區設定。</span><span class="sxs-lookup"><span data-stu-id="6770d-331">It uses the array returned by the <xref:System.Web.HttpRequest.UserLanguages%2A?displayProperty=nameWithType> property to determine the user's locale.</span></span> <span data-ttu-id="6770d-332">它接著會執行個體化<xref:System.Globalization.CultureInfo>對應至該地區設定物件。</span><span class="sxs-lookup"><span data-stu-id="6770d-332">It then instantiates a <xref:System.Globalization.CultureInfo> object that corresponds to that locale.</span></span> <span data-ttu-id="6770d-333"><xref:System.Globalization.NumberFormatInfo>所屬的物件<xref:System.Globalization.CultureInfo>物件會傳遞至<xref:System.UInt64.Parse%28System.String%2CSystem.IFormatProvider%29>方法，將轉換使用者輸入的目標<xref:System.UInt64>值。</span><span class="sxs-lookup"><span data-stu-id="6770d-333">The <xref:System.Globalization.NumberFormatInfo> object that belongs to that <xref:System.Globalization.CultureInfo> object is then passed to the <xref:System.UInt64.Parse%28System.String%2CSystem.IFormatProvider%29> method to convert the user's input to a <xref:System.UInt64> value.</span></span>  
  
 [!code-csharp[ParseMethod#1](~/samples/snippets/csharp/VS_Snippets_CLR/ParseMethod/cs/Default.aspx.cs#1)]
 [!code-vb[ParseMethod#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ParseMethod/vb/Default.aspx.vb#1)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Decimal.Parse(System.String)" />
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6770d-334">
            <paramref name="s" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-334">The <paramref name="s" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="6770d-335">
            <paramref name="s" /> 參數的樣式不正確。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-335">The <paramref name="s" /> parameter is not in the correct style.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="6770d-336">
            <paramref name="s" /> 參數代表小於 <see cref="F:System.UInt64.MinValue" /> 或大於 <see cref="F:System.UInt64.MaxValue" /> 的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-336">The <paramref name="s" /> parameter represents a number less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.UInt64.ToString" />
        <altmember cref="Overload:System.UInt64.TryParse" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md">
          <span data-ttu-id="6770d-337">在 .NET 中剖析數值字串</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-337">Parsing Numeric Strings in .NET</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static ulong Parse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style = System.Globalization.NumberStyles.Integer, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 Parse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As ReadOnlySpan(Of Char), Optional style As NumberStyles = System.Globalization.NumberStyles.Integer, Optional provider As IFormatProvider = null) As ULong" />
      <MemberSignature Language="F#" Value="static member Parse : ReadOnlySpan&lt;char&gt; * System.Globalization.NumberStyles * IFormatProvider -&gt; uint64" Usage="System.uint64.Parse (s, style, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.1;netcore-2.0;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="style">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static ulong Parse (string s, System.Globalization.NumberStyles style, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 Parse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, style As NumberStyles, provider As IFormatProvider) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 Parse(System::String ^ s, System::Globalization::NumberStyles style, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member Parse : string * System.Globalization.NumberStyles * IFormatProvider -&gt; uint64" Usage="System.uint64.Parse (s, style, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="6770d-338">字串，表示要轉換的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-338">A string that represents the number to convert.</span>
          </span>
          <span data-ttu-id="6770d-339">這個字串使用 <paramref name="style" /> 參數指定的樣式來解譯。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-339">The string is interpreted by using the style specified by the <paramref name="style" /> parameter.</span>
          </span>
        </param>
        <param name="style">
          <span data-ttu-id="6770d-340">列舉值的位元組合，表示 <paramref name="s" /> 中可以存在的樣式項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-340">A bitwise combination of enumeration values that indicates the style elements that can be present in <paramref name="s" />.</span>
          </span>
          <span data-ttu-id="6770d-341">一般會指定的值是 <see cref="F:System.Globalization.NumberStyles.Integer" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-341">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="6770d-342">物件，提供關於 <paramref name="s" /> 的特定文化特性格式資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-342">An object that supplies culture-specific formatting information about <paramref name="s" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6770d-343">將指定樣式和特定文化特性格式之數字的字串表示轉換成其對等 64 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-343">Converts the string representation of a number in a specified style and culture-specific format to its 64-bit unsigned integer equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6770d-344">64 位元不帶正負號的整數，與 <paramref name="s" /> 中所指定的數字相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-344">A 64-bit unsigned integer equivalent to the number specified in <paramref name="s" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6770d-345">`style`參數定義中允許的樣式項目 （例如空格或正的或負號）`s`剖析作業成功的參數。</span><span class="sxs-lookup"><span data-stu-id="6770d-345">The `style` parameter defines the style elements (such as white space or the positive or negative sign symbol) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="6770d-346">它必須是從位元旗標的組合<xref:System.Globalization.NumberStyles>列舉型別。</span><span class="sxs-lookup"><span data-stu-id="6770d-346">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span>  
  
 <span data-ttu-id="6770d-347">值而定`style`，則`s`參數可能包括下列項目：</span><span class="sxs-lookup"><span data-stu-id="6770d-347">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="6770d-348">[*ws*][*$*][*sign*]*digits*[.*fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span><span class="sxs-lookup"><span data-stu-id="6770d-348">[*ws*][*$*][*sign*]*digits*[.*fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span></span>  
  
 <span data-ttu-id="6770d-349">在方括號 ([ 和 ]) 中的項目是選擇性的項目。</span><span class="sxs-lookup"><span data-stu-id="6770d-349">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="6770d-350">如果`style`包含<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>，則`s`參數可能包括下列項目：</span><span class="sxs-lookup"><span data-stu-id="6770d-350">If `style` includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="6770d-351">[*ws*]*hexdigits*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="6770d-351">[*ws*]*hexdigits*[*ws*]</span></span>  
  
 <span data-ttu-id="6770d-352">下表說明每個元素。</span><span class="sxs-lookup"><span data-stu-id="6770d-352">The following table describes each element.</span></span>  
  
|<span data-ttu-id="6770d-353">元素</span><span class="sxs-lookup"><span data-stu-id="6770d-353">Element</span></span>|<span data-ttu-id="6770d-354">描述</span><span class="sxs-lookup"><span data-stu-id="6770d-354">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="6770d-355">*ws*</span><span class="sxs-lookup"><span data-stu-id="6770d-355">*ws*</span></span>|<span data-ttu-id="6770d-356">選擇性的泛空白字元。</span><span class="sxs-lookup"><span data-stu-id="6770d-356">Optional white space.</span></span> <span data-ttu-id="6770d-357">空白字元可以出現在開頭`s`如果`style`包含<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>旗標，也可以顯示在結尾`s`如果`style`包含<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="6770d-357">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="6770d-358">特定文化特性的貨幣符號。</span><span class="sxs-lookup"><span data-stu-id="6770d-358">A culture-specific currency symbol.</span></span> <span data-ttu-id="6770d-359">在字串中的位置由定義<xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A>的屬性<xref:System.Globalization.NumberFormatInfo>所傳回的物件<xref:System.IFormatProvider.GetFormat%2A>方法`provider`參數。</span><span class="sxs-lookup"><span data-stu-id="6770d-359">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> property of the <xref:System.Globalization.NumberFormatInfo> object that is returned by the <xref:System.IFormatProvider.GetFormat%2A> method of the `provider` parameter.</span></span> <span data-ttu-id="6770d-360">貨幣符號會出現在`s`如果`style`包含<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="6770d-360">The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="6770d-361">*簽署*</span><span class="sxs-lookup"><span data-stu-id="6770d-361">*sign*</span></span>|<span data-ttu-id="6770d-362">選擇性正負號。</span><span class="sxs-lookup"><span data-stu-id="6770d-362">An optional sign.</span></span> <span data-ttu-id="6770d-363">(此方法會擲回<xref:System.OverflowException>如果`s`包含負號，並代表一個非零的數字。)符號可以出現在開頭`s`如果`style`包含<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>旗標，也可以顯示結尾`s`如果`style`包含<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="6770d-363">(The method throws an <xref:System.OverflowException> if `s` includes a negative sign and represents a non-zero number.) The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="6770d-364">可用於括號`s`表示負值`style`包含<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="6770d-364">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="6770d-365">*digits*</span><span class="sxs-lookup"><span data-stu-id="6770d-365">*digits*</span></span>|<span data-ttu-id="6770d-366">從 0 到 9 的數字序列。</span><span class="sxs-lookup"><span data-stu-id="6770d-366">A sequence of digits from 0 through 9.</span></span>|  
|<span data-ttu-id="6770d-367">*.*</span><span class="sxs-lookup"><span data-stu-id="6770d-367">*.*</span></span>|<span data-ttu-id="6770d-368">特定文化特性的貨幣符號。</span><span class="sxs-lookup"><span data-stu-id="6770d-368">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="6770d-369">目前的文化特性的貨幣符號會出現在`s`如果`style`包含<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="6770d-369">The current culture's decimal point symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="6770d-370">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="6770d-370">*fractional_digits*</span></span>|<span data-ttu-id="6770d-371">數字 0-9 的一個或多個如果`style`包含<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>旗標或數字 0，如果沒有的一或多個發生次數。</span><span class="sxs-lookup"><span data-stu-id="6770d-371">One or more occurrences of the digit 0-9 if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag, or one or more occurrences of the digit 0 if it does not.</span></span> <span data-ttu-id="6770d-372">小數點後數字可以出現在`s`只有當`style`包含<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="6770d-372">Fractional digits can appear in `s` only if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="6770d-373">E</span><span class="sxs-lookup"><span data-stu-id="6770d-373">E</span></span>|<span data-ttu-id="6770d-374">"E"或者"E"字元，表示代表的值時，會以指數 （科學記號） 標記法。</span><span class="sxs-lookup"><span data-stu-id="6770d-374">The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</span></span> <span data-ttu-id="6770d-375">`s`參數可代表指數標記法之數字，如果`style`包含<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="6770d-375">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="6770d-376">*exponential_digits*</span><span class="sxs-lookup"><span data-stu-id="6770d-376">*exponential_digits*</span></span>|<span data-ttu-id="6770d-377">從 0 到 9 的數字序列。</span><span class="sxs-lookup"><span data-stu-id="6770d-377">A sequence of digits from 0 through 9.</span></span> <span data-ttu-id="6770d-378">`s`參數可代表指數標記法之數字，如果`style`包含<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="6770d-378">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="6770d-379">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="6770d-379">*hexdigits*</span></span>|<span data-ttu-id="6770d-380">一連串的從 0 到 f 或 0 到 f 的十六進位數字</span><span class="sxs-lookup"><span data-stu-id="6770d-380">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
> [!NOTE]
> <span data-ttu-id="6770d-381">中的任何終止 NUL (u+0000) 字元`s`剖析作業中，不論值會忽略`style`引數。</span><span class="sxs-lookup"><span data-stu-id="6770d-381">Any terminating NUL (U+0000) characters in `s` are ignored by the parsing operation, regardless of the value of the `style` argument.</span></span>

 <span data-ttu-id="6770d-382">十進位數字的字串 (對應至<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>樣式) 一律會成功剖析。</span><span class="sxs-lookup"><span data-stu-id="6770d-382">A string with decimal digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully.</span></span> <span data-ttu-id="6770d-383">大部分的其餘<xref:System.Globalization.NumberStyles>成員控制可能存在，但不是一定要存在，在此輸入字串中的項目。</span><span class="sxs-lookup"><span data-stu-id="6770d-383">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be present, but are not required to be present, in this input string.</span></span> <span data-ttu-id="6770d-384">下表指出如何個別<xref:System.Globalization.NumberStyles>成員會影響可能會出現在項目`s`。</span><span class="sxs-lookup"><span data-stu-id="6770d-384">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="6770d-385">非複合`NumberStyles`值</span><span class="sxs-lookup"><span data-stu-id="6770d-385">Non-composite `NumberStyles` values</span></span>|<span data-ttu-id="6770d-386">中的項目允許`s`除了數字</span><span class="sxs-lookup"><span data-stu-id="6770d-386">Elements permitted in `s` in addition to digits</span></span>|  
|------------------------------------------|-----------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>|<span data-ttu-id="6770d-387">只有小數位數。</span><span class="sxs-lookup"><span data-stu-id="6770d-387">Decimal digits only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>|<span data-ttu-id="6770d-388">小數點 (*。*) 和*fractional_digits*項目。</span><span class="sxs-lookup"><span data-stu-id="6770d-388">The decimal point (*.*) and *fractional_digits* elements.</span></span> <span data-ttu-id="6770d-389">不過，如果樣式不包含<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>旗標*fractional_digits*必須包含一個或多個 0 的數字，否則<xref:System.OverflowException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="6770d-389">However, if style does not include the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag, *fractional_digits* must consist of only one or more 0 digits; otherwise, an <xref:System.OverflowException> is thrown.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>|<span data-ttu-id="6770d-390">"E"或"E"字元，這表示指數標記法，連同*exponential_digits*。</span><span class="sxs-lookup"><span data-stu-id="6770d-390">The "e" or "E" character, which indicates exponential notation, along with *exponential_digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>|<span data-ttu-id="6770d-391">*Ws*開頭的項目`s`。</span><span class="sxs-lookup"><span data-stu-id="6770d-391">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>|<span data-ttu-id="6770d-392">*Ws*結尾的項目`s`。</span><span class="sxs-lookup"><span data-stu-id="6770d-392">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>|<span data-ttu-id="6770d-393">之前登*位數*。</span><span class="sxs-lookup"><span data-stu-id="6770d-393">A sign before *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>|<span data-ttu-id="6770d-394">之後登*位數*。</span><span class="sxs-lookup"><span data-stu-id="6770d-394">A sign after *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>|<span data-ttu-id="6770d-395">前後的括號*數字*表示負數值。</span><span class="sxs-lookup"><span data-stu-id="6770d-395">Parentheses before and after *digits* to indicate a negative value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>|<span data-ttu-id="6770d-396">群組分隔符號 (*，*) 項目。</span><span class="sxs-lookup"><span data-stu-id="6770d-396">The group separator (*,*) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>|<span data-ttu-id="6770d-397">貨幣 (*$*) 項目。</span><span class="sxs-lookup"><span data-stu-id="6770d-397">The currency (*$*) element.</span></span>|  
  
 <span data-ttu-id="6770d-398">如果<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>旗標用，`s`必須是十六進位的值。</span><span class="sxs-lookup"><span data-stu-id="6770d-398">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `s` must be a hexadecimal value.</span></span> <span data-ttu-id="6770d-399">有效的十六進位字元是 0-9、 A-F 和 a-f。</span><span class="sxs-lookup"><span data-stu-id="6770d-399">Valid hexadecimal characters are 0-9, A-F, and a-f.</span></span> <span data-ttu-id="6770d-400">前置詞，例如 「 0x 」 不支援，並造成失敗的剖析作業。</span><span class="sxs-lookup"><span data-stu-id="6770d-400">A prefix such as "0x" is not supported and causes the parse operation to fail.</span></span> <span data-ttu-id="6770d-401">只有其他旗標，它可以結合<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>和<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="6770d-401">The only other flags that can be combined with it are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="6770d-402">(<xref:System.Globalization.NumberStyles>列舉會包含複合的數字樣式<xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>，其中包含這兩個空格旗標。)</span><span class="sxs-lookup"><span data-stu-id="6770d-402">(The <xref:System.Globalization.NumberStyles> enumeration includes a composite number style, <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, that includes both white-space flags.)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6770d-403">如果`s`參數為十六進位數字的字串表示，不加任何裝飾 (例如`0x`或`&h`)，區隔其為十六進位的數字。</span><span class="sxs-lookup"><span data-stu-id="6770d-403">If the `s` parameter is the string representation of a hexadecimal number, it cannot be preceded by any decoration (such as `0x` or `&h`) that differentiates it as a hexadecimal number.</span></span> <span data-ttu-id="6770d-404">這會導致擲回例外狀況的剖析作業。</span><span class="sxs-lookup"><span data-stu-id="6770d-404">This causes the parse operation to throw an exception.</span></span>  
  
 <span data-ttu-id="6770d-405">`provider`參數是<xref:System.IFormatProvider>實作其<xref:System.IFormatProvider.GetFormat%2A>方法會傳回<xref:System.Globalization.NumberFormatInfo>提供特定文化特性格式資訊的物件`s`。</span><span class="sxs-lookup"><span data-stu-id="6770d-405">The `provider` parameter is an <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of `s`.</span></span> <span data-ttu-id="6770d-406">若要使用的三種方式`provider`參數來提供自訂格式化剖析作業資訊：</span><span class="sxs-lookup"><span data-stu-id="6770d-406">There are three ways to use the `provider` parameter to supply custom formatting information to the parse operation:</span></span>  
  
-   <span data-ttu-id="6770d-407">您可以傳遞的實際<xref:System.Globalization.NumberFormatInfo>提供格式設定資訊的物件。</span><span class="sxs-lookup"><span data-stu-id="6770d-407">You can pass the actual <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span> <span data-ttu-id="6770d-408">(其實作的<xref:System.IFormatProvider.GetFormat%2A>只會傳回本身。)</span><span class="sxs-lookup"><span data-stu-id="6770d-408">(Its implementation of <xref:System.IFormatProvider.GetFormat%2A> simply returns itself.)</span></span>  
  
-   <span data-ttu-id="6770d-409">您可以傳遞<xref:System.Globalization.CultureInfo>指定其格式設定所要使用的文化特性的物件。</span><span class="sxs-lookup"><span data-stu-id="6770d-409">You can pass a <xref:System.Globalization.CultureInfo> object that specifies the culture whose formatting is to be used.</span></span> <span data-ttu-id="6770d-410">其<xref:System.Globalization.CultureInfo.NumberFormat%2A>屬性提供格式設定資訊。</span><span class="sxs-lookup"><span data-stu-id="6770d-410">Its <xref:System.Globalization.CultureInfo.NumberFormat%2A> property provides formatting information.</span></span>  
  
-   <span data-ttu-id="6770d-411">您可以傳遞自訂<xref:System.IFormatProvider>實作。</span><span class="sxs-lookup"><span data-stu-id="6770d-411">You can pass a custom <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="6770d-412">其<xref:System.IFormatProvider.GetFormat%2A>方法必須具現化，並傳回<xref:System.Globalization.NumberFormatInfo>提供格式設定資訊的物件。</span><span class="sxs-lookup"><span data-stu-id="6770d-412">Its <xref:System.IFormatProvider.GetFormat%2A> method must instantiate and return the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="6770d-413">如果`provider`已`null`，則<xref:System.Globalization.NumberFormatInfo>物件會使用目前的文化特性。</span><span class="sxs-lookup"><span data-stu-id="6770d-413">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6770d-414">下列範例會使用<xref:System.UInt64.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29>方法，將各種不同的數字的字串表示轉換為 64 位元不帶正負號的整數值。</span><span class="sxs-lookup"><span data-stu-id="6770d-414">The following example uses the <xref:System.UInt64.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> method to convert various string representations of numbers to 64-bit unsigned integer values.</span></span>  
  
 [!code-csharp[System.UInt64.Parse#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint64.parse/cs/parseex4.cs#4)]
 [!code-vb[System.UInt64.Parse#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint64.parse/vb/parseex4.vb#4)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Decimal.Parse(System.String)" />
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6770d-415">
            <paramref name="s" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-415">The <paramref name="s" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6770d-416">
            <paramref name="style" /> 不是 <see cref="T:System.Globalization.NumberStyles" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-416">
              <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span>
          </span>
          <span data-ttu-id="6770d-417">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-417">-or-</span>
          </span>
          <span data-ttu-id="6770d-418">
            <paramref name="style" /> 不是 <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 和 <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 值的組合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-418">
              <paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="6770d-419">
            <paramref name="s" /> 參數的格式與 <paramref name="style" /> 不相容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-419">The <paramref name="s" /> parameter is not in a format compliant with <paramref name="style" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="6770d-420">
            <paramref name="s" /> 參數代表小於 <see cref="F:System.UInt64.MinValue" /> 或大於 <see cref="F:System.UInt64.MaxValue" /> 的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-420">The <paramref name="s" /> parameter represents a number less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</span>
          </span>
          <span data-ttu-id="6770d-421">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-421">-or-</span>
          </span>
          <span data-ttu-id="6770d-422">
            <paramref name="s" /> 包含非零的小數點後數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-422">
              <paramref name="s" /> includes non-zero, fractional digits.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.UInt64.ToString" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md">
          <span data-ttu-id="6770d-423">在 .NET 中剖析數值字串</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-423">Parsing Numeric Strings in .NET</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (value As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ value) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.GetTypeCode">
      <MemberSignature Language="C#" Value="TypeCode IConvertible.GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.TypeCode System.IConvertible.GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Function GetTypeCode () As TypeCode Implements IConvertible.GetTypeCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual TypeCode System.IConvertible.GetTypeCode() = IConvertible::GetTypeCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToBoolean">
      <MemberSignature Language="C#" Value="bool IConvertible.ToBoolean (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IConvertible.ToBoolean(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#ToBoolean(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToBoolean (provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.IConvertible.ToBoolean(IFormatProvider ^ provider) = IConvertible::ToBoolean;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToBoolean(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="6770d-424">這個參數已忽略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-424">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6770d-425">如需這個成員的說明，請參閱 <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-425">For a description of this member, see <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6770d-426">如果目前執行個體的值不是零，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-426">
              <see langword="true" /> if the value of the current instance is not zero; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6770d-427">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="6770d-427">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="6770d-428">只有在 <xref:System.UInt64> 執行個體轉換成 <xref:System.IConvertible> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="6770d-428">It can be used only when the <xref:System.UInt64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="6770d-429">建議的替代做法是呼叫<xref:System.Convert.ToBoolean%28System.UInt64%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="6770d-429">The recommended alternative is to call the <xref:System.Convert.ToBoolean%28System.UInt64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToByte">
      <MemberSignature Language="C#" Value="byte IConvertible.ToByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int8 System.IConvertible.ToByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#ToByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToByte (provider As IFormatProvider) As Byte Implements IConvertible.ToByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Byte System.IConvertible.ToByte(IFormatProvider ^ provider) = IConvertible::ToByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="6770d-430">這個參數已忽略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-430">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6770d-431">如需這個成員的說明，請參閱 <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-431">For a description of this member, see <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6770d-432">目前執行個體的值，轉換為 <see cref="T:System.Byte" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-432">The value of the current instance, converted to a <see cref="T:System.Byte" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6770d-433">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="6770d-433">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="6770d-434">只有在 <xref:System.UInt64> 執行個體轉換成 <xref:System.IConvertible> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="6770d-434">It can be used only when the <xref:System.UInt64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="6770d-435">建議的替代做法是呼叫<xref:System.Convert.ToByte%28System.UInt64%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="6770d-435">The recommended alternative is to call the <xref:System.Convert.ToByte%28System.UInt64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToChar">
      <MemberSignature Language="C#" Value="char IConvertible.ToChar (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance char System.IConvertible.ToChar(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#ToChar(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToChar (provider As IFormatProvider) As Char Implements IConvertible.ToChar" />
      <MemberSignature Language="C++ CLI" Value=" virtual char System.IConvertible.ToChar(IFormatProvider ^ provider) = IConvertible::ToChar;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToChar(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="6770d-436">這個參數已忽略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-436">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6770d-437">如需這個成員的說明，請參閱 <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-437">For a description of this member, see <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6770d-438">目前執行個體的值，轉換為 <see cref="T:System.Char" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-438">The value of the current instance, converted to a <see cref="T:System.Char" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6770d-439">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="6770d-439">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="6770d-440">只有在 <xref:System.UInt64> 執行個體轉換成 <xref:System.IConvertible> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="6770d-440">It can be used only when the <xref:System.UInt64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="6770d-441">建議的替代做法是呼叫<xref:System.Convert.ToChar%28System.UInt64%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="6770d-441">The recommended alternative is to call the <xref:System.Convert.ToChar%28System.UInt64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDateTime">
      <MemberSignature Language="C#" Value="DateTime IConvertible.ToDateTime (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.DateTime System.IConvertible.ToDateTime(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#ToDateTime(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDateTime (provider As IFormatProvider) As DateTime Implements IConvertible.ToDateTime" />
      <MemberSignature Language="C++ CLI" Value=" virtual DateTime System.IConvertible.ToDateTime(IFormatProvider ^ provider) = IConvertible::ToDateTime;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDateTime(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="6770d-442">這個參數已忽略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-442">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6770d-443">不支援這個轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-443">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="6770d-444">嘗試使用這個方法會擲回 <see cref="T:System.InvalidCastException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-444">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6770d-445">不支援這個轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-445">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="6770d-446">沒有傳回值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-446">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="6770d-447">在所有情況下。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-447">In all cases.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDecimal">
      <MemberSignature Language="C#" Value="decimal IConvertible.ToDecimal (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Decimal System.IConvertible.ToDecimal(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#ToDecimal(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDecimal (provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Decimal System.IConvertible.ToDecimal(IFormatProvider ^ provider) = IConvertible::ToDecimal;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDecimal(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="6770d-448">這個參數已忽略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-448">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6770d-449">如需這個成員的說明，請參閱 <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-449">For a description of this member, see <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6770d-450">目前執行個體的值，轉換為 <see cref="T:System.Decimal" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-450">The value of the current instance, converted to a <see cref="T:System.Decimal" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6770d-451">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="6770d-451">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="6770d-452">只有在 <xref:System.UInt64> 執行個體轉換成 <xref:System.IConvertible> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="6770d-452">It can be used only when the <xref:System.UInt64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="6770d-453">建議的替代做法是呼叫<xref:System.Convert.ToDecimal%28System.UInt64%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="6770d-453">The recommended alternative is to call the <xref:System.Convert.ToDecimal%28System.UInt64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDouble">
      <MemberSignature Language="C#" Value="double IConvertible.ToDouble (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float64 System.IConvertible.ToDouble(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#ToDouble(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDouble (provider As IFormatProvider) As Double Implements IConvertible.ToDouble" />
      <MemberSignature Language="C++ CLI" Value=" virtual double System.IConvertible.ToDouble(IFormatProvider ^ provider) = IConvertible::ToDouble;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDouble(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="6770d-454">這個參數已忽略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-454">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6770d-455">如需這個成員的說明，請參閱 <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-455">For a description of this member, see <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6770d-456">目前執行個體的值，轉換為 <see cref="T:System.Double" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-456">The value of the current instance, converted to a <see cref="T:System.Double" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6770d-457">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="6770d-457">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="6770d-458">只有在 <xref:System.UInt64> 執行個體轉換成 <xref:System.IConvertible> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="6770d-458">It can be used only when the <xref:System.UInt64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="6770d-459">建議的替代做法是呼叫<xref:System.Convert.ToDouble%28System.UInt64%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="6770d-459">The recommended alternative is to call the <xref:System.Convert.ToDouble%28System.UInt64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt16">
      <MemberSignature Language="C#" Value="short IConvertible.ToInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int16 System.IConvertible.ToInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#ToInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt16 (provider As IFormatProvider) As Short Implements IConvertible.ToInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual short System.IConvertible.ToInt16(IFormatProvider ^ provider) = IConvertible::ToInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="6770d-460">這個參數已忽略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-460">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6770d-461">如需這個成員的說明，請參閱 <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-461">For a description of this member, see <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6770d-462">目前執行個體的值，轉換為 <see cref="T:System.Int16" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-462">The value of the current instance, converted to an <see cref="T:System.Int16" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6770d-463">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="6770d-463">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="6770d-464">只有在 <xref:System.UInt64> 執行個體轉換成 <xref:System.IConvertible> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="6770d-464">It can be used only when the <xref:System.UInt64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="6770d-465">建議的替代做法是呼叫<xref:System.Convert.ToInt16%28System.UInt64%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="6770d-465">The recommended alternative is to call the <xref:System.Convert.ToInt16%28System.UInt64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt32">
      <MemberSignature Language="C#" Value="int IConvertible.ToInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IConvertible.ToInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#ToInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt32 (provider As IFormatProvider) As Integer Implements IConvertible.ToInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IConvertible.ToInt32(IFormatProvider ^ provider) = IConvertible::ToInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="6770d-466">這個參數已忽略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-466">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6770d-467">如需這個成員的說明，請參閱 <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-467">For a description of this member, see <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6770d-468">目前執行個體的值，轉換為 <see cref="T:System.Int32" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-468">The value of the current instance, converted to an <see cref="T:System.Int32" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6770d-469">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="6770d-469">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="6770d-470">只有在 <xref:System.UInt64> 執行個體轉換成 <xref:System.IConvertible> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="6770d-470">It can be used only when the <xref:System.UInt64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="6770d-471">建議的替代做法是呼叫<xref:System.Convert.ToInt32%28System.UInt64%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="6770d-471">The recommended alternative is to call the <xref:System.Convert.ToInt32%28System.UInt64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt64">
      <MemberSignature Language="C#" Value="long IConvertible.ToInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int64 System.IConvertible.ToInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#ToInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt64 (provider As IFormatProvider) As Long Implements IConvertible.ToInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual long System.IConvertible.ToInt64(IFormatProvider ^ provider) = IConvertible::ToInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="6770d-472">這個參數已忽略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-472">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6770d-473">如需這個成員的說明，請參閱 <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-473">For a description of this member, see <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6770d-474">目前執行個體的值，轉換為 <see cref="T:System.Int64" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-474">The value of the current instance, converted to an <see cref="T:System.Int64" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6770d-475">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="6770d-475">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="6770d-476">只有在 <xref:System.UInt64> 執行個體轉換成 <xref:System.IConvertible> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="6770d-476">It can be used only when the <xref:System.UInt64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="6770d-477">建議的替代做法是呼叫<xref:System.Convert.ToInt64%28System.UInt64%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="6770d-477">The recommended alternative is to call the <xref:System.Convert.ToInt64%28System.UInt64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSByte">
      <MemberSignature Language="C#" Value="sbyte IConvertible.ToSByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int8 System.IConvertible.ToSByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#ToSByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSByte (provider As IFormatProvider) As SByte Implements IConvertible.ToSByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::SByte System.IConvertible.ToSByte(IFormatProvider ^ provider) = IConvertible::ToSByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="6770d-478">這個參數已忽略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-478">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6770d-479">如需這個成員的說明，請參閱 <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-479">For a description of this member, see <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6770d-480">目前執行個體的值，轉換為 <see cref="T:System.SByte" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-480">The value of the current instance, converted to an <see cref="T:System.SByte" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6770d-481">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="6770d-481">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="6770d-482">只有在 <xref:System.UInt64> 執行個體轉換成 <xref:System.IConvertible> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="6770d-482">It can be used only when the <xref:System.UInt64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="6770d-483">建議的替代做法是呼叫<xref:System.Convert.ToSByte%28System.UInt64%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="6770d-483">The recommended alternative is to call the <xref:System.Convert.ToSByte%28System.UInt64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSingle">
      <MemberSignature Language="C#" Value="float IConvertible.ToSingle (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float32 System.IConvertible.ToSingle(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#ToSingle(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSingle (provider As IFormatProvider) As Single Implements IConvertible.ToSingle" />
      <MemberSignature Language="C++ CLI" Value=" virtual float System.IConvertible.ToSingle(IFormatProvider ^ provider) = IConvertible::ToSingle;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSingle(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="6770d-484">這個參數已忽略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-484">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6770d-485">如需這個成員的說明，請參閱 <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-485">For a description of this member, see <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6770d-486">目前執行個體的值，轉換為 <see cref="T:System.Single" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-486">The value of the current instance, converted to a <see cref="T:System.Single" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6770d-487">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="6770d-487">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="6770d-488">只有在 <xref:System.UInt64> 執行個體轉換成 <xref:System.IConvertible> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="6770d-488">It can be used only when the <xref:System.UInt64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="6770d-489">建議的替代做法是呼叫<xref:System.Convert.ToSingle%28System.UInt64%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="6770d-489">The recommended alternative is to call the <xref:System.Convert.ToSingle%28System.UInt64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToType">
      <MemberSignature Language="C#" Value="object IConvertible.ToType (Type type, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IConvertible.ToType(class System.Type type, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#ToType(System.Type,System.IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IConvertible.ToType(Type ^ type, IFormatProvider ^ provider) = IConvertible::ToType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToType(System.Type,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="6770d-490">此 <see cref="T:System.UInt64" /> 值轉換所得的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-490">The type to which to convert this <see cref="T:System.UInt64" /> value.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="6770d-491">
            <see cref="T:System.IFormatProvider" /> 實作，提供傳回值格式的相關資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-491">An <see cref="T:System.IFormatProvider" /> implementation that supplies information about the format of the returned value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6770d-492">如需這個成員的說明，請參閱 <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-492">For a description of this member, see <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6770d-493">目前執行個體的值，轉換為 <paramref name="type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-493">The value of the current instance, converted to <paramref name="type" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6770d-494">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="6770d-494">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="6770d-495">只有在 <xref:System.UInt64> 執行個體轉換成 <xref:System.IConvertible> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="6770d-495">It can be used only when the <xref:System.UInt64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="6770d-496">建議的替代做法是呼叫`static`(`Shared` Visual Basic 中)<xref:System.Convert.ChangeType%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="6770d-496">The recommended alternative is to call the `static` (`Shared` in Visual Basic) <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt16">
      <MemberSignature Language="C#" Value="ushort IConvertible.ToUInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int16 System.IConvertible.ToUInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#ToUInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt16 (provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt16 System.IConvertible.ToUInt16(IFormatProvider ^ provider) = IConvertible::ToUInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="6770d-497">這個參數已忽略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-497">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6770d-498">如需這個成員的說明，請參閱 <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-498">For a description of this member, see <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6770d-499">目前執行個體的值，轉換為 <see cref="T:System.UInt16" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-499">The value of the current instance, converted to a <see cref="T:System.UInt16" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6770d-500">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="6770d-500">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="6770d-501">只有在 <xref:System.UInt64> 執行個體轉換成 <xref:System.IConvertible> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="6770d-501">It can be used only when the <xref:System.UInt64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="6770d-502">建議的替代做法是呼叫<xref:System.Convert.ToUInt16%28System.UInt64%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="6770d-502">The recommended alternative is to call the <xref:System.Convert.ToUInt16%28System.UInt64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt32">
      <MemberSignature Language="C#" Value="uint IConvertible.ToUInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int32 System.IConvertible.ToUInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#ToUInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt32 (provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt32 System.IConvertible.ToUInt32(IFormatProvider ^ provider) = IConvertible::ToUInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="6770d-503">這個參數已忽略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-503">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6770d-504">如需這個成員的說明，請參閱 <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-504">For a description of this member, see <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6770d-505">目前執行個體的值，轉換為 <see cref="T:System.UInt32" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-505">The value of the current instance, converted to a <see cref="T:System.UInt32" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6770d-506">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="6770d-506">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="6770d-507">只有在 <xref:System.UInt64> 執行個體轉換成 <xref:System.IConvertible> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="6770d-507">It can be used only when the <xref:System.UInt64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="6770d-508">建議的替代做法是呼叫<xref:System.Convert.ToUInt32%28System.UInt64%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="6770d-508">The recommended alternative is to call the <xref:System.Convert.ToUInt32%28System.UInt64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt64">
      <MemberSignature Language="C#" Value="ulong IConvertible.ToUInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int64 System.IConvertible.ToUInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#ToUInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt64 (provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt64 System.IConvertible.ToUInt64(IFormatProvider ^ provider) = IConvertible::ToUInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="6770d-509">這個參數已忽略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-509">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6770d-510">如需這個成員的說明，請參閱 <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-510">For a description of this member, see <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6770d-511">目前執行個體的值，未變更。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-511">The value of the current instance, unchanged.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6770d-512">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="6770d-512">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="6770d-513">只有在 <xref:System.UInt64> 執行個體轉換成 <xref:System.IConvertible> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="6770d-513">It can be used only when the <xref:System.UInt64> instance is cast to an <xref:System.IConvertible> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6770d-514">將這個執行個體的數值轉換為它的相等字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-514">Converts the numeric value of this instance to its equivalent string representation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="uint64.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6770d-515">將這個執行個體的數值轉換為它的相等字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-515">Converts the numeric value of this instance to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6770d-516">這個執行個體值的字串表示，由範圍從 0 到 9，沒有正負號或為零的前置字元的數字順序所組成。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-516">The string representation of the value of this instance, consisting of a sequence of digits ranging from 0 to 9, without a sign or leading zeroes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6770d-517"><xref:System.UInt64.ToString>方法格式<xref:System.UInt64>預設值 （"G"或一般） 中的值使用的格式<xref:System.Globalization.NumberFormatInfo>目前文化特性的物件。</span><span class="sxs-lookup"><span data-stu-id="6770d-517">The <xref:System.UInt64.ToString> method formats a <xref:System.UInt64> value in the default ("G", or general) format by using the <xref:System.Globalization.NumberFormatInfo> object of the current culture.</span></span> <span data-ttu-id="6770d-518">如果您想要指定不同的格式或文化特性，使用的其他多載<xref:System.UInt64.ToString%2A>方法，如下所示：</span><span class="sxs-lookup"><span data-stu-id="6770d-518">If you want to specify a different format or culture, use the other overloads of the <xref:System.UInt64.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="6770d-519">若要使用格式</span><span class="sxs-lookup"><span data-stu-id="6770d-519">To use format</span></span>|<span data-ttu-id="6770d-520">文化特性</span><span class="sxs-lookup"><span data-stu-id="6770d-520">For culture</span></span>|<span data-ttu-id="6770d-521">使用多載</span><span class="sxs-lookup"><span data-stu-id="6770d-521">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="6770d-522">預設值 ("G") 格式</span><span class="sxs-lookup"><span data-stu-id="6770d-522">Default ("G") format</span></span>|<span data-ttu-id="6770d-523">特定文化特性</span><span class="sxs-lookup"><span data-stu-id="6770d-523">A specific culture</span></span>|<xref:System.UInt64.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="6770d-524">以特定格式</span><span class="sxs-lookup"><span data-stu-id="6770d-524">A specific format</span></span>|<span data-ttu-id="6770d-525">預設值 （目前） 的文化特性</span><span class="sxs-lookup"><span data-stu-id="6770d-525">Default (current) culture</span></span>|<xref:System.UInt64.ToString%28System.String%29>|  
|<span data-ttu-id="6770d-526">以特定格式</span><span class="sxs-lookup"><span data-stu-id="6770d-526">A specific format</span></span>|<span data-ttu-id="6770d-527">特定文化特性</span><span class="sxs-lookup"><span data-stu-id="6770d-527">A specific culture</span></span>|<xref:System.UInt64.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
   
  
## Examples  
 <span data-ttu-id="6770d-528">下列範例會顯示<xref:System.UInt64>使用預設值<xref:System.UInt64.ToString>方法。</span><span class="sxs-lookup"><span data-stu-id="6770d-528">The following example displays a <xref:System.UInt64> value by using the default <xref:System.UInt64.ToString> method.</span></span> <span data-ttu-id="6770d-529">它也會顯示的字串表示<xref:System.UInt64>無法使用某些標準格式規範所產生的值。</span><span class="sxs-lookup"><span data-stu-id="6770d-529">It also displays the string representations of the <xref:System.UInt64> value that results from using some standard format specifiers.</span></span> <span data-ttu-id="6770d-530">範例會顯示使用 EN-US 文化特性的格式化慣例。</span><span class="sxs-lookup"><span data-stu-id="6770d-530">The examples are displayed using the formatting conventions of the en-US culture.</span></span>  
  
 [!code-csharp[System.UInt64.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint64.tostring/cs/tostring1.cs#1)]
 [!code-vb[System.UInt64.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint64.tostring/vb/tostring1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.UInt64.Parse(System.String)" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md">
          <span data-ttu-id="6770d-531">在 .NET 中將類型格式化</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-531">Formatting Types in .NET</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : IFormatProvider -&gt; string" Usage="uint64.ToString provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="6770d-532">物件，提供特定文化特性格式資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-532">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6770d-533">使用指定的特定文化特性格式資訊，將這個執行個體的數值轉換成它的相等字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-533">Converts the numeric value of this instance to its equivalent string representation using the specified culture-specific format information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6770d-534">這個執行個體值的字串表示，由沒有正負號或前置字元為零以及範圍從 0 到 9 的數字順序所組成。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-534">The string representation of the value of this instance, consisting of a sequence of digits ranging from 0 to 9, without a sign or leading zeros.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6770d-535"><xref:System.UInt64.ToString%28System.IFormatProvider%29>方法格式<xref:System.UInt64>預設值 （"G"或一般） 中的值使用的格式<xref:System.Globalization.NumberFormatInfo>指定文化特性的物件。</span><span class="sxs-lookup"><span data-stu-id="6770d-535">The <xref:System.UInt64.ToString%28System.IFormatProvider%29> method formats a <xref:System.UInt64> value in the default ("G", or general) format by using the <xref:System.Globalization.NumberFormatInfo> object of a specified culture.</span></span> <span data-ttu-id="6770d-536">如果您想要指定不同的格式或目前的文化特性，使用的其他多載<xref:System.UInt64.ToString%2A>方法，如下所示：</span><span class="sxs-lookup"><span data-stu-id="6770d-536">If you want to specify a different format or the current culture, use the other overloads of the <xref:System.UInt64.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="6770d-537">若要使用格式</span><span class="sxs-lookup"><span data-stu-id="6770d-537">To use format</span></span>|<span data-ttu-id="6770d-538">文化特性</span><span class="sxs-lookup"><span data-stu-id="6770d-538">For culture</span></span>|<span data-ttu-id="6770d-539">使用多載</span><span class="sxs-lookup"><span data-stu-id="6770d-539">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="6770d-540">預設值 ("G") 格式</span><span class="sxs-lookup"><span data-stu-id="6770d-540">Default ("G") format</span></span>|<span data-ttu-id="6770d-541">預設值 （目前） 的文化特性</span><span class="sxs-lookup"><span data-stu-id="6770d-541">Default (current) culture</span></span>|<xref:System.UInt64.ToString>|  
|<span data-ttu-id="6770d-542">以特定格式</span><span class="sxs-lookup"><span data-stu-id="6770d-542">A specific format</span></span>|<span data-ttu-id="6770d-543">預設值 （目前） 的文化特性</span><span class="sxs-lookup"><span data-stu-id="6770d-543">Default (current) culture</span></span>|<xref:System.UInt64.ToString%28System.String%29>|  
|<span data-ttu-id="6770d-544">以特定格式</span><span class="sxs-lookup"><span data-stu-id="6770d-544">A specific format</span></span>|<span data-ttu-id="6770d-545">特定文化特性</span><span class="sxs-lookup"><span data-stu-id="6770d-545">A specific culture</span></span>|<xref:System.UInt64.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="6770d-546">`provider`參數是<xref:System.IFormatProvider>實作。</span><span class="sxs-lookup"><span data-stu-id="6770d-546">The `provider` parameter is an <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="6770d-547">其<xref:System.IFormatProvider.GetFormat%2A>方法會傳回<xref:System.Globalization.NumberFormatInfo>提供特定文化特性格式資訊的物件。</span><span class="sxs-lookup"><span data-stu-id="6770d-547">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific formatting information.</span></span> <span data-ttu-id="6770d-548">不過，沒有屬性的<xref:System.Globalization.NumberFormatInfo>與一般的數值格式規範 ("G") 格式時，會使用。</span><span class="sxs-lookup"><span data-stu-id="6770d-548">However, none of the properties of the <xref:System.Globalization.NumberFormatInfo> are used when formatting with the general numeric format specifier ("G").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6770d-549">下列範例會使用數種格式提供者，包括一個而異的文化特性來格式化 64 位元帶正負號的整數值。</span><span class="sxs-lookup"><span data-stu-id="6770d-549">The following example formats a 64-bit signed integer value by using several format providers, including one for the invariant culture.</span></span> <span data-ttu-id="6770d-550">此範例的輸出會說明所傳回格式化的字串<xref:System.UInt64.ToString%28System.IFormatProvider%29>方法是相同的格式提供者。</span><span class="sxs-lookup"><span data-stu-id="6770d-550">The output from the example illustrates that the formatted string returned by the <xref:System.UInt64.ToString%28System.IFormatProvider%29> method is the same regardless of the format provider.</span></span>  
  
 [!code-csharp[System.UInt64.ToString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint64.tostring/cs/tostring2.cs#2)]
 [!code-vb[System.UInt64.ToString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint64.tostring/vb/tostring2.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.UInt64.Parse(System.String)" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md">
          <span data-ttu-id="6770d-551">在 .NET 中將類型格式化</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-551">Formatting Types in .NET</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.ToString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(System::String ^ format);" />
      <MemberSignature Language="F#" Value="override this.ToString : string -&gt; string" Usage="uint64.ToString format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="6770d-552">數值格式字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-552">A numeric format string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6770d-553">使用指定的格式，將這個執行個體的數值轉換成它的相等字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-553">Converts the numeric value of this instance to its equivalent string representation using the specified format.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6770d-554">這個執行個體值的字串表示，如同 <paramref name="format" /> 所指定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-554">The string representation of the value of this instance as specified by <paramref name="format" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6770d-555"><xref:System.UInt64.ToString%28System.String%29>方法格式<xref:System.UInt64>中指定的格式，使用值<xref:System.Globalization.NumberFormatInfo>物件，表示目前的文化特性的慣例。</span><span class="sxs-lookup"><span data-stu-id="6770d-555">The <xref:System.UInt64.ToString%28System.String%29> method formats a <xref:System.UInt64> value in a specified format by using a <xref:System.Globalization.NumberFormatInfo> object that represents the conventions of the current culture.</span></span> <span data-ttu-id="6770d-556">如果您想要使用預設值 （"G"或一般） 格式或指定不同的文化特性，請使用的其他多載<xref:System.UInt64.ToString%2A>方法，如下所示：</span><span class="sxs-lookup"><span data-stu-id="6770d-556">If you want to use the default ("G", or general) format or specify a different culture, use the other overloads of the <xref:System.UInt64.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="6770d-557">若要使用格式</span><span class="sxs-lookup"><span data-stu-id="6770d-557">To use format</span></span>|<span data-ttu-id="6770d-558">文化特性</span><span class="sxs-lookup"><span data-stu-id="6770d-558">For culture</span></span>|<span data-ttu-id="6770d-559">使用多載</span><span class="sxs-lookup"><span data-stu-id="6770d-559">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="6770d-560">預設值 ("G") 格式</span><span class="sxs-lookup"><span data-stu-id="6770d-560">Default ("G") format</span></span>|<span data-ttu-id="6770d-561">預設值 （目前） 的文化特性</span><span class="sxs-lookup"><span data-stu-id="6770d-561">Default (current) culture</span></span>|<xref:System.UInt64.ToString>|  
|<span data-ttu-id="6770d-562">預設值 ("G") 格式</span><span class="sxs-lookup"><span data-stu-id="6770d-562">Default ("G") format</span></span>|<span data-ttu-id="6770d-563">特定文化特性</span><span class="sxs-lookup"><span data-stu-id="6770d-563">A specific culture</span></span>|<xref:System.UInt64.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="6770d-564">以特定格式</span><span class="sxs-lookup"><span data-stu-id="6770d-564">A specific format</span></span>|<span data-ttu-id="6770d-565">特定文化特性</span><span class="sxs-lookup"><span data-stu-id="6770d-565">A specific culture</span></span>|<xref:System.UInt64.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="6770d-566">`format`參數可以是任何有效[標準數值格式字串](~/docs/standard/base-types/standard-numeric-format-strings.md)，或任何組合[自訂數值格式字串](~/docs/standard/base-types/custom-numeric-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="6770d-566">The `format` parameter can be any valid [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md), or any combination of [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span> <span data-ttu-id="6770d-567">如果`format`等於<xref:System.String.Empty?displayProperty=nameWithType>是否`null`，目前的傳回值<xref:System.UInt64>物件會以一般格式規範格式化 ("G")。</span><span class="sxs-lookup"><span data-stu-id="6770d-567">If `format` is equal to <xref:System.String.Empty?displayProperty=nameWithType> or is `null`, the return value of the current <xref:System.UInt64> object is formatted with the general format specifier ("G").</span></span> <span data-ttu-id="6770d-568">如果`format`是任何其他值，則方法會擲回<xref:System.FormatException>。</span><span class="sxs-lookup"><span data-stu-id="6770d-568">If `format` is any other value, the method throws a <xref:System.FormatException>.</span></span>  
  
 <span data-ttu-id="6770d-569">.NET Framework 會提供廣泛的格式化支援，這會在下列格式化主題中的更詳細地說明：</span><span class="sxs-lookup"><span data-stu-id="6770d-569">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="6770d-570">如需有關數值格式規範的詳細資訊，請參閱[標準數值格式字串](~/docs/standard/base-types/standard-numeric-format-strings.md)並[自訂數值格式字串](~/docs/standard/base-types/custom-numeric-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="6770d-570">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="6770d-571">如需在.NET Framework 格式支援的詳細資訊，請參閱[格式化型別](~/docs/standard/base-types/formatting-types.md)。</span><span class="sxs-lookup"><span data-stu-id="6770d-571">For more information about support for formatting in the .NET Framework, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="6770d-572">傳回字串的格式取決於<xref:System.Globalization.NumberFormatInfo>目前的文化特性的物件。</span><span class="sxs-lookup"><span data-stu-id="6770d-572">The format of the returned string is determined by the <xref:System.Globalization.NumberFormatInfo> object for the current culture.</span></span> <span data-ttu-id="6770d-573">取決於`format`參數，這個物件可控制符號，例如群組分隔符號和小數點符號在輸出字串。</span><span class="sxs-lookup"><span data-stu-id="6770d-573">Depending on the `format` parameter, this object controls symbols such as the group separator and the decimal point symbol in the output string.</span></span> <span data-ttu-id="6770d-574">若要提供目前的文化特性以外的文化特性格式資訊，請呼叫<xref:System.UInt64.ToString%28System.String%2CSystem.IFormatProvider%29>多載。</span><span class="sxs-lookup"><span data-stu-id="6770d-574">To provide formatting information for cultures other than the current culture, call the <xref:System.UInt64.ToString%28System.String%2CSystem.IFormatProvider%29> overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6770d-575">下列範例顯示使用每個標準格式字串和一些自訂格式字串的 64 位元不帶正負號的整數值。</span><span class="sxs-lookup"><span data-stu-id="6770d-575">The following example displays a 64-bit unsigned integer value by using each standard format string and some custom format strings.</span></span>  
  
 [!code-csharp[System.UInt64.ToString#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint64.tostring/cs/tostring3.cs#3)]
 [!code-vb[System.UInt64.ToString#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint64.tostring/vb/tostring3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="6770d-576">
            <paramref name="format" /> 參數無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-576">The <paramref name="format" /> parameter is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:System.UInt64.Parse(System.String)" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md">
          <span data-ttu-id="6770d-577">在 .NET 中將類型格式化</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-577">Formatting Types in .NET</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/base-types/how-to-pad-a-number-with-leading-zeros.md">
          <span data-ttu-id="6770d-578">如何：以前置字元零來填補數字</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-578">How to: Pad a Number with Leading Zeros</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(System::String ^ format, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : string * IFormatProvider -&gt; string" Usage="uint64.ToString (format, provider)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="6770d-579">數值格式字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-579">A numeric format string.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="6770d-580">物件，提供關於這個執行個體的特定文化特性格式資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-580">An object that supplies culture-specific formatting information about this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6770d-581">使用指定的格式和特定文化特性格式資訊，將這個執行個體的數值轉換成它的相等字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-581">Converts the numeric value of this instance to its equivalent string representation using the specified format and culture-specific format information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6770d-582">這個執行個體值的字串表示，如同 <paramref name="format" /> 和 <paramref name="provider" /> 所指定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-582">The string representation of the value of this instance as specified by <paramref name="format" /> and <paramref name="provider" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6770d-583"><xref:System.UInt64.ToString%28System.String%2CSystem.IFormatProvider%29>方法格式<xref:System.UInt64>中指定的格式，使用值<xref:System.Globalization.NumberFormatInfo>指定文化特性的物件。</span><span class="sxs-lookup"><span data-stu-id="6770d-583">The <xref:System.UInt64.ToString%28System.String%2CSystem.IFormatProvider%29> method formats a <xref:System.UInt64> value in a specified format by using the <xref:System.Globalization.NumberFormatInfo> object of a specified culture.</span></span> <span data-ttu-id="6770d-584">如果您想要使用預設格式或文化特性設定，使用的其他多載<xref:System.UInt64.ToString%2A>方法，如下所示：</span><span class="sxs-lookup"><span data-stu-id="6770d-584">If you want to use default format or culture settings, use the other overloads of the <xref:System.UInt64.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="6770d-585">若要使用格式</span><span class="sxs-lookup"><span data-stu-id="6770d-585">To use format</span></span>|<span data-ttu-id="6770d-586">文化特性</span><span class="sxs-lookup"><span data-stu-id="6770d-586">For culture</span></span>|<span data-ttu-id="6770d-587">使用多載</span><span class="sxs-lookup"><span data-stu-id="6770d-587">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="6770d-588">預設值 ("G") 格式</span><span class="sxs-lookup"><span data-stu-id="6770d-588">Default ("G") format</span></span>|<span data-ttu-id="6770d-589">預設值 （目前） 的文化特性</span><span class="sxs-lookup"><span data-stu-id="6770d-589">Default (current) culture</span></span>|<xref:System.UInt64.ToString>|  
|<span data-ttu-id="6770d-590">預設值 ("G") 格式</span><span class="sxs-lookup"><span data-stu-id="6770d-590">Default ("G") format</span></span>|<span data-ttu-id="6770d-591">特定文化特性</span><span class="sxs-lookup"><span data-stu-id="6770d-591">A specific culture</span></span>|<xref:System.UInt64.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="6770d-592">以特定格式</span><span class="sxs-lookup"><span data-stu-id="6770d-592">A specific format</span></span>|<span data-ttu-id="6770d-593">預設值 （目前） 的文化特性</span><span class="sxs-lookup"><span data-stu-id="6770d-593">Default (current) culture</span></span>|<xref:System.UInt64.ToString%28System.String%29>|  
  
 <span data-ttu-id="6770d-594">`format`參數可以是任何有效[標準數值格式字串](~/docs/standard/base-types/standard-numeric-format-strings.md)，或任何組合[自訂數值格式字串](~/docs/standard/base-types/custom-numeric-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="6770d-594">The `format` parameter can be any valid [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md), or any combination of [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span> <span data-ttu-id="6770d-595">如果`format`等於<xref:System.String.Empty?displayProperty=nameWithType>是否`null`，目前的傳回值<xref:System.UInt64>物件會以一般格式規範格式化 ("G")。</span><span class="sxs-lookup"><span data-stu-id="6770d-595">If `format` is equal to <xref:System.String.Empty?displayProperty=nameWithType> or is `null`, the return value of the current <xref:System.UInt64> object is formatted with the general format specifier ("G").</span></span> <span data-ttu-id="6770d-596">如果`format`是任何其他值，則方法會擲回<xref:System.FormatException>。</span><span class="sxs-lookup"><span data-stu-id="6770d-596">If `format` is any other value, the method throws a <xref:System.FormatException>.</span></span>  
  
 <span data-ttu-id="6770d-597">.NET Framework 會提供廣泛的格式化支援，這會在下列格式化主題中的更詳細地說明：</span><span class="sxs-lookup"><span data-stu-id="6770d-597">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="6770d-598">如需有關數值格式規範的詳細資訊，請參閱[標準數值格式字串](~/docs/standard/base-types/standard-numeric-format-strings.md)並[自訂數值格式字串](~/docs/standard/base-types/custom-numeric-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="6770d-598">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="6770d-599">如需有關格式的詳細資訊，請參閱[格式化型別](~/docs/standard/base-types/formatting-types.md)。</span><span class="sxs-lookup"><span data-stu-id="6770d-599">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="6770d-600">`provider`參數是<xref:System.IFormatProvider>實作。</span><span class="sxs-lookup"><span data-stu-id="6770d-600">The `provider` parameter is an <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="6770d-601">其<xref:System.IFormatProvider.GetFormat%2A>方法會傳回<xref:System.Globalization.NumberFormatInfo>提供特定文化特性格式資訊的字串，這個方法所傳回的物件。</span><span class="sxs-lookup"><span data-stu-id="6770d-601">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of the string returned by this method.</span></span> <span data-ttu-id="6770d-602">當<xref:System.UInt64.ToString%28System.String%2CSystem.IFormatProvider%29>叫用方法時，它會呼叫`provider`參數的<xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType>方法並將它傳遞<xref:System.Type>物件，表示<xref:System.Globalization.NumberFormatInfo>型別。</span><span class="sxs-lookup"><span data-stu-id="6770d-602">When the <xref:System.UInt64.ToString%28System.String%2CSystem.IFormatProvider%29> method is invoked, it calls the `provider` parameter's <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> method and passes it a <xref:System.Type> object that represents the <xref:System.Globalization.NumberFormatInfo> type.</span></span> <span data-ttu-id="6770d-603"><xref:System.IFormatProvider.GetFormat%2A>方法接著會傳回<xref:System.Globalization.NumberFormatInfo>物件，提供資訊來格式化目前<xref:System.UInt64>值，例如群組分隔符號或小數點符號。</span><span class="sxs-lookup"><span data-stu-id="6770d-603">The <xref:System.IFormatProvider.GetFormat%2A> method then returns the <xref:System.Globalization.NumberFormatInfo> object that provides information for formatting the current <xref:System.UInt64> value, such as the group separator symbol or the decimal point symbol.</span></span> <span data-ttu-id="6770d-604">若要使用的三種方式`provider`參數來提供格式設定資訊給<xref:System.UInt64.ToString%28System.String%2CSystem.IFormatProvider%29>方法：</span><span class="sxs-lookup"><span data-stu-id="6770d-604">There are three ways to use the `provider` parameter to supply formatting information to the <xref:System.UInt64.ToString%28System.String%2CSystem.IFormatProvider%29> method:</span></span>  
  
-   <span data-ttu-id="6770d-605">您可以傳遞<xref:System.Globalization.CultureInfo>物件，表示提供的格式資訊的文化特性。</span><span class="sxs-lookup"><span data-stu-id="6770d-605">You can pass a <xref:System.Globalization.CultureInfo> object that represents the culture that supplies formatting information.</span></span> <span data-ttu-id="6770d-606">其<xref:System.Globalization.CultureInfo.GetFormat%2A>方法會傳回<xref:System.Globalization.NumberFormatInfo>提供用於該文化特性的數值格式資訊的物件。</span><span class="sxs-lookup"><span data-stu-id="6770d-606">Its <xref:System.Globalization.CultureInfo.GetFormat%2A> method returns the <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information for that culture.</span></span>  
  
-   <span data-ttu-id="6770d-607">您可以傳遞的實際<xref:System.Globalization.NumberFormatInfo>提供數值格式資訊的物件。</span><span class="sxs-lookup"><span data-stu-id="6770d-607">You can pass the actual <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information.</span></span> <span data-ttu-id="6770d-608">(其實作的<xref:System.Globalization.NumberFormatInfo.GetFormat%2A>只會傳回本身。)</span><span class="sxs-lookup"><span data-stu-id="6770d-608">(Its implementation of <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> just returns itself.)</span></span>  
  
-   <span data-ttu-id="6770d-609">您可以傳遞自訂物件實作<xref:System.IFormatProvider>。</span><span class="sxs-lookup"><span data-stu-id="6770d-609">You can pass a custom object that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="6770d-610">其<xref:System.IFormatProvider.GetFormat%2A>方法具現化，並傳回<xref:System.Globalization.NumberFormatInfo>提供格式設定資訊的物件。</span><span class="sxs-lookup"><span data-stu-id="6770d-610">Its <xref:System.IFormatProvider.GetFormat%2A> method instantiates and returns the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="6770d-611">如果`provider`已`null`，傳回字串的格式根據<xref:System.Globalization.NumberFormatInfo>目前文化特性的物件。</span><span class="sxs-lookup"><span data-stu-id="6770d-611">If `provider` is `null`, the formatting of the returned string is based on the <xref:System.Globalization.NumberFormatInfo> object of the current culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6770d-612">下列範例顯示使用標準數值格式規範和特定數目的 32 位元不帶正負號的整數值<xref:System.Globalization.CultureInfo>物件。</span><span class="sxs-lookup"><span data-stu-id="6770d-612">The following example displays a 32-bit unsigned integer value by using the standard numeric format specifiers and a number of specific <xref:System.Globalization.CultureInfo> objects.</span></span>  
  
 [!code-csharp[System.UInt64.ToString#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint64.tostring/cs/tostring4.cs#4)]
 [!code-vb[System.UInt64.ToString#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint64.tostring/vb/tostring4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="6770d-613">
            <paramref name="format" /> 參數無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-613">The <paramref name="format" /> parameter is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:System.UInt64.Parse(System.String)" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md">
          <span data-ttu-id="6770d-614">在 .NET 中將類型格式化</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-614">Formatting Types in .NET</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/base-types/how-to-pad-a-number-with-leading-zeros.md">
          <span data-ttu-id="6770d-615">如何：以前置字元零來填補數字</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-615">How to: Pad a Number with Leading Zeros</span>
          </span>
        </related>
        <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/NET-Framework-4-Formatting-9c4dae8d">
          <span data-ttu-id="6770d-616">範例：.NET Framework 4 格式化公用程式</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-616">Sample: .NET Framework 4 Formatting Utility</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public bool TryFormat (Span&lt;char&gt; destination, out int charsWritten, ReadOnlySpan&lt;char&gt; format = null, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryFormat(valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFormat (destination As Span(Of Char), ByRef charsWritten As Integer, Optional format As ReadOnlySpan(Of Char) = null, Optional provider As IFormatProvider = null) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryFormat : Span&lt;char&gt; *  * ReadOnlySpan&lt;char&gt; * IFormatProvider -&gt; bool" Usage="uint64.TryFormat (destination, charsWritten, format, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" />
        <Parameter Name="charsWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="charsWritten">To be added.</param>
        <param name="format">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryParse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6770d-617">嘗試將數字的字串表示轉換為 64 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-617">Tries to convert the string representation of a number to its 64-bit unsigned integer equivalent.</span>
          </span>
          <span data-ttu-id="6770d-618">傳回值會指出轉換成功或失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-618">A return value indicates whether the conversion succeeded or failed.</span>
          </span>
        </summary>
        <altmember cref="Overload:System.UInt64.Parse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, out ulong result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, [out] unsigned int64&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.TryParse(System.ReadOnlySpan{System.Char},System.UInt64@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), ByRef result As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, [Runtime::InteropServices::Out] System::UInt64 % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; *  -&gt; bool" Usage="System.uint64.TryParse (s, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.1;netcore-2.0;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="result" Type="System.UInt64" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, out ulong result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, [out] unsigned int64&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.TryParse(System.String,System.UInt64@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, ByRef result As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, [Runtime::InteropServices::Out] System::UInt64 % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string *  -&gt; bool" Usage="System.uint64.TryParse (s, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="result" Type="System.UInt64" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="6770d-619">字串，表示要轉換的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-619">A string that represents the number to convert.</span>
          </span>
        </param>
        <param name="result">
          <span data-ttu-id="6770d-620">如果轉換成功，這個方法會傳回包含與 <paramref name="s" /> 中內含數字相等的 64 位元不帶正負號整數，如果轉換失敗則為零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-620">When this method returns, contains the 64-bit unsigned integer value that is equivalent to the number contained in <paramref name="s" />, if the conversion succeeded, or zero if the conversion failed.</span>
          </span>
          <span data-ttu-id="6770d-621">如果 <paramref name="s" /> 參數為 <see langword="null" /> 或 <see cref="F:System.String.Empty" />、不是正確的格式，或是表示小於 <see cref="F:System.UInt64.MinValue" /> 或大於 <see cref="F:System.UInt64.MaxValue" /> 的數字，則轉換會失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-621">The conversion fails if the <paramref name="s" /> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, is not of the correct format, or represents a number less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</span>
          </span>
          <span data-ttu-id="6770d-622">這個參數未初始化便傳遞，<paramref name="result" /> 中原始提供的任何值都將遭到覆寫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-622">This parameter is passed uninitialized; any value originally supplied in <paramref name="result" /> will be overwritten.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6770d-623">嘗試將數字的字串表示轉換為 64 位元不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-623">Tries to convert the string representation of a number to its 64-bit unsigned integer equivalent.</span>
          </span>
          <span data-ttu-id="6770d-624">傳回值會指出轉換成功或失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-624">A return value indicates whether the conversion succeeded or failed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6770d-625">如果 <see langword="true" /> 轉換成功，則為 <paramref name="s" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-625">
              <see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6770d-626"><xref:System.UInt64.TryParse%28System.String%2CSystem.UInt64%40%29>方法就像<xref:System.UInt64.Parse%28System.String%29>方法，但是它不會擲回例外狀況如果轉換失敗。</span><span class="sxs-lookup"><span data-stu-id="6770d-626">The <xref:System.UInt64.TryParse%28System.String%2CSystem.UInt64%40%29> method is like the <xref:System.UInt64.Parse%28System.String%29> method, except that it does not throw an exception if the conversion fails.</span></span> <span data-ttu-id="6770d-627">這個方法就不需要使用例外狀況處理來測試<xref:System.FormatException>如果`s`無效，無法成功剖析。</span><span class="sxs-lookup"><span data-stu-id="6770d-627">This method eliminates the need to use exception handling to test for a <xref:System.FormatException> if `s` is invalid and cannot be successfully parsed.</span></span>  
  
 <span data-ttu-id="6770d-628">`s`參數應該是以下列形式的十進位數字的字串表示：</span><span class="sxs-lookup"><span data-stu-id="6770d-628">The `s` parameter should be the string representation of a decimal number in the following form:</span></span>  
  
 <span data-ttu-id="6770d-629">[*ws*][*sign*]*digits*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="6770d-629">[*ws*][*sign*]*digits*[*ws*]</span></span>  
  
 <span data-ttu-id="6770d-630">在方括號 ([ 和 ]) 中的項目是選擇性的項目。</span><span class="sxs-lookup"><span data-stu-id="6770d-630">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="6770d-631">下表說明每個元素。</span><span class="sxs-lookup"><span data-stu-id="6770d-631">The following table describes each element.</span></span>  
  
|<span data-ttu-id="6770d-632">元素</span><span class="sxs-lookup"><span data-stu-id="6770d-632">Element</span></span>|<span data-ttu-id="6770d-633">描述</span><span class="sxs-lookup"><span data-stu-id="6770d-633">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="6770d-634">*ws*</span><span class="sxs-lookup"><span data-stu-id="6770d-634">*ws*</span></span>|<span data-ttu-id="6770d-635">選擇性的泛空白字元。</span><span class="sxs-lookup"><span data-stu-id="6770d-635">Optional white space.</span></span>|  
|<span data-ttu-id="6770d-636">*簽署*</span><span class="sxs-lookup"><span data-stu-id="6770d-636">*sign*</span></span>|<span data-ttu-id="6770d-637">選擇性正負號。</span><span class="sxs-lookup"><span data-stu-id="6770d-637">An optional sign.</span></span> <span data-ttu-id="6770d-638">有效的符號字元由<xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType>和<xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType>目前文化特性的屬性。</span><span class="sxs-lookup"><span data-stu-id="6770d-638">Valid sign characters are determined by the <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType> properties of the current culture.</span></span>|  
|<span data-ttu-id="6770d-639">*digits*</span><span class="sxs-lookup"><span data-stu-id="6770d-639">*digits*</span></span>|<span data-ttu-id="6770d-640">範圍從 0 到 9 的十進位數字的序列。</span><span class="sxs-lookup"><span data-stu-id="6770d-640">A sequence of decimal digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="6770d-641">`s`參數會解譯使用<xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType>樣式。</span><span class="sxs-lookup"><span data-stu-id="6770d-641">The `s` parameter is interpreted by using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="6770d-642">除了十進位數字，只允許前置和尾端空格取代前置正負號。</span><span class="sxs-lookup"><span data-stu-id="6770d-642">In addition to the decimal digits, only leading and trailing spaces with a leading sign are allowed.</span></span> <span data-ttu-id="6770d-643">明確地定義使用中會有特定文化特性格式資訊的樣式項目`s`，呼叫<xref:System.UInt64.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt64%40%29>方法。</span><span class="sxs-lookup"><span data-stu-id="6770d-643">To explicitly define the style elements with the culture-specific formatting information that can be present in `s`, call the <xref:System.UInt64.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt64%40%29> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6770d-644">所指定的字串`s`參數不能包含任何的群組分隔符號或小數分隔符號，而且不得有小數部分。</span><span class="sxs-lookup"><span data-stu-id="6770d-644">The string specified by the `s` parameter cannot contain any group separators or decimal separator, and it cannot have a fractional portion.</span></span>  
  
 <span data-ttu-id="6770d-645">`s`參數會剖析使用的格式設定資訊中<xref:System.Globalization.NumberFormatInfo>初始化目前系統文化特性的物件。</span><span class="sxs-lookup"><span data-stu-id="6770d-645">The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object initialized for the current system culture.</span></span> <span data-ttu-id="6770d-646">如需詳細資訊，請參閱<xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="6770d-646">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="6770d-647">這個多載會解譯中的所有位數`s`參數做為十進位數字。</span><span class="sxs-lookup"><span data-stu-id="6770d-647">This overload interprets all digits in the `s` parameter as decimal digits.</span></span> <span data-ttu-id="6770d-648">若要剖析的十六進位數字的字串表示，呼叫<xref:System.UInt64.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt64%40%29>改為多載。</span><span class="sxs-lookup"><span data-stu-id="6770d-648">To parse the string representation of a hexadecimal number, call the <xref:System.UInt64.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt64%40%29> overload instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6770d-649">下列範例會呼叫<xref:System.UInt64.TryParse%28System.String%2CSystem.UInt64%40%29>針對字串陣列中每個項目執行一次的方法。</span><span class="sxs-lookup"><span data-stu-id="6770d-649">The following example calls the <xref:System.UInt64.TryParse%28System.String%2CSystem.UInt64%40%29> method once for each element in a string array.</span></span>  
  
 [!code-csharp[System.UInt64.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint64.tryparse/cs/tryparse1.cs#1)]
 [!code-vb[System.UInt64.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint64.tryparse/vb/tryparse1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Decimal.Parse(System.String)" />
        <altmember cref="Overload:System.UInt64.Parse" />
        <altmember cref="Overload:System.UInt64.ToString" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md">
          <span data-ttu-id="6770d-650">在 .NET 中剖析數值字串</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-650">Parsing Numeric Strings in .NET</span>
          </span>
        </related>
        <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/NET-Framework-4-Formatting-9c4dae8d">
          <span data-ttu-id="6770d-651">範例：.NET Framework 4 格式化公用程式</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-651">Sample: .NET Framework 4 Formatting Utility</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style, IFormatProvider provider, out ulong result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] unsigned int64&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.UInt64@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), style As NumberStyles, provider As IFormatProvider, ByRef result As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] System::UInt64 % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; * System.Globalization.NumberStyles * IFormatProvider *  -&gt; bool" Usage="System.uint64.TryParse (s, style, provider, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.1;netcore-2.0;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="result" Type="System.UInt64" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="style">To be added.</param>
        <param name="provider">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, System.Globalization.NumberStyles style, IFormatProvider provider, out ulong result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] unsigned int64&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt64@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, style As NumberStyles, provider As IFormatProvider, ByRef result As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] System::UInt64 % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string * System.Globalization.NumberStyles * IFormatProvider *  -&gt; bool" Usage="System.uint64.TryParse (s, style, provider, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="result" Type="System.UInt64" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="6770d-652">字串，表示要轉換的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-652">A string that represents the number to convert.</span>
          </span>
          <span data-ttu-id="6770d-653">這個字串使用 <paramref name="style" /> 參數指定的樣式來解譯。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-653">The string is interpreted by using the style specified by the <paramref name="style" /> parameter.</span>
          </span>
        </param>
        <param name="style">
          <span data-ttu-id="6770d-654">列舉值的位元組合，表示 <paramref name="s" /> 所允許的格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-654">A bitwise combination of enumeration values that indicates the permitted format of <paramref name="s" />.</span>
          </span>
          <span data-ttu-id="6770d-655">一般會指定的值是 <see cref="F:System.Globalization.NumberStyles.Integer" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-655">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="6770d-656">物件，提供關於 <paramref name="s" /> 的特定文化特性格式資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-656">An object that supplies culture-specific formatting information about <paramref name="s" />.</span>
          </span>
        </param>
        <param name="result">
          <span data-ttu-id="6770d-657">如果轉換成功，這個方法會傳回包含與 <paramref name="s" /> 中內含數字相等的 64 位元不帶正負號整數，如果轉換失敗則為零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-657">When this method returns, contains the 64-bit unsigned integer value equivalent to the number contained in <paramref name="s" />, if the conversion succeeded, or zero if the conversion failed.</span>
          </span>
          <span data-ttu-id="6770d-658">轉換失敗的狀況包括：如果 <paramref name="s" /> 參數為 <see langword="null" /> 或 <see cref="F:System.String.Empty" />、格式與 <paramref name="style" /> 不相容，或是表示小於 <see cref="F:System.UInt64.MinValue" /> 或大於 <see cref="F:System.UInt64.MaxValue" /> 的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-658">The conversion fails if the <paramref name="s" /> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, is not in a format compliant with <paramref name="style" />, or represents a number less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</span>
          </span>
          <span data-ttu-id="6770d-659">這個參數未初始化便傳遞，<paramref name="result" /> 中原始提供的任何值都將遭到覆寫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-659">This parameter is passed uninitialized; any value originally supplied in <paramref name="result" /> will be overwritten.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6770d-660">嘗試將指定之樣式及特定文化特性格式資訊數字的字串表示，轉換為它的 64 位元不帶正負號的整數對應項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-660">Tries to convert the string representation of a number in a specified style and culture-specific format to its 64-bit unsigned integer equivalent.</span>
          </span>
          <span data-ttu-id="6770d-661">傳回值會指出轉換成功或失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-661">A return value indicates whether the conversion succeeded or failed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6770d-662">如果 <see langword="true" /> 轉換成功，則為 <paramref name="s" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-662">
              <see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6770d-663"><xref:System.UInt64.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt64%40%29>方法就像<xref:System.UInt64.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29>方法，但是它不會擲回例外狀況如果轉換失敗。</span><span class="sxs-lookup"><span data-stu-id="6770d-663">The <xref:System.UInt64.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt64%40%29> method is like the <xref:System.UInt64.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> method, except that it does not throw an exception if the conversion fails.</span></span> <span data-ttu-id="6770d-664">這個方法就不需要使用例外狀況處理來測試<xref:System.FormatException>如果`s`無效，無法成功剖析。</span><span class="sxs-lookup"><span data-stu-id="6770d-664">This method eliminates the need to use exception handling to test for a <xref:System.FormatException> if `s` is invalid and cannot be parsed successfully.</span></span>  
  
 <span data-ttu-id="6770d-665">`style`參數定義中允許的樣式項目 （例如空格或正的或負號）`s`剖析作業成功的參數。</span><span class="sxs-lookup"><span data-stu-id="6770d-665">The `style` parameter defines the style elements (such as white space or a positive or negative sign) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="6770d-666">它必須是從位元旗標的組合<xref:System.Globalization.NumberStyles>列舉型別。</span><span class="sxs-lookup"><span data-stu-id="6770d-666">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="6770d-667">值而定`style`，則`s`參數可能包括下列項目：</span><span class="sxs-lookup"><span data-stu-id="6770d-667">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="6770d-668">[*ws*][*$*][*sign*][*digits*,]*digits*[.*fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span><span class="sxs-lookup"><span data-stu-id="6770d-668">[*ws*][*$*][*sign*][*digits*,]*digits*[.*fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span></span>  
  
 <span data-ttu-id="6770d-669">在方括號 （[和]） 是選用項目。</span><span class="sxs-lookup"><span data-stu-id="6770d-669">Items in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="6770d-670">或者，如果`style`參數包含<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>，則`s`參數可能包括下列項目：</span><span class="sxs-lookup"><span data-stu-id="6770d-670">Or, if the `style` parameter includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="6770d-671">[*ws*]*hexdigits*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="6770d-671">[*ws*]*hexdigits*[*ws*]</span></span>  
  
 <span data-ttu-id="6770d-672">下表說明每個元素。</span><span class="sxs-lookup"><span data-stu-id="6770d-672">The following table describes each element.</span></span>  
  
|<span data-ttu-id="6770d-673">元素</span><span class="sxs-lookup"><span data-stu-id="6770d-673">Element</span></span>|<span data-ttu-id="6770d-674">描述</span><span class="sxs-lookup"><span data-stu-id="6770d-674">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="6770d-675">*ws*</span><span class="sxs-lookup"><span data-stu-id="6770d-675">*ws*</span></span>|<span data-ttu-id="6770d-676">選擇性的泛空白字元。</span><span class="sxs-lookup"><span data-stu-id="6770d-676">Optional white space.</span></span> <span data-ttu-id="6770d-677">空白字元可以出現在開頭`s`如果`style`包含<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>旗標，或在結尾`s`如果`style`包含<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="6770d-677">White space can appear at the start of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, or at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="6770d-678">特定文化特性的貨幣符號。</span><span class="sxs-lookup"><span data-stu-id="6770d-678">A culture-specific currency symbol.</span></span> <span data-ttu-id="6770d-679">在字串中的位置由定義<xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A>的屬性<xref:System.Globalization.NumberFormatInfo>所傳回的物件<xref:System.IFormatProvider.GetFormat%2A>方法`provider`參數。</span><span class="sxs-lookup"><span data-stu-id="6770d-679">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> property of the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.IFormatProvider.GetFormat%2A> method of the `provider` parameter.</span></span> <span data-ttu-id="6770d-680">貨幣符號會出現在`s`如果`style`包含<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="6770d-680">The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="6770d-681">*簽署*</span><span class="sxs-lookup"><span data-stu-id="6770d-681">*sign*</span></span>|<span data-ttu-id="6770d-682">選擇性正負號。</span><span class="sxs-lookup"><span data-stu-id="6770d-682">An optional sign.</span></span> <span data-ttu-id="6770d-683">符號可以出現在開頭`s`如果`style`包含<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>旗標，也可以顯示在結尾`s`如果`style`包含<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="6770d-683">The sign can appear at the start of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="6770d-684">可用於括號`s`表示負值`style`包含<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="6770d-684">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="6770d-685">不過，如果負號存在，`s`只能表示值為零的剖析作業成功。</span><span class="sxs-lookup"><span data-stu-id="6770d-685">However, if the negative sign is present, `s` can only represent the value zero for the parse operation to succeed.</span></span>|  
|<span data-ttu-id="6770d-686">*digits*</span><span class="sxs-lookup"><span data-stu-id="6770d-686">*digits*</span></span>|<span data-ttu-id="6770d-687">從 0 到 9 的數字序列。</span><span class="sxs-lookup"><span data-stu-id="6770d-687">A sequence of digits from 0 through 9.</span></span>|  
|<span data-ttu-id="6770d-688">*、*</span><span class="sxs-lookup"><span data-stu-id="6770d-688">*,*</span></span>|<span data-ttu-id="6770d-689">特定文化特性的群組分隔符號。</span><span class="sxs-lookup"><span data-stu-id="6770d-689">A culture-specific group separator.</span></span> <span data-ttu-id="6770d-690">指定的文化特性的群組分隔符號`provider`可以出現在`s`如果`style`包含<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="6770d-690">The group separator of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="6770d-691">*.*</span><span class="sxs-lookup"><span data-stu-id="6770d-691">*.*</span></span>|<span data-ttu-id="6770d-692">特定文化特性的貨幣符號。</span><span class="sxs-lookup"><span data-stu-id="6770d-692">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="6770d-693">指定的文化特性的小數點符號`provider`可以出現在`s`如果`style`包含<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="6770d-693">The decimal point symbol of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="6770d-694">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="6770d-694">*fractional_digits*</span></span>|<span data-ttu-id="6770d-695">數字 0 的一或多個項目。</span><span class="sxs-lookup"><span data-stu-id="6770d-695">One or more occurrences of the digit 0.</span></span> <span data-ttu-id="6770d-696">小數點後數字可以出現在`s`只有當`style`包含<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="6770d-696">Fractional digits can appear in `s` only if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="6770d-697">E</span><span class="sxs-lookup"><span data-stu-id="6770d-697">E</span></span>|<span data-ttu-id="6770d-698">"E"或者"E"字元，表示代表的值時，會以指數 （科學記號） 標記法。</span><span class="sxs-lookup"><span data-stu-id="6770d-698">The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</span></span> <span data-ttu-id="6770d-699">`s`參數可代表指數標記法之數字，如果`style`包含<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="6770d-699">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="6770d-700">*exponential_digits*</span><span class="sxs-lookup"><span data-stu-id="6770d-700">*exponential_digits*</span></span>|<span data-ttu-id="6770d-701">從 0 到 9 的數字序列。</span><span class="sxs-lookup"><span data-stu-id="6770d-701">A sequence of digits from 0 through 9.</span></span> <span data-ttu-id="6770d-702">`s`參數可代表指數標記法之數字，如果`style`包含<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="6770d-702">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="6770d-703">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="6770d-703">*hexdigits*</span></span>|<span data-ttu-id="6770d-704">一連串的從 0 到 f 或 0 到 f 的十六進位數字</span><span class="sxs-lookup"><span data-stu-id="6770d-704">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
> [!NOTE]
> <span data-ttu-id="6770d-705">中的任何終止 NUL (u+0000) 字元`s`剖析作業中，不論值會忽略`style`引數。</span><span class="sxs-lookup"><span data-stu-id="6770d-705">Any terminating NUL (U+0000) characters in `s` are ignored by the parsing operation, regardless of the value of the `style` argument.</span></span>

 <span data-ttu-id="6770d-706">十進位數字的字串 (對應至<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>旗標) 一律會成功剖析。</span><span class="sxs-lookup"><span data-stu-id="6770d-706">A string with decimal digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> flag) always parses successfully.</span></span> <span data-ttu-id="6770d-707">大部分的其餘<xref:System.Globalization.NumberStyles>成員控制可能存在，但不是一定要存在，在此輸入字串中的項目。</span><span class="sxs-lookup"><span data-stu-id="6770d-707">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be present, but are not required to be present, in this input string.</span></span> <span data-ttu-id="6770d-708">下表指出如何個別<xref:System.Globalization.NumberStyles>成員會影響可能會出現在項目`s`。</span><span class="sxs-lookup"><span data-stu-id="6770d-708">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="6770d-709">非複合`NumberStyles`值</span><span class="sxs-lookup"><span data-stu-id="6770d-709">Non-composite `NumberStyles` values</span></span>|<span data-ttu-id="6770d-710">除了數字的值中允許的項目</span><span class="sxs-lookup"><span data-stu-id="6770d-710">Elements permitted in value in addition to digits</span></span>|  
|------------------------------------------|-------------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None>|<span data-ttu-id="6770d-711">只有小數位數。</span><span class="sxs-lookup"><span data-stu-id="6770d-711">Decimal digits only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|<span data-ttu-id="6770d-712">小數點 (*。*) 和*fractional_digits*項目。</span><span class="sxs-lookup"><span data-stu-id="6770d-712">The decimal point (*.*) and *fractional_digits* elements.</span></span> <span data-ttu-id="6770d-713">不過， *fractional_digits*必須包含一個或多個 0 數字，或是這個方法會傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="6770d-713">However, *fractional_digits* must consist of only one or more 0 digits, or the method returns `false`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent>|<span data-ttu-id="6770d-714">"E"或"E"字元，這表示指數標記法，連同*exponential_digits*。</span><span class="sxs-lookup"><span data-stu-id="6770d-714">The "e" or "E" character, which indicates exponential notation, along with *exponential_digits*.</span></span> <span data-ttu-id="6770d-715">如果`s`代表一個數字以指數標記法，它不能有非零的小數點後的元件。</span><span class="sxs-lookup"><span data-stu-id="6770d-715">If `s` represents a number in exponential notation, it cannot have a non-zero, fractional component.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|<span data-ttu-id="6770d-716">*Ws*開頭的項目`s`。</span><span class="sxs-lookup"><span data-stu-id="6770d-716">The *ws* element at the start of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|<span data-ttu-id="6770d-717">*Ws*結尾的項目`s`。</span><span class="sxs-lookup"><span data-stu-id="6770d-717">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|<span data-ttu-id="6770d-718">*號*項目之前*位數*。</span><span class="sxs-lookup"><span data-stu-id="6770d-718">The *sign* element before *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|<span data-ttu-id="6770d-719">*號*之後的項目*位數*。</span><span class="sxs-lookup"><span data-stu-id="6770d-719">The *sign* element after *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses>|<span data-ttu-id="6770d-720">*號*括號括住零數值的形式的項目。</span><span class="sxs-lookup"><span data-stu-id="6770d-720">The *sign* element in the form of parentheses enclosing a zero numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands>|<span data-ttu-id="6770d-721">群組分隔符號 (*，*) 項目。</span><span class="sxs-lookup"><span data-stu-id="6770d-721">The group separator (*,*) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|<span data-ttu-id="6770d-722">貨幣 (*$*) 項目。</span><span class="sxs-lookup"><span data-stu-id="6770d-722">The currency (*$*) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency>|<span data-ttu-id="6770d-723">所有項目。</span><span class="sxs-lookup"><span data-stu-id="6770d-723">All elements.</span></span> <span data-ttu-id="6770d-724">不過，`s`無法表示十六進位數字或指數標記法之數字。</span><span class="sxs-lookup"><span data-stu-id="6770d-724">However, `s` cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float>|<span data-ttu-id="6770d-725">*Ws*開頭或結尾的項目`s`，*登*開頭`s`，並在小數點 (*。*) 符號。</span><span class="sxs-lookup"><span data-stu-id="6770d-725">The *ws* element at the start or end of `s`, *sign* at the start of `s`, and the decimal point (*.*) symbol.</span></span> <span data-ttu-id="6770d-726">`s`參數也可以使用指數標記法。</span><span class="sxs-lookup"><span data-stu-id="6770d-726">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number>|<span data-ttu-id="6770d-727">*Ws*，*號*，群組分隔符號 (*，*)，和小數點 (*。*) 項目。</span><span class="sxs-lookup"><span data-stu-id="6770d-727">The *ws*, *sign*, group separator (*,*), and decimal point (*.*) elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any>|<span data-ttu-id="6770d-728">所有項目。</span><span class="sxs-lookup"><span data-stu-id="6770d-728">All elements.</span></span> <span data-ttu-id="6770d-729">不過，`s`無法代表十六進位數字。</span><span class="sxs-lookup"><span data-stu-id="6770d-729">However, `s` cannot represent a hexadecimal number.</span></span>|  
  
 <span data-ttu-id="6770d-730">如果<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>旗標用，`s`必須是十六進位的值。</span><span class="sxs-lookup"><span data-stu-id="6770d-730">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `s` must be a hexadecimal value.</span></span> <span data-ttu-id="6770d-731">有效的十六進位字元是 0-9、 A-F 和 a-f。</span><span class="sxs-lookup"><span data-stu-id="6770d-731">Valid hexadecimal characters are 0-9, A-F, and a-f.</span></span> <span data-ttu-id="6770d-732">前置詞，例如 「 0x 」 不支援，並造成失敗的剖析作業。</span><span class="sxs-lookup"><span data-stu-id="6770d-732">A prefix such as "0x" is not supported and causes the parse operation to fail.</span></span> <span data-ttu-id="6770d-733">只有其他旗標可存在於`style`都<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>和<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="6770d-733">The only other flags that can be present in `style` are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="6770d-734">(<xref:System.Globalization.NumberStyles>列舉型別有複合樣式， <xref:System.Globalization.NumberStyles.HexNumber>，其中包含這兩個空格旗標。)</span><span class="sxs-lookup"><span data-stu-id="6770d-734">(The <xref:System.Globalization.NumberStyles> enumeration has a composite style, <xref:System.Globalization.NumberStyles.HexNumber>, that includes both white-space flags.)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6770d-735">如果`s`的字串表示法的十六進位數字，它無法加上任何裝飾 (例如`0x`或`&h`)，區隔其為十六進位的數字。</span><span class="sxs-lookup"><span data-stu-id="6770d-735">If `s` is the string representation of a hexadecimal number, it cannot be preceded by any decoration (such as `0x` or `&h`) that differentiates it as a hexadecimal number.</span></span> <span data-ttu-id="6770d-736">這會導致轉換失敗。</span><span class="sxs-lookup"><span data-stu-id="6770d-736">This causes the conversion to fail.</span></span>  
  
 <span data-ttu-id="6770d-737">`provider`參數是<xref:System.IFormatProvider>實作。</span><span class="sxs-lookup"><span data-stu-id="6770d-737">The `provider` parameter is an <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="6770d-738">其<xref:System.IFormatProvider.GetFormat%2A>方法會傳回<xref:System.Globalization.NumberFormatInfo>物件，提供特定文化特性格式資訊`s`。</span><span class="sxs-lookup"><span data-stu-id="6770d-738">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of `s`.</span></span> <span data-ttu-id="6770d-739">`provider`參數可以是下列任一項：</span><span class="sxs-lookup"><span data-stu-id="6770d-739">The `provider` parameter can be any one of the following:</span></span>  
  
-   <span data-ttu-id="6770d-740">A<xref:System.Globalization.CultureInfo>物件，表示提供的格式資訊的文化特性。</span><span class="sxs-lookup"><span data-stu-id="6770d-740">A <xref:System.Globalization.CultureInfo> object that represents the culture that supplies formatting information.</span></span> <span data-ttu-id="6770d-741">其<xref:System.Globalization.CultureInfo.GetFormat%2A>方法會傳回<xref:System.Globalization.NumberFormatInfo>提供用於該文化特性的數值格式資訊的物件。</span><span class="sxs-lookup"><span data-stu-id="6770d-741">Its <xref:System.Globalization.CultureInfo.GetFormat%2A> method returns the <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information for that culture.</span></span>  
  
-   <span data-ttu-id="6770d-742">A<xref:System.Globalization.NumberFormatInfo>提供數值格式資訊的物件。</span><span class="sxs-lookup"><span data-stu-id="6770d-742">A <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information.</span></span> <span data-ttu-id="6770d-743">(其實作的<xref:System.Globalization.NumberFormatInfo.GetFormat%2A>只會傳回本身。)</span><span class="sxs-lookup"><span data-stu-id="6770d-743">(Its implementation of <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> just returns itself.)</span></span>  
  
-   <span data-ttu-id="6770d-744">自訂物件實作<xref:System.IFormatProvider>。</span><span class="sxs-lookup"><span data-stu-id="6770d-744">A custom object that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="6770d-745">其<xref:System.IFormatProvider.GetFormat%2A>方法具現化，並傳回<xref:System.Globalization.NumberFormatInfo>提供格式設定資訊的物件。</span><span class="sxs-lookup"><span data-stu-id="6770d-745">Its <xref:System.IFormatProvider.GetFormat%2A> method instantiates and returns the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="6770d-746">如果`provider`已`null`，則<xref:System.Globalization.NumberFormatInfo>物件會使用目前的文化特性。</span><span class="sxs-lookup"><span data-stu-id="6770d-746">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6770d-747">下列範例會呼叫<xref:System.UInt64.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt64%40%29>具有不同的字串數目的方法和<xref:System.Globalization.NumberStyles>值。</span><span class="sxs-lookup"><span data-stu-id="6770d-747">The following example calls the <xref:System.UInt64.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt64%40%29> method with a number of different strings and <xref:System.Globalization.NumberStyles> values.</span></span>  
  
 [!code-csharp[System.UInt64.TryParse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint64.tryparse/cs/tryparse2.cs#2)]
 [!code-vb[System.UInt64.TryParse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint64.tryparse/vb/tryparse2.vb#2)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Decimal.Parse(System.String)" />
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6770d-748">
            <paramref name="style" /> 不是 <see cref="T:System.Globalization.NumberStyles" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-748">
              <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span>
          </span>
          <span data-ttu-id="6770d-749">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-749">-or-</span>
          </span>
          <span data-ttu-id="6770d-750">
            <paramref name="style" /> 不是 <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 和 <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 值的組合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-750">
              <paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span>
          </span>
        </exception>
        <altmember cref="M:System.UInt64.Parse(System.String)" />
        <altmember cref="Overload:System.UInt64.Parse" />
        <altmember cref="Overload:System.UInt64.ToString" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md">
          <span data-ttu-id="6770d-751">在 .NET 中剖析數值字串</span>
          <span class="sxs-lookup">
            <span data-stu-id="6770d-751">Parsing Numeric Strings in .NET</span>
          </span>
        </related>
      </Docs>
    </Member>
  </Members>
</Type>