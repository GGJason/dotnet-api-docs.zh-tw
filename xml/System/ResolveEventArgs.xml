<Type Name="ResolveEventArgs" FullName="System.ResolveEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3cb36bd1dd61eda00843f278887046151ea3c44b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30728342" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ResolveEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ResolveEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.ResolveEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class ResolveEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ResolveEventArgs : EventArgs" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="a7d40-101">提供載入器解析事件 (例如，<see cref="E:System.AppDomain.TypeResolve" />、<see cref="E:System.AppDomain.ResourceResolve" />、<see cref="E:System.AppDomain.ReflectionOnlyAssemblyResolve" /> 和 <see cref="E:System.AppDomain.AssemblyResolve" /> 事件) 的資料。</span>
      <span class="sxs-lookup">
        <span data-stu-id="a7d40-101">Provides data for loader resolution events, such as the <see cref="E:System.AppDomain.TypeResolve" />, <see cref="E:System.AppDomain.ResourceResolve" />, <see cref="E:System.AppDomain.ReflectionOnlyAssemblyResolve" />, and <see cref="E:System.AppDomain.AssemblyResolve" /> events.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7d40-102">當載入器無法解析組件參考和處理常式已提供適當的載入器的解析度事件，就會引發事件和<xref:System.ResolveEventArgs>包含要解析之項目的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="a7d40-102">When the loader cannot resolve an assembly reference and a handler has been provided for the appropriate loader resolution event, the event is raised and the <xref:System.ResolveEventArgs> contains information about the item to be resolved.</span></span>  
  
-   <span data-ttu-id="a7d40-103"><xref:System.ResolveEventArgs.Name%2A>屬性包含要解析之項目的名稱。</span><span class="sxs-lookup"><span data-stu-id="a7d40-103">The <xref:System.ResolveEventArgs.Name%2A> property contains the name of the item to be resolved.</span></span>  
  
-   <span data-ttu-id="a7d40-104">開頭為[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]、<xref:System.ResolveEventArgs.RequestingAssembly%2A>屬性包含要求的組件，可以提供的具名項目之組件。</span><span class="sxs-lookup"><span data-stu-id="a7d40-104">Beginning with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the <xref:System.ResolveEventArgs.RequestingAssembly%2A> property contains the assembly that requested an assembly that can provide the named item.</span></span> <span data-ttu-id="a7d40-105">如需詳細資訊，請參閱 <xref:System.ResolveEventArgs.RequestingAssembly%2A> 屬性 (Property)。</span><span class="sxs-lookup"><span data-stu-id="a7d40-105">For more information, see the <xref:System.ResolveEventArgs.RequestingAssembly%2A> property.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="E:System.AppDomain.TypeResolve" />
    <altmember cref="E:System.AppDomain.ResourceResolve" />
    <altmember cref="E:System.AppDomain.ReflectionOnlyAssemblyResolve" />
    <altmember cref="E:System.AppDomain.AssemblyResolve" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a7d40-106">初始化 <see cref="T:System.ResolveEventArgs" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7d40-106">Initializes a new instance of the <see cref="T:System.ResolveEventArgs" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResolveEventArgs (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ResolveEventArgs.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResolveEventArgs(System::String ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="a7d40-107">要解析的項目名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7d40-107">The name of an item to resolve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a7d40-108">藉由指定要解析之項目的名稱，初始化 <see cref="T:System.ResolveEventArgs" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7d40-108">Initializes a new instance of the <see cref="T:System.ResolveEventArgs" /> class, specifying the name of the item to resolve.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7d40-109">只能由通用語言執行平台，通常會呼叫這個建構函式。</span><span class="sxs-lookup"><span data-stu-id="a7d40-109">This constructor is typically called only by the common language runtime.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResolveEventArgs (string name, System.Reflection.Assembly requestingAssembly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class System.Reflection.Assembly requestingAssembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ResolveEventArgs.#ctor(System.String,System.Reflection.Assembly)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, requestingAssembly As Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResolveEventArgs(System::String ^ name, System::Reflection::Assembly ^ requestingAssembly);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="requestingAssembly" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="a7d40-110">要解析的項目名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7d40-110">The name of an item to resolve.</span>
          </span>
        </param>
        <param name="requestingAssembly">
          <span data-ttu-id="a7d40-111">解析其相依性的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7d40-111">The assembly whose dependency is being resolved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a7d40-112">藉由指定要解析之項目的名稱以及解析其相依性的組件，初始化 <see cref="T:System.ResolveEventArgs" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7d40-112">Initializes a new instance of the <see cref="T:System.ResolveEventArgs" /> class, specifying the name of the item to resolve and the assembly whose dependency is being resolved.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.ResolveEventArgs.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a7d40-113">取得要解析的物件名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7d40-113">Gets the name of the item to resolve.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a7d40-114">要解析的物件名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7d40-114">The name of the item to resolve.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7d40-115">如<xref:System.AppDomain.AssemblyResolve>事件，<xref:System.ResolveEventArgs.Name%2A>是前套用原則的組件名稱。</span><span class="sxs-lookup"><span data-stu-id="a7d40-115">For the <xref:System.AppDomain.AssemblyResolve> event, <xref:System.ResolveEventArgs.Name%2A> is the assembly name before policy is applied.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestingAssembly">
      <MemberSignature Language="C#" Value="public System.Reflection.Assembly RequestingAssembly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Assembly RequestingAssembly" />
      <MemberSignature Language="DocId" Value="P:System.ResolveEventArgs.RequestingAssembly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RequestingAssembly As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::Assembly ^ RequestingAssembly { System::Reflection::Assembly ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a7d40-116">取得解析其相依性的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7d40-116">Gets the assembly whose dependency is being resolved.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a7d40-117">要求 <see cref="P:System.ResolveEventArgs.Name" /> 屬性所指定之項目的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7d40-117">The assembly that requested the item specified by the <see cref="P:System.ResolveEventArgs.Name" /> property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7d40-118">這個屬性所傳回的組件是無法解析指定的項目之組件<xref:System.ResolveEventArgs.Name%2A>屬性，因為項目不存在於這個組件，或任何相依項目中任何一個載入的相依性，載入器找透過探查找。</span><span class="sxs-lookup"><span data-stu-id="a7d40-118">The assembly that is returned by this property is an assembly that was unable to resolve the item specified by the <xref:System.ResolveEventArgs.Name%2A> property, because the item did not exist in that assembly, in any of its loaded dependencies, or in any dependencies the loader could find through probing.</span></span>  
  
 <span data-ttu-id="a7d40-119">例如，假設目前的組件使用<xref:System.Reflection.Assembly.LoadFile%2A?displayProperty=nameWithType>方法，從外部探查路徑中，目錄中載入組件 A，若要使用類別 CA。</span><span class="sxs-lookup"><span data-stu-id="a7d40-119">For example, suppose the current assembly uses the <xref:System.Reflection.Assembly.LoadFile%2A?displayProperty=nameWithType> method to load assembly A from a directory outside the probing path, in order to use class CA.</span></span> <span data-ttu-id="a7d40-120">假設進一步 CA 該類別會使用類別 CB，組件中 B 和組件 A 的組件 B 的編譯時期參考也位於探查路徑外。</span><span class="sxs-lookup"><span data-stu-id="a7d40-120">Suppose further that class CA uses class CB, in assembly B, and that assembly A has a compile-time reference to assembly B, also located outside the probing path.</span></span> <span data-ttu-id="a7d40-121">當具現化 CA 嘗試目前的組件時，載入器會嘗試解析組件 b 的參考不過，因為組件已載入使用<xref:System.Reflection.Assembly.LoadFile%2A?displayProperty=nameWithType>方法，載入器無法解析相依性。</span><span class="sxs-lookup"><span data-stu-id="a7d40-121">When the current assembly attempts to instantiate CA, the loader attempts to resolve the reference to assembly B. However, because assembly A was loaded by using the <xref:System.Reflection.Assembly.LoadFile%2A?displayProperty=nameWithType> method, the loader cannot resolve the dependency.</span></span> <span data-ttu-id="a7d40-122">如果沒有處理常式<xref:System.AppDomain.AssemblyResolve?displayProperty=nameWithType>引發事件，事件時，和<xref:System.ResolveEventArgs.RequestingAssembly%2A>屬性產生<xref:System.ResolveEventArgs>物件包含組件 A，因為組件的組件，缺少相依性。</span><span class="sxs-lookup"><span data-stu-id="a7d40-122">If there is a handler for the <xref:System.AppDomain.AssemblyResolve?displayProperty=nameWithType> event, the event is raised, and the <xref:System.ResolveEventArgs.RequestingAssembly%2A> property of the resulting <xref:System.ResolveEventArgs> object contains assembly A, because assembly A is the assembly that is missing a dependency.</span></span>  
  
 <span data-ttu-id="a7d40-123">語意<xref:System.ResolveEventArgs.RequestingAssembly%2A>屬性而異的載入要求的組件的方式：</span><span class="sxs-lookup"><span data-stu-id="a7d40-123">The semantics of the <xref:System.ResolveEventArgs.RequestingAssembly%2A> property vary, depending on how the requesting assembly was loaded:</span></span>  
  
-   <span data-ttu-id="a7d40-124">載入內容： 屬性的值可能是`null`。</span><span class="sxs-lookup"><span data-stu-id="a7d40-124">Load context: The value of the property might be `null`.</span></span> <span data-ttu-id="a7d40-125">載入內容，而且載入順序無關的要求識別組件不一定有意義。</span><span class="sxs-lookup"><span data-stu-id="a7d40-125">The load context is load-order independent, and the identity of the requesting assembly is not necessarily meaningful.</span></span> <span data-ttu-id="a7d40-126">非 null 範例，就會發生時<xref:System.Type.GetType%2A?displayProperty=nameWithType>方法呼叫，而且指定的型別並不知道提出要求的組件或任何其相依性。</span><span class="sxs-lookup"><span data-stu-id="a7d40-126">A non-null example occurs when the <xref:System.Type.GetType%2A?displayProperty=nameWithType> method is called and the specified type is not known to the requesting assembly or any of its dependencies.</span></span>  
  
-   <span data-ttu-id="a7d40-127">載入內容中： 屬性可用來當做探查的提示，但事件處理常式應該不會取得指定的組件名稱的多個要求。</span><span class="sxs-lookup"><span data-stu-id="a7d40-127">Load-from context: The property can be used as a probing hint, but the event handler should not get more than one request for a given assembly name.</span></span>  
  
-   <span data-ttu-id="a7d40-128">沒有內容 (也就是提出要求的組件已載入使用<xref:System.Reflection.Assembly.LoadFile%2A?displayProperty=nameWithType>方法，以位元組資料流，或在混合模式中): 處理常式可以使用<xref:System.ResolveEventArgs.RequestingAssembly%2A>載入相同組件的不同實作的屬性會根據身分識別要求的組件。</span><span class="sxs-lookup"><span data-stu-id="a7d40-128">No context (that is, the requesting assembly was loaded by using the <xref:System.Reflection.Assembly.LoadFile%2A?displayProperty=nameWithType> method, or as a byte stream, or in mixed mode): The handler can use the <xref:System.ResolveEventArgs.RequestingAssembly%2A> property to load different implementations of the same assembly based on the identity of the requesting assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.AppDomain.TypeResolve" />
        <altmember cref="E:System.AppDomain.ResourceResolve" />
        <altmember cref="E:System.AppDomain.ReflectionOnlyAssemblyResolve" />
        <altmember cref="E:System.AppDomain.AssemblyResolve" />
      </Docs>
    </Member>
  </Members>
</Type>