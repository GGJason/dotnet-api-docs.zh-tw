<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IFormatProvider.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac59c52ac56e9742cc73f06b705bf076675bb074c7a.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9c52ac56e9742cc73f06b705bf076675bb074c7a</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IFormatProvider">
          <source>Provides a mechanism for retrieving an object to control formatting.</source>
          <target state="translated">提供機制來擷取要控制格式的物件。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormatProvider">
          <source>The <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> interface supplies an object that provides formatting information for formatting and parsing operations.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph>介面會提供物件，提供格式設定資訊的格式和剖析作業。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormatProvider">
          <source>Formatting operations convert the value of a type to the string representation of that value.</source>
          <target state="translated">格式設定作業會將型別的值轉換成該值的字串表示。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormatProvider">
          <source>Typical formatting methods are the <ph id="ph1">`ToString`</ph> methods of a type, as well as <ph id="ph2">&lt;xref:System.String.Format%2A&gt;</ph>.</source>
          <target state="translated">典型的格式化方法會<ph id="ph1">`ToString`</ph>方法的型別，以及<ph id="ph2">&lt;xref:System.String.Format%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormatProvider">
          <source>Parsing operations convert the string representation of a value to a type with that value.</source>
          <target state="translated">剖析作業會將值的字串表示轉換成具有該值的型別。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormatProvider">
          <source>Typical parsing methods are <ph id="ph1">`Parse`</ph> and <ph id="ph2">`TryParse`</ph>.</source>
          <target state="translated">典型的剖析方法都是<ph id="ph1">`Parse`</ph>和<ph id="ph2">`TryParse`</ph>。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormatProvider">
          <source>The <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> interface consists of a single method, <ph id="ph2">&lt;xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph>介面組成的單一方法， <ph id="ph2">&lt;xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormatProvider">
          <source><ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> is a callback method: The parsing or formatting method calls it and passes it a <ph id="ph2">&lt;xref:System.Type&gt;</ph> object that represents the type of object that the formatting or parsing method expects will provide formatting information.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> 是一種回呼方法： 剖析或格式化方法會呼叫它，並將其傳遞<ph id="ph2">&lt;xref:System.Type&gt;</ph>表示的格式或剖析方法必須要有的物件類型的物件會提供格式設定資訊。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormatProvider">
          <source>The <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method is responsible for returning an object of that type.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph>方法負責傳回該類型的物件。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormatProvider">
          <source><ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> implementations are often used implicitly by formatting and parsing methods.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> 實作會使用隱含格式化和剖析方法。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormatProvider">
          <source>For example, the <ph id="ph1">&lt;xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType&gt;</ph> method implicitly uses an <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> implementation that represents the system's current culture.</source>
          <target state="translated">例如，<ph id="ph1">&lt;xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType&gt;</ph>方法隱含使用<ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph>代表系統的目前文化特性的實作。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormatProvider">
          <source><ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> implementations can also be specified explicitly by methods that have a parameter of type <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph>, such as <ph id="ph3">&lt;xref:System.Int32.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> and <ph id="ph4">&lt;xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> 實作也可以指定明確的方法有類型參數， <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph>，例如<ph id="ph3">&lt;xref:System.Int32.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph>和<ph id="ph4">&lt;xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormatProvider">
          <source>The .NET Framework includes the following three predefined <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> implementations to provide culture-specific information that is used in formatting or parsing numeric and date and time values:</source>
          <target state="translated">.NET Framework 包含下列三個預先定義的<ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph>實作提供用於格式化或剖析數值及日期和時間值的特定文化特性資訊：</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormatProvider">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> class, which provides information that is used to format numbers, such as the currency, thousands separator, and decimal separator symbols for a particular culture.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>類別，可提供資訊，用來格式化數字，例如貨幣、 千分位分隔符號和特定文化特性的小數點符號。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormatProvider">
          <source>For information about the predefined format strings recognized by a <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object and used in numeric formatting operations, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">如需所辨識的預先定義的格式字串<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>物件，並在數字格式化作業中使用，請參閱<bpt id="p1">[</bpt>標準數值格式字串<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>和<bpt id="p2">[</bpt>自訂數值格式字串<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormatProvider">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> class, which provides information that is used to format dates and times, such as the date and time separator symbols for a particular culture or the order and format of a date's year, month, and day components.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph>類別，可提供用來格式化日期和時間，例如特定文化特性或順序和日期的年、 月和日元件的格式的日期和時間分隔符號符號的資訊。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormatProvider">
          <source>For information about the predefined format strings recognized by a <ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object and used in numeric formatting operations, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</source>
          <target state="translated">如需所辨識的預先定義的格式字串<ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph>物件，並在數字格式化作業中使用，請參閱<bpt id="p1">[</bpt>標準日期和時間格式字串<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept>和<bpt id="p2">[</bpt>自訂日期和時間格式字串<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormatProvider">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> class, which represents a particular culture.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph>類別，代表特定文化特性。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormatProvider">
          <source>Its <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method returns a culture-specific <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> or <ph id="ph3">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object, depending on whether the <ph id="ph4">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object is used in a formatting or parsing operation that involves numbers or dates and times.</source>
          <target state="translated">其<ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph>方法會傳回特定文化特性<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>或<ph id="ph3">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph>物件，取決於是否<ph id="ph4">&lt;xref:System.Globalization.CultureInfo&gt;</ph>物件是否會在格式化或剖析作業，包括數字或日期和時間。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormatProvider">
          <source>The .NET Framework also supports custom formatting.</source>
          <target state="translated">.NET Framework 也支援自訂格式。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormatProvider">
          <source>This typically involves the creation of a formatting class that implements both <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> and <ph id="ph2">&lt;xref:System.ICustomFormatter&gt;</ph>.</source>
          <target state="translated">這通常牽涉到的格式實作的類別，同時建立<ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph>和<ph id="ph2">&lt;xref:System.ICustomFormatter&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormatProvider">
          <source>An instance of this class is then passed as a parameter to a method that performs a custom formatting operation, such as <ph id="ph1">&lt;xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph> The example provides an illustration of such a custom implementation that formats a number as a 12-digit account number.</source>
          <target state="translated">這個類別的執行個體然後做為參數傳遞至方法，例如執行自訂格式化作業中，<ph id="ph1">&lt;xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph>範例說明這類自訂實作，可以格式化數字做為 12 位數帳戶號碼。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormatProvider">
          <source>The following example illustrates how an <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> implementation can change the representation of a date and time value.</source>
          <target state="translated">下列範例說明如何<ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph>實作可以變更日期和時間值的表示法。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormatProvider">
          <source>In this case, a single date is displayed by using <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> objects that represent four different cultures.</source>
          <target state="translated">在此情況下，會透過顯示單一日期<ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph>代表四個不同的文化特性的物件。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormatProvider">
          <source>The following example illustrates the use of a class that implements the <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> interface and the <ph id="ph2">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method.</source>
          <target state="translated">下列範例說明實作的類別使用<ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph>介面和<ph id="ph2">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormatProvider">
          <source>The <ph id="ph1">`AcctNumberFormat`</ph> class converts an <ph id="ph2">&lt;xref:System.Int64&gt;</ph> value that represents an account number to a formatted 12-digit account number.</source>
          <target state="translated"><ph id="ph1">`AcctNumberFormat`</ph>類別轉換<ph id="ph2">&lt;xref:System.Int64&gt;</ph>值，表示格式化的 12 位數帳號帳戶號碼。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormatProvider">
          <source>Its <ph id="ph1">`GetFormat`</ph> method returns a reference to the current <ph id="ph2">`AcctNumberFormat`</ph> instance if the <ph id="ph3">`formatType`</ph> parameter refers to a class that implements <ph id="ph4">&lt;xref:System.ICustomFormatter&gt;</ph>; otherwise, <ph id="ph5">`GetFormat`</ph> returns <ph id="ph6">`null`</ph>.</source>
          <target state="translated">其<ph id="ph1">`GetFormat`</ph>方法會傳回參考目前<ph id="ph2">`AcctNumberFormat`</ph>執行個體如果<ph id="ph3">`formatType`</ph>參數是指實作的類別<ph id="ph4">&lt;xref:System.ICustomFormatter&gt;</ph>，否則<ph id="ph5">`GetFormat`</ph>傳回<ph id="ph6">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormatProvider">
          <source>The class that implements <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> can then be used in a call to a formatting and parsing operation.</source>
          <target state="translated">實作的類別<ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph>然後可以呼叫格式化和剖析作業中使用。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormatProvider">
          <source>For example, the following code calls the <ph id="ph1">&lt;xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph> method to generate a string that contains a formatted 12-digit account number.</source>
          <target state="translated">例如，下列程式碼呼叫<ph id="ph1">&lt;xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph>方法來產生包含已格式化的 12 位數帳戶號碼的字串。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.IFormatProvider.GetFormat(System.Type)">
          <source>An object that specifies the type of format object to return.</source>
          <target state="translated">物件，指定要傳回的格式化物件的型別。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.IFormatProvider.GetFormat(System.Type)">
          <source>Returns an object that provides formatting services for the specified type.</source>
          <target state="translated">傳回物件，這個物件為所指定型別提供格式化服務。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.IFormatProvider.GetFormat(System.Type)">
          <source>An instance of the object specified by <ph id="ph1">&lt;paramref name="formatType" /&gt;</ph>, if the <ph id="ph2">&lt;see cref="T:System.IFormatProvider" /&gt;</ph> implementation can supply that type of object; otherwise, <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;see cref="T:System.IFormatProvider" /&gt;</ph> 實作可以提供該型別的物件則為 <ph id="ph1">&lt;paramref name="formatType" /&gt;</ph> 所指定的物件執行個體，否則為 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IFormatProvider.GetFormat(System.Type)">
          <source><ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> is a callback method that formatting and parsing methods invoke to retrieve information about the format of the input string in parsing operations or the format of the output string in formatting operations.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> 是回呼方法，可以格式化和剖析方法叫用來擷取在剖析作業或在格式化作業中的輸出字串的格式輸入字串的格式的相關資訊。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IFormatProvider.GetFormat(System.Type)">
          <source>In the <ph id="ph1">`formatType`</ph> parameter, the formatting or parsing method passes the type of object it requires to perform its operation.</source>
          <target state="translated">在<ph id="ph1">`formatType`</ph>參數、 格式化或剖析方法會傳遞的物件執行其作業所需的型別。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IFormatProvider.GetFormat(System.Type)">
          <source>If the <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> implementation can supply this formatting or parsing object, it returns that object.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph>實作可以提供這格式化或剖析物件時，傳回該物件。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IFormatProvider.GetFormat(System.Type)">
          <source>If not, it returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">如果沒有，它會傳回<ph id="ph1">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IFormatProvider.GetFormat(System.Type)">
          <source>For example, in the call to the <ph id="ph1">&lt;xref:System.Int32.ToString%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> method, the method argument is an <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> object that provides information about how the string representation of the current integer instance might be formatted.</source>
          <target state="translated">例如，在呼叫<ph id="ph1">&lt;xref:System.Int32.ToString%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph>方法，方法引數是<ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph>提供的資訊可能會如何格式化目前整數執行個體的字串表示的物件。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IFormatProvider.GetFormat(System.Type)">
          <source>When the runtime executes the method, it calls the <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> object's <ph id="ph2">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method and passes it a <ph id="ph3">&lt;xref:System.Type&gt;</ph> object that represents the <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> type.</source>
          <target state="translated">當執行階段執行方法時，它會呼叫<ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph>物件的<ph id="ph2">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph>方法並將其傳遞<ph id="ph3">&lt;xref:System.Type&gt;</ph>物件，代表<ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>型別。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IFormatProvider.GetFormat(System.Type)">
          <source>If the <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> object can supply a <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object, it returns that object.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph>物件可以提供<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>物件，它會傳回該物件。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IFormatProvider.GetFormat(System.Type)">
          <source>If it cannot supply an object of that type, it returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">如果它無法提供該類型的物件，它會傳回<ph id="ph1">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IFormatProvider.GetFormat(System.Type)">
          <source>You can implement the <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> interface and the <ph id="ph2">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method in classes that provide custom formatting or parsing services.</source>
          <target state="translated">您可以實作<ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph>介面和<ph id="ph2">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph>提供自訂的格式或剖析服務的類別中的方法。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IFormatProvider.GetFormat(System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> implementation is then passed as an argument to any overload of a parsing or formatting method that has a parameter of type <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph>, such as <ph id="ph3">&lt;xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph>, <ph id="ph4">&lt;xref:System.Int32.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph>, or <ph id="ph5">&lt;xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph>實作然後傳遞做為引數的剖析或格式化類型之參數的方法多載<ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph>，例如<ph id="ph3">&lt;xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph>， <ph id="ph4">&lt;xref:System.Int32.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph>，或<ph id="ph5">&lt;xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IFormatProvider.GetFormat(System.Type)">
          <source>The following example illustrates the use of a class that implements the <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> interface and the <ph id="ph2">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method.</source>
          <target state="translated">下列範例說明實作的類別使用<ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph>介面和<ph id="ph2">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IFormatProvider.GetFormat(System.Type)">
          <source>The <ph id="ph1">`AcctNumberFormat`</ph> class converts an <ph id="ph2">&lt;xref:System.Int64&gt;</ph> value that represents an account number to a formatted 12-digit account number.</source>
          <target state="translated"><ph id="ph1">`AcctNumberFormat`</ph>類別轉換<ph id="ph2">&lt;xref:System.Int64&gt;</ph>值，表示格式化的 12 位數帳號帳戶號碼。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IFormatProvider.GetFormat(System.Type)">
          <source>Its <ph id="ph1">`GetFormat`</ph> method returns a reference to itself if the <ph id="ph2">`formatType`</ph> parameter refers to a class that implements <ph id="ph3">&lt;xref:System.ICustomFormatter&gt;</ph>; otherwise, <ph id="ph4">`GetFormat`</ph> returns <ph id="ph5">`null`</ph>.</source>
          <target state="translated">其<ph id="ph1">`GetFormat`</ph>方法會傳回本身的參考，如果<ph id="ph2">`formatType`</ph>參數是指實作的類別<ph id="ph3">&lt;xref:System.ICustomFormatter&gt;</ph>，否則<ph id="ph4">`GetFormat`</ph>傳回<ph id="ph5">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IFormatProvider.GetFormat(System.Type)">
          <source>An instance of the <ph id="ph1">`AcctNumberFormat`</ph> class can then be passed as an argument to a method that provides formatting or parsing services.</source>
          <target state="translated">執行個體<ph id="ph1">`AcctNumberFormat`</ph>類別接著會做為引數傳遞至格式或剖析服務所提供的方法。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IFormatProvider.GetFormat(System.Type)">
          <source>For example, the following code passes an <ph id="ph1">`AcctNumberFormat`</ph> class to the <ph id="ph2">&lt;xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph> method to generate a formatted 12-digit account number.</source>
          <target state="translated">例如，下列程式碼傳遞<ph id="ph1">`AcctNumberFormat`</ph>類別<ph id="ph2">&lt;xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph>方法來產生格式化的 12 位數帳戶數目。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>