<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="BadImageFormatException.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac52ca5f210569c15f5b1f4e31ecfad866266aefb1a.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2ca5f210569c15f5b1f4e31ecfad866266aefb1a</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.BadImageFormatException">
          <source>The exception that is thrown when the file image of a dynamic link library (DLL) or an executable program is invalid.</source>
          <target state="translated">當動態連結程式庫 (DLL) 或可執行程式的檔案映像無效時擲回的例外狀況。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.BadImageFormatException">
          <source>This exception is thrown when the file format of a dynamic link library (.dll file) or an executable (.exe file) doesn’t conform to the format that the common language runtime expects.</source>
          <target state="translated">當動態連結程式庫 （.dll 檔案） 或可執行檔 （.exe 檔） 的檔案格式不符合 common language runtime 所預期的格式，則會擲回這個例外狀況。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.BadImageFormatException">
          <source>In particular, the exception is thrown under the following conditions:</source>
          <target state="translated">特別是，在下列情況下會擲回例外狀況：</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.BadImageFormatException">
          <source>An earlier version of a .NET Framework utility, such as ILDasm.exe or installutil.exe, is used with an assembly that was developed with a later version of the .NET Framework.</source>
          <target state="translated">較早版本的.NET Framework 公用程式，例如 ILDasm.exe 或 installutil.exe，用於以.NET Framework 的較新版本所開發的組件。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.BadImageFormatException">
          <source>To address this exception, use the version of the tool that corresponds to the version of the .NET Framework that was used to develop the assembly.</source>
          <target state="translated">若要解決這個例外狀況，使用對應於用來開發組件的.NET framework 版本的工具版本。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.BadImageFormatException">
          <source>This may require modifying the <ph id="ph1">`Path`</ph> environment variable or providing a fully qualified path to the correct executable.</source>
          <target state="translated">這可能需要修改<ph id="ph1">`Path`</ph>環境變數，或提供正確的可執行檔的完整的路徑。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.BadImageFormatException">
          <source>You are trying to load an unmanaged dynamic link library or executable (such as a Windows system DLL) as if it were a .NET Framework assembly.</source>
          <target state="translated">您嘗試載入 unmanaged 動態連結程式庫或可執行檔 （例如 Windows 系統 DLL），就好像是.NET Framework 組件。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.BadImageFormatException">
          <source>The following example illustrates this by using the <ph id="ph1">&lt;xref:System.Reflection.Assembly.LoadFile%2A?displayProperty=nameWithType&gt;</ph> method to load Kernel32.dll.</source>
          <target state="translated">下列範例將說明這點使用<ph id="ph1">&lt;xref:System.Reflection.Assembly.LoadFile%2A?displayProperty=nameWithType&gt;</ph>方法以載入 Kernel32.dll。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.BadImageFormatException">
          <source>To address this exception, access the methods defined in the DLL by using the features provided by your development language, such as the <ph id="ph1">`Declare`</ph> statement in Visual Basic or the <ph id="ph2">&lt;xref:System.Runtime.InteropServices.DllImportAttribute&gt;</ph> attribute with the <ph id="ph3">`extern`</ph> keyword in C#.</source>
          <target state="translated">若要解決這個例外狀況，存取使用的功能，例如提供您的開發語言，在 DLL 中定義的方法<ph id="ph1">`Declare`</ph>在 Visual Basic 中的陳述式或<ph id="ph2">&lt;xref:System.Runtime.InteropServices.DllImportAttribute&gt;</ph>屬性附帶<ph id="ph3">`extern`</ph>關鍵字在 C#。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.BadImageFormatException">
          <source>You are trying to load a reference assembly in a context other than the reflection-only context.</source>
          <target state="translated">您嘗試載入在僅限反映的內容以外的內容中的參考組件。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.BadImageFormatException">
          <source>You can address this issue in either of two ways:</source>
          <target state="translated">您可以解決此問題，在兩種方法之一：</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.BadImageFormatException">
          <source>You can load the implementation assembly rather than the reference assembly.</source>
          <target state="translated">您可以載入實作組件，而不是參考組件。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.BadImageFormatException">
          <source>You can load the reference assembly in the reflection-only context by calling the <ph id="ph1">&lt;xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">您可以藉由呼叫載入僅限反映的內容中的參考組件<ph id="ph1">&lt;xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.BadImageFormatException">
          <source>A DLL or executable is loaded as a 64-bit assembly, but it contains 32-bit features or resources.</source>
          <target state="translated">載入 DLL 或可執行檔做為 64 位元組件，但它包含 32 位元的功能或資源。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.BadImageFormatException">
          <source>For example, it relies on COM interop or calls methods in a 32-bit dynamic link library.</source>
          <target state="translated">例如，它依賴 32 位元的動態連結程式庫中的 COM interop 或呼叫方法。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.BadImageFormatException">
          <source>To address this exception, set the project's <bpt id="p1">**</bpt>Platform target<ept id="p1">**</ept> property to x86 (instead of x64 or AnyCPU) and recompile.</source>
          <target state="translated">若要解決這個例外狀況，將此專案的<bpt id="p1">**</bpt>平台目標<ept id="p1">**</ept>x86 的屬性 （而不是 x64 或 AnyCPU） 並重新編譯。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.BadImageFormatException">
          <source>Your application’s components were created using different versions of the .NET Framework.</source>
          <target state="translated">使用不同版本的.NET Framework 建立您的應用程式元件。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.BadImageFormatException">
          <source>Typically, this exception occurs when an application or component that was developed using the <ph id="ph1">[!INCLUDE[net_v10_short](~/includes/net-v10-short-md.md)]</ph> or the <ph id="ph2">[!INCLUDE[net_v11_short](~/includes/net-v11-short-md.md)]</ph> tries to load an assembly that was developed using the <ph id="ph3">[!INCLUDE[net_v20SP1_short](~/includes/net-v20sp1-short-md.md)]</ph> or later, or when an application that was developed using the <ph id="ph4">[!INCLUDE[net_v20SP1_short](~/includes/net-v20sp1-short-md.md)]</ph> or <ph id="ph5">[!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)]</ph> tries to load an assembly that was developed using the <ph id="ph6">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> or later.</source>
          <target state="translated">通常，此例外狀況就會發生時應用程式或元件利用開發<ph id="ph1">[!INCLUDE[net_v10_short](~/includes/net-v10-short-md.md)]</ph>或<ph id="ph2">[!INCLUDE[net_v11_short](~/includes/net-v11-short-md.md)]</ph>嘗試利用所開發的組件載入<ph id="ph3">[!INCLUDE[net_v20SP1_short](~/includes/net-v20sp1-short-md.md)]</ph>或更新版本中，或當使用開發的應用程式<ph id="ph4">[!INCLUDE[net_v20SP1_short](~/includes/net-v20sp1-short-md.md)]</ph>或<ph id="ph5">[!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)]</ph>嘗試利用所開發的組件載入<ph id="ph6">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>或更新版本。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.BadImageFormatException">
          <source>The <ph id="ph1">&lt;xref:System.BadImageFormatException&gt;</ph> may be reported as a compile-time error, or the exception may be thrown at run time.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.BadImageFormatException&gt;</ph>可能會報告為編譯時間錯誤，或可能在執行階段擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.BadImageFormatException">
          <source>The following example defines a <ph id="ph1">`StringLib`</ph> class that has a single member, <ph id="ph2">`ToProperCase`</ph>, and that resides in an assembly named StringLib.dll.</source>
          <target state="translated">下列範例會定義<ph id="ph1">`StringLib`</ph>具有單一成員的類別<ph id="ph2">`ToProperCase`</ph>，和位於名為 StringLib.dll 組件中。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.BadImageFormatException">
          <source>The following example uses reflection to load an assembly named StringLib.dll.</source>
          <target state="translated">下列範例會使用反映來載入組件名為 StringLib.dll。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.BadImageFormatException">
          <source>If the source code is compiled with a <ph id="ph1">[!INCLUDE[net_v11_short](~/includes/net-v11-short-md.md)]</ph> compiler, a <ph id="ph2">&lt;xref:System.BadImageFormatException&gt;</ph> is thrown by the <ph id="ph3">&lt;xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">如果以編譯原始碼<ph id="ph1">[!INCLUDE[net_v11_short](~/includes/net-v11-short-md.md)]</ph>編譯器， <ph id="ph2">&lt;xref:System.BadImageFormatException&gt;</ph> ，所擲回<ph id="ph3">&lt;xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.BadImageFormatException">
          <source>To address this exception, make sure that the assembly whose code is executing and that throws the exception, and the assembly to be loaded both target compatible versions of the .NET Framework.</source>
          <target state="translated">若要解決這個例外狀況，請確定執行其程式碼，並擲回例外狀況，並將組件載入的組件目標.NET Framework 相容的版本。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.BadImageFormatException">
          <source>The components of your application target different platforms.</source>
          <target state="translated">應用程式的元件不同的平台為目標。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.BadImageFormatException">
          <source>For example, you are trying to load ARM assemblies in an x86 application.</source>
          <target state="translated">例如，您嘗試在 x86 ARM 組件載入應用程式。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.BadImageFormatException">
          <source>You can use the following command-line utility to determine the target platforms of individual .NET Framework assemblies.</source>
          <target state="translated">若要判斷個別的.NET Framework 組件的目標平台，您可以使用下列命令列公用程式。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.BadImageFormatException">
          <source>The list of files should be provided as a space-delimited list at the command line.</source>
          <target state="translated">應為以空格分隔的清單，在命令列提供的檔案清單。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.BadImageFormatException">
          <source>Reflecting on C++ executable files may throw this exception.</source>
          <target state="translated">反映 C++ 可執行檔時可能會擲回這個例外狀況。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.BadImageFormatException">
          <source>This is most likely caused by the C++ compiler stripping the relocation addresses or the .Reloc section from the executable file.</source>
          <target state="translated">這個情況最可能的原因，是因為 C++ 編譯器移除執行檔中的重新定位位置或 .Reloc 區段。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.BadImageFormatException">
          <source>To preserve the .relocation address in a C++ executable file, specify /fixed:no when linking.</source>
          <target state="translated">保留重新配置位址中的 c + + 可執行檔，以指定 /fixed: no 連結時。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.BadImageFormatException">
          <source><ph id="ph1">&lt;xref:System.BadImageFormatException&gt;</ph> uses the HRESULT COR_E_BADIMAGEFORMAT, which has the value 0x8007000B.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.BadImageFormatException&gt;</ph> 會使用 HRESULT COR_E_BADIMAGEFORMAT，0x8007000B 的值。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.BadImageFormatException">
          <source>For a list of initial property values for an instance of <ph id="ph1">&lt;xref:System.BadImageFormatException&gt;</ph>, see the <ph id="ph2">&lt;xref:System.BadImageFormatException&gt;</ph> constructors.</source>
          <target state="translated">如需執行個體的初始屬性值的清單<ph id="ph1">&lt;xref:System.BadImageFormatException&gt;</ph>，請參閱<ph id="ph2">&lt;xref:System.BadImageFormatException&gt;</ph>建構函式。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="T:System.BadImageFormatException">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.BadImageFormatException" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.BadImageFormatException" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.BadImageFormatException.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.BadImageFormatException" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.BadImageFormatException" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BadImageFormatException.#ctor">
          <source>This constructor initializes the <ph id="ph1">&lt;xref:System.Exception.Message%2A&gt;</ph> property of the new instance to a system-supplied message that describes the error, such as "Format of the executable or library is invalid."</source>
          <target state="translated">這個建構函式初始化<ph id="ph1">&lt;xref:System.Exception.Message%2A&gt;</ph>屬性的新執行個體的系統提供的訊息描述錯誤，例如 「 可執行檔或程式庫的格式無效。 」</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BadImageFormatException.#ctor">
          <source>This message takes into account the current system culture.</source>
          <target state="translated">此訊息會考量目前的系統文化特性。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BadImageFormatException.#ctor">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.BadImageFormatException&gt;</ph>.</source>
          <target state="translated">下表顯示 <ph id="ph1">&lt;xref:System.BadImageFormatException&gt;</ph> 執行個體的初始屬性值。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BadImageFormatException.#ctor">
          <source>Property</source>
          <target state="translated">屬性</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BadImageFormatException.#ctor">
          <source>Value</source>
          <target state="translated">值</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BadImageFormatException.#ctor">
          <source>A null reference (<ph id="ph1">`Nothing`</ph> in Visual Basic).</source>
          <target state="translated">null 參考 (在 Visual Basic 中為 <ph id="ph1">`Nothing`</ph>)。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BadImageFormatException.#ctor">
          <source>The localized error message string.</source>
          <target state="translated">當地語系化的錯誤訊息字串。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.BadImageFormatException.#ctor(System.String)">
          <source>The message that describes the error.</source>
          <target state="translated">描述錯誤的訊息。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.BadImageFormatException.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.BadImageFormatException" /&gt;</ph> class with a specified error message.</source>
          <target state="translated">使用指定的錯誤訊息，初始化 <ph id="ph1">&lt;see cref="T:System.BadImageFormatException" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BadImageFormatException.#ctor(System.String)">
          <source>The content of the <ph id="ph1">`message`</ph> parameter is intended to be understood by humans.</source>
          <target state="translated"><ph id="ph1">`message`</ph> 參數的內容必須能讓人了解。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BadImageFormatException.#ctor(System.String)">
          <source>The caller of this constructor is required to ensure that this string has been localized for the current system culture.</source>
          <target state="translated">這個建構函式的呼叫端必須確保這個字串已經被當地語系化 (為了目前系統的文化特性)。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BadImageFormatException.#ctor(System.String)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.BadImageFormatException&gt;</ph>.</source>
          <target state="translated">下表顯示 <ph id="ph1">&lt;xref:System.BadImageFormatException&gt;</ph> 執行個體的初始屬性值。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BadImageFormatException.#ctor(System.String)">
          <source>Property</source>
          <target state="translated">屬性</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BadImageFormatException.#ctor(System.String)">
          <source>Value</source>
          <target state="translated">值</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BadImageFormatException.#ctor(System.String)">
          <source>A null reference (<ph id="ph1">`Nothing`</ph> in Visual Basic).</source>
          <target state="translated">null 參考 (在 Visual Basic 中為 <ph id="ph1">`Nothing`</ph>)。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BadImageFormatException.#ctor(System.String)">
          <source>The error message string.</source>
          <target state="translated">錯誤訊息字串。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.BadImageFormatException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> that holds the serialized object data about the exception being thrown.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph>，包含所擲回之例外狀況的相關序列化物件資料。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.BadImageFormatException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> that contains contextual information about the source or destination.</source>
          <target state="translated">包含有關來源或目的端內容資訊的 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.BadImageFormatException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.BadImageFormatException" /&gt;</ph> class with serialized data.</source>
          <target state="translated">使用序列化資料，初始化 <ph id="ph1">&lt;see cref="T:System.BadImageFormatException" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BadImageFormatException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</source>
          <target state="translated">進行還原序列化 (Deserialization) 期間會呼叫這個建構函式，以便重新構成經由資料流傳送的例外狀況物件。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.BadImageFormatException.#ctor(System.String,System.Exception)">
          <source>The error message that explains the reason for the exception.</source>
          <target state="translated">解釋例外狀況原因的錯誤訊息。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.BadImageFormatException.#ctor(System.String,System.Exception)">
          <source>The exception that is the cause of the current exception.</source>
          <target state="translated">做為目前例外狀況發生原因的例外狀況。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.BadImageFormatException.#ctor(System.String,System.Exception)">
          <source>If the <bpt id="p1">&lt;c&gt;</bpt>inner<ept id="p1">&lt;/c&gt;</ept> parameter is not a null reference, the current exception is raised in a <ph id="ph1">&lt;see langword="catch" /&gt;</ph> block that handles the inner exception.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>inner<ept id="p1">&lt;/c&gt;</ept> 參數不是 null 參考，目前的例外狀況會在處理內部例外的 <ph id="ph1">&lt;see langword="catch" /&gt;</ph> 區塊中引發。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.BadImageFormatException.#ctor(System.String,System.Exception)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.BadImageFormatException" /&gt;</ph> class with a specified error message and a reference to the inner exception that is the cause of this exception.</source>
          <target state="translated">使用指定的錯誤訊息以及造成此例外狀況的內部例外狀況的參考，初始化 <ph id="ph1">&lt;see cref="T:System.BadImageFormatException" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BadImageFormatException.#ctor(System.String,System.Exception)">
          <source>An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property.</source>
          <target state="translated">被擲回以做為前一個例外狀況直接結果的例外狀況，應該在 <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> 屬性中包含對前一個例外狀況的參考。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BadImageFormatException.#ctor(System.String,System.Exception)">
          <source>The <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property returns the same value that is passed into the constructor, or <ph id="ph2">`null`</ph> if the <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property does not supply the inner exception value to the constructor.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> 屬性會傳回與傳入建構函式中相同的值；如果 <ph id="ph2">`null`</ph> 屬性沒有提供內部例外值給建構函式，則傳回 <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BadImageFormatException.#ctor(System.String,System.Exception)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.BadImageFormatException&gt;</ph>.</source>
          <target state="translated">下表顯示 <ph id="ph1">&lt;xref:System.BadImageFormatException&gt;</ph> 執行個體的初始屬性值。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BadImageFormatException.#ctor(System.String,System.Exception)">
          <source>Property</source>
          <target state="translated">屬性</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BadImageFormatException.#ctor(System.String,System.Exception)">
          <source>Value</source>
          <target state="translated">值</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BadImageFormatException.#ctor(System.String,System.Exception)">
          <source>The inner exception reference.</source>
          <target state="translated">內部例外狀況參考。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BadImageFormatException.#ctor(System.String,System.Exception)">
          <source>The error message string.</source>
          <target state="translated">錯誤訊息字串。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.BadImageFormatException.#ctor(System.String,System.String)">
          <source>A message that describes the error.</source>
          <target state="translated">描述錯誤的訊息。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.BadImageFormatException.#ctor(System.String,System.String)">
          <source>The full name of the file with the invalid image.</source>
          <target state="translated">檔案的完整名稱，其具有無效的影像。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.BadImageFormatException.#ctor(System.String,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.BadImageFormatException" /&gt;</ph> class with a specified error message and file name.</source>
          <target state="translated">使用指定的錯誤訊息和檔案名稱，初始化 <ph id="ph1">&lt;see cref="T:System.BadImageFormatException" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BadImageFormatException.#ctor(System.String,System.String)">
          <source>The content of the <ph id="ph1">`message`</ph> parameter is intended to be understood by humans.</source>
          <target state="translated"><ph id="ph1">`message`</ph> 參數的內容必須能讓人了解。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BadImageFormatException.#ctor(System.String,System.String)">
          <source>The caller of this constructor is required to ensure that this string has been localized for the current system culture.</source>
          <target state="translated">這個建構函式的呼叫端必須確保這個字串已經被當地語系化 (為了目前系統的文化特性)。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BadImageFormatException.#ctor(System.String,System.String)">
          <source>Property</source>
          <target state="translated">屬性</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BadImageFormatException.#ctor(System.String,System.String)">
          <source>Value</source>
          <target state="translated">值</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BadImageFormatException.#ctor(System.String,System.String)">
          <source>The full name of the file with the invalid image.</source>
          <target state="translated">檔案的完整名稱，其具有無效的影像。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BadImageFormatException.#ctor(System.String,System.String)">
          <source>The error message string.</source>
          <target state="translated">錯誤訊息字串。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.BadImageFormatException.#ctor(System.String,System.String,System.Exception)">
          <source>The error message that explains the reason for the exception.</source>
          <target state="translated">解釋例外狀況原因的錯誤訊息。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.BadImageFormatException.#ctor(System.String,System.String,System.Exception)">
          <source>The full name of the file with the invalid image.</source>
          <target state="translated">檔案的完整名稱，其具有無效的影像。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.BadImageFormatException.#ctor(System.String,System.String,System.Exception)">
          <source>The exception that is the cause of the current exception.</source>
          <target state="translated">做為目前例外狀況發生原因的例外狀況。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.BadImageFormatException.#ctor(System.String,System.String,System.Exception)">
          <source>If the <bpt id="p1">&lt;c&gt;</bpt>inner<ept id="p1">&lt;/c&gt;</ept> parameter is not <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the current exception is raised in a <ph id="ph2">&lt;see langword="catch" /&gt;</ph> block that handles the inner exception.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>inner<ept id="p1">&lt;/c&gt;</ept> 參數不是 <ph id="ph1">&lt;see langword="null" /&gt;</ph>，則目前的例外狀況會在處理內部例外狀況的 <ph id="ph2">&lt;see langword="catch" /&gt;</ph> 區塊中引發。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.BadImageFormatException.#ctor(System.String,System.String,System.Exception)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.BadImageFormatException" /&gt;</ph> class with a specified error message and a reference to the inner exception that is the cause of this exception.</source>
          <target state="translated">使用指定的錯誤訊息以及造成此例外狀況的內部例外狀況的參考，初始化 <ph id="ph1">&lt;see cref="T:System.BadImageFormatException" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BadImageFormatException.#ctor(System.String,System.String,System.Exception)">
          <source>An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property.</source>
          <target state="translated">被擲回以做為前一個例外狀況直接結果的例外狀況，應該在 <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> 屬性中包含對前一個例外狀況的參考。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BadImageFormatException.#ctor(System.String,System.String,System.Exception)">
          <source>The <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property returns the same value that is passed into the constructor, or <ph id="ph2">`null`</ph> if the <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property does not supply the inner exception value to the constructor.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> 屬性會傳回與傳入建構函式中相同的值；如果 <ph id="ph2">`null`</ph> 屬性沒有提供內部例外值給建構函式，則傳回 <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BadImageFormatException.#ctor(System.String,System.String,System.Exception)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.BadImageFormatException&gt;</ph>.</source>
          <target state="translated">下表顯示 <ph id="ph1">&lt;xref:System.BadImageFormatException&gt;</ph> 執行個體的初始屬性值。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BadImageFormatException.#ctor(System.String,System.String,System.Exception)">
          <source>Property</source>
          <target state="translated">屬性</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BadImageFormatException.#ctor(System.String,System.String,System.Exception)">
          <source>Value</source>
          <target state="translated">值</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BadImageFormatException.#ctor(System.String,System.String,System.Exception)">
          <source>The inner exception reference.</source>
          <target state="translated">內部例外狀況參考。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BadImageFormatException.#ctor(System.String,System.String,System.Exception)">
          <source>The full name of the file with the invalid image.</source>
          <target state="translated">檔案的完整名稱，其具有無效的影像。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BadImageFormatException.#ctor(System.String,System.String,System.Exception)">
          <source>The error message string.</source>
          <target state="translated">錯誤訊息字串。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="P:System.BadImageFormatException.FileName">
          <source>Gets the name of the file that causes this exception.</source>
          <target state="translated">取得造成這個例外狀況的檔案名稱。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.BadImageFormatException.FileName">
          <source>The name of the file with the invalid image, or a null reference if no file name was passed to the constructor for the current instance.</source>
          <target state="translated">具有無效影像的檔案名稱；如果沒有檔案名稱傳遞給目前執行個體的建構函式，則為 Null 參考。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.BadImageFormatException.FileName">
          <source>This property returns the name of the file supplied to the constructor for the current instance, if any.</source>
          <target state="translated">如果有的話，這個屬性會傳回目前執行個體的建構函式提供的檔案名稱。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.BadImageFormatException.FileName">
          <source>If the file name was not specified or is a null reference (<ph id="ph1">`Nothing`</ph> in Visual Basic), this property returns a null reference.</source>
          <target state="translated">如果未指定檔案名稱，或為 null 參考 (<ph id="ph1">`Nothing`</ph>在 Visual Basic 中)，這個屬性會傳回 null 參考。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.BadImageFormatException.FileName">
          <source>This property is read-only.</source>
          <target state="translated">這個屬性是唯讀的。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="P:System.BadImageFormatException.FusionLog">
          <source>Gets the log file that describes why an assembly load failed.</source>
          <target state="translated">取得描述為什麼組件載入失敗的記錄檔。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.BadImageFormatException.FusionLog">
          <source>A <ph id="ph1">&lt;see langword="String" /&gt;</ph> containing errors reported by the assembly cache.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="String" /&gt;</ph>，包含組件 (Assembly) 快取報告的錯誤。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.BadImageFormatException.FusionLog">
          <source>for providing evidence, and viewing and modifying policy.</source>
          <target state="translated">提供的辨識項，以及檢視和修改原則。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.BadImageFormatException.FusionLog">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /&gt;</ph><ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" /&gt;</ph> Security action: <ph id="ph3">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph></source>
          <target state="translated">列舉型別相關聯： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /&gt;</ph> <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" /&gt;</ph>安全性動作： <ph id="ph3">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.BadImageFormatException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> that holds the serialized object data about the exception being thrown.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph>，包含所擲回之例外狀況的相關序列化物件資料。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.BadImageFormatException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> that contains contextual information about the source or destination.</source>
          <target state="translated">包含有關來源或目的端內容資訊的 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.BadImageFormatException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Sets the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> object with the file name, assembly cache log, and additional exception information.</source>
          <target state="translated">使用檔案名稱、組件快取記錄檔和額外的例外狀況資訊，來設定 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.BadImageFormatException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">呼叫端沒有必要的權限。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BadImageFormatException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">需要完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BadImageFormatException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">這個成員無法供部分信任或安全性透明程式碼。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="P:System.BadImageFormatException.Message">
          <source>Gets the error message and the name of the file that caused this exception.</source>
          <target state="translated">取得造成這個例外狀況的錯誤訊息和檔案名稱。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.BadImageFormatException.Message">
          <source>A string containing the error message and the name of the file that caused this exception.</source>
          <target state="translated">字串，包含造成這個例外狀況的錯誤訊息和檔案名稱。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.BadImageFormatException.Message">
          <source>If no message was supplied to the constructor for the current exception, this property returns a system-supplied error message.</source>
          <target state="translated">如果目前的例外狀況的建構函式不提供的任何訊息，這個屬性會傳回系統提供的錯誤訊息。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.BadImageFormatException.Message">
          <source>If the <ph id="ph1">&lt;xref:System.BadImageFormatException.FileName%2A&gt;</ph> property is not a null reference (<ph id="ph2">`Nothing`</ph> in Visual Basic), the message includes the file name.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.BadImageFormatException.FileName%2A&gt;</ph>屬性不是 null 參考 (<ph id="ph2">`Nothing`</ph>在 Visual Basic 中)，此訊息包含的檔案名稱。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.BadImageFormatException.Message">
          <source>This property is read-only.</source>
          <target state="translated">這個屬性是唯讀的。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.BadImageFormatException.ToString">
          <source>Returns the fully qualified name of this exception and possibly the error message, the name of the inner exception, and the stack trace.</source>
          <target state="translated">傳回這個例外狀況的完整名稱、可能的錯誤訊息、內部例外的名稱和堆疊追蹤。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.BadImageFormatException.ToString">
          <source>A string containing the fully qualified name of this exception and possibly the error message, the name of the inner exception, and the stack trace.</source>
          <target state="translated">字串，包含這個例外狀況的完整名稱、可能的錯誤訊息、內部例外的名稱和堆疊追蹤。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BadImageFormatException.ToString">
          <source>The string representation returned by this method includes the name of the exception, the value of the <ph id="ph1">&lt;xref:System.BadImageFormatException.Message%2A&gt;</ph> property, the result of calling <ph id="ph2">`ToString`</ph> on the inner exception, the value of the <ph id="ph3">&lt;xref:System.BadImageFormatException.FileName%2A&gt;</ph> property, and the result of calling <ph id="ph4">&lt;xref:System.Environment.StackTrace%2A&gt;</ph>.</source>
          <target state="translated">這個方法所傳回的字串表示法包含例外狀況，值名稱<ph id="ph1">&lt;xref:System.BadImageFormatException.Message%2A&gt;</ph>屬性、 呼叫<ph id="ph2">`ToString`</ph>內部例外狀況的值上<ph id="ph3">&lt;xref:System.BadImageFormatException.FileName%2A&gt;</ph>屬性，並呼叫的結果<ph id="ph4">&lt;xref:System.Environment.StackTrace%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BadImageFormatException.ToString">
          <source>If any of these members is a null reference (<ph id="ph1">`Nothing`</ph> in Visual Basic), its value is not included in the returned string.</source>
          <target state="translated">如果任何這些成員為 null 參考 (<ph id="ph1">`Nothing`</ph>在 Visual Basic 中)，其值不包含在傳回的字串。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>