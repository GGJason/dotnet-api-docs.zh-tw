<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="WeakReference.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5c0d4836429712734d47bb9c53ee59e9a0dd4d9f0.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c0d4836429712734d47bb9c53ee59e9a0dd4d9f0</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.WeakReference">
          <source>Represents a weak reference, which references an object while still allowing that object to be reclaimed by garbage collection.</source>
          <target state="translated">表示弱式參考，即在參考物件的同時，仍允許系統透過記憶體回收來回收該物件。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.WeakReference">
          <source>A weak reference allows the garbage collector to collect an object while still allowing an application to access the object.</source>
          <target state="translated">弱式參考可讓記憶體回收行程回收物件，同時仍允許應用程式存取的物件。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.WeakReference">
          <source>If you need the object, you can still obtain a strong reference to it and prevent it from being collected.</source>
          <target state="translated">如果您需要物件時，仍然可以取得它的強式參考，並防止它要收集。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.WeakReference">
          <source>For more information about how to use short and long weak references, see <bpt id="p1">[</bpt>Weak References<ept id="p1">](~/docs/standard/garbage-collection/weak-references.md)</ept>.</source>
          <target state="translated">如需如何使用短和長弱式參考的詳細資訊，請參閱<bpt id="p1">[</bpt>弱式參考<ept id="p1">](~/docs/standard/garbage-collection/weak-references.md)</ept>。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.WeakReference">
          <source>The following example demonstrates how you can use weak references to maintain a cache of objects as a resource for an application.</source>
          <target state="translated">下列範例會示範如何使用弱式參考來維護快取的物件為應用程式的資源。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.WeakReference">
          <source>The cache is constructed using an <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602&gt;</ph> of <ph id="ph2">&lt;xref:System.WeakReference&gt;</ph> objects keyed by an index value.</source>
          <target state="translated">快取建構使用<ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602&gt;</ph>的<ph id="ph2">&lt;xref:System.WeakReference&gt;</ph>物件為索引鍵索引值。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.WeakReference">
          <source>The <ph id="ph1">&lt;xref:System.WeakReference.Target%2A&gt;</ph> property for the <ph id="ph2">&lt;xref:System.WeakReference&gt;</ph> objects is an object in a byte array that represents data.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.WeakReference.Target%2A&gt;</ph>屬性<ph id="ph2">&lt;xref:System.WeakReference&gt;</ph>物件是表示資料的位元組陣列中的物件。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.WeakReference">
          <source>The example randomly accesses objects in the cache.</source>
          <target state="translated">此範例隨機存取快取中的物件。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.WeakReference">
          <source>If an object is reclaimed for garbage collection, a new data object is regenerated; otherwise, the object is available to access because of the weak reference.</source>
          <target state="translated">如果記憶體回收收回物件，會重新產生新的資料物件。否則，該物件可存取，因為弱式參考。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.WeakReference">
          <source>for the ability to call unmanaged code.</source>
          <target state="translated">提供呼叫 unmanaged 程式碼的能力。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.WeakReference">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" /&gt;</ph>; Permission value: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">要求的值： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" /&gt;</ph>;權限的值： <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="T:System.WeakReference">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.WeakReference" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.WeakReference" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.WeakReference.#ctor(System.Object)">
          <source>The object to track or <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">要追蹤的物件或 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.WeakReference.#ctor(System.Object)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.WeakReference" /&gt;</ph> class, referencing the specified object.</source>
          <target state="translated">參考指定的物件，初始化 <ph id="ph1">&lt;see cref="T:System.WeakReference" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.WeakReference.#ctor(System.Object)">
          <source>This constructor creates a short weak reference to <ph id="ph1">`target`</ph>.</source>
          <target state="translated">這個建構函式建立的簡短弱式參考<ph id="ph1">`target`</ph>。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.WeakReference.#ctor(System.Object,System.Boolean)">
          <source>An object to track.</source>
          <target state="translated">要追蹤的物件。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.WeakReference.#ctor(System.Object,System.Boolean)">
          <source>Indicates when to stop tracking the object.</source>
          <target state="translated">指示何時停止追蹤物件。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.WeakReference.#ctor(System.Object,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the object is tracked after finalization; if <ph id="ph2">&lt;see langword="false" /&gt;</ph>, the object is only tracked until finalization.</source>
          <target state="translated">如果是 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，則會在最終處理之後追蹤物件；如果是 <ph id="ph2">&lt;see langword="false" /&gt;</ph>，則只會追蹤物件到最終處理為止。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.WeakReference.#ctor(System.Object,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.WeakReference" /&gt;</ph> class, referencing the specified object and using the specified resurrection tracking.</source>
          <target state="translated">參考指定的物件，並使用指定的重新恢復狀態追蹤 (Tracking)，初始化 <ph id="ph1">&lt;see cref="T:System.WeakReference" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.WeakReference.#ctor(System.Object,System.Boolean)">
          <source>If <ph id="ph1">`trackResurrection`</ph> is <ph id="ph2">`false`</ph>, a short weak reference is created.</source>
          <target state="translated">如果<ph id="ph1">`trackResurrection`</ph>是<ph id="ph2">`false`</ph>，則會建立簡短的弱式參考。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.WeakReference.#ctor(System.Object,System.Boolean)">
          <source>If <ph id="ph1">`trackResurrection`</ph> is <ph id="ph2">`true`</ph>, a long weak reference is created.</source>
          <target state="translated">如果<ph id="ph1">`trackResurrection`</ph>是<ph id="ph2">`true`</ph>，則會建立長弱式參考。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.WeakReference.#ctor(System.Object,System.Boolean)">
          <source>The following example creates a cache of data objects with short weak references.</source>
          <target state="translated">下列範例會建立快取的資料物件的簡短的弱式參考。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.WeakReference.#ctor(System.Object,System.Boolean)">
          <source>This example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.WeakReference&gt;</ph> class.</source>
          <target state="translated">這個範例是針對所提供之較大範例的一部分<ph id="ph1">&lt;xref:System.WeakReference&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.WeakReference.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>An object that holds all the data needed to serialize or deserialize the current <ph id="ph1">&lt;see cref="T:System.WeakReference" /&gt;</ph> object.</source>
          <target state="translated">保有序列化或還原序列化目前 <ph id="ph1">&lt;see cref="T:System.WeakReference" /&gt;</ph> 物件所需之所有資料的物件。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.WeakReference.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>(Reserved) Describes the source and destination of the serialized stream specified by <bpt id="p1">&lt;c&gt;</bpt>info<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">(已保留) 描述 <bpt id="p1">&lt;c&gt;</bpt>info<ept id="p1">&lt;/c&gt;</ept> 所指定之序列化資料流的來源和目的地。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.WeakReference.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.WeakReference" /&gt;</ph> class, using deserialized data from the specified serialization and stream objects.</source>
          <target state="translated">使用指定序列化和資料流物件的還原序列化資料，來初始化 <ph id="ph1">&lt;see cref="T:System.WeakReference" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.WeakReference.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">`context`</ph> parameter is reserved, and does not currently participate in this operation.</source>
          <target state="translated"><ph id="ph1">`context`</ph>參數已保留，以及目前參與這項作業。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.WeakReference.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source><ph id="ph1">&lt;paramref name="info" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="info" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.WeakReference.Finalize">
          <source>Discards the reference to the target represented by the current <ph id="ph1">&lt;see cref="T:System.WeakReference" /&gt;</ph> object.</source>
          <target state="translated">捨棄對目前 <ph id="ph1">&lt;see cref="T:System.WeakReference" /&gt;</ph> 物件所表示之目標的參考。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.WeakReference.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>An object that holds all the data needed to serialize or deserialize the current <ph id="ph1">&lt;see cref="T:System.WeakReference" /&gt;</ph> object.</source>
          <target state="translated">保有序列化或還原序列化目前 <ph id="ph1">&lt;see cref="T:System.WeakReference" /&gt;</ph> 物件所需之所有資料的物件。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.WeakReference.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>(Reserved) The location where serialized data is stored and retrieved.</source>
          <target state="translated">(保留) 位置，序列化資料在此儲存和擷取。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.WeakReference.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Populates a <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> object with all the data needed to serialize the current <ph id="ph2">&lt;see cref="T:System.WeakReference" /&gt;</ph> object.</source>
          <target state="translated">使用序列化目前 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> 物件所需的所有資料，來填入 <ph id="ph2">&lt;see cref="T:System.WeakReference" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.WeakReference.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This method stores all the information in <ph id="ph1">`info`</ph> necessary to serialize the current <ph id="ph2">&lt;xref:System.WeakReference&gt;</ph> object.</source>
          <target state="translated">這個方法會儲存中的所有資訊<ph id="ph1">`info`</ph>需要序列化目前<ph id="ph2">&lt;xref:System.WeakReference&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.WeakReference.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">`context`</ph> parameter is reserved and is not currently used in the execution of this method.</source>
          <target state="translated"><ph id="ph1">`context`</ph>參數已保留，以及目前未使用此方法的執行中。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.WeakReference.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source><ph id="ph1">&lt;paramref name="info" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="info" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.WeakReference.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">需要完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.WeakReference.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">這個成員無法供部分信任或安全性透明程式碼。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="P:System.WeakReference.IsAlive">
          <source>Gets an indication whether the object referenced by the current <ph id="ph1">&lt;see cref="T:System.WeakReference" /&gt;</ph> object has been garbage collected.</source>
          <target state="translated">取得目前 <ph id="ph1">&lt;see cref="T:System.WeakReference" /&gt;</ph> 物件所參考的物件是否已進行記憶體回收的指示。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.WeakReference.IsAlive">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the object referenced by the current <ph id="ph2">&lt;see cref="T:System.WeakReference" /&gt;</ph> object has not been garbage collected and is still accessible; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果目前 <ph id="ph2">&lt;see cref="T:System.WeakReference" /&gt;</ph> 物件所參考的物件尚未進行記憶體回收，且仍可存取，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.WeakReference.IsAlive">
          <source>Because an object could potentially be reclaimed for garbage collection immediately after the <ph id="ph1">&lt;xref:System.WeakReference.IsAlive%2A&gt;</ph> property returns <ph id="ph2">`true`</ph>, using this property is not recommended unless you are testing only for a <ph id="ph3">`false`</ph> return value.</source>
          <target state="translated">因為可能無法進行記憶體回收回收物件後立即<ph id="ph1">&lt;xref:System.WeakReference.IsAlive%2A&gt;</ph>屬性會傳回<ph id="ph2">`true`</ph>，除非您要測試僅適用於使用這個屬性不建議<ph id="ph3">`false`</ph>傳回值。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="P:System.WeakReference.Target">
          <source>Gets or sets the object (the target) referenced by the current <ph id="ph1">&lt;see cref="T:System.WeakReference" /&gt;</ph> object.</source>
          <target state="translated">取得或設定目前 <ph id="ph1">&lt;see cref="T:System.WeakReference" /&gt;</ph> 物件所參考的物件 (目標)。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.WeakReference.Target">
          <source><ph id="ph1">&lt;see langword="null" /&gt;</ph> if the object referenced by the current <ph id="ph2">&lt;see cref="T:System.WeakReference" /&gt;</ph> object has been garbage collected; otherwise, a reference to the object referenced by the current <ph id="ph3">&lt;see cref="T:System.WeakReference" /&gt;</ph> object.</source>
          <target state="translated">如果目前 <ph id="ph2">&lt;see cref="T:System.WeakReference" /&gt;</ph> 物件所參考的物件已進行記憶體回收，則為 <ph id="ph1">&lt;see langword="null" /&gt;</ph>，否則為目前 <ph id="ph3">&lt;see cref="T:System.WeakReference" /&gt;</ph> 物件所參考的物件參考。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.WeakReference.Target">
          <source>After setting this property to the target object, make sure that there are no other strong references to the object; otherwise, it will not be collected.</source>
          <target state="translated">這個屬性設為目標物件之後, 確定沒有與物件沒有其他強式參考否則，它將不會收集。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.WeakReference.Target">
          <source>The following example tries to obtain an object from a cache of objects with weak references.</source>
          <target state="translated">下列範例會嘗試取得具有弱式參考的物件快取中的物件。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.WeakReference.Target">
          <source>If the object was reclaimed for garbage collection, a new object is generated.</source>
          <target state="translated">如果此物件已進行記憶體回收中回收，會產生新的物件。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.WeakReference.Target">
          <source>This example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.WeakReference&gt;</ph> class.</source>
          <target state="translated">這個範例是針對所提供之較大範例的一部分<ph id="ph1">&lt;xref:System.WeakReference&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="P:System.WeakReference.Target">
          <source>The reference to the target object is invalid.</source>
          <target state="translated">目標物件的參考無效。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="P:System.WeakReference.Target">
          <source>This exception can be thrown while setting this property if the value is a null reference or if the object has been finalized during the set operation.</source>
          <target state="translated">如果值為 null 參考或已在集合作業期間完成物件，則可以在設定這個屬性時擲回這個例外狀況。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="P:System.WeakReference.TrackResurrection">
          <source>Gets an indication whether the object referenced by the current <ph id="ph1">&lt;see cref="T:System.WeakReference" /&gt;</ph> object is tracked after it is finalized.</source>
          <target state="translated">取得指示，了解是否要對目前 <ph id="ph1">&lt;see cref="T:System.WeakReference" /&gt;</ph> 物件所參考的物件，在執行最終處理之後再進行追蹤。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.WeakReference.TrackResurrection">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the object the current <ph id="ph2">&lt;see cref="T:System.WeakReference" /&gt;</ph> object refers to is tracked after finalization; or <ph id="ph3">&lt;see langword="false" /&gt;</ph> if the object is only tracked until finalization.</source>
          <target state="translated">如果目前 <ph id="ph2">&lt;see cref="T:System.WeakReference" /&gt;</ph> 物件所參考的物件在執行最終處理之後會受到追蹤，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，如果只針對該物件追蹤到最終處理為止，則為 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.WeakReference.TrackResurrection">
          <source>If <ph id="ph1">`true`</ph>, the weak reference is a long weak reference and <ph id="ph2">`true`</ph> was specified for the <ph id="ph3">`trackResurrection`</ph> parameter in the <ph id="ph4">&lt;xref:System.WeakReference&gt;</ph> constructor.</source>
          <target state="translated">如果<ph id="ph1">`true`</ph>，弱式參考為長弱式參考和<ph id="ph2">`true`</ph>指定<ph id="ph3">`trackResurrection`</ph>中的參數<ph id="ph4">&lt;xref:System.WeakReference&gt;</ph>建構函式。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>