<Type Name="Tuple&lt;T1,T2,T3,T4,T5,T6&gt;" FullName="System.Tuple&lt;T1,T2,T3,T4,T5,T6&gt;">
  <TypeSignature Language="C#" Value="public class Tuple&lt;T1,T2,T3,T4,T5,T6&gt; : IComparable, System.Collections.IStructuralComparable, System.Collections.IStructuralEquatable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Tuple`6&lt;T1, T2, T3, T4, T5, T6&gt; extends System.Object implements class System.Collections.IStructuralComparable, class System.Collections.IStructuralEquatable, class System.IComparable" />
  <TypeSignature Language="DocId" Value="T:System.Tuple`6" />
  <TypeSignature Language="VB.NET" Value="Public Class Tuple(Of T1, T2, T3, T4, T5, T6)&#xA;Implements IComparable, IStructuralComparable, IStructuralEquatable" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6&gt;&#xA;public ref class Tuple : IComparable, System::Collections::IStructuralComparable, System::Collections::IStructuralEquatable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T1" />
    <TypeParameter Name="T2" />
    <TypeParameter Name="T3" />
    <TypeParameter Name="T4" />
    <TypeParameter Name="T5" />
    <TypeParameter Name="T6" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IStructuralComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IStructuralEquatable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T1"><span data-ttu-id="9162b-101">Tuple 第 1 個元件的型別。</span><span class="sxs-lookup"><span data-stu-id="9162b-101">The type of the tuple's first component.</span></span></typeparam>
    <typeparam name="T2"><span data-ttu-id="9162b-102">Tuple 第 2 個元件的型別。</span><span class="sxs-lookup"><span data-stu-id="9162b-102">The type of the tuple's second component.</span></span></typeparam>
    <typeparam name="T3"><span data-ttu-id="9162b-103">Tuple 第 3 個元件的型別。</span><span class="sxs-lookup"><span data-stu-id="9162b-103">The type of the tuple's third component.</span></span></typeparam>
    <typeparam name="T4"><span data-ttu-id="9162b-104">Tuple 第 4 個元件的型別。</span><span class="sxs-lookup"><span data-stu-id="9162b-104">The type of the tuple's fourth component.</span></span></typeparam>
    <typeparam name="T5"><span data-ttu-id="9162b-105">Tuple 第 5 個元件的型別。</span><span class="sxs-lookup"><span data-stu-id="9162b-105">The type of the tuple's fifth component.</span></span></typeparam>
    <typeparam name="T6"><span data-ttu-id="9162b-106">Tuple 第 6 個元件的型別。</span><span class="sxs-lookup"><span data-stu-id="9162b-106">The type of the tuple's sixth component.</span></span></typeparam>
    <summary><span data-ttu-id="9162b-107">代表 6-Tuple 或六重物件。</span><span class="sxs-lookup"><span data-stu-id="9162b-107">Represents a 6-tuple, or sextuple.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9162b-108">Tuple 是具有特定數量和值序列的資料結構。</span><span class="sxs-lookup"><span data-stu-id="9162b-108">A tuple is a data structure that has a specific number and sequence of values.</span></span> <span data-ttu-id="9162b-109"><xref:System.Tuple%606>類別代表 6-tuple 或 sextuple，也就是 tuple，其中擁有六個元件。</span><span class="sxs-lookup"><span data-stu-id="9162b-109">The <xref:System.Tuple%606> class represents a 6-tuple, or sextuple, which is a tuple that has six components.</span></span>  
  
 <span data-ttu-id="9162b-110">您可以具現化<xref:System.Tuple%606>藉由呼叫物件<xref:System.Tuple%606.%23ctor%2A>或靜態<xref:System.Tuple.Create%60%606%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%2C%60%605%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="9162b-110">You can instantiate a <xref:System.Tuple%606> object by calling either the <xref:System.Tuple%606.%23ctor%2A> or the static  <xref:System.Tuple.Create%60%606%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%2C%60%605%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="9162b-111">您可以擷取值的 tuple 的元件所使用的唯讀<xref:System.Tuple%606.Item1%2A>， <xref:System.Tuple%606.Item2%2A>， <xref:System.Tuple%606.Item3%2A>， <xref:System.Tuple%606.Item4%2A>， <xref:System.Tuple%606.Item5%2A>，和<xref:System.Tuple%606.Item6%2A>執行個體屬性。</span><span class="sxs-lookup"><span data-stu-id="9162b-111">You can retrieve the value of the tuple's components by using the read-only <xref:System.Tuple%606.Item1%2A>, <xref:System.Tuple%606.Item2%2A>, <xref:System.Tuple%606.Item3%2A>, <xref:System.Tuple%606.Item4%2A>, <xref:System.Tuple%606.Item5%2A>, and <xref:System.Tuple%606.Item6%2A> instance properties.</span></span>  
  
 <span data-ttu-id="9162b-112">Tuple 常用於四種不同方式：</span><span class="sxs-lookup"><span data-stu-id="9162b-112">Tuples are commonly used in four different ways:</span></span>  
  
-   <span data-ttu-id="9162b-113">代表單一的資料集。</span><span class="sxs-lookup"><span data-stu-id="9162b-113">To represent a single set of data.</span></span> <span data-ttu-id="9162b-114">比方說，tuple 可以代表資料庫記錄，而其元件可以表示個別欄位的記錄。</span><span class="sxs-lookup"><span data-stu-id="9162b-114">For example, a tuple can represent a database record, and its components can represent individual fields of the record.</span></span>  
  
-   <span data-ttu-id="9162b-115">提供讓您輕鬆存取、 和操作的資料集。</span><span class="sxs-lookup"><span data-stu-id="9162b-115">To provide easy access to, and manipulation of, a data set.</span></span> <span data-ttu-id="9162b-116">下列範例會定義<xref:System.Tuple%606>物件，其中包含的每個人口普查到 2000年 1960年從 New York City 母體擴展資料。</span><span class="sxs-lookup"><span data-stu-id="9162b-116">The following example defines a <xref:System.Tuple%606> object that contains population data for New York City for each census from 1960 through 2000.</span></span> <span data-ttu-id="9162b-117">6-tuple 傳遞至`ComputePopulationChange`方法，它會計算每年之間 censuses，以及每年 50 整年的期間內的變動率的變更率。</span><span class="sxs-lookup"><span data-stu-id="9162b-117">The sextuple is passed to the `ComputePopulationChange` method, which calculates the annual rate of change between censuses, as well as the annual rate of change for the entire 50 year period.</span></span>  
  
     [!code-csharp[System.Tuple\`6.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`6.class/cs/example1.cs#1)]
     [!code-vb[System.Tuple\`6.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`6.class/vb/example1.vb#1)]  
  
-   <span data-ttu-id="9162b-118">若要傳回多個值的方法，而不會使用從`out`參數 （在 C#) 或`ByRef`參數 （在 Visual Basic)。</span><span class="sxs-lookup"><span data-stu-id="9162b-118">To return multiple values from a method without the use of `out` parameters (in C#) or `ByRef` parameters (in Visual Basic).</span></span> <span data-ttu-id="9162b-119">例如前, 一個範例會傳回其計算的統計資料，以及縣 （市） 名稱中,<xref:System.Tuple%606>物件。</span><span class="sxs-lookup"><span data-stu-id="9162b-119">For example, the previous example returns its computed statistics, along with the city name, in a <xref:System.Tuple%606> object.</span></span>  
  
-   <span data-ttu-id="9162b-120">若要將多個值傳遞至方法，以透過單一參數。</span><span class="sxs-lookup"><span data-stu-id="9162b-120">To pass multiple values to a method through a single parameter.</span></span> <span data-ttu-id="9162b-121">例如，<xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=nameWithType>方法具有單一參數，可讓您提供一個執行緒啟動時執行之方法的值。</span><span class="sxs-lookup"><span data-stu-id="9162b-121">For example, the <xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=nameWithType> method has a single parameter that lets you supply one value to the method that the thread executes at startup.</span></span> <span data-ttu-id="9162b-122">如果您提供<xref:System.Tuple%606>物件做為方法引數中，您可以提供六個項目之資料的執行緒啟動常式。</span><span class="sxs-lookup"><span data-stu-id="9162b-122">If you supply a <xref:System.Tuple%606> object as the method argument, you can supply the thread’s startup routine with six items of data.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Tuple" />
    <altmember cref="T:System.Tuple`1" />
    <altmember cref="T:System.Tuple`2" />
    <altmember cref="T:System.Tuple`3" />
    <altmember cref="T:System.Tuple`4" />
    <altmember cref="T:System.Tuple`5" />
    <altmember cref="T:System.Tuple`7" />
    <altmember cref="T:System.Tuple`8" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Tuple (T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!T1 item1, !T2 item2, !T3 item3, !T4 item4, !T5 item5, !T6 item6) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`6.#ctor(`0,`1,`2,`3,`4,`5)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (item1 As T1, item2 As T2, item3 As T3, item4 As T4, item5 As T5, item6 As T6)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Tuple(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="item1" Type="T1" />
        <Parameter Name="item2" Type="T2" />
        <Parameter Name="item3" Type="T3" />
        <Parameter Name="item4" Type="T4" />
        <Parameter Name="item5" Type="T5" />
        <Parameter Name="item6" Type="T6" />
      </Parameters>
      <Docs>
        <param name="item1"><span data-ttu-id="9162b-123">Tuple 第 1 個元件的值。</span><span class="sxs-lookup"><span data-stu-id="9162b-123">The value of the tuple's first component.</span></span></param>
        <param name="item2"><span data-ttu-id="9162b-124">Tuple 第 2 個元件的值。</span><span class="sxs-lookup"><span data-stu-id="9162b-124">The value of the tuple's second component.</span></span></param>
        <param name="item3"><span data-ttu-id="9162b-125">Tuple 第 3 個元件的值。</span><span class="sxs-lookup"><span data-stu-id="9162b-125">The value of the tuple's third component.</span></span></param>
        <param name="item4"><span data-ttu-id="9162b-126">Tuple 第 4 個元件的值。</span><span class="sxs-lookup"><span data-stu-id="9162b-126">The value of the tuple's fourth component</span></span></param>
        <param name="item5"><span data-ttu-id="9162b-127">Tuple 第 5 個元件的值。</span><span class="sxs-lookup"><span data-stu-id="9162b-127">The value of the tuple's fifth component.</span></span></param>
        <param name="item6"><span data-ttu-id="9162b-128">Tuple 第 6 個元件的值。</span><span class="sxs-lookup"><span data-stu-id="9162b-128">The value of the tuple's sixth component.</span></span></param>
        <summary><span data-ttu-id="9162b-129">初始化 <see cref="T:System.Tuple`6" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="9162b-129">Initializes a new instance of the <see cref="T:System.Tuple`6" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9162b-130">您也可以使用靜態<xref:System.Tuple.Create%60%606%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%2C%60%605%29?displayProperty=nameWithType>方法，而不需要明確指定其元件的類型產生 6 tuple 物件。</span><span class="sxs-lookup"><span data-stu-id="9162b-130">You can also use the static <xref:System.Tuple.Create%60%606%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%2C%60%605%29?displayProperty=nameWithType> method to instantiate a 6-tuple object without having to explicitly specify the types of its components.</span></span> <span data-ttu-id="9162b-131">下列範例會使用<xref:System.Tuple.Create%60%606%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%2C%60%605%29?displayProperty=nameWithType>方法來具現化其第一個元件是類型的 6 個 tuple <xref:System.String> ，而且其剩餘的元件類型的<xref:System.Int32>。</span><span class="sxs-lookup"><span data-stu-id="9162b-131">The following example uses the <xref:System.Tuple.Create%60%606%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%2C%60%605%29?displayProperty=nameWithType> method to instantiate a 6-tuple whose first component is of type <xref:System.String> and whose remaining components are of type <xref:System.Int32>.</span></span>  
  
 [!code-csharp[System.Tuple.Create#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/create1.cs#11)]
 [!code-vb[System.Tuple.Create#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/create1.vb#11)]  
  
 <span data-ttu-id="9162b-132">這相當於下列呼叫<xref:System.Tuple%606.%23ctor%2A>類別建構函式。</span><span class="sxs-lookup"><span data-stu-id="9162b-132">This is equivalent to the following call to the <xref:System.Tuple%606.%23ctor%2A> class constructor.</span></span>  
  
 [!code-csharp[System.Tuple.Create#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/create1.cs#12)]
 [!code-vb[System.Tuple.Create#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/create1.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`6.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="9162b-133">與這個執行個體相互比較的物件。</span><span class="sxs-lookup"><span data-stu-id="9162b-133">The object to compare with this instance.</span></span></param>
        <summary><span data-ttu-id="9162b-134">傳回值，這個值表示目前的 <see cref="T:System.Tuple`6" /> 物件是否等於指定的物件。</span><span class="sxs-lookup"><span data-stu-id="9162b-134">Returns a value that indicates whether the current <see cref="T:System.Tuple`6" /> object is equal to a specified object.</span></span></summary>
        <returns>
          <span data-ttu-id="9162b-135">如果目前的執行個體和指定的物件相等，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="9162b-135"><see langword="true" /> if the current instance is equal to the specified object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9162b-136">`obj`參數會被視為等於目前的執行個體，在下列情況下：</span><span class="sxs-lookup"><span data-stu-id="9162b-136">The `obj` parameter is considered to be equal to the current instance under the following conditions:</span></span>  
  
-   <span data-ttu-id="9162b-137">它是<xref:System.Tuple%606>物件。</span><span class="sxs-lookup"><span data-stu-id="9162b-137">It is a <xref:System.Tuple%606> object.</span></span>  
  
-   <span data-ttu-id="9162b-138">其六個的元件會為目前的執行個體相同的類型。</span><span class="sxs-lookup"><span data-stu-id="9162b-138">Its six components are of the same types as the current instance.</span></span>  
  
-   <span data-ttu-id="9162b-139">其六個的元件是等於目前的執行個體。</span><span class="sxs-lookup"><span data-stu-id="9162b-139">Its six components are equal to those of the current instance.</span></span> <span data-ttu-id="9162b-140">是否相等由每個元件的預設物件相等比較子決定。</span><span class="sxs-lookup"><span data-stu-id="9162b-140">Equality is determined by the default object equality comparer for each component.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9162b-141">下列範例會定義包含母體擴展中的資料為 Los Angeles 和紐約 1960年到 2000年的 sextuples 的陣列。</span><span class="sxs-lookup"><span data-stu-id="9162b-141">The following example defines an array of sextuples that contain population data for Los Angeles and New York from 1960 to 2000.</span></span> <span data-ttu-id="9162b-142">第一個元件的每個 6-tuple 識別縣 （市）。</span><span class="sxs-lookup"><span data-stu-id="9162b-142">The first component of each sextuple identifies the city.</span></span> <span data-ttu-id="9162b-143">第一個、 第三和第四個 sextuples 包含紐約的資料。</span><span class="sxs-lookup"><span data-stu-id="9162b-143">The first, third, and fourth sextuples contain data for New York.</span></span> <span data-ttu-id="9162b-144">第一個 6-tuple 是第四個 6-tuple 的複本。</span><span class="sxs-lookup"><span data-stu-id="9162b-144">The first sextuple is a duplicate of the fourth sextuple.</span></span> <span data-ttu-id="9162b-145">第三個 6-tuple 會識別為"New York City"而不是"New York"的縣 （市）。</span><span class="sxs-lookup"><span data-stu-id="9162b-145">The third sextuple identifies the city as "New York City" instead of "New York".</span></span> <span data-ttu-id="9162b-146">如範例所示，只有第四個 6-tuple 等於第一個 6-tuple。</span><span class="sxs-lookup"><span data-stu-id="9162b-146">As the example shows, only the fourth sextuple is equal to the first sextuple.</span></span>  
  
 [!code-csharp[System.Tuple\`6.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`6.equals/cs/equals1.cs#1)]
 [!code-vb[System.Tuple\`6.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`6.equals/vb/equals1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`6.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9162b-147">傳回目前 <see cref="T:System.Tuple`6" /> 物件的雜湊碼。</span><span class="sxs-lookup"><span data-stu-id="9162b-147">Returns the hash code for the current <see cref="T:System.Tuple`6" /> object.</span></span></summary>
        <returns><span data-ttu-id="9162b-148">32 位元帶正負號的整數雜湊碼。</span><span class="sxs-lookup"><span data-stu-id="9162b-148">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item1">
      <MemberSignature Language="C#" Value="public T1 Item1 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T1 Item1" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`6.Item1" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item1 As T1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T1 Item1 { T1 get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T1</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9162b-149">取得目前 <see cref="T:System.Tuple`6" /> 物件之第一個元件的值。</span><span class="sxs-lookup"><span data-stu-id="9162b-149">Gets the value of the current <see cref="T:System.Tuple`6" /> object's first component.</span></span></summary>
        <value><span data-ttu-id="9162b-150">目前 <see cref="T:System.Tuple`6" /> 物件之第一個元件的值。</span><span class="sxs-lookup"><span data-stu-id="9162b-150">The value of the current <see cref="T:System.Tuple`6" /> object's first component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9162b-151">您可以動態決定的型別<xref:System.Tuple%606.Item1%2A>元件中有兩種：</span><span class="sxs-lookup"><span data-stu-id="9162b-151">You can dynamically determine the type of the <xref:System.Tuple%606.Item1%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="9162b-152">藉由呼叫`GetType`方法所傳回的值<xref:System.Tuple%606.Item1%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="9162b-152">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%606.Item1%2A> property.</span></span>  
  
-   <span data-ttu-id="9162b-153">藉由擷取<xref:System.Type>物件，代表<xref:System.Tuple%606>物件，並擷取第一個項目所傳回的陣列從其<xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="9162b-153">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%606> object, and retrieving the first element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9162b-154">下列範例會定義陣列<xref:System.Tuple%606>元件到 2000年 1960年從包含三個美國城市 （「 紐約 」、 「 芝加哥和 「 洛杉磯 」） 的母體擴展資料物件。</span><span class="sxs-lookup"><span data-stu-id="9162b-154">The following example defines an array of <xref:System.Tuple%606> objects whose components contain population data for three U.S. cities (New York, Chicago, and Los Angeles) from 1960 through 2000.</span></span> <span data-ttu-id="9162b-155">然後，它會顯示一份列出的資料。</span><span class="sxs-lookup"><span data-stu-id="9162b-155">It then displays a table that lists the data.</span></span> <span data-ttu-id="9162b-156">若要顯示的縣 （市） 名稱，它會擷取的值<xref:System.Tuple%606.Item1%2A>每個屬性<xref:System.Tuple%606>物件。</span><span class="sxs-lookup"><span data-stu-id="9162b-156">To display the city name, it retrieves the value of the <xref:System.Tuple%606.Item1%2A> property for each <xref:System.Tuple%606> object.</span></span>  
  
 [!code-csharp[System.Tuple\`6.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`6.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`6.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`6.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item2">
      <MemberSignature Language="C#" Value="public T2 Item2 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T2 Item2" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`6.Item2" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item2 As T2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T2 Item2 { T2 get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9162b-157">取得目前 <see cref="T:System.Tuple`6" /> 物件之第二個元件的值。</span><span class="sxs-lookup"><span data-stu-id="9162b-157">Gets the value of the current <see cref="T:System.Tuple`6" /> object's second component.</span></span></summary>
        <value><span data-ttu-id="9162b-158">目前 <see cref="T:System.Tuple`6" /> 物件之第二個元件的值。</span><span class="sxs-lookup"><span data-stu-id="9162b-158">The value of the current <see cref="T:System.Tuple`6" /> object's second component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9162b-159">您可以動態決定的型別<xref:System.Tuple%606.Item2%2A>元件中有兩種：</span><span class="sxs-lookup"><span data-stu-id="9162b-159">You can dynamically determine the type of the <xref:System.Tuple%606.Item2%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="9162b-160">藉由呼叫`GetType`方法所傳回的值<xref:System.Tuple%606.Item2%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="9162b-160">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%606.Item2%2A> property.</span></span>  
  
-   <span data-ttu-id="9162b-161">藉由擷取<xref:System.Type>物件，代表<xref:System.Tuple%606>物件，並擷取第一個項目所傳回的陣列從其<xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="9162b-161">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%606> object, and retrieving the first element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9162b-162">下列範例會定義陣列<xref:System.Tuple%606>元件到 2000年 1960年從包含三個美國城市 （「 紐約 」、 「 芝加哥和 「 洛杉磯 」） 的母體擴展資料物件。</span><span class="sxs-lookup"><span data-stu-id="9162b-162">The following example defines an array of <xref:System.Tuple%606> objects whose components contain population data for three U.S. cities (New York, Chicago, and Los Angeles) from 1960 through 2000.</span></span> <span data-ttu-id="9162b-163">然後，它會顯示一份列出的資料。</span><span class="sxs-lookup"><span data-stu-id="9162b-163">It then displays a table that lists the data.</span></span> <span data-ttu-id="9162b-164">若要顯示在 1960年母體擴展，它會擷取的值<xref:System.Tuple%606.Item2%2A>每個屬性<xref:System.Tuple%606>物件。</span><span class="sxs-lookup"><span data-stu-id="9162b-164">To display the population in 1960, it retrieves the value of the <xref:System.Tuple%606.Item2%2A> property for each <xref:System.Tuple%606> object.</span></span>  
  
 [!code-csharp[System.Tuple\`6.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`6.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`6.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`6.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item3">
      <MemberSignature Language="C#" Value="public T3 Item3 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T3 Item3" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`6.Item3" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item3 As T3" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T3 Item3 { T3 get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T3</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9162b-165">取得目前 <see cref="T:System.Tuple`6" /> 物件之第三個元件的值。</span><span class="sxs-lookup"><span data-stu-id="9162b-165">Gets the value of the current <see cref="T:System.Tuple`6" /> object's third component.</span></span></summary>
        <value><span data-ttu-id="9162b-166">目前 <see cref="T:System.Tuple`6" /> 物件之第三個元件的值。</span><span class="sxs-lookup"><span data-stu-id="9162b-166">The value of the current <see cref="T:System.Tuple`6" /> object's third component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9162b-167">您可以動態決定的型別<xref:System.Tuple%606.Item3%2A>元件中有兩種：</span><span class="sxs-lookup"><span data-stu-id="9162b-167">You can dynamically determine the type of the <xref:System.Tuple%606.Item3%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="9162b-168">藉由呼叫`GetType`方法所傳回的值<xref:System.Tuple%606.Item3%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="9162b-168">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%606.Item3%2A> property.</span></span>  
  
-   <span data-ttu-id="9162b-169">藉由擷取<xref:System.Type>物件，代表<xref:System.Tuple%606>物件，並擷取第一個項目所傳回的陣列從其<xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="9162b-169">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%606> object, and retrieving the first element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9162b-170">下列範例會定義陣列<xref:System.Tuple%606>元件到 2000年 1960年從包含三個美國城市 （「 紐約 」、 「 芝加哥和 「 洛杉磯 」） 的母體擴展資料物件。</span><span class="sxs-lookup"><span data-stu-id="9162b-170">The following example defines an array of <xref:System.Tuple%606> objects whose components contain population data for three U.S. cities (New York, Chicago, and Los Angeles) from 1960 through 2000.</span></span> <span data-ttu-id="9162b-171">然後，它會顯示一份列出的資料。</span><span class="sxs-lookup"><span data-stu-id="9162b-171">It then displays a table that lists the data.</span></span> <span data-ttu-id="9162b-172">若要顯示在 1970年母體擴展，它會擷取的值<xref:System.Tuple%606.Item3%2A>每個屬性<xref:System.Tuple%606>物件。</span><span class="sxs-lookup"><span data-stu-id="9162b-172">To display the population in 1970, it retrieves the value of the <xref:System.Tuple%606.Item3%2A> property for each <xref:System.Tuple%606> object.</span></span>  
  
 [!code-csharp[System.Tuple\`6.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`6.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`6.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`6.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item4">
      <MemberSignature Language="C#" Value="public T4 Item4 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T4 Item4" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`6.Item4" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item4 As T4" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T4 Item4 { T4 get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T4</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9162b-173">取得目前 <see cref="T:System.Tuple`6" /> 物件之第四個元件的值。</span><span class="sxs-lookup"><span data-stu-id="9162b-173">Gets the value of the current <see cref="T:System.Tuple`6" /> object's fourth component.</span></span></summary>
        <value><span data-ttu-id="9162b-174">目前 <see cref="T:System.Tuple`6" /> 物件之第四個元件的值。</span><span class="sxs-lookup"><span data-stu-id="9162b-174">The value of the current <see cref="T:System.Tuple`6" /> object's fourth component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9162b-175">您可以動態決定的型別<xref:System.Tuple%606.Item4%2A>元件中有兩種：</span><span class="sxs-lookup"><span data-stu-id="9162b-175">You can dynamically determine the type of the <xref:System.Tuple%606.Item4%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="9162b-176">藉由呼叫`GetType`方法所傳回的值<xref:System.Tuple%606.Item4%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="9162b-176">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%606.Item4%2A> property.</span></span>  
  
-   <span data-ttu-id="9162b-177">藉由擷取<xref:System.Type>物件，代表<xref:System.Tuple%606>物件，並擷取第一個項目所傳回的陣列從其<xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="9162b-177">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%606> object, and retrieving the first element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9162b-178">下列範例會定義陣列<xref:System.Tuple%606>元件到 2000年 1960年從包含三個美國城市 （「 紐約 」、 「 芝加哥和 「 洛杉磯 」） 的母體擴展資料物件。</span><span class="sxs-lookup"><span data-stu-id="9162b-178">The following example defines an array of <xref:System.Tuple%606> objects whose components contain population data for three U.S. cities (New York, Chicago, and Los Angeles) from 1960 through 2000.</span></span> <span data-ttu-id="9162b-179">然後，它會顯示一份列出的資料。</span><span class="sxs-lookup"><span data-stu-id="9162b-179">It then displays a table that lists the data.</span></span> <span data-ttu-id="9162b-180">若要顯示在 1980年母體擴展，它會擷取的值<xref:System.Tuple%606.Item4%2A>每個屬性<xref:System.Tuple%606>物件。</span><span class="sxs-lookup"><span data-stu-id="9162b-180">To display the population in 1980, it retrieves the value of the <xref:System.Tuple%606.Item4%2A> property for each <xref:System.Tuple%606> object.</span></span>  
  
 [!code-csharp[System.Tuple\`6.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`6.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`6.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`6.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item5">
      <MemberSignature Language="C#" Value="public T5 Item5 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T5 Item5" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`6.Item5" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item5 As T5" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T5 Item5 { T5 get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T5</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9162b-181">取得目前 <see cref="T:System.Tuple`6" /> 物件之第五個元件的值。</span><span class="sxs-lookup"><span data-stu-id="9162b-181">Gets the value of the current <see cref="T:System.Tuple`6" /> object's fifth component.</span></span></summary>
        <value><span data-ttu-id="9162b-182">目前的值<see cref="T:System.Tuple`6" />物件的第五個元件。</span><span class="sxs-lookup"><span data-stu-id="9162b-182">The value of the current <see cref="T:System.Tuple`6" /> object's fifth  component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9162b-183">您可以動態決定的型別<xref:System.Tuple%606.Item5%2A>元件中有兩種：</span><span class="sxs-lookup"><span data-stu-id="9162b-183">You can dynamically determine the type of the <xref:System.Tuple%606.Item5%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="9162b-184">藉由呼叫`GetType`方法所傳回的值<xref:System.Tuple%606.Item5%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="9162b-184">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%606.Item5%2A> property.</span></span>  
  
-   <span data-ttu-id="9162b-185">藉由擷取<xref:System.Type>物件，代表<xref:System.Tuple%606>物件，並擷取第一個項目所傳回的陣列從其<xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="9162b-185">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%606> object, and retrieving the first element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9162b-186">下列範例會定義陣列<xref:System.Tuple%606>元件到 2000年 1960年從包含三個美國城市 （「 紐約 」、 「 芝加哥和 「 洛杉磯 」） 的母體擴展資料物件。</span><span class="sxs-lookup"><span data-stu-id="9162b-186">The following example defines an array of <xref:System.Tuple%606> objects whose components contain population data for three U.S. cities (New York, Chicago, and Los Angeles) from 1960 through 2000.</span></span> <span data-ttu-id="9162b-187">然後，它會顯示一份列出的資料。</span><span class="sxs-lookup"><span data-stu-id="9162b-187">It then displays a table that lists the data.</span></span> <span data-ttu-id="9162b-188">若要顯示在 1990年母體擴展，它會擷取的值<xref:System.Tuple%606.Item5%2A>每個屬性<xref:System.Tuple%606>物件。</span><span class="sxs-lookup"><span data-stu-id="9162b-188">To display the population in 1990, it retrieves the value of the <xref:System.Tuple%606.Item5%2A> property for each <xref:System.Tuple%606> object.</span></span>  
  
 [!code-csharp[System.Tuple\`6.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`6.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`6.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`6.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item6">
      <MemberSignature Language="C#" Value="public T6 Item6 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T6 Item6" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`6.Item6" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item6 As T6" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T6 Item6 { T6 get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T6</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9162b-189">取得目前 <see cref="T:System.Tuple`6" /> 物件之第六個元件的值。</span><span class="sxs-lookup"><span data-stu-id="9162b-189">Gets the value of the current <see cref="T:System.Tuple`6" /> object's sixth component.</span></span></summary>
        <value><span data-ttu-id="9162b-190">目前 <see cref="T:System.Tuple`6" /> 物件之第六個元件的值。</span><span class="sxs-lookup"><span data-stu-id="9162b-190">The value of the current <see cref="T:System.Tuple`6" /> object's sixth component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9162b-191">您可以動態決定的型別<xref:System.Tuple%606.Item6%2A>元件中有兩種：</span><span class="sxs-lookup"><span data-stu-id="9162b-191">You can dynamically determine the type of the <xref:System.Tuple%606.Item6%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="9162b-192">藉由呼叫`GetType`方法所傳回的值<xref:System.Tuple%606.Item6%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="9162b-192">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%606.Item6%2A> property.</span></span>  
  
-   <span data-ttu-id="9162b-193">藉由擷取<xref:System.Type>物件，代表<xref:System.Tuple%606>物件，並擷取第一個項目所傳回的陣列從其<xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="9162b-193">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%606> object, and retrieving the first element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9162b-194">下列範例會定義陣列<xref:System.Tuple%606>元件到 2000年 1960年從包含三個美國城市 （「 紐約 」、 「 芝加哥和 「 洛杉磯 」） 的母體擴展資料物件。</span><span class="sxs-lookup"><span data-stu-id="9162b-194">The following example defines an array of <xref:System.Tuple%606> objects whose components contain population data for three U.S. cities (New York, Chicago, and Los Angeles) from 1960 through 2000.</span></span> <span data-ttu-id="9162b-195">然後，它會顯示一份列出的資料。</span><span class="sxs-lookup"><span data-stu-id="9162b-195">It then displays a table that lists the data.</span></span> <span data-ttu-id="9162b-196">若要顯示在 2000年中的母體擴展，它會擷取的值<xref:System.Tuple%606.Item6%2A>每個屬性<xref:System.Tuple%606>物件。</span><span class="sxs-lookup"><span data-stu-id="9162b-196">To display the population in 2000, it retrieves the value of the <xref:System.Tuple%606.Item6%2A> property for each <xref:System.Tuple%606> object.</span></span>  
  
 [!code-csharp[System.Tuple\`6.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`6.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`6.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`6.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IStructuralComparable.CompareTo (object other, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IStructuralComparable.CompareTo(object other, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`6.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (other As Object, comparer As IComparer) As Integer Implements IStructuralComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IStructuralComparable.CompareTo(System::Object ^ other, System::Collections::IComparer ^ comparer) = System::Collections::IStructuralComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralComparable.CompareTo(System.Object,System.Collections.IComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="9162b-197">要與目前執行個體比較的物件。</span><span class="sxs-lookup"><span data-stu-id="9162b-197">An object to compare with the current instance.</span></span></param>
        <param name="comparer"><span data-ttu-id="9162b-198">提供自訂規則進行比較的物件。</span><span class="sxs-lookup"><span data-stu-id="9162b-198">An object that provides custom rules for comparison.</span></span></param>
        <summary><span data-ttu-id="9162b-199">使用指定的比較子將目前的 <see cref="T:System.Tuple`6" /> 物件和指定的物件進行比較，並且傳回一個整數，表示目前的物件在排序順序中位於指定之物件的前面、後面還是相的位置。</span><span class="sxs-lookup"><span data-stu-id="9162b-199">Compares the current <see cref="T:System.Tuple`6" /> object to a specified object by using a specified comparer and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.</span></span></summary>
        <returns><span data-ttu-id="9162b-200">帶正負號的整數，可指出此執行個體以及排序次序中 <paramref name="other" /> 的相對位置，如下表所示。</span><span class="sxs-lookup"><span data-stu-id="9162b-200">A signed integer that indicates the relative position of this instance and <paramref name="other" /> in the sort order, as shown in the following table.</span></span>  
  
 <span data-ttu-id="9162b-201"><list type="table"><listheader><term> 值</span><span class="sxs-lookup"><span data-stu-id="9162b-201"><list type="table"><listheader><term> Value</span></span>  
  
 <span data-ttu-id="9162b-202"></term><description> 描述</span><span class="sxs-lookup"><span data-stu-id="9162b-202"></term><description> Description</span></span>  
  
 <span data-ttu-id="9162b-203"></description></listheader><item><term> 負整數</span><span class="sxs-lookup"><span data-stu-id="9162b-203"></description></listheader><item><term> A negative integer</span></span>  
  
 <span data-ttu-id="9162b-204"></term><description>這個執行個體位於 <paramref name="other" /> 之前。</span><span class="sxs-lookup"><span data-stu-id="9162b-204"></term><description> This instance precedes <paramref name="other" />.</span></span>  
  
 <span data-ttu-id="9162b-205"></description></item><item><term> 零</span><span class="sxs-lookup"><span data-stu-id="9162b-205"></description></item><item><term> Zero</span></span>  
  
 <span data-ttu-id="9162b-206"></term><description>這個執行個體和 <paramref name="other" /> 的排序位置相同。</span><span class="sxs-lookup"><span data-stu-id="9162b-206"></term><description> This instance and <paramref name="other" /> have the same position in the sort order.</span></span>  
  
 <span data-ttu-id="9162b-207"></description></item><item><term>正整數</span><span class="sxs-lookup"><span data-stu-id="9162b-207"></description></item><item><term> A positive integer</span></span>  
  
 <span data-ttu-id="9162b-208"></term><description>這個執行個體位於 <paramref name="other" /> 之後。</span><span class="sxs-lookup"><span data-stu-id="9162b-208"></term><description> This instance follows <paramref name="other" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9162b-209">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="9162b-209">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9162b-210">只有在 <xref:System.Tuple%606> 執行個體轉換成 <xref:System.Collections.IStructuralComparable> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="9162b-210">It can be used only when the <xref:System.Tuple%606> instance is cast to an <xref:System.Collections.IStructuralComparable> interface.</span></span>  
  
 <span data-ttu-id="9162b-211">這個方法可讓您定義的自訂的比較<xref:System.Tuple%606>物件。</span><span class="sxs-lookup"><span data-stu-id="9162b-211">This method lets you define customized comparisons of <xref:System.Tuple%606> objects.</span></span> <span data-ttu-id="9162b-212">例如，您可以使用這個方法，以順序<xref:System.Tuple%606>物件為基礎的特定元件的值。</span><span class="sxs-lookup"><span data-stu-id="9162b-212">For example, you can use this method to order <xref:System.Tuple%606> objects based on the value of a specific component.</span></span>  
  
 <span data-ttu-id="9162b-213">雖然可以直接呼叫這個方法，它會最常呼叫集合排序方法，包含了<xref:System.Collections.IComparer>參數來排序集合的成員。</span><span class="sxs-lookup"><span data-stu-id="9162b-213">Although this method can be called directly, it is most commonly called by collection-sorting methods that include <xref:System.Collections.IComparer> parameters to order the members of a collection.</span></span> <span data-ttu-id="9162b-214">例如，由呼叫<xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType>方法和<xref:System.Collections.SortedList.Add%2A>方法<xref:System.Collections.SortedList>具現化所使用的物件<xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=nameWithType>建構函式。</span><span class="sxs-lookup"><span data-stu-id="9162b-214">For example, it is called by the <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> method and the <xref:System.Collections.SortedList.Add%2A> method of a <xref:System.Collections.SortedList> object that is instantiated by using the <xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=nameWithType> constructor.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="9162b-215"><xref:System.Tuple%606.System%23Collections%23IStructuralComparable%23CompareTo%2A>方法僅供用於排序作業。</span><span class="sxs-lookup"><span data-stu-id="9162b-215">The <xref:System.Tuple%606.System%23Collections%23IStructuralComparable%23CompareTo%2A> method is intended for use in sorting operations.</span></span> <span data-ttu-id="9162b-216">此外，它不應該使用時比較的主要目的是要判斷兩個物件是否相等。</span><span class="sxs-lookup"><span data-stu-id="9162b-216">It should not be used when the primary purpose of a comparison is to determine whether two objects are equal.</span></span> <span data-ttu-id="9162b-217">若要判斷兩個物件是否相等，請呼叫<xref:System.Tuple%606.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29>方法。</span><span class="sxs-lookup"><span data-stu-id="9162b-217">To determine whether two objects are equal, call the <xref:System.Tuple%606.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9162b-218">下列範例會建立的陣列<xref:System.Tuple%606>包含三個美國城市 1960年從 2000 的母體擴展資料的物件。</span><span class="sxs-lookup"><span data-stu-id="9162b-218">The following example creates an array of <xref:System.Tuple%606> objects that contains population data for three U.S. cities from 1960 to 2000.</span></span> <span data-ttu-id="9162b-219">6-tuple 的第一個元件是城市名稱。</span><span class="sxs-lookup"><span data-stu-id="9162b-219">The sextuple's first component is the city name.</span></span> <span data-ttu-id="9162b-220">其餘的五個元件代表 2000年 1960年從 10 年的間隔母體擴展。</span><span class="sxs-lookup"><span data-stu-id="9162b-220">The remaining five components represent the population at 10-year intervals from 1960 to 2000.</span></span>  
  
 <span data-ttu-id="9162b-221">`PopulationComparer`類別提供<xref:System.Collections.IComparer>實作，可讓 sextuples 排序任何一種及其元件的陣列。</span><span class="sxs-lookup"><span data-stu-id="9162b-221">The `PopulationComparer` class provides an <xref:System.Collections.IComparer> implementation that allows the array of sextuples to be sorted by any one of its components.</span></span> <span data-ttu-id="9162b-222">兩個值提供給`PopulationComparer`其建構函式中的類別： 定義排序次序中，元件的位置和<xref:System.Boolean>值，指出是否應該以遞增或遞減順序排序的 tuple 物件。</span><span class="sxs-lookup"><span data-stu-id="9162b-222">Two values are provided to the `PopulationComparer` class in its constructor: The position of the component that defines the sort order, and a <xref:System.Boolean> value that indicates whether the tuple objects should be sorted in ascending or descending order.</span></span>  
  
 <span data-ttu-id="9162b-223">此範例會顯示未排序的順序陣列中的項目、 依第三個元件 （1970年中母體擴展） 和顯示它們，並再依第六個元件 （2000年中母體擴展） 並加以顯示。</span><span class="sxs-lookup"><span data-stu-id="9162b-223">The example then displays the elements in the array in unsorted order, sorts them by the third component (the population in 1970) and displays them, and then sorts them by the sixth component (the population in 2000) and displays them.</span></span>  
  
 [!code-csharp[System.Tuple\`6.CompareTo#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`6.compareto/cs/compareto2.cs#2)]
 [!code-vb[System.Tuple\`6.CompareTo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`6.compareto/vb/compareto2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9162b-224"><paramref name="other" /> 不是 <see cref="T:System.Tuple`6" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="9162b-224"><paramref name="other" /> is not a <see cref="T:System.Tuple`6" /> object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralEquatable.Equals">
      <MemberSignature Language="C#" Value="bool IStructuralEquatable.Equals (object other, System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IStructuralEquatable.Equals(object other, class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`6.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Function Equals (other As Object, comparer As IEqualityComparer) As Boolean Implements IStructuralEquatable.Equals" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IStructuralEquatable.Equals(System::Object ^ other, System::Collections::IEqualityComparer ^ comparer) = System::Collections::IStructuralEquatable::Equals;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="9162b-225">與這個執行個體相互比較的物件。</span><span class="sxs-lookup"><span data-stu-id="9162b-225">The object to compare with this instance.</span></span></param>
        <param name="comparer"><span data-ttu-id="9162b-226">物件，定義要用來評估這兩個物件是否相等的方法。</span><span class="sxs-lookup"><span data-stu-id="9162b-226">An object that defines the method to use to evaluate whether the two objects are equal.</span></span></param>
        <summary><span data-ttu-id="9162b-227">傳回值，這個值表示依據指定的比較方法，目前的 <see cref="T:System.Tuple`6" /> 物件是否等於指定的物件。</span><span class="sxs-lookup"><span data-stu-id="9162b-227">Returns a value that indicates whether the current <see cref="T:System.Tuple`6" /> object is equal to a specified object based on a specified comparison method.</span></span></summary>
        <returns>
          <span data-ttu-id="9162b-228">如果目前的執行個體和指定的物件相等，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="9162b-228"><see langword="true" /> if the current instance is equal to the specified object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9162b-229">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="9162b-229">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9162b-230">只有在 <xref:System.Tuple%606> 執行個體轉換成 <xref:System.Collections.IStructuralEquatable> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="9162b-230">It can be used only when the <xref:System.Tuple%606> instance is cast to an <xref:System.Collections.IStructuralEquatable> interface.</span></span>  
  
 <span data-ttu-id="9162b-231"><xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType>才呼叫實作`other`不`null`，而且如果它可以是成功轉換 （C# 中） 或 （在 Visual Basic) 轉換成<xref:System.Tuple%606>其元件是相同的類型與目前的執行個體的物件。</span><span class="sxs-lookup"><span data-stu-id="9162b-231">The <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> implementation is called only if `other` is not `null`, and if it can be successfully cast (in C#) or converted (in Visual Basic) to a <xref:System.Tuple%606> object whose components are of the same types as the current instance.</span></span> <span data-ttu-id="9162b-232"><xref:System.Tuple%606.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29>方法的第一個階段<xref:System.Tuple%606.Item1%2A>值<xref:System.Tuple%606>要比較的物件<xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType>實作。</span><span class="sxs-lookup"><span data-stu-id="9162b-232">The <xref:System.Tuple%606.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29> method first passes the <xref:System.Tuple%606.Item1%2A> values of the <xref:System.Tuple%606> objects to be compared to the <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> implementation.</span></span> <span data-ttu-id="9162b-233">如果這個方法呼叫傳回`true`，方法是呼叫一次，並傳遞<xref:System.Tuple%606.Item2%2A>兩個值<xref:System.Tuple%606>物件。</span><span class="sxs-lookup"><span data-stu-id="9162b-233">If this method call returns `true`, the method is called again and passed the <xref:System.Tuple%606.Item2%2A> values of the two <xref:System.Tuple%606> objects.</span></span> <span data-ttu-id="9162b-234">這會繼續執行直到方法呼叫傳回`false`時，它會比較一組特定`Item`值或兩個<xref:System.Tuple%606.Item6%2A>值會傳遞至方法。</span><span class="sxs-lookup"><span data-stu-id="9162b-234">This continues until the method call returns `false` when it compares a specific pair of `Item` values, or the two <xref:System.Tuple%606.Item6%2A> values are passed to the method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9162b-235">下列範例會定義`RateComparer`類別，執行自訂測試是否相等。</span><span class="sxs-lookup"><span data-stu-id="9162b-235">The following example defines a `RateComparer` class that performs a custom test for equality.</span></span> <span data-ttu-id="9162b-236">如果值傳遞至其<xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType>方法屬於類型<xref:System.Single>或<xref:System.Double>，使用只有最多三個小數的數字的方法會測試是否相等。</span><span class="sxs-lookup"><span data-stu-id="9162b-236">If the values that are passed to its <xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType> method are of type <xref:System.Single> or <xref:System.Double>, the method tests for equality by using only up to three fractional digits.</span></span> <span data-ttu-id="9162b-237">否則，它只會呼叫`x`參數的`Equals`方法。</span><span class="sxs-lookup"><span data-stu-id="9162b-237">Otherwise, it simply calls the `x` parameter's `Equals` method.</span></span> <span data-ttu-id="9162b-238">此範例會使用此<xref:System.Collections.IEqualityComparer>實作，以判斷是否有四個<xref:System.Tuple%606>包含 1960年到 2000年之間的母體擴展變動率的資料的物件是否相等。</span><span class="sxs-lookup"><span data-stu-id="9162b-238">The example uses this <xref:System.Collections.IEqualityComparer> implementation to determine whether four <xref:System.Tuple%606> objects that contain data on the rate of population change between 1960 and 2000 are equal.</span></span>  
  
 [!code-csharp[System.Tuple\`6.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`6.equals/cs/equals2.cs#2)]
 [!code-vb[System.Tuple\`6.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`6.equals/vb/equals2.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralEquatable.GetHashCode">
      <MemberSignature Language="C#" Value="int IStructuralEquatable.GetHashCode (System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IStructuralEquatable.GetHashCode(class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`6.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Function GetHashCode (comparer As IEqualityComparer) As Integer Implements IStructuralEquatable.GetHashCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IStructuralEquatable.GetHashCode(System::Collections::IEqualityComparer ^ comparer) = System::Collections::IStructuralEquatable::GetHashCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="comparer"><span data-ttu-id="9162b-239">其 <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> 方法可以計算目前 <see cref="T:System.Tuple`6" /> 物件之雜湊碼的物件。</span><span class="sxs-lookup"><span data-stu-id="9162b-239">An object whose <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> method calculates the hash code of the current <see cref="T:System.Tuple`6" /> object.</span></span></param>
        <summary><span data-ttu-id="9162b-240">使用指定的計算方法，計算目前 <see cref="T:System.Tuple`6" /> 物件的雜湊碼。</span><span class="sxs-lookup"><span data-stu-id="9162b-240">Calculates the hash code for the current <see cref="T:System.Tuple`6" /> object by using a specified computation method.</span></span></summary>
        <returns><span data-ttu-id="9162b-241">32 位元帶正負號的整數雜湊碼。</span><span class="sxs-lookup"><span data-stu-id="9162b-241">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9162b-242">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="9162b-242">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9162b-243">只有在 <xref:System.Tuple%606> 執行個體轉換成 <xref:System.Collections.IStructuralEquatable> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="9162b-243">It can be used only when the <xref:System.Tuple%606> instance is cast to an <xref:System.Collections.IStructuralEquatable> interface.</span></span>  
  
 <span data-ttu-id="9162b-244">方法只會包裝呼叫`comparer`物件的<xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=nameWithType>實作。</span><span class="sxs-lookup"><span data-stu-id="9162b-244">The method simply wraps a call to the `comparer` object's <xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=nameWithType> implementation.</span></span>  
  
 <span data-ttu-id="9162b-245">用來計算雜湊程式碼的演算法應該會傳回相同的雜湊程式碼，其中兩個<xref:System.Tuple%606>會被視為相等的物件。</span><span class="sxs-lookup"><span data-stu-id="9162b-245">The algorithm used to compute the hash code should return the same hash code for two <xref:System.Tuple%606> objects that are considered to be equal.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`6.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (obj As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ obj) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="9162b-246">要與目前執行個體比較的物件。</span><span class="sxs-lookup"><span data-stu-id="9162b-246">An object to compare with the current instance.</span></span></param>
        <summary><span data-ttu-id="9162b-247">將目前的 <see cref="T:System.Tuple`6" /> 物件與指定的物件比較，並傳回可指出目前物件在排序次序中，是否在指定物件之前、之後或者相同之位置的整數。</span><span class="sxs-lookup"><span data-stu-id="9162b-247">Compares the current <see cref="T:System.Tuple`6" /> object to a specified object and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.</span></span></summary>
        <returns><span data-ttu-id="9162b-248">帶正負號的整數，可指出此執行個體以及排序次序中 <paramref name="obj" /> 的相對位置，如下表所示。</span><span class="sxs-lookup"><span data-stu-id="9162b-248">A signed integer that indicates the relative position of this instance and <paramref name="obj" /> in the sort order, as shown in the following table.</span></span>  
  
 <span data-ttu-id="9162b-249"><list type="table"><listheader><term> 值</span><span class="sxs-lookup"><span data-stu-id="9162b-249"><list type="table"><listheader><term> Value</span></span>  
  
 <span data-ttu-id="9162b-250"></term><description> 描述</span><span class="sxs-lookup"><span data-stu-id="9162b-250"></term><description> Description</span></span>  
  
 <span data-ttu-id="9162b-251"></description></listheader><item><term> 負整數</span><span class="sxs-lookup"><span data-stu-id="9162b-251"></description></listheader><item><term> A negative integer</span></span>  
  
 <span data-ttu-id="9162b-252"></term><description>這個執行個體位於 <paramref name="obj" /> 之前。</span><span class="sxs-lookup"><span data-stu-id="9162b-252"></term><description> This instance precedes <paramref name="obj" />.</span></span>  
  
 <span data-ttu-id="9162b-253"></description></item><item><term> 零</span><span class="sxs-lookup"><span data-stu-id="9162b-253"></description></item><item><term> Zero</span></span>  
  
 <span data-ttu-id="9162b-254"></term><description>這個執行個體和 <paramref name="obj" /> 的排序位置相同。</span><span class="sxs-lookup"><span data-stu-id="9162b-254"></term><description> This instance and <paramref name="obj" /> have the same position in the sort order.</span></span>  
  
 <span data-ttu-id="9162b-255"></description></item><item><term>正整數</span><span class="sxs-lookup"><span data-stu-id="9162b-255"></description></item><item><term> A positive integer</span></span>  
  
 <span data-ttu-id="9162b-256"></term><description>這個執行個體位於 <paramref name="obj" /> 之後。</span><span class="sxs-lookup"><span data-stu-id="9162b-256"></term><description> This instance follows <paramref name="obj" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9162b-257">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="9162b-257">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9162b-258">只有在 <xref:System.Tuple%606> 執行個體轉換成 <xref:System.IComparable> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="9162b-258">It can be used only when the <xref:System.Tuple%606> instance is cast to an <xref:System.IComparable> interface.</span></span>  
  
 <span data-ttu-id="9162b-259">這個方法會提供<xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType>實作<xref:System.Tuple%606>類別。</span><span class="sxs-lookup"><span data-stu-id="9162b-259">This method provides the <xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType> implementation for the <xref:System.Tuple%606> class.</span></span> <span data-ttu-id="9162b-260">雖然可以直接呼叫的方法，但是最常呼叫此方法的集合排序的預設多載方法，例如<xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType>和<xref:System.Collections.SortedList.Add%2A?displayProperty=nameWithType>，若要排序之集合的成員。</span><span class="sxs-lookup"><span data-stu-id="9162b-260">Although the method can be called directly, it is most commonly called by the default overloads of collection-sorting methods, such as <xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType> and <xref:System.Collections.SortedList.Add%2A?displayProperty=nameWithType>, to order the members of a collection.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="9162b-261"><xref:System.Tuple%606.System%23IComparable%23CompareTo%2A>方法僅供用於排序作業。</span><span class="sxs-lookup"><span data-stu-id="9162b-261">The <xref:System.Tuple%606.System%23IComparable%23CompareTo%2A> method is intended for use in sorting operations.</span></span> <span data-ttu-id="9162b-262">此外，它不應該使用時比較的主要目的是要判斷兩個物件是否相等。</span><span class="sxs-lookup"><span data-stu-id="9162b-262">It should not be used when the primary purpose of a comparison is to determine whether two objects are equal.</span></span> <span data-ttu-id="9162b-263">若要判斷兩個物件是否相等，請呼叫<xref:System.Tuple%606.Equals%28System.Object%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="9162b-263">To determine whether two objects are equal, call the <xref:System.Tuple%606.Equals%28System.Object%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="9162b-264"><xref:System.Tuple%606.System%23IComparable%23CompareTo%28System.Object%29>方法使用的預設物件的比較子來比較每個元件。</span><span class="sxs-lookup"><span data-stu-id="9162b-264">The <xref:System.Tuple%606.System%23IComparable%23CompareTo%28System.Object%29> method uses the default object comparer to compare each component.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9162b-265">下列範例會建立的陣列<xref:System.Tuple%606>包含 1960年從 2000年到美國的三個城市的人口資料的物件。</span><span class="sxs-lookup"><span data-stu-id="9162b-265">The following example creates an array of <xref:System.Tuple%606> objects that contain population data for three cities in the United States from 1960 to 2000.</span></span> <span data-ttu-id="9162b-266">6 個元件組成縣 （市） 名稱後面加上 10 年的間隔的城市的人口數從 1960年為 2000年。</span><span class="sxs-lookup"><span data-stu-id="9162b-266">The six components consist of the city name followed by the city's population at 10-year intervals from 1960 to 2000.</span></span> <span data-ttu-id="9162b-267">此範例會顯示未排序的順序陣列中的每個 tuple 的元件，來排序陣列，然後呼叫<xref:System.Tuple%606.ToString%2A>方法，以顯示每個 tuple 中的排序的順序。</span><span class="sxs-lookup"><span data-stu-id="9162b-267">The example displays the components of each tuple in the array in unsorted order, sorts the array, and then calls the <xref:System.Tuple%606.ToString%2A> method to display each tuple in sorted order.</span></span> <span data-ttu-id="9162b-268">輸出會顯示名稱，也就是第一個元件的陣列，已排序。</span><span class="sxs-lookup"><span data-stu-id="9162b-268">The output shows that the array has been sorted by name, which is the first component.</span></span> <span data-ttu-id="9162b-269">請注意，此範例不會直接呼叫<xref:System.Tuple%606.System%23IComparable%23CompareTo%28System.Object%29>方法。</span><span class="sxs-lookup"><span data-stu-id="9162b-269">Note that the example does not directly call the <xref:System.Tuple%606.System%23IComparable%23CompareTo%28System.Object%29> method.</span></span> <span data-ttu-id="9162b-270">這個方法會隱含地呼叫<xref:System.Array.Sort%28System.Array%29>陣列中每個項目的方法。</span><span class="sxs-lookup"><span data-stu-id="9162b-270">This method is called implicitly by the <xref:System.Array.Sort%28System.Array%29> method for each element in the array.</span></span>  
  
 [!code-csharp[System.Tuple\`6.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`6.compareto/cs/compareto1.cs#1)]
 [!code-vb[System.Tuple\`6.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`6.compareto/vb/compareto1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9162b-271"><paramref name="obj" /> 不是 <see cref="T:System.Tuple`6" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="9162b-271"><paramref name="obj" /> is not a <see cref="T:System.Tuple`6" /> object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.CompilerServices.ITuple.Item">
      <MemberSignature Language="C#" Value="object System.Runtime.CompilerServices.ITuple.Item[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Runtime.CompilerServices.ITuple.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`6.System#Runtime#CompilerServices#ITuple#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Item(index As Integer) As Object Implements ITuple.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Runtime.CompilerServices.ITuple.Item[int] { System::Object ^ get(int index); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.CompilerServices.ITuple.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="9162b-272">指定的 <see langword="Tuple" /> 項目索引。</span><span class="sxs-lookup"><span data-stu-id="9162b-272">The index of the specified <see langword="Tuple" /> element.</span></span> <span data-ttu-id="9162b-273"><c>index</c> 的範圍可以從 0 到 5。</span><span class="sxs-lookup"><span data-stu-id="9162b-273"><c>index</c> can range from 0 to 5.</span></span></param>
        <summary><span data-ttu-id="9162b-274">取得指定的 <see langword="Tuple" /> 項目值。</span><span class="sxs-lookup"><span data-stu-id="9162b-274">Gets the value of the specified <see langword="Tuple" /> element.</span></span></summary>
        <value><span data-ttu-id="9162b-275">位在指定位置的 <see langword="Tuple" /> 項目值。</span><span class="sxs-lookup"><span data-stu-id="9162b-275">The value of the <see langword="Tuple" /> element at the specified position.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9162b-276"><xref:System.Tuple%606.System%23Runtime%23CompilerServices%23ITuple%23Item%2A?displayProperty=nameWithType>屬性是明確介面實作。</span><span class="sxs-lookup"><span data-stu-id="9162b-276">The <xref:System.Tuple%606.System%23Runtime%23CompilerServices%23ITuple%23Item%2A?displayProperty=nameWithType> property is an explicit interface implementation.</span></span> <span data-ttu-id="9162b-277">若要呼叫它，您必須決定要轉型或轉換<xref:System.Tuple%606>物件<xref:System.Runtime.CompilerServices.ITuple>介面物件。</span><span class="sxs-lookup"><span data-stu-id="9162b-277">To call it, you must cast or convert the <xref:System.Tuple%606> object to an <xref:System.Runtime.CompilerServices.ITuple> interface object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="9162b-278"><paramref name="index" /> 小於 0 或大於 5。</span><span class="sxs-lookup"><span data-stu-id="9162b-278"><paramref name="index" /> is less than 0 or greater than 5.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.CompilerServices.ITuple.Length">
      <MemberSignature Language="C#" Value="int System.Runtime.CompilerServices.ITuple.Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Runtime.CompilerServices.ITuple.Length" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`6.System#Runtime#CompilerServices#ITuple#Length" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Length As Integer Implements ITuple.Length" />
      <MemberSignature Language="C++ CLI" Value="property int System.Runtime.CompilerServices.ITuple.Length { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.CompilerServices.ITuple.Length</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9162b-279">取得 <see langword="Tuple" /> 中的項目數目。</span><span class="sxs-lookup"><span data-stu-id="9162b-279">Gets the number of elements in the <see langword="Tuple" />.</span></span></summary>
        <value><span data-ttu-id="9162b-280">6，<see cref="T:System.Tuple`6" /> 物件中的項目數目。</span><span class="sxs-lookup"><span data-stu-id="9162b-280">6, the number of elements in a <see cref="T:System.Tuple`6" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9162b-281"><xref:System.Tuple%606.System%23Runtime%23CompilerServices%23ITuple%23Length%2A>屬性是明確介面實作。</span><span class="sxs-lookup"><span data-stu-id="9162b-281">The <xref:System.Tuple%606.System%23Runtime%23CompilerServices%23ITuple%23Length%2A> property is an explicit interface implementation.</span></span> <span data-ttu-id="9162b-282">若要呼叫它，您必須決定要轉型或轉換<xref:System.Tuple%606>物件<xref:System.Runtime.CompilerServices.ITuple>介面物件。</span><span class="sxs-lookup"><span data-stu-id="9162b-282">To call it, you must cast or convert the <xref:System.Tuple%606> object to an <xref:System.Runtime.CompilerServices.ITuple> interface object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`6.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9162b-283">傳回字串，表示這個 <see cref="T:System.Tuple`6" /> 執行個體的值。</span><span class="sxs-lookup"><span data-stu-id="9162b-283">Returns a string that represents the value of this <see cref="T:System.Tuple`6" /> instance.</span></span></summary>
        <returns><span data-ttu-id="9162b-284">此 <see cref="T:System.Tuple`6" /> 物件的字串表示。</span><span class="sxs-lookup"><span data-stu-id="9162b-284">The string representation of this <see cref="T:System.Tuple`6" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9162b-285">這個方法所傳回的字串形式 (*Item1*， *Item2*， *Item3*， *Item4*， `Item5, Item6`)，其中*Item1*， *Item2*， *Item3*， *Item4*， *Item5*，和*Item6*代表的值<xref:System.Tuple%606.Item1%2A>， <xref:System.Tuple%606.Item2%2A>， <xref:System.Tuple%606.Item3%2A>， <xref:System.Tuple%606.Item4%2A>， <xref:System.Tuple%606.Item5%2A>，和<xref:System.Tuple%606.Item6%2A>屬性，分別。</span><span class="sxs-lookup"><span data-stu-id="9162b-285">The string returned by this method takes the form (*Item1*, *Item2*, *Item3*, *Item4*, `Item5, Item6`), where *Item1*, *Item2*, *Item3*, *Item4*, *Item5*, and *Item6* represent the values of the <xref:System.Tuple%606.Item1%2A>, <xref:System.Tuple%606.Item2%2A>, <xref:System.Tuple%606.Item3%2A>, <xref:System.Tuple%606.Item4%2A>, <xref:System.Tuple%606.Item5%2A>, and <xref:System.Tuple%606.Item6%2A> properties, respectively.</span></span> <span data-ttu-id="9162b-286">如果有任何屬性值為`null`，則會呈現為<xref:System.String.Empty?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="9162b-286">If any of the property values is `null`, it is represented as <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9162b-287">下列範例會定義<xref:System.Tuple%606>物件，其中包含的每個人口普查到 2000年 1960年從 New York City 母體擴展資料。</span><span class="sxs-lookup"><span data-stu-id="9162b-287">The following example defines a <xref:System.Tuple%606> object that contains population data for New York City for each census from 1960 through 2000.</span></span> <span data-ttu-id="9162b-288">6-tuple 元件接著會由呼叫<xref:System.Tuple%606.ToString%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="9162b-288">The components of the sextuple are then displayed by a call to the <xref:System.Tuple%606.ToString%2A> method.</span></span>  
  
 [!code-csharp[System.Tuple\`6.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`6.tostring/cs/tostring1.cs#1)]
 [!code-vb[System.Tuple\`6.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`6.tostring/vb/tostring1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>