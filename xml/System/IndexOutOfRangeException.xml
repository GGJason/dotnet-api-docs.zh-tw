<Type Name="IndexOutOfRangeException" FullName="System.IndexOutOfRangeException">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5d8fe7d4a73ee7c4e119ce51d0d38b262de5a544" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58745357" /></Metadata><TypeSignature Language="C#" Value="public sealed class IndexOutOfRangeException : SystemException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit IndexOutOfRangeException extends System.SystemException" />
  <TypeSignature Language="DocId" Value="T:System.IndexOutOfRangeException" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class IndexOutOfRangeException&#xA;Inherits SystemException" />
  <TypeSignature Language="C++ CLI" Value="public ref class IndexOutOfRangeException sealed : SystemException" />
  <TypeSignature Language="F#" Value="type IndexOutOfRangeException = class&#xA;    inherit SystemException" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.SystemException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="e8144-101">嘗試使用陣列或集合以外索引來存取陣列或集合項目時所擲回的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="e8144-101">The exception that is thrown when an attempt is made to access an element of an array or collection with an index that is outside its bounds.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8144-102"><xref:System.IndexOutOfRangeException>來存取陣列或集合的成員，或從特定位置在緩衝區中讀取或寫入使用無效的索引時，會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="e8144-102">An <xref:System.IndexOutOfRangeException> exception is thrown when an invalid index is used to access a member of an array or a collection, or to read or write from a particular location in a buffer.</span></span> <span data-ttu-id="e8144-103">這個例外狀況是繼承自<xref:System.Exception>類別而且會加入任何唯一的成員。</span><span class="sxs-lookup"><span data-stu-id="e8144-103">This exception  inherits from the <xref:System.Exception> class but adds no unique members.</span></span>  
  
 <span data-ttu-id="e8144-104">一般而言，<xref:System.IndexOutOfRangeException>因為開發人員錯誤而擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="e8144-104">Typically, an <xref:System.IndexOutOfRangeException> exception is thrown as a result of developer error.</span></span> <span data-ttu-id="e8144-105">而不是處理的例外狀況，您應該診斷錯誤的原因，並更正您的程式碼。</span><span class="sxs-lookup"><span data-stu-id="e8144-105">Instead of handling the exception, you should diagnose the cause of the error and correct your code.</span></span> <span data-ttu-id="e8144-106">錯誤的最常見原因包括：</span><span class="sxs-lookup"><span data-stu-id="e8144-106">The most common causes of the error are:</span></span>  
  
-   <span data-ttu-id="e8144-107">忘記的以零為起始的陣列或集合的上限其中一個小於其數字的成員或項目，如下列範例說明。</span><span class="sxs-lookup"><span data-stu-id="e8144-107">Forgetting that the upper bound of a collection or a zero-based array is one less than its number of members or elements, as the following example illustrates.</span></span>  
  
     [!code-csharp[System.IndexOutOfRangeException#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.indexoutofrangeexception/cs/length1.cs#3)]
     [!code-vb[System.IndexOutOfRangeException#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.indexoutofrangeexception/vb/length1.vb#3)]  
  
     <span data-ttu-id="e8144-108">若要更正錯誤，您可以使用如下的程式碼。</span><span class="sxs-lookup"><span data-stu-id="e8144-108">To correct the error, you can use code like the following.</span></span>  
  
     [!code-csharp[System.IndexOutOfRangeException#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.indexoutofrangeexception/cs/length2.cs#4)]
     [!code-vb[System.IndexOutOfRangeException#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.indexoutofrangeexception/vb/length2.vb#4)]  
  
     <span data-ttu-id="e8144-109">或者，而不是依其索引，逐一查看陣列中的所有項目，您可以使用`foreach`（在 C# 中) 的陳述式或`For Each`（在 Visual Basic) 陳述式。</span><span class="sxs-lookup"><span data-stu-id="e8144-109">Alternately, instead of iterating all the elements in the array by their index, you can use the `foreach` statement (in C#) or the `For Each` statement (in Visual Basic).</span></span>  
  
-   <span data-ttu-id="e8144-110">嘗試指派至另一個陣列，具有不已適當地建立維度，且具有較少的項目，比原始陣列的陣列元素。</span><span class="sxs-lookup"><span data-stu-id="e8144-110">Attempting to assign an array element to another array that has not been adequately dimensioned and that has fewer elements than the original array.</span></span> <span data-ttu-id="e8144-111">下列範例會嘗試指派中的最後一個項目`value1`陣列中的相同項目`value2`陣列。</span><span class="sxs-lookup"><span data-stu-id="e8144-111">The following example attempts to assign the last element in the `value1` array to the same element in the `value2` array.</span></span> <span data-ttu-id="e8144-112">不過，`value2`陣列不正確地設定具有六個而不是七個元素。</span><span class="sxs-lookup"><span data-stu-id="e8144-112">However, the `value2` array has been incorrectly dimensioned to have six instead of seven elements.</span></span> <span data-ttu-id="e8144-113">如此一來，指派會擲回<xref:System.IndexOutOfRangeException>例外狀況。</span><span class="sxs-lookup"><span data-stu-id="e8144-113">As a result, the assignment throws an <xref:System.IndexOutOfRangeException> exception.</span></span>  
  
     [!code-csharp[System.IndexOutOfRangeException#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.indexoutofrangeexception/cs/Uninit1.cs#10)]
     [!code-vb[System.IndexOutOfRangeException#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.indexoutofrangeexception/vb/Uninit1.vb#10)]  
  
-   <span data-ttu-id="e8144-114">使用值搜尋方法來逐一查看陣列或集合特定索引位置開始的一部分傳回。</span><span class="sxs-lookup"><span data-stu-id="e8144-114">Using a value returned by a search method to iterate a portion of an array or collection starting at a particular index position.</span></span> <span data-ttu-id="e8144-115">如果您忘記要檢查是否搜尋作業找到相符項目，執行階段會擲回<xref:System.IndexOutOfRangeException>例外狀況，在此範例中所示。</span><span class="sxs-lookup"><span data-stu-id="e8144-115">If you forget to check whether the search operation found a match, the runtime throws an <xref:System.IndexOutOfRangeException> exception, as shown in this example.</span></span>  
  
     [!code-csharp[System.IndexOutOfRangeException#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.indexoutofrangeexception/cs/negative1.cs#5)]
     [!code-vb[System.IndexOutOfRangeException#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.indexoutofrangeexception/vb/negative1.vb#5)]  
  
     <span data-ttu-id="e8144-116">在此情況下，<xref:System.Collections.Generic.List%601.IndexOf%2A?displayProperty=nameWithType>方法會傳回-1，這是無效的索引值，當它無法找到相符項目。</span><span class="sxs-lookup"><span data-stu-id="e8144-116">In this case, the <xref:System.Collections.Generic.List%601.IndexOf%2A?displayProperty=nameWithType> method returns -1, which is an invalid index value, when it fails to find a match.</span></span> <span data-ttu-id="e8144-117">若要更正這個錯誤，在此範例中所示，再逐一查看陣列、 檢查搜尋方法的傳回值。</span><span class="sxs-lookup"><span data-stu-id="e8144-117">To correct this error, check the search method's return value before iterating the array, as shown in this example.</span></span>  
  
     [!code-csharp[System.IndexOutOfRangeException#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.indexoutofrangeexception/cs/negative2.cs#6)]
     [!code-vb[System.IndexOutOfRangeException#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.indexoutofrangeexception/vb/negative2.vb#6)]  
  
-   <span data-ttu-id="e8144-118">嘗試使用或列舉結果集、 集合或未傳回的物件是否為任何有效資料測試查詢所傳回的陣列。</span><span class="sxs-lookup"><span data-stu-id="e8144-118">Trying to use or enumerate a result set, collection, or array returned by a query without testing whether the returned object has any valid data.</span></span>  
  
-   <span data-ttu-id="e8144-119">使用計算的值來定義的起始索引、 結束索引或要反覆查看的項目數。</span><span class="sxs-lookup"><span data-stu-id="e8144-119">Using a computed value to define the starting index, the ending index, or the number of items to be iterated.</span></span> <span data-ttu-id="e8144-120">如果計算的結果是未預期的它可能會導致<xref:System.IndexOutOfRangeException>例外狀況。</span><span class="sxs-lookup"><span data-stu-id="e8144-120">If the result of the computation is unexpected, it might result in an <xref:System.IndexOutOfRangeException> exception.</span></span> <span data-ttu-id="e8144-121">您應該檢查您的程式邏輯，在計算索引值，並逐一查看陣列或集合之前驗證值。</span><span class="sxs-lookup"><span data-stu-id="e8144-121">You should check your program's logic in calculating the index value and validate the value before iterating the array or collection.</span></span> <span data-ttu-id="e8144-122">下列條件必須全部為真;否則，<xref:System.IndexOutOfRangeException>擲回例外狀況：</span><span class="sxs-lookup"><span data-stu-id="e8144-122">The following conditions must all be true; otherwise, an <xref:System.IndexOutOfRangeException> exception is thrown:</span></span>  
  
    -   <span data-ttu-id="e8144-123">起始的索引必須大於或等於<xref:System.Array.GetLowerBound%2A?displayProperty=nameWithType>之維度的陣列，您想要逐一查看，或大於或等於 0 的集合。</span><span class="sxs-lookup"><span data-stu-id="e8144-123">The starting index must be greater than or equal to <xref:System.Array.GetLowerBound%2A?displayProperty=nameWithType> for the dimension of the array that you want to iterate, or greater than or equal to 0 for a collection.</span></span>  
  
    -   <span data-ttu-id="e8144-124">結束索引不能超過<xref:System.Array.GetUpperBound%2A?displayProperty=nameWithType>之維度的陣列，您想要逐一查看，或不能大於或等於`Count`的集合屬性。</span><span class="sxs-lookup"><span data-stu-id="e8144-124">The ending index cannot exceed <xref:System.Array.GetUpperBound%2A?displayProperty=nameWithType> for the dimension of the array that you want to iterate, or cannot be greater than or equal to the `Count` property of a collection.</span></span>  
  
    -   <span data-ttu-id="e8144-125">下列方程式，必須針對您想要逐一查看陣列的維度，則為 true:</span><span class="sxs-lookup"><span data-stu-id="e8144-125">The following equation must be true for the dimension of the array that you want to iterate:</span></span>  
  
        ```  
        start_index >= lower_bound And start_index + items_to_iterate - 1 <= upper_bound  
        ```  
  
         <span data-ttu-id="e8144-126">集合，如下列方程式必須成立：</span><span class="sxs-lookup"><span data-stu-id="e8144-126">For a collection, the following equation must be true:</span></span>  
  
        ```  
        start_index >= 0 And start_index + items_to_iterate <= Count  
        ```  
  
        > [!TIP]
        >  <span data-ttu-id="e8144-127">陣列或集合的起始索引不可為負數。</span><span class="sxs-lookup"><span data-stu-id="e8144-127">The starting index of an array or collection can never be a negative number.</span></span>  
  
-   <span data-ttu-id="e8144-128">假設陣列必須是以零為起始的。</span><span class="sxs-lookup"><span data-stu-id="e8144-128">Assuming that an array must be zero-based.</span></span> <span data-ttu-id="e8144-129">您可以建立不是以零為起始的陣列<xref:System.Array.CreateInstance%28System.Type%2CSystem.Int32%5B%5D%2CSystem.Int32%5B%5D%29?displayProperty=nameWithType>方法，可傳回 COM interop，雖然它們不符合 CLS 標準。</span><span class="sxs-lookup"><span data-stu-id="e8144-129">Arrays that are not zero-based can be created by the <xref:System.Array.CreateInstance%28System.Type%2CSystem.Int32%5B%5D%2CSystem.Int32%5B%5D%29?displayProperty=nameWithType> method and can be returned by COM interop, although they aren't CLS-compliant.</span></span> <span data-ttu-id="e8144-130">下列範例說明<xref:System.IndexOutOfRangeException>當您嘗試逐一查看所建立的非零為起始的陣列時，會擲回<xref:System.Array.CreateInstance%28System.Type%2CSystem.Int32%5B%5D%2CSystem.Int32%5B%5D%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="e8144-130">The following example illustrates the <xref:System.IndexOutOfRangeException> that is thrown when you try to iterate a non-zero-based array created by the <xref:System.Array.CreateInstance%28System.Type%2CSystem.Int32%5B%5D%2CSystem.Int32%5B%5D%29?displayProperty=nameWithType> method.</span></span>  
  
     [!code-csharp[System.IndexOutOfRangeException#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.indexoutofrangeexception/cs/nonzero1.cs#1)]
     [!code-vb[System.IndexOutOfRangeException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.indexoutofrangeexception/vb/nonzero1.vb#1)]  
  
     <span data-ttu-id="e8144-131">若要更正錯誤，如下列範例所示，您可以呼叫<xref:System.Array.GetLowerBound%2A>方法，而不是做出假設陣列的起始索引。</span><span class="sxs-lookup"><span data-stu-id="e8144-131">To correct the error, as the following example does, you can call the <xref:System.Array.GetLowerBound%2A> method instead of making assumptions about the starting index of an array.</span></span>  
  
     [!code-csharp[System.IndexOutOfRangeException#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.indexoutofrangeexception/cs/nonzero2.cs#2)]
     [!code-vb[System.IndexOutOfRangeException#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.indexoutofrangeexception/vb/nonzero2.vb#2)]  
  
     <span data-ttu-id="e8144-132">請注意，當您呼叫<xref:System.Array.GetLowerBound%2A>方法來取得的起始索引的陣列，您也應該呼叫<xref:System.Array.GetUpperBound%28System.Int32%29?displayProperty=nameWithType>方法來取得其結束索引。</span><span class="sxs-lookup"><span data-stu-id="e8144-132">Note that when you call the <xref:System.Array.GetLowerBound%2A> method to get the starting index of an array, you should also call the <xref:System.Array.GetUpperBound%28System.Int32%29?displayProperty=nameWithType> method to get its ending index.</span></span>  
  
-   <span data-ttu-id="e8144-133">令人困惑的索引和數字陣列或集合中的該索引處的值。</span><span class="sxs-lookup"><span data-stu-id="e8144-133">Confusing an index and the value at that index in a numeric array or collection.</span></span> <span data-ttu-id="e8144-134">使用時，通常就會發生這個問題`foreach`（在 C# 中) 的陳述式或`For Each`（在 Visual Basic) 陳述式。</span><span class="sxs-lookup"><span data-stu-id="e8144-134">This issue usually occurs when using the `foreach` statement (in C#) or the `For Each` statement (in Visual Basic).</span></span> <span data-ttu-id="e8144-135">下面範例會說明此問題。</span><span class="sxs-lookup"><span data-stu-id="e8144-135">The following example illustrates the problem.</span></span>  
  
     [!code-csharp[System.IndexOutOfRangeException#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.indexoutofrangeexception/cs/foreach1.cs#7)]
     [!code-vb[System.IndexOutOfRangeException#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.indexoutofrangeexception/vb/foreach1.vb#7)]  
  
     <span data-ttu-id="e8144-136">反覆項目建構會傳回陣列或集合，不是它的索引中的每個值。</span><span class="sxs-lookup"><span data-stu-id="e8144-136">The iteration construct returns each value in an array or collection, not its index.</span></span> <span data-ttu-id="e8144-137">若要消除例外狀況，請使用此程式碼。</span><span class="sxs-lookup"><span data-stu-id="e8144-137">To eliminate the exception, use this code.</span></span>  
  
     [!code-csharp[System.IndexOutOfRangeException#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.indexoutofrangeexception/cs/foreach2.cs#8)]
     [!code-vb[System.IndexOutOfRangeException#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.indexoutofrangeexception/vb/foreach2.vb#8)]  
  
-   <span data-ttu-id="e8144-138">提供無效的資料行名稱給<xref:System.Data.DataView.Sort%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="e8144-138">Providing an invalid column name to the <xref:System.Data.DataView.Sort%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="e8144-139">違反執行緒安全。</span><span class="sxs-lookup"><span data-stu-id="e8144-139">Violating thread safety.</span></span> <span data-ttu-id="e8144-140">作業，例如讀取來自相同<xref:System.IO.StreamReader>物件，寫入至相同<xref:System.IO.StreamWriter>物件從多個執行緒，或列舉中的物件<xref:System.Collections.Hashtable>從不同的執行緒可能會擲回<xref:System.IndexOutOfRangeException>如果在不存取的物件執行緒安全的方式。</span><span class="sxs-lookup"><span data-stu-id="e8144-140">Operations such as reading from the same <xref:System.IO.StreamReader> object, writing to the same <xref:System.IO.StreamWriter> object from multiple threads, or enumerating the objects in a <xref:System.Collections.Hashtable> from different threads can throw an <xref:System.IndexOutOfRangeException> if the object isn't accessed in a thread-safe way.</span></span> <span data-ttu-id="e8144-141">這個例外狀況是通常間歇性的因為它會依賴競爭條件。</span><span class="sxs-lookup"><span data-stu-id="e8144-141">This exception is typically intermittent because it relies on a race condition.</span></span>  
  
 <span data-ttu-id="e8144-142">使用硬式編碼的索引值來操作陣列很可能擲回例外狀況，如果索引值不正確或無效，或如果操作的陣列大小不是預期的。</span><span class="sxs-lookup"><span data-stu-id="e8144-142">Using hard-coded index values to manipulate an array is likely to throw an exception if the index value is incorrect or invalid, or if the size of the array being manipulation is unexpected.</span></span> <span data-ttu-id="e8144-143">若要防止作業擲回<xref:System.IndexOutOfRangeException>例外狀況，您可以執行下列動作：</span><span class="sxs-lookup"><span data-stu-id="e8144-143">To prevent an operation from throwing an  <xref:System.IndexOutOfRangeException> exception, you can do the following:</span></span>  
  
-   <span data-ttu-id="e8144-144">逐一查看陣列使用的項目[foreach](https://msdn.microsoft.com/library/ttw7t8t6.aspx)陳述式 （在 C# 中) 或[每個...下一步](https://msdn.microsoft.com/library/5ebk1751.aspx)建構 （在 Visual Basic)，而不是反覆項目索引。</span><span class="sxs-lookup"><span data-stu-id="e8144-144">Iterate the elements of the array using the [foreach](https://msdn.microsoft.com/library/ttw7t8t6.aspx) statement (in C#) or the [For Each...Next](https://msdn.microsoft.com/library/5ebk1751.aspx) construct (in Visual Basic)  instead of iterating elements by index.</span></span>  
  
-   <span data-ttu-id="e8144-145">開頭為所傳回索引的索引，以反覆執行的項目<xref:System.Array.GetLowerBound%2A?displayProperty=nameWithType>方法和所傳回的索引做為結尾<xref:System.Array.GetUpperBound%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="e8144-145">Iterate the elements by index starting with the index returned by the <xref:System.Array.GetLowerBound%2A?displayProperty=nameWithType> method and ending with the index returned by the <xref:System.Array.GetUpperBound%2A?displayProperty=nameWithType> method.</span></span>  
  
-   <span data-ttu-id="e8144-146">如果您正在指派一個陣列中的項目到另一個，確定目標陣列的項目數至少為來源陣列藉由比較其<xref:System.Array.Length%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="e8144-146">If you are assigning elements in one array to another, ensure that  the target array has at least as many elements as the source array by comparing their <xref:System.Array.Length%2A?displayProperty=nameWithType> properties.</span></span>  
  
 <span data-ttu-id="e8144-147">如需執行個體的初始屬性值的清單<xref:System.IndexOutOfRangeException>，請參閱<xref:System.IndexOutOfRangeException>建構函式。</span><span class="sxs-lookup"><span data-stu-id="e8144-147">For a list of initial property values for an instance of <xref:System.IndexOutOfRangeException>, see the <xref:System.IndexOutOfRangeException> constructors.</span></span>  
  
 <span data-ttu-id="e8144-148">下列中繼語言 (IL) 指示會擲回<xref:System.IndexOutOfRangeException>:</span><span class="sxs-lookup"><span data-stu-id="e8144-148">The following intermediate language (IL) instructions throw <xref:System.IndexOutOfRangeException>:</span></span>  
  
-   <span data-ttu-id="e8144-149">ldelem.\<type></span><span class="sxs-lookup"><span data-stu-id="e8144-149">ldelem.\<type></span></span>  
  
-   <span data-ttu-id="e8144-150">ldelema</span><span class="sxs-lookup"><span data-stu-id="e8144-150">ldelema</span></span>  
  
-   <span data-ttu-id="e8144-151">stelem.\<type></span><span class="sxs-lookup"><span data-stu-id="e8144-151">stelem.\<type></span></span>  
  
 <span data-ttu-id="e8144-152"><xref:System.IndexOutOfRangeException> 會使用 HRESULT COR_E_INDEXOUTOFRANGE，其值 0x80131508。</span><span class="sxs-lookup"><span data-stu-id="e8144-152"><xref:System.IndexOutOfRangeException> uses the HRESULT COR_E_INDEXOUTOFRANGE, which has the value 0x80131508.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Exception" />
    <related type="Article" href="~/docs/standard/exceptions/index.md"><span data-ttu-id="e8144-153">在 .NET 中處理和擲回例外狀況</span><span class="sxs-lookup"><span data-stu-id="e8144-153">Handling and throwing exceptions in .NET</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e8144-154">初始化 <see cref="T:System.IndexOutOfRangeException" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="e8144-154">Initializes a new instance of the <see cref="T:System.IndexOutOfRangeException" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IndexOutOfRangeException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IndexOutOfRangeException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IndexOutOfRangeException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e8144-155">初始化 <see cref="T:System.IndexOutOfRangeException" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="e8144-155">Initializes a new instance of the <see cref="T:System.IndexOutOfRangeException" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8144-156">這個建構函式初始化<xref:System.Exception.Message%2A>屬性的新執行個體的系統提供的訊息，說明錯誤，例如 「 陣列索引超出範圍。 」</span><span class="sxs-lookup"><span data-stu-id="e8144-156">This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance to a system-supplied message that describes the error, such as "An array index is out of range."</span></span> <span data-ttu-id="e8144-157">此訊息會考量目前的系統文化特性。</span><span class="sxs-lookup"><span data-stu-id="e8144-157">This message takes into account the current system culture.</span></span>  
  
 <span data-ttu-id="e8144-158">下表顯示 <xref:System.IndexOutOfRangeException> 執行個體的初始屬性值。</span><span class="sxs-lookup"><span data-stu-id="e8144-158">The following table shows the initial property values for an instance of <xref:System.IndexOutOfRangeException>.</span></span>  
  
|<span data-ttu-id="e8144-159">屬性</span><span class="sxs-lookup"><span data-stu-id="e8144-159">Property</span></span>|<span data-ttu-id="e8144-160">值</span><span class="sxs-lookup"><span data-stu-id="e8144-160">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="e8144-161">null 參考 (在 Visual Basic 中為 `Nothing`)。</span><span class="sxs-lookup"><span data-stu-id="e8144-161">A null reference (`Nothing` in Visual Basic).</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="e8144-162">當地語系化的錯誤訊息字串。</span><span class="sxs-lookup"><span data-stu-id="e8144-162">The localized error message string.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IndexOutOfRangeException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IndexOutOfRangeException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IndexOutOfRangeException(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new IndexOutOfRangeException : string -&gt; IndexOutOfRangeException" Usage="new System.IndexOutOfRangeException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="e8144-163">描述錯誤的訊息。</span><span class="sxs-lookup"><span data-stu-id="e8144-163">The message that describes the error.</span></span></param>
        <summary><span data-ttu-id="e8144-164">使用指定的錯誤訊息，初始化 <see cref="T:System.IndexOutOfRangeException" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="e8144-164">Initializes a new instance of the <see cref="T:System.IndexOutOfRangeException" /> class with a specified error message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8144-165">這個建構函式初始化<xref:System.Exception.Message%2A?displayProperty=nameWithType>屬性的新的例外狀況使用`message`參數。</span><span class="sxs-lookup"><span data-stu-id="e8144-165">This constructor initializes the <xref:System.Exception.Message%2A?displayProperty=nameWithType> property of the new exception using the `message` parameter.</span></span> <span data-ttu-id="e8144-166">`message` 的內容必須能讓人了解。</span><span class="sxs-lookup"><span data-stu-id="e8144-166">The content of `message` is intended to be understood by humans.</span></span> <span data-ttu-id="e8144-167">這個建構函式的呼叫端必須確保這個字串已經被當地語系化 (為了目前系統的文化特性)。</span><span class="sxs-lookup"><span data-stu-id="e8144-167">The caller of this constructor is required to ensure that this string has been localized for the current system culture.</span></span>  
  
 <span data-ttu-id="e8144-168">下表顯示 <xref:System.IndexOutOfRangeException> 執行個體的初始屬性值。</span><span class="sxs-lookup"><span data-stu-id="e8144-168">The following table shows the initial property values for an instance of <xref:System.IndexOutOfRangeException>.</span></span>  
  
|<span data-ttu-id="e8144-169">屬性</span><span class="sxs-lookup"><span data-stu-id="e8144-169">Property</span></span>|<span data-ttu-id="e8144-170">值</span><span class="sxs-lookup"><span data-stu-id="e8144-170">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="e8144-171">null 參考 (在 Visual Basic 中為 `Nothing`)。</span><span class="sxs-lookup"><span data-stu-id="e8144-171">A null reference (`Nothing` in Visual Basic).</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="e8144-172">錯誤訊息字串。</span><span class="sxs-lookup"><span data-stu-id="e8144-172">The error message string.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IndexOutOfRangeException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IndexOutOfRangeException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IndexOutOfRangeException(System::String ^ message, Exception ^ innerException);" />
      <MemberSignature Language="F#" Value="new IndexOutOfRangeException : string * Exception -&gt; IndexOutOfRangeException" Usage="new System.IndexOutOfRangeException (message, innerException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="e8144-173">解釋例外狀況原因的錯誤訊息。</span><span class="sxs-lookup"><span data-stu-id="e8144-173">The error message that explains the reason for the exception.</span></span></param>
        <param name="innerException"><span data-ttu-id="e8144-174">做為目前例外狀況發生原因的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="e8144-174">The exception that is the cause of the current exception.</span></span> <span data-ttu-id="e8144-175">如果 <paramref name="innerException" /> 參數不是 Null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)，則會在處理內部例外的 <see langword="catch" /> 區塊中引發目前的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="e8144-175">If the <paramref name="innerException" /> parameter is not a null reference (<see langword="Nothing" /> in Visual Basic), the current exception is raised in a <see langword="catch" /> block that handles the inner exception.</span></span></param>
        <summary><span data-ttu-id="e8144-176">使用指定的錯誤訊息以及造成此例外狀況的內部例外狀況的參考，初始化 <see cref="T:System.IndexOutOfRangeException" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="e8144-176">Initializes a new instance of the <see cref="T:System.IndexOutOfRangeException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8144-177">被擲回以做為前一個例外狀況直接結果的例外狀況，應該在 <xref:System.Exception.InnerException%2A> 屬性中包含對前一個例外狀況的參考。</span><span class="sxs-lookup"><span data-stu-id="e8144-177">An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property.</span></span> <span data-ttu-id="e8144-178">`InnerException` 屬性會傳回與傳入建構函式中相同的值；如果 `Nothing` 屬性不提供內部例外值給建構函式，則傳回 null 參考 (在 Visual Basic 中為 `InnerException`)。</span><span class="sxs-lookup"><span data-stu-id="e8144-178">The `InnerException` property returns the same value that is passed into the constructor, or a null reference (`Nothing` in Visual Basic) if the `InnerException` property does not supply the inner exception value to the constructor.</span></span>  
  
 <span data-ttu-id="e8144-179">下表顯示 <xref:System.IndexOutOfRangeException> 執行個體的初始屬性值。</span><span class="sxs-lookup"><span data-stu-id="e8144-179">The following table shows the initial property values for an instance of <xref:System.IndexOutOfRangeException>.</span></span>  
  
|<span data-ttu-id="e8144-180">屬性</span><span class="sxs-lookup"><span data-stu-id="e8144-180">Property</span></span>|<span data-ttu-id="e8144-181">值</span><span class="sxs-lookup"><span data-stu-id="e8144-181">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="e8144-182">內部例外狀況參考。</span><span class="sxs-lookup"><span data-stu-id="e8144-182">The inner exception reference.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="e8144-183">錯誤訊息字串。</span><span class="sxs-lookup"><span data-stu-id="e8144-183">The error message string.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Exception" />
      </Docs>
    </Member>
  </Members>
</Type>