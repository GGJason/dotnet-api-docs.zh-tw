<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IndexOutOfRangeException.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5fa743ca2f45cda07f83e63ffd565711d31756eb5.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fa743ca2f45cda07f83e63ffd565711d31756eb5</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IndexOutOfRangeException">
          <source>The exception that is thrown when an attempt is made to access an element of an array or collection with an index that is outside its bounds.</source>
          <target state="translated">嘗試使用陣列或集合以外的索引來存取陣列或集合的項目時所擲回的例外狀況。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>An <ph id="ph1">&lt;xref:System.IndexOutOfRangeException&gt;</ph> exception is thrown when an invalid index is used to access a member of an array or a collection, or to read or write from a particular location in a buffer.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IndexOutOfRangeException&gt;</ph>使用無效的索引來存取陣列或集合的成員，或是讀取或寫入一個緩衝區中的特定位置時，會擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>This exception  inherits from the <ph id="ph1">&lt;xref:System.Exception&gt;</ph> class but adds no unique members.</source>
          <target state="translated">這個例外狀況是繼承自<ph id="ph1">&lt;xref:System.Exception&gt;</ph>類別但加入沒有重複的成員。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>Typically, an <ph id="ph1">&lt;xref:System.IndexOutOfRangeException&gt;</ph> exception is thrown as a result of developer error.</source>
          <target state="translated">一般而言，<ph id="ph1">&lt;xref:System.IndexOutOfRangeException&gt;</ph>因為開發人員的錯誤而擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>Instead of handling the exception, you should diagnose the cause of the error and correct your code.</source>
          <target state="translated">而不是處理的例外狀況，您應該診斷錯誤的原因和修正程式碼。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>The most common causes of the error are:</source>
          <target state="translated">錯誤的常見原因包括：</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>Forgetting that the upper bound of a collection or a zero-based array is one less than its number of members or elements, as the following example illustrates.</source>
          <target state="translated">小於其數字的成員或項目，如下列範例說明忘記上限的集合，或以零為起始的陣列其中一個。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>To correct the error, you can use code like the following.</source>
          <target state="translated">若要更正錯誤，您可以使用下列程式碼。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>Alternately, instead of iterating all the elements in the array by their index, you can use the <ph id="ph1">`foreach`</ph> statement (in C#) or the <ph id="ph2">`For Each`</ph> statement (in Visual Basic).</source>
          <target state="translated">或者，而不是由其索引，逐一查看陣列中的所有項目，您可以使用<ph id="ph1">`foreach`</ph>陳述式 （C# 中） 或<ph id="ph2">`For Each`</ph>（在 Visual Basic) 陳述式。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>Attempting to assign an array element to another array that has not been adequately dimensioned and that has fewer elements than the original array.</source>
          <target state="translated">嘗試指派至另一個陣列，具有不已適當建立維度，且具有較少的項目，比原始陣列的陣列項目。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>The following example attempts to assign the last element in the <ph id="ph1">`value1`</ph> array to the same element in the <ph id="ph2">`value2`</ph> array.</source>
          <target state="translated">下列範例會嘗試指派中的最後一個項目<ph id="ph1">`value1`</ph>陣列中的相同項目<ph id="ph2">`value2`</ph>陣列。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>However, the <ph id="ph1">`value2`</ph> array has been incorrectly dimensioned to have six instead of seven elements.</source>
          <target state="translated">不過，<ph id="ph1">`value2`</ph>陣列未正確測量有六個，而不是七個元素。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>As a result, the assignment throws an <ph id="ph1">&lt;xref:System.IndexOutOfRangeException&gt;</ph> exception.</source>
          <target state="translated">如此一來，作業會擲回<ph id="ph1">&lt;xref:System.IndexOutOfRangeException&gt;</ph>例外狀況。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>Using a value returned by a search method to iterate a portion of an array or collection starting at a particular index position.</source>
          <target state="translated">使用值的方法來傳回搜尋來逐一查看該陣列或集合中特定的索引位置開始的一部分。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>If you forget to check whether the search operation found a match, the runtime throws an <ph id="ph1">&lt;xref:System.IndexOutOfRangeException&gt;</ph> exception, as shown in this example.</source>
          <target state="translated">如果您忘記檢查是否搜尋作業找到相符項目，執行階段會擲回<ph id="ph1">&lt;xref:System.IndexOutOfRangeException&gt;</ph>例外狀況，如本範例所示。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>In this case, the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.IndexOf%2A?displayProperty=nameWithType&gt;</ph> method returns -1, which is an invalid index value, when it fails to find a match.</source>
          <target state="translated">在此情況下，<ph id="ph1">&lt;xref:System.Collections.Generic.List%601.IndexOf%2A?displayProperty=nameWithType&gt;</ph>方法會傳回-1，無法尋找相符項目時，是無效的索引值。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>To correct this error, check the search method's return value before iterating the array, as shown in this example.</source>
          <target state="translated">若要更正這個錯誤，如本範例所示，逐一查看陣列之前檢查搜尋方法的傳回值。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>Trying to use or enumerate a result set, collection, or array returned by a query without testing whether the returned object has any valid data.</source>
          <target state="translated">嘗試使用或列舉的結果集、 集合或未測試傳回的物件是否為有效的任何資料查詢所傳回的陣列。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>Using a computed value to define the starting index, the ending index, or the number of items to be iterated.</source>
          <target state="translated">您可以使用計算的值來定義起始的索引、 結束的索引或可重複的項目數。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>If the result of the computation is unexpected, it might result in an <ph id="ph1">&lt;xref:System.IndexOutOfRangeException&gt;</ph> exception.</source>
          <target state="translated">如果不是預期的計算結果，可能會導致<ph id="ph1">&lt;xref:System.IndexOutOfRangeException&gt;</ph>例外狀況。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>You should check your program's logic in calculating the index value and validate the value before iterating the array or collection.</source>
          <target state="translated">您應該檢查您的程式邏輯中計算的索引值，並逐一查看陣列或集合之前驗證的值。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>The following conditions must all be true; otherwise, an <ph id="ph1">&lt;xref:System.IndexOutOfRangeException&gt;</ph> exception is thrown:</source>
          <target state="translated">下列條件必須全部為 true;否則，<ph id="ph1">&lt;xref:System.IndexOutOfRangeException&gt;</ph>擲回例外狀況：</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>The starting index must be greater than or equal to <ph id="ph1">&lt;xref:System.Array.GetLowerBound%2A?displayProperty=nameWithType&gt;</ph> for the dimension of the array that you want to iterate, or greater than or equal to 0 for a collection.</source>
          <target state="translated">起始的索引必須大於或等於<ph id="ph1">&lt;xref:System.Array.GetLowerBound%2A?displayProperty=nameWithType&gt;</ph>之維度的陣列，您想要逐一查看，或大於或等於 0 的集合。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>The ending index cannot exceed <ph id="ph1">&lt;xref:System.Array.GetUpperBound%2A?displayProperty=nameWithType&gt;</ph> for the dimension of the array that you want to iterate, or cannot be greater than or equal to the <ph id="ph2">`Count`</ph> property of a collection.</source>
          <target state="translated">結束索引不能超過<ph id="ph1">&lt;xref:System.Array.GetUpperBound%2A?displayProperty=nameWithType&gt;</ph>之維度的陣列，您想要逐一查看，或不能大於或等於<ph id="ph2">`Count`</ph>的集合屬性。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>The following equation must be true for the dimension of the array that you want to iterate:</source>
          <target state="translated">下列方程式必須是您想要逐一查看陣列的維度，則為 true:</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>For a collection, the following equation must be true:</source>
          <target state="translated">集合，如下列方程式必須成立：</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>The starting index of an array or collection can never be a negative number.</source>
          <target state="translated">在陣列或集合的起始索引不可以是負數值。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>Assuming that an array must be zero-based.</source>
          <target state="translated">假設陣列必須有以零為起始的。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>Arrays that are not zero-based can be created by the <ph id="ph1">&lt;xref:System.Array.CreateInstance%28System.Type%2CSystem.Int32%5B%5D%2CSystem.Int32%5B%5D%29?displayProperty=nameWithType&gt;</ph> method and can be returned by COM interop, although they aren’t CLS-compliant.</source>
          <target state="translated">您可以建立不是以零為起始的陣列<ph id="ph1">&lt;xref:System.Array.CreateInstance%28System.Type%2CSystem.Int32%5B%5D%2CSystem.Int32%5B%5D%29?displayProperty=nameWithType&gt;</ph>方法可以傳回由 COM interop，雖然它們不符合 CLS 標準。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>The following example illustrates the <ph id="ph1">&lt;xref:System.IndexOutOfRangeException&gt;</ph> that is thrown when you try to iterate a non-zero-based array created by the <ph id="ph2">&lt;xref:System.Array.CreateInstance%28System.Type%2CSystem.Int32%5B%5D%2CSystem.Int32%5B%5D%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">下列範例說明<ph id="ph1">&lt;xref:System.IndexOutOfRangeException&gt;</ph>逐一查看非零起始的陣列，所建立時，會擲回<ph id="ph2">&lt;xref:System.Array.CreateInstance%28System.Type%2CSystem.Int32%5B%5D%2CSystem.Int32%5B%5D%29?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>To correct the error, as the following example does, you can call the <ph id="ph1">&lt;xref:System.Array.GetLowerBound%2A&gt;</ph> method instead of making assumptions about the starting index of an array.</source>
          <target state="translated">若要更正這個錯誤，如下列範例會執行，您可以呼叫<ph id="ph1">&lt;xref:System.Array.GetLowerBound%2A&gt;</ph>方法而不是做出假設陣列的起始索引。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>Note that when you call the <ph id="ph1">&lt;xref:System.Array.GetLowerBound%2A&gt;</ph> method to get the starting index of an array, you should also call the <ph id="ph2">&lt;xref:System.Array.GetUpperBound%28System.Int32%29?displayProperty=nameWithType&gt;</ph> method to get its ending index.</source>
          <target state="translated">請注意，當您呼叫<ph id="ph1">&lt;xref:System.Array.GetLowerBound%2A&gt;</ph>方法來取得的起始索引的陣列，您也應該呼叫<ph id="ph2">&lt;xref:System.Array.GetUpperBound%28System.Int32%29?displayProperty=nameWithType&gt;</ph>方法來取得其結束索引。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>Confusing an index and the value at that index in a numeric array or collection.</source>
          <target state="translated">使人混淆的索引和數字陣列或集合中的索引處的值。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>This issue usually occurs when using the <ph id="ph1">`foreach`</ph> statement (in C#) or the <ph id="ph2">`For Each`</ph> statement (in Visual Basic).</source>
          <target state="translated">使用時，通常會發生此問題<ph id="ph1">`foreach`</ph>陳述式 （C# 中） 或<ph id="ph2">`For Each`</ph>（在 Visual Basic) 陳述式。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>The following example illustrates the problem.</source>
          <target state="translated">下面範例會說明此問題。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>The iteration construct returns each value in an array or collection, not its index.</source>
          <target state="translated">反覆項目建構會傳回陣列或集合，不是它的索引中的每個值。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>To eliminate the exception, use this code.</source>
          <target state="translated">若要消除例外狀況，請使用此程式碼。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>Providing an invalid column name to the <ph id="ph1">&lt;xref:System.Data.DataView.Sort%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">提供無效的資料行名稱給<ph id="ph1">&lt;xref:System.Data.DataView.Sort%2A?displayProperty=nameWithType&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>Violating thread safety.</source>
          <target state="translated">違反執行緒安全。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>Operations such as reading from the same <ph id="ph1">&lt;xref:System.IO.StreamReader&gt;</ph> object, writing to the same <ph id="ph2">&lt;xref:System.IO.StreamWriter&gt;</ph> object from multiple threads, or enumerating the objects in a <ph id="ph3">&lt;xref:System.Collections.Hashtable&gt;</ph> from different threads can throw an <ph id="ph4">&lt;xref:System.IndexOutOfRangeException&gt;</ph> if the object isn’t accessed in a thread-safe way.</source>
          <target state="translated">作業，例如讀取相同<ph id="ph1">&lt;xref:System.IO.StreamReader&gt;</ph>物件，寫入至相同<ph id="ph2">&lt;xref:System.IO.StreamWriter&gt;</ph>物件，從多個執行緒，或列舉中的物件<ph id="ph3">&lt;xref:System.Collections.Hashtable&gt;</ph>從不同執行緒可能會擲回<ph id="ph4">&lt;xref:System.IndexOutOfRangeException&gt;</ph>如果不在存取的物件執行緒安全的方式。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>This exception is typically intermittent because it relies on a race condition.</source>
          <target state="translated">這個例外狀況是通常間歇性的因為它是倚賴競爭情形。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>Using hard-coded index values to manipulate an array is likely to throw an exception if the index value is incorrect or invalid, or if the size of the array being manipulation is unexpected.</source>
          <target state="translated">管理陣列使用硬式編碼的索引值是可能擲回例外狀況，如果索引值不正確或無效，或操作的陣列大小是未預期的。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>To prevent an operation from throwing an  <ph id="ph1">&lt;xref:System.IndexOutOfRangeException&gt;</ph> exception, you can do the following:</source>
          <target state="translated">若要避免某項作業擲回<ph id="ph1">&lt;xref:System.IndexOutOfRangeException&gt;</ph>例外狀況，您可以執行下列：</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>Iterate the elements of the array using the <bpt id="p1">[</bpt>foreach<ept id="p1">](https://msdn.microsoft.com/library/ttw7t8t6.aspx)</ept> statement (in C#) or the <bpt id="p2">[</bpt>For Each...Next<ept id="p2">](https://msdn.microsoft.com/library/5ebk1751.aspx)</ept> construct (in Visual Basic)  instead of iterating elements by index.</source>
          <target state="translated">逐一查看陣列使用的項目<bpt id="p1">[</bpt>foreach<ept id="p1">](https://msdn.microsoft.com/library/ttw7t8t6.aspx)</ept>陳述式 （C# 中） 或<bpt id="p2">[</bpt>每個...下一步<ept id="p2">](https://msdn.microsoft.com/library/5ebk1751.aspx)</ept>建構 （在 Visual Basic)，而不是反覆項目索引。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>Iterate the elements by index starting with the index returned by the <ph id="ph1">&lt;xref:System.Array.GetLowerBound%2A?displayProperty=nameWithType&gt;</ph> method and ending with the index returned by the <ph id="ph2">&lt;xref:System.Array.GetUpperBound%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">開頭為所傳回之索引的索引來逐一查看項目<ph id="ph1">&lt;xref:System.Array.GetLowerBound%2A?displayProperty=nameWithType&gt;</ph>方法和索引所傳回的結束<ph id="ph2">&lt;xref:System.Array.GetUpperBound%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>If you are assigning elements in one array to another, ensure that  the target array has at least as many elements as the source array by comparing their <ph id="ph1">&lt;xref:System.Array.Length%2A?displayProperty=nameWithType&gt;</ph> properties.</source>
          <target state="translated">如果您指派給另一個陣列中的項目，請確定目標陣列有至少多的項目 」 來源陣列藉由比較其<ph id="ph1">&lt;xref:System.Array.Length%2A?displayProperty=nameWithType&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>For a list of initial property values for an instance of <ph id="ph1">&lt;xref:System.IndexOutOfRangeException&gt;</ph>, see the <ph id="ph2">&lt;xref:System.IndexOutOfRangeException&gt;</ph> constructors.</source>
          <target state="translated">如需執行個體的初始屬性值的清單<ph id="ph1">&lt;xref:System.IndexOutOfRangeException&gt;</ph>，請參閱<ph id="ph2">&lt;xref:System.IndexOutOfRangeException&gt;</ph>建構函式。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>The following intermediate language (IL) instructions throw <ph id="ph1">&lt;xref:System.IndexOutOfRangeException&gt;</ph>:</source>
          <target state="translated">下列中繼語言 (IL) 指示擲回<ph id="ph1">&lt;xref:System.IndexOutOfRangeException&gt;</ph>:</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>ldelem.<ph id="ph1">\&lt;</ph>type&gt;</source>
          <target state="translated">ldelem.<ph id="ph1">\&lt;</ph>type&gt;</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>ldelema</source>
          <target state="translated">ldelema</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>stelem.<ph id="ph1">\&lt;</ph>type&gt;</source>
          <target state="translated">stelem.<ph id="ph1">\&lt;</ph>type&gt;</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source><ph id="ph1">&lt;xref:System.IndexOutOfRangeException&gt;</ph> uses the HRESULT COR_E_INDEXOUTOFRANGE, which has the value 0x80131508.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IndexOutOfRangeException&gt;</ph> 會使用 HRESULT COR_E_INDEXOUTOFRANGE，0x80131508 的值。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="T:System.IndexOutOfRangeException">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IndexOutOfRangeException" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.IndexOutOfRangeException" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.IndexOutOfRangeException.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IndexOutOfRangeException" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.IndexOutOfRangeException" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IndexOutOfRangeException.#ctor">
          <source>This constructor initializes the <ph id="ph1">&lt;xref:System.Exception.Message%2A&gt;</ph> property of the new instance to a system-supplied message that describes the error, such as "An array index is out of range."</source>
          <target state="translated">這個建構函式初始化<ph id="ph1">&lt;xref:System.Exception.Message%2A&gt;</ph>屬性的新執行個體的系統提供的訊息描述錯誤，例如"的陣列索引超出範圍。 」</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IndexOutOfRangeException.#ctor">
          <source>This message takes into account the current system culture.</source>
          <target state="translated">此訊息會考量目前的系統文化特性。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IndexOutOfRangeException.#ctor">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.IndexOutOfRangeException&gt;</ph>.</source>
          <target state="translated">下表顯示 <ph id="ph1">&lt;xref:System.IndexOutOfRangeException&gt;</ph> 執行個體的初始屬性值。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IndexOutOfRangeException.#ctor">
          <source>Property</source>
          <target state="translated">屬性</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IndexOutOfRangeException.#ctor">
          <source>Value</source>
          <target state="translated">值</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IndexOutOfRangeException.#ctor">
          <source>A null reference (<ph id="ph1">`Nothing`</ph> in Visual Basic).</source>
          <target state="translated">null 參考 (在 Visual Basic 中為 <ph id="ph1">`Nothing`</ph>)。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IndexOutOfRangeException.#ctor">
          <source>The localized error message string.</source>
          <target state="translated">當地語系化的錯誤訊息字串。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.IndexOutOfRangeException.#ctor(System.String)">
          <source>The message that describes the error.</source>
          <target state="translated">描述錯誤的訊息。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.IndexOutOfRangeException.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IndexOutOfRangeException" /&gt;</ph> class with a specified error message.</source>
          <target state="translated">使用指定的錯誤訊息，初始化 <ph id="ph1">&lt;see cref="T:System.IndexOutOfRangeException" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IndexOutOfRangeException.#ctor(System.String)">
          <source>This constructor initializes the <ph id="ph1">&lt;xref:System.Exception.Message%2A?displayProperty=nameWithType&gt;</ph> property of the new exception using the <ph id="ph2">`message`</ph> parameter.</source>
          <target state="translated">這個建構函式初始化<ph id="ph1">&lt;xref:System.Exception.Message%2A?displayProperty=nameWithType&gt;</ph>屬性的新的例外狀況使用<ph id="ph2">`message`</ph>參數。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IndexOutOfRangeException.#ctor(System.String)">
          <source>The content of <ph id="ph1">`message`</ph> is intended to be understood by humans.</source>
          <target state="translated"><ph id="ph1">`message`</ph> 的內容必須能讓人了解。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IndexOutOfRangeException.#ctor(System.String)">
          <source>The caller of this constructor is required to ensure that this string has been localized for the current system culture.</source>
          <target state="translated">這個建構函式的呼叫端必須確保這個字串已經被當地語系化 (為了目前系統的文化特性)。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IndexOutOfRangeException.#ctor(System.String)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.IndexOutOfRangeException&gt;</ph>.</source>
          <target state="translated">下表顯示 <ph id="ph1">&lt;xref:System.IndexOutOfRangeException&gt;</ph> 執行個體的初始屬性值。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IndexOutOfRangeException.#ctor(System.String)">
          <source>Property</source>
          <target state="translated">屬性</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IndexOutOfRangeException.#ctor(System.String)">
          <source>Value</source>
          <target state="translated">值</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IndexOutOfRangeException.#ctor(System.String)">
          <source>A null reference (<ph id="ph1">`Nothing`</ph> in Visual Basic).</source>
          <target state="translated">null 參考 (在 Visual Basic 中為 <ph id="ph1">`Nothing`</ph>)。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IndexOutOfRangeException.#ctor(System.String)">
          <source>The error message string.</source>
          <target state="translated">錯誤訊息字串。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.IndexOutOfRangeException.#ctor(System.String,System.Exception)">
          <source>The error message that explains the reason for the exception.</source>
          <target state="translated">解釋例外狀況原因的錯誤訊息。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.IndexOutOfRangeException.#ctor(System.String,System.Exception)">
          <source>The exception that is the cause of the current exception.</source>
          <target state="translated">做為目前例外狀況發生原因的例外狀況。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.IndexOutOfRangeException.#ctor(System.String,System.Exception)">
          <source>If the <bpt id="p1">&lt;c&gt;</bpt>innerException<ept id="p1">&lt;/c&gt;</ept> parameter is not a null reference (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic), the current exception is raised in a <ph id="ph2">&lt;see langword="catch" /&gt;</ph> block that handles the inner exception.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>innerException<ept id="p1">&lt;/c&gt;</ept> 參數不是 Null 參考 (在 Visual Basic 中為 <ph id="ph1">&lt;see langword="Nothing" /&gt;</ph>)，則會在處理內部例外狀況的 <ph id="ph2">&lt;see langword="catch" /&gt;</ph> 區塊中引發目前的例外狀況。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.IndexOutOfRangeException.#ctor(System.String,System.Exception)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IndexOutOfRangeException" /&gt;</ph> class with a specified error message and a reference to the inner exception that is the cause of this exception.</source>
          <target state="translated">使用指定的錯誤訊息以及造成此例外狀況的內部例外狀況的參考，初始化 <ph id="ph1">&lt;see cref="T:System.IndexOutOfRangeException" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IndexOutOfRangeException.#ctor(System.String,System.Exception)">
          <source>An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property.</source>
          <target state="translated">被擲回以做為前一個例外狀況直接結果的例外狀況，應該在 <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> 屬性中包含對前一個例外狀況的參考。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IndexOutOfRangeException.#ctor(System.String,System.Exception)">
          <source>The <ph id="ph1">`InnerException`</ph> property returns the same value that is passed into the constructor, or a null reference (<ph id="ph2">`Nothing`</ph> in Visual Basic) if the <ph id="ph3">`InnerException`</ph> property does not supply the inner exception value to the constructor.</source>
          <target state="translated"><ph id="ph1">`InnerException`</ph> 屬性會傳回與傳入建構函式中相同的值；如果 <ph id="ph2">`Nothing`</ph> 屬性不提供內部例外值給建構函式，則傳回 null 參考 (在 Visual Basic 中為 <ph id="ph3">`InnerException`</ph>)。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IndexOutOfRangeException.#ctor(System.String,System.Exception)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.IndexOutOfRangeException&gt;</ph>.</source>
          <target state="translated">下表顯示 <ph id="ph1">&lt;xref:System.IndexOutOfRangeException&gt;</ph> 執行個體的初始屬性值。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IndexOutOfRangeException.#ctor(System.String,System.Exception)">
          <source>Property</source>
          <target state="translated">屬性</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IndexOutOfRangeException.#ctor(System.String,System.Exception)">
          <source>Value</source>
          <target state="translated">值</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IndexOutOfRangeException.#ctor(System.String,System.Exception)">
          <source>The inner exception reference.</source>
          <target state="translated">內部例外狀況參考。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IndexOutOfRangeException.#ctor(System.String,System.Exception)">
          <source>The error message string.</source>
          <target state="translated">錯誤訊息字串。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>