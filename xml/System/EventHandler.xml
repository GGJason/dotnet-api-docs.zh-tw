<Type Name="EventHandler" FullName="System.EventHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="07986ea157c411c7d8d2b8f8cc8045b040e5c96a" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36431286" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void EventHandler(object sender, EventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed EventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.EventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub EventHandler(sender As Object, e As EventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void EventHandler(System::Object ^ sender, EventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type EventHandler = delegate of obj * EventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.EventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">
      <span data-ttu-id="e55b4-101">事件的來源。</span>
      <span class="sxs-lookup">
        <span data-stu-id="e55b4-101">The source of the event.</span>
      </span>
    </param>
    <param name="e">
      <span data-ttu-id="e55b4-102">不包含事件資料的物件。</span>
      <span class="sxs-lookup">
        <span data-stu-id="e55b4-102">An object that contains no event data.</span>
      </span>
    </param>
    <summary>
      <span data-ttu-id="e55b4-103">代表處理不含事件資料之事件的方法。</span>
      <span class="sxs-lookup">
        <span data-stu-id="e55b4-103">Represents the method that will handle an event that has no event data.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e55b4-104">.NET Framework 中的事件模型根據具有與其處理常式連接事件的事件委派。</span><span class="sxs-lookup"><span data-stu-id="e55b4-104">The event model in the .NET Framework is based on having an event delegate that connects an event with its handler.</span></span> <span data-ttu-id="e55b4-105">若要引發事件，需要兩個項目：</span><span class="sxs-lookup"><span data-stu-id="e55b4-105">To raise an event, two elements are needed:</span></span>  
  
-   <span data-ttu-id="e55b4-106">識別將回應提供給事件的方法委派。</span><span class="sxs-lookup"><span data-stu-id="e55b4-106">A delegate that identifies the method that provides the response to the event.</span></span>  
  
-   <span data-ttu-id="e55b4-107">（選擇性） 如果此事件提供資料保留事件資料的類別。</span><span class="sxs-lookup"><span data-stu-id="e55b4-107">Optionally, a class that holds the event data, if the event provides data.</span></span>  
  
 <span data-ttu-id="e55b4-108">委派是可定義簽章，也就是傳回值類型和方法的參數清單類型的類型。</span><span class="sxs-lookup"><span data-stu-id="e55b4-108">The delegate is a type that defines a signature, that is, the return value type and parameter list types for a method.</span></span> <span data-ttu-id="e55b4-109">您可以使用委派類型來宣告變數可以參考任何具有相同的簽章與委派的方法。</span><span class="sxs-lookup"><span data-stu-id="e55b4-109">You can use the delegate type to declare a variable that can refer to any method with the same signature as the delegate.</span></span>  
  
 <span data-ttu-id="e55b4-110">標準事件處理常式委派的簽章定義沒有傳回值的方法。</span><span class="sxs-lookup"><span data-stu-id="e55b4-110">The standard signature of an event handler delegate defines a method that does not return a value.</span></span> <span data-ttu-id="e55b4-111">這個方法的第一個參數的類型是<xref:System.Object>和參考引發事件的執行個體。</span><span class="sxs-lookup"><span data-stu-id="e55b4-111">This method's first parameter is of type <xref:System.Object> and refers to the instance that raises the event.</span></span> <span data-ttu-id="e55b4-112">其第二個參數衍生自類型<xref:System.EventArgs>和保留事件資料。</span><span class="sxs-lookup"><span data-stu-id="e55b4-112">Its second parameter is derived from type <xref:System.EventArgs> and holds the event data.</span></span> <span data-ttu-id="e55b4-113">如果事件不會產生事件資料，第二個參數是只值<xref:System.EventArgs.Empty?displayProperty=nameWithType>欄位。</span><span class="sxs-lookup"><span data-stu-id="e55b4-113">If the event does not generate event data, the second parameter is simply the value of the <xref:System.EventArgs.Empty?displayProperty=nameWithType> field.</span></span> <span data-ttu-id="e55b4-114">否則，第二個參數都是衍生自<xref:System.EventArgs>，並提供任何欄位或屬性需要保存事件資料。</span><span class="sxs-lookup"><span data-stu-id="e55b4-114">Otherwise, the second parameter is a type derived from <xref:System.EventArgs> and supplies any fields or properties needed to hold the event data.</span></span>  
  
 <span data-ttu-id="e55b4-115"><xref:System.EventHandler>委派是預先定義的委派，特別是表示事件處理常式方法不會產生資料的事件。</span><span class="sxs-lookup"><span data-stu-id="e55b4-115">The <xref:System.EventHandler> delegate is a predefined delegate that specifically represents an event handler method for an event that does not generate data.</span></span> <span data-ttu-id="e55b4-116">如果您的事件會產生資料，您必須使用泛型<xref:System.EventHandler%601>委派類別。</span><span class="sxs-lookup"><span data-stu-id="e55b4-116">If your event does generate data, you must use the generic <xref:System.EventHandler%601> delegate class.</span></span>  
  
 <span data-ttu-id="e55b4-117">若要處理事件的方法與關聯事件，加入事件委派的執行個體。</span><span class="sxs-lookup"><span data-stu-id="e55b4-117">To associate the event with the method that will handle the event, add an instance of the delegate to the event.</span></span> <span data-ttu-id="e55b4-118">除非您移除委派，否則每當事件發生時就會呼叫事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="e55b4-118">The event handler is called whenever the event occurs, unless you remove the delegate.</span></span>  
  
 <span data-ttu-id="e55b4-119">如需事件處理常式委派的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="e55b4-119">For more information about event handler delegates, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e55b4-120">下列範例會示範名為事件`ThresholdReached`相關聯<xref:System.EventHandler>委派。</span><span class="sxs-lookup"><span data-stu-id="e55b4-120">The following example shows an event named `ThresholdReached` that is associated with an <xref:System.EventHandler> delegate.</span></span> <span data-ttu-id="e55b4-121">指派給該方法<xref:System.EventHandler>呼叫委派`OnThresholdReached`方法。</span><span class="sxs-lookup"><span data-stu-id="e55b4-121">The method assigned to the <xref:System.EventHandler> delegate is called in the `OnThresholdReached` method.</span></span>  
  
 [!code-cpp[EventsOverview#6](~/samples/snippets/cpp/VS_Snippets_CLR/eventsoverview/cpp/programwithdata.cpp#6)]
 [!code-csharp[EventsOverview#6](~/samples/snippets/csharp/VS_Snippets_CLR/eventsoverview/cs/programwithdata.cs#6)]
 [!code-vb[EventsOverview#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventsoverview/vb/module1withdata.vb#6)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.EventHandler`1" />
    <altmember cref="T:System.EventArgs" />
    <altmember cref="T:System.Delegate" />
  </Docs>
</Type>