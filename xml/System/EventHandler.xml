<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="EventHandler.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac53058760c0eb1545e669ee6bd61bb90901585ac3e.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3058760c0eb1545e669ee6bd61bb90901585ac3e</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.EventHandler">
          <source>The source of the event.</source>
          <target state="translated">事件的來源。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.EventHandler">
          <source>An object that contains no event data.</source>
          <target state="translated">不包含事件資料的物件。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.EventHandler">
          <source>Represents the method that will handle an event that has no event data.</source>
          <target state="translated">代表處理不含事件資料之事件的方法。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EventHandler">
          <source>The event model in the .NET Framework is based on having an event delegate that connects an event with its handler.</source>
          <target state="translated">.NET Framework 中的事件模型根據具有與其處理常式連接事件的事件委派。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EventHandler">
          <source>To raise an event, two elements are needed:</source>
          <target state="translated">若要引發事件，需要兩個項目：</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EventHandler">
          <source>A delegate that identifies the method that provides the response to the event.</source>
          <target state="translated">識別將回應提供給事件的方法委派。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EventHandler">
          <source>Optionally, a class that holds the event data, if the event provides data.</source>
          <target state="translated">（選擇性） 如果此事件提供資料保留事件資料的類別。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EventHandler">
          <source>The delegate is a type that defines a signature, that is, the return value type and parameter list types for a method.</source>
          <target state="translated">委派是可定義簽章，也就是傳回值類型和方法的參數清單類型的類型。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EventHandler">
          <source>You can use the delegate type to declare a variable that can refer to any method with the same signature as the delegate.</source>
          <target state="translated">您可以使用委派類型來宣告變數可以參考任何具有相同的簽章與委派的方法。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EventHandler">
          <source>The standard signature of an event handler delegate defines a method that does not return a value.</source>
          <target state="translated">標準事件處理常式委派的簽章定義沒有傳回值的方法。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EventHandler">
          <source>This method's first parameter is of type <ph id="ph1">&lt;xref:System.Object&gt;</ph> and refers to the instance that raises the event.</source>
          <target state="translated">這個方法的第一個參數的類型是<ph id="ph1">&lt;xref:System.Object&gt;</ph>和參考引發事件的執行個體。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EventHandler">
          <source>Its second parameter is derived from type <ph id="ph1">&lt;xref:System.EventArgs&gt;</ph> and holds the event data.</source>
          <target state="translated">其第二個參數衍生自類型<ph id="ph1">&lt;xref:System.EventArgs&gt;</ph>和保留事件資料。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EventHandler">
          <source>If the event does not generate event data, the second parameter is simply the value of the <ph id="ph1">&lt;xref:System.EventArgs.Empty?displayProperty=nameWithType&gt;</ph> field.</source>
          <target state="translated">如果事件不會產生事件資料，第二個參數是只值<ph id="ph1">&lt;xref:System.EventArgs.Empty?displayProperty=nameWithType&gt;</ph>欄位。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EventHandler">
          <source>Otherwise, the second parameter is a type derived from <ph id="ph1">&lt;xref:System.EventArgs&gt;</ph> and supplies any fields or properties needed to hold the event data.</source>
          <target state="translated">否則，第二個參數都是衍生自<ph id="ph1">&lt;xref:System.EventArgs&gt;</ph>，並提供任何欄位或屬性需要保存事件資料。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EventHandler">
          <source>The <ph id="ph1">&lt;xref:System.EventHandler&gt;</ph> delegate is a predefined delegate that specifically represents an event handler method for an event that does not generate data.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.EventHandler&gt;</ph>委派是預先定義的委派，特別是表示事件處理常式方法不會產生資料的事件。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EventHandler">
          <source>If your event does generate data, you must use the generic <ph id="ph1">&lt;xref:System.EventHandler%601&gt;</ph> delegate class.</source>
          <target state="translated">如果您的事件會產生資料，您必須使用泛型<ph id="ph1">&lt;xref:System.EventHandler%601&gt;</ph>委派類別。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EventHandler">
          <source>To associate the event with the method that will handle the event, add an instance of the delegate to the event.</source>
          <target state="translated">若要處理事件的方法與關聯事件，加入事件委派的執行個體。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EventHandler">
          <source>The event handler is called whenever the event occurs, unless you remove the delegate.</source>
          <target state="translated">除非您移除委派，否則每當事件發生時就會呼叫事件處理常式。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EventHandler">
          <source>For more information about event handler delegates, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">如需事件處理常式委派的詳細資訊，請參閱<bpt id="p1">[</bpt>處理和引發事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EventHandler">
          <source>The following example shows an event named <ph id="ph1">`ThresholdReached`</ph> that is associated with an <ph id="ph2">&lt;xref:System.EventHandler&gt;</ph> delegate.</source>
          <target state="translated">下列範例會示範名為事件<ph id="ph1">`ThresholdReached`</ph>相關聯<ph id="ph2">&lt;xref:System.EventHandler&gt;</ph>委派。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EventHandler">
          <source>The method assigned to the <ph id="ph1">&lt;xref:System.EventHandler&gt;</ph> delegate is called in the <ph id="ph2">`OnThresholdReached`</ph> method.</source>
          <target state="translated">指派給該方法<ph id="ph1">&lt;xref:System.EventHandler&gt;</ph>呼叫委派<ph id="ph2">`OnThresholdReached`</ph>方法。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>