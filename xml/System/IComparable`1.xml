<Type Name="IComparable&lt;T&gt;" FullName="System.IComparable&lt;T&gt;">
  <TypeSignature Language="C#" Value="public interface IComparable&lt;in T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IComparable`1&lt;- T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.IComparable`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IComparable(Of In T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IComparable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="T"><span data-ttu-id="41f45-101">要比較之物件的類型。</span><span class="sxs-lookup"><span data-stu-id="41f45-101">The type of object to compare.</span></span></typeparam>
    <summary><span data-ttu-id="41f45-102">定義通用的比較方法，實值類型或類別會實作這個方法，以建立特定類型的比較方法來排序其執行個體。</span><span class="sxs-lookup"><span data-stu-id="41f45-102">Defines a generalized comparison method that a value type or class implements to create a type-specific comparison method for ordering or sorting its instances.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41f45-103">這個介面由可以排列或排序其值的型別所實作，並提供強類型的比較方法，來排序成員的泛型集合物件。</span><span class="sxs-lookup"><span data-stu-id="41f45-103">This interface is implemented by types whose values can be ordered or sorted and provides a strongly typed comparison method for ordering members of a generic collection object.</span></span> <span data-ttu-id="41f45-104">例如，一個數字可能會大於第二個數字，且一個字串可以出現在另一個之前的字母順序。</span><span class="sxs-lookup"><span data-stu-id="41f45-104">For example, one number can be larger than a second number, and one string can appear in alphabetical order before another.</span></span> <span data-ttu-id="41f45-105">它需要實作的類型會定義單一方法<xref:System.IComparable%601.CompareTo%28%600%29>，指出是否目前的執行個體在排序次序的位置之前，之後，或是與相同類型的第二個物件相同。</span><span class="sxs-lookup"><span data-stu-id="41f45-105">It requires that implementing types define a single method, <xref:System.IComparable%601.CompareTo%28%600%29>, that indicates whether the position of the current instance in the sort order is before, after, or the same as a second object of the same type.</span></span> <span data-ttu-id="41f45-106">一般而言，直接從開發人員程式碼不被呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="41f45-106">Typically, the method is not called directly from developer code.</span></span> <span data-ttu-id="41f45-107">相反地，它會自動呼叫方法例如<xref:System.Collections.Generic.List%601.Sort?displayProperty=nameWithType>和<xref:System.Collections.Generic.SortedList%602.Add%2A>。</span><span class="sxs-lookup"><span data-stu-id="41f45-107">Instead, it is called automatically by methods such as <xref:System.Collections.Generic.List%601.Sort?displayProperty=nameWithType> and <xref:System.Collections.Generic.SortedList%602.Add%2A>.</span></span>  
  
 <span data-ttu-id="41f45-108">一般而言，型別，提供<xref:System.IComparable%601>實作也會實作<xref:System.IEquatable%601>介面。</span><span class="sxs-lookup"><span data-stu-id="41f45-108">Typically, types that provide an <xref:System.IComparable%601> implementation also implement the <xref:System.IEquatable%601> interface.</span></span> <span data-ttu-id="41f45-109"><xref:System.IEquatable%601>介面會定義<xref:System.IEquatable%601.Equals%2A>方法，可判斷是否相等的實作類型的執行個體。</span><span class="sxs-lookup"><span data-stu-id="41f45-109">The <xref:System.IEquatable%601> interface defines the <xref:System.IEquatable%601.Equals%2A> method, which determines the equality of instances of the implementing type.</span></span>  
  
 <span data-ttu-id="41f45-110">實作<xref:System.IComparable%601.CompareTo%28%600%29>方法必須傳回<xref:System.Int32>具有三個值之一下, 表所示。</span><span class="sxs-lookup"><span data-stu-id="41f45-110">The implementation of the <xref:System.IComparable%601.CompareTo%28%600%29> method must return an <xref:System.Int32> that has one of three values, as shown in the following table.</span></span>  
  
|<span data-ttu-id="41f45-111">值</span><span class="sxs-lookup"><span data-stu-id="41f45-111">Value</span></span>|<span data-ttu-id="41f45-112">意義</span><span class="sxs-lookup"><span data-stu-id="41f45-112">Meaning</span></span>|  
|-----------|-------------|  
|<span data-ttu-id="41f45-113">小於零</span><span class="sxs-lookup"><span data-stu-id="41f45-113">Less than zero</span></span>|<span data-ttu-id="41f45-114">此物件位於所指定的物件<xref:System.IComparable%601.CompareTo%2A>方法，在排序次序。</span><span class="sxs-lookup"><span data-stu-id="41f45-114">This object precedes the object specified by the <xref:System.IComparable%601.CompareTo%2A> method in the sort order.</span></span>|  
|<span data-ttu-id="41f45-115">零</span><span class="sxs-lookup"><span data-stu-id="41f45-115">Zero</span></span>|<span data-ttu-id="41f45-116">此目前執行個體中所指定的物件在排序次序相同位置，就會發生<xref:System.IComparable%601.CompareTo%2A>方法引數。</span><span class="sxs-lookup"><span data-stu-id="41f45-116">This current instance occurs in the same position in the sort order as the object specified by the <xref:System.IComparable%601.CompareTo%2A> method argument.</span></span>|  
|<span data-ttu-id="41f45-117">大於零</span><span class="sxs-lookup"><span data-stu-id="41f45-117">Greater than zero</span></span>|<span data-ttu-id="41f45-118">這個目前執行個體位於所指定的物件<xref:System.IComparable%601.CompareTo%2A>方法引數，在排序次序。</span><span class="sxs-lookup"><span data-stu-id="41f45-118">This current instance follows the object specified by the <xref:System.IComparable%601.CompareTo%2A> method argument in the sort order.</span></span>|  
  
 <span data-ttu-id="41f45-119">所有數字類型 (例如<xref:System.Int32>和<xref:System.Double>) 實作<xref:System.IComparable%601>、 一樣<xref:System.String>， <xref:System.Char>，和<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="41f45-119">All numeric types (such as <xref:System.Int32> and <xref:System.Double>) implement <xref:System.IComparable%601>, as do <xref:System.String>, <xref:System.Char>, and <xref:System.DateTime>.</span></span> <span data-ttu-id="41f45-120">自訂類型也應該提供自己的實作<xref:System.IComparable%601>可對物件執行個體，以排列或排序。</span><span class="sxs-lookup"><span data-stu-id="41f45-120">Custom types should also provide their own implementation of <xref:System.IComparable%601> to enable object instances to be ordered or sorted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41f45-121">下列程式碼範例說明實作<xref:System.IComparable%601>簡單`Temperature`物件。</span><span class="sxs-lookup"><span data-stu-id="41f45-121">The following code example illustrates the implementation of  <xref:System.IComparable%601> for a simple `Temperature` object.</span></span> <span data-ttu-id="41f45-122">此範例會建立<xref:System.Collections.Generic.SortedList%602>與字串集合`Temperature`物件索引鍵，並將溫度和字串的數個組加入至清單順序。</span><span class="sxs-lookup"><span data-stu-id="41f45-122">The example creates a <xref:System.Collections.Generic.SortedList%602> collection of strings with `Temperature` object keys, and adds several pairs of temperatures and strings to the list out of sequence.</span></span> <span data-ttu-id="41f45-123">在呼叫<xref:System.Collections.Generic.SortedList%602.Add%2A>方法，<xref:System.Collections.Generic.SortedList%602>集合使用<xref:System.IComparable%601>實作排序清單項目，然後會遞增溫度的順序顯示。</span><span class="sxs-lookup"><span data-stu-id="41f45-123">In the call to the <xref:System.Collections.Generic.SortedList%602.Add%2A> method, the <xref:System.Collections.Generic.SortedList%602> collection uses the <xref:System.IComparable%601> implementation to sort the list entries, which are then displayed in order of increasing temperature.</span></span>  
  
 [!code-cpp[IComparable\`1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/IComparable`1 Example/CPP/source.cpp#1)]
 [!code-csharp[IComparable\`1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/IComparable`1 Example/CS/source.cs#1)]
 [!code-vb[IComparable\`1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IComparable`1 Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para><span data-ttu-id="41f45-124">取代的型別參數<see cref="T:System.IComparable`1" />介面會實作這個介面的型別。</span><span class="sxs-lookup"><span data-stu-id="41f45-124">Replace the type parameter of the <see cref="T:System.IComparable`1" /> interface with the type that is implementing this interface.</span></span>  
  
 <span data-ttu-id="41f45-125">如果您實作<see cref="T:System.IComparable`1" />，您應該多載<see langword="op_GreaterThan" />， <see langword="op_GreaterThanOrEqual" />， <see langword="op_LessThan" />，和<see langword="op_LessThanOrEqual" />運算子傳回一致的有效值<see cref="M:System.IComparable`1.CompareTo(`0)" />。</span><span class="sxs-lookup"><span data-stu-id="41f45-125">If you implement <see cref="T:System.IComparable`1" />, you should overload the <see langword="op_GreaterThan" />, <see langword="op_GreaterThanOrEqual" />, <see langword="op_LessThan" />, and <see langword="op_LessThanOrEqual" /> operators to return values that are consistent with <see cref="M:System.IComparable`1.CompareTo(`0)" />.</span></span> <span data-ttu-id="41f45-126">此外，您也應該實作<see cref="T:System.IEquatable`1" />。</span><span class="sxs-lookup"><span data-stu-id="41f45-126">In addition, you should also implement <see cref="T:System.IEquatable`1" />.</span></span> <span data-ttu-id="41f45-127">請參閱<see cref="T:System.IEquatable`1" />文件以取得完整資訊。</span><span class="sxs-lookup"><span data-stu-id="41f45-127">See the <see cref="T:System.IEquatable`1" /> article for complete information.</span></span></para>
    </block>
    <altmember cref="T:System.IComparable" />
    <altmember cref="T:System.IEquatable`1" />
  </Docs>
  <Members>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (T other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(!T other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IComparable`1.CompareTo(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (other As T) As Integer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="T" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="41f45-128">與這個執行個體相互比較的物件。</span><span class="sxs-lookup"><span data-stu-id="41f45-128">An object to compare with this instance.</span></span></param>
        <summary><span data-ttu-id="41f45-129">將目前的執行個體與相同類型的另一個物件相比較，並傳回整數，這個整數表示目前的執行個體在排序次序中，位於另一個物件之前、之後或相同位置。</span><span class="sxs-lookup"><span data-stu-id="41f45-129">Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.</span></span></summary>
        <returns><span data-ttu-id="41f45-130">值，表示所比較之物件的相對順序。</span><span class="sxs-lookup"><span data-stu-id="41f45-130">A value that indicates the relative order of the objects being compared.</span></span> <span data-ttu-id="41f45-131">傳回值具有這些意義：</span><span class="sxs-lookup"><span data-stu-id="41f45-131">The return value has these meanings:</span></span>  
  
 <span data-ttu-id="41f45-132"><list type="table"><listheader><term> 值</span><span class="sxs-lookup"><span data-stu-id="41f45-132"><list type="table"><listheader><term> Value</span></span>  
  
 <span data-ttu-id="41f45-133"></term><description> 意義</span><span class="sxs-lookup"><span data-stu-id="41f45-133"></term><description> Meaning</span></span>  
  
 <span data-ttu-id="41f45-134"></description></listheader><item><term>小於零</span><span class="sxs-lookup"><span data-stu-id="41f45-134"></description></listheader><item><term> Less than zero</span></span>  
  
 <span data-ttu-id="41f45-135"></term><description> 這個執行個體在排序次序中會在 <paramref name="other" /> 之前。</span><span class="sxs-lookup"><span data-stu-id="41f45-135"></term><description> This instance precedes <paramref name="other" /> in the sort order.</span></span>  
  
 <span data-ttu-id="41f45-136"></description></item><item><term> 零</span><span class="sxs-lookup"><span data-stu-id="41f45-136"></description></item><item><term> Zero</span></span>  
  
 <span data-ttu-id="41f45-137"></term><description> 這個執行個體出現在排序次序中的位置和 <paramref name="other" /> 相同。</span><span class="sxs-lookup"><span data-stu-id="41f45-137"></term><description> This instance occurs in the same position in the sort order as <paramref name="other" />.</span></span>  
  
 <span data-ttu-id="41f45-138"></description></item><item><term> 大於零</span><span class="sxs-lookup"><span data-stu-id="41f45-138"></description></item><item><term> Greater than zero</span></span>  
  
 <span data-ttu-id="41f45-139"></term><description> 這個執行個體在排序次序中會在 <paramref name="other" /> 之後。</span><span class="sxs-lookup"><span data-stu-id="41f45-139"></term><description> This instance follows <paramref name="other" /> in the sort order.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41f45-140"><xref:System.IComparable%601.CompareTo%2A> 提供強類型的比較方法來排序成員的泛型集合物件。</span><span class="sxs-lookup"><span data-stu-id="41f45-140"><xref:System.IComparable%601.CompareTo%2A> provides a strongly typed comparison method for ordering members of a generic collection object.</span></span> <span data-ttu-id="41f45-141">因此，它通常不稱為直接從開發人員程式碼。</span><span class="sxs-lookup"><span data-stu-id="41f45-141">Because of this, it is usually not called directly from developer code.</span></span> <span data-ttu-id="41f45-142">相反地，它會自動呼叫方法例如<xref:System.Collections.Generic.List%601.Sort?displayProperty=nameWithType>和<xref:System.Collections.Generic.SortedList%602.Add%2A>。</span><span class="sxs-lookup"><span data-stu-id="41f45-142">Instead, it is called automatically by methods such as <xref:System.Collections.Generic.List%601.Sort?displayProperty=nameWithType> and <xref:System.Collections.Generic.SortedList%602.Add%2A>.</span></span>  
  
 <span data-ttu-id="41f45-143">此方法是只定義，而且必須有效果的特定類別或實值類型所實作。</span><span class="sxs-lookup"><span data-stu-id="41f45-143">This method is only a definition and must be implemented by a specific class or value type to have effect.</span></span> <span data-ttu-id="41f45-144">傳回的值 （「 之前 」、 「 發生在相同的位置，"和"遵循） 的區段取決於特定的實作中指定的比較結果的意義。</span><span class="sxs-lookup"><span data-stu-id="41f45-144">The meaning of the comparisons specified in the Return Values section ("precedes", "occurs in the same position as", and "follows) depends on the particular implementation.</span></span>  
  
 <span data-ttu-id="41f45-145">根據定義，任何物件比較大於`null`，並比較是否等於其他兩個 null 參考。</span><span class="sxs-lookup"><span data-stu-id="41f45-145">By definition, any object compares greater than `null`, and two null references compare equal to each other.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41f45-146">下列程式碼範例說明實作<xref:System.IComparable>簡單`Temperature`物件。</span><span class="sxs-lookup"><span data-stu-id="41f45-146">The following code example illustrates the implementation of <xref:System.IComparable> for a simple `Temperature` object.</span></span> <span data-ttu-id="41f45-147">此範例會建立<xref:System.Collections.Generic.SortedList%602>與字串集合`Temperature`物件索引鍵，並將溫度和字串的數個組加入至清單順序。</span><span class="sxs-lookup"><span data-stu-id="41f45-147">The example creates a <xref:System.Collections.Generic.SortedList%602> collection of strings with `Temperature` object keys, and adds several pairs of temperatures and strings to the list out of sequence.</span></span> <span data-ttu-id="41f45-148">在呼叫<xref:System.Collections.Generic.SortedList%602.Add%2A>方法，<xref:System.Collections.Generic.SortedList%602>集合使用<xref:System.IComparable%601>實作排序清單項目，然後會遞增溫度的順序顯示。</span><span class="sxs-lookup"><span data-stu-id="41f45-148">In the call to the <xref:System.Collections.Generic.SortedList%602.Add%2A> method, the <xref:System.Collections.Generic.SortedList%602> collection uses the <xref:System.IComparable%601> implementation to sort the list entries, which are then displayed in order of increasing temperature.</span></span>  
  
 [!code-cpp[IComparable\`1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/IComparable`1 Example/CPP/source.cpp#1)]
 [!code-csharp[IComparable\`1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/IComparable`1 Example/CS/source.cs#1)]
 [!code-vb[IComparable\`1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IComparable`1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="41f45-149">物件的 A、 B 和 C，下列條件必須為真：</span><span class="sxs-lookup"><span data-stu-id="41f45-149">For objects A, B, and C, the following must be true:</span></span>  
  
 <span data-ttu-id="41f45-150"><c>A.CompareTo(A)</c>才能傳回零。</span><span class="sxs-lookup"><span data-stu-id="41f45-150"><c>A.CompareTo(A)</c> is required to return zero.</span></span>  
  
 <span data-ttu-id="41f45-151">如果<c>A.CompareTo(B)</c>傳回零，然後<c>B.CompareTo(A)</c>才能傳回零。</span><span class="sxs-lookup"><span data-stu-id="41f45-151">If <c>A.CompareTo(B)</c> returns zero, then <c>B.CompareTo(A)</c> is required to return zero.</span></span>  
  
 <span data-ttu-id="41f45-152">如果<c>A.CompareTo(B)</c>傳回零和<c>B.CompareTo(C)</c>傳回零，然後<c>A.CompareTo(C)</c>才能傳回零。</span><span class="sxs-lookup"><span data-stu-id="41f45-152">If <c>A.CompareTo(B)</c> returns zero and <c>B.CompareTo(C)</c> returns zero, then <c>A.CompareTo(C)</c> is required to return zero.</span></span>  
  
 <span data-ttu-id="41f45-153">如果<c>A.CompareTo(B)</c>然後傳回值不是零， <c>B.CompareTo(A)</c>才能傳回值的正負號相反。</span><span class="sxs-lookup"><span data-stu-id="41f45-153">If <c>A.CompareTo(B)</c> returns a value other than zero, then <c>B.CompareTo(A)</c> is required to return a value of the opposite sign.</span></span>  
  
 <span data-ttu-id="41f45-154">如果<c>A.CompareTo(B)</c>傳回值<paramref name="x" />不等於零，和<c>B.CompareTo(C)</c>傳回值<paramref name="y" />做為相同的正負號的<paramref name="x" />，然後<c>a。CompareTo(C)</c>才能傳回的值相同的簽章為<paramref name="x" />和<paramref name="y" />。</span><span class="sxs-lookup"><span data-stu-id="41f45-154">If <c>A.CompareTo(B)</c> returns a value <paramref name="x" /> that is not equal to zero, and <c>B.CompareTo(C)</c> returns a value <paramref name="y" /> of the same sign as <paramref name="x" />, then <c>A.CompareTo(C)</c> is required to return a value of the same sign as <paramref name="x" /> and <paramref name="y" />.</span></span></para>
        </block>
        <block subset="none" type="usage">
          <para><span data-ttu-id="41f45-155">使用<see cref="M:System.IComparable`1.CompareTo(`0)" />判斷類別的執行個體的順序的方法。</span><span class="sxs-lookup"><span data-stu-id="41f45-155">Use the <see cref="M:System.IComparable`1.CompareTo(`0)" /> method to determine the ordering of instances of a class.</span></span></para>
        </block>
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.IComparable" />
      </Docs>
    </Member>
  </Members>
</Type>