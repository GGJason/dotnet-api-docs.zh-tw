<Type Name="LocalDataStoreSlot" FullName="System.LocalDataStoreSlot">
  <TypeSignature Language="C#" Value="public sealed class LocalDataStoreSlot" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit LocalDataStoreSlot extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.LocalDataStoreSlot" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class LocalDataStoreSlot" />
  <TypeSignature Language="C++ CLI" Value="public ref class LocalDataStoreSlot sealed" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Threading.Thread</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="36282-101">封裝記憶體位置以儲存區域資料。</span><span class="sxs-lookup"><span data-stu-id="36282-101">Encapsulates a memory slot to store local data.</span></span> <span data-ttu-id="36282-102">這個類別無法被繼承。</span><span class="sxs-lookup"><span data-stu-id="36282-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36282-103">.NET Framework 提供兩種機制使用執行緒區域儲存區 (TLS): 執行緒相關的靜態欄位和資料位置。</span><span class="sxs-lookup"><span data-stu-id="36282-103">The .NET Framework provides two mechanisms for using thread local storage (TLS): thread-relative static fields, and data slots.</span></span>  
  
-   <span data-ttu-id="36282-104">執行緒相關的靜態欄位是`static`欄位 (`Shared`在 Visual Basic 中的欄位)，以標記<xref:System.ThreadStaticAttribute>屬性。</span><span class="sxs-lookup"><span data-stu-id="36282-104">Thread-relative static fields are `static` fields (`Shared` fields in Visual Basic) that are marked with the <xref:System.ThreadStaticAttribute> attribute.</span></span> <span data-ttu-id="36282-105">可提供更佳的效能比資料位置，並且可編譯時間型別檢查。</span><span class="sxs-lookup"><span data-stu-id="36282-105">They provide better performance than data slots, and enable compile-time type checking.</span></span>  
  
-   <span data-ttu-id="36282-106">資料位置較慢，更難以使用以外的執行緒相關的靜態欄位。</span><span class="sxs-lookup"><span data-stu-id="36282-106">Data slots are slower and more awkward to use than thread-relative static fields.</span></span> <span data-ttu-id="36282-107">此外，資料會儲存為類型<xref:System.Object>，因此您必須先轉換成正確的型別後才能使用它。</span><span class="sxs-lookup"><span data-stu-id="36282-107">Also, data is stored as type <xref:System.Object>, so you must cast it to the correct type before using it.</span></span> <span data-ttu-id="36282-108">不過，您可以使用資料位置，當您有足夠的資訊，在編譯時期配置的靜態欄位。</span><span class="sxs-lookup"><span data-stu-id="36282-108">However, you can use data slots when you have insufficient information at compile time to allocate static fields.</span></span>  
  
 <span data-ttu-id="36282-109">如需有關如何使用 TLS 的詳細資訊，請參閱[執行緒區域儲存區： 執行緒相關的靜態欄位和資料位置](~/docs/standard/threading/thread-local-storage-thread-relative-static-fields-and-data-slots.md)。</span><span class="sxs-lookup"><span data-stu-id="36282-109">For more information about using TLS, see [Thread Local Storage: Thread-Relative Static Fields and Data Slots](~/docs/standard/threading/thread-local-storage-thread-relative-static-fields-and-data-slots.md).</span></span>  
  
 <span data-ttu-id="36282-110">同樣地，.NET Framework 提供兩種機制使用內容的本機儲存體： 內容的相對靜態欄位和資料位置。</span><span class="sxs-lookup"><span data-stu-id="36282-110">Similarly, the .NET Framework provides two mechanisms for using context local storage: context-relative static fields and data slots.</span></span> <span data-ttu-id="36282-111">內容相關的靜態欄位都是靜態的欄位，以標記<xref:System.ContextStaticAttribute>屬性。</span><span class="sxs-lookup"><span data-stu-id="36282-111">Context-relative static fields are static fields that are marked with the <xref:System.ContextStaticAttribute> attribute.</span></span> <span data-ttu-id="36282-112">使用這兩個機制之間的取捨的類似於使用相對執行緒的靜態欄位和資料位置之間的利弊。</span><span class="sxs-lookup"><span data-stu-id="36282-112">The trade-offs between using these two mechanisms are similar to the tradeoffs between using thread-relative static fields and data slots.</span></span>  
  
 <span data-ttu-id="36282-113"><xref:System.LocalDataStoreSlot>結構可做為本機儲存執行緒的記憶體機制和內容會分別儲存執行緒特定與特定內容相關的資料，可以使用。</span><span class="sxs-lookup"><span data-stu-id="36282-113">The <xref:System.LocalDataStoreSlot> structure serves as a local store memory mechanism that threads and contexts can use to store thread-specific and context-specific data, respectively.</span></span> <span data-ttu-id="36282-114">建立時，common language runtime 會配置每個處理序的多位置資料存放區陣列。</span><span class="sxs-lookup"><span data-stu-id="36282-114">The common language runtime allocates a multi-slot data store array to each process when it is created.</span></span> <span data-ttu-id="36282-115">執行緒或內容物件就會過期之後，重複使用不同的函式來配置資料存放區中的資料位置、 儲存和擷取資料中的值位置，以及釋放資料位置的執行緒或內容呼叫。</span><span class="sxs-lookup"><span data-stu-id="36282-115">The thread or context calls various functions to allocate a data slot in the data store, to store and retrieve a data value in the slot, and to free a data slot for reuse after the thread or context object expires.</span></span>  
  
 <span data-ttu-id="36282-116">每個執行緒或內容; 獨有的資料位置未在執行緒或內容物件之間共用它們的值。</span><span class="sxs-lookup"><span data-stu-id="36282-116">The data slots are unique per thread or context; their values are not shared between the thread or context objects.</span></span> <span data-ttu-id="36282-117">依名稱或索引編號，就可以配置資料位置。</span><span class="sxs-lookup"><span data-stu-id="36282-117">Data slots can be allocated by a name or by an index number.</span></span>  
  
 <span data-ttu-id="36282-118">如需儲存本機資料的詳細資訊，請參閱<xref:System.Threading.Thread>或<xref:System.Runtime.Remoting.Contexts.Context>。</span><span class="sxs-lookup"><span data-stu-id="36282-118">For more information about storing local data, see <xref:System.Threading.Thread> or <xref:System.Runtime.Remoting.Contexts.Context>.</span></span> <span data-ttu-id="36282-119"><xref:System.LocalDataStoreSlot>這類的類別使用的方法<xref:System.Threading.Thread.AllocateNamedDataSlot%2A?displayProperty=nameWithType>， <xref:System.Runtime.Remoting.Contexts.Context.AllocateNamedDataSlot%2A?displayProperty=nameWithType>， <xref:System.Threading.Thread.GetData%2A?displayProperty=nameWithType>，和<xref:System.Runtime.Remoting.Contexts.Context.GetData%2A?displayProperty=nameWithType>; 它沒有任何您需要使用它自己的方法。</span><span class="sxs-lookup"><span data-stu-id="36282-119">The <xref:System.LocalDataStoreSlot> class is used with methods such as <xref:System.Threading.Thread.AllocateNamedDataSlot%2A?displayProperty=nameWithType>, <xref:System.Runtime.Remoting.Contexts.Context.AllocateNamedDataSlot%2A?displayProperty=nameWithType>, <xref:System.Threading.Thread.GetData%2A?displayProperty=nameWithType>, and <xref:System.Runtime.Remoting.Contexts.Context.GetData%2A?displayProperty=nameWithType>; it does not have any methods of its own that you need to use.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Threading.Thread" />
    <altmember cref="T:System.Runtime.Remoting.Contexts.Context" />
  </Docs>
  <Members>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~LocalDataStoreSlot ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.LocalDataStoreSlot.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!LocalDataStoreSlot ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="36282-120">確認釋出資源，並在記憶體回收行程再利用 <see cref="T:System.LocalDataStoreSlot" /> 物件時執行其他清除作業。</span><span class="sxs-lookup"><span data-stu-id="36282-120">Ensures that resources are freed and other cleanup operations are performed when the garbage collector reclaims the <see cref="T:System.LocalDataStoreSlot" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36282-121">記憶體回收行程呼叫<xref:System.LocalDataStoreSlot.Finalize%2A>準備最終處理而將目前的物件時。</span><span class="sxs-lookup"><span data-stu-id="36282-121">The garbage collector calls <xref:System.LocalDataStoreSlot.Finalize%2A> when the current object is ready to be finalized.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.Finalize" />
      </Docs>
    </Member>
  </Members>
</Type>