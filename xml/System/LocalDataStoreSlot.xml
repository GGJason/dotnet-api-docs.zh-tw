<Type Name="LocalDataStoreSlot" FullName="System.LocalDataStoreSlot">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="62e95731f3daf201a4fa15d552b9195eba494808" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39853414" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class LocalDataStoreSlot" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit LocalDataStoreSlot extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.LocalDataStoreSlot" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class LocalDataStoreSlot" />
  <TypeSignature Language="C++ CLI" Value="public ref class LocalDataStoreSlot sealed" />
  <TypeSignature Language="F#" Value="type LocalDataStoreSlot = class" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Threading.Thread</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>封裝記憶體位置以儲存區域資料。 這個類別無法被繼承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework 會提供兩種機制來使用執行緒區域儲存區 (TLS): 執行緒相關靜態欄位和資料插槽。  
  
-   執行緒相關靜態欄位`static`欄位 (`Shared` Visual Basic 中的欄位)，會標示<xref:System.ThreadStaticAttribute>屬性。 所提供的更佳的效能比資料插槽，並啟用編譯時期類型檢查。  
  
-   資料位置是較慢且更難使用與執行緒相關靜態欄位。 此外，資料會儲存為類型<xref:System.Object>，因此您必須將它轉換成正確的類型，才能使用它。 不過，您可以使用資料插槽，當您有足夠的資訊，在編譯時期来配置靜態欄位。  
  
 如需使用 TLS 的詳細資訊，請參閱[執行緒區域儲存區： 執行緒相關靜態欄位和資料位置](~/docs/standard/threading/thread-local-storage-thread-relative-static-fields-and-data-slots.md)。  
  
 同樣地，.NET Framework 會提供兩種機制來使用內容的本機儲存體： 內容相關靜態欄位和資料插槽。 內容相關的靜態欄位是標示的靜態欄位<xref:System.ContextStaticAttribute>屬性。 使用這兩個機制之間的取捨是類似於使用執行緒相關靜態欄位和資料位置之間的取捨。  
  
 <xref:System.LocalDataStoreSlot>結構可做為本機儲存執行緒的記憶體機制和內容可用來分別儲存執行緒特定與特定內容的資料。 建立時，common language runtime 會配置到每個處理序的多位置資料存放區陣列。 執行緒或內容物件過期之後，重複使用不同的函式來配置資料存放區中的資料位置、 儲存和擷取資料中值的位置，以及免費的資料位置的執行緒或內容呼叫。  
  
 資料位置是唯一的每個執行緒或內容;其值不會在執行緒或內容物件之間共用。 依名稱或索引編號，可以將配置資料插槽。  
  
 如需儲存本機資料的詳細資訊，請參閱 <<c0> <xref:System.Threading.Thread> 或<xref:System.Runtime.Remoting.Contexts.Context>。 <xref:System.LocalDataStoreSlot>類別會搭配方法這類<xref:System.Threading.Thread.AllocateNamedDataSlot%2A?displayProperty=nameWithType>， <xref:System.Runtime.Remoting.Contexts.Context.AllocateNamedDataSlot%2A?displayProperty=nameWithType>， <xref:System.Threading.Thread.GetData%2A?displayProperty=nameWithType>，和<xref:System.Runtime.Remoting.Contexts.Context.GetData%2A?displayProperty=nameWithType>; 它未包含任何您需要使用它自己的方法。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Threading.Thread" />
    <altmember cref="T:System.Runtime.Remoting.Contexts.Context" />
  </Docs>
  <Members>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~LocalDataStoreSlot ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.LocalDataStoreSlot.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!LocalDataStoreSlot ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="localDataStoreSlot.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>確認釋出資源，並在記憶體回收行程再利用 <see cref="T:System.LocalDataStoreSlot" /> 物件時執行其他清除作業。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 記憶體回收行程呼叫<xref:System.LocalDataStoreSlot.Finalize%2A>時準備好完成目前的物件。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.Finalize" />
      </Docs>
    </Member>
  </Members>
</Type>