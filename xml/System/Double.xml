<Type Name="Double" FullName="System.Double">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="357589b82baee7a186f4d0e78ed4f90df3a0cf88" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="40452191" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct Double : IComparable, IComparable&lt;double&gt;, IConvertible, IEquatable&lt;double&gt;, IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit float64 extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;float64&gt;, class System.IConvertible, class System.IEquatable`1&lt;float64&gt;, class System.IFormattable" />
  <TypeSignature Language="DocId" Value="T:System.Double" />
  <TypeSignature Language="VB.NET" Value="Public Structure Double&#xA;Implements IComparable, IComparable(Of Double), IConvertible, IEquatable(Of Double), IFormattable" />
  <TypeSignature Language="C++ CLI" Value="public value class Double : IComparable, IComparable&lt;double&gt;, IConvertible, IEquatable&lt;double&gt;, IFormattable" />
  <TypeSignature Language="F#" Value="type double = struct&#xA;    interface IFormattable&#xA;    interface IConvertible" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.Double&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IConvertible</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Double&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="86f72-101">表示雙精度浮點數。</span>
      <span class="sxs-lookup">
        <span data-stu-id="86f72-101">Represents a double-precision floating-point number.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86f72-102"><xref:System.Double>實值型別代表值範圍從負 1.79769313486232e308 到正 1.79769313486232 e 308，以及正或負 0、 雙精確度 64 位元數字<xref:System.Double.PositiveInfinity>， <xref:System.Double.NegativeInfinity>，並不是數字 (<xref:System.Double.NaN>).</span><span class="sxs-lookup"><span data-stu-id="86f72-102">The <xref:System.Double> value type represents a double-precision 64-bit number with values ranging from negative 1.79769313486232e308 to positive 1.79769313486232e308, as well as positive or negative zero, <xref:System.Double.PositiveInfinity>, <xref:System.Double.NegativeInfinity>, and not a number (<xref:System.Double.NaN>).</span></span> <span data-ttu-id="86f72-103">它用來代表值，是極大 （例如行星或個之間的距離） 或極小 （在公斤物質分子大量），通常並不精確 （例如距離地球另一個太陽系），<xref:System.Double>類型符合 IEC 60559:1989 (IEEE 754) 二進位浮點運算的標準。</span><span class="sxs-lookup"><span data-stu-id="86f72-103">It is intended to represent values that are extremely large (such as distances between planets or galaxies) or extremely small (the molecular mass of a substance in kilograms) and that often are imprecise (such as the distance from earth to another solar system), The <xref:System.Double> type complies with the IEC 60559:1989 (IEEE 754) standard for binary floating-point arithmetic.</span></span>  
  
 <span data-ttu-id="86f72-104">本主題包含下列章節：</span><span class="sxs-lookup"><span data-stu-id="86f72-104">This topic consists of the following sections:</span></span>  
  
-   [<span data-ttu-id="86f72-105">浮點數表示和有效位數</span><span class="sxs-lookup"><span data-stu-id="86f72-105">Floating-point representation and precision</span></span>](#Precision)  
  
-   [<span data-ttu-id="86f72-106">測試相等</span><span class="sxs-lookup"><span data-stu-id="86f72-106">Testing for equality</span></span>](#Equality)  
  
-   [<span data-ttu-id="86f72-107">浮點值和例外狀況</span><span class="sxs-lookup"><span data-stu-id="86f72-107">Floating-point values and exceptions</span></span>](#Exceptions)  
  
-   [<span data-ttu-id="86f72-108">型別轉換和雙精確度結構</span><span class="sxs-lookup"><span data-stu-id="86f72-108">Type conversions and the Double structure</span></span>](#Conversions)  
  
-   [<span data-ttu-id="86f72-109">浮點數的功能</span><span class="sxs-lookup"><span data-stu-id="86f72-109">Floating-point functionality</span></span>](#Functionality)  
  
<a name="Precision"></a>   
## <a name="floating-point-representation-and-precision"></a><span data-ttu-id="86f72-110">浮點數表示和有效位數</span><span class="sxs-lookup"><span data-stu-id="86f72-110">Floating-Point Representation and Precision</span></span>  
 <span data-ttu-id="86f72-111"><xref:System.Double>資料型別雙精確度浮點值 64 位元二進位格式儲存下, 表所示：</span><span class="sxs-lookup"><span data-stu-id="86f72-111">The <xref:System.Double> data type stores double-precision floating-point values in a 64-bit binary format, as shown in the following table:</span></span>  
  
|<span data-ttu-id="86f72-112">組件</span><span class="sxs-lookup"><span data-stu-id="86f72-112">Part</span></span>|<span data-ttu-id="86f72-113">位元</span><span class="sxs-lookup"><span data-stu-id="86f72-113">Bits</span></span>|  
|----------|----------|  
|<span data-ttu-id="86f72-114">有效數字或尾數</span><span class="sxs-lookup"><span data-stu-id="86f72-114">Significand or mantissa</span></span>|<span data-ttu-id="86f72-115">0-51</span><span class="sxs-lookup"><span data-stu-id="86f72-115">0-51</span></span>|  
|<span data-ttu-id="86f72-116">指數</span><span class="sxs-lookup"><span data-stu-id="86f72-116">Exponent</span></span>|<span data-ttu-id="86f72-117">52-62</span><span class="sxs-lookup"><span data-stu-id="86f72-117">52-62</span></span>|  
|<span data-ttu-id="86f72-118">符號 (0 = 正數、 1 = 負)</span><span class="sxs-lookup"><span data-stu-id="86f72-118">Sign (0 = Positive, 1 = Negative)</span></span>|<span data-ttu-id="86f72-119">63</span><span class="sxs-lookup"><span data-stu-id="86f72-119">63</span></span>|  
  
 <span data-ttu-id="86f72-120">如同小數無法精確地表示有些小數值 (例如 1/3 或<xref:System.Math.PI?displayProperty=nameWithType>)，二進位分數是無法代表某些小數的值。</span><span class="sxs-lookup"><span data-stu-id="86f72-120">Just as decimal fractions are unable to precisely represent some fractional values (such as 1/3 or <xref:System.Math.PI?displayProperty=nameWithType>), binary fractions are unable to represent some fractional values.</span></span> <span data-ttu-id="86f72-121">例如，1/10，精確地由.1 以小數表示，被以.001100110011 為二進位分數，使用模式"0011"重複為無限大。</span><span class="sxs-lookup"><span data-stu-id="86f72-121">For example, 1/10, which is represented precisely by .1 as a decimal fraction, is represented by .001100110011 as a binary fraction, with the pattern "0011" repeating to infinity.</span></span> <span data-ttu-id="86f72-122">在此情況下，浮點值會提供它所代表的數字不精確表示法。</span><span class="sxs-lookup"><span data-stu-id="86f72-122">In this case, the floating-point value provides an imprecise representation of the number that it represents.</span></span> <span data-ttu-id="86f72-123">經常執行額外的數學運算的原始浮點數的值通常會提高其缺乏精確度。</span><span class="sxs-lookup"><span data-stu-id="86f72-123">Performing additional mathematical operations on the original floating-point value often tends to increase its lack of precision.</span></span> <span data-ttu-id="86f72-124">比方說，如果我們比較結果乘以.1 10 新增.1 到.1 九次，我們會看到加入，因為它已牽涉到八個更多的作業，已產生較不精確的結果。</span><span class="sxs-lookup"><span data-stu-id="86f72-124">For example, if we compare the result of multiplying .1 by 10 and adding .1 to .1 nine times, we see that addition, because it has involved eight more operations, has produced the less precise result.</span></span> <span data-ttu-id="86f72-125">請注意，此差異是只有當我們顯示兩個明顯<xref:System.Double>使用"R"的值[標準數值格式字串](~/docs/standard/base-types/standard-numeric-format-strings.md)，如果需要，將會顯示所有 17 位數支援<xref:System.Double>型別。</span><span class="sxs-lookup"><span data-stu-id="86f72-125">Note that this disparity is apparent only if we display the two <xref:System.Double> values by using the "R" [standard numeric format string](~/docs/standard/base-types/standard-numeric-format-strings.md), which if necessary displays all 17 digits of precision supported by the <xref:System.Double> type.</span></span>  
  
 [!code-csharp[System.Double.Structure#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.double.structure/cs/representation1.cs#3)]
 [!code-vb[System.Double.Structure#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.double.structure/vb/representation1.vb#3)]  
  
 <span data-ttu-id="86f72-126">因為小的二進位數值無法完全代表一些數字，浮點數可以只近似實際數字。</span><span class="sxs-lookup"><span data-stu-id="86f72-126">Because some numbers cannot be represented exactly as fractional binary values, floating-point numbers can only approximate real numbers.</span></span>  
  
 <span data-ttu-id="86f72-127">所有的浮點數也會有有限的數目的有效位數，其中也會決定如何精確的浮點值接近實際數字。</span><span class="sxs-lookup"><span data-stu-id="86f72-127">All floating-point numbers also have a limited number of significant digits, which also determines how accurately a floating-point value approximates a real number.</span></span>   <span data-ttu-id="86f72-128">A<xref:System.Double>值具有最多 15 個有效小數位數，雖然內部維護最多 17 個位數。</span><span class="sxs-lookup"><span data-stu-id="86f72-128">A <xref:System.Double> value has up to 15 decimal digits of precision, although a maximum of 17 digits is maintained internally.</span></span> <span data-ttu-id="86f72-129">這表示某些浮點運算可能缺少有效位數變更為浮點值。</span><span class="sxs-lookup"><span data-stu-id="86f72-129">This means that some floating-point operations may lack the precision to change a floating point value.</span></span> <span data-ttu-id="86f72-130">下列範例提供一個實例。</span><span class="sxs-lookup"><span data-stu-id="86f72-130">The following example provides an illustration.</span></span> <span data-ttu-id="86f72-131">它定義非常大的浮點值，並將新增的產品<xref:System.Double.Epsilon?displayProperty=nameWithType>和它的其中一個大關。</span><span class="sxs-lookup"><span data-stu-id="86f72-131">It defines a very large floating-point value, and then adds the product of <xref:System.Double.Epsilon?displayProperty=nameWithType> and one quadrillion to it.</span></span> <span data-ttu-id="86f72-132">不過，「 產品 」 是太小，無法修改原始的浮點值。</span><span class="sxs-lookup"><span data-stu-id="86f72-132">The product, however, is too small to modify the original floating-point value.</span></span> <span data-ttu-id="86f72-133">其最小顯著性數字是千分之一秒，而中產品的最高有效位數是 10<sup>-309</sup>。</span><span class="sxs-lookup"><span data-stu-id="86f72-133">Its least significant digit is thousandths, whereas the most significant digit in the product is 10<sup>-309</sup>.</span></span>  
  
 [!code-csharp[System.Double.Structure#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.double.structure/cs/representation2.cs#4)]
 [!code-vb[System.Double.Structure#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.double.structure/vb/representation2.vb#4)]  
  
 <span data-ttu-id="86f72-134">浮點數限制有效位數有數個結果：</span><span class="sxs-lookup"><span data-stu-id="86f72-134">The limited precision of a floating-point number has several consequences:</span></span>  
  
-   <span data-ttu-id="86f72-135">因為其最小有效位數不同，會出現特定的有效位數相等的兩個浮點數可能不比較相等。</span><span class="sxs-lookup"><span data-stu-id="86f72-135">Two floating-point numbers that appear equal for a particular precision might not compare equal because their least significant digits are different.</span></span> <span data-ttu-id="86f72-136">在下列範例中，一系列數字加在一起，，以及其總計相較於其預期的總和。</span><span class="sxs-lookup"><span data-stu-id="86f72-136">In the following example, a series of numbers are added together, and their total is compared with their expected total.</span></span> <span data-ttu-id="86f72-137">雖然兩個值會出現相同，呼叫`Equals`方法表示它們不是。</span><span class="sxs-lookup"><span data-stu-id="86f72-137">Although the two values appear to be the same, a call to the `Equals` method indicates that they are not.</span></span>  
  
     [!code-csharp[System.Double.Structure#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.double.structure/cs/precisionlist3.cs#6)]
     [!code-vb[System.Double.Structure#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.double.structure/vb/precisionlist3.vb#6)]  
  
     <span data-ttu-id="86f72-138">如果您變更中的格式項目<xref:System.Console.WriteLine%28System.String%2CSystem.Object%2CSystem.Object%29?displayProperty=nameWithType>陳述式，從`{0}`和`{1}`來`{0:R}`並`{1:R}`以顯示所有的有效位數，兩個<xref:System.Double>很清楚兩個值相等的值，因為失去了在加法作業期間的有效位數。</span><span class="sxs-lookup"><span data-stu-id="86f72-138">If you change the format items in the <xref:System.Console.WriteLine%28System.String%2CSystem.Object%2CSystem.Object%29?displayProperty=nameWithType> statement from `{0}` and `{1}` to `{0:R}` and `{1:R}` to display all significant digits of the two <xref:System.Double> values, it is clear that the two values are unequal because of a loss of precision during the addition operations.</span></span> <span data-ttu-id="86f72-139">在此情況下，解決問題，藉由呼叫<xref:System.Math.Round%28System.Double%2CSystem.Int32%29?displayProperty=nameWithType>要捨入方法<xref:System.Double>到所需的精確度，然後再執行比較的值。</span><span class="sxs-lookup"><span data-stu-id="86f72-139">In this case, the issue can be resolved by calling the <xref:System.Math.Round%28System.Double%2CSystem.Int32%29?displayProperty=nameWithType> method to round the <xref:System.Double> values to the desired precision before performing the comparison.</span></span>  
  
-   <span data-ttu-id="86f72-140">使用浮點數數學或比較運算可能不會產生相同的結果使用十進位數字時，如果因為二進位浮點數可能不等於的十進位數字。</span><span class="sxs-lookup"><span data-stu-id="86f72-140">A mathematical or comparison operation that uses a floating-point number might not yield the same result if a decimal number is used, because the binary floating-point number might not equal the decimal number.</span></span> <span data-ttu-id="86f72-141">上述範例說明這顯示結果乘以.1 10，並加入.1 的時間。</span><span class="sxs-lookup"><span data-stu-id="86f72-141">A previous example illustrated this by displaying the result of multiplying .1 by 10 and adding .1 times.</span></span>  
  
     <span data-ttu-id="86f72-142">當精確度與小數值的數字作業中很重要時，您可以使用<xref:System.Decimal>而非<xref:System.Double>型別。</span><span class="sxs-lookup"><span data-stu-id="86f72-142">When accuracy in numeric operations with fractional values is important, you can use the <xref:System.Decimal> rather than the <xref:System.Double> type.</span></span> <span data-ttu-id="86f72-143">當數字的操作，具有超過範圍的整數值的精確度<xref:System.Int64>或<xref:System.UInt64>型別是重要的是，使用<xref:System.Numerics.BigInteger>型別。</span><span class="sxs-lookup"><span data-stu-id="86f72-143">When accuracy in numeric operations with integral values beyond the range of the <xref:System.Int64> or <xref:System.UInt64> types is important, use the <xref:System.Numerics.BigInteger> type.</span></span>  
  
-   <span data-ttu-id="86f72-144">值可能不會反覆存取如果牽涉到浮點數。</span><span class="sxs-lookup"><span data-stu-id="86f72-144">A value might not round-trip if a floating-point number is involved.</span></span> <span data-ttu-id="86f72-145">如果作業會將原始浮點數轉換成另一種形式，反運算將轉換回浮點數，轉換的形式，而且最終浮點數不等於原始值，即稱為反覆存取浮點數。</span><span class="sxs-lookup"><span data-stu-id="86f72-145">A value is said to round-trip if an operation converts an original floating-point number to another form, an inverse operation transforms the converted form back to a floating-point number, and the final floating-point number is not equal to the original floating-point number.</span></span> <span data-ttu-id="86f72-146">來回行程可能會失敗，因為一或多個最低有效位數遺失或轉換變更。</span><span class="sxs-lookup"><span data-stu-id="86f72-146">The round trip might fail because one or more least significant digits are lost or changed in a conversion.</span></span> <span data-ttu-id="86f72-147">在下列範例中，三個<xref:System.Double>值被轉換成字串並儲存在檔案中。</span><span class="sxs-lookup"><span data-stu-id="86f72-147">In the following example, three <xref:System.Double> values are converted to strings and saved in a file.</span></span> <span data-ttu-id="86f72-148">如輸出所示，不過，即使值看起來相同，則還原的值不相等為原始值。</span><span class="sxs-lookup"><span data-stu-id="86f72-148">As the output shows, however, even though the values appear to be identical, the restored values are not equal to the original values.</span></span>  
  
     [!code-csharp[System.Double.Structure#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.double.structure/cs/precisionlist4.cs#7)]
     [!code-vb[System.Double.Structure#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.double.structure/vb/precisionlist4.vb#7)]  
  
     <span data-ttu-id="86f72-149">在此情況下，值可以是成功的來回時間使用"G17"[標準數值格式字串](~/docs/standard/base-types/standard-numeric-format-strings.md)保留完整的有效位數的<xref:System.Double>值，如下列範例所示。</span><span class="sxs-lookup"><span data-stu-id="86f72-149">In this case, the values can be successfully round-tripped by using the "G17" [standard numeric format string](~/docs/standard/base-types/standard-numeric-format-strings.md) to preserve the full precision of <xref:System.Double> values, as the following example shows.</span></span>  
  
     [!code-csharp[System.Double.Structure#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.double.structure/cs/precisionlist5.cs#8)]
     [!code-vb[System.Double.Structure#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.double.structure/vb/precisionlist5.vb#8)]  

   > [!IMPORTANT]
   >  <span data-ttu-id="86f72-150">當搭配<xref:System.Double>值，"R"格式規範，在某些情況下無法成功地反覆存取原始值。</span><span class="sxs-lookup"><span data-stu-id="86f72-150">When used with a <xref:System.Double> value, the "R" format specifier in some cases fails to successfully round-trip the original value.</span></span> <span data-ttu-id="86f72-151">若要確定<xref:System.Double>值成功地反覆存取，使用"G17"格式規範。</span><span class="sxs-lookup"><span data-stu-id="86f72-151">To ensure that <xref:System.Double> values successfully round-trip, use the "G17" format specifier.</span></span>

-   <span data-ttu-id="86f72-152"><xref:System.Single> 值有較少精確度卻高於<xref:System.Double>值。</span><span class="sxs-lookup"><span data-stu-id="86f72-152"><xref:System.Single> values have less precision than <xref:System.Double> values.</span></span> <span data-ttu-id="86f72-153">A<xref:System.Single>值轉換成看似相當<xref:System.Double>通常不等於<xref:System.Double>因為有效位數的差異值。</span><span class="sxs-lookup"><span data-stu-id="86f72-153">A <xref:System.Single> value that is converted to a seemingly equivalent <xref:System.Double> often does not equal the <xref:System.Double> value because of differences in precision.</span></span> <span data-ttu-id="86f72-154">在下列範例中，相同的除法運算的結果指派給<xref:System.Double>和<xref:System.Single>值。</span><span class="sxs-lookup"><span data-stu-id="86f72-154">In the following example, the result of identical division operations is assigned to a <xref:System.Double> and a <xref:System.Single> value.</span></span> <span data-ttu-id="86f72-155">在後<xref:System.Single>的值轉換為<xref:System.Double>，比較兩個值會顯示不相等。</span><span class="sxs-lookup"><span data-stu-id="86f72-155">After the <xref:System.Single> value is cast to a <xref:System.Double>, a comparison of the two values shows that they are unequal.</span></span>  
  
     [!code-csharp[System.Double.Structure#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.double.structure/cs/precisionlist1.cs#5)]
     [!code-vb[System.Double.Structure#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.double.structure/vb/precisionlist1.vb#5)]  
  
     <span data-ttu-id="86f72-156">若要避免這個問題，請使用<xref:System.Double>代替<xref:System.Single>資料類型或使用<xref:System.Math.Round%2A>方法，讓這兩個值具有相同的有效位數。</span><span class="sxs-lookup"><span data-stu-id="86f72-156">To avoid this problem, use either the <xref:System.Double> in place of the <xref:System.Single> data type, or use the <xref:System.Math.Round%2A> method so that both values have the same precision.</span></span>  
  
 <span data-ttu-id="86f72-157">此外，與算術和指派作業的結果<xref:System.Double>值可能稍有不同的平台的有效位數遺失因為<xref:System.Double>型別。</span><span class="sxs-lookup"><span data-stu-id="86f72-157">In addition, the result of arithmetic and assignment operations with <xref:System.Double> values may differ slightly by platform because of the loss of precision of the <xref:System.Double> type.</span></span> <span data-ttu-id="86f72-158">例如，指派常值的結果<xref:System.Double>值而異的 32 位元和 64 位元版本的.NET framework 中。</span><span class="sxs-lookup"><span data-stu-id="86f72-158">For example, the result of assigning a literal <xref:System.Double> value may differ in the 32-bit and 64-bit versions of the .NET Framework.</span></span> <span data-ttu-id="86f72-159">下列範例說明這點差異時常值-4.42330604244772E-305 和變數，其值為-4.42330604244772E-305 指派給<xref:System.Double>變數。</span><span class="sxs-lookup"><span data-stu-id="86f72-159">The following example illustrates this difference when the literal value -4.42330604244772E-305 and a variable whose value is -4.42330604244772E-305 are assigned to a <xref:System.Double> variable.</span></span> <span data-ttu-id="86f72-160">請注意，結果<xref:System.Double.Parse%28System.String%29>方法在此情況下不會發生遺失有效位數。</span><span class="sxs-lookup"><span data-stu-id="86f72-160">Note that the result of the <xref:System.Double.Parse%28System.String%29> method in this case does not suffer from a loss of precision.</span></span>  
  
 [!code-csharp[System.Double.Class.Precision#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.double.class.precision/cs/precision1.cs#1)]
 [!code-vb[System.Double.Class.Precision#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.double.class.precision/vb/precision1.vb#1)]  
  
<a name="Equality"></a>   
## <a name="testing-for-equality"></a><span data-ttu-id="86f72-161">測試相等</span><span class="sxs-lookup"><span data-stu-id="86f72-161">Testing for Equality</span></span>  
 <span data-ttu-id="86f72-162">若要才會被視為相等，兩個<xref:System.Double>值必須代表相同的值。</span><span class="sxs-lookup"><span data-stu-id="86f72-162">To be considered equal, two <xref:System.Double> values must represent identical values.</span></span> <span data-ttu-id="86f72-163">不過，因為在精確度值之間的差異，或因為遺失一或兩個值的有效位數，應該通常是相同的浮點值變得不相等因為其最小有效位數的差異。</span><span class="sxs-lookup"><span data-stu-id="86f72-163">However, because of differences in precision between values, or because of a loss of precision by one or both values, floating-point values that are expected to be identical often turn out to be unequal because of differences in their least significant digits.</span></span> <span data-ttu-id="86f72-164">如此一來，呼叫<xref:System.Double.Equals%2A>方法，以判斷兩個值是否相等或呼叫<xref:System.Double.CompareTo%2A>方法，以判斷兩個之間的關聯性<xref:System.Double>值，通常會產生非預期的結果。</span><span class="sxs-lookup"><span data-stu-id="86f72-164">As a result, calls to the <xref:System.Double.Equals%2A> method to determine whether two values are equal, or calls to the <xref:System.Double.CompareTo%2A> method to determine the relationship between two <xref:System.Double> values, often yield unexpected results.</span></span> <span data-ttu-id="86f72-165">這是出現在下列範例中，其中兩個明顯等於<xref:System.Double>值變得不相等因為第一個有 15 個位數的精確度，第二個有 17。</span><span class="sxs-lookup"><span data-stu-id="86f72-165">This is evident in the following example, where two apparently equal <xref:System.Double> values turn out to be unequal because the first has 15 digits of precision, while the second has 17.</span></span>  
  
 [!code-csharp[System.Double.Structure#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.double.structure/cs/comparison1.cs#9)]
 [!code-vb[System.Double.Structure#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.double.structure/vb/comparison1.vb#9)]  
  
 <span data-ttu-id="86f72-166">導出的值，通常當做不同的方式，遵循不同的程式碼路徑，並且證明不相等。</span><span class="sxs-lookup"><span data-stu-id="86f72-166">Calculated values that follow different code paths and that are manipulated in different ways often prove to be unequal.</span></span> <span data-ttu-id="86f72-167">在下列範例中，一個<xref:System.Double>平方值，並計算再還原為原始值的平方根。</span><span class="sxs-lookup"><span data-stu-id="86f72-167">In the following example, one <xref:System.Double> value is squared, and then the square root is calculated to restore the original value.</span></span> <span data-ttu-id="86f72-168">第二個<xref:System.Double>會乘以 3.51 和平方之前 3.51 還原為原始值除以結果的平方根。</span><span class="sxs-lookup"><span data-stu-id="86f72-168">A second <xref:System.Double> is multiplied by 3.51 and squared before the square root of the result is divided by 3.51 to restore the original value.</span></span> <span data-ttu-id="86f72-169">雖然兩個值看起來相同，但呼叫<xref:System.Double.Equals%28System.Double%29>方法指出它們是否不相等。</span><span class="sxs-lookup"><span data-stu-id="86f72-169">Although the two values appear to be identical, a call to the <xref:System.Double.Equals%28System.Double%29> method indicates that they are not equal.</span></span> <span data-ttu-id="86f72-170">傳回顯示的每個雙精度浮點數值的所有有效位數的結果字串中使用"R"標準格式字串會顯示第二個值是.0000000000001 第一個大於或等於。</span><span class="sxs-lookup"><span data-stu-id="86f72-170">Using the "R" standard format string to return a result string that displays all the significant digits of each Double value shows that the second value is .0000000000001 less than the first.</span></span>  
  
 [!code-csharp[System.Double.Structure#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.double.structure/cs/comparison2.cs#10)]
 [!code-vb[System.Double.Structure#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.double.structure/vb/comparison2.vb#10)]  
  
 <span data-ttu-id="86f72-171">中的情況下遺失有效位數可能會影響比較的結果，您可以採用任何下列的替代方案，於呼叫<xref:System.Double.Equals%2A>或<xref:System.Double.CompareTo%2A>方法：</span><span class="sxs-lookup"><span data-stu-id="86f72-171">In cases where a loss of precision is likely to affect the result of a comparison, you can adopt any of the following alternatives to calling the <xref:System.Double.Equals%2A> or <xref:System.Double.CompareTo%2A> method:</span></span>  
  
-   <span data-ttu-id="86f72-172">呼叫<xref:System.Math.Round%2A?displayProperty=nameWithType>方法，以確保這兩個值都有相同的精確度。</span><span class="sxs-lookup"><span data-stu-id="86f72-172">Call the <xref:System.Math.Round%2A?displayProperty=nameWithType> method to ensure that both values have the same precision.</span></span> <span data-ttu-id="86f72-173">下列範例會修改先前的範例，為使用這種方法，讓兩個小數值相等。</span><span class="sxs-lookup"><span data-stu-id="86f72-173">The following example modifies a previous example to use this approach so that two fractional values are equivalent.</span></span>  
  
     [!code-csharp[System.Double.Structure#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.double.structure/cs/comparison3.cs#11)]
     [!code-vb[System.Double.Structure#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.double.structure/vb/comparison3.vb#11)]  
  
     <span data-ttu-id="86f72-174">不過要注意的是，有效位數的問題，仍適用於的中點值捨入。</span><span class="sxs-lookup"><span data-stu-id="86f72-174">Note, though, that the problem of precision still applies to rounding of midpoint values.</span></span> <span data-ttu-id="86f72-175">如需詳細資訊，請參閱 <xref:System.Math.Round%28System.Double%2CSystem.Int32%2CSystem.MidpointRounding%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="86f72-175">For more information, see the <xref:System.Math.Round%28System.Double%2CSystem.Int32%2CSystem.MidpointRounding%29?displayProperty=nameWithType> method.</span></span>  
  
-   <span data-ttu-id="86f72-176">近似相等測試而不是等號比較。</span><span class="sxs-lookup"><span data-stu-id="86f72-176">Test for approximate equality rather than equality.</span></span> <span data-ttu-id="86f72-177">這需要您定義的其中一個絕對數量的兩個值可以用不同，但仍視為相等，或您定義相對量的較小的值可以偏離較大的值。</span><span class="sxs-lookup"><span data-stu-id="86f72-177">This requires that you define either an absolute amount by which the two values can differ but still be equal, or that you define a relative amount by which the smaller value can diverge from the larger value.</span></span>  
  
    > [!WARNING]
    >  <span data-ttu-id="86f72-178"><xref:System.Double.Epsilon?displayProperty=nameWithType> 有時會作為兩個之間距離的絕對單位<xref:System.Double>值時測試是否相等。</span><span class="sxs-lookup"><span data-stu-id="86f72-178"><xref:System.Double.Epsilon?displayProperty=nameWithType> is sometimes used as an absolute measure of the distance between two <xref:System.Double> values when testing for equality.</span></span>  <span data-ttu-id="86f72-179">不過，<xref:System.Double.Epsilon?displayProperty=nameWithType>測量的最小的可能值，可以新增或減去，<xref:System.Double>其值為零。</span><span class="sxs-lookup"><span data-stu-id="86f72-179">However, <xref:System.Double.Epsilon?displayProperty=nameWithType> measures the smallest possible value that can be added to, or subtracted from, a <xref:System.Double> whose value is zero.</span></span> <span data-ttu-id="86f72-180">為大部分的正數和負數<xref:System.Double>的值，而值<xref:System.Double.Epsilon?displayProperty=nameWithType>太小而無法偵測到。</span><span class="sxs-lookup"><span data-stu-id="86f72-180">For most positive and negative <xref:System.Double> values, the value of <xref:System.Double.Epsilon?displayProperty=nameWithType> is too small to be detected.</span></span> <span data-ttu-id="86f72-181">因此，除了為零的值，我們不建議在測試相等。</span><span class="sxs-lookup"><span data-stu-id="86f72-181">Therefore, except for values that are zero, we do not recommend its use in tests for equality.</span></span>  
  
     <span data-ttu-id="86f72-182">下列範例會使用第二種方法來定義`IsApproximatelyEqual`方法，來測試兩個值之間的相對差異。</span><span class="sxs-lookup"><span data-stu-id="86f72-182">The following example uses the latter approach to define an `IsApproximatelyEqual` method that tests the relative difference between two values.</span></span> <span data-ttu-id="86f72-183">它也會對照的呼叫結果`IsApproximatelyEqual`方法和<xref:System.Double.Equals%28System.Double%29>方法。</span><span class="sxs-lookup"><span data-stu-id="86f72-183">It also contrasts the result of calls to the `IsApproximatelyEqual` method and the <xref:System.Double.Equals%28System.Double%29> method.</span></span>  
  
     [!code-csharp[System.Double.Structure#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.double.structure/cs/comparison4.cs#12)]
     [!code-vb[System.Double.Structure#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.double.structure/vb/comparison4.vb#12)]  
  
<a name="Exceptions"></a>   
## <a name="floating-point-values-and-exceptions"></a><span data-ttu-id="86f72-184">浮點值和例外狀況</span><span class="sxs-lookup"><span data-stu-id="86f72-184">Floating-Point Values and Exceptions</span></span>  
 <span data-ttu-id="86f72-185">不同於使用整數類資料類型，在溢位或不合法的作業，例如部門的情況下擲回例外狀況為零，作業具有浮點值的作業不擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="86f72-185">Unlike operations with integral types, which throw exceptions in cases of overflow or illegal operations such as division by zero, operations with floating-point values do not throw exceptions.</span></span> <span data-ttu-id="86f72-186">相反地，例外的情況下，在浮點運算的結果是零，正無限大、 負無限大或不是數字 (NaN):</span><span class="sxs-lookup"><span data-stu-id="86f72-186">Instead, in exceptional situations, the result of a floating-point operation is zero, positive infinity, negative infinity, or not a number (NaN):</span></span>  
  
-   <span data-ttu-id="86f72-187">如果浮點運算的結果太小，目的格式，則結果會是零。</span><span class="sxs-lookup"><span data-stu-id="86f72-187">If the result of a floating-point operation is too small for the destination format, the result is zero.</span></span> <span data-ttu-id="86f72-188">這可能會乘以兩個非常小的數字，如下列範例所示。</span><span class="sxs-lookup"><span data-stu-id="86f72-188">This can occur when two very small numbers are multiplied, as the following example shows.</span></span>  
  
     [!code-csharp[System.Double.Structure#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.double.structure/cs/exceptional1.cs#1)]
     [!code-vb[System.Double.Structure#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.double.structure/vb/exceptional1.vb#1)]  
  
-   <span data-ttu-id="86f72-189">浮點運算的結果大小超過目的格式的範圍，作業的結果是否<xref:System.Double.PositiveInfinity>或<xref:System.Double.NegativeInfinity>視需要結果的正負號。</span><span class="sxs-lookup"><span data-stu-id="86f72-189">If the magnitude of the result of a floating-point operation exceeds the range of the destination format, the result of the operation is <xref:System.Double.PositiveInfinity> or <xref:System.Double.NegativeInfinity>, as appropriate for the sign of the result.</span></span> <span data-ttu-id="86f72-190">溢位運算的結果<xref:System.Double.MaxValue?displayProperty=nameWithType>已<xref:System.Double.PositiveInfinity>，並造成溢位運算的結果<xref:System.Double.MinValue?displayProperty=nameWithType>是<xref:System.Double.NegativeInfinity>，如下列範例所示。</span><span class="sxs-lookup"><span data-stu-id="86f72-190">The result of an operation that overflows <xref:System.Double.MaxValue?displayProperty=nameWithType> is <xref:System.Double.PositiveInfinity>, and the result of an operation that overflows <xref:System.Double.MinValue?displayProperty=nameWithType> is <xref:System.Double.NegativeInfinity>, as the following example shows.</span></span>  
  
     [!code-csharp[System.Double.Structure#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.double.structure/cs/exceptional2.cs#2)]
     [!code-vb[System.Double.Structure#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.double.structure/vb/exceptional2.vb#2)]  
  
     <span data-ttu-id="86f72-191"><xref:System.Double.PositiveInfinity> 也產生除以零正值被除數，與和<xref:System.Double.NegativeInfinity>除法運算結果與負被除數為零。</span><span class="sxs-lookup"><span data-stu-id="86f72-191"><xref:System.Double.PositiveInfinity> also results from a division by zero with a positive dividend, and <xref:System.Double.NegativeInfinity> results from a division by zero with a negative dividend.</span></span>  
  
-   <span data-ttu-id="86f72-192">如果浮點運算無效，作業的結果是<xref:System.Double.NaN>。</span><span class="sxs-lookup"><span data-stu-id="86f72-192">If a floating-point operation is invalid, the result of the operation is <xref:System.Double.NaN>.</span></span> <span data-ttu-id="86f72-193">比方說，<xref:System.Double.NaN>天時，下列作業：</span><span class="sxs-lookup"><span data-stu-id="86f72-193">For example, <xref:System.Double.NaN> results from the following operations:</span></span>  
  
    -   <span data-ttu-id="86f72-194">除數為零與被除數為零。</span><span class="sxs-lookup"><span data-stu-id="86f72-194">Division by zero with a dividend of zero.</span></span> <span data-ttu-id="86f72-195">請注意除法的其他情況下，在零結果<xref:System.Double.PositiveInfinity>或<xref:System.Double.NegativeInfinity>。</span><span class="sxs-lookup"><span data-stu-id="86f72-195">Note that other cases of division by zero result in either <xref:System.Double.PositiveInfinity> or <xref:System.Double.NegativeInfinity>.</span></span>  
  
-   <span data-ttu-id="86f72-196">與無效輸入任何浮點運算。</span><span class="sxs-lookup"><span data-stu-id="86f72-196">Any floating-point operation with an invalid input.</span></span> <span data-ttu-id="86f72-197">例如，呼叫<xref:System.Math.Sqrt%2A?displayProperty=nameWithType>以負數值的方法會傳回<xref:System.Double.NaN>，如未呼叫<xref:System.Math.Acos%2A?displayProperty=nameWithType>值大於 1 或更少負一的方法。</span><span class="sxs-lookup"><span data-stu-id="86f72-197">For example, calling the <xref:System.Math.Sqrt%2A?displayProperty=nameWithType> method with a negative value returns <xref:System.Double.NaN>, as does calling the <xref:System.Math.Acos%2A?displayProperty=nameWithType> method with a value that is greater than one or less than negative one.</span></span>  
  
-   <span data-ttu-id="86f72-198">使用引數，其值的任何作業<xref:System.Double.NaN?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="86f72-198">Any operation with an argument whose value is <xref:System.Double.NaN?displayProperty=nameWithType>.</span></span>  
  
<a name="Conversions"></a>   
## <a name="type-conversions-and-the-double-structure"></a><span data-ttu-id="86f72-199">型別轉換和雙精確度結構</span><span class="sxs-lookup"><span data-stu-id="86f72-199">Type conversions and the Double structure</span></span>  
 <span data-ttu-id="86f72-200"><xref:System.Double>結構並未定義任何明確或隱含的轉換運算子; 相反地，轉換會由編譯器實作。</span><span class="sxs-lookup"><span data-stu-id="86f72-200">The <xref:System.Double> structure does not define any explicit or implicit conversion operators; instead, conversions are implemented by the compiler.</span></span>  
  
 <span data-ttu-id="86f72-201">轉換至任何基本數值類型的值<xref:System.Double>是擴展轉換，因此不需要明確轉換運算子或呼叫轉換方法，除非編譯器明確需要。</span><span class="sxs-lookup"><span data-stu-id="86f72-201">The conversion of the value of any primitive numeric type to a <xref:System.Double> is a widening conversion and therefore does not require an explicit cast operator or call to a conversion method unless a compiler explicitly requires it.</span></span> <span data-ttu-id="86f72-202">例如，C# 編譯器轉換需要轉型運算子<xref:System.Decimal>至<xref:System.Double>，而 Visual Basic 編譯器並不會。</span><span class="sxs-lookup"><span data-stu-id="86f72-202">For example, the C# compiler requires a casting operator for conversions from <xref:System.Decimal> to <xref:System.Double>, while the Visual Basic compiler does not.</span></span> <span data-ttu-id="86f72-203">下列範例會轉換至其他基本數值類型的最小值或最大值<xref:System.Double>。</span><span class="sxs-lookup"><span data-stu-id="86f72-203">The following example converts the minimum or maximum value of other primitive numeric types to a <xref:System.Double>.</span></span>  
  
 [!code-csharp[System.Double.Structure#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.double.structure/cs/convert1.cs#20)]
 [!code-vb[System.Double.Structure#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.double.structure/vb/convert1.vb#20)]  
  
 <span data-ttu-id="86f72-204">颾魤 ㄛ<xref:System.Single>值<xref:System.Single.NaN?displayProperty=nameWithType>， <xref:System.Single.PositiveInfinity?displayProperty=nameWithType>，以及<xref:System.Single.NegativeInfinity?displayProperty=nameWithType>轉換到<xref:System.Double.NaN?displayProperty=nameWithType>， <xref:System.Double.PositiveInfinity?displayProperty=nameWithType>，和<xref:System.Double.NegativeInfinity?displayProperty=nameWithType>分別。</span><span class="sxs-lookup"><span data-stu-id="86f72-204">In addition, the <xref:System.Single> values <xref:System.Single.NaN?displayProperty=nameWithType>, <xref:System.Single.PositiveInfinity?displayProperty=nameWithType>, and <xref:System.Single.NegativeInfinity?displayProperty=nameWithType> covert to <xref:System.Double.NaN?displayProperty=nameWithType>, <xref:System.Double.PositiveInfinity?displayProperty=nameWithType>, and <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>, respectively.</span></span>  
  
 <span data-ttu-id="86f72-205">請注意，某些數字型別，值的轉換<xref:System.Double>值可能會涉及遺失有效位數。</span><span class="sxs-lookup"><span data-stu-id="86f72-205">Note that the conversion of the value of some numeric types to a <xref:System.Double> value can involve a loss of precision.</span></span> <span data-ttu-id="86f72-206">如範例所示，遺失有效位數時，可能轉換<xref:System.Decimal>， <xref:System.Int64>， <xref:System.Single>，以及<xref:System.UInt64>值<xref:System.Double>值。</span><span class="sxs-lookup"><span data-stu-id="86f72-206">As the example illustrates, a loss of precision is possible when converting <xref:System.Decimal>, <xref:System.Int64>, <xref:System.Single>, and <xref:System.UInt64> values to <xref:System.Double> values.</span></span>  
  
 <span data-ttu-id="86f72-207">轉換<xref:System.Double>值與任何其他基本的數值資料類型的值是縮小轉換，而且需要轉換運算子 （在 C# 中)、 （在 Visual Basic) 的轉換方法或呼叫<xref:System.Convert>方法。</span><span class="sxs-lookup"><span data-stu-id="86f72-207">The conversion of a <xref:System.Double> value to a value of any other primitive numeric data type is a narrowing conversion and requires a cast operator (in C#), a conversion method (in Visual Basic), or a call to a <xref:System.Convert> method.</span></span> <span data-ttu-id="86f72-208">值超出範圍的目標資料類型，都由目標類型的定義`MinValue`和`MaxValue`屬性，行為如下表所示。</span><span class="sxs-lookup"><span data-stu-id="86f72-208">Values that are outside the range of the target data type, which are defined by the target type's `MinValue` and `MaxValue` properties, behave as shown in the following table.</span></span>  
  
|<span data-ttu-id="86f72-209">目標類型</span><span class="sxs-lookup"><span data-stu-id="86f72-209">Target type</span></span>|<span data-ttu-id="86f72-210">結果</span><span class="sxs-lookup"><span data-stu-id="86f72-210">Result</span></span>|  
|-----------------|------------|  
|<span data-ttu-id="86f72-211">任何整數類資料類型</span><span class="sxs-lookup"><span data-stu-id="86f72-211">Any integral type</span></span>|<span data-ttu-id="86f72-212"><xref:System.OverflowException>轉換檢查的內容中發生的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="86f72-212">An <xref:System.OverflowException> exception if the conversion occurs in a checked context.</span></span><br /><br /> <span data-ttu-id="86f72-213">如果在 unchecked 內容中 （C# 中的預設值），就會發生轉換，轉換作業成功，但值溢位。</span><span class="sxs-lookup"><span data-stu-id="86f72-213">If the conversion occurs in an unchecked context (the default in C#), the conversion operation succeeds but the value overflows.</span></span>|  
|<xref:System.Decimal>|<span data-ttu-id="86f72-214"><xref:System.OverflowException> 例外狀況。</span><span class="sxs-lookup"><span data-stu-id="86f72-214">An <xref:System.OverflowException> exception.</span></span>|  
|<xref:System.Single>|<span data-ttu-id="86f72-215"><xref:System.Single.NegativeInfinity?displayProperty=nameWithType> 負數的值。</span><span class="sxs-lookup"><span data-stu-id="86f72-215"><xref:System.Single.NegativeInfinity?displayProperty=nameWithType> for negative values.</span></span><br /><br /> <span data-ttu-id="86f72-216"><xref:System.Single.PositiveInfinity?displayProperty=nameWithType> 正數值。</span><span class="sxs-lookup"><span data-stu-id="86f72-216"><xref:System.Single.PositiveInfinity?displayProperty=nameWithType> for positive values.</span></span>|  
  
 <span data-ttu-id="86f72-217">颾魤 ㄛ <xref:System.Double.NaN?displayProperty=nameWithType>， <xref:System.Double.PositiveInfinity?displayProperty=nameWithType>，並<xref:System.Double.NegativeInfinity?displayProperty=nameWithType>擲回<xref:System.OverflowException>checked 的內容中，但這些值的溢位時轉換成在 unchecked 內容中的整數的整數的轉換。</span><span class="sxs-lookup"><span data-stu-id="86f72-217">In addition, <xref:System.Double.NaN?displayProperty=nameWithType>, <xref:System.Double.PositiveInfinity?displayProperty=nameWithType>, and <xref:System.Double.NegativeInfinity?displayProperty=nameWithType> throw an <xref:System.OverflowException> for conversions to integers in a checked context, but these values overflow when converted to integers in an unchecked context.</span></span> <span data-ttu-id="86f72-218">轉換成<xref:System.Decimal>，則一律會擲回<xref:System.OverflowException>。</span><span class="sxs-lookup"><span data-stu-id="86f72-218">For conversions to <xref:System.Decimal>, they always throw an <xref:System.OverflowException>.</span></span> <span data-ttu-id="86f72-219">轉換成<xref:System.Single>，它們會轉換成<xref:System.Single.NaN?displayProperty=nameWithType>， <xref:System.Single.PositiveInfinity?displayProperty=nameWithType>，和<xref:System.Single.NegativeInfinity?displayProperty=nameWithType>分別。</span><span class="sxs-lookup"><span data-stu-id="86f72-219">For conversions to <xref:System.Single>, they convert to <xref:System.Single.NaN?displayProperty=nameWithType>, <xref:System.Single.PositiveInfinity?displayProperty=nameWithType>, and <xref:System.Single.NegativeInfinity?displayProperty=nameWithType>, respectively.</span></span>  
  
 <span data-ttu-id="86f72-220">請注意，遺失有效位數可能會使轉換<xref:System.Double>成另一個數值類型的值。</span><span class="sxs-lookup"><span data-stu-id="86f72-220">Note that a loss of precision may result from converting a <xref:System.Double> value to another numeric type.</span></span> <span data-ttu-id="86f72-221">在將非整數的轉換的情況下<xref:System.Double>值，如範例輸出所示，小數部分時遺失<xref:System.Double>值四捨五入 （就像在 Visual Basic) 或截斷 （例如 C# 中)。</span><span class="sxs-lookup"><span data-stu-id="86f72-221">In the case of converting non-integral <xref:System.Double> values, as the output from the example shows, the fractional component is lost when the <xref:System.Double> value is either rounded (as in Visual Basic) or truncated (as in C#).</span></span> <span data-ttu-id="86f72-222">轉換成<xref:System.Decimal>並<xref:System.Single>的值，<xref:System.Double>值不能精確的表示法中的目標資料類型。</span><span class="sxs-lookup"><span data-stu-id="86f72-222">For conversions to <xref:System.Decimal> and <xref:System.Single> values, the <xref:System.Double> value may not have a precise representation in the target data type.</span></span>  
  
 <span data-ttu-id="86f72-223">下列範例會將許多<xref:System.Double>數個其他數值類型的值。</span><span class="sxs-lookup"><span data-stu-id="86f72-223">The following example converts a number of <xref:System.Double> values to several other numeric types.</span></span> <span data-ttu-id="86f72-224">在 Visual Basic （預設值），和在 C# 中檢查的內容中會發生轉換 (因為[檢查](~/docs/csharp/language-reference/keywords/checked.md)關鍵字)。</span><span class="sxs-lookup"><span data-stu-id="86f72-224">The conversions occur in a checked context in Visual Basic (the default) and in C# (because of the [checked](~/docs/csharp/language-reference/keywords/checked.md) keyword).</span></span> <span data-ttu-id="86f72-225">此範例的輸出會顯示轉換的結果中這兩個核取核取的內容。</span><span class="sxs-lookup"><span data-stu-id="86f72-225">The output from the example shows the result for conversions in both a checked an unchecked context.</span></span> <span data-ttu-id="86f72-226">您也可以使用編譯在 unchecked 內容中 Visual Basic 中執行的轉換`/removeintchecks+`編譯器參數和 C# 註解`checked`陳述式。</span><span class="sxs-lookup"><span data-stu-id="86f72-226">You can perform conversions in an unchecked context in Visual Basic by compiling with the `/removeintchecks+` compiler switch and in C# by commenting out the `checked` statement.</span></span>  
  
 [!code-csharp[System.Double.Structure#21](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.double.structure/cs/convert2.cs#21)]
 [!code-vb[System.Double.Structure#21](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.double.structure/vb/convert2.vb#21)]  
  
 <span data-ttu-id="86f72-227">如需有關轉換的數字類型的詳細資訊，請參閱[.NET Framework 中的類型轉換](~/docs/standard/base-types/type-conversion.md)並[類型轉換表](~/docs/standard/base-types/conversion-tables.md)。</span><span class="sxs-lookup"><span data-stu-id="86f72-227">For more information on the conversion of numeric types, see [Type Conversion in the .NET Framework](~/docs/standard/base-types/type-conversion.md) and [Type Conversion Tables](~/docs/standard/base-types/conversion-tables.md).</span></span>  
  
<a name="Functionality"></a>   
## <a name="floating-point-functionality"></a><span data-ttu-id="86f72-228">浮點數的功能</span><span class="sxs-lookup"><span data-stu-id="86f72-228">Floating-Point Functionality</span></span>  
 <span data-ttu-id="86f72-229"><xref:System.Double>結構和相關的型別提供方法來執行作業，在下列區域：</span><span class="sxs-lookup"><span data-stu-id="86f72-229">The <xref:System.Double> structure and related types provide methods to perform operations in the following areas:</span></span>  
  
-   <span data-ttu-id="86f72-230">**值的比較**。</span><span class="sxs-lookup"><span data-stu-id="86f72-230">**Comparison of values**.</span></span> <span data-ttu-id="86f72-231">您可以呼叫<xref:System.Double.Equals%2A>方法，以判斷兩個<xref:System.Double>值相等，或<xref:System.Double.CompareTo%2A>方法，以判斷兩個值之間的關聯性。</span><span class="sxs-lookup"><span data-stu-id="86f72-231">You can call the <xref:System.Double.Equals%2A> method to determine whether two <xref:System.Double> values are equal, or the <xref:System.Double.CompareTo%2A> method to determine the relationship between two values.</span></span>  
  
     <span data-ttu-id="86f72-232"><xref:System.Double>結構也支援一組完整的比較運算子。</span><span class="sxs-lookup"><span data-stu-id="86f72-232">The <xref:System.Double> structure also supports a complete set of comparison operators.</span></span> <span data-ttu-id="86f72-233">例如，您可以測試相等或不等，或判斷某個值是否大於或等於另一個。</span><span class="sxs-lookup"><span data-stu-id="86f72-233">For example, you can test for equality or inequality, or determine whether one value is greater than or equal to another.</span></span> <span data-ttu-id="86f72-234">如果其中一個運算元不是數值的型別<xref:System.Double>，則會轉換成<xref:System.Double>之前執行比較。</span><span class="sxs-lookup"><span data-stu-id="86f72-234">If one of the operands is a numeric type other than a <xref:System.Double>, it is converted to a <xref:System.Double> before performing the comparison.</span></span>  
  
    > [!WARNING]
    >  <span data-ttu-id="86f72-235">有效位數，因此兩個<xref:System.Double>您預期是相等的值可能會變得不相等，這會影響比較的結果。</span><span class="sxs-lookup"><span data-stu-id="86f72-235">Because of differences in precision, two <xref:System.Double> values that you expect to be equal may turn out to be unequal, which affects the result of the comparison.</span></span> <span data-ttu-id="86f72-236">請參閱[測試是否相等](#Equality)如需有關比較兩個區段<xref:System.Double>值。</span><span class="sxs-lookup"><span data-stu-id="86f72-236">See the [Testing for Equality](#Equality) section for more information about comparing two <xref:System.Double> values.</span></span>  
  
     <span data-ttu-id="86f72-237">您也可以呼叫<xref:System.Double.IsNaN%2A>， <xref:System.Double.IsInfinity%2A>， <xref:System.Double.IsPositiveInfinity%2A>，和<xref:System.Double.IsNegativeInfinity%2A>來測試這些特殊值的方法。</span><span class="sxs-lookup"><span data-stu-id="86f72-237">You can also call the <xref:System.Double.IsNaN%2A>, <xref:System.Double.IsInfinity%2A>, <xref:System.Double.IsPositiveInfinity%2A>, and <xref:System.Double.IsNegativeInfinity%2A> methods to test for these special values.</span></span>  
  
-   <span data-ttu-id="86f72-238">**數學運算**。</span><span class="sxs-lookup"><span data-stu-id="86f72-238">**Mathematical operations**.</span></span> <span data-ttu-id="86f72-239">常用的算術運算，例如加法、 減法、 乘法和除法、 會實作由語言編譯器和通用中間語言 (CIL) 的指示，而非<xref:System.Double>方法。</span><span class="sxs-lookup"><span data-stu-id="86f72-239">Common arithmetic operations, such as addition, subtraction, multiplication, and division, are implemented by language compilers and Common Intermediate Language (CIL) instructions, rather than by <xref:System.Double> methods.</span></span> <span data-ttu-id="86f72-240">如果其中一個數學運算的運算元不是數值的型別<xref:System.Double>，則會轉換成<xref:System.Double>之前執行此作業。</span><span class="sxs-lookup"><span data-stu-id="86f72-240">If one of the operands in a mathematical operation is a numeric type other than a <xref:System.Double>, it is converted to a <xref:System.Double> before performing the operation.</span></span> <span data-ttu-id="86f72-241">作業的結果也是<xref:System.Double>值。</span><span class="sxs-lookup"><span data-stu-id="86f72-241">The result of the operation is also a <xref:System.Double> value.</span></span>  
  
     <span data-ttu-id="86f72-242">可以藉由呼叫執行其他數學運算`static`(`Shared` Visual Basic 中) 中的方法<xref:System.Math?displayProperty=nameWithType>類別。</span><span class="sxs-lookup"><span data-stu-id="86f72-242">Other mathematical operations can be performed by calling `static` (`Shared` in Visual Basic) methods in the <xref:System.Math?displayProperty=nameWithType> class.</span></span> <span data-ttu-id="86f72-243">它包含常用的算術運算的其他方法 (例如<xref:System.Math.Abs%2A?displayProperty=nameWithType>， <xref:System.Math.Sign%2A?displayProperty=nameWithType>，和<xref:System.Math.Sqrt%2A?displayProperty=nameWithType>)，幾何 (例如<xref:System.Math.Cos%2A?displayProperty=nameWithType>和<xref:System.Math.Sin%2A?displayProperty=nameWithType>)，和微積分 (例如<xref:System.Math.Log%2A?displayProperty=nameWithType>)。</span><span class="sxs-lookup"><span data-stu-id="86f72-243">It includes additional methods commonly used for arithmetic (such as <xref:System.Math.Abs%2A?displayProperty=nameWithType>, <xref:System.Math.Sign%2A?displayProperty=nameWithType>, and <xref:System.Math.Sqrt%2A?displayProperty=nameWithType>), geometry (such as <xref:System.Math.Cos%2A?displayProperty=nameWithType> and <xref:System.Math.Sin%2A?displayProperty=nameWithType>), and calculus (such as <xref:System.Math.Log%2A?displayProperty=nameWithType>).</span></span>  
  
     <span data-ttu-id="86f72-244">您也可以使用操作中的個別位元<xref:System.Double>值。</span><span class="sxs-lookup"><span data-stu-id="86f72-244">You can also manipulate the individual bits in a <xref:System.Double> value.</span></span> <span data-ttu-id="86f72-245"><xref:System.BitConverter.DoubleToInt64Bits%2A?displayProperty=nameWithType>方法會保留<xref:System.Double>值的位元模式中的 64 位元整數。</span><span class="sxs-lookup"><span data-stu-id="86f72-245">The <xref:System.BitConverter.DoubleToInt64Bits%2A?displayProperty=nameWithType> method preserves a <xref:System.Double> value's bit pattern in a 64-bit integer.</span></span> <span data-ttu-id="86f72-246"><xref:System.BitConverter.GetBytes%28System.Double%29?displayProperty=nameWithType>方法會傳回其位元模式中的位元組陣列。</span><span class="sxs-lookup"><span data-stu-id="86f72-246">The <xref:System.BitConverter.GetBytes%28System.Double%29?displayProperty=nameWithType> method returns its bit pattern in a byte array.</span></span>  
  
-   <span data-ttu-id="86f72-247">**捨入**。</span><span class="sxs-lookup"><span data-stu-id="86f72-247">**Rounding**.</span></span> <span data-ttu-id="86f72-248">捨入通常用於一種技術以減少的差異值的浮點數表示和精確度的問題所造成的影響。</span><span class="sxs-lookup"><span data-stu-id="86f72-248">Rounding is often used as a technique for reducing the impact of differences between values caused by problems of floating-point representation and precision.</span></span> <span data-ttu-id="86f72-249">您可以藉由四捨五入<xref:System.Double>值，藉由呼叫<xref:System.Math.Round%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="86f72-249">You can round a <xref:System.Double> value by calling the <xref:System.Math.Round%2A?displayProperty=nameWithType> method.</span></span>  
  
-   <span data-ttu-id="86f72-250">**格式化**。</span><span class="sxs-lookup"><span data-stu-id="86f72-250">**Formatting**.</span></span> <span data-ttu-id="86f72-251">您可以將轉換<xref:System.Double>值為其字串表示，藉由呼叫<xref:System.Double.ToString%2A>方法或使用複合格式功能。</span><span class="sxs-lookup"><span data-stu-id="86f72-251">You can convert a <xref:System.Double> value to its string representation by calling the <xref:System.Double.ToString%2A> method or by using the composite formatting feature.</span></span> <span data-ttu-id="86f72-252">如需格式字串的浮點值的字串表示的控制方式，請參閱[標準數值格式字串](~/docs/standard/base-types/standard-numeric-format-strings.md)並[自訂數值格式字串](~/docs/standard/base-types/custom-numeric-format-strings.md)主題。</span><span class="sxs-lookup"><span data-stu-id="86f72-252">For information about how format strings control the string representation of floating-point values, see the [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md) topics.</span></span>  
  
-   <span data-ttu-id="86f72-253">**剖析字串**。</span><span class="sxs-lookup"><span data-stu-id="86f72-253">**Parsing strings**.</span></span> <span data-ttu-id="86f72-254">您可以將轉換的浮點值的字串表示<xref:System.Double>值，藉由呼叫<xref:System.Double.Parse%2A>或<xref:System.Double.TryParse%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="86f72-254">You can convert the string representation of a floating-point value to a <xref:System.Double> value by calling either the <xref:System.Double.Parse%2A> or <xref:System.Double.TryParse%2A> method.</span></span> <span data-ttu-id="86f72-255">如果剖析作業失敗，<xref:System.Double.Parse%2A>方法會擲回例外狀況，而<xref:System.Double.TryParse%2A>方法會傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="86f72-255">If the parse operation fails, the <xref:System.Double.Parse%2A> method throws an exception, whereas the <xref:System.Double.TryParse%2A> method returns `false`.</span></span>  
  
-   <span data-ttu-id="86f72-256">**類型轉換**。</span><span class="sxs-lookup"><span data-stu-id="86f72-256">**Type conversion**.</span></span> <span data-ttu-id="86f72-257"><xref:System.Double>結構提供的明確介面實作<xref:System.IConvertible>介面支援任何兩個標準的.NET Framework 資料類型之間轉換。</span><span class="sxs-lookup"><span data-stu-id="86f72-257">The <xref:System.Double> structure provides an explicit interface implementation for the <xref:System.IConvertible> interface, which supports conversion between any two standard .NET Framework data types.</span></span> <span data-ttu-id="86f72-258">語言編譯器也支援的所有其他標準數字型別，值隱含轉換<xref:System.Double>值。</span><span class="sxs-lookup"><span data-stu-id="86f72-258">Language compilers also support the implicit conversion of values of all other standard numeric types to <xref:System.Double> values.</span></span> <span data-ttu-id="86f72-259">任何標準的數字型別，若要將值轉換<xref:System.Double>是擴展轉換，而且不需要轉型運算子或轉換方法，使用者</span><span class="sxs-lookup"><span data-stu-id="86f72-259">Conversion of a value of any standard numeric type to a <xref:System.Double> is a widening conversion and does not require the user of a casting operator or conversion method,</span></span>  
  
     <span data-ttu-id="86f72-260">不過，轉換<xref:System.Int64>和<xref:System.Single>值可能是遺失有效位數。</span><span class="sxs-lookup"><span data-stu-id="86f72-260">However, conversion of <xref:System.Int64> and <xref:System.Single> values can involve a loss of precision.</span></span> <span data-ttu-id="86f72-261">下表列出的每一種類型的有效位數的差異：</span><span class="sxs-lookup"><span data-stu-id="86f72-261">The following table lists the differences in precision for each of these types:</span></span>  
  
    |<span data-ttu-id="86f72-262">類型</span><span class="sxs-lookup"><span data-stu-id="86f72-262">Type</span></span>|<span data-ttu-id="86f72-263">最大有效位數</span><span class="sxs-lookup"><span data-stu-id="86f72-263">Maximum precision</span></span>|<span data-ttu-id="86f72-264">內部的有效位數</span><span class="sxs-lookup"><span data-stu-id="86f72-264">Internal precision</span></span>|  
    |----------|-----------------------|------------------------|  
    |<xref:System.Double>|<span data-ttu-id="86f72-265">15</span><span class="sxs-lookup"><span data-stu-id="86f72-265">15</span></span>|<span data-ttu-id="86f72-266">17</span><span class="sxs-lookup"><span data-stu-id="86f72-266">17</span></span>|  
    |<xref:System.Int64>|<span data-ttu-id="86f72-267">19 的十進位數字</span><span class="sxs-lookup"><span data-stu-id="86f72-267">19 decimal digits</span></span>|<span data-ttu-id="86f72-268">19 的十進位數字</span><span class="sxs-lookup"><span data-stu-id="86f72-268">19 decimal digits</span></span>|  
    |<xref:System.Single>|<span data-ttu-id="86f72-269">7 的十進位數字</span><span class="sxs-lookup"><span data-stu-id="86f72-269">7 decimal digits</span></span>|<span data-ttu-id="86f72-270">9 的十進位數字</span><span class="sxs-lookup"><span data-stu-id="86f72-270">9 decimal digits</span></span>|  
  
     <span data-ttu-id="86f72-271">有效位數的問題通常會影響<xref:System.Single>值轉換成<xref:System.Double>值。</span><span class="sxs-lookup"><span data-stu-id="86f72-271">The problem of precision most frequently affects <xref:System.Single> values that are converted to <xref:System.Double> values.</span></span> <span data-ttu-id="86f72-272">在下列範例中，相同的除法運算所產生的兩個值相等因為其中一個值是單精確度浮點數值轉換成<xref:System.Double>。</span><span class="sxs-lookup"><span data-stu-id="86f72-272">In the following example, two values produced by identical division operations are unequal because one of the values is a single-precision floating point value converted to a <xref:System.Double>.</span></span>  
  
     [!code-csharp[System.Double.Structure#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.double.structure/cs/representation1.cs#3)]
     [!code-vb[System.Double.Structure#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.double.structure/vb/representation1.vb#3)]  
  
   
  
## Examples  
 <span data-ttu-id="86f72-273">下列程式碼範例示範如何將<xref:System.Double>:</span><span class="sxs-lookup"><span data-stu-id="86f72-273">The following code example illustrates the use of <xref:System.Double>:</span></span>  
  
 [!code-cpp[Double Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/Double Example/CPP/source.cpp#1)]
 [!code-csharp[Double Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/Double Example/CS/source.cs#1)]
 [!code-vb[Double Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Double Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="86f72-274">此型別的所有成員都是安全執行緒。</span>
      <span class="sxs-lookup">
        <span data-stu-id="86f72-274">All members of this type are thread safe.</span>
      </span>
      <span data-ttu-id="86f72-275">若要修改執行個體狀態會顯示的成員實際上會傳回新的值進行初始化的新執行個體。</span>
      <span class="sxs-lookup">
        <span data-stu-id="86f72-275">Members that appear to modify instance state actually return a new instance initialized with the new value.</span>
      </span>
      <span data-ttu-id="86f72-276">為與任何其他型別，讀取和寫入共用的變數，其中包含這個型別的執行個體必須受到鎖定，以確保執行緒安全性。</span>
      <span class="sxs-lookup">
        <span data-stu-id="86f72-276">As with any other type, reading and writing to a shared variable that contains an instance of this type must be protected by a lock to guarantee thread safety.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.Decimal" />
    <altmember cref="T:System.Single" />
  </Docs>
  <Members>
    <MemberGroup MemberName="CompareTo">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="86f72-277">比較這個執行個體與指定的物件或 <see cref="T:System.Double" /> 物件，並傳回整數，以表示此執行個體的值小於、等於或大於指定之物件或 <see cref="T:System.Double" /> 物件的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-277">Compares this instance to a specified object or <see cref="T:System.Double" /> object and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the specified object or <see cref="T:System.Double" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.CompareTo(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Double) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(double value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : double -&gt; int&#xA;override this.CompareTo : double -&gt; int" Usage="double.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="86f72-278">要比較的雙精確度浮點數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-278">A double-precision floating-point number to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86f72-279">比較這個執行個體與雙精確度的浮點數值，並且傳回一個整數，指出這個執行個體的值是小於、等於或大於特定的雙精確度浮點數值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-279">Compares this instance to a specified double-precision floating-point number and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the specified double-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86f72-280">帶正負號的數字，指出這個執行個體與 <paramref name="value" /> 的相對值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-280">A signed number indicating the relative values of this instance and <paramref name="value" />.</span>
          </span>
          <span data-ttu-id="86f72-281">
            <list type="table">
              <listheader>
                <term> 傳回值  </term>
                <description> 描述  </description>
              </listheader>
              <item>
                <term> 小於零  </term>
                <description> 這個執行個體小於 <paramref name="value" />。-或-  這個執行個體是非數字 (<see cref="F:System.Double.NaN" />)，而且 <paramref name="value" /> 是數字。</description>
              </item>
              <item>
                <term> 零  </term>
                <description> 這個執行個體等於 <paramref name="value" />。-或-  這個執行個體和 <paramref name="value" /> 同時為非數字 (<see cref="F:System.Double.NaN" />)、<see cref="F:System.Double.PositiveInfinity" /> 或 <see cref="F:System.Double.NegativeInfinity" />。</description>
              </item>
              <item>
                <term> 大於零  </term>
                <description> 這個執行個體大於 <paramref name="value" />。-或-  這個執行個體是數字，而且 <paramref name="value" /> 為非數字 (<see cref="F:System.Double.NaN" />)。  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-281">
              <list type="table">
                <listheader>
                  <term> Return Value  </term>
                  <description> Description  </description>
                </listheader>
                <item>
                  <term> Less than zero  </term>
                  <description> This instance is less than <paramref name="value" />.  -or-  This instance is not a number (<see cref="F:System.Double.NaN" />) and <paramref name="value" /> is a number.  </description>
                </item>
                <item>
                  <term> Zero  </term>
                  <description> This instance is equal to <paramref name="value" />.  -or-  Both this instance and <paramref name="value" /> are not a number (<see cref="F:System.Double.NaN" />), <see cref="F:System.Double.PositiveInfinity" />, or <see cref="F:System.Double.NegativeInfinity" />.  </description>
                </item>
                <item>
                  <term> Greater than zero  </term>
                  <description> This instance is greater than <paramref name="value" />.  -or-  This instance is a number and <paramref name="value" /> is not a number (<see cref="F:System.Double.NaN" />).  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86f72-282">值必須相同才會被視為相等。</span><span class="sxs-lookup"><span data-stu-id="86f72-282">Values must be identical to be considered equal.</span></span> <span data-ttu-id="86f72-283">尤其是浮點數的值取決於多個數學運算，通常會遺失有效位數和其值必須是幾乎完全相同，除了其最小有效位數。</span><span class="sxs-lookup"><span data-stu-id="86f72-283">Particularly when floating-point values depend on multiple mathematical operations, it is common for them to lose precision and for their values to be nearly identical except for their least significant digits.</span></span> <span data-ttu-id="86f72-284">因為這個緣故，傳回值<xref:System.Double.CompareTo%2A>方法有時候可能會很驚訝。</span><span class="sxs-lookup"><span data-stu-id="86f72-284">Because of this, the return value of the <xref:System.Double.CompareTo%2A> method at times may seem surprising.</span></span> <span data-ttu-id="86f72-285">例如，乘法依特定值後面除法相同的值應該產生原始值。</span><span class="sxs-lookup"><span data-stu-id="86f72-285">For example, multiplication by a particular value followed by division by the same value should produce the original value.</span></span> <span data-ttu-id="86f72-286">在下列範例中，不過，計算的值其實可以大於原始值。</span><span class="sxs-lookup"><span data-stu-id="86f72-286">In the following example, however, the computed value turns out to be greater than the original value.</span></span> <span data-ttu-id="86f72-287">使用"R"顯示兩個值的所有有效位數[標準數值格式字串](~/docs/standard/base-types/standard-numeric-format-strings.md)表示從其最小有效位數中的原始值，不同的計算的值。</span><span class="sxs-lookup"><span data-stu-id="86f72-287">Showing all significant digits of the two values by using the "R" [standard numeric format string](~/docs/standard/base-types/standard-numeric-format-strings.md) indicates that the computed value differs from the original value in its least significant digits.</span></span> <span data-ttu-id="86f72-288">如需處理這類比較的詳細資訊，請參閱 < 備註 > 一節<xref:System.Double.Equals%28System.Double%29>方法。</span><span class="sxs-lookup"><span data-stu-id="86f72-288">For information on handling such comparisons, see the Remarks section of the <xref:System.Double.Equals%28System.Double%29> method.</span></span>  
  
 [!code-csharp[System.Double.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.double.compareto/cs/compareto2.cs#1)]
 [!code-vb[System.Double.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.double.compareto/vb/compareto2.vb#1)]  
  
 <span data-ttu-id="86f72-289">這個方法會實作<xref:System.IComparable%601?displayProperty=nameWithType>介面並執行稍微優於<xref:System.Double.CompareTo%2A?displayProperty=nameWithType>方法因為並沒有將`value`物件的參數。</span><span class="sxs-lookup"><span data-stu-id="86f72-289">This method implements the <xref:System.IComparable%601?displayProperty=nameWithType> interface and performs slightly better than the <xref:System.Double.CompareTo%2A?displayProperty=nameWithType> method because it does not have to convert the `value` parameter to an object.</span></span>  
  
 <span data-ttu-id="86f72-290">請注意，雖然物件，其值為<xref:System.Double.NaN>不等於另一個物件，其值為<xref:System.Double.NaN>（甚至是本身），<xref:System.IComparable%601>介面需要`A.CompareTo(A)`傳回零。</span><span class="sxs-lookup"><span data-stu-id="86f72-290">Note that, although an object whose value is <xref:System.Double.NaN> is not considered equal to another object whose value is <xref:System.Double.NaN> (even itself), the <xref:System.IComparable%601> interface requires that `A.CompareTo(A)` return zero.</span></span>  
  
## <a name="widening-conversions"></a><span data-ttu-id="86f72-291">擴展轉換</span><span class="sxs-lookup"><span data-stu-id="86f72-291">Widening Conversions</span></span>  
 <span data-ttu-id="86f72-292">根據您的程式語言，可能是程式碼可能<xref:System.Double.CompareTo%2A>方法的參數類型具有較少的位元的位置 （較窄） 與執行個體類型。</span><span class="sxs-lookup"><span data-stu-id="86f72-292">Depending on your programming language, it might be possible to code a <xref:System.Double.CompareTo%2A> method where the parameter type has fewer bits (is narrower) than the instance type.</span></span> <span data-ttu-id="86f72-293">這可能是因為有些程式語言會執行隱含的擴展轉換，將參數表示為型別具有相同位元數與執行個體。</span><span class="sxs-lookup"><span data-stu-id="86f72-293">This is possible because some programming languages perform an implicit widening conversion that represents the parameter as a type with as many bits as the instance.</span></span>  
  
 <span data-ttu-id="86f72-294">例如，假設此執行個體類型是<xref:System.Double>，且參數類型為<xref:System.Int32>。</span><span class="sxs-lookup"><span data-stu-id="86f72-294">For example, suppose the instance type is <xref:System.Double> and the parameter type is <xref:System.Int32>.</span></span> <span data-ttu-id="86f72-295">Microsoft C# 編譯器會產生代表做為參數的值的指示<xref:System.Double>物件，則會產生<xref:System.Double.CompareTo%28System.Double%29?displayProperty=nameWithType>比較執行個體的值和擴大的表示參數的方法。</span><span class="sxs-lookup"><span data-stu-id="86f72-295">The Microsoft C# compiler generates instructions to represent the value of the parameter as a <xref:System.Double> object, then generates a <xref:System.Double.CompareTo%28System.Double%29?displayProperty=nameWithType> method that compares the values of the instance and the widened representation of the parameter.</span></span>  
  
 <span data-ttu-id="86f72-296">請參閱您的程式語言的文件，以判斷其編譯器是否會執行隱含的擴展轉換的數字類型。</span><span class="sxs-lookup"><span data-stu-id="86f72-296">Consult your programming language's documentation to determine if its compiler performs implicit widening conversions of numeric types.</span></span> <span data-ttu-id="86f72-297">如需詳細資訊，請參閱 <<c0> [ 類型轉換表](~/docs/standard/base-types/conversion-tables.md)主題。</span><span class="sxs-lookup"><span data-stu-id="86f72-297">For more information, see the [Type Conversion Tables](~/docs/standard/base-types/conversion-tables.md) topic.</span></span>  
  
## <a name="precision-in-comparisons"></a><span data-ttu-id="86f72-298">在比較中的有效位數</span><span class="sxs-lookup"><span data-stu-id="86f72-298">Precision in Comparisons</span></span>  
 <span data-ttu-id="86f72-299">超過記載的精確度的浮點數的有效位數是特定實作] 和 [.NET Framework 版本。</span><span class="sxs-lookup"><span data-stu-id="86f72-299">The precision of floating-point numbers beyond the documented precision is specific to the implementation and version of the .NET Framework.</span></span> <span data-ttu-id="86f72-300">因此，比較兩個特定的數字可能會變更.NET Framework 版本之間的有效位數的數字的內部表示法可能會變更。</span><span class="sxs-lookup"><span data-stu-id="86f72-300">Consequently, a comparison of two particular numbers might change between versions of the .NET Framework because the precision of the numbers' internal representation might change.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86f72-301">下列程式碼範例示範泛型和非泛型版本<xref:System.Double.CompareTo%2A>數的值和參考類型的方法。</span><span class="sxs-lookup"><span data-stu-id="86f72-301">The following code example demonstrates generic and nongeneric versions of the <xref:System.Double.CompareTo%2A> method for several value and reference types.</span></span>  
  
 [!code-cpp[T.CompareTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/T.CompareTo/CPP/cat.cpp#1)]
 [!code-csharp[T.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/T.CompareTo/CS/cat.cs#1)]
 [!code-vb[T.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/T.CompareTo/VB/cat.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Double.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj -&gt; int&#xA;override this.CompareTo : obj -&gt; int" Usage="double.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="86f72-302">要比較的物件或 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-302">An object to compare, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86f72-303">比較這個執行個體與特定物件，並且傳回一個整數，指出這個執行個體的值是小於、等於或大於特定物件的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-303">Compares this instance to a specified object and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86f72-304">帶正負號的數字，指出這個執行個體與 <paramref name="value" /> 的相對值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-304">A signed number indicating the relative values of this instance and <paramref name="value" />.</span>
          </span>
          <span data-ttu-id="86f72-305">
            <list type="table">
              <listheader>
                <term> 值  </term>
                <description> 描述  </description>
              </listheader>
              <item>
                <term> 負整數  </term>
                <description> 這個執行個體小於 <paramref name="value" />。-或-  這個執行個體是非數字 (<see cref="F:System.Double.NaN" />)，而且 <paramref name="value" /> 是數字。</description>
              </item>
              <item>
                <term> 零  </term>
                <description> 這個執行個體等於 <paramref name="value" />。-或-  這個執行個體和 <paramref name="value" /> 均為 <see langword="Double.NaN" />、<see cref="F:System.Double.PositiveInfinity" /> 或 <see cref="F:System.Double.NegativeInfinity" /></description>
              </item>
              <item>
                <term> 正整數  </term>
                <description> 這個執行個體大於 <paramref name="value" />。-或-  這個執行個體是數字，而且 <paramref name="value" /> 為非數字 (<see cref="F:System.Double.NaN" />)。-或-  <paramref name="value" /> 是 <see langword="null" />。  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-305">
              <list type="table">
                <listheader>
                  <term> Value  </term>
                  <description> Description  </description>
                </listheader>
                <item>
                  <term> A negative integer  </term>
                  <description> This instance is less than <paramref name="value" />.  -or-  This instance is not a number (<see cref="F:System.Double.NaN" />) and <paramref name="value" /> is a number.  </description>
                </item>
                <item>
                  <term> Zero  </term>
                  <description> This instance is equal to <paramref name="value" />.  -or-  This instance and <paramref name="value" /> are both <see langword="Double.NaN" />, <see cref="F:System.Double.PositiveInfinity" />, or <see cref="F:System.Double.NegativeInfinity" /></description>
                </item>
                <item>
                  <term> A positive integer  </term>
                  <description> This instance is greater than <paramref name="value" />.  -or-  This instance is a number and <paramref name="value" /> is not a number (<see cref="F:System.Double.NaN" />).  -or-  <paramref name="value" /> is <see langword="null" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86f72-306">`value`參數必須是`null`或執行個體`Double`，否則會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="86f72-306">The `value` parameter must be `null` or an instance of `Double`; otherwise, an exception is thrown.</span></span> <span data-ttu-id="86f72-307">任何執行個體<xref:System.Double>，不論其值會被視為大於`null`。</span><span class="sxs-lookup"><span data-stu-id="86f72-307">Any instance of <xref:System.Double>, regardless of its value, is considered greater than `null`.</span></span>  
  
 <span data-ttu-id="86f72-308">值必須相同才會被視為相等。</span><span class="sxs-lookup"><span data-stu-id="86f72-308">Values must be identical to be considered equal.</span></span> <span data-ttu-id="86f72-309">尤其是浮點數的值取決於多個數學運算，通常會遺失有效位數和其值必須是幾乎完全相同，除了其最小有效位數。</span><span class="sxs-lookup"><span data-stu-id="86f72-309">Particularly when floating-point values depend on multiple mathematical operations, it is common for them to lose precision and for their values to be nearly identical except for their least significant digits.</span></span> <span data-ttu-id="86f72-310">因為這個緣故，傳回值<xref:System.Double.CompareTo%2A>方法有時候可能會很驚訝。</span><span class="sxs-lookup"><span data-stu-id="86f72-310">Because of this, the return value of the <xref:System.Double.CompareTo%2A> method at times may seem surprising.</span></span> <span data-ttu-id="86f72-311">例如，乘法依特定值後面除法相同的值應該產生原始值。</span><span class="sxs-lookup"><span data-stu-id="86f72-311">For example, multiplication by a particular value followed by division by the same value should produce the original value.</span></span> <span data-ttu-id="86f72-312">在下列範例中，不過，計算的值其實可以大於原始值。</span><span class="sxs-lookup"><span data-stu-id="86f72-312">In the following example, however, the computed value turns out to be greater than the original value.</span></span> <span data-ttu-id="86f72-313">使用"R"顯示兩個值的所有有效位數[標準數值格式字串](~/docs/standard/base-types/standard-numeric-format-strings.md)表示從其最小有效位數中的原始值，不同的計算的值。</span><span class="sxs-lookup"><span data-stu-id="86f72-313">Showing all significant digits of the two values by using the "R" [standard numeric format string](~/docs/standard/base-types/standard-numeric-format-strings.md) indicates that the computed value differs from the original value in its least significant digits.</span></span> <span data-ttu-id="86f72-314">如需處理這類比較的詳細資訊，請參閱 < 備註 > 一節<xref:System.Double.Equals%28System.Double%29>方法。</span><span class="sxs-lookup"><span data-stu-id="86f72-314">For information on handling such comparisons, see the Remarks section of the <xref:System.Double.Equals%28System.Double%29> method.</span></span>  
  
 [!code-csharp[System.Double.CompareTo#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.double.compareto/cs/compareto3.cs#2)]
 [!code-vb[System.Double.CompareTo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.double.compareto/vb/compareto3.vb#2)]  
  
 <span data-ttu-id="86f72-315">這個方法會實作以支援<xref:System.IComparable>介面。</span><span class="sxs-lookup"><span data-stu-id="86f72-315">This method is implemented to support the <xref:System.IComparable> interface.</span></span> <span data-ttu-id="86f72-316">請注意，雖然<xref:System.Double.NaN>不等於另一個<xref:System.Double.NaN>（甚至是本身），<xref:System.IComparable>介面需要`A.CompareTo(A)`傳回零。</span><span class="sxs-lookup"><span data-stu-id="86f72-316">Note that, although a <xref:System.Double.NaN> is not considered to be equal to another <xref:System.Double.NaN> (even itself), the <xref:System.IComparable> interface requires that `A.CompareTo(A)` return zero.</span></span>  
  
## <a name="precision-in-comparisons"></a><span data-ttu-id="86f72-317">在比較中的有效位數</span><span class="sxs-lookup"><span data-stu-id="86f72-317">Precision in Comparisons</span></span>  
 <span data-ttu-id="86f72-318">超過記載的精確度的浮點數的有效位數是特定實作] 和 [.NET Framework 版本。</span><span class="sxs-lookup"><span data-stu-id="86f72-318">The precision of floating-point numbers beyond the documented precision is specific to the implementation and version of the .NET Framework.</span></span> <span data-ttu-id="86f72-319">因此，比較兩個特定的數字可能會變更.NET Framework 版本之間的有效位數的數字的內部表示法可能會變更。</span><span class="sxs-lookup"><span data-stu-id="86f72-319">Consequently, a comparison of two particular numbers might change between versions of the .NET Framework because the precision of the numbers' internal representation might change.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86f72-320">下列程式碼範例示範如何將`CompareTo`的內容中`Double`。</span><span class="sxs-lookup"><span data-stu-id="86f72-320">The following code example illustrates the use of `CompareTo` in the context of `Double`.</span></span>  
  
 [!code-cpp[System.Double#16](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Double/CPP/doublesample.cpp#16)]
 [!code-csharp[System.Double#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double/CS/doublesample.cs#16)]
 [!code-vb[System.Double#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double/VB/doublesample.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="86f72-321">
            <paramref name="value" /> 不是 <see cref="T:System.Double" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-321">
              <paramref name="value" /> is not a <see cref="T:System.Double" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Double.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Epsilon">
      <MemberSignature Language="C#" Value="public const double Epsilon = 4.94065645841247E-324;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float64 Epsilon = float64(4.94065645841247E-324)" />
      <MemberSignature Language="DocId" Value="F:System.Double.Epsilon" />
      <MemberSignature Language="VB.NET" Value="Public Const Epsilon As Double  = 4.94065645841247E-324" />
      <MemberSignature Language="C++ CLI" Value="public: double Epsilon = 4.94065645841247E-324;" />
      <MemberSignature Language="F#" Value="val mutable Epsilon : double" Usage="System.double.Epsilon" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <MemberValue>4.94065645841247E-324</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="86f72-322">代表大於零的最小正 <see cref="T:System.Double" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-322">Represents the smallest positive <see cref="T:System.Double" /> value that is greater than zero.</span>
          </span>
          <span data-ttu-id="86f72-323">這個欄位是常數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-323">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86f72-324">值<xref:System.Double.Epsilon>屬性會反映最小正<xref:System.Double>數字的操作或比較中佔有相當大的值時的值<xref:System.Double>執行個體是零。</span><span class="sxs-lookup"><span data-stu-id="86f72-324">The value of the <xref:System.Double.Epsilon> property reflects the smallest positive <xref:System.Double> value that is significant in numeric operations or comparisons when the value of the <xref:System.Double> instance is zero.</span></span> <span data-ttu-id="86f72-325">例如，下列程式碼所示的零和<xref:System.Double.Epsilon>會被視為不相等的值，而零和一半的值<xref:System.Double.Epsilon>會被視為相等。</span><span class="sxs-lookup"><span data-stu-id="86f72-325">For example, the following code shows that zero and <xref:System.Double.Epsilon> are considered to be unequal values, whereas zero and half the value of <xref:System.Double.Epsilon> are considered to be equal.</span></span>  
  
 [!code-csharp[System.Double.Epsilon#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double.Epsilon/cs/epsilon.cs#5)]
 [!code-vb[System.Double.Epsilon#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double.Epsilon/vb/epsilon.vb#5)]  
  
 <span data-ttu-id="86f72-326">更精確地說，浮點格式包含號、 52 位元尾數或有效位數和 11 位元的指數的點。</span><span class="sxs-lookup"><span data-stu-id="86f72-326">More precisely, the floating point format consists of a sign, a 52-bit mantissa or significand, and an 11-bit exponent.</span></span> <span data-ttu-id="86f72-327">如下列範例所示，零會有的-1022年指數和尾數為 0。</span><span class="sxs-lookup"><span data-stu-id="86f72-327">As the following example shows, zero has an exponent of -1022 and a mantissa of 0.</span></span> <span data-ttu-id="86f72-328"><xref:System.Double.Epsilon> 有的-1022年指數和尾數的 1。</span><span class="sxs-lookup"><span data-stu-id="86f72-328"><xref:System.Double.Epsilon> has an exponent of -1022 and a mantissa of 1.</span></span> <span data-ttu-id="86f72-329">這表示<xref:System.Double.Epsilon>是最小正<xref:System.Double>值小於或等於零，並代表可能的最小值和最小可能的遞增量<xref:System.Double>其指數，是-1022年。</span><span class="sxs-lookup"><span data-stu-id="86f72-329">This means that <xref:System.Double.Epsilon> is the smallest positive <xref:System.Double> value greater than zero and represents the smallest possible value and the smallest possible increment for a <xref:System.Double> whose exponent is -1022.</span></span>  
  
 [!code-csharp[System.Double.Epsilon#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double.Epsilon/cs/epsilon1.cs#6)]
 [!code-vb[System.Double.Epsilon#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double.Epsilon/vb/epsilon1.vb#6)]  
  
 <span data-ttu-id="86f72-330">不過，<xref:System.Double.Epsilon>屬性不是一般的量值的有效位數<xref:System.Double>類型; 它只適用於<xref:System.Double>有值為 0 或-1022年的指數的執行個體。</span><span class="sxs-lookup"><span data-stu-id="86f72-330">However, the <xref:System.Double.Epsilon> property is not a general measure of precision of the <xref:System.Double> type; it applies only to <xref:System.Double> instances that have a value of zero or an exponent of -1022.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="86f72-331">值<xref:System.Double.Epsilon>屬性不等於機器 epsilon、 表示相對的錯誤，因為在浮點算術捨入上限。</span><span class="sxs-lookup"><span data-stu-id="86f72-331">The value of the <xref:System.Double.Epsilon> property is not equivalent to machine epsilon, which represents the upper bound of the relative error due to rounding in floating-point arithmetic.</span></span>  
  
 <span data-ttu-id="86f72-332">這個常數的值是 4.94065645841247-324。</span><span class="sxs-lookup"><span data-stu-id="86f72-332">The value of this constant is 4.94065645841247e-324.</span></span>  
  
 <span data-ttu-id="86f72-333">兩個明顯的對等的浮點數進行比較時可能並不相等，這是因為其最小有效位數的差異。</span><span class="sxs-lookup"><span data-stu-id="86f72-333">Two apparently equivalent floating-point numbers might not compare equal because of differences in their least significant digits.</span></span> <span data-ttu-id="86f72-334">例如，C# 運算式`(double)1/3 == (double)0.33333`，不會比較相等因為除法運算，在左側有最大有效位數，而右邊的常數只能精確到指定的數字。</span><span class="sxs-lookup"><span data-stu-id="86f72-334">For example, the C# expression, `(double)1/3 == (double)0.33333`, does not compare equal because the division operation on the left side has maximum precision while the constant on the right side is precise only to the specified digits.</span></span> <span data-ttu-id="86f72-335">如果您建立自訂的演算法來決定是否可以視為兩個浮點數相等時，我們不建議的值根據的演算法<xref:System.Double.Epsilon>常數，以建立可接受的絕對邊界的不同之處兩個值被視為相等。</span><span class="sxs-lookup"><span data-stu-id="86f72-335">If you create a custom algorithm that determines whether two floating-point numbers can be considered equal, we do not recommend that you base your algorithm on the value of the <xref:System.Double.Epsilon> constant to establish the acceptable absolute margin of difference for the two values to be considered equal.</span></span>  <span data-ttu-id="86f72-336">(一般而言，該邊界的差異大於多次<xref:System.Double.Epsilon>。)比較兩個雙精確度浮點值的相關資訊，請參閱<xref:System.Double>和<xref:System.Double.Equals%28System.Double%29>。</span><span class="sxs-lookup"><span data-stu-id="86f72-336">(Typically, that margin of difference is many times greater than <xref:System.Double.Epsilon>.) For information about comparing two double-precision floating-point values, see <xref:System.Double> and <xref:System.Double.Equals%28System.Double%29>.</span></span>  
  
## <a name="platform-notes"></a><span data-ttu-id="86f72-337">平台注意事項</span><span class="sxs-lookup"><span data-stu-id="86f72-337">Platform Notes</span></span>  
 <span data-ttu-id="86f72-338">在 ARM 系統上，windows 7<xref:System.Double.Epsilon>常數太小而無法偵測到，因此它等同於零。</span><span class="sxs-lookup"><span data-stu-id="86f72-338">On ARM systems, the value of the <xref:System.Double.Epsilon> constant is too small to be detected, so it equates to zero.</span></span> <span data-ttu-id="86f72-339">您可以定義替代 epsilon 值等於 2.2250738585072014 e-308 改。</span><span class="sxs-lookup"><span data-stu-id="86f72-339">You can define an alternative epsilon value that equals 2.2250738585072014E-308 instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="86f72-340">傳回數值，指示 <see cref="T:System.Double" /> 的兩個執行個體是否表示相同的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-340">Returns a value indicating whether two instances of <see cref="T:System.Double" /> represent the same value.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (double obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(float64 obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.Equals(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As Double) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(double obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : double -&gt; bool" Usage="double.Equals obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="86f72-341">要與這個執行個體相比較的 <see cref="T:System.Double" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-341">A <see cref="T:System.Double" /> object to compare to this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86f72-342">傳回數值，指示這個執行個體和指定的 <see cref="T:System.Double" /> 物件是否表示相同的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-342">Returns a value indicating whether this instance and a specified <see cref="T:System.Double" /> object represent the same value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86f72-343">如果 <paramref name="obj" /> 等於這個執行個體則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-343">
              <see langword="true" /> if <paramref name="obj" /> is equal to this instance; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86f72-344">這個方法會實作<xref:System.IEquatable%601?displayProperty=nameWithType>介面，並執行稍微優於<xref:System.Double.Equals%2A>因為並沒有將`obj`物件的參數。</span><span class="sxs-lookup"><span data-stu-id="86f72-344">This method implements the <xref:System.IEquatable%601?displayProperty=nameWithType> interface, and performs slightly better than <xref:System.Double.Equals%2A> because it does not have to convert the `obj` parameter to an object.</span></span>  
  
## <a name="widening-conversions"></a><span data-ttu-id="86f72-345">擴展轉換</span><span class="sxs-lookup"><span data-stu-id="86f72-345">Widening Conversions</span></span>  
 <span data-ttu-id="86f72-346">根據您的程式語言，可能是程式碼可能<xref:System.Double.Equals%2A>方法的參數類型具有較少的位元的位置 （較窄） 與執行個體類型。</span><span class="sxs-lookup"><span data-stu-id="86f72-346">Depending on your programming language, it might be possible to code a <xref:System.Double.Equals%2A> method where the parameter type has fewer bits (is narrower) than the instance type.</span></span> <span data-ttu-id="86f72-347">這可能是因為有些程式語言會執行隱含的擴展轉換，將參數表示為型別具有相同位元數與執行個體。</span><span class="sxs-lookup"><span data-stu-id="86f72-347">This is possible because some programming languages perform an implicit widening conversion that represents the parameter as a type with as many bits as the instance.</span></span>  
  
 <span data-ttu-id="86f72-348">例如，假設此執行個體類型是<xref:System.Double>，且參數類型為<xref:System.Int32>。</span><span class="sxs-lookup"><span data-stu-id="86f72-348">For example, suppose the instance type is <xref:System.Double> and the parameter type is <xref:System.Int32>.</span></span> <span data-ttu-id="86f72-349">Microsoft C# 編譯器會產生代表做為參數的值的指示<xref:System.Double>物件，則會產生<xref:System.Double.Equals%28System.Double%29?displayProperty=nameWithType>比較執行個體的值和擴大的表示參數的方法。</span><span class="sxs-lookup"><span data-stu-id="86f72-349">The Microsoft C# compiler generates instructions to represent the value of the parameter as a <xref:System.Double> object, then generates a <xref:System.Double.Equals%28System.Double%29?displayProperty=nameWithType> method that compares the values of the instance and the widened representation of the parameter.</span></span>  
  
 <span data-ttu-id="86f72-350">請參閱您的程式語言的文件，以判斷其編譯器是否會執行隱含的擴展轉換的數字類型。</span><span class="sxs-lookup"><span data-stu-id="86f72-350">Consult your programming language's documentation to determine if its compiler performs implicit widening conversions of numeric types.</span></span> <span data-ttu-id="86f72-351">如需詳細資訊，請參閱 <<c0> [ 類型轉換表](~/docs/standard/base-types/conversion-tables.md)主題。</span><span class="sxs-lookup"><span data-stu-id="86f72-351">For more information, see the [Type Conversion Tables](~/docs/standard/base-types/conversion-tables.md) topic.</span></span>  
  
## <a name="precision-in-comparisons"></a><span data-ttu-id="86f72-352">在比較中的有效位數</span><span class="sxs-lookup"><span data-stu-id="86f72-352">Precision in Comparisons</span></span>  
 <span data-ttu-id="86f72-353"><xref:System.Double.Equals%2A>方法應該小心使用，因為兩個明顯的對等的值可能會因為不同的有效位數的兩個值不相等。</span><span class="sxs-lookup"><span data-stu-id="86f72-353">The <xref:System.Double.Equals%2A> method should be used with caution, because two apparently equivalent values can be unequal due to the differing precision of the two values.</span></span> <span data-ttu-id="86f72-354">下列範例會回報<xref:System.Double>值.333333 和<xref:System.Double>1 除以 3 傳回的值不相等。</span><span class="sxs-lookup"><span data-stu-id="86f72-354">The following example reports that the <xref:System.Double> value .333333 and the <xref:System.Double> value returned by dividing 1 by 3 are unequal.</span></span>  
  
 [!code-csharp[System.Double.Epsilon#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double.Epsilon/cs/Equals_25051.cs#1)]
 [!code-vb[System.Double.Epsilon#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double.Epsilon/vb/Equals_25051.vb#1)]  
  
 <span data-ttu-id="86f72-355">而不是比較相等性，其中一種技術牽涉到定義可接受的相對界的兩個值之間的差異 (例如。 001%的其中一個值)。</span><span class="sxs-lookup"><span data-stu-id="86f72-355">Rather than comparing for equality, one technique involves defining an acceptable relative margin of difference between two values (such as .001% of one of the values).</span></span> <span data-ttu-id="86f72-356">如果兩個值之間差異的絕對值是小於或等於該邊界，差別有可能是因為有效位數的差異，因此，值為可能會相等。</span><span class="sxs-lookup"><span data-stu-id="86f72-356">If the absolute value of the difference between the two values is less than or equal to that margin, the difference is likely to be due to differences in precision and, therefore, the values are likely to be equal.</span></span> <span data-ttu-id="86f72-357">下列範例會使用這項技術來比較.33333 和 1/3，這兩個<xref:System.Double>先前的程式碼範例，請參閱元的值。</span><span class="sxs-lookup"><span data-stu-id="86f72-357">The following example uses this technique to compare .33333 and 1/3, the two <xref:System.Double> values that the previous code example found to be unequal.</span></span> <span data-ttu-id="86f72-358">在此情況下，值相等。</span><span class="sxs-lookup"><span data-stu-id="86f72-358">In this case, the values are equal.</span></span>  
  
 [!code-csharp[System.Double.Epsilon#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double.Epsilon/cs/Equals_25051.cs#2)]
 [!code-vb[System.Double.Epsilon#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double.Epsilon/vb/Equals_25051.vb#2)]  
  
> [!NOTE]
>  <span data-ttu-id="86f72-359">因為<xref:System.Double.Epsilon>會定義最小值運算式的正數值，其範圍是幾乎為零，兩個類似值之間差異的邊界必須大於<xref:System.Double.Epsilon>。</span><span class="sxs-lookup"><span data-stu-id="86f72-359">Because <xref:System.Double.Epsilon> defines the minimum expression of a positive value whose range is near zero, the margin of difference between two similar values must be greater than <xref:System.Double.Epsilon>.</span></span> <span data-ttu-id="86f72-360">一般來說，這是許多倍<xref:System.Double.Epsilon>。</span><span class="sxs-lookup"><span data-stu-id="86f72-360">Typically, it is many times greater than <xref:System.Double.Epsilon>.</span></span> <span data-ttu-id="86f72-361">因為這個緣故，我們建議您不要使用<xref:System.Double.Epsilon>比較時<xref:System.Double>值是否相等。</span><span class="sxs-lookup"><span data-stu-id="86f72-361">Because of this, we recommend that you do not use <xref:System.Double.Epsilon> when comparing <xref:System.Double> values for equality.</span></span>  
  
 <span data-ttu-id="86f72-362">第二種技術牽涉到比較兩個浮點數，與一些絕對值之間的差異。</span><span class="sxs-lookup"><span data-stu-id="86f72-362">A second technique involves comparing the difference between two floating-point numbers with some absolute value.</span></span> <span data-ttu-id="86f72-363">差別在於小於或等於該絕對值的數字相等。</span><span class="sxs-lookup"><span data-stu-id="86f72-363">If the difference is less than or equal to that absolute value, the numbers are equal.</span></span> <span data-ttu-id="86f72-364">如果是更大，則數字不相等。</span><span class="sxs-lookup"><span data-stu-id="86f72-364">If it is greater, the numbers are not equal.</span></span> <span data-ttu-id="86f72-365">有一個替代方法是任意選取 絕對值。</span><span class="sxs-lookup"><span data-stu-id="86f72-365">One alternative is to arbitrarily select an absolute value.</span></span> <span data-ttu-id="86f72-366">這是有問題，不過，因為差異可接受界取決於大小的<xref:System.Double>值。</span><span class="sxs-lookup"><span data-stu-id="86f72-366">This is problematic, however, because an acceptable margin of difference depends on the magnitude of the <xref:System.Double> values.</span></span> <span data-ttu-id="86f72-367">第二個替代方案會利用浮點數格式的設計功能： 兩個浮點值的整數表示之間的差異表示可能的浮點值的數目，顯示分隔。</span><span class="sxs-lookup"><span data-stu-id="86f72-367">A second alternative takes advantage of a design feature of the floating-point format: The difference between the integer representation of two floating-point values indicates the number of possible floating-point values that separates them.</span></span> <span data-ttu-id="86f72-368">比方說，0.0 之間的差異並<xref:System.Double.Epsilon>為 1，因為<xref:System.Double.Epsilon>是可顯示的最小值，當使用<xref:System.Double>其值為零。</span><span class="sxs-lookup"><span data-stu-id="86f72-368">For example, the difference between 0.0 and <xref:System.Double.Epsilon> is 1, because <xref:System.Double.Epsilon> is the smallest representable value when working with a <xref:System.Double> whose value is zero.</span></span> <span data-ttu-id="86f72-369">下列範例會使用這項技術來比較.33333 和 1/3，也就是這兩個<xref:System.Double>值，先前的程式碼範例，但<xref:System.Double.Equals%28System.Double%29>方法發現不相等。</span><span class="sxs-lookup"><span data-stu-id="86f72-369">The following example uses this technique to compare .33333 and 1/3, which are the two <xref:System.Double> values that the previous code example with the <xref:System.Double.Equals%28System.Double%29> method found to be unequal.</span></span> <span data-ttu-id="86f72-370">請注意，此範例會使用<xref:System.BitConverter.DoubleToInt64Bits%2A?displayProperty=nameWithType>方法，將雙精確度浮點值轉換為其整數表示。</span><span class="sxs-lookup"><span data-stu-id="86f72-370">Note that the example uses the <xref:System.BitConverter.DoubleToInt64Bits%2A?displayProperty=nameWithType> method to convert a double-precision floating-point value to its integer representation.</span></span>  
  
 [!code-csharp[System.Double.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.double.equals/cs/equalsabs1.cs#1)]
 [!code-vb[System.Double.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.double.equals/vb/equalsabs1.vb#1)]  
  
 <span data-ttu-id="86f72-371">超過記載的精確度的浮點數的有效位數是特定實作] 和 [.NET Framework 版本。</span><span class="sxs-lookup"><span data-stu-id="86f72-371">The precision of floating-point numbers beyond the documented precision is specific to the implementation and version of the .NET Framework.</span></span> <span data-ttu-id="86f72-372">因此，比較兩個特定的數字可能會變更.NET Framework 版本之間的有效位數的數字的內部表示法可能會變更。</span><span class="sxs-lookup"><span data-stu-id="86f72-372">Consequently, a comparison of two particular numbers might change between versions of the .NET Framework because the precision of the numbers' internal representation might change.</span></span>  
  
 <span data-ttu-id="86f72-373">如果兩個<xref:System.Double.NaN?displayProperty=nameWithType>藉由呼叫測試值是否相等<xref:System.Double.Equals%2A>方法，此方法會傳回`true`。</span><span class="sxs-lookup"><span data-stu-id="86f72-373">If two <xref:System.Double.NaN?displayProperty=nameWithType> values are tested for equality by calling the <xref:System.Double.Equals%2A> method, the method returns `true`.</span></span> <span data-ttu-id="86f72-374">不過，如果兩個<xref:System.Double.NaN>值會使用等號比較運算子來測試是否相等，則運算子會傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="86f72-374">However, if two <xref:System.Double.NaN> values are tested for equality by using the equality operator, the operator returns `false`.</span></span> <span data-ttu-id="86f72-375">當您想要判斷是否的值<xref:System.Double>不是數字 (NaN)，另一個方法是呼叫<xref:System.Double.IsNaN%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="86f72-375">When you want to determine whether the value of a <xref:System.Double> is not a number (NaN), an alternative is to call the <xref:System.Double.IsNaN%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <span data-ttu-id="86f72-376">
            <para>編譯器多載解析可能會說明行為中的兩個明顯的差別<see cref="M:System.Double.Equals(System.Object)" />方法多載。如果之間的隱含轉換<paramref name="obj" />引數和<see cref="T:System.Double" />定義和引數型別不是作為<see cref="T:System.Object" />，編譯器可能會執行隱含轉換和呼叫<see cref="M:System.Double.Equals(System.Double)" />方法。否則，呼叫<see cref="M:System.Double.Equals(System.Object)" />方法，它一定會傳回<see langword="false" />如果其<paramref name="obj" />引數不是<see cref="T:System.Double" />值。下列範例說明這兩個方法多載之間的行為差異。如果除外的所有基本數值型別<see cref="T:System.Decimal" />，並在 C# 中，傳回第一個比較<see langword="true" />因為編譯器會自動執行擴展轉換和呼叫<see cref="M:System.Double.Equals(System.Double)" />方法，而第二個比較會傳回<see langword="false" />因為編譯器會呼叫<see cref="M:System.Double.Equals(System.Object)" />方法。 [！ 的程式碼 csharp[System.Double.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.double.equals/cs/equalsoverl.cs#2)] [！ 的程式碼 vb[System.Double.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.double.equals/vb/equalsoverl.vb#2)]</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-376">
              <para>Compiler overload resolution may account for an apparent difference in the behavior of the two <see cref="M:System.Double.Equals(System.Object)" /> method overloads. If an implicit conversion between the <paramref name="obj" /> argument and a <see cref="T:System.Double" /> is defined and the argument is not typed as an <see cref="T:System.Object" />, compilers may perform an implicit conversion and call the <see cref="M:System.Double.Equals(System.Double)" /> method. Otherwise, they call the <see cref="M:System.Double.Equals(System.Object)" /> method, which always returns <see langword="false" /> if its <paramref name="obj" /> argument is not a <see cref="T:System.Double" /> value. The following example illustrates the difference in behavior between the two method overloads. In the case of all primitive numeric types except for <see cref="T:System.Decimal" /> and in C#, the first comparison returns <see langword="true" /> because the compiler automatically performs a widening conversion and calls the <see cref="M:System.Double.Equals(System.Double)" /> method, whereas the second comparison returns <see langword="false" /> because the compiler calls the <see cref="M:System.Double.Equals(System.Object)" /> method.  [!code-csharp[System.Double.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.double.equals/cs/equalsoverl.cs#2)] [!code-vb[System.Double.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.double.equals/vb/equalsoverl.vb#2)]</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Double.Equals(System.Object)" />
        <altmember cref="Overload:System.Double.CompareTo" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="double.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="86f72-377">與這個執行個體相互比較的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-377">An object to compare with this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86f72-378">傳回值，指出這個執行個體 (Instance) 是否和指定的物件相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-378">Returns a value indicating whether this instance is equal to a specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86f72-379">如果 <see langword="true" /> 是 <paramref name="obj" /> 的執行個體，並且等於這個執行個體的值，則為 <see cref="T:System.Double" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-379">
              <see langword="true" /> if <paramref name="obj" /> is an instance of <see cref="T:System.Double" /> and equals the value of this instance; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86f72-380"><xref:System.Double.Equals%2A>方法應該小心使用，因為兩個明顯的對等的值可能會因為不同的有效位數的兩個值不相等。</span><span class="sxs-lookup"><span data-stu-id="86f72-380">The <xref:System.Double.Equals%2A> method should be used with caution, because two apparently equivalent values can be unequal due to the differing precision of the two values.</span></span> <span data-ttu-id="86f72-381">下列範例會回報<xref:System.Double>值.3333 和<xref:System.Double>傳回除以 1 3 不相等。</span><span class="sxs-lookup"><span data-stu-id="86f72-381">The following example reports that the <xref:System.Double> value .3333 and the <xref:System.Double> returned by dividing 1 by 3 are unequal.</span></span>  
  
 [!code-csharp[System.Double.Epsilon#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double.Epsilon/cs/Equals_25051.cs#3)]
 [!code-vb[System.Double.Epsilon#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double.Epsilon/vb/Equals_25051.vb#3)]  
  
 <span data-ttu-id="86f72-382">呼叫的替代方案<xref:System.Double.Equals%2A>方法，請參閱文件<xref:System.Double.Equals%28System.Double%29>多載。</span><span class="sxs-lookup"><span data-stu-id="86f72-382">For alternatives to calling the <xref:System.Double.Equals%2A> method, see the documentation for the <xref:System.Double.Equals%28System.Double%29> overload.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="86f72-383">因為<xref:System.Double.Epsilon>會定義最小值運算式的正數值，其範圍是幾乎為零，兩個類似值之間差異的邊界必須大於<xref:System.Double.Epsilon>。</span><span class="sxs-lookup"><span data-stu-id="86f72-383">Because <xref:System.Double.Epsilon> defines the minimum expression of a positive value whose range is near zero, the margin of difference between two similar values must be greater than <xref:System.Double.Epsilon>.</span></span> <span data-ttu-id="86f72-384">一般來說，這是許多倍<xref:System.Double.Epsilon>。</span><span class="sxs-lookup"><span data-stu-id="86f72-384">Typically, it is many times greater than <xref:System.Double.Epsilon>.</span></span>  
  
 <span data-ttu-id="86f72-385">超過記載的精確度的浮點數的有效位數是特定實作] 和 [.NET Framework 版本。</span><span class="sxs-lookup"><span data-stu-id="86f72-385">The precision of floating-point numbers beyond the documented precision is specific to the implementation and version of the .NET Framework.</span></span> <span data-ttu-id="86f72-386">因此，比較兩個特定的數字可能會變更.NET Framework 版本之間的有效位數的數字的內部表示法可能會變更。</span><span class="sxs-lookup"><span data-stu-id="86f72-386">Consequently, a comparison of two particular numbers might change between versions of the .NET Framework because the precision of the numbers' internal representation might change.</span></span>  
  
 <span data-ttu-id="86f72-387">如果兩個<xref:System.Double.NaN?displayProperty=nameWithType>藉由呼叫測試值是否相等<xref:System.Double.Equals%2A>方法，此方法會傳回`true`。</span><span class="sxs-lookup"><span data-stu-id="86f72-387">If two <xref:System.Double.NaN?displayProperty=nameWithType> values are tested for equality by calling the <xref:System.Double.Equals%2A> method, the method returns `true`.</span></span> <span data-ttu-id="86f72-388">不過，如果兩個<xref:System.Double.NaN>值會使用等號比較運算子來測試是否相等，則運算子會傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="86f72-388">However, if two <xref:System.Double.NaN> values are tested for equality by using the equality operator, the operator returns `false`.</span></span> <span data-ttu-id="86f72-389">當您想要判斷是否的值<xref:System.Double>不是數字 (NaN)，另一個方法是呼叫<xref:System.Double.IsNaN%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="86f72-389">When you want to determine whether the value of a <xref:System.Double> is not a number (NaN), an alternative is to call the <xref:System.Double.IsNaN%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <span data-ttu-id="86f72-390">
            <para>編譯器多載解析可能會說明行為中的兩個明顯的差別<see cref="M:System.Double.Equals(System.Object)" />方法多載。如果之間的隱含轉換<paramref name="obj" />引數和<see cref="T:System.Double" />定義和引數型別不是作為<see cref="T:System.Object" />，編譯器可能會執行隱含轉換和呼叫<see cref="M:System.Double.Equals(System.Double)" />方法。否則，呼叫<see cref="M:System.Double.Equals(System.Object)" />方法，它一定會傳回<see langword="false" />如果其<paramref name="obj" />引數不是<see cref="T:System.Double" />值。下列範例說明這兩個方法多載之間的行為差異。如果除外的所有基本數值型別<see cref="T:System.Decimal" />，並在 C# 中，傳回第一個比較<see langword="true" />因為編譯器會自動執行擴展轉換和呼叫<see cref="M:System.Double.Equals(System.Double)" />方法，而第二個比較會傳回<see langword="false" />因為編譯器會呼叫<see cref="M:System.Double.Equals(System.Object)" />方法。 [！ 的程式碼 csharp[System.Double.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.double.equals/cs/equalsoverl.cs#2)] [！ 的程式碼 vb[System.Double.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.double.equals/vb/equalsoverl.vb#2)]</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-390">
              <para>Compiler overload resolution may account for an apparent difference in the behavior of the two <see cref="M:System.Double.Equals(System.Object)" /> method overloads. If an implicit conversion between the <paramref name="obj" /> argument and a <see cref="T:System.Double" /> is defined and the argument is not typed as an <see cref="T:System.Object" />, compilers may perform an implicit conversion and call the <see cref="M:System.Double.Equals(System.Double)" /> method. Otherwise, they call the <see cref="M:System.Double.Equals(System.Object)" /> method, which always returns <see langword="false" /> if its <paramref name="obj" /> argument is not a <see cref="T:System.Double" /> value. The following example illustrates the difference in behavior between the two method overloads. In the case of all primitive numeric types except for <see cref="T:System.Decimal" /> and in C#, the first comparison returns <see langword="true" /> because the compiler automatically performs a widening conversion and calls the <see cref="M:System.Double.Equals(System.Double)" /> method, whereas the second comparison returns <see langword="false" /> because the compiler calls the <see cref="M:System.Double.Equals(System.Object)" /> method.  [!code-csharp[System.Double.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.double.equals/cs/equalsoverl.cs#2)] [!code-vb[System.Double.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.double.equals/vb/equalsoverl.vb#2)]</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Double.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="double.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="86f72-391">傳回這個執行個體的雜湊碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-391">Returns the hash code for this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86f72-392">32 位元帶正負號的整數雜湊碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-392">A 32-bit signed integer hash code.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeCode">
      <MemberSignature Language="C#" Value="public TypeCode GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TypeCode GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeCode () As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TypeCode GetTypeCode();" />
      <MemberSignature Language="F#" Value="abstract member GetTypeCode : unit -&gt; TypeCode&#xA;override this.GetTypeCode : unit -&gt; TypeCode" Usage="double.GetTypeCode " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="86f72-393">傳回實值類型 <see cref="T:System.TypeCode" /> 的 <see cref="T:System.Double" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-393">Returns the <see cref="T:System.TypeCode" /> for value type <see cref="T:System.Double" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86f72-394">列舉常數 <see cref="F:System.TypeCode.Double" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-394">The enumerated constant, <see cref="F:System.TypeCode.Double" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.TypeCode" />
      </Docs>
    </Member>
    <Member MemberName="IsFinite">
      <MemberSignature Language="C#" Value="public static bool IsFinite (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsFinite(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.IsFinite(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsFinite (d As Double) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsFinite(double d);" />
      <MemberSignature Language="F#" Value="static member IsFinite : double -&gt; bool" Usage="System.double.IsFinite d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInfinity">
      <MemberSignature Language="C#" Value="public static bool IsInfinity (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsInfinity(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.IsInfinity(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsInfinity (d As Double) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsInfinity(double d);" />
      <MemberSignature Language="F#" Value="static member IsInfinity : double -&gt; bool" Usage="System.double.IsInfinity d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="86f72-395">雙精確度浮點數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-395">A double-precision floating-point number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86f72-396">傳回值，指出指定的數字是否計算結果為負或正的無限大。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-396">Returns a value indicating whether the specified number evaluates to negative or positive infinity</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86f72-397">如果 <paramref name="d" /> 計算結果為 <see cref="F:System.Double.PositiveInfinity" /> 或 <see cref="F:System.Double.NegativeInfinity" />，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-397">
              <see langword="true" /> if <paramref name="d" /> evaluates to <see cref="F:System.Double.PositiveInfinity" /> or <see cref="F:System.Double.NegativeInfinity" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86f72-398">浮點數的作業會傳回<xref:System.Double.PositiveInfinity>或<xref:System.Double.NegativeInfinity>發出信號的溢位狀況。</span><span class="sxs-lookup"><span data-stu-id="86f72-398">Floating-point operations return <xref:System.Double.PositiveInfinity> or <xref:System.Double.NegativeInfinity> to signal an overflow condition.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86f72-399">下列程式碼範例示範如何將<xref:System.Double.IsInfinity%2A>:</span><span class="sxs-lookup"><span data-stu-id="86f72-399">The following code example illustrates the use of <xref:System.Double.IsInfinity%2A>:</span></span>  
  
 [!code-cpp[System.Double#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Double/CPP/doublesample.cpp#11)]
 [!code-csharp[System.Double#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double/CS/doublesample.cs#11)]
 [!code-vb[System.Double#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double/VB/doublesample.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Double.IsPositiveInfinity(System.Double)" />
        <altmember cref="M:System.Double.IsNegativeInfinity(System.Double)" />
        <altmember cref="F:System.Double.PositiveInfinity" />
        <altmember cref="F:System.Double.NegativeInfinity" />
      </Docs>
    </Member>
    <Member MemberName="IsNaN">
      <MemberSignature Language="C#" Value="public static bool IsNaN (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsNaN(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.IsNaN(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsNaN (d As Double) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsNaN(double d);" />
      <MemberSignature Language="F#" Value="static member IsNaN : double -&gt; bool" Usage="System.double.IsNaN d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="86f72-400">雙精確度浮點數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-400">A double-precision floating-point number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86f72-401">傳回值，這個值表示指定的值是否不是數字 (<see cref="F:System.Double.NaN" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-401">Returns a value that indicates whether the specified value is not a number (<see cref="F:System.Double.NaN" />).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86f72-402">如果 <paramref name="d" /> 計算結果為 <see cref="F:System.Double.NaN" />，則為 <see langword="true" />；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-402">
              <see langword="true" /> if <paramref name="d" /> evaluates to <see cref="F:System.Double.NaN" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86f72-403">浮點運算傳回<xref:System.Double.NaN>來表示該作業的結果是未定義。</span><span class="sxs-lookup"><span data-stu-id="86f72-403">Floating-point operations return <xref:System.Double.NaN> to signal that that result of the operation is undefined.</span></span> <span data-ttu-id="86f72-404">例如，除以 0.0 的 0.0 會導致<xref:System.Double.NaN>。</span><span class="sxs-lookup"><span data-stu-id="86f72-404">For example, dividing 0.0 by 0.0 results in <xref:System.Double.NaN>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="86f72-405"><xref:System.Double.IsNaN%2A> 會傳回`false`如果<xref:System.Double>值為<xref:System.Double.PositiveInfinity>或<xref:System.Double.NegativeInfinity>。</span><span class="sxs-lookup"><span data-stu-id="86f72-405"><xref:System.Double.IsNaN%2A> returns `false` if a <xref:System.Double> value is either <xref:System.Double.PositiveInfinity> or <xref:System.Double.NegativeInfinity>.</span></span> <span data-ttu-id="86f72-406">若要測試這些值，請使用<xref:System.Double.IsInfinity%2A>， <xref:System.Double.IsPositiveInfinity%2A>，和<xref:System.Double.IsNegativeInfinity%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="86f72-406">To test for these values, use the <xref:System.Double.IsInfinity%2A>, <xref:System.Double.IsPositiveInfinity%2A>, and <xref:System.Double.IsNegativeInfinity%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86f72-407">下列程式碼範例示範如何將<xref:System.Double.IsNaN%2A>:</span><span class="sxs-lookup"><span data-stu-id="86f72-407">The following code example illustrates the use of <xref:System.Double.IsNaN%2A>:</span></span>  
  
 [!code-cpp[System.Double#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Double/CPP/doublesample.cpp#8)]
 [!code-csharp[System.Double#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double/CS/doublesample.cs#8)]
 [!code-vb[System.Double#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double/VB/doublesample.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Double.NaN" />
      </Docs>
    </Member>
    <Member MemberName="IsNegative">
      <MemberSignature Language="C#" Value="public static bool IsNegative (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsNegative(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.IsNegative(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsNegative (d As Double) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsNegative(double d);" />
      <MemberSignature Language="F#" Value="static member IsNegative : double -&gt; bool" Usage="System.double.IsNegative d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNegativeInfinity">
      <MemberSignature Language="C#" Value="public static bool IsNegativeInfinity (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsNegativeInfinity(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.IsNegativeInfinity(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsNegativeInfinity (d As Double) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsNegativeInfinity(double d);" />
      <MemberSignature Language="F#" Value="static member IsNegativeInfinity : double -&gt; bool" Usage="System.double.IsNegativeInfinity d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="86f72-408">雙精確度浮點數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-408">A double-precision floating-point number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86f72-409">傳回值，指出指定的數字是否計算結果為負的無限大。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-409">Returns a value indicating whether the specified number evaluates to negative infinity.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86f72-410">如果 <paramref name="d" /> 計算結果為 <see cref="F:System.Double.NegativeInfinity" />，則為 <see langword="true" />；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-410">
              <see langword="true" /> if <paramref name="d" /> evaluates to <see cref="F:System.Double.NegativeInfinity" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86f72-411">浮點運算傳回<xref:System.Double.NegativeInfinity>發出信號的溢位狀況。</span><span class="sxs-lookup"><span data-stu-id="86f72-411">Floating-point operations return <xref:System.Double.NegativeInfinity> to signal an overflow condition.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86f72-412">下列程式碼範例示範如何將<xref:System.Double.IsNegativeInfinity%2A>:</span><span class="sxs-lookup"><span data-stu-id="86f72-412">The following code example illustrates the use of <xref:System.Double.IsNegativeInfinity%2A>:</span></span>  
  
 [!code-cpp[System.Double#13](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Double/CPP/doublesample.cpp#13)]
 [!code-csharp[System.Double#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double/CS/doublesample.cs#13)]
 [!code-vb[System.Double#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double/VB/doublesample.vb#13)]  
[!code-cpp[System.Double#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Double/CPP/doublesample.cpp#4)]
[!code-csharp[System.Double#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double/CS/doublesample.cs#4)]
[!code-vb[System.Double#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double/VB/doublesample.vb#4)]  
[!code-cpp[System.Double#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Double/CPP/doublesample.cpp#9)]
[!code-csharp[System.Double#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double/CS/doublesample.cs#9)]
[!code-vb[System.Double#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double/VB/doublesample.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Double.IsInfinity(System.Double)" />
        <altmember cref="M:System.Double.IsPositiveInfinity(System.Double)" />
        <altmember cref="F:System.Double.PositiveInfinity" />
        <altmember cref="F:System.Double.NegativeInfinity" />
      </Docs>
    </Member>
    <Member MemberName="IsNormal">
      <MemberSignature Language="C#" Value="public static bool IsNormal (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsNormal(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.IsNormal(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsNormal (d As Double) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsNormal(double d);" />
      <MemberSignature Language="F#" Value="static member IsNormal : double -&gt; bool" Usage="System.double.IsNormal d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPositiveInfinity">
      <MemberSignature Language="C#" Value="public static bool IsPositiveInfinity (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPositiveInfinity(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.IsPositiveInfinity(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsPositiveInfinity (d As Double) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsPositiveInfinity(double d);" />
      <MemberSignature Language="F#" Value="static member IsPositiveInfinity : double -&gt; bool" Usage="System.double.IsPositiveInfinity d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="86f72-413">雙精確度浮點數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-413">A double-precision floating-point number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86f72-414">傳回值，指出指定數字是否計算結果為正的無限大。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-414">Returns a value indicating whether the specified number evaluates to positive infinity.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86f72-415">如果 <paramref name="d" /> 計算結果為 <see cref="F:System.Double.PositiveInfinity" />，則為 <see langword="true" />；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-415">
              <see langword="true" /> if <paramref name="d" /> evaluates to <see cref="F:System.Double.PositiveInfinity" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86f72-416">浮點運算傳回<xref:System.Double.PositiveInfinity>發出信號的溢位狀況。</span><span class="sxs-lookup"><span data-stu-id="86f72-416">Floating-point operations return <xref:System.Double.PositiveInfinity> to signal an overflow condition.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86f72-417">下列程式碼範例示範如何將<xref:System.Double.IsPositiveInfinity%2A>:</span><span class="sxs-lookup"><span data-stu-id="86f72-417">The following code example illustrates the use of <xref:System.Double.IsPositiveInfinity%2A>:</span></span>  
  
 [!code-cpp[System.Double#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Double/CPP/doublesample.cpp#12)]
 [!code-csharp[System.Double#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double/CS/doublesample.cs#12)]
 [!code-vb[System.Double#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double/VB/doublesample.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Double.IsInfinity(System.Double)" />
        <altmember cref="M:System.Double.IsNegativeInfinity(System.Double)" />
        <altmember cref="F:System.Double.PositiveInfinity" />
        <altmember cref="F:System.Double.NegativeInfinity" />
      </Docs>
    </Member>
    <Member MemberName="IsSubnormal">
      <MemberSignature Language="C#" Value="public static bool IsSubnormal (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSubnormal(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.IsSubnormal(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSubnormal (d As Double) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSubnormal(double d);" />
      <MemberSignature Language="F#" Value="static member IsSubnormal : double -&gt; bool" Usage="System.double.IsSubnormal d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxValue">
      <MemberSignature Language="C#" Value="public const double MaxValue = 1.79769313486232E+308;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float64 MaxValue = float64(1.79769313486232E+308)" />
      <MemberSignature Language="DocId" Value="F:System.Double.MaxValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MaxValue As Double  = 1.79769313486232E+308" />
      <MemberSignature Language="C++ CLI" Value="public: double MaxValue = 1.79769313486232E+308;" />
      <MemberSignature Language="F#" Value="val mutable MaxValue : double" Usage="System.double.MaxValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <MemberValue>1.79769313486232E+308</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="86f72-418">表示 <see cref="T:System.Double" /> 最大的可能值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-418">Represents the largest possible value of a <see cref="T:System.Double" />.</span>
          </span>
          <span data-ttu-id="86f72-419">這個欄位是常數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-419">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86f72-420">這個常數的值是正數 1.7976931348623157 e + 308。</span><span class="sxs-lookup"><span data-stu-id="86f72-420">The value of this constant is positive 1.7976931348623157E+308.</span></span>  
  
 <span data-ttu-id="86f72-421">超過作業的結果<xref:System.Double.MaxValue?displayProperty=nameWithType>是<xref:System.Double.PositiveInfinity?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="86f72-421">The result of an operation that exceeds <xref:System.Double.MaxValue?displayProperty=nameWithType> is <xref:System.Double.PositiveInfinity?displayProperty=nameWithType>.</span></span> <span data-ttu-id="86f72-422">在下列範例中，<xref:System.Double.PositiveInfinity?displayProperty=nameWithType>時結果超出加法、 乘法和乘冪運算的結果<xref:System.Double.MaxValue?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="86f72-422">In the following example, <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> results from addition, multiplication, and exponentiation operations when the result exceeds <xref:System.Double.MaxValue?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Double.MaxValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.double.maxvalue/cs/maxvalueex.cs#1)]
 [!code-vb[System.Double.MaxValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.double.maxvalue/vb/maxvalueex.vb#1)]  
  
   
  
## Examples  
 <span data-ttu-id="86f72-423">下列程式碼範例示範如何將<xref:System.Double.MaxValue>:</span><span class="sxs-lookup"><span data-stu-id="86f72-423">The following code example illustrates the use of <xref:System.Double.MaxValue>:</span></span>  
  
 [!code-cpp[Double Example#2](~/samples/snippets/cpp/VS_Snippets_CLR/Double Example/CPP/source.cpp#2)]
 [!code-csharp[Double Example#2](~/samples/snippets/csharp/VS_Snippets_CLR/Double Example/CS/source.cs#2)]
 [!code-vb[Double Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Double Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinValue">
      <MemberSignature Language="C#" Value="public const double MinValue = -1.79769313486232E+308;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float64 MinValue = float64(-1.79769313486232E+308)" />
      <MemberSignature Language="DocId" Value="F:System.Double.MinValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MinValue As Double  = -1.79769313486232E+308" />
      <MemberSignature Language="C++ CLI" Value="public: double MinValue = -1.79769313486232E+308;" />
      <MemberSignature Language="F#" Value="val mutable MinValue : double" Usage="System.double.MinValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <MemberValue>-1.79769313486232E+308</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="86f72-424">表示 <see cref="T:System.Double" /> 最小的可能值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-424">Represents the smallest possible value of a <see cref="T:System.Double" />.</span>
          </span>
          <span data-ttu-id="86f72-425">這個欄位是常數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-425">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86f72-426">這個常數的值是負的 1.7976931348623157 e + 308。</span><span class="sxs-lookup"><span data-stu-id="86f72-426">The value of this constant is negative 1.7976931348623157E+308.</span></span>  
  
 <span data-ttu-id="86f72-427">是作業的結果小於<xref:System.Double.MinValue?displayProperty=nameWithType>是<xref:System.Double.NegativeInfinity?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="86f72-427">The result of an operation that is less than <xref:System.Double.MinValue?displayProperty=nameWithType> is <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>.</span></span> <span data-ttu-id="86f72-428">在下列範例中，<xref:System.Double.NegativeInfinity?displayProperty=nameWithType>時的結果是減法以及乘法運算的結果小於<xref:System.Double.MinValue?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="86f72-428">In the following example, <xref:System.Double.NegativeInfinity?displayProperty=nameWithType> results from subtraction and multiplication operations when the result is less than <xref:System.Double.MinValue?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Double.MinValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.double.minvalue/cs/minvalueex.cs#1)]
 [!code-vb[System.Double.MinValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.double.minvalue/vb/minvalueex.vb#1)]  
  
   
  
## Examples  
 <span data-ttu-id="86f72-429">下列程式碼範例示範如何將<xref:System.Double.MinValue>:</span><span class="sxs-lookup"><span data-stu-id="86f72-429">The following code example illustrates the use of <xref:System.Double.MinValue>:</span></span>  
  
 [!code-cpp[Double Example#2](~/samples/snippets/cpp/VS_Snippets_CLR/Double Example/CPP/source.cpp#2)]
 [!code-csharp[Double Example#2](~/samples/snippets/csharp/VS_Snippets_CLR/Double Example/CS/source.cs#2)]
 [!code-vb[Double Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Double Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NaN">
      <MemberSignature Language="C#" Value="public const double NaN = NaN;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float64 NaN = float64(NaN)" />
      <MemberSignature Language="DocId" Value="F:System.Double.NaN" />
      <MemberSignature Language="VB.NET" Value="Public Const NaN As Double  = NaN" />
      <MemberSignature Language="C++ CLI" Value="public: double NaN = NaN;" />
      <MemberSignature Language="F#" Value="val mutable NaN : double" Usage="System.double.NaN" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <MemberValue>NaN</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="86f72-430">代表不是數字 (<see langword="NaN" />) 的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-430">Represents a value that is not a number (<see langword="NaN" />).</span>
          </span>
          <span data-ttu-id="86f72-431">這個欄位是常數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-431">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86f72-432">方法或運算子傳回<xref:System.Double.NaN>時未定義作業的結果。</span><span class="sxs-lookup"><span data-stu-id="86f72-432">A method or operator returns <xref:System.Double.NaN> when the result of an operation is undefined.</span></span> <span data-ttu-id="86f72-433">比方說，零除以零的結果是<xref:System.Double.NaN>，如下列範例所示。</span><span class="sxs-lookup"><span data-stu-id="86f72-433">For example, the result of dividing zero by zero is <xref:System.Double.NaN>, as the following example shows.</span></span> <span data-ttu-id="86f72-434">(但請注意，除以零的非零的數字傳回其中一個<xref:System.Double.PositiveInfinity>或<xref:System.Double.NegativeInfinity>，取決於除數的正負號。)</span><span class="sxs-lookup"><span data-stu-id="86f72-434">(But note that dividing a non-zero number by zero returns either <xref:System.Double.PositiveInfinity> or <xref:System.Double.NegativeInfinity>, depending on the sign of the divisor.)</span></span>  
  
 [!code-csharp[System.Double.NaN#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.double.nan/cs/nan1.cs#1)]
 [!code-vb[System.Double.NaN#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.double.nan/vb/nan1.vb#1)]  
  
 <span data-ttu-id="86f72-435">此外，方法呼叫，其<xref:System.Double.NaN>值或上的作業<xref:System.Double.NaN>值傳回<xref:System.Double.NaN>，如下列範例所示。</span><span class="sxs-lookup"><span data-stu-id="86f72-435">In addition, a method call with a <xref:System.Double.NaN> value or an operation on a <xref:System.Double.NaN> value returns <xref:System.Double.NaN>, as the following example shows.</span></span>  
  
 [!code-csharp[System.Double.NaN#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.double.nan/cs/nan1.cs#2)]
 [!code-vb[System.Double.NaN#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.double.nan/vb/nan1.vb#2)]  
  
 <span data-ttu-id="86f72-436">使用<xref:System.Double.IsNaN%2A>方法，以判斷值是否不是數字。</span><span class="sxs-lookup"><span data-stu-id="86f72-436">Use the <xref:System.Double.IsNaN%2A> method to determine whether a value is not a number.</span></span> <span data-ttu-id="86f72-437"><xref:System.Double.op_Equality%2A>運算子會將視為兩個<xref:System.Double.NaN>值必須是另一個不相等。</span><span class="sxs-lookup"><span data-stu-id="86f72-437">The <xref:System.Double.op_Equality%2A> operator considers two <xref:System.Double.NaN> values to be unequal to one another.</span></span> <span data-ttu-id="86f72-438">一般情況下，<xref:System.Double>運算子不能用來比較<xref:System.Double.NaN?displayProperty=nameWithType>與其他<xref:System.Double>值，雖然比較方法 (例如<xref:System.Double.Equals%2A>和<xref:System.Double.CompareTo%2A>) 可以。</span><span class="sxs-lookup"><span data-stu-id="86f72-438">In general, <xref:System.Double> operators cannot be used to compare <xref:System.Double.NaN?displayProperty=nameWithType> with other <xref:System.Double> values, although comparison methods (such as <xref:System.Double.Equals%2A> and <xref:System.Double.CompareTo%2A>) can.</span></span> <span data-ttu-id="86f72-439">下列範例說明行為之間的差異<xref:System.Double>比較運算子和方法。</span><span class="sxs-lookup"><span data-stu-id="86f72-439">The following example illustrates the difference in behavior between <xref:System.Double> comparison operators and methods.</span></span>  
  
 [!code-csharp[System.Double.NaN#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.double.nan/cs/double.nan4.cs#4)]
 [!code-vb[System.Double.NaN#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.double.nan/vb/double.nan4.vb#4)]  
  
   
  
## Examples  
 <span data-ttu-id="86f72-440">下列範例示範如何使用 <xref:System.Double.NaN>：</span><span class="sxs-lookup"><span data-stu-id="86f72-440">The following example illustrates the use of <xref:System.Double.NaN>:</span></span>  
  
 [!code-cpp[System.Double#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Double/CPP/doublesample.cpp#7)]
 [!code-csharp[System.Double#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double/CS/doublesample.cs#7)]
 [!code-vb[System.Double#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double/VB/doublesample.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Double.IsNaN(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="NegativeInfinity">
      <MemberSignature Language="C#" Value="public const double NegativeInfinity = -Infinity;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float64 NegativeInfinity = float64(-Infinity)" />
      <MemberSignature Language="DocId" Value="F:System.Double.NegativeInfinity" />
      <MemberSignature Language="VB.NET" Value="Public Const NegativeInfinity As Double  = -Infinity" />
      <MemberSignature Language="C++ CLI" Value="public: double NegativeInfinity = -Infinity;" />
      <MemberSignature Language="F#" Value="val mutable NegativeInfinity : double" Usage="System.double.NegativeInfinity" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <MemberValue>-Infinity</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="86f72-441">表示負無限大。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-441">Represents negative infinity.</span>
          </span>
          <span data-ttu-id="86f72-442">這個欄位是常數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-442">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86f72-443">這個常數的值是負數除以零的結果。</span><span class="sxs-lookup"><span data-stu-id="86f72-443">The value of this constant is the result of dividing a negative number by zero.</span></span>  
  
 <span data-ttu-id="86f72-444">作業的結果時，這個常數會傳回小於<xref:System.Double.MinValue>。</span><span class="sxs-lookup"><span data-stu-id="86f72-444">This constant is returned when the result of an operation is less than <xref:System.Double.MinValue>.</span></span>  
  
 <span data-ttu-id="86f72-445">使用<xref:System.Double.IsNegativeInfinity%2A>來判斷值是否計算結果為負無限大方向。</span><span class="sxs-lookup"><span data-stu-id="86f72-445">Use <xref:System.Double.IsNegativeInfinity%2A> to determine whether a value evaluates to negative infinity.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86f72-446">下列程式碼範例示範如何將<xref:System.Double.NegativeInfinity>:</span><span class="sxs-lookup"><span data-stu-id="86f72-446">The following code example illustrates the use of <xref:System.Double.NegativeInfinity>:</span></span>  
  
 [!code-cpp[System.Double#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Double/CPP/doublesample.cpp#9)]
 [!code-csharp[System.Double#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double/CS/doublesample.cs#9)]
 [!code-vb[System.Double#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double/VB/doublesample.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Double.IsNegativeInfinity(System.Double)" />
        <altmember cref="M:System.Double.IsInfinity(System.Double)" />
        <altmember cref="F:System.Double.PositiveInfinity" />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (double left, double right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(float64 left, float64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.op_Equality(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As Double, right As Double) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(double left, double right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : double * double -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Double" />
        <Parameter Name="right" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="86f72-447">要比較的第一個值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-447">The first value to compare.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="86f72-448">要比較的第二個值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-448">The second value to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86f72-449">傳回值，這個值表示兩個指定的 <see cref="T:System.Double" /> 值是否相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-449">Returns a value that indicates whether two specified <see cref="T:System.Double" /> values are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86f72-450">如果 <paramref name="left" /> 和 <paramref name="right" /> 相等，則為 <see langword="true" />；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-450">
              <see langword="true" /> if <paramref name="left" /> and <paramref name="right" /> are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86f72-451"><xref:System.Double.op_Equality%2A>方法來定義等號比較運算子<xref:System.Double>值。</span><span class="sxs-lookup"><span data-stu-id="86f72-451">The <xref:System.Double.op_Equality%2A> method defines the equality operator for <xref:System.Double> values.</span></span>  
  
 <span data-ttu-id="86f72-452">如果兩個<xref:System.Double.NaN?displayProperty=nameWithType>值會使用等號比較運算子來測試是否相等，則結果為`false`; 兩個<xref:System.Double.NaN?displayProperty=nameWithType>值不會被視為相等。</span><span class="sxs-lookup"><span data-stu-id="86f72-452">If two <xref:System.Double.NaN?displayProperty=nameWithType> values are tested for equality by using the equality operator, the result is `false`; two <xref:System.Double.NaN?displayProperty=nameWithType> values are not considered equal.</span></span> <span data-ttu-id="86f72-453">如果它們藉由呼叫進行測試是否相等<xref:System.Double.Equals%2A>方法，結果是`true`。</span><span class="sxs-lookup"><span data-stu-id="86f72-453">If they are tested for equality by calling the <xref:System.Double.Equals%2A> method, the result is `true`.</span></span>  <span data-ttu-id="86f72-454">當您想要判斷是否的值<xref:System.Double>不是數字 (NaN)，另一個方法是呼叫<xref:System.Double.IsNaN%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="86f72-454">When you want to determine whether the value of a <xref:System.Double> is not a number (NaN), an alternative is to call the <xref:System.Double.IsNaN%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (double left, double right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(float64 left, float64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.op_GreaterThan(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (left As Double, right As Double) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(double left, double right);" />
      <MemberSignature Language="F#" Value="static member ( &gt; ) : double * double -&gt; bool" Usage="left &gt; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Double" />
        <Parameter Name="right" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="86f72-455">要比較的第一個值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-455">The first value to compare.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="86f72-456">要比較的第二個值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-456">The second value to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86f72-457">傳回值，這個值表示指定的 <see cref="T:System.Double" /> 值是否大於另一個指定的 <see cref="T:System.Double" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-457">Returns a value that indicates whether a specified <see cref="T:System.Double" /> value is greater than another specified <see cref="T:System.Double" /> value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86f72-458">如果 <see langword="true" /> 大於 <paramref name="left" /> 則為 <paramref name="right" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-458">
              <see langword="true" /> if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86f72-459"><xref:System.Double.op_GreaterThan%2A>方法定義作業的較大者為比運算子<xref:System.Double>值。</span><span class="sxs-lookup"><span data-stu-id="86f72-459">The <xref:System.Double.op_GreaterThan%2A> method defines the operation of the greater-than operator for <xref:System.Double> values.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (double left, double right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(float64 left, float64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.op_GreaterThanOrEqual(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (left As Double, right As Double) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(double left, double right);" />
      <MemberSignature Language="F#" Value="static member ( &gt;= ) : double * double -&gt; bool" Usage="left &gt;= right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Double" />
        <Parameter Name="right" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="86f72-460">要比較的第一個值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-460">The first value to compare.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="86f72-461">要比較的第二個值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-461">The second value to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86f72-462">傳回值，這個值表示指定的 <see cref="T:System.Double" /> 值是否大於或等於另一個指定的 <see cref="T:System.Double" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-462">Returns a value that indicates whether a specified <see cref="T:System.Double" /> value is greater than or equal to another specified <see cref="T:System.Double" /> value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86f72-463">如果 <paramref name="left" /> 大於或等於 <paramref name="right" />，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-463">
              <see langword="true" /> if <paramref name="left" /> is greater than or equal to <paramref name="right" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86f72-464"><xref:System.Double.op_GreaterThanOrEqual%2A>方法來定義 「 大於或等於運算子的作業<xref:System.Double>值。</span><span class="sxs-lookup"><span data-stu-id="86f72-464">The <xref:System.Double.op_GreaterThanOrEqual%2A> method defines the operation of the greater-than-or-equal operator for <xref:System.Double> values.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (double left, double right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(float64 left, float64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.op_Inequality(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As Double, right As Double) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(double left, double right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : double * double -&gt; bool" Usage="System.double.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Double" />
        <Parameter Name="right" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="86f72-465">要比較的第一個值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-465">The first value to compare.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="86f72-466">要比較的第二個值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-466">The second value to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86f72-467">傳回值，這個值表示兩個指定的 <see cref="T:System.Double" /> 值是否不相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-467">Returns a value that indicates whether two specified <see cref="T:System.Double" /> values are not equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86f72-468">如果 <paramref name="left" /> 和 <paramref name="right" /> 不相等，則為 <see langword="true" />；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-468">
              <see langword="true" /> if <paramref name="left" /> and <paramref name="right" /> are not equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86f72-469"><xref:System.Double.op_Inequality%2A>方法定義的不等比較運算子<xref:System.Double>值。</span><span class="sxs-lookup"><span data-stu-id="86f72-469">The <xref:System.Double.op_Inequality%2A> method defines the inequality operator for <xref:System.Double> values.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (double left, double right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(float64 left, float64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.op_LessThan(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (left As Double, right As Double) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(double left, double right);" />
      <MemberSignature Language="F#" Value="static member ( &lt; ) : double * double -&gt; bool" Usage="left &lt; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Double" />
        <Parameter Name="right" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="86f72-470">要比較的第一個值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-470">The first value to compare.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="86f72-471">要比較的第二個值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-471">The second value to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86f72-472">傳回值，這個值表示指定的 <see cref="T:System.Double" /> 值是否小於另一個指定的 <see cref="T:System.Double" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-472">Returns a value that indicates whether a specified <see cref="T:System.Double" /> value is less than another specified <see cref="T:System.Double" /> value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86f72-473">如果 <paramref name="left" /> 小於 <paramref name="right" />，則為 <see langword="true" />；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-473">
              <see langword="true" /> if <paramref name="left" /> is less than <paramref name="right" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86f72-474"><xref:System.Double.op_LessThan%2A>方法定義的無作業-運算子的<xref:System.Double>值。</span><span class="sxs-lookup"><span data-stu-id="86f72-474">The <xref:System.Double.op_LessThan%2A> method defines the operation of the less-than operator for <xref:System.Double> values.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (double left, double right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(float64 left, float64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.op_LessThanOrEqual(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (left As Double, right As Double) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(double left, double right);" />
      <MemberSignature Language="F#" Value="static member ( &lt;= ) : double * double -&gt; bool" Usage="left &lt;= right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Double" />
        <Parameter Name="right" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="86f72-475">要比較的第一個值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-475">The first value to compare.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="86f72-476">要比較的第二個值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-476">The second value to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86f72-477">傳回值，這個值表示指定的 <see cref="T:System.Double" /> 值是否小於或等於另一個指定的 <see cref="T:System.Double" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-477">Returns a value that indicates whether a specified <see cref="T:System.Double" /> value is less than or equal to another specified <see cref="T:System.Double" /> value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86f72-478">如果 <paramref name="left" /> 小於或等於 <paramref name="right" />，則為 <see langword="true" />；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-478">
              <see langword="true" /> if <paramref name="left" /> is less than or equal to <paramref name="right" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86f72-479"><xref:System.Double.op_LessThanOrEqual%2A>方法定義之小於-或-等於運算子的作業<xref:System.Double>值。</span><span class="sxs-lookup"><span data-stu-id="86f72-479">The <xref:System.Double.op_LessThanOrEqual%2A> method defines the operation of the less-than-or-equal operator for <xref:System.Double> values.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Parse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="86f72-480">將數字的字串表示轉換為其相等的雙精確度浮點數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-480">Converts the string representation of a number to its double-precision floating-point number equivalent.</span>
          </span>
        </summary>
        <altmember cref="Overload:System.Double.TryParse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static double Parse (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Parse(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Parse(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; double" Usage="System.double.Parse s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="86f72-481">字串，包含要轉換的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-481">A string that contains a number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86f72-482">將數字的字串表示轉換為其相等的雙精確度浮點數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-482">Converts the string representation of a number to its double-precision floating-point number equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86f72-483">雙精確度浮點數，與 <paramref name="s" /> 中指定的數值或符號相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-483">A double-precision floating-point number that is equivalent to the numeric value or symbol specified in <paramref name="s" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86f72-484">`s`參數可以包含目前的文化特性<xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A?displayProperty=nameWithType>， <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A?displayProperty=nameWithType>， <xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A?displayProperty=nameWithType>，或格式的字串：</span><span class="sxs-lookup"><span data-stu-id="86f72-484">The `s` parameter can contain the current culture's <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A?displayProperty=nameWithType>, <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A?displayProperty=nameWithType>, <xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A?displayProperty=nameWithType>, or a string of the form:</span></span>  
  
 <span data-ttu-id="86f72-485">[*ws*][*sign*][*integral-digits*[*,*]]*integral-digits*[*.*[*fractional-digits*]][E[*sign*]*exponential-digits*][*ws*]</span><span class="sxs-lookup"><span data-stu-id="86f72-485">[*ws*][*sign*][*integral-digits*[*,*]]*integral-digits*[*.*[*fractional-digits*]][E[*sign*]*exponential-digits*][*ws*]</span></span>  
  
 <span data-ttu-id="86f72-486">在方括號 ([ 和 ]) 中的項目是選擇性的項目。</span><span class="sxs-lookup"><span data-stu-id="86f72-486">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="86f72-487">下表說明每個元素。</span><span class="sxs-lookup"><span data-stu-id="86f72-487">The following table describes each element.</span></span>  
  
|<span data-ttu-id="86f72-488">元素</span><span class="sxs-lookup"><span data-stu-id="86f72-488">Element</span></span>|<span data-ttu-id="86f72-489">描述</span><span class="sxs-lookup"><span data-stu-id="86f72-489">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="86f72-490">*ws*</span><span class="sxs-lookup"><span data-stu-id="86f72-490">*ws*</span></span>|<span data-ttu-id="86f72-491">一系列的泛空白字元。</span><span class="sxs-lookup"><span data-stu-id="86f72-491">A series of white-space characters.</span></span>|  
|<span data-ttu-id="86f72-492">*簽署*</span><span class="sxs-lookup"><span data-stu-id="86f72-492">*sign*</span></span>|<span data-ttu-id="86f72-493">負號符號 （-） 或正號符號 （+）。</span><span class="sxs-lookup"><span data-stu-id="86f72-493">A negative sign symbol (-) or a positive sign symbol (+).</span></span> <span data-ttu-id="86f72-494">可以用前置正負號。</span><span class="sxs-lookup"><span data-stu-id="86f72-494">Only a leading sign can be used.</span></span>|  
|<span data-ttu-id="86f72-495">*整數數字*</span><span class="sxs-lookup"><span data-stu-id="86f72-495">*integral-digits*</span></span>|<span data-ttu-id="86f72-496">一系列數字範圍從 0 到 9 的指定數目的整數部分。</span><span class="sxs-lookup"><span data-stu-id="86f72-496">A series of digits ranging from 0 to 9 that specify the integral part of the number.</span></span> <span data-ttu-id="86f72-497">執行*整數位數*可以依群組分隔符號進行分割。</span><span class="sxs-lookup"><span data-stu-id="86f72-497">Runs of *integral-digits* can be partitioned by a group-separator symbol.</span></span> <span data-ttu-id="86f72-498">比方說，在某些文化特性逗號 （，） 分隔的千分位的群組。</span><span class="sxs-lookup"><span data-stu-id="86f72-498">For example, in some cultures a comma (,) separates groups of thousands.</span></span> <span data-ttu-id="86f72-499">*整數位數*項目可以是若字串包含*小數位數*項目。</span><span class="sxs-lookup"><span data-stu-id="86f72-499">The *integral-digits* element can be absent if the string contains the *fractional-digits* element.</span></span>|  
|<span data-ttu-id="86f72-500">,</span><span class="sxs-lookup"><span data-stu-id="86f72-500">,</span></span>|<span data-ttu-id="86f72-501">特定文化特性的千位分隔符號。</span><span class="sxs-lookup"><span data-stu-id="86f72-501">A culture-specific thousands separator symbol.</span></span>|  
|<span data-ttu-id="86f72-502">。</span><span class="sxs-lookup"><span data-stu-id="86f72-502">.</span></span>|<span data-ttu-id="86f72-503">特定文化特性的貨幣符號。</span><span class="sxs-lookup"><span data-stu-id="86f72-503">A culture-specific decimal point symbol.</span></span>|  
|<span data-ttu-id="86f72-504">*fractional-digits*</span><span class="sxs-lookup"><span data-stu-id="86f72-504">*fractional-digits*</span></span>|<span data-ttu-id="86f72-505">一系列數字範圍從 0 到 9 的指定數字的小數部分。</span><span class="sxs-lookup"><span data-stu-id="86f72-505">A series of digits ranging from 0 to 9 that specify the fractional part of the number.</span></span>|  
|<span data-ttu-id="86f72-506">E</span><span class="sxs-lookup"><span data-stu-id="86f72-506">E</span></span>|<span data-ttu-id="86f72-507">"E"或者"E"字元，表示代表的值時，會以指數 （科學記號） 標記法。</span><span class="sxs-lookup"><span data-stu-id="86f72-507">The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</span></span>|  
|<span data-ttu-id="86f72-508">*指數數字*</span><span class="sxs-lookup"><span data-stu-id="86f72-508">*exponential-digits*</span></span>|<span data-ttu-id="86f72-509">一系列的範圍從 0 到 9 指定指數的數字。</span><span class="sxs-lookup"><span data-stu-id="86f72-509">A series of digits ranging from 0 to 9 that specify an exponent.</span></span>|  
  
 <span data-ttu-id="86f72-510">`s`參數會使用的組合來解譯<xref:System.Globalization.NumberStyles.Float?displayProperty=nameWithType>和<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="86f72-510">The `s` parameter is interpreted using a combination of the <xref:System.Globalization.NumberStyles.Float?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flags.</span></span> <span data-ttu-id="86f72-511">這表示泛空白字元和千位分隔符號可以，比方說，雖然不是貨幣符號。</span><span class="sxs-lookup"><span data-stu-id="86f72-511">This means that white space and thousands separators are allowed, for example, while currency symbols are not.</span></span> <span data-ttu-id="86f72-512">針對更控制透過樣式中允許的項目`s`剖析作業成功，呼叫<xref:System.Double.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType>或<xref:System.Double.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="86f72-512">For finer control over which style elements are permitted in `s` for the parse operation to succeed, call the <xref:System.Double.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType> or the <xref:System.Double.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="86f72-513">`s`參數會解譯使用中的格式設定資訊<xref:System.Globalization.NumberFormatInfo>初始化目前執行緒文化特性的物件。</span><span class="sxs-lookup"><span data-stu-id="86f72-513">The `s` parameter is interpreted using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object that is initialized for the current thread culture.</span></span> <span data-ttu-id="86f72-514">如需詳細資訊，請參閱<xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>。</span><span class="sxs-lookup"><span data-stu-id="86f72-514">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>.</span></span> <span data-ttu-id="86f72-515">若要剖析字串，使用其他文化特性格式資訊，請呼叫<xref:System.Double.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType>或<xref:System.Double.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="86f72-515">To parse a string using the formatting information of some other culture, call the <xref:System.Double.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> or <xref:System.Double.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="86f72-516">一般情況下，如果您傳遞<xref:System.Double.Parse%2A?displayProperty=nameWithType>字串，由呼叫的方法<xref:System.Double.ToString%2A?displayProperty=nameWithType>方法中，原始<xref:System.Double>會傳回值。</span><span class="sxs-lookup"><span data-stu-id="86f72-516">Ordinarily, if you pass the <xref:System.Double.Parse%2A?displayProperty=nameWithType> method a string that is created by calling the <xref:System.Double.ToString%2A?displayProperty=nameWithType> method, the original <xref:System.Double> value is returned.</span></span> <span data-ttu-id="86f72-517">不過，因為遺失有效位數，值可能不會相等。</span><span class="sxs-lookup"><span data-stu-id="86f72-517">However, because of a loss of precision, the values may not be equal.</span></span> <span data-ttu-id="86f72-518">此外，嘗試剖析的字串表示法<xref:System.Double.MinValue>或是<xref:System.Double.MaxValue>就會擲回<xref:System.OverflowException>，如下列範例所示。</span><span class="sxs-lookup"><span data-stu-id="86f72-518">In addition, attempting to parse the string representation of either <xref:System.Double.MinValue> or <xref:System.Double.MaxValue> throws an <xref:System.OverflowException>, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Double.Parse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double.Parse/cs/parse2.cs#3)]
 [!code-vb[System.Double.Parse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double.Parse/vb/parse2.vb#3)]  
  
 <span data-ttu-id="86f72-519">如果出現在分隔符號`s`參數在剖析作業中，在適用的貨幣或十進位數字期間及群組分隔符號相同，則剖析作業會假設分隔符號是小數分隔符號，而不是群組分隔符號。</span><span class="sxs-lookup"><span data-stu-id="86f72-519">If a separator is encountered in the `s` parameter during a parse operation, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</span></span> <span data-ttu-id="86f72-520">如需分隔符號的詳細資訊，請參閱<xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>， <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>， <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>，和<xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>。</span><span class="sxs-lookup"><span data-stu-id="86f72-520">For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86f72-521">在下列程式碼中，說明了如何使用 <xref:System.Double.Parse%28System.String%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="86f72-521">The following example illustrates the use of the <xref:System.Double.Parse%28System.String%29> method.</span></span>  
  
 [!code-cpp[Double Example#5](~/samples/snippets/cpp/VS_Snippets_CLR/Double Example/CPP/source.cpp#5)]
 [!code-csharp[Double Example#5](~/samples/snippets/csharp/VS_Snippets_CLR/Double Example/CS/source.cs#5)]
 [!code-vb[Double Example#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/Double Example/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="86f72-522">
            <paramref name="s" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-522">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="86f72-523">
            <paramref name="s" /> 並不代表有效格式的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-523">
              <paramref name="s" /> does not represent a number in a valid format.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="86f72-524">
            <paramref name="s" /> 代表小於 <see cref="F:System.Double.MinValue" /> 或大於 <see cref="F:System.Double.MaxValue" /> 的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-524">
              <paramref name="s" /> represents a number that is less than <see cref="F:System.Double.MinValue" /> or greater than <see cref="F:System.Double.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Double.ToString" />
        <altmember cref="M:System.Double.TryParse(System.String,System.Double@)" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static double Parse (string s, System.Globalization.NumberStyles style);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Parse(string s, valuetype System.Globalization.NumberStyles style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.Parse(System.String,System.Globalization.NumberStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, style As NumberStyles) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Parse(System::String ^ s, System::Globalization::NumberStyles style);" />
      <MemberSignature Language="F#" Value="static member Parse : string * System.Globalization.NumberStyles -&gt; double" Usage="System.double.Parse (s, style)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="86f72-525">字串，包含要轉換的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-525">A string that contains a number to convert.</span>
          </span>
        </param>
        <param name="style">
          <span data-ttu-id="86f72-526">列舉值的位元組合，表示 <c>s</c> 中可以存在的樣式元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-526">A bitwise combination of enumeration values that indicate the style elements that can be present in <c>s</c>.</span>
          </span>
          <span data-ttu-id="86f72-527">要指定的一般值為 <see cref="F:System.Globalization.NumberStyles.Float" /> 與 <see cref="F:System.Globalization.NumberStyles.AllowThousands" /> 的組合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-527">A typical value to specify is a combination of <see cref="F:System.Globalization.NumberStyles.Float" /> combined with <see cref="F:System.Globalization.NumberStyles.AllowThousands" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86f72-528">將數字的字串表示 (使用指定樣式) 轉換為其相等的雙精確度浮點數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-528">Converts the string representation of a number in a specified style to its double-precision floating-point number equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86f72-529">雙精確度浮點數，與 <paramref name="s" /> 中指定的數值或符號相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-529">A double-precision floating-point number that is equivalent to the numeric value or symbol specified in <paramref name="s" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86f72-530">`style`參數定義的樣式項目 (例如空格、 千分位分隔符號和貨幣符號) 中允許`s`剖析作業成功的參數。</span><span class="sxs-lookup"><span data-stu-id="86f72-530">The `style` parameter defines the style elements (such as white space, thousands separators, and currency symbols) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="86f72-531">它必須是從位元旗標的組合<xref:System.Globalization.NumberStyles>列舉型別。</span><span class="sxs-lookup"><span data-stu-id="86f72-531">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="86f72-532">下列<xref:System.Globalization.NumberStyles>不支援的成員：</span><span class="sxs-lookup"><span data-stu-id="86f72-532">The following <xref:System.Globalization.NumberStyles> members are not supported:</span></span>  
  
-   <xref:System.Globalization.NumberStyles.AllowHexSpecifier>  
  
-   <xref:System.Globalization.NumberStyles.HexNumber>  
  
 <span data-ttu-id="86f72-533">`s`參數可以包含目前的文化特性<xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A?displayProperty=nameWithType>， <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A?displayProperty=nameWithType>，或<xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="86f72-533">The `s` parameter can contain the current culture's <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A?displayProperty=nameWithType>, <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A?displayProperty=nameWithType>, or <xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="86f72-534">值而定`style`，它也可以採用格式：</span><span class="sxs-lookup"><span data-stu-id="86f72-534">Depending on the value of `style`, it can also take the form:</span></span>  
  
 <span data-ttu-id="86f72-535">[*ws*] [*$*] [*登*] [*整數位數*[*，*]]*整數位數*[*。*[*小數位數*]] [E [*號*]*指數數字*] [*ws*]</span><span class="sxs-lookup"><span data-stu-id="86f72-535">[*ws*][*$*][*sign*][*integral-digits*[*,*]]*integral-digits*[*.*[*fractional-digits*]][E[*sign*]*exponential-digits*][*ws*]</span></span>  
  
 <span data-ttu-id="86f72-536">在方括號 ([ 和 ]) 中的項目是選擇性的項目。</span><span class="sxs-lookup"><span data-stu-id="86f72-536">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="86f72-537">下表說明每個元素。</span><span class="sxs-lookup"><span data-stu-id="86f72-537">The following table describes each element.</span></span>  
  
|<span data-ttu-id="86f72-538">元素</span><span class="sxs-lookup"><span data-stu-id="86f72-538">Element</span></span>|<span data-ttu-id="86f72-539">描述</span><span class="sxs-lookup"><span data-stu-id="86f72-539">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="86f72-540">*ws*</span><span class="sxs-lookup"><span data-stu-id="86f72-540">*ws*</span></span>|<span data-ttu-id="86f72-541">一系列的泛空白字元。</span><span class="sxs-lookup"><span data-stu-id="86f72-541">A series of white-space characters.</span></span> <span data-ttu-id="86f72-542">空白字元可以出現在開頭`s`如果`style`包含<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>旗標，也可以顯示在結尾`s`如果`style`包含<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="86f72-542">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|$|<span data-ttu-id="86f72-543">特定文化特性的貨幣符號。</span><span class="sxs-lookup"><span data-stu-id="86f72-543">A culture-specific currency symbol.</span></span> <span data-ttu-id="86f72-544">在字串中的位置由定義<xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType>和<xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType>目前文化特性的屬性。</span><span class="sxs-lookup"><span data-stu-id="86f72-544">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> properties of the current culture.</span></span> <span data-ttu-id="86f72-545">目前的文化特性的貨幣符號會出現在`s`如果`style`包含<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="86f72-545">The current culture's currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="86f72-546">*簽署*</span><span class="sxs-lookup"><span data-stu-id="86f72-546">*sign*</span></span>|<span data-ttu-id="86f72-547">負號符號 （-） 或正號符號 （+）。</span><span class="sxs-lookup"><span data-stu-id="86f72-547">A negative sign symbol (-) or a positive sign symbol (+).</span></span> <span data-ttu-id="86f72-548">符號可以出現在開頭`s`如果`style`包含<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>旗標，也可以顯示在結尾`s`如果`style`包含<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="86f72-548">The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="86f72-549">可用於括號`s`表示負值`style`包含<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="86f72-549">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="86f72-550">*整數數字*</span><span class="sxs-lookup"><span data-stu-id="86f72-550">*integral-digits*</span></span>|<span data-ttu-id="86f72-551">一系列數字範圍從 0 到 9 的指定數目的整數部分。</span><span class="sxs-lookup"><span data-stu-id="86f72-551">A series of digits ranging from 0 to 9 that specify the integral part of the number.</span></span> <span data-ttu-id="86f72-552">*整數位數*項目可以是若字串包含*小數位數*項目。</span><span class="sxs-lookup"><span data-stu-id="86f72-552">The *integral-digits* element can be absent if the string contains the *fractional-digits* element.</span></span>|  
|<span data-ttu-id="86f72-553">,</span><span class="sxs-lookup"><span data-stu-id="86f72-553">,</span></span>|<span data-ttu-id="86f72-554">特定文化特性的群組分隔符號。</span><span class="sxs-lookup"><span data-stu-id="86f72-554">A culture-specific group separator.</span></span> <span data-ttu-id="86f72-555">目前的文化特性的群組分隔符號可以出現在`s`如果`style`包含<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>旗標</span><span class="sxs-lookup"><span data-stu-id="86f72-555">The current culture's group separator symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag</span></span>|  
|<span data-ttu-id="86f72-556">。</span><span class="sxs-lookup"><span data-stu-id="86f72-556">.</span></span>|<span data-ttu-id="86f72-557">特定文化特性的貨幣符號。</span><span class="sxs-lookup"><span data-stu-id="86f72-557">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="86f72-558">目前的文化特性的貨幣符號會出現在`s`如果`style`包含<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="86f72-558">The current culture's decimal point symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="86f72-559">*fractional-digits*</span><span class="sxs-lookup"><span data-stu-id="86f72-559">*fractional-digits*</span></span>|<span data-ttu-id="86f72-560">一系列數字範圍從 0 到 9 的指定數字的小數部分。</span><span class="sxs-lookup"><span data-stu-id="86f72-560">A series of digits ranging from 0 to 9 that specify the fractional part of the number.</span></span> <span data-ttu-id="86f72-561">小數點後數字可以出現在`s`如果`style`包含<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="86f72-561">Fractional digits can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="86f72-562">E</span><span class="sxs-lookup"><span data-stu-id="86f72-562">E</span></span>|<span data-ttu-id="86f72-563">"E"或者"E"字元，表示代表的值時，會以指數 （科學記號） 標記法。</span><span class="sxs-lookup"><span data-stu-id="86f72-563">The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</span></span> <span data-ttu-id="86f72-564">`s`參數可代表指數標記法之數字，如果`style`包含<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="86f72-564">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="86f72-565">*指數數字*</span><span class="sxs-lookup"><span data-stu-id="86f72-565">*exponential-digits*</span></span>|<span data-ttu-id="86f72-566">一系列的範圍從 0 到 9 指定指數的數字。</span><span class="sxs-lookup"><span data-stu-id="86f72-566">A series of digits ranging from 0 to 9 that specify an exponent.</span></span>|  
  
 <span data-ttu-id="86f72-567">只有數字的字串 (對應至<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>樣式) 一律會成功剖析。</span><span class="sxs-lookup"><span data-stu-id="86f72-567">A string with digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully.</span></span> <span data-ttu-id="86f72-568">其餘<xref:System.Globalization.NumberStyles?displayProperty=nameWithType>成員控制可能存在，但不是一定要出現在輸入字串的項目。</span><span class="sxs-lookup"><span data-stu-id="86f72-568">The remaining <xref:System.Globalization.NumberStyles?displayProperty=nameWithType> members control elements that may be present, but are not required to be present, in the input string.</span></span> <span data-ttu-id="86f72-569">下表指出如何個別<xref:System.Globalization.NumberStyles>旗標會影響可能會出現在項目`s`。</span><span class="sxs-lookup"><span data-stu-id="86f72-569">The following table indicates how individual <xref:System.Globalization.NumberStyles> flags affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="86f72-570">NumberStyles 值</span><span class="sxs-lookup"><span data-stu-id="86f72-570">NumberStyles value</span></span>|<span data-ttu-id="86f72-571">中的項目允許`s`除了數字</span><span class="sxs-lookup"><span data-stu-id="86f72-571">Elements permitted in `s` in addition to digits</span></span>|  
|------------------------|-----------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None>|<span data-ttu-id="86f72-572">*整數位數*只有項目。</span><span class="sxs-lookup"><span data-stu-id="86f72-572">The *integral-digits* element only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|<span data-ttu-id="86f72-573">小數點 (*。*) 和*小數位數*項目。</span><span class="sxs-lookup"><span data-stu-id="86f72-573">The decimal point (*.*) and *fractional-digits* elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent>|<span data-ttu-id="86f72-574">"E"或者"E"字元，這表示指數標記法。</span><span class="sxs-lookup"><span data-stu-id="86f72-574">The "e" or "E" character, which indicates exponential notation.</span></span> <span data-ttu-id="86f72-575">這個旗標本身支援值形式*數字*E*數字*; 其他旗標才能成功剖析項目像是正或負號和小數點符號的字串。</span><span class="sxs-lookup"><span data-stu-id="86f72-575">This flag by itself supports values in the form *digits*E*digits*; additional flags are needed to successfully parse strings with such elements as positive or negative signs and decimal point symbols.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|<span data-ttu-id="86f72-576">*Ws*開頭的項目`s`。</span><span class="sxs-lookup"><span data-stu-id="86f72-576">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|<span data-ttu-id="86f72-577">*Ws*結尾的項目`s`。</span><span class="sxs-lookup"><span data-stu-id="86f72-577">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|<span data-ttu-id="86f72-578">*號*開頭的項目`s`。</span><span class="sxs-lookup"><span data-stu-id="86f72-578">The *sign* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|<span data-ttu-id="86f72-579">*號*結尾的項目`s`。</span><span class="sxs-lookup"><span data-stu-id="86f72-579">The *sign* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses>|<span data-ttu-id="86f72-580">*號*括號括住的數字值的形式的項目。</span><span class="sxs-lookup"><span data-stu-id="86f72-580">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands>|<span data-ttu-id="86f72-581">千分位分隔符號 （，） 項目。</span><span class="sxs-lookup"><span data-stu-id="86f72-581">The thousands separator (,) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|<span data-ttu-id="86f72-582">貨幣 （$） 的項目。</span><span class="sxs-lookup"><span data-stu-id="86f72-582">The currency ($) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency>|<span data-ttu-id="86f72-583">所有項目。</span><span class="sxs-lookup"><span data-stu-id="86f72-583">All elements.</span></span> <span data-ttu-id="86f72-584">不過，`s`無法表示十六進位數字或指數標記法之數字。</span><span class="sxs-lookup"><span data-stu-id="86f72-584">However, `s` cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float>|<span data-ttu-id="86f72-585">*Ws*元素的開頭或結尾`s`，*登*開頭`s`，且小數點 （.） 的符號。</span><span class="sxs-lookup"><span data-stu-id="86f72-585">The *ws* element at the beginning or end of `s`, *sign* at the beginning of `s`, and the decimal point (.) symbol.</span></span> <span data-ttu-id="86f72-586">`s`參數也可以使用指數標記法。</span><span class="sxs-lookup"><span data-stu-id="86f72-586">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number>|<span data-ttu-id="86f72-587">`ws`， `sign`，千分位 （，） 符號和小數點 （.） 項目。</span><span class="sxs-lookup"><span data-stu-id="86f72-587">The `ws`, `sign`, thousands separator (,) and decimal point (.) elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any>|<span data-ttu-id="86f72-588">所有項目。</span><span class="sxs-lookup"><span data-stu-id="86f72-588">All elements.</span></span> <span data-ttu-id="86f72-589">不過，`s`無法代表十六進位數字。</span><span class="sxs-lookup"><span data-stu-id="86f72-589">However, `s` cannot represent a hexadecimal number.</span></span>|  
  
 <span data-ttu-id="86f72-590">`s`參數會剖析使用的格式設定資訊中<xref:System.Globalization.NumberFormatInfo>初始化目前系統文化特性的物件。</span><span class="sxs-lookup"><span data-stu-id="86f72-590">The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object that is initialized for the current system culture.</span></span> <span data-ttu-id="86f72-591">如需詳細資訊，請參閱<xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>。</span><span class="sxs-lookup"><span data-stu-id="86f72-591">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>.</span></span>  
  
 <span data-ttu-id="86f72-592">一般情況下，如果您傳遞<xref:System.Double.Parse%2A?displayProperty=nameWithType>字串，由呼叫的方法<xref:System.Double.ToString%2A?displayProperty=nameWithType>方法中，原始<xref:System.Double>會傳回值。</span><span class="sxs-lookup"><span data-stu-id="86f72-592">Ordinarily, if you pass the <xref:System.Double.Parse%2A?displayProperty=nameWithType> method a string that is created by calling the <xref:System.Double.ToString%2A?displayProperty=nameWithType> method, the original <xref:System.Double> value is returned.</span></span> <span data-ttu-id="86f72-593">不過，因為遺失有效位數，值可能不會相等。</span><span class="sxs-lookup"><span data-stu-id="86f72-593">However, because of a loss of precision, the values may not be equal.</span></span> <span data-ttu-id="86f72-594">此外，嘗試剖析的字串表示法<xref:System.Double.MinValue>或是<xref:System.Double.MaxValue>就會擲回<xref:System.OverflowException>，如下列範例所示。</span><span class="sxs-lookup"><span data-stu-id="86f72-594">In addition, attempting to parse the string representation of either <xref:System.Double.MinValue> or <xref:System.Double.MaxValue> throws an <xref:System.OverflowException>, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Double.Parse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double.Parse/cs/parse2.cs#3)]
 [!code-vb[System.Double.Parse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double.Parse/vb/parse2.vb#3)]  
  
 <span data-ttu-id="86f72-595">如果出現在分隔符號`s`參數在剖析作業中，在適用的貨幣或十進位數字期間及群組分隔符號相同，則剖析作業會假設分隔符號是小數分隔符號，而不是群組分隔符號。</span><span class="sxs-lookup"><span data-stu-id="86f72-595">If a separator is encountered in the `s` parameter during a parse operation, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</span></span> <span data-ttu-id="86f72-596">如需分隔符號的詳細資訊，請參閱<xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>， <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>， <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>，和<xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>。</span><span class="sxs-lookup"><span data-stu-id="86f72-596">For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86f72-597">下列範例會使用<xref:System.Double.Parse%28System.String%2CSystem.Globalization.NumberStyles%29>方法來剖析的字串表示<xref:System.Double>使用 EN-US 文化特性值。</span><span class="sxs-lookup"><span data-stu-id="86f72-597">The following example uses the <xref:System.Double.Parse%28System.String%2CSystem.Globalization.NumberStyles%29> method to parse the string representations of <xref:System.Double> values using the en-US culture.</span></span>  
  
 [!code-csharp[System.Double.Parse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double.Parse/cs/Parse.cs#1)]
 [!code-vb[System.Double.Parse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double.Parse/vb/Parse.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="86f72-598">
            <paramref name="s" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-598">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="86f72-599">
            <paramref name="s" /> 並不代表有效格式的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-599">
              <paramref name="s" /> does not represent a number in a valid format.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="86f72-600">
            <paramref name="s" /> 代表小於 <see cref="F:System.Double.MinValue" /> 或大於 <see cref="F:System.Double.MaxValue" /> 的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-600">
              <paramref name="s" /> represents a number that is less than <see cref="F:System.Double.MinValue" /> or greater than <see cref="F:System.Double.MaxValue" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="86f72-601">
            <paramref name="style" /> 不是 <see cref="T:System.Globalization.NumberStyles" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-601">
              <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span>
          </span>
          <span data-ttu-id="86f72-602">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-602">-or-</span>
          </span>
          <span data-ttu-id="86f72-603">
            <paramref name="style" /> 包括 <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-603">
              <paramref name="style" /> includes the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> value.</span>
          </span>
        </exception>
        <altmember cref="M:System.Double.ToString" />
        <altmember cref="Overload:System.Double.TryParse" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static double Parse (string s, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Parse(string s, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.Parse(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, provider As IFormatProvider) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Parse(System::String ^ s, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member Parse : string * IFormatProvider -&gt; double" Usage="System.double.Parse (s, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="86f72-604">字串，包含要轉換的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-604">A string that contains a number to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="86f72-605">物件，提供關於 <c>s</c> 的文化特性特定格式資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-605">An object that supplies culture-specific formatting information about <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86f72-606">將數字的字串表示 (使用指定的特定文化特性格式) 轉換為其相等的雙精確度浮點數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-606">Converts the string representation of a number in a specified culture-specific format to its double-precision floating-point number equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86f72-607">雙精確度浮點數，與 <paramref name="s" /> 中指定的數值或符號相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-607">A double-precision floating-point number that is equivalent to the numeric value or symbol specified in <paramref name="s" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86f72-608">這個多載<xref:System.Double.Parse%28System.String%2CSystem.IFormatProvider%29>方法通常用來將各種不同的方式來格式化的文字轉換<xref:System.Double>值。</span><span class="sxs-lookup"><span data-stu-id="86f72-608">This overload of the <xref:System.Double.Parse%28System.String%2CSystem.IFormatProvider%29> method is typically used to convert text that can be formatted in a variety of ways to a <xref:System.Double> value.</span></span> <span data-ttu-id="86f72-609">比方說，它可以用來轉換使用者 HTML 文字方塊中輸入數值的文字。</span><span class="sxs-lookup"><span data-stu-id="86f72-609">For example, it can be used to convert the text that is entered by a user into an HTML text box to a numeric value.</span></span>  
  
 <span data-ttu-id="86f72-610">`s`參數會使用的組合來解譯<xref:System.Globalization.NumberStyles.Float?displayProperty=nameWithType>和<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="86f72-610">The `s` parameter is interpreted using a combination of the <xref:System.Globalization.NumberStyles.Float?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flags.</span></span> <span data-ttu-id="86f72-611">`s`參數可以包含<xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A?displayProperty=nameWithType>， <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A?displayProperty=nameWithType>，或<xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A?displayProperty=nameWithType>所指定的文化特性`provider`，也可以包含格式的字串：</span><span class="sxs-lookup"><span data-stu-id="86f72-611">The `s` parameter can contain <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A?displayProperty=nameWithType>, <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A?displayProperty=nameWithType>, or <xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A?displayProperty=nameWithType> for the culture specified by `provider`, or it can contain a string of the form:</span></span>  
  
 <span data-ttu-id="86f72-612">[*ws*][*sign*]*integral-digits*[*.*[*fractional-digits*]][E[*sign*]*exponential-digits*][*ws*]</span><span class="sxs-lookup"><span data-stu-id="86f72-612">[*ws*][*sign*]*integral-digits*[*.*[*fractional-digits*]][E[*sign*]*exponential-digits*][*ws*]</span></span>  
  
 <span data-ttu-id="86f72-613">選擇性的項目包覆在方括號 （[和]）。</span><span class="sxs-lookup"><span data-stu-id="86f72-613">Optional elements are framed in square brackets ([ and ]).</span></span> <span data-ttu-id="86f72-614">包含詞彙 「 數字 」 的項目是由一系列的範圍從 0 到 9 的數字字元所組成。</span><span class="sxs-lookup"><span data-stu-id="86f72-614">Elements that contain the term "digits" consist of a series of numeric characters ranging from 0 to 9.</span></span>  
  
|<span data-ttu-id="86f72-615">元素</span><span class="sxs-lookup"><span data-stu-id="86f72-615">Element</span></span>|<span data-ttu-id="86f72-616">描述</span><span class="sxs-lookup"><span data-stu-id="86f72-616">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="86f72-617">*ws*</span><span class="sxs-lookup"><span data-stu-id="86f72-617">*ws*</span></span>|<span data-ttu-id="86f72-618">一系列的泛空白字元。</span><span class="sxs-lookup"><span data-stu-id="86f72-618">A series of white-space characters.</span></span>|  
|<span data-ttu-id="86f72-619">*簽署*</span><span class="sxs-lookup"><span data-stu-id="86f72-619">*sign*</span></span>|<span data-ttu-id="86f72-620">負號符號 （-） 或正號符號 （+）。</span><span class="sxs-lookup"><span data-stu-id="86f72-620">A negative sign symbol (-) or a positive sign symbol (+).</span></span>|  
|<span data-ttu-id="86f72-621">*整數數字*</span><span class="sxs-lookup"><span data-stu-id="86f72-621">*integral-digits*</span></span>|<span data-ttu-id="86f72-622">一系列數字範圍從 0 到 9 的指定數目的整數部分。</span><span class="sxs-lookup"><span data-stu-id="86f72-622">A series of digits ranging from 0 to 9 that specify the integral part of the number.</span></span> <span data-ttu-id="86f72-623">執行*整數位數*可以依群組分隔符號進行分割。</span><span class="sxs-lookup"><span data-stu-id="86f72-623">Runs of *integral-digits* can be partitioned by a group-separator symbol.</span></span> <span data-ttu-id="86f72-624">比方說，在某些文化特性逗號 （，） 分隔的千分位的群組。</span><span class="sxs-lookup"><span data-stu-id="86f72-624">For example, in some cultures a comma (,) separates groups of thousands.</span></span> <span data-ttu-id="86f72-625">*整數位數*項目可以是若字串包含*小數位數*項目。</span><span class="sxs-lookup"><span data-stu-id="86f72-625">The *integral-digits* element can be absent if the string contains the *fractional-digits* element.</span></span>|  
|<span data-ttu-id="86f72-626">。</span><span class="sxs-lookup"><span data-stu-id="86f72-626">.</span></span>|<span data-ttu-id="86f72-627">特定文化特性的貨幣符號。</span><span class="sxs-lookup"><span data-stu-id="86f72-627">A culture-specific decimal point symbol.</span></span>|  
|<span data-ttu-id="86f72-628">*fractional-digits*</span><span class="sxs-lookup"><span data-stu-id="86f72-628">*fractional-digits*</span></span>|<span data-ttu-id="86f72-629">一系列數字範圍從 0 到 9 的指定數字的小數部分。</span><span class="sxs-lookup"><span data-stu-id="86f72-629">A series of digits ranging from 0 to 9 that specify the fractional part of the number.</span></span>|  
|<span data-ttu-id="86f72-630">E</span><span class="sxs-lookup"><span data-stu-id="86f72-630">E</span></span>|<span data-ttu-id="86f72-631">"E"或者"E"字元，表示代表的值時，會以指數 （科學記號） 標記法。</span><span class="sxs-lookup"><span data-stu-id="86f72-631">The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</span></span>|  
|<span data-ttu-id="86f72-632">*指數數字*</span><span class="sxs-lookup"><span data-stu-id="86f72-632">*exponential-digits*</span></span>|<span data-ttu-id="86f72-633">一系列的範圍從 0 到 9 指定指數的數字。</span><span class="sxs-lookup"><span data-stu-id="86f72-633">A series of digits ranging from 0 to 9 that specify an exponent.</span></span>|  
  
 <span data-ttu-id="86f72-634">如需有關數值格式的詳細資訊，請參閱[格式化型別](~/docs/standard/base-types/formatting-types.md)主題。</span><span class="sxs-lookup"><span data-stu-id="86f72-634">For more information about numeric formats, see the [Formatting Types](~/docs/standard/base-types/formatting-types.md) topic.</span></span>  
  
 <span data-ttu-id="86f72-635">`provider`參數是<xref:System.IFormatProvider>實作其<xref:System.IFormatProvider.GetFormat%2A>方法會傳回<xref:System.Globalization.NumberFormatInfo>物件，提供特定文化特性的資訊用於解譯的格式`s`。</span><span class="sxs-lookup"><span data-stu-id="86f72-635">The `provider` parameter is an <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that supplies culture-specific information used in interpreting the format of `s`.</span></span> <span data-ttu-id="86f72-636">一般來說，這是<xref:System.Globalization.NumberFormatInfo>或<xref:System.Globalization.CultureInfo>物件。</span><span class="sxs-lookup"><span data-stu-id="86f72-636">Typically, it is a <xref:System.Globalization.NumberFormatInfo> or <xref:System.Globalization.CultureInfo> object.</span></span> <span data-ttu-id="86f72-637">如果`provider`已`null`或<xref:System.Globalization.NumberFormatInfo>無法取得，格式設定資訊會使用目前的系統文化特性。</span><span class="sxs-lookup"><span data-stu-id="86f72-637">If `provider` is `null` or a <xref:System.Globalization.NumberFormatInfo> cannot be obtained, the formatting information for the current system culture is used.</span></span>  
  
 <span data-ttu-id="86f72-638">一般情況下，如果您傳遞<xref:System.Double.Parse%2A?displayProperty=nameWithType>字串，由呼叫的方法<xref:System.Double.ToString%2A?displayProperty=nameWithType>方法中，原始<xref:System.Double>會傳回值。</span><span class="sxs-lookup"><span data-stu-id="86f72-638">Ordinarily, if you pass the <xref:System.Double.Parse%2A?displayProperty=nameWithType> method a string that is created by calling the <xref:System.Double.ToString%2A?displayProperty=nameWithType> method, the original <xref:System.Double> value is returned.</span></span> <span data-ttu-id="86f72-639">不過，因為遺失有效位數，值可能不會相等。</span><span class="sxs-lookup"><span data-stu-id="86f72-639">However, because of a loss of precision, the values may not be equal.</span></span> <span data-ttu-id="86f72-640">此外，嘗試剖析的字串表示法<xref:System.Double.MinValue>或是<xref:System.Double.MaxValue>就會擲回<xref:System.OverflowException>，如下列範例所示。</span><span class="sxs-lookup"><span data-stu-id="86f72-640">In addition, attempting to parse the string representation of either <xref:System.Double.MinValue> or <xref:System.Double.MaxValue> throws an <xref:System.OverflowException>, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Double.Parse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double.Parse/cs/parse2.cs#3)]
 [!code-vb[System.Double.Parse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double.Parse/vb/parse2.vb#3)]  
  
 <span data-ttu-id="86f72-641">如果出現在分隔符號`s`參數在剖析作業中，在適用的貨幣或十進位數字期間及群組分隔符號相同，則剖析作業會假設分隔符號是小數分隔符號，而不是群組分隔符號。</span><span class="sxs-lookup"><span data-stu-id="86f72-641">If a separator is encountered in the `s` parameter during a parse operation, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</span></span> <span data-ttu-id="86f72-642">如需分隔符號的詳細資訊，請參閱<xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>， <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>， <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>，和<xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>。</span><span class="sxs-lookup"><span data-stu-id="86f72-642">For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86f72-643">下列範例是按鈕 click 事件處理常式的 Web 表單。</span><span class="sxs-lookup"><span data-stu-id="86f72-643">The following example is the button click event handler of a Web form.</span></span> <span data-ttu-id="86f72-644">它會使用所傳回的陣列<xref:System.Web.HttpRequest.UserLanguages%2A?displayProperty=nameWithType>屬性來判斷使用者的地區設定。</span><span class="sxs-lookup"><span data-stu-id="86f72-644">It uses the array returned by the <xref:System.Web.HttpRequest.UserLanguages%2A?displayProperty=nameWithType> property to determine the user's locale.</span></span> <span data-ttu-id="86f72-645">它接著會執行個體化<xref:System.Globalization.CultureInfo>對應至該地區設定物件。</span><span class="sxs-lookup"><span data-stu-id="86f72-645">It then instantiates a <xref:System.Globalization.CultureInfo> object that corresponds to that locale.</span></span> <span data-ttu-id="86f72-646"><xref:System.Globalization.NumberFormatInfo>所屬的物件<xref:System.Globalization.CultureInfo>物件會傳遞至<xref:System.Double.Parse%28System.String%2CSystem.IFormatProvider%29>方法，將轉換使用者輸入的目標<xref:System.Double>值。</span><span class="sxs-lookup"><span data-stu-id="86f72-646">The <xref:System.Globalization.NumberFormatInfo> object that belongs to that <xref:System.Globalization.CultureInfo> object is then passed to the <xref:System.Double.Parse%28System.String%2CSystem.IFormatProvider%29> method to convert the user's input to a <xref:System.Double> value.</span></span>  
  
 [!code-csharp[ParseMethod#2](~/samples/snippets/csharp/VS_Snippets_CLR/ParseMethod/cs/Default.aspx.cs#2)]
 [!code-vb[ParseMethod#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/ParseMethod/vb/Default.aspx.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="86f72-647">
            <paramref name="s" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-647">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="86f72-648">
            <paramref name="s" /> 並不代表有效格式的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-648">
              <paramref name="s" /> does not represent a number in a valid format.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="86f72-649">
            <paramref name="s" /> 代表小於 <see cref="F:System.Double.MinValue" /> 或大於 <see cref="F:System.Double.MaxValue" /> 的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-649">
              <paramref name="s" /> represents a number that is less than <see cref="F:System.Double.MinValue" /> or greater than <see cref="F:System.Double.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Double.ToString" />
        <altmember cref="Overload:System.Double.TryParse" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static double Parse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style = System.Globalization.NumberStyles.AllowDecimalPoint | System.Globalization.NumberStyles.AllowExponent | System.Globalization.NumberStyles.AllowLeadingSign | System.Globalization.NumberStyles.AllowLeadingWhite | System.Globalization.NumberStyles.AllowThousands | System.Globalization.NumberStyles.AllowTrailingWhite | System.Globalization.NumberStyles.Float | System.Globalization.NumberStyles.Integer, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Parse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As ReadOnlySpan(Of Char), Optional style As NumberStyles = System.Globalization.NumberStyles.AllowDecimalPoint | System.Globalization.NumberStyles.AllowExponent | System.Globalization.NumberStyles.AllowLeadingSign | System.Globalization.NumberStyles.AllowLeadingWhite | System.Globalization.NumberStyles.AllowThousands | System.Globalization.NumberStyles.AllowTrailingWhite | System.Globalization.NumberStyles.Float | System.Globalization.NumberStyles.Integer, Optional provider As IFormatProvider = null) As Double" />
      <MemberSignature Language="F#" Value="static member Parse : ReadOnlySpan&lt;char&gt; * System.Globalization.NumberStyles * IFormatProvider -&gt; double" Usage="System.double.Parse (s, style, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="style">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static double Parse (string s, System.Globalization.NumberStyles style, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Parse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, style As NumberStyles, provider As IFormatProvider) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Parse(System::String ^ s, System::Globalization::NumberStyles style, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member Parse : string * System.Globalization.NumberStyles * IFormatProvider -&gt; double" Usage="System.double.Parse (s, style, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="86f72-650">字串，包含要轉換的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-650">A string that contains a number to convert.</span>
          </span>
        </param>
        <param name="style">
          <span data-ttu-id="86f72-651">列舉值的位元組合，表示 <c>s</c> 中可以存在的樣式元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-651">A bitwise combination of enumeration values that indicate the style elements that can be present in <c>s</c>.</span>
          </span>
          <span data-ttu-id="86f72-652">要指定的一般值為 <see cref="F:System.Globalization.NumberStyles.Float" /> 和 <see cref="F:System.Globalization.NumberStyles.AllowThousands" /> 的組合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-652">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Float" /> combined with <see cref="F:System.Globalization.NumberStyles.AllowThousands" />.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="86f72-653">物件，提供關於 <c>s</c> 的文化特性特定格式資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-653">An object that supplies culture-specific formatting information about <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86f72-654">使用指定樣式和特定文化特性格式，將數字的字串表示轉換為其相等的雙精確度浮點數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-654">Converts the string representation of a number in a specified style and culture-specific format to its double-precision floating-point number equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86f72-655">雙精確度浮點數，與 <paramref name="s" /> 中指定的數值或符號相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-655">A double-precision floating-point number that is equivalent to the numeric value or symbol specified in <paramref name="s" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86f72-656">`style`參數定義的樣式項目 (例如空格、 千分位分隔符號和貨幣符號) 中允許`s`剖析作業成功的參數。</span><span class="sxs-lookup"><span data-stu-id="86f72-656">The `style` parameter defines the style elements (such as white space, thousands separators, and currency symbols) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="86f72-657">它必須是從位元旗標的組合<xref:System.Globalization.NumberStyles>列舉型別。</span><span class="sxs-lookup"><span data-stu-id="86f72-657">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="86f72-658">下列<xref:System.Globalization.NumberStyles>不支援的成員：</span><span class="sxs-lookup"><span data-stu-id="86f72-658">The following <xref:System.Globalization.NumberStyles> members are not supported:</span></span>  
  
-   <xref:System.Globalization.NumberStyles.AllowHexSpecifier>  
  
-   <xref:System.Globalization.NumberStyles.HexNumber>  
  
 <span data-ttu-id="86f72-659">`s`參數可以包含<xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A?displayProperty=nameWithType>， <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A?displayProperty=nameWithType>，或<xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A?displayProperty=nameWithType>所指定的文化特性`provider`。</span><span class="sxs-lookup"><span data-stu-id="86f72-659">The `s` parameter can contain <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A?displayProperty=nameWithType>, <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A?displayProperty=nameWithType>, or <xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A?displayProperty=nameWithType> for the culture specified by `provider`.</span></span> <span data-ttu-id="86f72-660">值而定`style`，它也可以採用格式：</span><span class="sxs-lookup"><span data-stu-id="86f72-660">Depending on the value of `style`, it can also take the form:</span></span>  
  
 <span data-ttu-id="86f72-661">[*ws*] [*$*] [*登*] [*整數位數*，]*整數位數*[。 [*小數位數*]][E [*號*]*指數數字*] [*ws*]</span><span class="sxs-lookup"><span data-stu-id="86f72-661">[*ws*] [*$*] [*sign*][*integral-digits*,]*integral-digits*[.[*fractional-digits*]][E[*sign*]*exponential-digits*][*ws*]</span></span>  
  
 <span data-ttu-id="86f72-662">在方括號 （[和]） 是選用項目。</span><span class="sxs-lookup"><span data-stu-id="86f72-662">Elements framed in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="86f72-663">下表說明每個元素。</span><span class="sxs-lookup"><span data-stu-id="86f72-663">The following table describes each element.</span></span>  
  
|<span data-ttu-id="86f72-664">元素</span><span class="sxs-lookup"><span data-stu-id="86f72-664">Element</span></span>|<span data-ttu-id="86f72-665">描述</span><span class="sxs-lookup"><span data-stu-id="86f72-665">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="86f72-666">*ws*</span><span class="sxs-lookup"><span data-stu-id="86f72-666">*ws*</span></span>|<span data-ttu-id="86f72-667">一系列的泛空白字元。</span><span class="sxs-lookup"><span data-stu-id="86f72-667">A series of white-space characters.</span></span> <span data-ttu-id="86f72-668">空白字元可以出現在開頭`s`如果`style`包含<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>旗標，也可以顯示在結尾`s`如果`style`包含<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="86f72-668">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|$|<span data-ttu-id="86f72-669">特定文化特性的貨幣符號。</span><span class="sxs-lookup"><span data-stu-id="86f72-669">A culture-specific currency symbol.</span></span> <span data-ttu-id="86f72-670">在字串中的位置由定義<xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType>和<xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType>目前文化特性的屬性。</span><span class="sxs-lookup"><span data-stu-id="86f72-670">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> properties of the current culture.</span></span> <span data-ttu-id="86f72-671">目前的文化特性的貨幣符號會出現在`s`如果`style`包含<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="86f72-671">The current culture's currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="86f72-672">*簽署*</span><span class="sxs-lookup"><span data-stu-id="86f72-672">*sign*</span></span>|<span data-ttu-id="86f72-673">負號符號 （-） 或正號符號 （+）。</span><span class="sxs-lookup"><span data-stu-id="86f72-673">A negative sign symbol (-) or a positive sign symbol (+).</span></span> <span data-ttu-id="86f72-674">符號可以出現在開頭`s`如果`style`包含<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>旗標，也可以顯示在結尾`s`如果`style`包含<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="86f72-674">The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="86f72-675">可用於括號`s`表示負值`style`包含<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="86f72-675">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="86f72-676">*整數數字*</span><span class="sxs-lookup"><span data-stu-id="86f72-676">*integral-digits*</span></span>|<span data-ttu-id="86f72-677">一系列數字範圍從 0 到 9 的指定數目的整數部分。</span><span class="sxs-lookup"><span data-stu-id="86f72-677">A series of digits ranging from 0 to 9 that specify the integral part of the number.</span></span> <span data-ttu-id="86f72-678">*整數位數*項目可以是若字串包含*小數位數*項目。</span><span class="sxs-lookup"><span data-stu-id="86f72-678">The *integral-digits* element can be absent if the string contains the *fractional-digits* element.</span></span>|  
|<span data-ttu-id="86f72-679">,</span><span class="sxs-lookup"><span data-stu-id="86f72-679">,</span></span>|<span data-ttu-id="86f72-680">特定文化特性的群組分隔符號。</span><span class="sxs-lookup"><span data-stu-id="86f72-680">A culture-specific group separator.</span></span> <span data-ttu-id="86f72-681">目前的文化特性的群組分隔符號可以出現在`s`如果`style`包含<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>旗標</span><span class="sxs-lookup"><span data-stu-id="86f72-681">The current culture's group separator symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag</span></span>|  
|<span data-ttu-id="86f72-682">。</span><span class="sxs-lookup"><span data-stu-id="86f72-682">.</span></span>|<span data-ttu-id="86f72-683">特定文化特性的貨幣符號。</span><span class="sxs-lookup"><span data-stu-id="86f72-683">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="86f72-684">目前的文化特性的貨幣符號會出現在`s`如果`style`包含<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="86f72-684">The current culture's decimal point symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="86f72-685">*fractional-digits*</span><span class="sxs-lookup"><span data-stu-id="86f72-685">*fractional-digits*</span></span>|<span data-ttu-id="86f72-686">一系列數字範圍從 0 到 9 的指定數字的小數部分。</span><span class="sxs-lookup"><span data-stu-id="86f72-686">A series of digits ranging from 0 to 9 that specify the fractional part of the number.</span></span> <span data-ttu-id="86f72-687">小數點後數字可以出現在`s`如果`style`包含<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="86f72-687">Fractional digits can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="86f72-688">E</span><span class="sxs-lookup"><span data-stu-id="86f72-688">E</span></span>|<span data-ttu-id="86f72-689">"E"或者"E"字元，表示代表的值時，會以指數 （科學記號） 標記法。</span><span class="sxs-lookup"><span data-stu-id="86f72-689">The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</span></span> <span data-ttu-id="86f72-690">`s`參數可代表指數標記法之數字，如果`style`包含<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="86f72-690">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="86f72-691">*指數數字*</span><span class="sxs-lookup"><span data-stu-id="86f72-691">*exponential-digits*</span></span>|<span data-ttu-id="86f72-692">一系列的範圍從 0 到 9 指定指數的數字。</span><span class="sxs-lookup"><span data-stu-id="86f72-692">A series of digits ranging from 0 to 9 that specify an exponent.</span></span>|  
  
 <span data-ttu-id="86f72-693">只有數字的字串 (對應至<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>樣式) 一律會成功剖析。</span><span class="sxs-lookup"><span data-stu-id="86f72-693">A string with digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully.</span></span> <span data-ttu-id="86f72-694">其餘<xref:System.Globalization.NumberStyles?displayProperty=nameWithType>成員控制可能存在，但不是一定要出現在輸入字串的項目。</span><span class="sxs-lookup"><span data-stu-id="86f72-694">The remaining <xref:System.Globalization.NumberStyles?displayProperty=nameWithType> members control elements that may be present, but are not required to be present, in the input string.</span></span> <span data-ttu-id="86f72-695">下表指出如何個別<xref:System.Globalization.NumberStyles>旗標會影響可能會出現在項目`s`。</span><span class="sxs-lookup"><span data-stu-id="86f72-695">The following table indicates how individual <xref:System.Globalization.NumberStyles> flags affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="86f72-696">NumberStyles 值</span><span class="sxs-lookup"><span data-stu-id="86f72-696">NumberStyles value</span></span>|<span data-ttu-id="86f72-697">中的項目允許`s`除了數字</span><span class="sxs-lookup"><span data-stu-id="86f72-697">Elements permitted in `s` in addition to digits</span></span>|  
|------------------------|-----------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None>|<span data-ttu-id="86f72-698">*整數位數*只有項目。</span><span class="sxs-lookup"><span data-stu-id="86f72-698">The *integral-digits* element only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|<span data-ttu-id="86f72-699">小數點 (*。*) 和*小數位數*項目。</span><span class="sxs-lookup"><span data-stu-id="86f72-699">The decimal point (*.*) and *fractional-digits* elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent>|<span data-ttu-id="86f72-700">"E"或者"E"字元，這表示指數標記法。</span><span class="sxs-lookup"><span data-stu-id="86f72-700">The "e" or "E" character, which indicates exponential notation.</span></span> <span data-ttu-id="86f72-701">這個旗標本身支援值形式*數字*E*數字*; 其他旗標才能成功剖析項目像是正或負號和小數點符號的字串。</span><span class="sxs-lookup"><span data-stu-id="86f72-701">This flag by itself supports values in the form *digits*E*digits*; additional flags are needed to successfully parse strings with such elements as positive or negative signs and decimal point symbols.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|<span data-ttu-id="86f72-702">*Ws*開頭的項目`s`。</span><span class="sxs-lookup"><span data-stu-id="86f72-702">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|<span data-ttu-id="86f72-703">*Ws*結尾的項目`s`。</span><span class="sxs-lookup"><span data-stu-id="86f72-703">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|<span data-ttu-id="86f72-704">*號*開頭的項目`s`。</span><span class="sxs-lookup"><span data-stu-id="86f72-704">The *sign* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|<span data-ttu-id="86f72-705">*號*結尾的項目`s`。</span><span class="sxs-lookup"><span data-stu-id="86f72-705">The *sign* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses>|<span data-ttu-id="86f72-706">*號*括號括住的數字值的形式的項目。</span><span class="sxs-lookup"><span data-stu-id="86f72-706">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands>|<span data-ttu-id="86f72-707">千分位分隔符號 （，） 項目。</span><span class="sxs-lookup"><span data-stu-id="86f72-707">The thousands separator (,) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|<span data-ttu-id="86f72-708">貨幣 （$） 的項目。</span><span class="sxs-lookup"><span data-stu-id="86f72-708">The currency ($) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency>|<span data-ttu-id="86f72-709">所有項目。</span><span class="sxs-lookup"><span data-stu-id="86f72-709">All elements.</span></span> <span data-ttu-id="86f72-710">不過，`s`無法表示十六進位數字或指數標記法之數字。</span><span class="sxs-lookup"><span data-stu-id="86f72-710">However, `s` cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float>|<span data-ttu-id="86f72-711">*Ws*元素的開頭或結尾`s`，*登*開頭`s`，且小數點 （.） 的符號。</span><span class="sxs-lookup"><span data-stu-id="86f72-711">The *ws* element at the beginning or end of `s`, *sign* at the beginning of `s`, and the decimal point (.) symbol.</span></span> <span data-ttu-id="86f72-712">`s`參數也可以使用指數標記法。</span><span class="sxs-lookup"><span data-stu-id="86f72-712">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number>|<span data-ttu-id="86f72-713">`ws`， `sign`，千分位 （，） 符號和小數點 （.） 項目。</span><span class="sxs-lookup"><span data-stu-id="86f72-713">The `ws`, `sign`, thousands separator (,) and decimal point (.) elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any>|<span data-ttu-id="86f72-714">所有項目。</span><span class="sxs-lookup"><span data-stu-id="86f72-714">All elements.</span></span> <span data-ttu-id="86f72-715">不過，`s`無法代表十六進位數字。</span><span class="sxs-lookup"><span data-stu-id="86f72-715">However, `s` cannot represent a hexadecimal number.</span></span>|  
  
 <span data-ttu-id="86f72-716">`provider`參數是<xref:System.IFormatProvider>實作其<xref:System.IFormatProvider.GetFormat%2A>方法會傳回<xref:System.Globalization.NumberFormatInfo>物件，提供特定文化特性的資訊用於解譯的格式`s`。</span><span class="sxs-lookup"><span data-stu-id="86f72-716">The `provider` parameter is an <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that supplies culture-specific information used in interpreting the format of `s`.</span></span> <span data-ttu-id="86f72-717">一般來說，這是<xref:System.Globalization.NumberFormatInfo>或<xref:System.Globalization.CultureInfo>物件。</span><span class="sxs-lookup"><span data-stu-id="86f72-717">Typically, it is a <xref:System.Globalization.NumberFormatInfo> or <xref:System.Globalization.CultureInfo> object.</span></span> <span data-ttu-id="86f72-718">如果`provider`已`null`或<xref:System.Globalization.NumberFormatInfo>無法取得，格式設定資訊會使用目前的系統文化特性。</span><span class="sxs-lookup"><span data-stu-id="86f72-718">If `provider` is `null` or a <xref:System.Globalization.NumberFormatInfo> cannot be obtained, the formatting information for the current system culture is used.</span></span>  
  
 <span data-ttu-id="86f72-719">一般情況下，如果您傳遞<xref:System.Double.Parse%2A?displayProperty=nameWithType>字串，由呼叫的方法<xref:System.Double.ToString%2A?displayProperty=nameWithType>方法中，原始<xref:System.Double>會傳回值。</span><span class="sxs-lookup"><span data-stu-id="86f72-719">Ordinarily, if you pass the <xref:System.Double.Parse%2A?displayProperty=nameWithType> method a string that is created by calling the <xref:System.Double.ToString%2A?displayProperty=nameWithType> method, the original <xref:System.Double> value is returned.</span></span> <span data-ttu-id="86f72-720">不過，因為遺失有效位數，值可能不會相等。</span><span class="sxs-lookup"><span data-stu-id="86f72-720">However, because of a loss of precision, the values may not be equal.</span></span> <span data-ttu-id="86f72-721">此外，嘗試剖析的字串表示法<xref:System.Double.MinValue>或是<xref:System.Double.MaxValue>就會擲回<xref:System.OverflowException>，如下列範例所示。</span><span class="sxs-lookup"><span data-stu-id="86f72-721">In addition, attempting to parse the string representation of either <xref:System.Double.MinValue> or <xref:System.Double.MaxValue> throws an <xref:System.OverflowException>, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Double.Parse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double.Parse/cs/parse2.cs#3)]
 [!code-vb[System.Double.Parse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double.Parse/vb/parse2.vb#3)]  
  
 <span data-ttu-id="86f72-722">如果出現在分隔符號`s`參數在剖析作業中，在適用的貨幣或十進位數字期間及群組分隔符號相同，則剖析作業會假設分隔符號是小數分隔符號，而不是群組分隔符號。</span><span class="sxs-lookup"><span data-stu-id="86f72-722">If a separator is encountered in the `s` parameter during a parse operation, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</span></span> <span data-ttu-id="86f72-723">如需分隔符號的詳細資訊，請參閱<xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>， <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>， <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>，和<xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>。</span><span class="sxs-lookup"><span data-stu-id="86f72-723">For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86f72-724">下列範例示範如何將<xref:System.Double.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29>方法，以指派的溫度值的多個字串表示`Temperature`物件。</span><span class="sxs-lookup"><span data-stu-id="86f72-724">The following example illustrates the use of the <xref:System.Double.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> method to assign several string representations of temperature values to a `Temperature` object.</span></span>  
  
 [!code-csharp[System.Double.Parse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double.Parse/cs/Parse3.cs#2)]
 [!code-vb[System.Double.Parse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double.Parse/vb/Parse3.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="86f72-725">
            <paramref name="s" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-725">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="86f72-726">
            <paramref name="s" /> 不表示為數值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-726">
              <paramref name="s" /> does not represent a numeric value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="86f72-727">
            <paramref name="style" /> 不是 <see cref="T:System.Globalization.NumberStyles" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-727">
              <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span>
          </span>
          <span data-ttu-id="86f72-728">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-728">-or-</span>
          </span>
          <span data-ttu-id="86f72-729">
            <paramref name="style" /> 是 <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-729">
              <paramref name="style" /> is the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="86f72-730">
            <paramref name="s" /> 代表小於 <see cref="F:System.Double.MinValue" /> 或大於 <see cref="F:System.Double.MaxValue" /> 的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-730">
              <paramref name="s" /> represents a number that is less than <see cref="F:System.Double.MinValue" /> or greater than <see cref="F:System.Double.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Double.ToString" />
      </Docs>
    </Member>
    <Member MemberName="PositiveInfinity">
      <MemberSignature Language="C#" Value="public const double PositiveInfinity = Infinity;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float64 PositiveInfinity = float64(Infinity)" />
      <MemberSignature Language="DocId" Value="F:System.Double.PositiveInfinity" />
      <MemberSignature Language="VB.NET" Value="Public Const PositiveInfinity As Double  = Infinity" />
      <MemberSignature Language="C++ CLI" Value="public: double PositiveInfinity = Infinity;" />
      <MemberSignature Language="F#" Value="val mutable PositiveInfinity : double" Usage="System.double.PositiveInfinity" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <MemberValue>Infinity</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="86f72-731">表示正無限大。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-731">Represents positive infinity.</span>
          </span>
          <span data-ttu-id="86f72-732">這個欄位是常數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-732">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86f72-733">這個常數的值是正數除以零的結果。</span><span class="sxs-lookup"><span data-stu-id="86f72-733">The value of this constant is the result of dividing a positive number by zero.</span></span>  
  
 <span data-ttu-id="86f72-734">大於運算的結果時，會傳回這個常數<xref:System.Double.MaxValue>。</span><span class="sxs-lookup"><span data-stu-id="86f72-734">This constant is returned when the result of an operation is greater than <xref:System.Double.MaxValue>.</span></span>  
  
 <span data-ttu-id="86f72-735">使用<xref:System.Double.IsPositiveInfinity%2A>來判斷值是否計算結果為正無限大。</span><span class="sxs-lookup"><span data-stu-id="86f72-735">Use <xref:System.Double.IsPositiveInfinity%2A> to determine whether a value evaluates to positive infinity.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86f72-736">下列程式碼範例示範如何將<xref:System.Double.PositiveInfinity>:</span><span class="sxs-lookup"><span data-stu-id="86f72-736">The following code example illustrates the use of <xref:System.Double.PositiveInfinity>:</span></span>  
  
 [!code-cpp[System.Double#10](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Double/CPP/doublesample.cpp#10)]
 [!code-csharp[System.Double#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double/CS/doublesample.cs#10)]
 [!code-vb[System.Double#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double/VB/doublesample.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Double.IsPositiveInfinity(System.Double)" />
        <altmember cref="M:System.Double.IsInfinity(System.Double)" />
        <altmember cref="F:System.Double.NegativeInfinity" />
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (value As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ value) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.GetTypeCode">
      <MemberSignature Language="C#" Value="TypeCode IConvertible.GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.TypeCode System.IConvertible.GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.System#IConvertible#GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Function GetTypeCode () As TypeCode Implements IConvertible.GetTypeCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual TypeCode System.IConvertible.GetTypeCode() = IConvertible::GetTypeCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToBoolean">
      <MemberSignature Language="C#" Value="bool IConvertible.ToBoolean (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IConvertible.ToBoolean(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.System#IConvertible#ToBoolean(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToBoolean (provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.IConvertible.ToBoolean(IFormatProvider ^ provider) = IConvertible::ToBoolean;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToBoolean(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="86f72-737">這個參數已忽略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-737">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86f72-738">如需這個成員的說明，請參閱 <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-738">For a description of this member, see <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86f72-739">如果目前執行個體的值不是零則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-739">
              <see langword="true" /> if the value of the current instance is not zero; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86f72-740">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="86f72-740">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="86f72-741">只有在 <xref:System.Double> 執行個體轉換成 <xref:System.IConvertible> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="86f72-741">It can be used only when the <xref:System.Double> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="86f72-742">建議的替代做法是呼叫<xref:System.Convert.ToBoolean%28System.Double%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="86f72-742">The recommended alternative is to call the <xref:System.Convert.ToBoolean%28System.Double%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToByte">
      <MemberSignature Language="C#" Value="byte IConvertible.ToByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int8 System.IConvertible.ToByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.System#IConvertible#ToByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToByte (provider As IFormatProvider) As Byte Implements IConvertible.ToByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Byte System.IConvertible.ToByte(IFormatProvider ^ provider) = IConvertible::ToByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="86f72-743">這個參數已忽略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-743">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86f72-744">如需這個成員的說明，請參閱 <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-744">For a description of this member, see <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86f72-745">目前執行個體的值，轉換為 <see cref="T:System.Byte" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-745">The value of the current instance, converted to a <see cref="T:System.Byte" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86f72-746">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="86f72-746">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="86f72-747">只有在 <xref:System.Double> 執行個體轉換成 <xref:System.IConvertible> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="86f72-747">It can be used only when the <xref:System.Double> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="86f72-748">建議的替代做法是呼叫<xref:System.Convert.ToByte%28System.Double%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="86f72-748">The recommended alternative is to call the <xref:System.Convert.ToByte%28System.Double%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToChar">
      <MemberSignature Language="C#" Value="char IConvertible.ToChar (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance char System.IConvertible.ToChar(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.System#IConvertible#ToChar(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToChar (provider As IFormatProvider) As Char Implements IConvertible.ToChar" />
      <MemberSignature Language="C++ CLI" Value=" virtual char System.IConvertible.ToChar(IFormatProvider ^ provider) = IConvertible::ToChar;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToChar(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="86f72-749">這個參數已忽略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-749">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86f72-750">不支援這個轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-750">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="86f72-751">嘗試使用這個方法會擲回 <see cref="T:System.InvalidCastException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-751">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86f72-752">不支援這個轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-752">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="86f72-753">沒有傳回值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-753">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="86f72-754">在所有情況下。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-754">In all cases.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDateTime">
      <MemberSignature Language="C#" Value="DateTime IConvertible.ToDateTime (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.DateTime System.IConvertible.ToDateTime(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.System#IConvertible#ToDateTime(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDateTime (provider As IFormatProvider) As DateTime Implements IConvertible.ToDateTime" />
      <MemberSignature Language="C++ CLI" Value=" virtual DateTime System.IConvertible.ToDateTime(IFormatProvider ^ provider) = IConvertible::ToDateTime;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDateTime(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="86f72-755">這個參數已忽略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-755">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86f72-756">不支援這個轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-756">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="86f72-757">嘗試使用這個方法會擲回 <see cref="T:System.InvalidCastException" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-757">Attempting to use this method throws an <see cref="T:System.InvalidCastException" /></span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86f72-758">不支援這個轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-758">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="86f72-759">沒有傳回值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-759">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="86f72-760">在所有情況下。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-760">In all cases.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDecimal">
      <MemberSignature Language="C#" Value="decimal IConvertible.ToDecimal (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Decimal System.IConvertible.ToDecimal(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.System#IConvertible#ToDecimal(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDecimal (provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Decimal System.IConvertible.ToDecimal(IFormatProvider ^ provider) = IConvertible::ToDecimal;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDecimal(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="86f72-761">這個參數已忽略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-761">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86f72-762">如需這個成員的說明，請參閱 <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-762">For a description of this member, see <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86f72-763">目前執行個體的值，轉換為 <see cref="T:System.Decimal" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-763">The value of the current instance, converted to a <see cref="T:System.Decimal" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86f72-764">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="86f72-764">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="86f72-765">只有在 <xref:System.Double> 執行個體轉換成 <xref:System.IConvertible> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="86f72-765">It can be used only when the <xref:System.Double> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="86f72-766">建議的替代做法是呼叫<xref:System.Convert.ToDecimal%28System.Double%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="86f72-766">The recommended alternative is to call the <xref:System.Convert.ToDecimal%28System.Double%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDouble">
      <MemberSignature Language="C#" Value="double IConvertible.ToDouble (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float64 System.IConvertible.ToDouble(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.System#IConvertible#ToDouble(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDouble (provider As IFormatProvider) As Double Implements IConvertible.ToDouble" />
      <MemberSignature Language="C++ CLI" Value=" virtual double System.IConvertible.ToDouble(IFormatProvider ^ provider) = IConvertible::ToDouble;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDouble(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="86f72-767">這個參數已忽略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-767">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86f72-768">如需這個成員的說明，請參閱 <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-768">For a description of this member, see <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86f72-769">目前執行個體的值，未變更。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-769">The value of the current instance, unchanged.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86f72-770">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="86f72-770">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="86f72-771">只有在 <xref:System.Double> 執行個體轉換成 <xref:System.IConvertible> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="86f72-771">It can be used only when the <xref:System.Double> instance is cast to an <xref:System.IConvertible> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt16">
      <MemberSignature Language="C#" Value="short IConvertible.ToInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int16 System.IConvertible.ToInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.System#IConvertible#ToInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt16 (provider As IFormatProvider) As Short Implements IConvertible.ToInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual short System.IConvertible.ToInt16(IFormatProvider ^ provider) = IConvertible::ToInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="86f72-772">這個參數已忽略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-772">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86f72-773">如需這個成員的說明，請參閱 <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-773">For a description of this member, see <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86f72-774">目前執行個體的值，轉換為 <see cref="T:System.Int16" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-774">The value of the current instance, converted to an <see cref="T:System.Int16" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86f72-775">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="86f72-775">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="86f72-776">只有在 <xref:System.Double> 執行個體轉換成 <xref:System.IConvertible> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="86f72-776">It can be used only when the <xref:System.Double> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="86f72-777">建議的替代做法是呼叫<xref:System.Convert.ToInt16%28System.Double%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="86f72-777">The recommended alternative is to call the <xref:System.Convert.ToInt16%28System.Double%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt32">
      <MemberSignature Language="C#" Value="int IConvertible.ToInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IConvertible.ToInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.System#IConvertible#ToInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt32 (provider As IFormatProvider) As Integer Implements IConvertible.ToInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IConvertible.ToInt32(IFormatProvider ^ provider) = IConvertible::ToInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="86f72-778">這個參數已忽略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-778">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86f72-779">如需這個成員的說明，請參閱 <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-779">For a description of this member, see <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86f72-780">目前執行個體的值，轉換為 <see cref="T:System.Int32" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-780">The value of the current instance, converted to an <see cref="T:System.Int32" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86f72-781">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="86f72-781">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="86f72-782">只有在 <xref:System.Double> 執行個體轉換成 <xref:System.IConvertible> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="86f72-782">It can be used only when the <xref:System.Double> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="86f72-783">建議的替代做法是呼叫<xref:System.Convert.ToInt32%28System.Double%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="86f72-783">The recommended alternative is to call the <xref:System.Convert.ToInt32%28System.Double%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt64">
      <MemberSignature Language="C#" Value="long IConvertible.ToInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int64 System.IConvertible.ToInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.System#IConvertible#ToInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt64 (provider As IFormatProvider) As Long Implements IConvertible.ToInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual long System.IConvertible.ToInt64(IFormatProvider ^ provider) = IConvertible::ToInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="86f72-784">這個參數已忽略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-784">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86f72-785">如需這個成員的說明，請參閱 <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-785">For a description of this member, see <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86f72-786">目前執行個體的值，轉換為 <see cref="T:System.Int64" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-786">The value of the current instance, converted to an <see cref="T:System.Int64" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86f72-787">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="86f72-787">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="86f72-788">只有在 <xref:System.Double> 執行個體轉換成 <xref:System.IConvertible> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="86f72-788">It can be used only when the <xref:System.Double> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="86f72-789">建議的替代做法是呼叫<xref:System.Convert.ToInt64%28System.Double%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="86f72-789">The recommended alternative is to call the <xref:System.Convert.ToInt64%28System.Double%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSByte">
      <MemberSignature Language="C#" Value="sbyte IConvertible.ToSByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int8 System.IConvertible.ToSByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.System#IConvertible#ToSByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSByte (provider As IFormatProvider) As SByte Implements IConvertible.ToSByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::SByte System.IConvertible.ToSByte(IFormatProvider ^ provider) = IConvertible::ToSByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="86f72-790">這個參數已忽略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-790">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86f72-791">如需這個成員的說明，請參閱 <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-791">For a description of this member, see <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86f72-792">目前執行個體的值，轉換為 <see cref="T:System.SByte" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-792">The value of the current instance, converted to an <see cref="T:System.SByte" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86f72-793">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="86f72-793">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="86f72-794">只有在 <xref:System.Double> 執行個體轉換成 <xref:System.IConvertible> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="86f72-794">It can be used only when the <xref:System.Double> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="86f72-795">建議的替代做法是呼叫<xref:System.Convert.ToSByte%28System.Double%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="86f72-795">The recommended alternative is to call the <xref:System.Convert.ToSByte%28System.Double%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSingle">
      <MemberSignature Language="C#" Value="float IConvertible.ToSingle (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float32 System.IConvertible.ToSingle(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.System#IConvertible#ToSingle(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSingle (provider As IFormatProvider) As Single Implements IConvertible.ToSingle" />
      <MemberSignature Language="C++ CLI" Value=" virtual float System.IConvertible.ToSingle(IFormatProvider ^ provider) = IConvertible::ToSingle;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSingle(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="86f72-796">這個參數已忽略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-796">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86f72-797">如需這個成員的說明，請參閱 <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-797">For a description of this member, see <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86f72-798">目前執行個體的值，轉換為 <see cref="T:System.Single" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-798">The value of the current instance, converted to a <see cref="T:System.Single" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86f72-799">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="86f72-799">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="86f72-800">只有在 <xref:System.Double> 執行個體轉換成 <xref:System.IConvertible> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="86f72-800">It can be used only when the <xref:System.Double> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="86f72-801">建議的替代做法是呼叫<xref:System.Convert.ToSingle%28System.Double%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="86f72-801">The recommended alternative is to call the <xref:System.Convert.ToSingle%28System.Double%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToType">
      <MemberSignature Language="C#" Value="object IConvertible.ToType (Type type, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IConvertible.ToType(class System.Type type, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.System#IConvertible#ToType(System.Type,System.IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IConvertible.ToType(Type ^ type, IFormatProvider ^ provider) = IConvertible::ToType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToType(System.Type,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="86f72-802">此 <see cref="T:System.Double" /> 值轉換所得的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-802">The type to which to convert this <see cref="T:System.Double" /> value.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="86f72-803">
            <see cref="T:System.IFormatProvider" /> 實作，提供傳回值格式的相關特定文化特性資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-803">An <see cref="T:System.IFormatProvider" /> implementation that supplies culture-specific information about the format of the returned value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86f72-804">如需這個成員的說明，請參閱 <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-804">For a description of this member, see <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86f72-805">目前執行個體的值，轉換為 <paramref name="type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-805">The value of the current instance, converted to <paramref name="type" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86f72-806">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="86f72-806">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="86f72-807">只有在 <xref:System.Double> 執行個體轉換成 <xref:System.IConvertible> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="86f72-807">It can be used only when the <xref:System.Double> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="86f72-808">建議的替代做法是呼叫`static`(`Shared` Visual Basic 中)<xref:System.Convert.ChangeType%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="86f72-808">The recommended alternative is to call the `static` (`Shared` in Visual Basic) <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt16">
      <MemberSignature Language="C#" Value="ushort IConvertible.ToUInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int16 System.IConvertible.ToUInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.System#IConvertible#ToUInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt16 (provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt16 System.IConvertible.ToUInt16(IFormatProvider ^ provider) = IConvertible::ToUInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="86f72-809">這個參數已忽略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-809">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86f72-810">如需這個成員的說明，請參閱 <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-810">For a description of this member, see <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86f72-811">目前執行個體的值，轉換為 <see cref="T:System.UInt16" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-811">The value of the current instance, converted to a <see cref="T:System.UInt16" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86f72-812">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="86f72-812">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="86f72-813">只有在 <xref:System.Double> 執行個體轉換成 <xref:System.IConvertible> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="86f72-813">It can be used only when the <xref:System.Double> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="86f72-814">建議的替代做法是呼叫<xref:System.Convert.ToUInt16%28System.Double%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="86f72-814">The recommended alternative is to call the <xref:System.Convert.ToUInt16%28System.Double%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt32">
      <MemberSignature Language="C#" Value="uint IConvertible.ToUInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int32 System.IConvertible.ToUInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.System#IConvertible#ToUInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt32 (provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt32 System.IConvertible.ToUInt32(IFormatProvider ^ provider) = IConvertible::ToUInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="86f72-815">這個參數已忽略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-815">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86f72-816">如需這個成員的說明，請參閱 <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-816">For a description of this member, see <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86f72-817">目前執行個體的值，轉換為 <see cref="T:System.UInt32" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-817">The value of the current instance, converted to a <see cref="T:System.UInt32" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86f72-818">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="86f72-818">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="86f72-819">只有在 <xref:System.Double> 執行個體轉換成 <xref:System.IConvertible> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="86f72-819">It can be used only when the <xref:System.Double> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="86f72-820">建議的替代做法是呼叫<xref:System.Convert.ToUInt32%28System.Double%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="86f72-820">The recommended alternative is to call the <xref:System.Convert.ToUInt32%28System.Double%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt64">
      <MemberSignature Language="C#" Value="ulong IConvertible.ToUInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int64 System.IConvertible.ToUInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.System#IConvertible#ToUInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt64 (provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt64 System.IConvertible.ToUInt64(IFormatProvider ^ provider) = IConvertible::ToUInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="86f72-821">這個參數已忽略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-821">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86f72-822">如需這個成員的說明，請參閱 <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-822">For a description of this member, see <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86f72-823">目前執行個體的值，轉換為 <see cref="T:System.UInt64" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-823">The value of the current instance, converted to a <see cref="T:System.UInt64" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86f72-824">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="86f72-824">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="86f72-825">只有在 <xref:System.Double> 執行個體轉換成 <xref:System.IConvertible> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="86f72-825">It can be used only when the <xref:System.Double> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="86f72-826">建議的替代做法是呼叫<xref:System.Convert.ToUInt64%28System.Double%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="86f72-826">The recommended alternative is to call the <xref:System.Convert.ToUInt64%28System.Double%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="86f72-827">將這個執行個體的數值轉換為它的相等字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-827">Converts the numeric value of this instance to its equivalent string representation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="double.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="86f72-828">將這個執行個體的數值轉換為它的相等字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-828">Converts the numeric value of this instance to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86f72-829">這個執行個體值的字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-829">The string representation of the value of this instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86f72-830"><xref:System.Double.ToString>方法格式<xref:System.Double>值預設值 （"G"或一般） 目前的文化特性的格式。</span><span class="sxs-lookup"><span data-stu-id="86f72-830">The <xref:System.Double.ToString> method formats a <xref:System.Double> value in the default ("G", or general) format of the current culture.</span></span> <span data-ttu-id="86f72-831">如果您想要指定不同的格式、 有效位數或文化特性，使用的其他多載<xref:System.Double.ToString%2A>方法，如下所示：</span><span class="sxs-lookup"><span data-stu-id="86f72-831">If you want to specify a different format, precision, or culture, use the other overloads of the <xref:System.Double.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="86f72-832">若要使用格式</span><span class="sxs-lookup"><span data-stu-id="86f72-832">To use format</span></span>|<span data-ttu-id="86f72-833">文化特性</span><span class="sxs-lookup"><span data-stu-id="86f72-833">For culture</span></span>|<span data-ttu-id="86f72-834">使用多載</span><span class="sxs-lookup"><span data-stu-id="86f72-834">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="86f72-835">預設值 ("G") 格式</span><span class="sxs-lookup"><span data-stu-id="86f72-835">Default ("G") format</span></span>|<span data-ttu-id="86f72-836">特定文化特性</span><span class="sxs-lookup"><span data-stu-id="86f72-836">A specific culture</span></span>|<xref:System.Double.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="86f72-837">特定的格式或有效位數</span><span class="sxs-lookup"><span data-stu-id="86f72-837">A specific format or precision</span></span>|<span data-ttu-id="86f72-838">預設值 （目前） 的文化特性</span><span class="sxs-lookup"><span data-stu-id="86f72-838">Default (current) culture</span></span>|<xref:System.Double.ToString%28System.String%29>|  
|<span data-ttu-id="86f72-839">特定的格式或有效位數</span><span class="sxs-lookup"><span data-stu-id="86f72-839">A specific format or precision</span></span>|<span data-ttu-id="86f72-840">特定文化特性</span><span class="sxs-lookup"><span data-stu-id="86f72-840">A specific culture</span></span>|<xref:System.Double.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="86f72-841">傳回值可以是<xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A>， <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A>， <xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A>，或格式的字串：</span><span class="sxs-lookup"><span data-stu-id="86f72-841">The return value can be <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A>, <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A>, <xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A>, or a string of the form:</span></span>  
  
 <span data-ttu-id="86f72-842">[sign]integral-digits[.[fractional-digits]][e[sign]exponential-digits]</span><span class="sxs-lookup"><span data-stu-id="86f72-842">[sign]integral-digits[.[fractional-digits]][e[sign]exponential-digits]</span></span>  
  
 <span data-ttu-id="86f72-843">選擇性的項目包覆在方括號 （[和]）。</span><span class="sxs-lookup"><span data-stu-id="86f72-843">Optional elements are framed in square brackets ([ and ]).</span></span> <span data-ttu-id="86f72-844">包含詞彙 「 數字 」 的項目是由一系列的範圍從 0 到 9 的數字字元所組成。</span><span class="sxs-lookup"><span data-stu-id="86f72-844">Elements that contain the term "digits" consist of a series of numeric characters ranging from 0 to 9.</span></span> <span data-ttu-id="86f72-845">支援下表列出的項目。</span><span class="sxs-lookup"><span data-stu-id="86f72-845">The elements listed in the following table are supported.</span></span>  
  
|<span data-ttu-id="86f72-846">元素</span><span class="sxs-lookup"><span data-stu-id="86f72-846">Element</span></span>|<span data-ttu-id="86f72-847">描述</span><span class="sxs-lookup"><span data-stu-id="86f72-847">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="86f72-848">*簽署*</span><span class="sxs-lookup"><span data-stu-id="86f72-848">*sign*</span></span>|<span data-ttu-id="86f72-849">負號或正號。</span><span class="sxs-lookup"><span data-stu-id="86f72-849">A negative sign or positive sign symbol.</span></span>|  
|<span data-ttu-id="86f72-850">*整數數字*</span><span class="sxs-lookup"><span data-stu-id="86f72-850">*integral-digits*</span></span>|<span data-ttu-id="86f72-851">一系列數字指定數目的整數部分。</span><span class="sxs-lookup"><span data-stu-id="86f72-851">A series of digits specifying the integral part of the number.</span></span> <span data-ttu-id="86f72-852">整數數字，可不存在有小數位數。</span><span class="sxs-lookup"><span data-stu-id="86f72-852">Integral-digits can be absent if there are fractional-digits.</span></span>|  
|<span data-ttu-id="86f72-853">'*.*'</span><span class="sxs-lookup"><span data-stu-id="86f72-853">'*.*'</span></span>|<span data-ttu-id="86f72-854">特定文化特性的貨幣符號。</span><span class="sxs-lookup"><span data-stu-id="86f72-854">A culture-specific decimal point symbol.</span></span>|  
|<span data-ttu-id="86f72-855">*fractional-digits*</span><span class="sxs-lookup"><span data-stu-id="86f72-855">*fractional-digits*</span></span>|<span data-ttu-id="86f72-856">指定數字之小數點後的數字。</span><span class="sxs-lookup"><span data-stu-id="86f72-856">A series of digits specifying the fractional part of the number.</span></span>|  
|<span data-ttu-id="86f72-857">'*e*'</span><span class="sxs-lookup"><span data-stu-id="86f72-857">'*e*'</span></span>|<span data-ttu-id="86f72-858">小寫字元 'e'，表示指數 （科學記號） 標記法。</span><span class="sxs-lookup"><span data-stu-id="86f72-858">A lowercase character 'e', indicating exponential (scientific) notation.</span></span>|  
|<span data-ttu-id="86f72-859">*指數數字*</span><span class="sxs-lookup"><span data-stu-id="86f72-859">*exponential-digits*</span></span>|<span data-ttu-id="86f72-860">一系列指定指數的數字。</span><span class="sxs-lookup"><span data-stu-id="86f72-860">A series of digits specifying an exponent.</span></span>|  
  
 <span data-ttu-id="86f72-861">傳回值的一些範例包括"100"、"-123,456,789"，"123.45 e + 6"、"500"、"3.1416"、"600"、"-0.123"和"-Infinity"。</span><span class="sxs-lookup"><span data-stu-id="86f72-861">Some examples of the return value are "100", "-123,456,789", "123.45e+6", "500", "3.1416", "600", "-0.123", and "-Infinity".</span></span>  
  
 <span data-ttu-id="86f72-862">.NET Framework 會提供廣泛的格式化支援，這會在下列格式化主題中的更詳細地說明：</span><span class="sxs-lookup"><span data-stu-id="86f72-862">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="86f72-863">如需有關數值格式規範的詳細資訊，請參閱[標準數值格式字串](~/docs/standard/base-types/standard-numeric-format-strings.md)並[自訂數值格式字串](~/docs/standard/base-types/custom-numeric-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="86f72-863">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="86f72-864">如需有關格式的詳細資訊，請參閱[格式化型別](~/docs/standard/base-types/formatting-types.md)。</span><span class="sxs-lookup"><span data-stu-id="86f72-864">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86f72-865">下列範例會使用預設值<xref:System.Double.ToString?displayProperty=nameWithType>方法，以顯示的數字的字串表示<xref:System.Double>值。</span><span class="sxs-lookup"><span data-stu-id="86f72-865">The following example uses the default <xref:System.Double.ToString?displayProperty=nameWithType> method to display the string representations of a number of <xref:System.Double> values.</span></span>  
  
 [!code-csharp[System.Double.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double.ToString/cs/ToString1.cs#1)]
 [!code-vb[System.Double.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double.ToString/vb/ToString1.vb#1)]  
  
 <span data-ttu-id="86f72-866">下列範例示範如何將<xref:System.Double.ToString%2A>。</span><span class="sxs-lookup"><span data-stu-id="86f72-866">The following example illustrates the use of <xref:System.Double.ToString%2A>.</span></span>  
  
 [!code-cpp[System.Double#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Double/CPP/doublesample.cpp#3)]
 [!code-csharp[System.Double#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double/CS/doublesample.cs#3)]
 [!code-vb[System.Double#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double/VB/doublesample.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Double.Parse(System.String)" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : IFormatProvider -&gt; string" Usage="double.ToString provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="86f72-867">物件，提供特定文化特性格式資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-867">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86f72-868">使用指定的特定文化特性格式資訊，將這個執行個體的數值轉換成它的相等字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-868">Converts the numeric value of this instance to its equivalent string representation using the specified culture-specific format information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86f72-869">這個執行個體值的字串表示，如同 <paramref name="provider" /> 所指定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-869">The string representation of the value of this instance as specified by <paramref name="provider" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86f72-870"><xref:System.Double.ToString%28System.IFormatProvider%29>方法格式<xref:System.Double>值預設值 （"G"或一般） 中指定的文化特性的格式。</span><span class="sxs-lookup"><span data-stu-id="86f72-870">The <xref:System.Double.ToString%28System.IFormatProvider%29> method formats a <xref:System.Double> value in the default ("G", or general) format of a specified culture.</span></span> <span data-ttu-id="86f72-871">如果您想要指定不同的格式或文化特性，使用的其他多載<xref:System.Double.ToString%2A>方法，如下所示：</span><span class="sxs-lookup"><span data-stu-id="86f72-871">If you want to specify a different format or culture, use the other overloads of the <xref:System.Double.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="86f72-872">若要使用格式</span><span class="sxs-lookup"><span data-stu-id="86f72-872">To use format</span></span>|<span data-ttu-id="86f72-873">文化特性</span><span class="sxs-lookup"><span data-stu-id="86f72-873">For culture</span></span>|<span data-ttu-id="86f72-874">使用多載</span><span class="sxs-lookup"><span data-stu-id="86f72-874">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="86f72-875">預設值 ("G") 格式</span><span class="sxs-lookup"><span data-stu-id="86f72-875">Default ("G") format</span></span>|<span data-ttu-id="86f72-876">預設值 （目前）</span><span class="sxs-lookup"><span data-stu-id="86f72-876">Default (current)</span></span>|<xref:System.Double.ToString>|  
|<span data-ttu-id="86f72-877">特定的格式或有效位數</span><span class="sxs-lookup"><span data-stu-id="86f72-877">A specific format or precision</span></span>|<span data-ttu-id="86f72-878">預設值 （目前） 的文化特性</span><span class="sxs-lookup"><span data-stu-id="86f72-878">Default (current) culture</span></span>|<xref:System.Double.ToString%28System.String%29>|  
|<span data-ttu-id="86f72-879">特定的格式或有效位數</span><span class="sxs-lookup"><span data-stu-id="86f72-879">A specific format or precision</span></span>|<span data-ttu-id="86f72-880">特定文化特性</span><span class="sxs-lookup"><span data-stu-id="86f72-880">A specific culture</span></span>|<xref:System.Double.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="86f72-881">傳回值可以是<xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A>， <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A>， <xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A>，或格式的字串：</span><span class="sxs-lookup"><span data-stu-id="86f72-881">The return value can be <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A>, <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A>, <xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A>, or a string of the form:</span></span>  
  
 <span data-ttu-id="86f72-882">[sign]integral-digits[.[fractional-digits]][e[sign]exponential-digits]</span><span class="sxs-lookup"><span data-stu-id="86f72-882">[sign]integral-digits[.[fractional-digits]][e[sign]exponential-digits]</span></span>  
  
 <span data-ttu-id="86f72-883">選擇性的項目包覆在方括號 （[和]）。</span><span class="sxs-lookup"><span data-stu-id="86f72-883">Optional elements are framed in square brackets ([ and ]).</span></span> <span data-ttu-id="86f72-884">包含詞彙 「 數字 」 的項目是由一系列的範圍從 0 到 9 的數字字元所組成。</span><span class="sxs-lookup"><span data-stu-id="86f72-884">Elements that contain the term "digits" consist of a series of numeric characters ranging from 0 to 9.</span></span> <span data-ttu-id="86f72-885">支援下表列出的項目。</span><span class="sxs-lookup"><span data-stu-id="86f72-885">The elements listed in the following table are supported.</span></span>  
  
|<span data-ttu-id="86f72-886">元素</span><span class="sxs-lookup"><span data-stu-id="86f72-886">Element</span></span>|<span data-ttu-id="86f72-887">描述</span><span class="sxs-lookup"><span data-stu-id="86f72-887">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="86f72-888">*簽署*</span><span class="sxs-lookup"><span data-stu-id="86f72-888">*sign*</span></span>|<span data-ttu-id="86f72-889">負號或正號。</span><span class="sxs-lookup"><span data-stu-id="86f72-889">A negative sign or positive sign symbol.</span></span>|  
|<span data-ttu-id="86f72-890">*整數數字*</span><span class="sxs-lookup"><span data-stu-id="86f72-890">*integral-digits*</span></span>|<span data-ttu-id="86f72-891">一系列數字指定數目的整數部分。</span><span class="sxs-lookup"><span data-stu-id="86f72-891">A series of digits specifying the integral part of the number.</span></span> <span data-ttu-id="86f72-892">整數數字，可不存在有小數位數。</span><span class="sxs-lookup"><span data-stu-id="86f72-892">Integral-digits can be absent if there are fractional-digits.</span></span>|  
|<span data-ttu-id="86f72-893">'*.*'</span><span class="sxs-lookup"><span data-stu-id="86f72-893">'*.*'</span></span>|<span data-ttu-id="86f72-894">特定文化特性的貨幣符號。</span><span class="sxs-lookup"><span data-stu-id="86f72-894">A culture-specific decimal point symbol.</span></span>|  
|<span data-ttu-id="86f72-895">*fractional-digits*</span><span class="sxs-lookup"><span data-stu-id="86f72-895">*fractional-digits*</span></span>|<span data-ttu-id="86f72-896">指定數字之小數點後的數字。</span><span class="sxs-lookup"><span data-stu-id="86f72-896">A series of digits specifying the fractional part of the number.</span></span>|  
|<span data-ttu-id="86f72-897">'*e*'</span><span class="sxs-lookup"><span data-stu-id="86f72-897">'*e*'</span></span>|<span data-ttu-id="86f72-898">小寫字元 'e'，表示指數 （科學記號） 標記法。</span><span class="sxs-lookup"><span data-stu-id="86f72-898">A lowercase character 'e', indicating exponential (scientific) notation.</span></span>|  
|<span data-ttu-id="86f72-899">*指數數字*</span><span class="sxs-lookup"><span data-stu-id="86f72-899">*exponential-digits*</span></span>|<span data-ttu-id="86f72-900">一系列指定指數的數字。</span><span class="sxs-lookup"><span data-stu-id="86f72-900">A series of digits specifying an exponent.</span></span>|  
  
 <span data-ttu-id="86f72-901">傳回值的一些範例包括"100"、"-123,456,789"，"123.45 e + 6"、"500"、"3.1416"、"600"、"-0.123"和"-Infinity"。</span><span class="sxs-lookup"><span data-stu-id="86f72-901">Some examples of the return value are "100", "-123,456,789", "123.45e+6", "500", "3.1416", "600", "-0.123", and "-Infinity".</span></span>  
  
 <span data-ttu-id="86f72-902">這個執行個體是以一般的數值格式規範 ("G") 格式。</span><span class="sxs-lookup"><span data-stu-id="86f72-902">This instance is formatted with the general numeric format specifier ("G").</span></span>  
  
 <span data-ttu-id="86f72-903">.NET Framework 會提供廣泛的格式化支援，這會在下列格式化主題中的更詳細地說明：</span><span class="sxs-lookup"><span data-stu-id="86f72-903">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="86f72-904">如需有關數值格式規範的詳細資訊，請參閱[標準數值格式字串](~/docs/standard/base-types/standard-numeric-format-strings.md)並[自訂數值格式字串](~/docs/standard/base-types/custom-numeric-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="86f72-904">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="86f72-905">如需有關格式的詳細資訊，請參閱[格式化型別](~/docs/standard/base-types/formatting-types.md)。</span><span class="sxs-lookup"><span data-stu-id="86f72-905">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="86f72-906">`provider`參數是<xref:System.IFormatProvider>實作其<xref:System.IFormatProvider.GetFormat%2A>方法會傳回<xref:System.Globalization.NumberFormatInfo>物件。</span><span class="sxs-lookup"><span data-stu-id="86f72-906">The `provider` parameter is an <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="86f72-907">通常`provider`已<xref:System.Globalization.CultureInfo>物件或<xref:System.Globalization.NumberFormatInfo>物件。</span><span class="sxs-lookup"><span data-stu-id="86f72-907">Typically, `provider` is a <xref:System.Globalization.CultureInfo> object or a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="86f72-908">`provider`參數提供格式化使用的特定文化特性資訊。</span><span class="sxs-lookup"><span data-stu-id="86f72-908">The `provider` parameter supplies culture-specific information used in formatting.</span></span> <span data-ttu-id="86f72-909">如果`provider`已`null`，傳回值的格式使用<xref:System.Globalization.NumberFormatInfo>目前的文化特性的物件。</span><span class="sxs-lookup"><span data-stu-id="86f72-909">If `provider` is `null`, the return value is formatted using the <xref:System.Globalization.NumberFormatInfo> object for the current culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86f72-910">下列範例顯示兩個的字串表示法<xref:System.Double>值使用<xref:System.Globalization.CultureInfo>代表數個不同的文化特性的物件。</span><span class="sxs-lookup"><span data-stu-id="86f72-910">The following example displays the string representation of two <xref:System.Double> values using <xref:System.Globalization.CultureInfo> objects that represent several different cultures.</span></span>  
  
 [!code-csharp[System.Double.ToString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double.ToString/cs/ToString1.cs#2)]
 [!code-vb[System.Double.ToString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double.ToString/vb/ToString1.vb#2)]  
  
 <span data-ttu-id="86f72-911">下列範例示範如何將<xref:System.Double.ToString%2A>、 正在接受<xref:System.String>和<xref:System.IFormatProvider>做為參數。</span><span class="sxs-lookup"><span data-stu-id="86f72-911">The following example illustrates the use of <xref:System.Double.ToString%2A>, taking a <xref:System.String> and an <xref:System.IFormatProvider> as parameters.</span></span>  
  
 [!code-cpp[Double Example#4](~/samples/snippets/cpp/VS_Snippets_CLR/Double Example/CPP/source.cpp#4)]
 [!code-csharp[Double Example#4](~/samples/snippets/csharp/VS_Snippets_CLR/Double Example/CS/source.cs#4)]
 [!code-vb[Double Example#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Double Example/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Double.Parse(System.String)" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.ToString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(System::String ^ format);" />
      <MemberSignature Language="F#" Value="override this.ToString : string -&gt; string" Usage="double.ToString format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="86f72-912">數值格式字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-912">A numeric format string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86f72-913">使用指定格式，將這個執行個體的數值轉換成它的相等字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-913">Converts the numeric value of this instance to its equivalent string representation, using the specified format.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86f72-914">這個執行個體值的字串表示，如同 <paramref name="format" /> 所指定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-914">The string representation of the value of this instance as specified by <paramref name="format" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86f72-915"><xref:System.Double.ToString%28System.String%29>方法格式<xref:System.Double>值中指定的格式，使用目前的文化特性的慣例。</span><span class="sxs-lookup"><span data-stu-id="86f72-915">The <xref:System.Double.ToString%28System.String%29> method formats a <xref:System.Double> value in a specified format by using the conventions of the current culture.</span></span> <span data-ttu-id="86f72-916">如果您想要指定不同的格式或文化特性，使用的其他多載<xref:System.Double.ToString%2A>方法，如下所示：</span><span class="sxs-lookup"><span data-stu-id="86f72-916">If you want to specify a different format or culture, use the other overloads of the <xref:System.Double.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="86f72-917">若要使用格式</span><span class="sxs-lookup"><span data-stu-id="86f72-917">To use format</span></span>|<span data-ttu-id="86f72-918">文化特性</span><span class="sxs-lookup"><span data-stu-id="86f72-918">For culture</span></span>|<span data-ttu-id="86f72-919">使用多載</span><span class="sxs-lookup"><span data-stu-id="86f72-919">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="86f72-920">預設值 ("G") 格式</span><span class="sxs-lookup"><span data-stu-id="86f72-920">Default ("G") format</span></span>|<span data-ttu-id="86f72-921">預設值 （目前） 的文化特性</span><span class="sxs-lookup"><span data-stu-id="86f72-921">Default (current) culture</span></span>|<xref:System.Double.ToString>|  
|<span data-ttu-id="86f72-922">預設值 ("G") 格式</span><span class="sxs-lookup"><span data-stu-id="86f72-922">Default ("G") format</span></span>|<span data-ttu-id="86f72-923">特定文化特性</span><span class="sxs-lookup"><span data-stu-id="86f72-923">A specific culture</span></span>|<xref:System.Double.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="86f72-924">特定的格式或有效位數</span><span class="sxs-lookup"><span data-stu-id="86f72-924">A specific format or precision</span></span>|<span data-ttu-id="86f72-925">特定文化特性</span><span class="sxs-lookup"><span data-stu-id="86f72-925">A specific culture</span></span>|<xref:System.Double.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="86f72-926">傳回值可以是<xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A>， <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A>， <xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A>，或數字，所指定的字串表示`format`。</span><span class="sxs-lookup"><span data-stu-id="86f72-926">The return value can be <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A>, <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A>, <xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A>, or the string representation of a number, as specified by `format`.</span></span>  
  
 <span data-ttu-id="86f72-927">`format`參數可以是任何有效的標準數值格式規範，除了 D 和 X，以及自訂數值格式規範的任何組合。</span><span class="sxs-lookup"><span data-stu-id="86f72-927">The `format` parameter can be any valid standard numeric format specifier except for D and X, as well as any combination of custom numeric format specifiers.</span></span> <span data-ttu-id="86f72-928">如果`format`是`null`或空字串，傳回的值會格式化為有一般的數值格式規範 ("G")。</span><span class="sxs-lookup"><span data-stu-id="86f72-928">If `format` is `null` or an empty string, the return value is formatted with the general numeric format specifier ("G").</span></span>  
  
 <span data-ttu-id="86f72-929">.NET Framework 會提供廣泛的格式化支援，這會在下列格式化主題中的更詳細地說明：</span><span class="sxs-lookup"><span data-stu-id="86f72-929">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="86f72-930">如需有關數值格式規範的詳細資訊，請參閱[標準數值格式字串](~/docs/standard/base-types/standard-numeric-format-strings.md)並[自訂數值格式字串](~/docs/standard/base-types/custom-numeric-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="86f72-930">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="86f72-931">如需有關格式的詳細資訊，請參閱[格式化型別](~/docs/standard/base-types/formatting-types.md)。</span><span class="sxs-lookup"><span data-stu-id="86f72-931">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="86f72-932">根據預設，傳回的值只包含 15 個位數的精確度雖然內部維護最多 17 個位數。</span><span class="sxs-lookup"><span data-stu-id="86f72-932">By default, the return value only contains 15 digits of precision although a maximum of 17 digits is maintained internally.</span></span> <span data-ttu-id="86f72-933">如果這個執行個體的值必須大於 15 位數，<xref:System.Double.ToString%2A>會傳回<xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A>或<xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A>而不是預期的數目。</span><span class="sxs-lookup"><span data-stu-id="86f72-933">If the value of this instance has greater than 15 digits, <xref:System.Double.ToString%2A> returns <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A> or <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A> instead of the expected number.</span></span> <span data-ttu-id="86f72-934">如果您需要更多有效位數時，指定`format`"G17"格式規格，它一定會傳回 17 個位數的有效位數或"R"，它會傳回 15 位數如果數目可以使用 17 位數來表示，如果只能是數字表示使用最大有效位數。</span><span class="sxs-lookup"><span data-stu-id="86f72-934">If you require more precision, specify `format` with the "G17" format specification, which always returns 17 digits of precision, or "R", which returns 15 digits if the number can be represented with that precision or 17 digits if the number can only be represented with maximum precision.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86f72-935">下列範例會定義數字的值和其格式化為貨幣值，藉由使用"C"標準數值格式字串和數值到三個小數位數為使用"N"標準數值格式字串。</span><span class="sxs-lookup"><span data-stu-id="86f72-935">The following example defines a numeric value and formats it as a currency value by using the "C" standard numeric format string and as a numeric value to three decimal places by using the "N" standard numeric format string.</span></span> <span data-ttu-id="86f72-936">使用 EN-US 文化特性的慣例格式化的結果字串。</span><span class="sxs-lookup"><span data-stu-id="86f72-936">The result strings are formatted by using the conventions of the en-US culture.</span></span> <span data-ttu-id="86f72-937">如需有關數值格式字串的詳細資訊，請參閱[標準數值格式字串](~/docs/standard/base-types/standard-numeric-format-strings.md)並[自訂數值格式字串](~/docs/standard/base-types/custom-numeric-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="86f72-937">For more information on numeric format strings, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
 [!code-csharp[System.Double.ToString#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double.ToString/cs/ToString7.cs#7)]
 [!code-vb[System.Double.ToString#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double.ToString/vb/ToString7.vb#7)]  
  
 <span data-ttu-id="86f72-938">下列範例會顯示數個<xref:System.Double>使用支援標準數值格式規範，以及三個自訂數值格式字串值。</span><span class="sxs-lookup"><span data-stu-id="86f72-938">The following example displays several <xref:System.Double> values using the supported standard numeric format specifiers together with three custom numeric format strings.</span></span> <span data-ttu-id="86f72-939">這些自訂格式字串的其中一個說明如何將填補<xref:System.Single>加上前置零的值。</span><span class="sxs-lookup"><span data-stu-id="86f72-939">One of those custom format strings illustrates how to pad a <xref:System.Single> value with leading zeros.</span></span> <span data-ttu-id="86f72-940">此外，此範例會使用有效位數規範，與每個標準格式規範，除了"R"。</span><span class="sxs-lookup"><span data-stu-id="86f72-940">In addition, the example uses precision specifiers with each standard format specifier except for "R".</span></span> <span data-ttu-id="86f72-941">有效位數規範範圍從 0 到 3 的值。</span><span class="sxs-lookup"><span data-stu-id="86f72-941">The values of the precision specifiers range from 0 to 3.</span></span> <span data-ttu-id="86f72-942">若要將數字的值轉換成字串，此範例會使用 EN-US 文化特性的格式化慣例。</span><span class="sxs-lookup"><span data-stu-id="86f72-942">To convert the numeric values to strings, the example uses the formatting conventions of the en-US culture.</span></span>  
  
 [!code-cpp[System.Double.ToString#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Double.ToString/cpp/tostring3.cpp#3)]
 [!code-csharp[System.Double.ToString#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double.ToString/cs/ToString1.cs#3)]
 [!code-vb[System.Double.ToString#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double.ToString/vb/ToString1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="86f72-943">
            <paramref name="format" /> 無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-943">
              <paramref name="format" /> is invalid.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="86f72-944">
            <para>在某些情況下，<see cref="T:System.Double" />如果編譯使用格式化使用"R"標準數值格式字串不會成功反覆存取值<see langword="/platform:x64" />或<see langword="/platform:anycpu" />交換器和 64 位元系統上執行。若要解決這個問題，您可以使用 "G17" 標準數值格式字串來格式化 <see cref="T:System.Double" /> 值。下列範例使用"R"格式字串，搭配<see cref="T:System.Double" />成功，值不會不會反覆存取，而且也會使用"G17"格式字串來成功反覆存取原始值。 [！ 的程式碼 csharp[System.Double.ToString#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double.ToString/cs/roundtripex2.cs#6)] [！ 的程式碼 vb[System.Double.ToString#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double.ToString/vb/roundtripex2.vb#6)]</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-944">
              <para>In some cases, <see cref="T:System.Double" /> values formatted with the "R" standard numeric format string do not successfully round-trip if compiled using the <see langword="/platform:x64" /> or <see langword="/platform:anycpu" /> switches and run on 64-bit systems. To work around this problem, you can format <see cref="T:System.Double" /> values by using the "G17" standard numeric format string. The following example uses the "R" format string with a <see cref="T:System.Double" /> value that does not round-trip successfully, and also uses the "G17" format string to successfully round-trip the original value.  [!code-csharp[System.Double.ToString#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double.ToString/cs/roundtripex2.cs#6)] [!code-vb[System.Double.ToString#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double.ToString/vb/roundtripex2.vb#6)]</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Double.Parse(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(System::String ^ format, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : string * IFormatProvider -&gt; string" Usage="double.ToString (format, provider)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="86f72-945">數值格式字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-945">A numeric format string.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="86f72-946">物件，提供特定文化特性格式資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-946">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86f72-947">使用指定的格式和特定文化特性格式資訊，將這個執行個體的數值轉換成它的相等字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-947">Converts the numeric value of this instance to its equivalent string representation using the specified format and culture-specific format information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86f72-948">這個執行個體值的字串表示，如同 <paramref name="format" /> 和 <paramref name="provider" /> 所指定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-948">The string representation of the value of this instance as specified by <paramref name="format" /> and <paramref name="provider" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86f72-949"><xref:System.Double.ToString%28System.String%2CSystem.IFormatProvider%29>方法格式<xref:System.Double>中指定的格式，指定文化特性值。</span><span class="sxs-lookup"><span data-stu-id="86f72-949">The <xref:System.Double.ToString%28System.String%2CSystem.IFormatProvider%29> method formats a <xref:System.Double> value in a specified format of a specified culture.</span></span> <span data-ttu-id="86f72-950">如果您想要指定不同的格式或文化特性，使用的其他多載<xref:System.Double.ToString%2A>方法，如下所示：</span><span class="sxs-lookup"><span data-stu-id="86f72-950">If you want to specify a different format or culture, use the other overloads of the <xref:System.Double.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="86f72-951">若要使用格式</span><span class="sxs-lookup"><span data-stu-id="86f72-951">To use format</span></span>|<span data-ttu-id="86f72-952">文化特性</span><span class="sxs-lookup"><span data-stu-id="86f72-952">For culture</span></span>|<span data-ttu-id="86f72-953">使用多載</span><span class="sxs-lookup"><span data-stu-id="86f72-953">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="86f72-954">預設值 ("G") 格式</span><span class="sxs-lookup"><span data-stu-id="86f72-954">Default ("G") format</span></span>|<span data-ttu-id="86f72-955">預設值 （目前） 的文化特性</span><span class="sxs-lookup"><span data-stu-id="86f72-955">Default (current) culture</span></span>|<xref:System.Double.ToString>|  
|<span data-ttu-id="86f72-956">預設值 ("G") 格式</span><span class="sxs-lookup"><span data-stu-id="86f72-956">Default ("G") format</span></span>|<span data-ttu-id="86f72-957">特定文化特性</span><span class="sxs-lookup"><span data-stu-id="86f72-957">A specific culture</span></span>|<xref:System.Double.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="86f72-958">特定的格式或有效位數</span><span class="sxs-lookup"><span data-stu-id="86f72-958">A specific format or precision</span></span>|<span data-ttu-id="86f72-959">預設值 （目前） 的文化特性</span><span class="sxs-lookup"><span data-stu-id="86f72-959">Default (current) culture</span></span>|<xref:System.Double.ToString%28System.String%29>|  
  
 <span data-ttu-id="86f72-960">傳回值可以是<xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A>， <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A>， <xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A>，或數字，所指定的字串表示`format`。</span><span class="sxs-lookup"><span data-stu-id="86f72-960">The return value can be <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A>, <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A>, <xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A>, or the string representation of a number, as specified by `format`.</span></span>  
  
 <span data-ttu-id="86f72-961">`format`參數可以是任何有效的標準數值格式規範，除了 D 和 X，以及自訂數值格式規範的任何組合。</span><span class="sxs-lookup"><span data-stu-id="86f72-961">The `format` parameter can be any valid standard numeric format specifier except for D and X, as well as any combination of custom numeric format specifiers.</span></span> <span data-ttu-id="86f72-962">如果`format`是`null`或空字串，這個執行個體的傳回值會格式化為有一般的數值格式規範 ("G")。</span><span class="sxs-lookup"><span data-stu-id="86f72-962">If `format` is `null` or an empty string, the return value for this instance is formatted with the general numeric format specifier ("G").</span></span>  
  
 <span data-ttu-id="86f72-963">.NET Framework 會提供廣泛的格式化支援，這會在下列格式化主題中的更詳細地說明：</span><span class="sxs-lookup"><span data-stu-id="86f72-963">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="86f72-964">如需有關數值格式規範的詳細資訊，請參閱[標準數值格式字串](~/docs/standard/base-types/standard-numeric-format-strings.md)並[自訂數值格式字串](~/docs/standard/base-types/custom-numeric-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="86f72-964">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="86f72-965">如需有關格式的詳細資訊，請參閱[格式化型別](~/docs/standard/base-types/formatting-types.md)。</span><span class="sxs-lookup"><span data-stu-id="86f72-965">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="86f72-966">`provider`參數是<xref:System.IFormatProvider>實作其<xref:System.IFormatProvider.GetFormat%2A>方法會傳回<xref:System.Globalization.NumberFormatInfo>物件。</span><span class="sxs-lookup"><span data-stu-id="86f72-966">The `provider` parameter is an <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="86f72-967">通常`provider`已<xref:System.Globalization.CultureInfo>物件或<xref:System.Globalization.NumberFormatInfo>物件。</span><span class="sxs-lookup"><span data-stu-id="86f72-967">Typically, `provider` is a <xref:System.Globalization.CultureInfo> object or a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="86f72-968">`provider`參數提供格式化使用的特定文化特性資訊。</span><span class="sxs-lookup"><span data-stu-id="86f72-968">The `provider` parameter supplies culture-specific information used in formatting.</span></span> <span data-ttu-id="86f72-969">如果`provider`已`null`，傳回值的格式使用<xref:System.Globalization.NumberFormatInfo>目前的文化特性的物件。</span><span class="sxs-lookup"><span data-stu-id="86f72-969">If `provider` is `null`, the return value is formatted using the <xref:System.Globalization.NumberFormatInfo> object for the current culture.</span></span>  
  
 <span data-ttu-id="86f72-970">根據預設，傳回的值只包含 15 個位數的精確度雖然內部維護最多 17 個位數。</span><span class="sxs-lookup"><span data-stu-id="86f72-970">By default, the return value only contains 15 digits of precision although a maximum of 17 digits is maintained internally.</span></span> <span data-ttu-id="86f72-971">如果這個執行個體的值必須大於 15 位數，<xref:System.Double.ToString%2A>會傳回<xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A>或<xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A>而不是預期的數目。</span><span class="sxs-lookup"><span data-stu-id="86f72-971">If the value of this instance has greater than 15 digits, <xref:System.Double.ToString%2A> returns <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A> or <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A> instead of the expected number.</span></span> <span data-ttu-id="86f72-972">如果您需要更多有效位數時，指定`format`"G17"格式規格，它一定會傳回 17 個位數的有效位數或"R"，它會傳回 15 位數如果數目可以使用 17 位數來表示，如果只能是數字表示使用最大有效位數。</span><span class="sxs-lookup"><span data-stu-id="86f72-972">If you require more precision, specify `format` with the "G17" format specification, which always returns 17 digits of precision, or "R", which returns 15 digits if the number can be represented with that precision or 17 digits if the number can only be represented with maximum precision.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86f72-973">下列範例會顯示<xref:System.Double>值使用每個支援標準數值格式規範的數個不同的文化特性。</span><span class="sxs-lookup"><span data-stu-id="86f72-973">The following example displays a <xref:System.Double> value using each of the supported standard numeric format specifiers for several different cultures.</span></span>  
  
 [!code-cpp[System.Double.ToString#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Double.ToString/cpp/tostring1.cpp#4)]
 [!code-csharp[System.Double.ToString#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double.ToString/cs/ToString1.cs#4)]
 [!code-vb[System.Double.ToString#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double.ToString/vb/ToString1.vb#4)]  
  
 <span data-ttu-id="86f72-974">下列範例示範如何將<xref:System.Double.ToString%2A>、 正在接受<xref:System.String>和<xref:System.IFormatProvider>做為參數。</span><span class="sxs-lookup"><span data-stu-id="86f72-974">The following example illustrates the use of <xref:System.Double.ToString%2A>, taking a <xref:System.String> and an <xref:System.IFormatProvider> as parameters.</span></span>  
  
 [!code-cpp[Double Example#4](~/samples/snippets/cpp/VS_Snippets_CLR/Double Example/CPP/source.cpp#4)]
 [!code-csharp[Double Example#4](~/samples/snippets/csharp/VS_Snippets_CLR/Double Example/CS/source.cs#4)]
 [!code-vb[Double Example#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Double Example/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <span data-ttu-id="86f72-975">
            <para>在某些情況下，<see cref="T:System.Double" />如果編譯使用格式化使用"R"標準數值格式字串不會成功反覆存取值<see langword="/platform:x64" />或<see langword="/platform:anycpu" />交換器和 64 位元系統上執行。若要解決這個問題，您可以使用 "G17" 標準數值格式字串來格式化 <see cref="T:System.Double" /> 值。下列範例使用"R"格式字串，搭配<see cref="T:System.Double" />成功，值不會不會反覆存取，而且也會使用"G17"格式字串來成功反覆存取原始值。 [！ 的程式碼 csharp[System.Double.ToString#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double.ToString/cs/roundtripex1.cs#5)] [！ 的程式碼 vb[System.Double.ToString#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double.ToString/vb/roundtripex1.vb#5)]</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-975">
              <para>In some cases, <see cref="T:System.Double" /> values formatted with the "R" standard numeric format string do not successfully round-trip if compiled using the <see langword="/platform:x64" /> or <see langword="/platform:anycpu" /> switches and run on 64-bit systems. To work around this problem, you can format <see cref="T:System.Double" /> values by using the "G17" standard numeric format string. The following example uses the "R" format string with a <see cref="T:System.Double" /> value that does not round-trip successfully, and also uses the "G17" format string to successfully round-trip the original value.  [!code-csharp[System.Double.ToString#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double.ToString/cs/roundtripex1.cs#5)] [!code-vb[System.Double.ToString#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double.ToString/vb/roundtripex1.vb#5)]</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Double.Parse(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public bool TryFormat (Span&lt;char&gt; destination, out int charsWritten, ReadOnlySpan&lt;char&gt; format = null, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryFormat(valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFormat (destination As Span(Of Char), ByRef charsWritten As Integer, Optional format As ReadOnlySpan(Of Char) = null, Optional provider As IFormatProvider = null) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryFormat : Span&lt;char&gt; *  * ReadOnlySpan&lt;char&gt; * IFormatProvider -&gt; bool" Usage="double.TryFormat (destination, charsWritten, format, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" />
        <Parameter Name="charsWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="charsWritten">To be added.</param>
        <param name="format">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryParse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="86f72-976">將數字的字串表示轉換為其相等的雙精確度浮點數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-976">Converts the string representation of a number to its double-precision floating-point number equivalent.</span>
          </span>
          <span data-ttu-id="86f72-977">傳回值會指出轉換成功或失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-977">A return value indicates whether the conversion succeeded or failed.</span>
          </span>
        </summary>
        <altmember cref="Overload:System.Double.Parse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, out double result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, [out] float64&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.TryParse(System.ReadOnlySpan{System.Char},System.Double@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), ByRef result As Double) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, [Runtime::InteropServices::Out] double % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; *  -&gt; bool" Usage="System.double.TryParse (s, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="result" Type="System.Double" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, out double result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, [out] float64&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.TryParse(System.String,System.Double@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, ByRef result As Double) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, [Runtime::InteropServices::Out] double % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string *  -&gt; bool" Usage="System.double.TryParse (s, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="result" Type="System.Double" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="86f72-978">字串，包含要轉換的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-978">A string containing a number to convert.</span>
          </span>
        </param>
        <param name="result">
          <span data-ttu-id="86f72-979">如果轉換成功，這個方法傳回時會包含相當於 <c>s</c> 參數的雙精確度浮點數，如果轉換失敗則為零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-979">When this method returns, contains the double-precision floating-point number equivalent of the <c>s</c> parameter, if the conversion succeeded, or zero if the conversion failed.</span>
          </span>
          <span data-ttu-id="86f72-980">如果 <c>s</c> 參數為 <see langword="null" /> 或 <see cref="F:System.String.Empty" />、不是有效格式的數字，或代表小於 <see cref="F:System.Double.MinValue" /> 或者大於 <see cref="F:System.Double.MaxValue" /> 的數字，這項轉換就會失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-980">The conversion fails if the <c>s</c> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, is not a number in a valid format, or represents a number less than <see cref="F:System.Double.MinValue" /> or greater than <see cref="F:System.Double.MaxValue" />.</span>
          </span>
          <span data-ttu-id="86f72-981">此參數會以未初始化的狀態來傳遞，並會覆寫任何原本在 <c>result</c> 中提供的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-981">This parameter is passed uninitialized; any value originally supplied in <c>result</c> will be overwritten.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86f72-982">將數字的字串表示轉換為其相等的雙精確度浮點數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-982">Converts the string representation of a number to its double-precision floating-point number equivalent.</span>
          </span>
          <span data-ttu-id="86f72-983">傳回值會指出轉換成功或失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-983">A return value indicates whether the conversion succeeded or failed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86f72-984">如果 <see langword="true" /> 轉換成功，則為 <paramref name="s" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-984">
              <see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86f72-985">這個多載不同於<xref:System.Double.Parse%28System.String%29?displayProperty=nameWithType>藉由傳回布林值，指出是否剖析作業成功而不是傳回的已剖析的數字值的方法。</span><span class="sxs-lookup"><span data-stu-id="86f72-985">This overload differs from the <xref:System.Double.Parse%28System.String%29?displayProperty=nameWithType> method by returning a Boolean value that indicates whether the parse operation succeeded instead of returning the parsed numeric value.</span></span> <span data-ttu-id="86f72-986">它就不需要使用例外狀況處理來測試<xref:System.FormatException>萬一`s`無效，無法成功剖析。</span><span class="sxs-lookup"><span data-stu-id="86f72-986">It eliminates the need to use exception handling to test for a <xref:System.FormatException> in the event that `s` is invalid and cannot be successfully parsed.</span></span>  
  
 <span data-ttu-id="86f72-987">`s`參數可以包含目前的文化特性<xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A?displayProperty=nameWithType>， <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A?displayProperty=nameWithType>， <xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A?displayProperty=nameWithType> （則字串比較是區分大小寫），或格式的字串：</span><span class="sxs-lookup"><span data-stu-id="86f72-987">The `s` parameter can contain the current culture's <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A?displayProperty=nameWithType>, <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A?displayProperty=nameWithType>, <xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A?displayProperty=nameWithType> (the string comparison is case-sensitive), or a string of the form:</span></span>  
  
 <span data-ttu-id="86f72-988">[ws][sign][integral-digits,]integral-digits[.[fractional-digits]][e[sign]exponential-digits][ws]</span><span class="sxs-lookup"><span data-stu-id="86f72-988">[ws][sign][integral-digits,]integral-digits[.[fractional-digits]][e[sign]exponential-digits][ws]</span></span>  
  
 <span data-ttu-id="86f72-989">在方括號中的元素是選擇性的元素。</span><span class="sxs-lookup"><span data-stu-id="86f72-989">Elements in square brackets are optional.</span></span> <span data-ttu-id="86f72-990">下表說明每個元素。</span><span class="sxs-lookup"><span data-stu-id="86f72-990">The following table describes each element.</span></span>  
  
|<span data-ttu-id="86f72-991">元素</span><span class="sxs-lookup"><span data-stu-id="86f72-991">Element</span></span>|<span data-ttu-id="86f72-992">描述</span><span class="sxs-lookup"><span data-stu-id="86f72-992">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="86f72-993">*ws*</span><span class="sxs-lookup"><span data-stu-id="86f72-993">*ws*</span></span>|<span data-ttu-id="86f72-994">一系列的泛空白字元。</span><span class="sxs-lookup"><span data-stu-id="86f72-994">A series of white-space characters.</span></span>|  
|<span data-ttu-id="86f72-995">*簽署*</span><span class="sxs-lookup"><span data-stu-id="86f72-995">*sign*</span></span>|<span data-ttu-id="86f72-996">負號或正號。</span><span class="sxs-lookup"><span data-stu-id="86f72-996">A negative sign or positive sign symbol.</span></span>|  
|<span data-ttu-id="86f72-997">*整數數字*</span><span class="sxs-lookup"><span data-stu-id="86f72-997">*integral-digits*</span></span>|<span data-ttu-id="86f72-998">一連串的數字的字元範圍從 0 到 9 的指定數目的整數部分。</span><span class="sxs-lookup"><span data-stu-id="86f72-998">A series of numeric characters ranging from 0 to 9 that specify the integral part of the number.</span></span> <span data-ttu-id="86f72-999">整數數字，可不存在有小數位數。</span><span class="sxs-lookup"><span data-stu-id="86f72-999">Integral-digits can be absent if there are fractional-digits.</span></span>|  
|<span data-ttu-id="86f72-1000">*、*</span><span class="sxs-lookup"><span data-stu-id="86f72-1000">*,*</span></span>|<span data-ttu-id="86f72-1001">特定文化特性的群組分隔符號。</span><span class="sxs-lookup"><span data-stu-id="86f72-1001">A culture-specific group separator symbol.</span></span>|  
|<span data-ttu-id="86f72-1002">*.*</span><span class="sxs-lookup"><span data-stu-id="86f72-1002">*.*</span></span>|<span data-ttu-id="86f72-1003">特定文化特性的貨幣符號。</span><span class="sxs-lookup"><span data-stu-id="86f72-1003">A culture-specific decimal point symbol.</span></span>|  
|<span data-ttu-id="86f72-1004">*fractional-digits*</span><span class="sxs-lookup"><span data-stu-id="86f72-1004">*fractional-digits*</span></span>|<span data-ttu-id="86f72-1005">一連串的範圍從 0 到 9 的指定數字的小數部分的數字字元。</span><span class="sxs-lookup"><span data-stu-id="86f72-1005">A series of numeric characters ranging from 0 to 9 that specify the fractional part of the number.</span></span>|  
|<span data-ttu-id="86f72-1006">*E*</span><span class="sxs-lookup"><span data-stu-id="86f72-1006">*E*</span></span>|<span data-ttu-id="86f72-1007">大寫或小寫字元 'e'，表示指數 （科學記號） 標記法。</span><span class="sxs-lookup"><span data-stu-id="86f72-1007">An uppercase or lowercase character 'e', that indicates exponential (scientific) notation.</span></span>|  
|<span data-ttu-id="86f72-1008">*指數數字*</span><span class="sxs-lookup"><span data-stu-id="86f72-1008">*exponential-digits*</span></span>|<span data-ttu-id="86f72-1009">一連串的範圍從 0 到 9 指定指數的數字字元。</span><span class="sxs-lookup"><span data-stu-id="86f72-1009">A series of numeric characters ranging from 0 to 9 that specify an exponent.</span></span>|  
  
 <span data-ttu-id="86f72-1010">如需有關數值格式的詳細資訊，請參閱[格式化型別](~/docs/standard/base-types/formatting-types.md)。</span><span class="sxs-lookup"><span data-stu-id="86f72-1010">For more information about numeric formats, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="86f72-1011">`s`參數使用的組合來解譯<xref:System.Globalization.NumberStyles.Float?displayProperty=nameWithType>和<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="86f72-1011">The `s` parameter is interpreted by using a combination of the <xref:System.Globalization.NumberStyles.Float?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flags.</span></span> <span data-ttu-id="86f72-1012">這表示泛空白字元和千位分隔符號允許但不是貨幣符號。</span><span class="sxs-lookup"><span data-stu-id="86f72-1012">This means that white space and thousands separators are allowed but currency symbols are not.</span></span> <span data-ttu-id="86f72-1013">若要明確定義的項目 (例如貨幣符號、 千位分隔符號，以及空白字元) 就會出現在`s`，使用<xref:System.Double.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Double%40%29?displayProperty=nameWithType>方法多載。</span><span class="sxs-lookup"><span data-stu-id="86f72-1013">To explicitly define the elements (such as currency symbols, thousands separators, and white space) that can be present in `s`, use the <xref:System.Double.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Double%40%29?displayProperty=nameWithType> method overload.</span></span>  
  
 <span data-ttu-id="86f72-1014">`s`參數會剖析使用的格式設定資訊中<xref:System.Globalization.NumberFormatInfo>初始化目前系統文化特性的物件。</span><span class="sxs-lookup"><span data-stu-id="86f72-1014">The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object that is initialized for the current system culture.</span></span> <span data-ttu-id="86f72-1015">如需詳細資訊，請參閱<xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="86f72-1015">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="86f72-1016">若要將字串剖析使用一些其他的格式設定資訊指定文化特性，請使用<xref:System.Double.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Double%40%29?displayProperty=nameWithType>方法多載。</span><span class="sxs-lookup"><span data-stu-id="86f72-1016">To parse a string using the formatting information of some other specified culture, use the <xref:System.Double.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Double%40%29?displayProperty=nameWithType> method overload.</span></span>  
  
 <span data-ttu-id="86f72-1017">一般情況下，如果您傳遞<xref:System.Double.TryParse%2A?displayProperty=nameWithType>字串，由呼叫的方法<xref:System.Double.ToString%2A?displayProperty=nameWithType>方法中，原始<xref:System.Double>會傳回值。</span><span class="sxs-lookup"><span data-stu-id="86f72-1017">Ordinarily, if you pass the <xref:System.Double.TryParse%2A?displayProperty=nameWithType> method a string that is created by calling the <xref:System.Double.ToString%2A?displayProperty=nameWithType> method, the original <xref:System.Double> value is returned.</span></span> <span data-ttu-id="86f72-1018">不過，因為遺失有效位數，值可能不會相等。</span><span class="sxs-lookup"><span data-stu-id="86f72-1018">However, because of a loss of precision, the values may not be equal.</span></span> <span data-ttu-id="86f72-1019">此外，嘗試剖析的字串表示法<xref:System.Double.MinValue>或是<xref:System.Double.MaxValue>就會擲回<xref:System.OverflowException>，如下列範例所示。</span><span class="sxs-lookup"><span data-stu-id="86f72-1019">In addition, attempting to parse the string representation of either <xref:System.Double.MinValue> or <xref:System.Double.MaxValue> throws an <xref:System.OverflowException>, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Double.TryParse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double.TryParse/cs/tryparse2.cs#3)]
 [!code-vb[System.Double.TryParse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double.TryParse/vb/tryparse2.vb#3)]  
  
 <span data-ttu-id="86f72-1020">如果出現在分隔符號`s`期間在剖析作業中和十進位和群組分隔符號的參數都相同，則剖析作業會假設分隔符號是小數分隔符號，而不是群組分隔符號。</span><span class="sxs-lookup"><span data-stu-id="86f72-1020">If a separator is encountered in the `s` parameter during a parse operation, and the decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</span></span> <span data-ttu-id="86f72-1021">如需分隔符號的詳細資訊，請參閱<xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>， <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>， <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>，和<xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>。</span><span class="sxs-lookup"><span data-stu-id="86f72-1021">For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86f72-1022">下列範例會使用<xref:System.Double.TryParse%28System.String%2CSystem.Double%40%29>方法，將數值的字串表示轉換<xref:System.Double>值。</span><span class="sxs-lookup"><span data-stu-id="86f72-1022">The following example uses the <xref:System.Double.TryParse%28System.String%2CSystem.Double%40%29> method to convert the string representations of numeric values to <xref:System.Double> values.</span></span> <span data-ttu-id="86f72-1023">它會假設該 EN-US 是目前的文化特性。</span><span class="sxs-lookup"><span data-stu-id="86f72-1023">It assumes that en-US is the current culture.</span></span>  
  
 [!code-csharp[System.Double.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double.TryParse/cs/tryparse1a.cs#1)]
 [!code-vb[System.Double.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double.TryParse/vb/tryparse1a.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Double.Parse(System.String)" />
        <altmember cref="M:System.Double.ToString" />
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style, IFormatProvider provider, out double result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] float64&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), style As NumberStyles, provider As IFormatProvider, ByRef result As Double) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] double % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; * System.Globalization.NumberStyles * IFormatProvider *  -&gt; bool" Usage="System.double.TryParse (s, style, provider, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="result" Type="System.Double" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="style">To be added.</param>
        <param name="provider">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, System.Globalization.NumberStyles style, IFormatProvider provider, out double result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] float64&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, style As NumberStyles, provider As IFormatProvider, ByRef result As Double) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] double % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string * System.Globalization.NumberStyles * IFormatProvider *  -&gt; bool" Usage="System.double.TryParse (s, style, provider, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="result" Type="System.Double" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="86f72-1024">字串，包含要轉換的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-1024">A string containing a number to convert.</span>
          </span>
        </param>
        <param name="style">
          <span data-ttu-id="86f72-1025">
            <see cref="T:System.Globalization.NumberStyles" /> 值的位元組合，表示 <c>s</c> 的允許格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-1025">A bitwise combination of <see cref="T:System.Globalization.NumberStyles" /> values that indicates the permitted format of <c>s</c>.</span>
          </span>
          <span data-ttu-id="86f72-1026">要指定的一般值為 <see cref="F:System.Globalization.NumberStyles.Float" /> 和 <see cref="F:System.Globalization.NumberStyles.AllowThousands" /> 的組合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-1026">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Float" /> combined with <see cref="F:System.Globalization.NumberStyles.AllowThousands" />.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="86f72-1027">
            <see cref="T:System.IFormatProvider" />，提供關於 <c>s</c> 之文化特性特定格式資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-1027">An <see cref="T:System.IFormatProvider" /> that supplies culture-specific formatting information about <c>s</c>.</span>
          </span>
        </param>
        <param name="result">
          <span data-ttu-id="86f72-1028">如果轉換成功，這個方法傳回時會包含相當於 <c>s</c> 中所含數值或符號的雙精確度浮點數，如果轉換失敗則為零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-1028">When this method returns, contains a double-precision floating-point number equivalent of the numeric value or symbol contained in <c>s</c>, if the conversion succeeded, or zero if the conversion failed.</span>
          </span>
          <span data-ttu-id="86f72-1029">轉換失敗的狀況包括：如果 <c>s</c> 參數是 <see langword="null" /> 或 <see cref="F:System.String.Empty" />、不是符合 <c>style</c> 的格式、代表小於 <see cref="F:System.SByte.MinValue" /> 或大於 <see cref="F:System.SByte.MaxValue" /> 的數字，或 <c>style</c> 不是 <see cref="T:System.Globalization.NumberStyles" /> 列舉常數的有效組合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-1029">The conversion fails if the <c>s</c> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, is not in a format compliant with <c>style</c>, represents a number less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />, or if <c>style</c> is not a valid combination of <see cref="T:System.Globalization.NumberStyles" /> enumerated constants.</span>
          </span>
          <span data-ttu-id="86f72-1030">此參數會以未初始化的狀態來傳遞，並會覆寫任何原本在 <c>result</c> 中提供的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-1030">This parameter is passed uninitialized; any value originally supplied in <c>result</c> will be overwritten.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86f72-1031">使用指定樣式和特定文化特性格式，將數字的字串表示轉換為其相等的雙精確度浮點數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-1031">Converts the string representation of a number in a specified style and culture-specific format to its double-precision floating-point number equivalent.</span>
          </span>
          <span data-ttu-id="86f72-1032">傳回值會指出轉換成功或失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-1032">A return value indicates whether the conversion succeeded or failed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86f72-1033">如果 <see langword="true" /> 轉換成功，則為 <paramref name="s" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-1033">
              <see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86f72-1034"><xref:System.Double.TryParse%2A>方法就像<xref:System.Double.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29>方法，但是這個方法不會擲回例外狀況如果轉換失敗。</span><span class="sxs-lookup"><span data-stu-id="86f72-1034">The <xref:System.Double.TryParse%2A> method is like the <xref:System.Double.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> method, except this method does not throw an exception if the conversion fails.</span></span> <span data-ttu-id="86f72-1035">如果轉換成功，傳回的值是`true`而`result`參數設定為轉換的結果。</span><span class="sxs-lookup"><span data-stu-id="86f72-1035">If the conversion succeeds, the return value is `true` and the `result` parameter is set to the outcome of the conversion.</span></span> <span data-ttu-id="86f72-1036">如果轉換失敗，傳回的值是`false`而`result`參數設為零。</span><span class="sxs-lookup"><span data-stu-id="86f72-1036">If the conversion fails, the return value is `false` and the `result` parameter is set to zero.</span></span> <span data-ttu-id="86f72-1037">這就不需要使用例外狀況處理來測試<xref:System.FormatException>萬一`s`無效，無法成功剖析。</span><span class="sxs-lookup"><span data-stu-id="86f72-1037">This eliminates the need to use exception handling to test for a <xref:System.FormatException> in the event that `s` is invalid and cannot be successfully parsed.</span></span>  
  
 <span data-ttu-id="86f72-1038">`style`參數會定義允許的格式的`s`剖析作業成功的參數。</span><span class="sxs-lookup"><span data-stu-id="86f72-1038">The `style` parameter defines the allowable format of the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="86f72-1039">它必須是從位元旗標的組合<xref:System.Globalization.NumberStyles>列舉型別。</span><span class="sxs-lookup"><span data-stu-id="86f72-1039">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="86f72-1040">下列<xref:System.Globalization.NumberStyles>不支援的成員：</span><span class="sxs-lookup"><span data-stu-id="86f72-1040">The following <xref:System.Globalization.NumberStyles> members are not supported:</span></span>  
  
-   <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>  
  
-   <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>  
  
 <span data-ttu-id="86f72-1041">`s`參數可以包含<xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A?displayProperty=nameWithType>， <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A?displayProperty=nameWithType>，或<xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A?displayProperty=nameWithType>所指定的文化特性`provider`。</span><span class="sxs-lookup"><span data-stu-id="86f72-1041">The `s` parameter can contain <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A?displayProperty=nameWithType>, <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A?displayProperty=nameWithType>, or <xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A?displayProperty=nameWithType> for the culture indicated by `provider`.</span></span> <span data-ttu-id="86f72-1042">此外，根據的值`style`，則`s`參數可能包括下列項目：</span><span class="sxs-lookup"><span data-stu-id="86f72-1042">In addition, depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="86f72-1043">[ws][$][簽署][整數位數]，整數數字 [.小數數字] [e [符號] 指數-數字] [ws]</span><span class="sxs-lookup"><span data-stu-id="86f72-1043">[ws] [$] [sign][integral-digits,]integral-digits[.fractional-digits][e[sign]exponential-digits][ws]</span></span>  
  
 <span data-ttu-id="86f72-1044">在方括號 ([ 和 ]) 中的項目是選擇性的項目。</span><span class="sxs-lookup"><span data-stu-id="86f72-1044">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="86f72-1045">下表說明每個元素。</span><span class="sxs-lookup"><span data-stu-id="86f72-1045">The following table describes each element.</span></span>  
  
|<span data-ttu-id="86f72-1046">元素</span><span class="sxs-lookup"><span data-stu-id="86f72-1046">Element</span></span>|<span data-ttu-id="86f72-1047">描述</span><span class="sxs-lookup"><span data-stu-id="86f72-1047">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="86f72-1048">*ws*</span><span class="sxs-lookup"><span data-stu-id="86f72-1048">*ws*</span></span>|<span data-ttu-id="86f72-1049">選擇性的泛空白字元。</span><span class="sxs-lookup"><span data-stu-id="86f72-1049">Optional white space.</span></span> <span data-ttu-id="86f72-1050">空白字元可以出現在開頭`s`如果`style`包含<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="86f72-1050">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="86f72-1051">它可以出現在結尾`s`如果`style`包含<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="86f72-1051">It can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="86f72-1052">特定文化特性的貨幣符號。</span><span class="sxs-lookup"><span data-stu-id="86f72-1052">A culture-specific currency symbol.</span></span> <span data-ttu-id="86f72-1053">在字串中的位置由定義<xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType>或是<xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType>的屬性<xref:System.Globalization.NumberFormatInfo>所傳回的物件<xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType>方法`provider`參數。</span><span class="sxs-lookup"><span data-stu-id="86f72-1053">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> or <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> properties of the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> method of the `provider` parameter.</span></span> <span data-ttu-id="86f72-1054">貨幣符號會出現在`s`如果`style`包含<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="86f72-1054">The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="86f72-1055">*簽署*</span><span class="sxs-lookup"><span data-stu-id="86f72-1055">*sign*</span></span>|<span data-ttu-id="86f72-1056">選擇性正負號。</span><span class="sxs-lookup"><span data-stu-id="86f72-1056">An optional sign.</span></span> <span data-ttu-id="86f72-1057">符號可以出現在開頭`s`如果`style`包含<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>旗標，也可以顯示在結尾`s`如果`style`包含<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="86f72-1057">The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="86f72-1058">可用於括號`s`表示負值`style`包含<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="86f72-1058">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="86f72-1059">*整數數字*</span><span class="sxs-lookup"><span data-stu-id="86f72-1059">*integral-digits*</span></span>|<span data-ttu-id="86f72-1060">一系列數字範圍從 0 到 9 的指定數目的整數部分。</span><span class="sxs-lookup"><span data-stu-id="86f72-1060">A series of digits ranging from 0 to 9 that specify the integral part of the number.</span></span> <span data-ttu-id="86f72-1061">整數數字，可不存在有小數位數。</span><span class="sxs-lookup"><span data-stu-id="86f72-1061">Integral-digits can be absent if there are fractional-digits.</span></span>|  
|<span data-ttu-id="86f72-1062">*、*</span><span class="sxs-lookup"><span data-stu-id="86f72-1062">*,*</span></span>|<span data-ttu-id="86f72-1063">特定文化特性的千位分隔符號。</span><span class="sxs-lookup"><span data-stu-id="86f72-1063">A culture-specific thousands separator symbol.</span></span> <span data-ttu-id="86f72-1064">目前的文化特性的千分位分隔符號可以出現在`s`如果`style`包含<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="86f72-1064">The current culture's thousands separator symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="86f72-1065">*.*</span><span class="sxs-lookup"><span data-stu-id="86f72-1065">*.*</span></span>|<span data-ttu-id="86f72-1066">特定文化特性的貨幣符號。</span><span class="sxs-lookup"><span data-stu-id="86f72-1066">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="86f72-1067">目前的文化特性的貨幣符號會出現在`s`如果`style`包含<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="86f72-1067">The current culture's decimal point symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="86f72-1068">*fractional-digits*</span><span class="sxs-lookup"><span data-stu-id="86f72-1068">*fractional-digits*</span></span>|<span data-ttu-id="86f72-1069">一系列數字範圍從 0 到 9 的指定數字的小數部分。</span><span class="sxs-lookup"><span data-stu-id="86f72-1069">A series of digits ranging from 0 to 9 that specify the fractional part of the number.</span></span> <span data-ttu-id="86f72-1070">小數點後數字可以出現在`s`如果`style`包含<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="86f72-1070">Fractional digits can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="86f72-1071">*e*</span><span class="sxs-lookup"><span data-stu-id="86f72-1071">*e*</span></span>|<span data-ttu-id="86f72-1072">E 或 E 字元，表示`s`可以代表使用指數標記法的數字。</span><span class="sxs-lookup"><span data-stu-id="86f72-1072">The e or E character, which indicates that `s` can represent a number using exponential notation.</span></span> <span data-ttu-id="86f72-1073">`s`參數可代表指數標記法之數字，如果樣式包含<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="86f72-1073">The `s` parameter can represent a number in exponential notation if style includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="86f72-1074">*指數數字*</span><span class="sxs-lookup"><span data-stu-id="86f72-1074">*exponential-digits*</span></span>|<span data-ttu-id="86f72-1075">一系列的範圍從 0 到 9 指定指數的數字。</span><span class="sxs-lookup"><span data-stu-id="86f72-1075">A series of digits ranging from 0 to 9 that specify an exponent.</span></span>|  
  
 <span data-ttu-id="86f72-1076">只有數字的字串 (對應至<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>樣式) 一律會成功剖析。</span><span class="sxs-lookup"><span data-stu-id="86f72-1076">A string with digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully.</span></span> <span data-ttu-id="86f72-1077">其餘<xref:System.Globalization.NumberStyles?displayProperty=nameWithType>成員控制可能，但不是一定要出現在輸入字串的項目。</span><span class="sxs-lookup"><span data-stu-id="86f72-1077">The remaining <xref:System.Globalization.NumberStyles?displayProperty=nameWithType> members control elements that may be but are not required to be present in the input string.</span></span> <span data-ttu-id="86f72-1078">下表指出如何個別<xref:System.Globalization.NumberStyles>旗標會影響可能會出現在項目`s`。</span><span class="sxs-lookup"><span data-stu-id="86f72-1078">The following table indicates how individual <xref:System.Globalization.NumberStyles> flags affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="86f72-1079">NumberStyles 值</span><span class="sxs-lookup"><span data-stu-id="86f72-1079">NumberStyles value</span></span>|<span data-ttu-id="86f72-1080">允許 s 除了數字中的項目</span><span class="sxs-lookup"><span data-stu-id="86f72-1080">Elements permitted in s in addition to digits</span></span>|  
|------------------------|---------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None>|<span data-ttu-id="86f72-1081">*整數位數*只有項目。</span><span class="sxs-lookup"><span data-stu-id="86f72-1081">The *integral-digits* element only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|<span data-ttu-id="86f72-1082">*.*</span><span class="sxs-lookup"><span data-stu-id="86f72-1082">The *.*</span></span> <span data-ttu-id="86f72-1083">並*小數位數*項目。</span><span class="sxs-lookup"><span data-stu-id="86f72-1083">and *fractional-digits* elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent>|<span data-ttu-id="86f72-1084">`s`參數也可以使用指數標記法。</span><span class="sxs-lookup"><span data-stu-id="86f72-1084">The `s` parameter can also use exponential notation.</span></span> <span data-ttu-id="86f72-1085">這個旗標本身支援值形式*整數位數*E*指數數字*; 其他旗標才能成功剖析字串以使用這類項目，做為指數標記法正或負號和小數點符號。</span><span class="sxs-lookup"><span data-stu-id="86f72-1085">This flag by itself supports values in the form *integral-digits*E*exponential-digits*; additional flags are needed to successfully parse strings in exponential notation with such elements as positive or negative signs and decimal point symbols.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|<span data-ttu-id="86f72-1086">*Ws*開頭的項目`s`。</span><span class="sxs-lookup"><span data-stu-id="86f72-1086">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|<span data-ttu-id="86f72-1087">*Ws*結尾的項目`s`。</span><span class="sxs-lookup"><span data-stu-id="86f72-1087">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|<span data-ttu-id="86f72-1088">*號*開頭的項目`s`。</span><span class="sxs-lookup"><span data-stu-id="86f72-1088">The *sign* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|<span data-ttu-id="86f72-1089">*號*結尾的項目`s`。</span><span class="sxs-lookup"><span data-stu-id="86f72-1089">The *sign* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses>|<span data-ttu-id="86f72-1090">*號*括號括住的數字值的形式的項目。</span><span class="sxs-lookup"><span data-stu-id="86f72-1090">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands>|<span data-ttu-id="86f72-1091">*，* 項目。</span><span class="sxs-lookup"><span data-stu-id="86f72-1091">The *,* element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|<span data-ttu-id="86f72-1092">* $ *項目。</span><span class="sxs-lookup"><span data-stu-id="86f72-1092">The *$* element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency>|<span data-ttu-id="86f72-1093">全部。</span><span class="sxs-lookup"><span data-stu-id="86f72-1093">All.</span></span> <span data-ttu-id="86f72-1094">`s`參數不能代表十六進位數字或指數標記法之數字。</span><span class="sxs-lookup"><span data-stu-id="86f72-1094">The `s` parameter cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float>|<span data-ttu-id="86f72-1095">*Ws*元素的開頭或結尾`s`，*登*開頭`s`，和 *。*</span><span class="sxs-lookup"><span data-stu-id="86f72-1095">The *ws* element at the beginning or end of `s`, *sign* at the beginning of `s`, and the *.*</span></span> <span data-ttu-id="86f72-1096">符號。</span><span class="sxs-lookup"><span data-stu-id="86f72-1096">symbol.</span></span> <span data-ttu-id="86f72-1097">`s`參數也可以使用指數標記法。</span><span class="sxs-lookup"><span data-stu-id="86f72-1097">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number>|<span data-ttu-id="86f72-1098">`ws`， `sign`，千分位分隔符號 (*，)，* 和 小數位數 (*。*) 項目。</span><span class="sxs-lookup"><span data-stu-id="86f72-1098">The `ws`, `sign`, thousands separator (*,),* and decimal point (*.*) elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any>|<span data-ttu-id="86f72-1099">所有的樣式，除了`s`無法代表十六進位數字。</span><span class="sxs-lookup"><span data-stu-id="86f72-1099">All styles, except `s` cannot represent a hexadecimal number.</span></span>|  
  
 <span data-ttu-id="86f72-1100">`provider`參數是<xref:System.IFormatProvider>實作，例如<xref:System.Globalization.NumberFormatInfo>或<xref:System.Globalization.CultureInfo>物件。</span><span class="sxs-lookup"><span data-stu-id="86f72-1100">The `provider` parameter is a <xref:System.IFormatProvider> implementation, such as a <xref:System.Globalization.NumberFormatInfo> or <xref:System.Globalization.CultureInfo> object.</span></span> <span data-ttu-id="86f72-1101">`provider`參數提供用於剖析的特定文化特性資訊。</span><span class="sxs-lookup"><span data-stu-id="86f72-1101">The `provider` parameter supplies culture-specific information used in parsing.</span></span> <span data-ttu-id="86f72-1102">如果`provider`已`null`或<xref:System.Globalization.NumberFormatInfo>無法取得物件，會使用目前文化特性格式資訊。</span><span class="sxs-lookup"><span data-stu-id="86f72-1102">If `provider` is `null` or a <xref:System.Globalization.NumberFormatInfo> object cannot be obtained, the format information for the current culture is used.</span></span>  
  
 <span data-ttu-id="86f72-1103">如果轉換會失敗`s`參數是`null`或非數值的值，`provider`參數不會產生<xref:System.Globalization.NumberFormatInfo>物件，或有`style`參數不是從位元旗標的組合<xref:System.Globalization.NumberStyles>列舉型別。</span><span class="sxs-lookup"><span data-stu-id="86f72-1103">The conversion fails if the `s` parameter is `null` or not a numeric value, the `provider` parameter does not yield a <xref:System.Globalization.NumberFormatInfo> object, or the `style` parameter is not a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span>  
  
 <span data-ttu-id="86f72-1104">一般情況下，如果您傳遞<xref:System.Double.TryParse%2A?displayProperty=nameWithType>字串，由呼叫的方法<xref:System.Double.ToString%2A?displayProperty=nameWithType>方法中，原始<xref:System.Double>會傳回值。</span><span class="sxs-lookup"><span data-stu-id="86f72-1104">Ordinarily, if you pass the <xref:System.Double.TryParse%2A?displayProperty=nameWithType> method a string that is created by calling the <xref:System.Double.ToString%2A?displayProperty=nameWithType> method, the original <xref:System.Double> value is returned.</span></span> <span data-ttu-id="86f72-1105">不過，因為遺失有效位數，值可能不會相等。</span><span class="sxs-lookup"><span data-stu-id="86f72-1105">However, because of a loss of precision, the values may not be equal.</span></span> <span data-ttu-id="86f72-1106">此外，嘗試剖析的字串表示法<xref:System.Double.MinValue>或是<xref:System.Double.MaxValue>就會擲回<xref:System.OverflowException>，如下列範例所示。</span><span class="sxs-lookup"><span data-stu-id="86f72-1106">In addition, attempting to parse the string representation of either <xref:System.Double.MinValue> or <xref:System.Double.MaxValue> throws an <xref:System.OverflowException>, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Double.TryParse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double.TryParse/cs/tryparse2.cs#3)]
 [!code-vb[System.Double.TryParse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double.TryParse/vb/tryparse2.vb#3)]  
  
 <span data-ttu-id="86f72-1107">如果出現在分隔符號`s`參數在剖析作業中，在適用的貨幣或十進位數字期間及群組分隔符號相同，則剖析作業會假設分隔符號是小數分隔符號，而不是群組分隔符號。</span><span class="sxs-lookup"><span data-stu-id="86f72-1107">If a separator is encountered in the `s` parameter during a parse operation, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</span></span> <span data-ttu-id="86f72-1108">如需分隔符號的詳細資訊，請參閱<xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>， <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>， <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>，和<xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>。</span><span class="sxs-lookup"><span data-stu-id="86f72-1108">For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86f72-1109">下列範例示範如何使用<xref:System.Double.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Double%40%29?displayProperty=nameWithType>方法來剖析具有特定樣式，並使用特定文化特性的慣例格式化的數字的字串表示。</span><span class="sxs-lookup"><span data-stu-id="86f72-1109">The following example demonstrates the use of the <xref:System.Double.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Double%40%29?displayProperty=nameWithType> method to parse the string representation of numbers that have a particular style and are formatted using the conventions of a particular culture.</span></span>  
  
 [!code-csharp[System.Double.TryParse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double.TryParse/cs/TryParse1.cs#2)]
 [!code-vb[System.Double.TryParse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double.TryParse/vb/TryParse1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="86f72-1110">
            <paramref name="style" /> 不是 <see cref="T:System.Globalization.NumberStyles" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-1110">
              <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span>
          </span>
          <span data-ttu-id="86f72-1111">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-1111">-or-</span>
          </span>
          <span data-ttu-id="86f72-1112">
            <paramref name="style" /> 包括 <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f72-1112">
              <paramref name="style" /> includes the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> value.</span>
          </span>
        </exception>
        <altmember cref="M:System.Double.ToString" />
      </Docs>
    </Member>
  </Members>
</Type>