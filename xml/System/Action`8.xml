<Type Name="Action&lt;T1,T2,T3,T4,T5,T6,T7,T8&gt;" FullName="System.Action&lt;T1,T2,T3,T4,T5,T6,T7,T8&gt;">
  <TypeSignature Language="C#" Value="public delegate void Action&lt;in T1,in T2,in T3,in T4,in T5,in T6,in T7,in T8&gt;(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Action`8&lt;- T1, - T2, - T3, - T4, - T5, - T6, - T7, - T8&gt; extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Action`8" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub Action(Of In T1, In T2, In T3, In T4, In T5, In T6, In T7, In T8)(arg1 As T1, arg2 As T2, arg3 As T3, arg4 As T4, arg5 As T5, arg6 As T6, arg7 As T7, arg8 As T8)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8&gt;&#xA;public delegate void Action(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8);" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T1">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T2">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T3">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T4">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T5">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T6">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T7">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T8">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="arg1" Type="T1" />
    <Parameter Name="arg2" Type="T2" />
    <Parameter Name="arg3" Type="T3" />
    <Parameter Name="arg4" Type="T4" />
    <Parameter Name="arg5" Type="T5" />
    <Parameter Name="arg6" Type="T6" />
    <Parameter Name="arg7" Type="T7" />
    <Parameter Name="arg8" Type="T8" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <typeparam name="T1"><span data-ttu-id="6e2ed-101">此委派封裝之方法的第一個參數類型。</span><span class="sxs-lookup"><span data-stu-id="6e2ed-101">The type of the first parameter of the method that this delegate encapsulates.</span></span></typeparam>
    <typeparam name="T2"><span data-ttu-id="6e2ed-102">此委派封裝之方法的第二個參數類型。</span><span class="sxs-lookup"><span data-stu-id="6e2ed-102">The type of the second parameter of the method that this delegate encapsulates.</span></span></typeparam>
    <typeparam name="T3"><span data-ttu-id="6e2ed-103">此委派封裝之方法的第三個參數類型。</span><span class="sxs-lookup"><span data-stu-id="6e2ed-103">The type of the third parameter of the method that this delegate encapsulates.</span></span></typeparam>
    <typeparam name="T4"><span data-ttu-id="6e2ed-104">這個委派所封裝之方法的第四個參數類型。</span><span class="sxs-lookup"><span data-stu-id="6e2ed-104">The type of the fourth parameter of the method that this delegate encapsulates.</span></span></typeparam>
    <typeparam name="T5"><span data-ttu-id="6e2ed-105">這個委派所封裝方法之第 5 個參數的型別。</span><span class="sxs-lookup"><span data-stu-id="6e2ed-105">The type of the fifth parameter of the method that this delegate encapsulates.</span></span></typeparam>
    <typeparam name="T6"><span data-ttu-id="6e2ed-106">這個委派所封裝方法之第 6 個參數的型別。</span><span class="sxs-lookup"><span data-stu-id="6e2ed-106">The type of the sixth parameter of the method that this delegate encapsulates.</span></span></typeparam>
    <typeparam name="T7"><span data-ttu-id="6e2ed-107">這個委派所封裝方法之第 7 個參數的型別。</span><span class="sxs-lookup"><span data-stu-id="6e2ed-107">The type of the seventh parameter of the method that this delegate encapsulates.</span></span></typeparam>
    <typeparam name="T8"><span data-ttu-id="6e2ed-108">這個委派所封裝方法之第 8 個參數的型別。</span><span class="sxs-lookup"><span data-stu-id="6e2ed-108">The type of the eighth parameter of the method that this delegate encapsulates.</span></span></typeparam>
    <param name="arg1"><span data-ttu-id="6e2ed-109">此委派封裝之方法的第一個參數。</span><span class="sxs-lookup"><span data-stu-id="6e2ed-109">The first parameter of the method that this delegate encapsulates.</span></span></param>
    <param name="arg2"><span data-ttu-id="6e2ed-110">此委派封裝之方法的第二個參數。</span><span class="sxs-lookup"><span data-stu-id="6e2ed-110">The second parameter of the method that this delegate encapsulates.</span></span></param>
    <param name="arg3"><span data-ttu-id="6e2ed-111">此委派封裝之方法的第三個參數。</span><span class="sxs-lookup"><span data-stu-id="6e2ed-111">The third parameter of the method that this delegate encapsulates.</span></span></param>
    <param name="arg4"><span data-ttu-id="6e2ed-112">這個委派所封裝之方法的第四個參數。</span><span class="sxs-lookup"><span data-stu-id="6e2ed-112">The fourth parameter of the method that this delegate encapsulates.</span></span></param>
    <param name="arg5"><span data-ttu-id="6e2ed-113">這個委派所封裝之方法的第 5 個參數。</span><span class="sxs-lookup"><span data-stu-id="6e2ed-113">The fifth parameter of the method that this delegate encapsulates.</span></span></param>
    <param name="arg6"><span data-ttu-id="6e2ed-114">這個委派所封裝之方法的第 6 個參數。</span><span class="sxs-lookup"><span data-stu-id="6e2ed-114">The sixth parameter of the method that this delegate encapsulates.</span></span></param>
    <param name="arg7"><span data-ttu-id="6e2ed-115">這個委派所封裝之方法的第 7 個參數。</span><span class="sxs-lookup"><span data-stu-id="6e2ed-115">The seventh parameter of the method that this delegate encapsulates.</span></span></param>
    <param name="arg8"><span data-ttu-id="6e2ed-116">這個委派所封裝之方法的第 8 個參數。</span><span class="sxs-lookup"><span data-stu-id="6e2ed-116">The eighth parameter of the method that this delegate encapsulates.</span></span></param>
    <summary><span data-ttu-id="6e2ed-117">封裝具有 8 個參數且沒有傳回值的方法。</span><span class="sxs-lookup"><span data-stu-id="6e2ed-117">Encapsulates a method that has eight parameters and does not return a value.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e2ed-118">您可以使用<xref:System.Action%608>要做為參數傳遞給方法，而不必明確宣告自訂委派的委派。</span><span class="sxs-lookup"><span data-stu-id="6e2ed-118">You can use the <xref:System.Action%608> delegate to pass a method as a parameter without explicitly declaring a custom delegate.</span></span> <span data-ttu-id="6e2ed-119">封裝的方法必須對應至這個委派所定義的方法簽章。</span><span class="sxs-lookup"><span data-stu-id="6e2ed-119">The encapsulated method must correspond to the method signature that is defined by this delegate.</span></span> <span data-ttu-id="6e2ed-120">這表示封裝的方法必須有 8 個參數所有傳遞給它的值，而且必須傳回值。</span><span class="sxs-lookup"><span data-stu-id="6e2ed-120">This means that the encapsulated method must have eight parameters that are all passed to it by value, and it must not return a value.</span></span> <span data-ttu-id="6e2ed-121">(在 C# 中，此方法必須傳回`void`。</span><span class="sxs-lookup"><span data-stu-id="6e2ed-121">(In C#, the method must return `void`.</span></span> <span data-ttu-id="6e2ed-122">在 Visual Basic 中，它必須定義的`Sub`...`End Sub`</span><span class="sxs-lookup"><span data-stu-id="6e2ed-122">In Visual Basic, it must be defined by the `Sub`…`End Sub`</span></span> <span data-ttu-id="6e2ed-123">建構。</span><span class="sxs-lookup"><span data-stu-id="6e2ed-123">construct.</span></span> <span data-ttu-id="6e2ed-124">它也可以傳回值，則會忽略這個值的方法。）通常，這種方法用來執行作業。</span><span class="sxs-lookup"><span data-stu-id="6e2ed-124">It can also be a method that returns a value that is ignored.) Typically, such a method is used to perform an operation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6e2ed-125">若要參考具有 8 個參數並傳回值的方法，使用泛型<xref:System.Func%609>改為委派。</span><span class="sxs-lookup"><span data-stu-id="6e2ed-125">To reference a method that has eight parameters and returns a value, use the generic <xref:System.Func%609> delegate instead.</span></span>  
  
 <span data-ttu-id="6e2ed-126">您也可以使用<xref:System.Action%608>委派匿名方法與 lambda 運算式。</span><span class="sxs-lookup"><span data-stu-id="6e2ed-126">You can also use the <xref:System.Action%608> delegate with anonymous methods and lambda expressions.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Func`9" />
  </Docs>
</Type>