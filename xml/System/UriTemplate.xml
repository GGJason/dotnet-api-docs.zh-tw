<Type Name="UriTemplate" FullName="System.UriTemplate">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f5f2d8fe0f9f3c052b391d3e8c92e4eebab5b0e7" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36427464" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class UriTemplate" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UriTemplate extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.UriTemplate" />
  <TypeSignature Language="VB.NET" Value="Public Class UriTemplate" />
  <TypeSignature Language="C++ CLI" Value="public ref class UriTemplate" />
  <TypeSignature Language="F#" Value="type UriTemplate = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Web</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="80590-101">代表統一資源識別元 (URI) 樣板的類別。</span>
      <span class="sxs-lookup">
        <span data-stu-id="80590-101">A class that represents a Uniform Resource Identifier (URI) template.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80590-102">URI 樣板可讓您定義一組結構類似的 URI。</span><span class="sxs-lookup"><span data-stu-id="80590-102">A URI template allows you to define a set of structurally similar URIs.</span></span> <span data-ttu-id="80590-103">樣板中則包含兩個部分：路徑和查詢。</span><span class="sxs-lookup"><span data-stu-id="80590-103">Templates are composed of two parts, a path and a query.</span></span> <span data-ttu-id="80590-104">路徑則包含一系列以斜線 (/) 分隔的區段。</span><span class="sxs-lookup"><span data-stu-id="80590-104">A path consists of a series of segments delimited by a slash (/).</span></span> <span data-ttu-id="80590-105">每個區段都有常值、變數值 (寫在大括號 [{ }] 內，限制為完全符合某個區段的內容) 或必須出現在路徑結尾的萬用字元 (以星號 [\*] 表示，會符合路徑其餘部分)。</span><span class="sxs-lookup"><span data-stu-id="80590-105">Each segment can have a literal value, a variable value (written within curly braces [{ }], constrained to match the contents of exactly one segment), or a wildcard (written as an asterisk [\*], which matches "the rest of the path"), which must appear at the end of the path.</span></span> <span data-ttu-id="80590-106">可以完全省略查詢運算式。</span><span class="sxs-lookup"><span data-stu-id="80590-106">The query expression can be omitted entirely.</span></span> <span data-ttu-id="80590-107">如果出現，會指定一系列非循序的名稱/值組。</span><span class="sxs-lookup"><span data-stu-id="80590-107">If present, it specifies an unordered series of name/value pairs.</span></span> <span data-ttu-id="80590-108">查詢運算式的項目可以是常值組 (?x=2) 或變數組 (?x={val})。</span><span class="sxs-lookup"><span data-stu-id="80590-108">Elements of the query expression can be either literal pairs (?x=2) or variable pairs (?x={val}).</span></span> <span data-ttu-id="80590-109">不允許使用未成對的值。</span><span class="sxs-lookup"><span data-stu-id="80590-109">Unpaired values are not permitted.</span></span> <span data-ttu-id="80590-110">下列範例將顯示有效的樣板字串：</span><span class="sxs-lookup"><span data-stu-id="80590-110">The following examples show valid template strings:</span></span>  
  
-   <span data-ttu-id="80590-111">"weather/WA/Seattle"</span><span class="sxs-lookup"><span data-stu-id="80590-111">"weather/WA/Seattle"</span></span>  
  
-   <span data-ttu-id="80590-112">"weather/{state}/{city}"</span><span class="sxs-lookup"><span data-stu-id="80590-112">"weather/{state}/{city}"</span></span>  
  
-   <span data-ttu-id="80590-113">"weather/\*"</span><span class="sxs-lookup"><span data-stu-id="80590-113">"weather/\*"</span></span>  
  
-   <span data-ttu-id="80590-114">"weather/{state}/{city}?forecast=today</span><span class="sxs-lookup"><span data-stu-id="80590-114">"weather/{state}/{city}?forecast=today</span></span>  
  
-   <span data-ttu-id="80590-115">"weather/{state}/{city}?forecast={day}</span><span class="sxs-lookup"><span data-stu-id="80590-115">"weather/{state}/{city}?forecast={day}</span></span>  
  
 <span data-ttu-id="80590-116">前面的 URI 樣板可能會用於組織氣象報告。</span><span class="sxs-lookup"><span data-stu-id="80590-116">The preceding URI templates might be used for organizing weather reports.</span></span> <span data-ttu-id="80590-117">包含在大括號中的區段是變數，其餘都是常值。</span><span class="sxs-lookup"><span data-stu-id="80590-117">Segments enclosed in curly braces are variables, everything else is a literal.</span></span> <span data-ttu-id="80590-118">您可以將變數取代成實際值，將 <xref:System.UriTemplate> 執行個體轉換成 <xref:System.Uri>。</span><span class="sxs-lookup"><span data-stu-id="80590-118">You can convert a <xref:System.UriTemplate> instance into a <xref:System.Uri> by replacing variables with actual values.</span></span> <span data-ttu-id="80590-119">例如，採用樣板 "weather/{state}/{city}"，並為變數 "{state}" 和 "{city}" 置入值，將會產生 "weather/WA/Seattle"。</span><span class="sxs-lookup"><span data-stu-id="80590-119">For example, taking the template "weather/{state}/{city}" and putting in values for the variables "{state}" and "{city}" gives you "weather/WA/Seattle".</span></span> <span data-ttu-id="80590-120">獲得指定的候選 URI 後，您便可以藉由呼叫 <xref:System.UriTemplate.Match%28System.Uri%2CSystem.Uri%29>，測試它是否符合指定的 URI 樣板。</span><span class="sxs-lookup"><span data-stu-id="80590-120">Given a candidate URI, you can test whether it matches a given URI template by calling <xref:System.UriTemplate.Match%28System.Uri%2CSystem.Uri%29>.</span></span> <span data-ttu-id="80590-121">您也可以呼叫 <xref:System.UriTemplate> 或 <xref:System.Uri>，以便使用 <xref:System.UriTemplate.BindByName%28System.Uri%2CSystem.Collections.Specialized.NameValueCollection%29> 執行個體，從一組變數值建立 <xref:System.UriTemplate.BindByPosition%28System.Uri%2CSystem.String%5B%5D%29>。</span><span class="sxs-lookup"><span data-stu-id="80590-121">You can also use <xref:System.UriTemplate> instances to create a <xref:System.Uri> from a set of variable values by calling <xref:System.UriTemplate.BindByName%28System.Uri%2CSystem.Collections.Specialized.NameValueCollection%29> or <xref:System.UriTemplate.BindByPosition%28System.Uri%2CSystem.String%5B%5D%29>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="80590-122">下列程式碼將示範如何建立 <xref:System.UriTemplate> 執行個體，然後繫結至候選 URI 並加以比對。</span><span class="sxs-lookup"><span data-stu-id="80590-122">The following code demonstrates how to create a <xref:System.UriTemplate> instance, and bind and match it to a candidate URI.</span></span>  
  
 [!code-csharp[UriTemplate#0](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplate/cs/snippets.cs#0)]
 [!code-vb[UriTemplate#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplate/vb/snippets.vb#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="80590-123">初始化 <see cref="T:System.UriTemplate" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="80590-123">Initializes a new instance of the <see cref="T:System.UriTemplate" /> class</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UriTemplate (string template);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string template) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (template As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UriTemplate(System::String ^ template);" />
      <MemberSignature Language="F#" Value="new UriTemplate : string -&gt; UriTemplate" Usage="new System.UriTemplate template" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="template" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="template">
          <span data-ttu-id="80590-124">樣板。</span>
          <span class="sxs-lookup">
            <span data-stu-id="80590-124">The template.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80590-125">使用指定的樣板字串，初始化 <see cref="T:System.UriTemplate" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="80590-125">Initializes a new instance of the <see cref="T:System.UriTemplate" /> class with the specified template string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="80590-126">下列範例將示範如何呼叫這個建構函式。</span><span class="sxs-lookup"><span data-stu-id="80590-126">The following example shows how to call the constructor.</span></span>  
  
 [!code-csharp[UriTemplate#1](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplate/cs/snippets.cs#1)]
 [!code-vb[UriTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplate/vb/snippets.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UriTemplate (string template, bool ignoreTrailingSlash);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string template, bool ignoreTrailingSlash) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.#ctor(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (template As String, ignoreTrailingSlash As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UriTemplate(System::String ^ template, bool ignoreTrailingSlash);" />
      <MemberSignature Language="F#" Value="new UriTemplate : string * bool -&gt; UriTemplate" Usage="new System.UriTemplate (template, ignoreTrailingSlash)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="template" Type="System.String" />
        <Parameter Name="ignoreTrailingSlash" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="template">
          <span data-ttu-id="80590-127">樣板字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="80590-127">The template string.</span>
          </span>
        </param>
        <param name="ignoreTrailingSlash">
          <span data-ttu-id="80590-128">值，指定是否應忽略結尾的斜線字元 "/"。</span>
          <span class="sxs-lookup">
            <span data-stu-id="80590-128">A value that specifies whether trailing slash "/" characters should be ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80590-129">初始化 <see cref="T:System.UriTemplate" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="80590-129">Initializes a new instance of the <see cref="T:System.UriTemplate" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80590-130">如果 `ignoreTrailingSlash` 設定為 `true`，在比對候選 URI 時，會忽略樣板尾端的結尾斜線。</span><span class="sxs-lookup"><span data-stu-id="80590-130">When the `ignoreTrailingSlash` is set to `true`, trailing slashes on the end of template are ignored when matching a candidate URI.</span></span> <span data-ttu-id="80590-131">例如，例如範本 」http://www.microsoft.com/customer/"會比對下列候選 Uri:</span><span class="sxs-lookup"><span data-stu-id="80590-131">For example, a template such as "http://www.microsoft.com/customer/" would match the following candidate URIs:</span></span>  
  
-   <span data-ttu-id="80590-132">"http://www.microsoft.com/customer/"</span><span class="sxs-lookup"><span data-stu-id="80590-132">"http://www.microsoft.com/customer/"</span></span>  
  
-   <span data-ttu-id="80590-133">"http://www.microsoft.com/customer"</span><span class="sxs-lookup"><span data-stu-id="80590-133">"http://www.microsoft.com/customer"</span></span>  
  
-   <span data-ttu-id="80590-134">"http://www.microsoft.com/customer/?wsdl"</span><span class="sxs-lookup"><span data-stu-id="80590-134">"http://www.microsoft.com/customer/?wsdl"</span></span>  
  
-   <span data-ttu-id="80590-135">"http://www.microsoft.com/customer?wsdl"</span><span class="sxs-lookup"><span data-stu-id="80590-135">"http://www.microsoft.com/customer?wsdl"</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UriTemplate (string template, System.Collections.Generic.IDictionary&lt;string,string&gt; additionalDefaults);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string template, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; additionalDefaults) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (template As String, additionalDefaults As IDictionary(Of String, String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UriTemplate(System::String ^ template, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ additionalDefaults);" />
      <MemberSignature Language="F#" Value="new UriTemplate : string * System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; UriTemplate" Usage="new System.UriTemplate (template, additionalDefaults)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="template" Type="System.String" />
        <Parameter Name="additionalDefaults" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="template">
          <span data-ttu-id="80590-136">樣板字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="80590-136">The template string.</span>
          </span>
        </param>
        <param name="additionalDefaults">
          <span data-ttu-id="80590-137">字典，包含樣板參數的預設值清單。</span>
          <span class="sxs-lookup">
            <span data-stu-id="80590-137">A dictionary that contains a list of default values for the template parameters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80590-138">初始化 <see cref="T:System.UriTemplate" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="80590-138">Initializes a new instance of the <see cref="T:System.UriTemplate" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UriTemplate (string template, bool ignoreTrailingSlash, System.Collections.Generic.IDictionary&lt;string,string&gt; additionalDefaults);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string template, bool ignoreTrailingSlash, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; additionalDefaults) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.#ctor(System.String,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (template As String, ignoreTrailingSlash As Boolean, additionalDefaults As IDictionary(Of String, String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UriTemplate(System::String ^ template, bool ignoreTrailingSlash, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ additionalDefaults);" />
      <MemberSignature Language="F#" Value="new UriTemplate : string * bool * System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; UriTemplate" Usage="new System.UriTemplate (template, ignoreTrailingSlash, additionalDefaults)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="template" Type="System.String" />
        <Parameter Name="ignoreTrailingSlash" Type="System.Boolean" />
        <Parameter Name="additionalDefaults" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="template">
          <span data-ttu-id="80590-139">樣板字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="80590-139">The template string.</span>
          </span>
        </param>
        <param name="ignoreTrailingSlash">
          <span data-ttu-id="80590-140">如果會忽略結尾的斜線字元 "/"，則為 <see langword="true" />；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="80590-140">
              <see langword="true" /> if the trailing slash "/" characters are ignored; otherwise <see langword="false" />.</span>
          </span>
        </param>
        <param name="additionalDefaults">
          <span data-ttu-id="80590-141">字典，包含樣板參數的預設值清單。</span>
          <span class="sxs-lookup">
            <span data-stu-id="80590-141">A dictionary that contains a list of default values for the template parameters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80590-142">初始化 <see cref="T:System.UriTemplate" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="80590-142">Initializes a new instance of the <see cref="T:System.UriTemplate" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BindByName">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="80590-143">從範本和參數集合建立新的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="80590-143">Creates a new URI from the template and the collection of parameters.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BindByName">
      <MemberSignature Language="C#" Value="public Uri BindByName (Uri baseAddress, System.Collections.Generic.IDictionary&lt;string,string&gt; parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Uri BindByName(class System.Uri baseAddress, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.BindByName(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function BindByName (baseAddress As Uri, parameters As IDictionary(Of String, String)) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Uri ^ BindByName(Uri ^ baseAddress, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.BindByName : Uri * System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; Uri" Usage="uriTemplate.BindByName (baseAddress, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseAddress" Type="System.Uri" />
        <Parameter Name="parameters" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="baseAddress">
          <span data-ttu-id="80590-144">基底位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="80590-144">The base address.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="80590-145">字典，其中包含參數名稱/值組的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="80590-145">A dictionary that contains a collection of parameter name/value pairs.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80590-146">從範本和參數集合建立新的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="80590-146">Creates a new URI from the template and the collection of parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80590-147">URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="80590-147">A URI.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80590-148">[IDictionary\<字串、 字串 >](xref:System.Collections.Generic.IDictionary%602)參數包含參數名稱 / 值組的集合。</span><span class="sxs-lookup"><span data-stu-id="80590-148">The [IDictionary\<string,string>](xref:System.Collections.Generic.IDictionary%602) parameter contains a collection of parameter name and value pairs.</span></span> <span data-ttu-id="80590-149">參數與樣板內的變數會以不區分大小寫方式進行比對。</span><span class="sxs-lookup"><span data-stu-id="80590-149">The parameters are matched up against the variables within the template by a case-insensitive comparison.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="80590-150">傳遞至這個方法的名稱/值集合必須包含每個樣板變數的索引鍵。</span><span class="sxs-lookup"><span data-stu-id="80590-150">The name/value collection passed to this method must contain a key for every template variable.</span></span> <span data-ttu-id="80590-151">不符合樣板變數的額外名稱/值組會附加至最終 URI 的查詢字串。</span><span class="sxs-lookup"><span data-stu-id="80590-151">Extra name/value pairs that do not match template variables are appended to the query string of the final URI.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="80590-152">您可以在名稱/值組內傳入文字，名稱/值組不會使所產生的 URI 與用於產生它的樣板相符。</span><span class="sxs-lookup"><span data-stu-id="80590-152">It is possible to pass in text within the name/value pairs that prevent the generated URI from matching the template that is used to generate it.</span></span> <span data-ttu-id="80590-153">這類文字的範例包括：'/'、'..'、'\*'、'{' 和 '}'。</span><span class="sxs-lookup"><span data-stu-id="80590-153">Examples of such text includes: '/', '..', '\*', '{', and '}'.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindByName">
      <MemberSignature Language="C#" Value="public Uri BindByName (Uri baseAddress, System.Collections.Specialized.NameValueCollection parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Uri BindByName(class System.Uri baseAddress, class System.Collections.Specialized.NameValueCollection parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.BindByName(System.Uri,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function BindByName (baseAddress As Uri, parameters As NameValueCollection) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Uri ^ BindByName(Uri ^ baseAddress, System::Collections::Specialized::NameValueCollection ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.BindByName : Uri * System.Collections.Specialized.NameValueCollection -&gt; Uri" Usage="uriTemplate.BindByName (baseAddress, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseAddress" Type="System.Uri" />
        <Parameter Name="parameters" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="baseAddress">
          <span data-ttu-id="80590-154">基底位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="80590-154">The base address.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="80590-155">參數值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="80590-155">The parameter values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80590-156">從範本和參數集合建立新的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="80590-156">Creates a new URI from the template and the collection of parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80590-157">新的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="80590-157">A new instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80590-158"><xref:System.Collections.Specialized.NameValueCollection> 參數，其中包含參數名稱/值組的集合。</span><span class="sxs-lookup"><span data-stu-id="80590-158">The <xref:System.Collections.Specialized.NameValueCollection> parameter contains a collection of parameter name/value pairs.</span></span> <span data-ttu-id="80590-159">參數與樣板內的變數會以不區分大小寫方式進行比對。</span><span class="sxs-lookup"><span data-stu-id="80590-159">The parameters are matched up against the variables within the template by a case-insensitive comparison.</span></span> <span data-ttu-id="80590-160">傳到這個集合中的值會逸出。</span><span class="sxs-lookup"><span data-stu-id="80590-160">Values passed in this collection are escaped.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="80590-161">傳遞至 <xref:System.UriTemplate.BindByName%28System.Uri%2CSystem.Collections.Specialized.NameValueCollection%29> 的名稱/值集合必須包含每個樣板變數的索引鍵。</span><span class="sxs-lookup"><span data-stu-id="80590-161">The name/value collection passed to <xref:System.UriTemplate.BindByName%28System.Uri%2CSystem.Collections.Specialized.NameValueCollection%29> must contain a key for every template variable.</span></span> <span data-ttu-id="80590-162">不符合樣板變數的額外名稱/值組會附加至最終 URI 的查詢字串。</span><span class="sxs-lookup"><span data-stu-id="80590-162">Extra name/value pairs that do not match template variables are appended to the query string of the final URI.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="80590-163">您可以在名稱/值組內傳入文字，名稱/值組不會使所產生的 URI 與用於產生它的樣板相符。</span><span class="sxs-lookup"><span data-stu-id="80590-163">It is possible to pass in text within the name/value pairs that prevent the generated URI from matching the template that is used to generate it.</span></span> <span data-ttu-id="80590-164">這類文字的範例包括：'/'、'..'、'\*'、'{' 和 '}'。</span><span class="sxs-lookup"><span data-stu-id="80590-164">Examples of such text includes: '/', '..', '\*', '{', and '}'.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="80590-165">下列範例會示範如何呼叫 <xref:System.UriTemplate.BindByName%28System.Uri%2CSystem.Collections.Specialized.NameValueCollection%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="80590-165">The following example shows how to call the <xref:System.UriTemplate.BindByName%28System.Uri%2CSystem.Collections.Specialized.NameValueCollection%29> method.</span></span>  
  
 [!code-csharp[UriTemplate#4](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplate/cs/snippets.cs#4)]
 [!code-vb[UriTemplate#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplate/vb/snippets.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindByName">
      <MemberSignature Language="C#" Value="public Uri BindByName (Uri baseAddress, System.Collections.Generic.IDictionary&lt;string,string&gt; parameters, bool omitDefaults);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Uri BindByName(class System.Uri baseAddress, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; parameters, bool omitDefaults) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.BindByName(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function BindByName (baseAddress As Uri, parameters As IDictionary(Of String, String), omitDefaults As Boolean) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Uri ^ BindByName(Uri ^ baseAddress, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ parameters, bool omitDefaults);" />
      <MemberSignature Language="F#" Value="member this.BindByName : Uri * System.Collections.Generic.IDictionary&lt;string, string&gt; * bool -&gt; Uri" Usage="uriTemplate.BindByName (baseAddress, parameters, omitDefaults)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseAddress" Type="System.Uri" />
        <Parameter Name="parameters" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="omitDefaults" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="baseAddress">
          <span data-ttu-id="80590-166">包含基底位址的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="80590-166">A URI that contains the base address.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="80590-167">字典，其中包含參數名稱/值組的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="80590-167">A dictionary that contains a collection of parameter name/value pairs.</span>
          </span>
        </param>
        <param name="omitDefaults">
          <span data-ttu-id="80590-168">如果忽略預設值，則為 <see langword="true" />；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="80590-168">
              <see langword="true" /> is the default values are ignored; otherwise <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80590-169">從範本和參數集合建立新的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="80590-169">Creates a new URI from the template and the collection of parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80590-170">URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="80590-170">A URI.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindByName">
      <MemberSignature Language="C#" Value="public Uri BindByName (Uri baseAddress, System.Collections.Specialized.NameValueCollection parameters, bool omitDefaults);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Uri BindByName(class System.Uri baseAddress, class System.Collections.Specialized.NameValueCollection parameters, bool omitDefaults) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.BindByName(System.Uri,System.Collections.Specialized.NameValueCollection,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function BindByName (baseAddress As Uri, parameters As NameValueCollection, omitDefaults As Boolean) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Uri ^ BindByName(Uri ^ baseAddress, System::Collections::Specialized::NameValueCollection ^ parameters, bool omitDefaults);" />
      <MemberSignature Language="F#" Value="member this.BindByName : Uri * System.Collections.Specialized.NameValueCollection * bool -&gt; Uri" Usage="uriTemplate.BindByName (baseAddress, parameters, omitDefaults)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseAddress" Type="System.Uri" />
        <Parameter Name="parameters" Type="System.Collections.Specialized.NameValueCollection" />
        <Parameter Name="omitDefaults" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="baseAddress">
          <span data-ttu-id="80590-171">基底位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="80590-171">The base address.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="80590-172">參數名稱/值組的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="80590-172">A collection of parameter name/value pairs.</span>
          </span>
        </param>
        <param name="omitDefaults">
          <span data-ttu-id="80590-173">如果會忽略預設值，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="80590-173">
              <see langword="true" /> if the default values are ignored; otherwise <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80590-174">從範本和參數集合建立新的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="80590-174">Creates a new URI from the template and the collection of parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80590-175">URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="80590-175">A URI.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindByPosition">
      <MemberSignature Language="C#" Value="public Uri BindByPosition (Uri baseAddress, params string[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Uri BindByPosition(class System.Uri baseAddress, string[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.BindByPosition(System.Uri,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Function BindByPosition (baseAddress As Uri, ParamArray values As String()) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Uri ^ BindByPosition(Uri ^ baseAddress, ... cli::array &lt;System::String ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="member this.BindByPosition : Uri * string[] -&gt; Uri" Usage="uriTemplate.BindByPosition (baseAddress, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseAddress" Type="System.Uri" />
        <Parameter Name="values" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="baseAddress">
          <span data-ttu-id="80590-176">包含基底位址的 <see cref="T:System.Uri" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="80590-176">A <see cref="T:System.Uri" /> that contains the base address.</span>
          </span>
        </param>
        <param name="values">
          <span data-ttu-id="80590-177">參數值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="80590-177">The parameter values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80590-178">從此樣板和參數值的陣列建立新的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="80590-178">Creates a new URI from the template and an array of parameter values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80590-179">新的 <see cref="T:System.Uri" /> 執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="80590-179">A new <see cref="T:System.Uri" /> instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80590-180">參數值會依位置由左到右進行繫結。</span><span class="sxs-lookup"><span data-stu-id="80590-180">The parameter values are bound by position left to right.</span></span> <span data-ttu-id="80590-181">第一個參數值會取代在樣板中找到的第一個變數，第二個參數值會取代第二個變數，依此類推。</span><span class="sxs-lookup"><span data-stu-id="80590-181">The first parameter value replaces the first variable found in the template, the second parameter value replaces the second variable, and so on.</span></span> <span data-ttu-id="80590-182">傳遞至這個方法的變數會逸出。</span><span class="sxs-lookup"><span data-stu-id="80590-182">Variables passed to this method are escaped.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="80590-183">傳入值參數中的參數數目必須符合樣板中變數的數目。</span><span class="sxs-lookup"><span data-stu-id="80590-183">The number of parameters passed in the values parameter must match the number of variables in the template.</span></span> <span data-ttu-id="80590-184">否則會擲回 <xref:System.FormatException>。</span><span class="sxs-lookup"><span data-stu-id="80590-184">If not, a <xref:System.FormatException> is thrown.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="80590-185">您可以在參數值陣列內傳入文字，參數值陣列不會使所產生的 URI 與用於產生它的樣板相符。</span><span class="sxs-lookup"><span data-stu-id="80590-185">It is possible to pass in text within the parameter values array that prevents the generated URI from matching the template that is used to generate it.</span></span> <span data-ttu-id="80590-186">這類文字的範例包括：'/'、'.'、'..'、'\*'、'{' 和 '}'。</span><span class="sxs-lookup"><span data-stu-id="80590-186">Examples of such text includes: '/', '.','..', '\*', '{', and '}'.</span></span> <span data-ttu-id="80590-187">下列程式碼可示範這項處理。</span><span class="sxs-lookup"><span data-stu-id="80590-187">The following code demonstrates this.</span></span>  
  
 `UriTemplate template = new UriTemplate("far/{bat}/baz");`  
  
 `Uri uri = new Uri("http://localhost/Base");`  
  
 `Uri result = template.BindByPosition(uri, ".");   // returns Base/form/baz`  
  
 `Uri result = template.BindByPosition(uri, "..");  // returns Base/baz`  
  
 `Uri result = template.BindByPosition(uri, "x/y");  // returns Base/form/x/y/baz`  
  
 `Uri result = template.BindByPosition(uri, "{x}");  // returns Base/form/{x}/baz`  
  
 `Uri result = template.BindByPosition(uri, "*");  // returns Base/form/*/baz`  
  
   
  
## Examples  
 <span data-ttu-id="80590-188">下列範例將示範如何呼叫 <xref:System.UriTemplate.BindByPosition%28System.Uri%2CSystem.String%5B%5D%29>。</span><span class="sxs-lookup"><span data-stu-id="80590-188">The following example shows how to call the <xref:System.UriTemplate.BindByPosition%28System.Uri%2CSystem.String%5B%5D%29>.</span></span>  
  
 [!code-csharp[UriTemplate#5](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplate/cs/snippets.cs#5)]
 [!code-vb[UriTemplate#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplate/vb/snippets.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Defaults">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; Defaults { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; Defaults" />
      <MemberSignature Language="DocId" Value="P:System.UriTemplate.Defaults" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Defaults As IDictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ Defaults { System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Defaults : System.Collections.Generic.IDictionary&lt;string, string&gt;" Usage="System.UriTemplate.Defaults" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80590-189">取得任何預設參數值之名稱/值組的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="80590-189">Gets a collection of name/value pairs for any default parameter values.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="80590-190">泛型字典。</span>
          <span class="sxs-lookup">
            <span data-stu-id="80590-190">A generic dictionary.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreTrailingSlash">
      <MemberSignature Language="C#" Value="public bool IgnoreTrailingSlash { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreTrailingSlash" />
      <MemberSignature Language="DocId" Value="P:System.UriTemplate.IgnoreTrailingSlash" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IgnoreTrailingSlash As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreTrailingSlash { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreTrailingSlash : bool" Usage="System.UriTemplate.IgnoreTrailingSlash" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80590-191">指定比對候選 URI 時是否應忽略樣板中的結尾斜線 "/"。</span>
          <span class="sxs-lookup">
            <span data-stu-id="80590-191">Specifies whether trailing slashes "/" in the template should be ignored when matching candidate URIs.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="80590-192">
            <see langword="true" /> 如果結尾斜線"/"應會略過，否則<see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="80590-192">
              <see langword="true" /> if trailing slashes "/" should be ignored, otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEquivalentTo">
      <MemberSignature Language="C#" Value="public bool IsEquivalentTo (UriTemplate other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsEquivalentTo(class System.UriTemplate other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.IsEquivalentTo(System.UriTemplate)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsEquivalentTo (other As UriTemplate) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsEquivalentTo(UriTemplate ^ other);" />
      <MemberSignature Language="F#" Value="member this.IsEquivalentTo : UriTemplate -&gt; bool" Usage="uriTemplate.IsEquivalentTo other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.UriTemplate" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="80590-193">要比較的 <see cref="T:System.UriTemplate" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="80590-193">The <see cref="T:System.UriTemplate" /> to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80590-194">指出 <see cref="T:System.UriTemplate" /> 在結構上是否與另一個樣板相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="80590-194">Indicates whether a <see cref="T:System.UriTemplate" /> is structurally equivalent to another.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80590-195">如果 <see cref="T:System.UriTemplate" /> 在結構上等於另一個樣板，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="80590-195">
              <see langword="true" /> if the <see cref="T:System.UriTemplate" /> is structurally equivalent to another; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80590-196">如果這兩個 <xref:System.UriTemplate> 執行個體的常值字串完全相同，而且這些變數出現在相同的區段中，它們就是相等的。</span><span class="sxs-lookup"><span data-stu-id="80590-196">Two <xref:System.UriTemplate> instances are equivalent if their literal strings are identical and the variables appear in the same segments.</span></span> <span data-ttu-id="80590-197">例如，"weather/{state}/{city}" 相等於 "weather/{country}/{village}"。</span><span class="sxs-lookup"><span data-stu-id="80590-197">For example "weather/{state}/{city}" is equivalent to "weather/{country}/{village}".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="80590-198">下列範例將示範如何呼叫 <xref:System.UriTemplate.IsEquivalentTo%28System.UriTemplate%29>。</span><span class="sxs-lookup"><span data-stu-id="80590-198">The following example shows how to call the <xref:System.UriTemplate.IsEquivalentTo%28System.UriTemplate%29>.</span></span>  
  
 [!code-csharp[UriTemplate#6](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplate/cs/snippets.cs#6)]
 [!code-vb[UriTemplate#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplate/vb/snippets.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public UriTemplateMatch Match (Uri baseAddress, Uri candidate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.UriTemplateMatch Match(class System.Uri baseAddress, class System.Uri candidate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.Match(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function Match (baseAddress As Uri, candidate As Uri) As UriTemplateMatch" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UriTemplateMatch ^ Match(Uri ^ baseAddress, Uri ^ candidate);" />
      <MemberSignature Language="F#" Value="member this.Match : Uri * Uri -&gt; UriTemplateMatch" Usage="uriTemplate.Match (baseAddress, candidate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UriTemplateMatch</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseAddress" Type="System.Uri" />
        <Parameter Name="candidate" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="baseAddress">
          <span data-ttu-id="80590-199">基底位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="80590-199">The base address.</span>
          </span>
        </param>
        <param name="candidate">
          <span data-ttu-id="80590-200">要與樣板比對的 <see cref="T:System.Uri" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="80590-200">The <see cref="T:System.Uri" /> to match against the template.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80590-201">嘗試比對 <see cref="T:System.URI" /> 與 <see cref="T:System.UriTemplate" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="80590-201">Attempts to match a <see cref="T:System.URI" /> to a <see cref="T:System.UriTemplate" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80590-202">執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="80590-202">An instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80590-203">如果比對成功，<xref:System.UriTemplateMatch> 會從填入候選 URI 的 URI 區段、變數值、查詢字串值和萬用字元區段。</span><span class="sxs-lookup"><span data-stu-id="80590-203">If the match is successful the <xref:System.UriTemplateMatch> is populated with the URI segments, variable values, query string values, and wildcard segments from the candidate URI.</span></span> <span data-ttu-id="80590-204">如果比對不成功，則會傳回 `null`。</span><span class="sxs-lookup"><span data-stu-id="80590-204">If the match is unsuccessful, `null` is returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="80590-205">下列範例會示範如何呼叫 <xref:System.UriTemplate.Match%28System.Uri%2CSystem.Uri%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="80590-205">The following example shows how to call the <xref:System.UriTemplate.Match%28System.Uri%2CSystem.Uri%29> method.</span></span>  
  
 [!code-csharp[UriTemplate#7](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplate/cs/snippets.cs#7)]
 [!code-vb[UriTemplate#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplate/vb/snippets.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PathSegmentVariableNames">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt; PathSegmentVariableNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt; PathSegmentVariableNames" />
      <MemberSignature Language="DocId" Value="P:System.UriTemplate.PathSegmentVariableNames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PathSegmentVariableNames As ReadOnlyCollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ PathSegmentVariableNames { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PathSegmentVariableNames : System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt;" Usage="System.UriTemplate.PathSegmentVariableNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80590-206">取得在樣板中的路徑區段內使用之變數名稱的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="80590-206">Gets a collection of variable names used within path segments in the template.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="80590-207">出現在樣板內路徑區段中之變數名稱的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="80590-207">A collection of variable names that appear within the template's path segment.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80590-208">此集合會排除出現在樣板查詢部分中之變數的名稱。</span><span class="sxs-lookup"><span data-stu-id="80590-208">The collection excludes the names of variables that appear in the query portion of the template.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="80590-209">下列範例將示範如何存取 <xref:System.UriTemplate.PathSegmentVariableNames%2A> 屬性。</span><span class="sxs-lookup"><span data-stu-id="80590-209">The following example shows how to access the <xref:System.UriTemplate.PathSegmentVariableNames%2A> property.</span></span>  
  
 [!code-csharp[UriTemplate#2](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplate/cs/snippets.cs#2)]
 [!code-vb[UriTemplate#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplate/vb/snippets.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryValueVariableNames">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt; QueryValueVariableNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt; QueryValueVariableNames" />
      <MemberSignature Language="DocId" Value="P:System.UriTemplate.QueryValueVariableNames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property QueryValueVariableNames As ReadOnlyCollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ QueryValueVariableNames { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.QueryValueVariableNames : System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt;" Usage="System.UriTemplate.QueryValueVariableNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80590-210">取得在樣板中的查詢字串內使用之變數名稱的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="80590-210">Gets a collection of variable names used within the query string in the template.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="80590-211">出現在樣板字串查詢部分中之樣板變數名稱的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="80590-211">A collection of template variable names that appear in the query portion of the template string.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80590-212">這個集合會排除出現在樣板字串之路徑區段中的變數名稱。</span><span class="sxs-lookup"><span data-stu-id="80590-212">This collection excludes variable names that appear in the path section of the template string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="80590-213">下列範例將示範如何存取 <xref:System.UriTemplate.QueryValueVariableNames%2A> 屬性。</span><span class="sxs-lookup"><span data-stu-id="80590-213">The following example shows how to access the <xref:System.UriTemplate.QueryValueVariableNames%2A> property.</span></span>  
  
 [!code-csharp[UriTemplate#3](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplate/cs/snippets.cs#3)]
 [!code-vb[UriTemplate#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplate/vb/snippets.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="uriTemplate.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="80590-214">傳回 <see cref="T:System.UriTemplate" /> 執行個體的字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="80590-214">Returns a string representation of the <see cref="T:System.UriTemplate" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80590-215">
            <see cref="T:System.UriTemplate" /> 執行個體的表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="80590-215">The representation of the <see cref="T:System.UriTemplate" /> instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="80590-216">下列範例會示範如何呼叫 <xref:System.UriTemplate.ToString> 方法。</span><span class="sxs-lookup"><span data-stu-id="80590-216">The following example shows how to call the <xref:System.UriTemplate.ToString> method.</span></span>  
  
 [!code-csharp[UriTemplate#8](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplate/cs/snippets.cs#8)]
 [!code-vb[UriTemplate#8](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplate/vb/snippets.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>