<Type Name="Action&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13&gt;" FullName="System.Action&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a73841cee94b18c4aea4108fdbe0657052cd6fc3" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="36434039" /></Metadata><TypeSignature Language="C#" Value="public delegate void Action&lt;in T1,in T2,in T3,in T4,in T5,in T6,in T7,in T8,in T9,in T10,in T11,in T12,in T13&gt;(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10, T11 arg11, T12 arg12, T13 arg13);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Action`13&lt;- T1, - T2, - T3, - T4, - T5, - T6, - T7, - T8, - T9, - T10, - T11, - T12, - T13&gt; extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Action`13" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub Action(Of In T1, In T2, In T3, In T4, In T5, In T6, In T7, In T8, In T9, In T10, In T11, In T12, In T13)(arg1 As T1, arg2 As T2, arg3 As T3, arg4 As T4, arg5 As T5, arg6 As T6, arg7 As T7, arg8 As T8, arg9 As T9, arg10 As T10, arg11 As T11, arg12 As T12, arg13 As T13)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11, typename T12, typename T13&gt;&#xA;public delegate void Action(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10, T11 arg11, T12 arg12, T13 arg13);" />
  <TypeSignature Language="F#" Value="type Action&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, 'T10, 'T11, 'T12, 'T13&gt; = delegate of 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11 * 'T12 * 'T13 -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T1">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T2">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T3">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T4">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T5">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T6">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T7">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T8">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T9">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T10">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T11">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T12">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T13">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="arg1" Type="T1" />
    <Parameter Name="arg2" Type="T2" />
    <Parameter Name="arg3" Type="T3" />
    <Parameter Name="arg4" Type="T4" />
    <Parameter Name="arg5" Type="T5" />
    <Parameter Name="arg6" Type="T6" />
    <Parameter Name="arg7" Type="T7" />
    <Parameter Name="arg8" Type="T8" />
    <Parameter Name="arg9" Type="T9" />
    <Parameter Name="arg10" Type="T10" />
    <Parameter Name="arg11" Type="T11" />
    <Parameter Name="arg12" Type="T12" />
    <Parameter Name="arg13" Type="T13" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <typeparam name="T1">此委派封裝之方法的第一個參數類型。</typeparam>
    <typeparam name="T2">此委派封裝之方法的第二個參數類型。</typeparam>
    <typeparam name="T3">此委派封裝之方法的第三個參數類型。</typeparam>
    <typeparam name="T4">這個委派所封裝之方法的第四個參數類型。</typeparam>
    <typeparam name="T5">這個委派所封裝方法之第 5 個參數的型別。</typeparam>
    <typeparam name="T6">這個委派所封裝方法之第 6 個參數的型別。</typeparam>
    <typeparam name="T7">這個委派所封裝方法之第 7 個參數的型別。</typeparam>
    <typeparam name="T8">這個委派所封裝方法之第 8 個參數的型別。</typeparam>
    <typeparam name="T9">這個委派所封裝方法之第 9 個參數的型別。</typeparam>
    <typeparam name="T10">這個委派所封裝方法之第 10 個參數的型別。</typeparam>
    <typeparam name="T11">這個委派所封裝方法之第 11 個參數的型別。</typeparam>
    <typeparam name="T12">這個委派所封裝方法之第 12 個參數的型別。</typeparam>
    <typeparam name="T13">這個委派所封裝方法之第 13 個參數的型別。</typeparam>
    <param name="arg1">此委派封裝之方法的第一個參數。</param>
    <param name="arg2">此委派封裝之方法的第二個參數。</param>
    <param name="arg3">此委派封裝之方法的第三個參數。</param>
    <param name="arg4">這個委派所封裝之方法的第四個參數。</param>
    <param name="arg5">這個委派所封裝之方法的第 5 個參數。</param>
    <param name="arg6">這個委派所封裝之方法的第 6 個參數。</param>
    <param name="arg7">這個委派所封裝之方法的第 7 個參數。</param>
    <param name="arg8">這個委派所封裝之方法的第 8 個參數。</param>
    <param name="arg9">這個委派所封裝之方法的第 9 個參數。</param>
    <param name="arg10">這個委派所封裝之方法的第 10 個參數。</param>
    <param name="arg11">這個委派所封裝之方法的第 11 個參數。</param>
    <param name="arg12">這個委派所封裝之方法的第 12 個參數。</param>
    <param name="arg13">這個委派所封裝之方法的第 13 個參數。</param>
    <summary>封裝有 13 個參數的方法，並且不會傳回值。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用<xref:System.Action%6013>做為參數傳遞給方法，而不必明確宣告自訂委派的委派。 封裝的方法必須對應到這個委派所定義的方法簽章。 這表示封裝的方法必須有 13 個參數，所有傳遞給它的值，而且必須傳回值。 (在 C# 中，此方法必須傳回`void`。 在 Visual Basic 中，它必須由定義`Sub`...`End Sub` 建構。 它也可以傳回值，則會忽略這個值的方法。）通常，這種方法用來執行作業。  
  
> [!NOTE]
>  若要參考具有 13 個參數並傳回值的方法，使用泛型<xref:System.Func%6014>改為委派。  
  
 您也可以使用<xref:System.Action%6013>委派與匿名方法和 lambda 運算式。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Func`14" />
  </Docs>
</Type>