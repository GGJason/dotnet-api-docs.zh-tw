<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Activator.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac533496946a13ba8e7a29674ceaab89361b3bde664.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">33496946a13ba8e7a29674ceaab89361b3bde664</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Activator">
          <source>Contains methods to create types of objects locally or remotely, or obtain references to existing remote objects.</source>
          <target state="translated">包含本機或遠端建立物件類型的方法，或者取得對現有遠端物件的參考。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Activator">
          <source>This class cannot be inherited.</source>
          <target state="translated">這個類別無法被繼承。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activator">
          <source>The <ph id="ph1">&lt;xref:System.Activator.CreateInstance%2A&gt;</ph> method creates an instance of a type defined in an assembly by invoking the constructor that best matches the specified arguments.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Activator.CreateInstance%2A&gt;</ph>方法會建立叫用的建構函式最符合的組件中定義之類型的執行個體指定的引數。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activator">
          <source>If no arguments are specified, the constructor that takes no parameters, that is, the default constructor, is invoked.</source>
          <target state="translated">如果未不指定任何引數，則會採用任何參數，也就是預設建構函式的建構函式會叫用。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activator">
          <source>You must have sufficient permission to search for and call a constructor; otherwise, an exception is thrown.</source>
          <target state="translated">您必須擁有足夠的權限，以搜尋與呼叫建構函式。否則，會擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activator">
          <source>By default, only public constructors are considered during the search for a constructor.</source>
          <target state="translated">根據預設，只有公用的建構函式會被視為的建構函式在搜尋期間。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activator">
          <source>If no constructor or default constructor can be found, an exception is thrown.</source>
          <target state="translated">如果可以找到任何建構函式或預設建構函式，會擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activator">
          <source>A binder parameter specifies an object that searches an assembly for a suitable constructor.</source>
          <target state="translated">繫結器參數會指定適當的建構函式組件中搜尋的物件。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activator">
          <source>You can specify your own binder and search criteria.</source>
          <target state="translated">您可以指定您自己的繫結器和搜尋準則。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activator">
          <source>If no binder is specified, a default binder is used.</source>
          <target state="translated">如果沒有指定，會使用預設繫結器。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activator">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Reflection.Binder?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Reflection.BindingFlags?displayProperty=nameWithType&gt;</ph> classes.</source>
          <target state="translated">如需詳細資訊，請參閱 <ph id="ph1">&lt;xref:System.Reflection.Binder?displayProperty=nameWithType&gt;</ph> 和 <ph id="ph2">&lt;xref:System.Reflection.BindingFlags?displayProperty=nameWithType&gt;</ph> 類別。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activator">
          <source>An evidence parameter affects the security policy and permissions for the constructor.</source>
          <target state="translated">辨識項參數會影響安全性原則和建構函式的權限。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activator">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Security.Policy.Evidence?displayProperty=nameWithType&gt;</ph> class.</source>
          <target state="translated">如需詳細資訊，請參閱 <ph id="ph1">&lt;xref:System.Security.Policy.Evidence?displayProperty=nameWithType&gt;</ph> 類別。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activator">
          <source>An instance of a type can be created at a local or remote site.</source>
          <target state="translated">類型的執行個體可以建立在本機或遠端站台。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activator">
          <source>If the type is created remotely, an activation attribute parameter specifies the URI of the remote site.</source>
          <target state="translated">如果建立類型時，請從遠端啟動屬性參數會指定遠端網站的 URI。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activator">
          <source>The call to create the instance might pass through intermediary sites before it reaches the remote site.</source>
          <target state="translated">到達遠端站台之前建立的執行個體的呼叫可能會通過中間的站台。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activator">
          <source>Other activation attributes can modify the environment, or context, in which the call operates at the remote and intermediary sites.</source>
          <target state="translated">其他啟動屬性可以修改環境或內容中，呼叫遠端和中間的站台上運作。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activator">
          <source>If the instance is created locally, a reference to that object is returned.</source>
          <target state="translated">如果在本機建立的執行個體，就會傳回該物件的參考。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activator">
          <source>If the instance is created remotely, a reference to a proxy is returned.</source>
          <target state="translated">如果遠端建立執行個體，則會傳回 proxy 的參考。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activator">
          <source>The remote object is manipulated through the proxy as if it were a local object.</source>
          <target state="translated">遠端物件是透過 proxy 操作，如同它是本機的物件。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activator">
          <source>The <ph id="ph1">&lt;xref:System.Activator.GetObject%2A&gt;</ph> method creates a proxy to a currently running remote object, server-activated well-known object, or XML Web service.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Activator.GetObject%2A&gt;</ph>方法建立目前執行的遠端物件、 伺服器啟動已知物件或 XML Web 服務 proxy。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activator">
          <source>You can specify the connection medium, that is, the channel.</source>
          <target state="translated">您可以指定連線媒體，也就是通道。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activator">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Runtime.Remoting.Channels.ChannelServices?displayProperty=nameWithType&gt;</ph> class.</source>
          <target state="translated">如需詳細資訊，請參閱 <ph id="ph1">&lt;xref:System.Runtime.Remoting.Channels.ChannelServices?displayProperty=nameWithType&gt;</ph> 類別。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activator">
          <source>Assemblies contain type definitions.</source>
          <target state="translated">組件包含類型定義。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activator">
          <source>The <ph id="ph1">&lt;xref:System.Activator.CreateInstance%2A&gt;</ph> method creates an instance of a type from a currently running assembly.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Activator.CreateInstance%2A&gt;</ph>方法會從目前正在執行的組件建立類型的執行個體。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activator">
          <source>The <ph id="ph1">&lt;xref:System.Activator.CreateInstanceFrom%2A&gt;</ph> method creates an instance from a file that contains an assembly.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Activator.CreateInstanceFrom%2A&gt;</ph>方法從包含組件檔案中建立執行個體。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activator">
          <source>The <ph id="ph1">&lt;xref:System.Activator.CreateComInstanceFrom%2A&gt;</ph> method creates an instance of a COM object from a file that contains an assembly.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Activator.CreateComInstanceFrom%2A&gt;</ph>方法從檔案包含的組件建立 COM 物件的執行個體。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activator">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Activator&gt;</ph> class to dynamically construct objects at run time.</source>
          <target state="translated">下列範例示範如何使用<ph id="ph1">&lt;xref:System.Activator&gt;</ph>以動態方式建構物件在執行階段類別。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="T:System.Activator">
          <source>Creates an instance of the COM object whose name is specified.</source>
          <target state="translated">建立已具有指定名稱之 COM 物件的執行個體。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateComInstanceFrom(System.String,System.String)">
          <source>The name of a file that contains an assembly where the type named <bpt id="p1">&lt;c&gt;</bpt>typeName<ept id="p1">&lt;/c&gt;</ept> is sought.</source>
          <target state="translated">檔案的名稱，該檔案包含要在其中搜尋名稱為 <bpt id="p1">&lt;c&gt;</bpt>typeName<ept id="p1">&lt;/c&gt;</ept> 之類型的組件。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateComInstanceFrom(System.String,System.String)">
          <source>The name of the preferred type.</source>
          <target state="translated">慣用類型的名稱。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateComInstanceFrom(System.String,System.String)">
          <source>Creates an instance of the COM object whose name is specified, using the named assembly file and the default constructor.</source>
          <target state="translated">使用具名組件檔案和預設建構函式 (Constructor)，建立已具有指定名稱之 COM 物件的執行個體。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateComInstanceFrom(System.String,System.String)">
          <source>A handle that must be unwrapped to access the newly created instance.</source>
          <target state="translated">必須解除包裝的控制代碼，用來存取新建立的執行個體。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateComInstanceFrom(System.String,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType&gt;</ph> method to unwrap the return value.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType&gt;</ph>要未包裝的傳回值的方法。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateComInstanceFrom(System.String,System.String)">
          <source>A <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ComVisibleAttribute?displayProperty=nameWithType&gt;</ph> attribute with a value of <ph id="ph2">`true`</ph> must be applied either explicitly or by default to the COM type so the <ph id="ph3">&lt;xref:System.Activator.CreateComInstanceFrom%2A&gt;</ph> method can create an instance of that type; otherwise, <ph id="ph4">&lt;xref:System.TypeLoadException&gt;</ph> is thrown.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Runtime.InteropServices.ComVisibleAttribute?displayProperty=nameWithType&gt;</ph>屬性的值<ph id="ph2">`true`</ph>必須應用於明確或預設 COM 型別而<ph id="ph3">&lt;xref:System.Activator.CreateComInstanceFrom%2A&gt;</ph>方法可以建立該類型的執行個體，否則<ph id="ph4">&lt;xref:System.TypeLoadException&gt;</ph>就會擲回。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateComInstanceFrom(System.String,System.String)">
          <source>For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <ph id="ph1">&lt;xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Activator.CreateInstance%2A&gt;</ph> methods.</source>
          <target state="translated">其他可能會叫用方法所擲回的例外狀況的相關資訊，請參閱例外狀況區段<ph id="ph1">&lt;xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType&gt;</ph>和<ph id="ph2">&lt;xref:System.Activator.CreateInstance%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateComInstanceFrom(System.String,System.String)">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph>, this method can be used to create nonpublic types if the caller has been granted <ph id="ph2">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph> with the <ph id="ph3">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType&gt;</ph> flag and if the grant set of the assembly that contains the nonpublic types is restricted to the caller’s grant set or to a subset thereof.</source>
          <target state="translated">從開始<ph id="ph1">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph>，這個方法可以用來建立非公用型別，如果呼叫端被授與<ph id="ph2">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph>與<ph id="ph3">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType&gt;</ph>旗標和包含非公用類型的組件的授權集如果是呼叫者的授與限制設定或子集。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateComInstanceFrom(System.String,System.String)">
          <source>(See <bpt id="p1">[</bpt>Security Considerations for Reflection<ept id="p1">](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)</ept>.)</source>
          <target state="translated">(請參閱<bpt id="p1">[</bpt>反映的安全性考量<ept id="p1">](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)</ept>。)</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateComInstanceFrom(System.String,System.String)">
          <source>To use this functionality, your application should target the <ph id="ph1">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph> or later.</source>
          <target state="translated">若要使用這項功能，您的應用程式應將目標設為 <ph id="ph1">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph> (含) 以後版本。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateComInstanceFrom(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="typeName" /&gt;</ph> or <ph id="ph2">&lt;paramref name="assemblyName" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="typeName" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="assemblyName" /&gt;</ph> 為 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateComInstanceFrom(System.String,System.String)">
          <source>An instance cannot be created through COM.</source>
          <target state="translated">無法透過 COM 建立執行個體。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateComInstanceFrom(System.String,System.String)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateComInstanceFrom(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="typename" /&gt;</ph> was not found in <ph id="ph2">&lt;paramref name="assemblyName" /&gt;</ph>.</source>
          <target state="translated">在 <ph id="ph2">&lt;paramref name="assemblyName" /&gt;</ph> 中找不到 <ph id="ph1">&lt;paramref name="typename" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateComInstanceFrom(System.String,System.String)">
          <source>No matching constructor was found.</source>
          <target state="translated">找不到相符的建構函式。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateComInstanceFrom(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="assemblyName" /&gt;</ph> is not found, or the module you are trying to load does not specify a file name extension.</source>
          <target state="translated">找不到 <ph id="ph1">&lt;paramref name="assemblyName" /&gt;</ph>，或您想載入的模組並未指定檔案的副檔名。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateComInstanceFrom(System.String,System.String)">
          <source>Cannot create an instance of an abstract class.</source>
          <target state="translated">無法建立抽象類別的執行個體。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateComInstanceFrom(System.String,System.String)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateComInstanceFrom(System.String,System.String)">
          <source>This member was invoked with a late-binding mechanism.</source>
          <target state="translated">這個成員曾被晚期繫結機制叫用過。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateComInstanceFrom(System.String,System.String)">
          <source>The caller cannot provide activation attributes for an object that does not inherit from <ph id="ph1">&lt;see cref="T:System.MarshalByRefObject" /&gt;</ph>.</source>
          <target state="translated">呼叫者無法提供非繼承自 <ph id="ph1">&lt;see cref="T:System.MarshalByRefObject" /&gt;</ph> 之物件的啟動屬性。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateComInstanceFrom(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="assemblyName" /&gt;</ph> is the empty string ("").</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="assemblyName" /&gt;</ph> 為空字串 ("")。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateComInstanceFrom(System.String,System.String)">
          <source>for accessing nonpublic types regardless of their grant set.</source>
          <target state="translated">用來存取非公用型別，不論其授權集。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateComInstanceFrom(System.String,System.String)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateComInstanceFrom(System.String,System.String,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)">
          <source>The name of a file that contains an assembly where the type named <bpt id="p1">&lt;c&gt;</bpt>typeName<ept id="p1">&lt;/c&gt;</ept> is sought.</source>
          <target state="translated">檔案的名稱，該檔案包含要在其中搜尋名稱為 <bpt id="p1">&lt;c&gt;</bpt>typeName<ept id="p1">&lt;/c&gt;</ept> 之類型的組件。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateComInstanceFrom(System.String,System.String,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)">
          <source>The name of the preferred type.</source>
          <target state="translated">慣用類型的名稱。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateComInstanceFrom(System.String,System.String,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)">
          <source>The value of the computed hash code.</source>
          <target state="translated">計算的雜湊碼值。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateComInstanceFrom(System.String,System.String,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)">
          <source>The hash algorithm used for hashing files and generating the strong name.</source>
          <target state="translated">雜湊演算法，用於雜湊檔案並產生強式名稱 (Strong Name)。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateComInstanceFrom(System.String,System.String,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)">
          <source>Creates an instance of the COM object whose name is specified, using the named assembly file and the default constructor.</source>
          <target state="translated">使用具名組件檔案和預設建構函式 (Constructor)，建立已具有指定名稱之 COM 物件的執行個體。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateComInstanceFrom(System.String,System.String,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)">
          <source>A handle that must be unwrapped to access the newly created instance.</source>
          <target state="translated">必須解除包裝的控制代碼，用來存取新建立的執行個體。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateComInstanceFrom(System.String,System.String,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)">
          <source>Use the <ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType&gt;</ph> method to unwrap the return value.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType&gt;</ph>要未包裝的傳回值的方法。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateComInstanceFrom(System.String,System.String,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)">
          <source>A <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ComVisibleAttribute?displayProperty=nameWithType&gt;</ph> attribute with a value of <ph id="ph2">`true`</ph> must be applied either explicitly or by default to the COM type so the <ph id="ph3">&lt;xref:System.Activator.CreateComInstanceFrom%2A&gt;</ph> method can create an instance of that type; otherwise, <ph id="ph4">&lt;xref:System.TypeLoadException&gt;</ph> is thrown.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Runtime.InteropServices.ComVisibleAttribute?displayProperty=nameWithType&gt;</ph>屬性的值<ph id="ph2">`true`</ph>必須應用於明確或預設 COM 型別而<ph id="ph3">&lt;xref:System.Activator.CreateComInstanceFrom%2A&gt;</ph>方法可以建立該類型的執行個體，否則<ph id="ph4">&lt;xref:System.TypeLoadException&gt;</ph>就會擲回。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateComInstanceFrom(System.String,System.String,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)">
          <source>For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <ph id="ph1">&lt;xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Activator.CreateInstance%2A&gt;</ph> methods.</source>
          <target state="translated">其他可能會叫用方法所擲回的例外狀況的相關資訊，請參閱例外狀況區段<ph id="ph1">&lt;xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType&gt;</ph>和<ph id="ph2">&lt;xref:System.Activator.CreateInstance%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateComInstanceFrom(System.String,System.String,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph>, this method can be used to create nonpublic types if the caller has been granted <ph id="ph2">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph> with the <ph id="ph3">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType&gt;</ph> flag and if the grant set of the assembly that contains the nonpublic types is restricted to the caller’s grant set or to a subset thereof.</source>
          <target state="translated">從開始<ph id="ph1">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph>，這個方法可以用來建立非公用型別，如果呼叫端被授與<ph id="ph2">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph>與<ph id="ph3">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType&gt;</ph>旗標和包含非公用類型的組件的授權集如果是呼叫者的授與限制設定或子集。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateComInstanceFrom(System.String,System.String,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)">
          <source>(See <bpt id="p1">[</bpt>Security Considerations for Reflection<ept id="p1">](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)</ept>.)</source>
          <target state="translated">(請參閱<bpt id="p1">[</bpt>反映的安全性考量<ept id="p1">](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)</ept>。)</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateComInstanceFrom(System.String,System.String,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)">
          <source>To use this functionality, your application should target the <ph id="ph1">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph> or later.</source>
          <target state="translated">若要使用這項功能，您的應用程式應將目標設為 <ph id="ph1">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph> (含) 以後版本。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateComInstanceFrom(System.String,System.String,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)">
          <source><ph id="ph1">&lt;paramref name="typeName" /&gt;</ph> or <ph id="ph2">&lt;paramref name="assemblyName" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="typeName" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="assemblyName" /&gt;</ph> 為 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateComInstanceFrom(System.String,System.String,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)">
          <source><ph id="ph1">&lt;paramref name="assemblyName" /&gt;</ph> is the empty string ("").</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="assemblyName" /&gt;</ph> 為空字串 ("")。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateComInstanceFrom(System.String,System.String,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)">
          <source>An assembly or module was loaded twice with two different evidences, or the assembly name is longer than MAX_PATH characters.</source>
          <target state="translated">以兩個不同辨識項載入兩次組件或模組，或是組件名稱長度超過 MAX_PATH 字元數。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateComInstanceFrom(System.String,System.String,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)">
          <source><ph id="ph1">&lt;paramref name="assemblyName" /&gt;</ph> is not found, or the module you are trying to load does not specify a file name extension.</source>
          <target state="translated">找不到 <ph id="ph1">&lt;paramref name="assemblyName" /&gt;</ph>，或您想載入的模組並未指定檔案的副檔名。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateComInstanceFrom(System.String,System.String,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)">
          <source><ph id="ph1">&lt;paramref name="assemblyName" /&gt;</ph> is found but cannot be loaded.</source>
          <target state="translated">已找到 <ph id="ph1">&lt;paramref name="assemblyName" /&gt;</ph> 但是無法載入。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateComInstanceFrom(System.String,System.String,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)">
          <source><ph id="ph1">&lt;paramref name="assemblyName" /&gt;</ph> is not a valid assembly.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="assemblyName" /&gt;</ph> 不是有效的組件。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateComInstanceFrom(System.String,System.String,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)">
          <source>A code base that does not start with "file://" was specified without the required <ph id="ph1">&lt;see langword="WebPermission" /&gt;</ph>.</source>
          <target state="translated">指定未以 "file://" 開頭的程式碼基底時，沒有必要的 <ph id="ph1">&lt;see langword="WebPermission" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateComInstanceFrom(System.String,System.String,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)">
          <source>An instance cannot be created through COM.</source>
          <target state="translated">無法透過 COM 建立執行個體。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateComInstanceFrom(System.String,System.String,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateComInstanceFrom(System.String,System.String,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)">
          <source><ph id="ph1">&lt;paramref name="typename" /&gt;</ph> was not found in <ph id="ph2">&lt;paramref name="assemblyName" /&gt;</ph>.</source>
          <target state="translated">在 <ph id="ph2">&lt;paramref name="assemblyName" /&gt;</ph> 中找不到 <ph id="ph1">&lt;paramref name="typename" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateComInstanceFrom(System.String,System.String,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)">
          <source>No matching constructor was found.</source>
          <target state="translated">找不到相符的建構函式。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateComInstanceFrom(System.String,System.String,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)">
          <source>An instance of an abstract class cannot be created.</source>
          <target state="translated">無法建立抽象類別的執行個體。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateComInstanceFrom(System.String,System.String,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateComInstanceFrom(System.String,System.String,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)">
          <source>This member was invoked with a late-binding mechanism.</source>
          <target state="translated">這個成員曾被晚期繫結機制叫用過。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateComInstanceFrom(System.String,System.String,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)">
          <source>The caller cannot provide activation attributes for an object that does not inherit from <ph id="ph1">&lt;see cref="T:System.MarshalByRefObject" /&gt;</ph>.</source>
          <target state="translated">呼叫者無法提供非繼承自 <ph id="ph1">&lt;see cref="T:System.MarshalByRefObject" /&gt;</ph> 之物件的啟動屬性。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateComInstanceFrom(System.String,System.String,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)">
          <source>for accessing nonpublic types regardless of their grant set.</source>
          <target state="translated">用來存取非公用型別，不論其授權集。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateComInstanceFrom(System.String,System.String,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateComInstanceFrom(System.String,System.String,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)">
          <source>for reading a URI that begins with "file://".</source>
          <target state="translated">用於讀取以"file:// 開頭的 URI。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateComInstanceFrom(System.String,System.String,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateComInstanceFrom(System.String,System.String,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)">
          <source>for reading a URI that does not begin with "file://".</source>
          <target state="translated">用於讀取不是以"file:// 開頭的 URI。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="T:System.Activator">
          <source>Creates an instance of the specified type using the constructor that best matches the specified parameters.</source>
          <target state="translated">使用最符合指定參數的建構函式，建立指定類型的執行個體。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.ActivationContext)">
          <source>An activation context object that specifies the object to create.</source>
          <target state="translated">啟動內容物件，指定要建立的物件。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.ActivationContext)">
          <source>Creates an instance of the type designated by the specified <ph id="ph1">&lt;see cref="T:System.ActivationContext" /&gt;</ph> object.</source>
          <target state="translated">建立類型的執行個體，這個類型是由指定的 <ph id="ph1">&lt;see cref="T:System.ActivationContext" /&gt;</ph> 物件所指派。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.ActivationContext)">
          <source>A handle that must be unwrapped to access the newly created object.</source>
          <target state="translated">必須解除包裝的控制代碼，用來存取新建立的物件。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.ActivationContext)">
          <source>Use the <ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType&gt;</ph> method to unwrap the return value.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType&gt;</ph>要未包裝的傳回值的方法。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.ActivationContext)">
          <source>The activation context is used during manifest-based activation to set up the domain policy and to provide an application-based security model.</source>
          <target state="translated">在資訊清單為基礎的啟用期間使用的啟用內容，來設定網域原則，並提供應用程式為基礎的安全性模型。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.ActivationContext)">
          <source>The <ph id="ph1">&lt;xref:System.ActivationContext&gt;</ph> class contains an <ph id="ph2">&lt;xref:System.ApplicationIdentity&gt;</ph> object that provides access to the application manifest.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ActivationContext&gt;</ph>類別包含<ph id="ph2">&lt;xref:System.ApplicationIdentity&gt;</ph>物件，提供應用程式資訊清單的存取。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.ActivationContext)">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Security.Policy.ApplicationSecurityManager&gt;</ph> class.</source>
          <target state="translated">如需詳細資訊，請參閱 <ph id="ph1">&lt;xref:System.Security.Policy.ApplicationSecurityManager&gt;</ph> 類別。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type)">
          <source>The type of object to create.</source>
          <target state="translated">要建立的物件類型。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type)">
          <source>Creates an instance of the specified type using that type's default constructor.</source>
          <target state="translated">使用指定之類型的預設建構函式，建立該類型的執行個體。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type)">
          <source>A reference to the newly created object.</source>
          <target state="translated">新建立物件的參考。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.Type)">
          <source>The constructor to be invoked must be accessible.</source>
          <target state="translated">要叫用的建構函式必須可以存取。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.Type)">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph>, this method can be used to access nonpublic types if the caller has been granted <ph id="ph2">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph> with the <ph id="ph3">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType&gt;</ph> flag and if the grant set of the assembly that contains the nonpublic types is restricted to the caller’s grant set or to a subset thereof.</source>
          <target state="translated">從開始<ph id="ph1">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph>，這個方法可以用來存取非公用型別，如果呼叫端被授與<ph id="ph2">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph>與<ph id="ph3">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType&gt;</ph>旗標和包含非公用類型的組件的授權集如果是呼叫者的授與限制設定或子集。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.Type)">
          <source>(See <bpt id="p1">[</bpt>Security Considerations for Reflection<ept id="p1">](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)</ept>.)</source>
          <target state="translated">(請參閱<bpt id="p1">[</bpt>反映的安全性考量<ept id="p1">](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)</ept>。)</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.Type)">
          <source>To use this functionality, your application should target the <ph id="ph1">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph> or later.</source>
          <target state="translated">若要使用這項功能，您的應用程式應將目標設為 <ph id="ph1">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph> (含) 以後版本。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.Type)">
          <source>The following code example demonstrates how to call the <ph id="ph1">&lt;xref:System.Activator.CreateInstance%28System.Type%29&gt;</ph> method.</source>
          <target state="translated">下列程式碼範例示範如何呼叫<ph id="ph1">&lt;xref:System.Activator.CreateInstance%28System.Type%29&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.Type)">
          <source>Instances of several different types are created and their default values are displayed.</source>
          <target state="translated">建立數種不同類型的執行個體，並且顯示其預設值。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is not a <ph id="ph2">&lt;see langword="RuntimeType" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> 不是 <ph id="ph2">&lt;see langword="RuntimeType" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is an open generic type (that is, the <ph id="ph2">&lt;see cref="P:System.Type.ContainsGenericParameters" /&gt;</ph> property returns <ph id="ph3">&lt;see langword="true" /&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> 是開放式泛型類型 (也就是 <ph id="ph2">&lt;see cref="P:System.Type.ContainsGenericParameters" /&gt;</ph> 屬性會傳回 <ph id="ph3">&lt;see langword="true" /&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> cannot be a <ph id="ph2">&lt;see cref="T:System.Reflection.Emit.TypeBuilder" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> 不可以是 <ph id="ph2">&lt;see cref="T:System.Reflection.Emit.TypeBuilder" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type)">
          <source>Creation of <ph id="ph1">&lt;see cref="T:System.TypedReference" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.ArgIterator" /&gt;</ph>, <ph id="ph3">&lt;see cref="T:System.Void" /&gt;</ph>, and <ph id="ph4">&lt;see cref="T:System.RuntimeArgumentHandle" /&gt;</ph> types, or arrays of those types, is not supported.</source>
          <target state="translated">不支援建立 <ph id="ph1">&lt;see cref="T:System.TypedReference" /&gt;</ph>、<ph id="ph2">&lt;see cref="T:System.ArgIterator" /&gt;</ph>、<ph id="ph3">&lt;see cref="T:System.Void" /&gt;</ph> 和 <ph id="ph4">&lt;see cref="T:System.RuntimeArgumentHandle" /&gt;</ph> 類型或這些類型的陣列。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type)">
          <source>The assembly that contains <ph id="ph1">&lt;paramref name="type" /&gt;</ph> is a dynamic assembly that was created with <ph id="ph2">&lt;see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" /&gt;</ph>.</source>
          <target state="translated">包含 <ph id="ph1">&lt;paramref name="type" /&gt;</ph> 的組件是以 <ph id="ph2">&lt;see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" /&gt;</ph> 建立的動態組件。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type)">
          <source>The constructor being called throws an exception.</source>
          <target state="translated">正在呼叫的建構函式擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type)">
          <source>In the <bpt id="p1">[</bpt>.NET for Windows Store apps<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=247912)</ept> or the <bpt id="p2">[</bpt>Portable Class Library<ept id="p2">](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md)</ept>, catch the base class exception, <ph id="ph1">&lt;see cref="T:System.MemberAccessException" /&gt;</ph>, instead.</source>
          <target state="translated">在<bpt id="p1">[</bpt>適用於 Windows 市集應用程式的 .NET<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=247912)</ept> 或是<bpt id="p2">[</bpt>可攜式類別庫<ept id="p2">](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md)</ept>中，改為攔截基底類別例外狀況 <ph id="ph1">&lt;see cref="T:System.MemberAccessException" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type)">
          <source>The caller does not have permission to call this constructor.</source>
          <target state="translated">呼叫端沒有呼叫這個建構函式的權限。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type)">
          <source>Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</source>
          <target state="translated">無法建立抽象類別的執行個體，或者這個成員曾被晚期繫結機制叫用過。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type)">
          <source>The COM type was not obtained through <ph id="ph1">&lt;see cref="Overload:System.Type.GetTypeFromProgID" /&gt;</ph> or <ph id="ph2">&lt;see cref="Overload:System.Type.GetTypeFromCLSID" /&gt;</ph>.</source>
          <target state="translated">COM 類型不是透過 <ph id="ph1">&lt;see cref="Overload:System.Type.GetTypeFromProgID" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="Overload:System.Type.GetTypeFromCLSID" /&gt;</ph> 取得。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type)">
          <source>In the <bpt id="p1">[</bpt>.NET for Windows Store apps<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=247912)</ept> or the <bpt id="p2">[</bpt>Portable Class Library<ept id="p2">](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md)</ept>, catch the base class exception, <ph id="ph1">&lt;see cref="T:System.MissingMemberException" /&gt;</ph>, instead.</source>
          <target state="translated">在<bpt id="p1">[</bpt>適用於 Windows 市集應用程式的 .NET<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=247912)</ept> 或是<bpt id="p2">[</bpt>可攜式類別庫<ept id="p2">](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md)</ept>中，改為攔截基底類別例外狀況 <ph id="ph1">&lt;see cref="T:System.MissingMemberException" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type)">
          <source>No matching public constructor was found.</source>
          <target state="translated">找不到相符的公用建構函式。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is a COM object but the class identifier used to obtain the type is invalid, or the identified class is not registered.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> 是 COM 物件，但用來取得類型的類別識別項無效，或已識別的類別未經登錄。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is not a valid type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> 不是有效的類型。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.Type)">
          <source>for the ability to call unmanaged code when creating an instance of a delegate.</source>
          <target state="translated">提供建立委派的執行個體時，呼叫 unmanaged 程式碼的能力。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.Type)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.Type)">
          <source>for accessing nonpublic types regardless of their grant sets.</source>
          <target state="translated">用來存取非公用型別，不論其授權集。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.Type)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.ActivationContext,System.String[])">
          <source>An activation context object that specifies the object to create.</source>
          <target state="translated">啟動內容物件，指定要建立的物件。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.ActivationContext,System.String[])">
          <source>An array of Unicode strings that contain custom activation data.</source>
          <target state="translated">Unicode 字串的陣列，包含自訂啟動資料。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.ActivationContext,System.String[])">
          <source>Creates an instance of the type that is designated by the specified <ph id="ph1">&lt;see cref="T:System.ActivationContext" /&gt;</ph> object and activated with the specified custom activation data.</source>
          <target state="translated">建立類型的執行個體，這個類型是由指定的 <ph id="ph1">&lt;see cref="T:System.ActivationContext" /&gt;</ph> 物件所指派，並且是以指定的自訂啟動資料所啟動。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.ActivationContext,System.String[])">
          <source>A handle that must be unwrapped to access the newly created object.</source>
          <target state="translated">必須解除包裝的控制代碼，用來存取新建立的物件。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.ActivationContext,System.String[])">
          <source>Use the <ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType&gt;</ph> method to unwrap the return value.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType&gt;</ph>要未包裝的傳回值的方法。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.ActivationContext,System.String[])">
          <source>The activation context is used during manifest-based activation to set up the domain policy and to provide an application-based security model.</source>
          <target state="translated">在資訊清單為基礎的啟用期間使用的啟用內容，來設定網域原則，並提供應用程式為基礎的安全性模型。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.ActivationContext,System.String[])">
          <source>The <ph id="ph1">&lt;xref:System.ActivationContext&gt;</ph> class contains an <ph id="ph2">&lt;xref:System.ApplicationIdentity&gt;</ph> object that provides access to the application manifest.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ActivationContext&gt;</ph>類別包含<ph id="ph2">&lt;xref:System.ApplicationIdentity&gt;</ph>物件，提供應用程式資訊清單的存取。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.ActivationContext,System.String[])">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Security.Policy.ApplicationSecurityManager&gt;</ph> class.</source>
          <target state="translated">如需詳細資訊，請參閱 <ph id="ph1">&lt;xref:System.Security.Policy.ApplicationSecurityManager&gt;</ph> 類別。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String)">
          <source>The name of the assembly where the type named <bpt id="p1">&lt;c&gt;</bpt>typeName<ept id="p1">&lt;/c&gt;</ept> is sought.</source>
          <target state="translated">組件的名稱，該組件包含要在其中搜尋名稱為 <bpt id="p1">&lt;c&gt;</bpt>typeName<ept id="p1">&lt;/c&gt;</ept> 的類型。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>assemblyName<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the executing assembly is searched.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>assemblyName<ept id="p1">&lt;/c&gt;</ept> 為 <ph id="ph1">&lt;see langword="null" /&gt;</ph>，則會搜尋執行中的組件。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String)">
          <source>The fully qualified name of the preferred type.</source>
          <target state="translated">慣用類型的完整名稱。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String)">
          <source>Creates an instance of the type whose name is specified, using the named assembly and default constructor.</source>
          <target state="translated">使用具名組件和預設建構函式，建立已具有指定名稱之類型的執行個體。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String)">
          <source>A handle that must be unwrapped to access the newly created instance.</source>
          <target state="translated">必須解除包裝的控制代碼，用來存取新建立的執行個體。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.String,System.String)">
          <source>Use <ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType&gt;</ph> to unwrap the return value.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType&gt;</ph>要未包裝的傳回值。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.String,System.String)">
          <source><ph id="ph1">`assemblyName`</ph> can be either of the following:</source>
          <target state="translated"><ph id="ph1">`assemblyName`</ph> 可以是下列其中一項：</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.String,System.String)">
          <source>The simple name of an assembly, without its path or file extension.</source>
          <target state="translated">簡單組件的名稱，不含路徑或檔案副檔名。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.String,System.String)">
          <source>For example, you would specify <ph id="ph1">`TypeExtensions`</ph> for an assembly whose path and name are .\bin\TypeExtensions.dll.</source>
          <target state="translated">例如，您會指定<ph id="ph1">`TypeExtensions`</ph>組件的路徑和名稱是.\bin\TypeExtensions.dll。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.String,System.String)">
          <source>The full name of a signed assembly, which consists of its simple name, version, culture, and public key token; for example, "TypeExtensions, Version=1.0.0.0, Culture=neutral, PublicKeyToken=181869f2f7435b51".</source>
          <target state="translated">帶正負號的組件，其中包含簡單名稱、 版本、 文化特性和公開金鑰語彙基元; 完整名稱例如，"TypeExtensions，Version = 1.0.0.0，Culture = neutral，PublicKeyToken = 181869f2f7435b51"。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.String,System.String)">
          <source>For more information on how the common language runtime identifies and loads assemblies, see <bpt id="p1">[</bpt>How the Runtime Locates Assemblies<ept id="p1">](~/docs/framework/deployment/how-the-runtime-locates-assemblies.md)</ept>.</source>
          <target state="translated">如需有關 common language runtime 如何識別及載入組件的詳細資訊，請參閱<bpt id="p1">[</bpt>執行階段如何找出組件<ept id="p1">](~/docs/framework/deployment/how-the-runtime-locates-assemblies.md)</ept>。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.String,System.String)">
          <source>For information on using the application configuration file to define assembly locations, see <bpt id="p1">[</bpt>Specifying an Assembly's Location<ept id="p1">](~/docs/framework/configure-apps/specify-assembly-location.md)</ept>.</source>
          <target state="translated">如需使用應用程式組態檔，以定義組件位置的資訊，請參閱<bpt id="p1">[</bpt>指定組件的位置<ept id="p1">](~/docs/framework/configure-apps/specify-assembly-location.md)</ept>。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.String,System.String)">
          <source>If <ph id="ph1">`assemblyName`</ph> is found, it is loaded in the default context.</source>
          <target state="translated">如果<ph id="ph1">`assemblyName`</ph>找到，它會載入預設內容中。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.String,System.String)">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph>, this method can be used to create nonpublic types if the caller has been granted <ph id="ph2">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph> with the <ph id="ph3">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType&gt;</ph> flag and if the grant set of the assembly that contains the nonpublic types is restricted to the caller’s grant set or to a subset thereof.</source>
          <target state="translated">從開始<ph id="ph1">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph>，這個方法可以用來建立非公用型別，如果呼叫端被授與<ph id="ph2">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph>與<ph id="ph3">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType&gt;</ph>旗標和包含非公用類型的組件的授權集如果是呼叫者的授與限制設定或子集。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.String,System.String)">
          <source>(See <bpt id="p1">[</bpt>Security Considerations for Reflection<ept id="p1">](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)</ept>.)</source>
          <target state="translated">(請參閱<bpt id="p1">[</bpt>反映的安全性考量<ept id="p1">](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)</ept>。)</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.String,System.String)">
          <source>To use this functionality, your application should target the <ph id="ph1">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph> or later.</source>
          <target state="translated">若要使用這項功能，您的應用程式應將目標設為 <ph id="ph1">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph> (含) 以後版本。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.String,System.String)">
          <source>The following example defines a class named <ph id="ph1">`Person`</ph> in an assembly named <ph id="ph2">`PersonInfo`</ph>.</source>
          <target state="translated">下列範例會定義名為類別<ph id="ph1">`Person`</ph>名為組件中<ph id="ph2">`PersonInfo`</ph>。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.String,System.String)">
          <source>Note that the <ph id="ph1">`Person`</ph> class has two constructors, one of which is parameterless.</source>
          <target state="translated">請注意，<ph id="ph1">`Person`</ph>類別有兩個建構函式，一個是無參數。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.String,System.String)">
          <source>The following example calls the <ph id="ph1">&lt;xref:System.Activator.CreateInstance%28System.String%2CSystem.String%29&gt;</ph> method to instantiate the <ph id="ph2">`Person`</ph> class.</source>
          <target state="translated">下列範例會呼叫<ph id="ph1">&lt;xref:System.Activator.CreateInstance%28System.String%2CSystem.String%29&gt;</ph>方法來具現化<ph id="ph2">`Person`</ph>類別。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.String,System.String)">
          <source>It requires a reference to PersonInfo.dll to be added to the project.</source>
          <target state="translated">它需要 PersonInfo.dll 要加入至專案的參考。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.String,System.String)">
          <source>Because the <ph id="ph1">&lt;xref:System.Activator.CreateInstance%28System.String%2CSystem.String%29&gt;</ph> method calls the <ph id="ph2">`Person`</ph> class default constructor,  the example assigns a value to its <ph id="ph3">`Name`</ph> property.</source>
          <target state="translated">因為<ph id="ph1">&lt;xref:System.Activator.CreateInstance%28System.String%2CSystem.String%29&gt;</ph>方法呼叫<ph id="ph2">`Person`</ph>類別預設建構函式，則將值指派至其<ph id="ph3">`Name`</ph>屬性。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.String,System.String)">
          <source>However, <ph id="ph1">&lt;xref:System.Activator.CreateInstance%2A&gt;</ph> is frequently called to instantiate a type that crosses machine boundaries or that is not known at design time.</source>
          <target state="translated">不過，<ph id="ph1">&lt;xref:System.Activator.CreateInstance%2A&gt;</ph>經常稱為具現化的跨電腦界限或不在設計階段已知的型別。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.String,System.String)">
          <source>In this case, you cannot include a reference to the assembly in the project and cannot make early-bound calls to the type's members.</source>
          <target state="translated">在此情況下，您不能包含在專案中的組件的參考，無法進行型別之成員的早期繫結呼叫。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.String,System.String)">
          <source>To work around this limitation, the following example uses the <ph id="ph1">&lt;xref:System.Activator.CreateInstance%2A&gt;</ph> method along with reflection to assign a value to the <ph id="ph2">`Person`</ph> object's <ph id="ph3">`Name`</ph> property and to display its value.</source>
          <target state="translated">若要解決這項限制，下列範例會使用<ph id="ph1">&lt;xref:System.Activator.CreateInstance%2A&gt;</ph>方法以及反映來指派值給<ph id="ph2">`Person`</ph>物件的<ph id="ph3">`Name`</ph>屬性，並顯示其值。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="typeName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="typeName" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String)">
          <source>No matching public constructor was found.</source>
          <target state="translated">找不到相符的公用建構函式。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="typename" /&gt;</ph> was not found in <ph id="ph2">&lt;paramref name="assemblyName" /&gt;</ph>.</source>
          <target state="translated">在 <ph id="ph2">&lt;paramref name="assemblyName" /&gt;</ph> 中找不到 <ph id="ph1">&lt;paramref name="typename" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="assemblyName" /&gt;</ph> was not found.</source>
          <target state="translated">找不到 <ph id="ph1">&lt;paramref name="assemblyName" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String)">
          <source>The caller does not have permission to call this constructor.</source>
          <target state="translated">呼叫端沒有呼叫這個建構函式的權限。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String)">
          <source>You cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</source>
          <target state="translated">您無法建立抽象類別的執行個體，或者這個成員曾被晚期繫結機制叫用過。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String)">
          <source>The constructor, which was invoked through reflection, threw an exception.</source>
          <target state="translated">透過反映叫用並擲回例外狀況的建構函式。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String)">
          <source>The COM type was not obtained through <ph id="ph1">&lt;see cref="Overload:System.Type.GetTypeFromProgID" /&gt;</ph> or <ph id="ph2">&lt;see cref="Overload:System.Type.GetTypeFromCLSID" /&gt;</ph>.</source>
          <target state="translated">COM 類型不是透過 <ph id="ph1">&lt;see cref="Overload:System.Type.GetTypeFromProgID" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="Overload:System.Type.GetTypeFromCLSID" /&gt;</ph> 取得。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String)">
          <source>Creation of <ph id="ph1">&lt;see cref="T:System.TypedReference" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.ArgIterator" /&gt;</ph>, <ph id="ph3">&lt;see cref="T:System.Void" /&gt;</ph>, and <ph id="ph4">&lt;see cref="T:System.RuntimeArgumentHandle" /&gt;</ph> types, or arrays of those types, is not supported.</source>
          <target state="translated">不支援建立 <ph id="ph1">&lt;see cref="T:System.TypedReference" /&gt;</ph>、<ph id="ph2">&lt;see cref="T:System.ArgIterator" /&gt;</ph>、<ph id="ph3">&lt;see cref="T:System.Void" /&gt;</ph> 和 <ph id="ph4">&lt;see cref="T:System.RuntimeArgumentHandle" /&gt;</ph> 類型或這些類型的陣列。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="assemblyName" /&gt;</ph> is not a valid assembly.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="assemblyName" /&gt;</ph> 不是有效的組件。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String)">
          <source>The common language runtime (CLR) version 2.0 or later is currently loaded, and <ph id="ph1">&lt;paramref name="assemblyName" /&gt;</ph> was compiled for a version of the CLR that is later than the currently loaded version.</source>
          <target state="translated">目前載入的是 Common Language Runtime (CLR) 2.0 版或更新版本，且已使用比目前載入之版本更新的 CLR 版本來編譯 <ph id="ph1">&lt;paramref name="assemblyName" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String)">
          <source>Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</source>
          <target state="translated">請注意，.NET Framework 2.0、3.0 和 3.5 版全部都會使用 CLR 2.0 版。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String)">
          <source>An assembly or module was loaded twice with two different evidences.</source>
          <target state="translated">使用兩個不同的辨識項載入組件或模組兩次。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String)">
          <source>The assembly name or code base is invalid.</source>
          <target state="translated">組件名稱或程式碼基底無效。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.String,System.String)">
          <source>for the ability to call unmanaged code when creating an instance of a delegate.</source>
          <target state="translated">提供建立委派的執行個體時，呼叫 unmanaged 程式碼的能力。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.String,System.String)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.String,System.String)">
          <source>for accessing nonpublic types regardless of their grant set.</source>
          <target state="translated">用來存取非公用型別，不論其授權集。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.String,System.String)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Boolean)">
          <source>The type of object to create.</source>
          <target state="translated">要建立的物件類型。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a public or nonpublic default constructor can match; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if only a public default constructor can match.</source>
          <target state="translated">如果公用或非公用預設建構函式可相符，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；如果只有公用預設建構函式可相符，則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Boolean)">
          <source>Creates an instance of the specified type using that type's default constructor.</source>
          <target state="translated">使用指定之類型的預設建構函式，建立該類型的執行個體。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Boolean)">
          <source>A reference to the newly created object.</source>
          <target state="translated">新建立物件的參考。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.Type,System.Boolean)">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph>, this method can be used to access nonpublic types and members if the caller has been granted <ph id="ph2">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph> with the <ph id="ph3">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType&gt;</ph> flag and if the grant set of the assembly that contains the nonpublic types and members is restricted to the caller’s grant set or to a subset thereof.</source>
          <target state="translated">從開始<ph id="ph1">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph>，這個方法可以用來存取非公用類型和成員，如果呼叫端被授與<ph id="ph2">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph>與<ph id="ph3">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType&gt;</ph>旗標和包含非公用類型和成員的組件的授權集如果是受限制若要呼叫者的授與集或子集。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.Type,System.Boolean)">
          <source>(See <bpt id="p1">[</bpt>Security Considerations for Reflection<ept id="p1">](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)</ept>.)</source>
          <target state="translated">(請參閱<bpt id="p1">[</bpt>反映的安全性考量<ept id="p1">](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)</ept>。)</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.Type,System.Boolean)">
          <source>To use this functionality, your application should target the <ph id="ph1">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph> or later.</source>
          <target state="translated">若要使用這項功能，您的應用程式應將目標設為 <ph id="ph1">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph> (含) 以後版本。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is not a <ph id="ph2">&lt;see langword="RuntimeType" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> 不是 <ph id="ph2">&lt;see langword="RuntimeType" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Boolean)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is an open generic type (that is, the <ph id="ph2">&lt;see cref="P:System.Type.ContainsGenericParameters" /&gt;</ph> property returns <ph id="ph3">&lt;see langword="true" /&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> 是開放式泛型類型 (也就是 <ph id="ph2">&lt;see cref="P:System.Type.ContainsGenericParameters" /&gt;</ph> 屬性會傳回 <ph id="ph3">&lt;see langword="true" /&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> cannot be a <ph id="ph2">&lt;see cref="T:System.Reflection.Emit.TypeBuilder" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> 不可以是 <ph id="ph2">&lt;see cref="T:System.Reflection.Emit.TypeBuilder" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Boolean)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Boolean)">
          <source>Creation of <ph id="ph1">&lt;see cref="T:System.TypedReference" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.ArgIterator" /&gt;</ph>, <ph id="ph3">&lt;see cref="T:System.Void" /&gt;</ph>, and <ph id="ph4">&lt;see cref="T:System.RuntimeArgumentHandle" /&gt;</ph> types, or arrays of those types, is not supported.</source>
          <target state="translated">不支援建立 <ph id="ph1">&lt;see cref="T:System.TypedReference" /&gt;</ph>、<ph id="ph2">&lt;see cref="T:System.ArgIterator" /&gt;</ph>、<ph id="ph3">&lt;see cref="T:System.Void" /&gt;</ph> 和 <ph id="ph4">&lt;see cref="T:System.RuntimeArgumentHandle" /&gt;</ph> 類型或這些類型的陣列。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Boolean)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Boolean)">
          <source>The assembly that contains <ph id="ph1">&lt;paramref name="type" /&gt;</ph> is a dynamic assembly that was created with <ph id="ph2">&lt;see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" /&gt;</ph>.</source>
          <target state="translated">包含 <ph id="ph1">&lt;paramref name="type" /&gt;</ph> 的組件是以 <ph id="ph2">&lt;see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" /&gt;</ph> 建立的動態組件。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Boolean)">
          <source>The constructor being called throws an exception.</source>
          <target state="translated">正在呼叫的建構函式擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Boolean)">
          <source>The caller does not have permission to call this constructor.</source>
          <target state="translated">呼叫端沒有呼叫這個建構函式的權限。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Boolean)">
          <source>Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</source>
          <target state="translated">無法建立抽象類別的執行個體，或者這個成員曾被晚期繫結機制叫用過。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Boolean)">
          <source>The COM type was not obtained through <ph id="ph1">&lt;see cref="Overload:System.Type.GetTypeFromProgID" /&gt;</ph> or <ph id="ph2">&lt;see cref="Overload:System.Type.GetTypeFromCLSID" /&gt;</ph>.</source>
          <target state="translated">COM 類型不是透過 <ph id="ph1">&lt;see cref="Overload:System.Type.GetTypeFromProgID" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="Overload:System.Type.GetTypeFromCLSID" /&gt;</ph> 取得。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Boolean)">
          <source>No matching public constructor was found.</source>
          <target state="translated">找不到相符的公用建構函式。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is a COM object but the class identifier used to obtain the type is invalid, or the identified class is not registered.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> 是 COM 物件，但用來取得類型的類別識別項無效，或已識別的類別未經登錄。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is not a valid type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> 不是有效的類型。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.Type,System.Boolean)">
          <source>for the ability to call unmanaged code when creating an instance of a delegate.</source>
          <target state="translated">提供建立委派的執行個體時，呼叫 unmanaged 程式碼的能力。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.Type,System.Boolean)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.Type,System.Boolean)">
          <source>for accessing nonpublic types and members regardless of their grant set.</source>
          <target state="translated">用來存取非公用類型和成員，不論其授權集。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.Type,System.Boolean)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Object[])">
          <source>The type of object to create.</source>
          <target state="translated">要建立的物件類型。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Object[])">
          <source>An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</source>
          <target state="translated">引數的陣列，此引數在數目、順序和類型上符合要叫用的建構函式的參數。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Object[])">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> is an empty array or <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the constructor that takes no parameters (the default constructor) is invoked.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> 是空陣列或 <ph id="ph1">&lt;see langword="null" /&gt;</ph>，會叫用未採用參數的建構函式 (預設的建構函式)。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Object[])">
          <source>Creates an instance of the specified type using the constructor that best matches the specified parameters.</source>
          <target state="translated">使用最符合指定參數的建構函式，建立指定類型的執行個體。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Object[])">
          <source>A reference to the newly created object.</source>
          <target state="translated">新建立物件的參考。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.Type,System.Object[])">
          <source>The constructor to be invoked must be accessible and must provide the most specific match with the specified argument list.</source>
          <target state="translated">要叫用的建構函式必須是可存取，而且必須提供尋找最符合指定的引數清單。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.Type,System.Object[])">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph>, this method can be used to access nonpublic types if the caller has been granted <ph id="ph2">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph> with the <ph id="ph3">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType&gt;</ph> flag and if the grant set of the assembly that contains the nonpublic types is restricted to the caller’s grant set or to a subset thereof.</source>
          <target state="translated">從開始<ph id="ph1">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph>，這個方法可以用來存取非公用型別，如果呼叫端被授與<ph id="ph2">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph>與<ph id="ph3">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType&gt;</ph>旗標和包含非公用類型的組件的授權集如果是呼叫者的授與限制設定或子集。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.Type,System.Object[])">
          <source>(See <bpt id="p1">[</bpt>Security Considerations for Reflection<ept id="p1">](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)</ept>.)</source>
          <target state="translated">(請參閱<bpt id="p1">[</bpt>反映的安全性考量<ept id="p1">](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)</ept>。)</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.Type,System.Object[])">
          <source>To use this functionality, your application should target the <ph id="ph1">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph> or later.</source>
          <target state="translated">若要使用這項功能，您的應用程式應將目標設為 <ph id="ph1">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph> (含) 以後版本。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.Type,System.Object[])">
          <source>The following example calls the  <ph id="ph1">&lt;xref:System.Activator.CreateInstance%28System.Type%2CSystem.Object%5B%5D%29&gt;</ph> method to create a <ph id="ph2">&lt;xref:System.String&gt;</ph> object.</source>
          <target state="translated">下列範例會呼叫<ph id="ph1">&lt;xref:System.Activator.CreateInstance%28System.Type%2CSystem.Object%5B%5D%29&gt;</ph>方法來建立<ph id="ph2">&lt;xref:System.String&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.Type,System.Object[])">
          <source>It calls the <ph id="ph1">&lt;xref:System.String.%23ctor%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph> constructor to instantiate a string that contains ten elements from a character array starting at the fourteenth position.</source>
          <target state="translated">它會呼叫<ph id="ph1">&lt;xref:System.String.%23ctor%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph>建構函式來具現化包含十個項目開始的第十四個位置的字元陣列中的字串。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.Type,System.Object[])">
          <source>The following example creates a jagged array whose elements are arguments to be passed to a <ph id="ph1">&lt;xref:System.String&gt;</ph> constructor.</source>
          <target state="translated">下列範例會建立不規則的陣列，其元素為引數傳遞給<ph id="ph1">&lt;xref:System.String&gt;</ph>建構函式。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.Type,System.Object[])">
          <source>The example then passes each array to the <ph id="ph1">&lt;xref:System.Activator.CreateInstance%28System.Type%2CSystem.Object%5B%5D%29&gt;</ph> method to invoke the appropriate string constructor.</source>
          <target state="translated">範例接著會傳遞至每個陣列<ph id="ph1">&lt;xref:System.Activator.CreateInstance%28System.Type%2CSystem.Object%5B%5D%29&gt;</ph>方法來叫用適當的字串的建構函式。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Object[])">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Object[])">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is not a <ph id="ph2">&lt;see langword="RuntimeType" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> 不是 <ph id="ph2">&lt;see langword="RuntimeType" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Object[])">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Object[])">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is an open generic type (that is, the <ph id="ph2">&lt;see cref="P:System.Type.ContainsGenericParameters" /&gt;</ph> property returns <ph id="ph3">&lt;see langword="true" /&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> 是開放式泛型類型 (也就是 <ph id="ph2">&lt;see cref="P:System.Type.ContainsGenericParameters" /&gt;</ph> 屬性會傳回 <ph id="ph3">&lt;see langword="true" /&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Object[])">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> cannot be a <ph id="ph2">&lt;see cref="T:System.Reflection.Emit.TypeBuilder" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> 不可以是 <ph id="ph2">&lt;see cref="T:System.Reflection.Emit.TypeBuilder" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Object[])">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Object[])">
          <source>Creation of <ph id="ph1">&lt;see cref="T:System.TypedReference" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.ArgIterator" /&gt;</ph>, <ph id="ph3">&lt;see cref="T:System.Void" /&gt;</ph>, and <ph id="ph4">&lt;see cref="T:System.RuntimeArgumentHandle" /&gt;</ph> types, or arrays of those types, is not supported.</source>
          <target state="translated">不支援建立 <ph id="ph1">&lt;see cref="T:System.TypedReference" /&gt;</ph>、<ph id="ph2">&lt;see cref="T:System.ArgIterator" /&gt;</ph>、<ph id="ph3">&lt;see cref="T:System.Void" /&gt;</ph> 和 <ph id="ph4">&lt;see cref="T:System.RuntimeArgumentHandle" /&gt;</ph> 類型或這些類型的陣列。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Object[])">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Object[])">
          <source>The assembly that contains <ph id="ph1">&lt;paramref name="type" /&gt;</ph> is a dynamic assembly that was created with <ph id="ph2">&lt;see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" /&gt;</ph>.</source>
          <target state="translated">包含 <ph id="ph1">&lt;paramref name="type" /&gt;</ph> 的組件是以 <ph id="ph2">&lt;see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" /&gt;</ph> 建立的動態組件。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Object[])">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Object[])">
          <source>The constructor that best matches <ph id="ph1">&lt;paramref name="args" /&gt;</ph> has <ph id="ph2">&lt;see langword="varargs" /&gt;</ph> arguments.</source>
          <target state="translated">最符合 <ph id="ph1">&lt;paramref name="args" /&gt;</ph> 的建構函式有 <ph id="ph2">&lt;see langword="varargs" /&gt;</ph> 引數。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Object[])">
          <source>The constructor being called throws an exception.</source>
          <target state="translated">正在呼叫的建構函式擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Object[])">
          <source>In the <bpt id="p1">[</bpt>.NET for Windows Store apps<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=247912)</ept> or the <bpt id="p2">[</bpt>Portable Class Library<ept id="p2">](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md)</ept>, catch the base class exception, <ph id="ph1">&lt;see cref="T:System.MemberAccessException" /&gt;</ph>, instead.</source>
          <target state="translated">在<bpt id="p1">[</bpt>適用於 Windows 市集應用程式的 .NET<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=247912)</ept> 或是<bpt id="p2">[</bpt>可攜式類別庫<ept id="p2">](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md)</ept>中，改為攔截基底類別例外狀況 <ph id="ph1">&lt;see cref="T:System.MemberAccessException" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Object[])">
          <source>The caller does not have permission to call this constructor.</source>
          <target state="translated">呼叫端沒有呼叫這個建構函式的權限。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Object[])">
          <source>Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</source>
          <target state="translated">無法建立抽象類別的執行個體，或者這個成員曾被晚期繫結機制叫用過。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Object[])">
          <source>The COM type was not obtained through <ph id="ph1">&lt;see cref="Overload:System.Type.GetTypeFromProgID" /&gt;</ph> or <ph id="ph2">&lt;see cref="Overload:System.Type.GetTypeFromCLSID" /&gt;</ph>.</source>
          <target state="translated">COM 類型不是透過 <ph id="ph1">&lt;see cref="Overload:System.Type.GetTypeFromProgID" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="Overload:System.Type.GetTypeFromCLSID" /&gt;</ph> 取得。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Object[])">
          <source>In the <bpt id="p1">[</bpt>.NET for Windows Store apps<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=247912)</ept> or the <bpt id="p2">[</bpt>Portable Class Library<ept id="p2">](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md)</ept>, catch the base class exception, <ph id="ph1">&lt;see cref="T:System.MissingMemberException" /&gt;</ph>, instead.</source>
          <target state="translated">在<bpt id="p1">[</bpt>適用於 Windows 市集應用程式的 .NET<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=247912)</ept> 或是<bpt id="p2">[</bpt>可攜式類別庫<ept id="p2">](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md)</ept>中，改為攔截基底類別例外狀況 <ph id="ph1">&lt;see cref="T:System.MissingMemberException" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Object[])">
          <source>No matching public constructor was found.</source>
          <target state="translated">找不到相符的公用建構函式。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Object[])">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is a COM object but the class identifier used to obtain the type is invalid, or the identified class is not registered.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> 是 COM 物件，但用來取得類型的類別識別項無效，或已識別的類別未經登錄。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Object[])">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is not a valid type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> 不是有效的類型。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.Type,System.Object[])">
          <source>for the ability to call unmanaged code when creating an instance of a delegate.</source>
          <target state="translated">提供建立委派的執行個體時，呼叫 unmanaged 程式碼的能力。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.Type,System.Object[])">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.Type,System.Object[])">
          <source>for accessing nonpublic types regardless of their grant set.</source>
          <target state="translated">用來存取非公用型別，不論其授權集。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.Type,System.Object[])">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String)">
          <source>The remote domain where the type named <bpt id="p1">&lt;c&gt;</bpt>typeName<ept id="p1">&lt;/c&gt;</ept> is created.</source>
          <target state="translated">建立名稱為 <bpt id="p1">&lt;c&gt;</bpt>typeName<ept id="p1">&lt;/c&gt;</ept> 之類型的遠端網域。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String)">
          <source>The name of the assembly where the type named <bpt id="p1">&lt;c&gt;</bpt>typeName<ept id="p1">&lt;/c&gt;</ept> is sought.</source>
          <target state="translated">組件的名稱，該組件包含要在其中搜尋名稱為 <bpt id="p1">&lt;c&gt;</bpt>typeName<ept id="p1">&lt;/c&gt;</ept> 的類型。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>assemblyName<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the executing assembly is searched.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>assemblyName<ept id="p1">&lt;/c&gt;</ept> 為 <ph id="ph1">&lt;see langword="null" /&gt;</ph>，則會搜尋執行中的組件。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String)">
          <source>The fully qualified name of the preferred type.</source>
          <target state="translated">慣用類型的完整名稱。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String)">
          <source>Creates an instance of the type whose name is specified in the specified remote domain, using the named assembly and default constructor.</source>
          <target state="translated">使用具名組件和預設建構函式，建立已在指定遠端網域中具有指定名稱之類型的執行個體。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String)">
          <source>A handle that must be unwrapped to access the newly created instance.</source>
          <target state="translated">必須解除包裝的控制代碼，用來存取新建立的執行個體。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String)">
          <source>Use <ph id="ph1">&lt;xref:System.Activator.CreateInstance%2A&gt;</ph> when a host needs to execute code in an application domain that has restricted security permissions.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Activator.CreateInstance%2A&gt;</ph>主機需要具有限制的安全性權限的應用程式定義域中執行程式碼。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String)">
          <source>Use <ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType&gt;</ph> to unwrap the return value.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType&gt;</ph>要未包裝的傳回值。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String)">
          <source>This method uses <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType&gt;</ph> to require the immediate caller to have full trust.</source>
          <target state="translated">這個方法會使用<ph id="ph1">&lt;xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType&gt;</ph>需要具有完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="typeName" /&gt;</ph> or <ph id="ph2">&lt;paramref name="domain" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="typeName" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="domain" /&gt;</ph> 為 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String)">
          <source>No matching public constructor was found.</source>
          <target state="translated">找不到相符的公用建構函式。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="typename" /&gt;</ph> was not found in <ph id="ph2">&lt;paramref name="assemblyName" /&gt;</ph>.</source>
          <target state="translated">在 <ph id="ph2">&lt;paramref name="assemblyName" /&gt;</ph> 中找不到 <ph id="ph1">&lt;paramref name="typename" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="assemblyName" /&gt;</ph> was not found.</source>
          <target state="translated">找不到 <ph id="ph1">&lt;paramref name="assemblyName" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String)">
          <source>The caller does not have permission to call this constructor.</source>
          <target state="translated">呼叫端沒有呼叫這個建構函式的權限。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String)">
          <source>Cannot create an instance of an abstract type.</source>
          <target state="translated">無法建立抽象型別的執行個體 (Instance)。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String)">
          <source>This member was invoked with a late-binding mechanism.</source>
          <target state="translated">這個成員曾被晚期繫結機制叫用過。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String)">
          <source>The constructor, which was invoked through reflection, threw an exception.</source>
          <target state="translated">透過反映叫用並擲回例外狀況的建構函式。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String)">
          <source>The COM type was not obtained through <ph id="ph1">&lt;see cref="Overload:System.Type.GetTypeFromProgID" /&gt;</ph> or <ph id="ph2">&lt;see cref="Overload:System.Type.GetTypeFromCLSID" /&gt;</ph>.</source>
          <target state="translated">COM 類型不是透過 <ph id="ph1">&lt;see cref="Overload:System.Type.GetTypeFromProgID" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="Overload:System.Type.GetTypeFromCLSID" /&gt;</ph> 取得。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String)">
          <source>Creation of <ph id="ph1">&lt;see cref="T:System.TypedReference" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.ArgIterator" /&gt;</ph>, <ph id="ph3">&lt;see cref="T:System.Void" /&gt;</ph>, and <ph id="ph4">&lt;see cref="T:System.RuntimeArgumentHandle" /&gt;</ph> types, or arrays of those types, is not supported.</source>
          <target state="translated">不支援建立 <ph id="ph1">&lt;see cref="T:System.TypedReference" /&gt;</ph>、<ph id="ph2">&lt;see cref="T:System.ArgIterator" /&gt;</ph>、<ph id="ph3">&lt;see cref="T:System.Void" /&gt;</ph> 和 <ph id="ph4">&lt;see cref="T:System.RuntimeArgumentHandle" /&gt;</ph> 類型或這些類型的陣列。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="assemblyName" /&gt;</ph> is not a valid assembly.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="assemblyName" /&gt;</ph> 不是有效的組件。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String)">
          <source>The common language runtime (CLR) version 2.0 or later is currently loaded, and <ph id="ph1">&lt;paramref name="assemblyName" /&gt;</ph> was compiled for a version of the CLR that is later than the currently loaded version.</source>
          <target state="translated">目前載入的是 Common Language Runtime (CLR) 2.0 版或更新版本，且已使用比目前載入之版本更新的 CLR 版本來編譯 <ph id="ph1">&lt;paramref name="assemblyName" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String)">
          <source>Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</source>
          <target state="translated">請注意，.NET Framework 2.0、3.0 和 3.5 版全部都會使用 CLR 2.0 版。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String)">
          <source>An assembly or module was loaded twice with two different evidences.</source>
          <target state="translated">使用兩個不同的辨識項載入組件或模組兩次。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String)">
          <source>The assembly name or code base is invalid.</source>
          <target state="translated">組件名稱或程式碼基底無效。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String)">
          <source>for the ability to call unmanaged code when creating an instance of a delegate.</source>
          <target state="translated">提供建立委派的執行個體時，呼叫 unmanaged 程式碼的能力。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String)">
          <source>for the ability to invoke operations on all type members.</source>
          <target state="translated">提供所有類型成員上叫用作業的能力。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">需要完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">這個成員無法供部分信任或安全性透明程式碼。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Object[])">
          <source>The name of the assembly where the type named <bpt id="p1">&lt;c&gt;</bpt>typeName<ept id="p1">&lt;/c&gt;</ept> is sought.</source>
          <target state="translated">組件的名稱，該組件包含要在其中搜尋名稱為 <bpt id="p1">&lt;c&gt;</bpt>typeName<ept id="p1">&lt;/c&gt;</ept> 的類型。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Object[])">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>assemblyName<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the executing assembly is searched.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>assemblyName<ept id="p1">&lt;/c&gt;</ept> 為 <ph id="ph1">&lt;see langword="null" /&gt;</ph>，則會搜尋執行中的組件。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Object[])">
          <source>The fully qualified name of the preferred type.</source>
          <target state="translated">慣用類型的完整名稱。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Object[])">
          <source>An array of one or more attributes that can participate in activation.</source>
          <target state="translated">一或多個屬性的陣列，此屬性可參與啟動過程。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Object[])">
          <source>This is typically an array that contains a single <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /&gt;</ph> object that specifies the URL that is required to activate a remote object.</source>
          <target state="translated">陣列通常只會包含一個 <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /&gt;</ph> 物件來指定用以啟動遠端物件的 URL。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Object[])">
          <source>This parameter is related to client-activated objects.</source>
          <target state="translated">此參數與啟動了用戶端的物件相關。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Object[])">
          <source>Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</source>
          <target state="translated">用戶端啟動是一項舊的技術，保留目的在提供回溯相容性，不建議用於新的開發。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Object[])">
          <source>Distributed applications should instead use Windows Communication Foundation.</source>
          <target state="translated">分散式應用程式應該改用 Windows Communication Foundation。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Object[])">
          <source>Creates an instance of the type whose name is specified, using the named assembly and default constructor.</source>
          <target state="translated">使用具名組件和預設建構函式，建立已具有指定名稱之類型的執行個體。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Object[])">
          <source>A handle that must be unwrapped to access the newly created instance.</source>
          <target state="translated">必須解除包裝的控制代碼，用來存取新建立的執行個體。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Object[])">
          <source>Use <ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType&gt;</ph> to unwrap the return value.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType&gt;</ph>要未包裝的傳回值。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Object[])">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph>, this method can be used to create nonpublic types if the caller has been granted <ph id="ph2">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph> with the <ph id="ph3">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType&gt;</ph> flag and if the grant set of the nonpublic types is restricted to the caller’s grant set or to a subset thereof.</source>
          <target state="translated">從開始<ph id="ph1">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph>，這個方法可以用來建立非公用型別，如果呼叫端被授與<ph id="ph2">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph>與<ph id="ph3">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType&gt;</ph>旗標和非公用類型的授權集是否限制為呼叫端的授權集或其子集。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Object[])">
          <source>(See <bpt id="p1">[</bpt>Security Considerations for Reflection<ept id="p1">](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)</ept>.)</source>
          <target state="translated">(請參閱<bpt id="p1">[</bpt>反映的安全性考量<ept id="p1">](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)</ept>。)</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Object[])">
          <source>To use this functionality, your application should target the <ph id="ph1">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph> or later.</source>
          <target state="translated">若要使用這項功能，您的應用程式應將目標設為 <ph id="ph1">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph> (含) 以後版本。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Object[])">
          <source><ph id="ph1">&lt;paramref name="typeName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="typeName" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Object[])">
          <source>No matching public constructor was found.</source>
          <target state="translated">找不到相符的公用建構函式。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Object[])">
          <source><ph id="ph1">&lt;paramref name="typename" /&gt;</ph> was not found in <ph id="ph2">&lt;paramref name="assemblyName" /&gt;</ph>.</source>
          <target state="translated">在 <ph id="ph2">&lt;paramref name="assemblyName" /&gt;</ph> 中找不到 <ph id="ph1">&lt;paramref name="typename" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Object[])">
          <source><ph id="ph1">&lt;paramref name="assemblyName" /&gt;</ph> was not found.</source>
          <target state="translated">找不到 <ph id="ph1">&lt;paramref name="assemblyName" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Object[])">
          <source>The caller does not have permission to call this constructor.</source>
          <target state="translated">呼叫端沒有呼叫這個建構函式的權限。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Object[])">
          <source>Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</source>
          <target state="translated">無法建立抽象類別的執行個體，或者這個成員曾被晚期繫結機制叫用過。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Object[])">
          <source>The COM type was not obtained through <ph id="ph1">&lt;see cref="Overload:System.Type.GetTypeFromProgID" /&gt;</ph> or <ph id="ph2">&lt;see cref="Overload:System.Type.GetTypeFromCLSID" /&gt;</ph>.</source>
          <target state="translated">COM 類型不是透過 <ph id="ph1">&lt;see cref="Overload:System.Type.GetTypeFromProgID" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="Overload:System.Type.GetTypeFromCLSID" /&gt;</ph> 取得。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Object[])">
          <source>Creation of <ph id="ph1">&lt;see cref="T:System.TypedReference" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.ArgIterator" /&gt;</ph>, <ph id="ph3">&lt;see cref="T:System.Void" /&gt;</ph>, and <ph id="ph4">&lt;see cref="T:System.RuntimeArgumentHandle" /&gt;</ph> types, or arrays of those types, is not supported.</source>
          <target state="translated">不支援建立 <ph id="ph1">&lt;see cref="T:System.TypedReference" /&gt;</ph>、<ph id="ph2">&lt;see cref="T:System.ArgIterator" /&gt;</ph>、<ph id="ph3">&lt;see cref="T:System.Void" /&gt;</ph> 和 <ph id="ph4">&lt;see cref="T:System.RuntimeArgumentHandle" /&gt;</ph> 類型或這些類型的陣列。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Object[])">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Object[])">
          <source><ph id="ph1">&lt;paramref name="activationAttributes" /&gt;</ph> is not an empty array, and the type being created does not derive from <ph id="ph2">&lt;see cref="T:System.MarshalByRefObject" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="activationAttributes" /&gt;</ph> 不是空的陣列，而建立中的類型不是衍生自 <ph id="ph2">&lt;see cref="T:System.MarshalByRefObject" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Object[])">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Object[])">
          <source><ph id="ph1">&lt;paramref name="activationAttributes" /&gt;</ph> is not a <ph id="ph2">&lt;see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;paramref name="activationAttributes" /&gt;</ph> 不是 <ph id="ph2">&lt;see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Object[])">
          <source>array.</source>
          <target state="translated">陣列。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Object[])">
          <source><ph id="ph1">&lt;paramref name="assemblyName" /&gt;</ph> is not a valid assembly.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="assemblyName" /&gt;</ph> 不是有效的組件。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Object[])">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Object[])">
          <source>The common language runtime (CLR) version 2.0 or later is currently loaded, and <ph id="ph1">&lt;paramref name="assemblyName" /&gt;</ph> was compiled for a version of the CLR that is later than the currently loaded version.</source>
          <target state="translated">目前載入的是 Common Language Runtime (CLR) 2.0 版或更新版本，且已使用比目前載入之版本更新的 CLR 版本來編譯 <ph id="ph1">&lt;paramref name="assemblyName" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Object[])">
          <source>Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</source>
          <target state="translated">請注意，.NET Framework 2.0、3.0 和 3.5 版全部都會使用 CLR 2.0 版。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Object[])">
          <source>An assembly or module was loaded twice with two different evidences.</source>
          <target state="translated">使用兩個不同的辨識項載入組件或模組兩次。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Object[])">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Object[])">
          <source>The assembly name or code base is invalid.</source>
          <target state="translated">組件名稱或程式碼基底無效。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Object[])">
          <source>An error occurred when attempting remote activation in a target specified in <ph id="ph1">&lt;paramref name="activationAttributes" /&gt;</ph>.</source>
          <target state="translated">嘗試在 <ph id="ph1">&lt;paramref name="activationAttributes" /&gt;</ph> 所指定之目標中進行遠端啟動時發生錯誤。</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Object[])">
          <source>for the ability to call unmanaged code when creating an instance of a delegate.</source>
          <target state="translated">提供建立委派的執行個體時，呼叫 unmanaged 程式碼的能力。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Object[])">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Object[])">
          <source>for accessing nonpublic types regardless of their grant set.</source>
          <target state="translated">用來存取非公用型別，不論其授權集。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Object[])">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Object[],System.Object[])">
          <source>The type of object to create.</source>
          <target state="translated">要建立的物件類型。</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Object[],System.Object[])">
          <source>An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</source>
          <target state="translated">引數的陣列，此引數在數目、順序和類型上符合要叫用的建構函式的參數。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Object[],System.Object[])">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> is an empty array or <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the constructor that takes no parameters (the default constructor) is invoked.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> 是空陣列或 <ph id="ph1">&lt;see langword="null" /&gt;</ph>，會叫用未採用參數的建構函式 (預設的建構函式)。</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Object[],System.Object[])">
          <source>An array of one or more attributes that can participate in activation.</source>
          <target state="translated">一或多個屬性的陣列，此屬性可參與啟動過程。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Object[],System.Object[])">
          <source>This is typically an array that contains a single <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /&gt;</ph> object that specifies the URL that is required to activate a remote object.</source>
          <target state="translated">陣列通常只會包含一個 <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /&gt;</ph> 物件來指定用以啟動遠端物件的 URL。</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Object[],System.Object[])">
          <source>This parameter is related to client-activated objects.</source>
          <target state="translated">此參數與啟動了用戶端的物件相關。</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Object[],System.Object[])">
          <source>Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</source>
          <target state="translated">用戶端啟動是一項舊的技術，保留目的在提供回溯相容性，不建議用於新的開發。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Object[],System.Object[])">
          <source>Distributed applications should instead use Windows Communication Foundation.</source>
          <target state="translated">分散式應用程式應該改用 Windows Communication Foundation。</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Object[],System.Object[])">
          <source>Creates an instance of the specified type using the constructor that best matches the specified parameters.</source>
          <target state="translated">使用最符合指定參數的建構函式，建立指定類型的執行個體。</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Object[],System.Object[])">
          <source>A reference to the newly created object.</source>
          <target state="translated">新建立物件的參考。</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.Type,System.Object[],System.Object[])">
          <source>The constructor to be invoked must be accessible and must provide the most specific match with the specified argument list.</source>
          <target state="translated">要叫用的建構函式必須是可存取，而且必須提供尋找最符合指定的引數清單。</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.Type,System.Object[],System.Object[])">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph>, this method can be used to access nonpublic types if the caller has been granted <ph id="ph2">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph> with the <ph id="ph3">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType&gt;</ph> flag and if the grant set of the assembly that contains the nonpublic types is restricted to the caller’s grant set or to a subset thereof.</source>
          <target state="translated">從開始<ph id="ph1">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph>，這個方法可以用來存取非公用型別，如果呼叫端被授與<ph id="ph2">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph>與<ph id="ph3">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType&gt;</ph>旗標和包含非公用類型的組件的授權集如果是呼叫者的授與限制設定或子集。</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.Type,System.Object[],System.Object[])">
          <source>(See <bpt id="p1">[</bpt>Security Considerations for Reflection<ept id="p1">](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)</ept>.)</source>
          <target state="translated">(請參閱<bpt id="p1">[</bpt>反映的安全性考量<ept id="p1">](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)</ept>。)</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.Type,System.Object[],System.Object[])">
          <source>To use this functionality, your application should target the <ph id="ph1">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph> or later.</source>
          <target state="translated">若要使用這項功能，您的應用程式應將目標設為 <ph id="ph1">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph> (含) 以後版本。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Object[],System.Object[])">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Object[],System.Object[])">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is not a <ph id="ph2">&lt;see langword="RuntimeType" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> 不是 <ph id="ph2">&lt;see langword="RuntimeType" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Object[],System.Object[])">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Object[],System.Object[])">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is an open generic type (that is, the <ph id="ph2">&lt;see cref="P:System.Type.ContainsGenericParameters" /&gt;</ph> property returns <ph id="ph3">&lt;see langword="true" /&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> 是開放式泛型類型 (也就是 <ph id="ph2">&lt;see cref="P:System.Type.ContainsGenericParameters" /&gt;</ph> 屬性會傳回 <ph id="ph3">&lt;see langword="true" /&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Object[],System.Object[])">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> cannot be a <ph id="ph2">&lt;see cref="T:System.Reflection.Emit.TypeBuilder" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> 不可以是 <ph id="ph2">&lt;see cref="T:System.Reflection.Emit.TypeBuilder" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Object[],System.Object[])">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Object[],System.Object[])">
          <source>Creation of <ph id="ph1">&lt;see cref="T:System.TypedReference" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.ArgIterator" /&gt;</ph>, <ph id="ph3">&lt;see cref="T:System.Void" /&gt;</ph>, and <ph id="ph4">&lt;see cref="T:System.RuntimeArgumentHandle" /&gt;</ph> types, or arrays of those types, is not supported.</source>
          <target state="translated">不支援建立 <ph id="ph1">&lt;see cref="T:System.TypedReference" /&gt;</ph>、<ph id="ph2">&lt;see cref="T:System.ArgIterator" /&gt;</ph>、<ph id="ph3">&lt;see cref="T:System.Void" /&gt;</ph> 和 <ph id="ph4">&lt;see cref="T:System.RuntimeArgumentHandle" /&gt;</ph> 類型或這些類型的陣列。</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Object[],System.Object[])">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Object[],System.Object[])">
          <source><ph id="ph1">&lt;paramref name="activationAttributes" /&gt;</ph> is not an empty array, and the type being created does not derive from <ph id="ph2">&lt;see cref="T:System.MarshalByRefObject" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="activationAttributes" /&gt;</ph> 不是空的陣列，而建立中的類型不是衍生自 <ph id="ph2">&lt;see cref="T:System.MarshalByRefObject" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Object[],System.Object[])">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Object[],System.Object[])">
          <source>The assembly that contains <ph id="ph1">&lt;paramref name="type" /&gt;</ph> is a dynamic assembly that was created with <ph id="ph2">&lt;see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" /&gt;</ph>.</source>
          <target state="translated">包含 <ph id="ph1">&lt;paramref name="type" /&gt;</ph> 的組件是以 <ph id="ph2">&lt;see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" /&gt;</ph> 建立的動態組件。</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Object[],System.Object[])">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Object[],System.Object[])">
          <source>The constructor that best matches <ph id="ph1">&lt;paramref name="args" /&gt;</ph> has <ph id="ph2">&lt;see langword="varargs" /&gt;</ph> arguments.</source>
          <target state="translated">最符合 <ph id="ph1">&lt;paramref name="args" /&gt;</ph> 的建構函式有 <ph id="ph2">&lt;see langword="varargs" /&gt;</ph> 引數。</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Object[],System.Object[])">
          <source>The constructor being called throws an exception.</source>
          <target state="translated">正在呼叫的建構函式擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Object[],System.Object[])">
          <source>The caller does not have permission to call this constructor.</source>
          <target state="translated">呼叫端沒有呼叫這個建構函式的權限。</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Object[],System.Object[])">
          <source>Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</source>
          <target state="translated">無法建立抽象類別的執行個體，或者這個成員曾被晚期繫結機制叫用過。</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Object[],System.Object[])">
          <source>The COM type was not obtained through <ph id="ph1">&lt;see cref="Overload:System.Type.GetTypeFromProgID" /&gt;</ph> or <ph id="ph2">&lt;see cref="Overload:System.Type.GetTypeFromCLSID" /&gt;</ph>.</source>
          <target state="translated">COM 類型不是透過 <ph id="ph1">&lt;see cref="Overload:System.Type.GetTypeFromProgID" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="Overload:System.Type.GetTypeFromCLSID" /&gt;</ph> 取得。</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Object[],System.Object[])">
          <source>No matching public constructor was found.</source>
          <target state="translated">找不到相符的公用建構函式。</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Object[],System.Object[])">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is a COM object but the class identifier used to obtain the type is invalid, or the identified class is not registered.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> 是 COM 物件，但用來取得類型的類別識別項無效，或已識別的類別未經登錄。</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Object[],System.Object[])">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is not a valid type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> 不是有效的類型。</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.Type,System.Object[],System.Object[])">
          <source>for the ability to call unmanaged code when creating an instance of a delegate.</source>
          <target state="translated">提供建立委派的執行個體時，呼叫 unmanaged 程式碼的能力。</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.Type,System.Object[],System.Object[])">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.Type,System.Object[],System.Object[])">
          <source>for accessing nonpublic types regardless of their grant set.</source>
          <target state="translated">用來存取非公用型別，不論其授權集。</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.Type,System.Object[],System.Object[])">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
          <source>The type of object to create.</source>
          <target state="translated">要建立的物件類型。</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
          <source>A combination of zero or more bit flags that affect the search for the <bpt id="p1">&lt;c&gt;</bpt>type<ept id="p1">&lt;/c&gt;</ept> constructor.</source>
          <target state="translated">零或多個位元旗標的組合，此位元旗標會影響 <bpt id="p1">&lt;c&gt;</bpt>type<ept id="p1">&lt;/c&gt;</ept> 建構函式的搜尋。</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>bindingAttr<ept id="p1">&lt;/c&gt;</ept> is zero, a case-sensitive search for public constructors is conducted.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>bindingAttr<ept id="p1">&lt;/c&gt;</ept> 為零，則會針對公用建構函式執行區分大小寫的搜尋。</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
          <source>An object that uses <bpt id="p1">&lt;c&gt;</bpt>bindingAttr<ept id="p1">&lt;/c&gt;</ept> and <bpt id="p2">&lt;c&gt;</bpt>args<ept id="p2">&lt;/c&gt;</ept> to seek and identify the <bpt id="p3">&lt;c&gt;</bpt>type<ept id="p3">&lt;/c&gt;</ept> constructor.</source>
          <target state="translated">使用 <bpt id="p1">&lt;c&gt;</bpt>bindingAttr<ept id="p1">&lt;/c&gt;</ept> 和 <bpt id="p2">&lt;c&gt;</bpt>args<ept id="p2">&lt;/c&gt;</ept> 來搜尋及識別 <bpt id="p3">&lt;c&gt;</bpt>type<ept id="p3">&lt;/c&gt;</ept> 建構函式的物件。</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>binder<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the default binder is used.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>Binder<ept id="p1">&lt;/c&gt;</ept> 為 <ph id="ph1">&lt;see langword="null" /&gt;</ph>，則會使用預設 Binder。</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
          <source>An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</source>
          <target state="translated">引數的陣列，此引數在數目、順序和類型上符合要叫用的建構函式的參數。</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> is an empty array or <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the constructor that takes no parameters (the default constructor) is invoked.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> 是空陣列或 <ph id="ph1">&lt;see langword="null" /&gt;</ph>，會叫用未採用參數的建構函式 (預設的建構函式)。</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
          <source>Culture-specific information that governs the coercion of <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> to the formal types declared for the <bpt id="p2">&lt;c&gt;</bpt>type<ept id="p2">&lt;/c&gt;</ept> constructor.</source>
          <target state="translated">特定文化特性的資訊，其可控制 <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> 到型式類型 (為 <bpt id="p2">&lt;c&gt;</bpt>type<ept id="p2">&lt;/c&gt;</ept> 建構函式宣告) 的強制轉型。</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>culture<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the <ph id="ph2">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph> for the current thread is used.</source>
          <target state="translated">如果「文化特性 (Culture)」<bpt id="p1">&lt;c&gt;</bpt><ept id="p1">&lt;/c&gt;</ept>是 <ph id="ph1">&lt;see langword="null" /&gt;</ph>，則使用目前執行緒的 <ph id="ph2">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
          <source>Creates an instance of the specified type using the constructor that best matches the specified parameters.</source>
          <target state="translated">使用最符合指定參數的建構函式，建立指定類型的執行個體。</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
          <source>A reference to the newly created object.</source>
          <target state="translated">新建立物件的參考。</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
          <source>The constructor to be invoked must provide the most specific match with the specified argument list under the constraints of the specified binder and binding attributes.</source>
          <target state="translated">要叫用的建構函式必須提供尋找最符合指定的引數清單的指定繫結和繫結屬性的條件約束。</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph>, this method can be used to access nonpublic types and members if the caller has been granted <ph id="ph2">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph> with the <ph id="ph3">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType&gt;</ph> flag and if the grant set of the assembly that contains the nonpublic types and members is restricted to the caller’s grant set or to a subset thereof.</source>
          <target state="translated">從開始<ph id="ph1">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph>，這個方法可以用來存取非公用類型和成員，如果呼叫端被授與<ph id="ph2">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph>與<ph id="ph3">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType&gt;</ph>旗標和包含非公用類型和成員的組件的授權集如果是受限制若要呼叫者的授與集或子集。</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
          <source>(See <bpt id="p1">[</bpt>Security Considerations for Reflection<ept id="p1">](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)</ept>.)</source>
          <target state="translated">(請參閱<bpt id="p1">[</bpt>反映的安全性考量<ept id="p1">](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)</ept>。)</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
          <source>To use this functionality, your application should target the <ph id="ph1">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph> or later.</source>
          <target state="translated">若要使用這項功能，您的應用程式應將目標設為 <ph id="ph1">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph> (含) 以後版本。</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is not a <ph id="ph2">&lt;see langword="RuntimeType" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> 不是 <ph id="ph2">&lt;see langword="RuntimeType" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is an open generic type (that is, the <ph id="ph2">&lt;see cref="P:System.Type.ContainsGenericParameters" /&gt;</ph> property returns <ph id="ph3">&lt;see langword="true" /&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> 是開放式泛型類型 (也就是 <ph id="ph2">&lt;see cref="P:System.Type.ContainsGenericParameters" /&gt;</ph> 屬性會傳回 <ph id="ph3">&lt;see langword="true" /&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> cannot be a <ph id="ph2">&lt;see cref="T:System.Reflection.Emit.TypeBuilder" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> 不可以是 <ph id="ph2">&lt;see cref="T:System.Reflection.Emit.TypeBuilder" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
          <source>Creation of <ph id="ph1">&lt;see cref="T:System.TypedReference" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.ArgIterator" /&gt;</ph>, <ph id="ph3">&lt;see cref="T:System.Void" /&gt;</ph>, and <ph id="ph4">&lt;see cref="T:System.RuntimeArgumentHandle" /&gt;</ph> types, or arrays of those types, is not supported.</source>
          <target state="translated">不支援建立 <ph id="ph1">&lt;see cref="T:System.TypedReference" /&gt;</ph>、<ph id="ph2">&lt;see cref="T:System.ArgIterator" /&gt;</ph>、<ph id="ph3">&lt;see cref="T:System.Void" /&gt;</ph> 和 <ph id="ph4">&lt;see cref="T:System.RuntimeArgumentHandle" /&gt;</ph> 類型或這些類型的陣列。</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
          <source>The assembly that contains <ph id="ph1">&lt;paramref name="type" /&gt;</ph> is a dynamic assembly that was created with <ph id="ph2">&lt;see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" /&gt;</ph>.</source>
          <target state="translated">包含 <ph id="ph1">&lt;paramref name="type" /&gt;</ph> 的組件是以 <ph id="ph2">&lt;see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" /&gt;</ph> 建立的動態組件。</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
          <source>The constructor that best matches <ph id="ph1">&lt;paramref name="args" /&gt;</ph> has <ph id="ph2">&lt;see langword="varargs" /&gt;</ph> arguments.</source>
          <target state="translated">最符合 <ph id="ph1">&lt;paramref name="args" /&gt;</ph> 的建構函式有 <ph id="ph2">&lt;see langword="varargs" /&gt;</ph> 引數。</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
          <source>The constructor being called throws an exception.</source>
          <target state="translated">正在呼叫的建構函式擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
          <source>The caller does not have permission to call this constructor.</source>
          <target state="translated">呼叫端沒有呼叫這個建構函式的權限。</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
          <source>Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</source>
          <target state="translated">無法建立抽象類別的執行個體，或者這個成員曾被晚期繫結機制叫用過。</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
          <source>The COM type was not obtained through <ph id="ph1">&lt;see cref="Overload:System.Type.GetTypeFromProgID" /&gt;</ph> or <ph id="ph2">&lt;see cref="Overload:System.Type.GetTypeFromCLSID" /&gt;</ph>.</source>
          <target state="translated">COM 類型不是透過 <ph id="ph1">&lt;see cref="Overload:System.Type.GetTypeFromProgID" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="Overload:System.Type.GetTypeFromCLSID" /&gt;</ph> 取得。</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
          <source>No matching constructor was found.</source>
          <target state="translated">找不到相符的建構函式。</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is a COM object but the class identifier used to obtain the type is invalid, or the identified class is not registered.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> 是 COM 物件，但用來取得類型的類別識別項無效，或已識別的類別未經登錄。</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is not a valid type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> 不是有效的類型。</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
          <source>for the ability to call unmanaged code when creating an instance of a delegate.</source>
          <target state="translated">提供建立委派的執行個體時，呼叫 unmanaged 程式碼的能力。</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
          <source>for accessing nonpublic types and members regardless of their grant set.</source>
          <target state="translated">用來存取非公用類型和成員，不論其授權集。</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>The type of object to create.</source>
          <target state="translated">要建立的物件類型。</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>A combination of zero or more bit flags that affect the search for the <bpt id="p1">&lt;c&gt;</bpt>type<ept id="p1">&lt;/c&gt;</ept> constructor.</source>
          <target state="translated">零或多個位元旗標的組合，此位元旗標會影響 <bpt id="p1">&lt;c&gt;</bpt>type<ept id="p1">&lt;/c&gt;</ept> 建構函式的搜尋。</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>bindingAttr<ept id="p1">&lt;/c&gt;</ept> is zero, a case-sensitive search for public constructors is conducted.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>bindingAttr<ept id="p1">&lt;/c&gt;</ept> 為零，則會針對公用建構函式執行區分大小寫的搜尋。</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>An object that uses <bpt id="p1">&lt;c&gt;</bpt>bindingAttr<ept id="p1">&lt;/c&gt;</ept> and <bpt id="p2">&lt;c&gt;</bpt>args<ept id="p2">&lt;/c&gt;</ept> to seek and identify the <bpt id="p3">&lt;c&gt;</bpt>type<ept id="p3">&lt;/c&gt;</ept> constructor.</source>
          <target state="translated">使用 <bpt id="p1">&lt;c&gt;</bpt>bindingAttr<ept id="p1">&lt;/c&gt;</ept> 和 <bpt id="p2">&lt;c&gt;</bpt>args<ept id="p2">&lt;/c&gt;</ept> 來搜尋及識別 <bpt id="p3">&lt;c&gt;</bpt>type<ept id="p3">&lt;/c&gt;</ept> 建構函式的物件。</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>binder<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the default binder is used.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>Binder<ept id="p1">&lt;/c&gt;</ept> 為 <ph id="ph1">&lt;see langword="null" /&gt;</ph>，則會使用預設 Binder。</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</source>
          <target state="translated">引數的陣列，此引數在數目、順序和類型上符合要叫用的建構函式的參數。</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> is an empty array or <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the constructor that takes no parameters (the default constructor) is invoked.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> 是空陣列或 <ph id="ph1">&lt;see langword="null" /&gt;</ph>，會叫用未採用參數的建構函式 (預設的建構函式)。</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>Culture-specific information that governs the coercion of <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> to the formal types declared for the <bpt id="p2">&lt;c&gt;</bpt>type<ept id="p2">&lt;/c&gt;</ept> constructor.</source>
          <target state="translated">特定文化特性的資訊，其可控制 <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> 到型式類型 (為 <bpt id="p2">&lt;c&gt;</bpt>type<ept id="p2">&lt;/c&gt;</ept> 建構函式宣告) 的強制轉型。</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>culture<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the <ph id="ph2">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph> for the current thread is used.</source>
          <target state="translated">如果「文化特性 (Culture)」<bpt id="p1">&lt;c&gt;</bpt><ept id="p1">&lt;/c&gt;</ept>是 <ph id="ph1">&lt;see langword="null" /&gt;</ph>，則使用目前執行緒的 <ph id="ph2">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>An array of one or more attributes that can participate in activation.</source>
          <target state="translated">一或多個屬性的陣列，此屬性可參與啟動過程。</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>This is typically an array that contains a single <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /&gt;</ph> object that specifies the URL that is required to activate a remote object.</source>
          <target state="translated">陣列通常只會包含一個 <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /&gt;</ph> 物件來指定用以啟動遠端物件的 URL。</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>This parameter is related to client-activated objects.</source>
          <target state="translated">此參數與啟動了用戶端的物件相關。</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</source>
          <target state="translated">用戶端啟動是一項舊的技術，保留目的在提供回溯相容性，不建議用於新的開發。</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>Distributed applications should instead use Windows Communication Foundation.</source>
          <target state="translated">分散式應用程式應該改用 Windows Communication Foundation。</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>Creates an instance of the specified type using the constructor that best matches the specified parameters.</source>
          <target state="translated">使用最符合指定參數的建構函式，建立指定類型的執行個體。</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>A reference to the newly created object.</source>
          <target state="translated">新建立物件的參考。</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>The constructor to be invoked must provide the most specific match with the specified argument list under the constraints of the specified binder and binding attributes.</source>
          <target state="translated">要叫用的建構函式必須提供尋找最符合指定的引數清單的指定繫結和繫結屬性的條件約束。</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph>, this method can be used to access nonpublic types and members if the caller has been granted <ph id="ph2">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph> with the <ph id="ph3">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType&gt;</ph> flag and if the grant set of the nonpublic types and members is restricted to the caller’s grant set or to a subset thereof.</source>
          <target state="translated">從開始<ph id="ph1">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph>，這個方法可以用來存取非公用類型和成員，如果呼叫端被授與<ph id="ph2">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph>與<ph id="ph3">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType&gt;</ph>旗標且如果非公用類型和成員的授權集只限制給呼叫者的授與集或子集。</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>(See <bpt id="p1">[</bpt>Security Considerations for Reflection<ept id="p1">](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)</ept>.)</source>
          <target state="translated">(請參閱<bpt id="p1">[</bpt>反映的安全性考量<ept id="p1">](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)</ept>。)</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>To use this functionality, your application should target the <ph id="ph1">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph> or later.</source>
          <target state="translated">若要使用這項功能，您的應用程式應將目標設為 <ph id="ph1">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph> (含) 以後版本。</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is not a <ph id="ph2">&lt;see langword="RuntimeType" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> 不是 <ph id="ph2">&lt;see langword="RuntimeType" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is an open generic type (that is, the <ph id="ph2">&lt;see cref="P:System.Type.ContainsGenericParameters" /&gt;</ph> property returns <ph id="ph3">&lt;see langword="true" /&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> 是開放式泛型類型 (也就是 <ph id="ph2">&lt;see cref="P:System.Type.ContainsGenericParameters" /&gt;</ph> 屬性會傳回 <ph id="ph3">&lt;see langword="true" /&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> cannot be a <ph id="ph2">&lt;see cref="T:System.Reflection.Emit.TypeBuilder" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> 不可以是 <ph id="ph2">&lt;see cref="T:System.Reflection.Emit.TypeBuilder" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>Creation of <ph id="ph1">&lt;see cref="T:System.TypedReference" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.ArgIterator" /&gt;</ph>, <ph id="ph3">&lt;see cref="T:System.Void" /&gt;</ph>, and <ph id="ph4">&lt;see cref="T:System.RuntimeArgumentHandle" /&gt;</ph> types, or arrays of those types, is not supported.</source>
          <target state="translated">不支援建立 <ph id="ph1">&lt;see cref="T:System.TypedReference" /&gt;</ph>、<ph id="ph2">&lt;see cref="T:System.ArgIterator" /&gt;</ph>、<ph id="ph3">&lt;see cref="T:System.Void" /&gt;</ph> 和 <ph id="ph4">&lt;see cref="T:System.RuntimeArgumentHandle" /&gt;</ph> 類型或這些類型的陣列。</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source><ph id="ph1">&lt;paramref name="activationAttributes" /&gt;</ph> is not an empty array, and the type being created does not derive from <ph id="ph2">&lt;see cref="T:System.MarshalByRefObject" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="activationAttributes" /&gt;</ph> 不是空的陣列，而建立中的類型不是衍生自 <ph id="ph2">&lt;see cref="T:System.MarshalByRefObject" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>The assembly that contains <ph id="ph1">&lt;paramref name="type" /&gt;</ph> is a dynamic assembly that was created with <ph id="ph2">&lt;see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" /&gt;</ph>.</source>
          <target state="translated">包含 <ph id="ph1">&lt;paramref name="type" /&gt;</ph> 的組件是以 <ph id="ph2">&lt;see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" /&gt;</ph> 建立的動態組件。</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>The constructor that best matches <ph id="ph1">&lt;paramref name="args" /&gt;</ph> has <ph id="ph2">&lt;see langword="varargs" /&gt;</ph> arguments.</source>
          <target state="translated">最符合 <ph id="ph1">&lt;paramref name="args" /&gt;</ph> 的建構函式有 <ph id="ph2">&lt;see langword="varargs" /&gt;</ph> 引數。</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>The constructor being called throws an exception.</source>
          <target state="translated">正在呼叫的建構函式擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>The caller does not have permission to call this constructor.</source>
          <target state="translated">呼叫端沒有呼叫這個建構函式的權限。</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</source>
          <target state="translated">無法建立抽象類別的執行個體，或者這個成員曾被晚期繫結機制叫用過。</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>The COM type was not obtained through <ph id="ph1">&lt;see cref="Overload:System.Type.GetTypeFromProgID" /&gt;</ph> or <ph id="ph2">&lt;see cref="Overload:System.Type.GetTypeFromCLSID" /&gt;</ph>.</source>
          <target state="translated">COM 類型不是透過 <ph id="ph1">&lt;see cref="Overload:System.Type.GetTypeFromProgID" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="Overload:System.Type.GetTypeFromCLSID" /&gt;</ph> 取得。</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>No matching constructor was found.</source>
          <target state="translated">找不到相符的建構函式。</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is a COM object but the class identifier used to obtain the type is invalid, or the identified class is not registered.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> 是 COM 物件，但用來取得類型的類別識別項無效，或已識別的類別未經登錄。</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is not a valid type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> 不是有效的類型。</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>for supplying evidence.</source>
          <target state="translated">用於提供辨識項。</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>for accessing nonpublic types and members regardless of their grant set.</source>
          <target state="translated">用來存取非公用類型和成員，不論其授權集。</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>The name of the assembly where the type named <bpt id="p1">&lt;c&gt;</bpt>typeName<ept id="p1">&lt;/c&gt;</ept> is sought.</source>
          <target state="translated">組件的名稱，該組件包含要在其中搜尋名稱為 <bpt id="p1">&lt;c&gt;</bpt>typeName<ept id="p1">&lt;/c&gt;</ept> 的類型。</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>assemblyName<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the executing assembly is searched.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>assemblyName<ept id="p1">&lt;/c&gt;</ept> 為 <ph id="ph1">&lt;see langword="null" /&gt;</ph>，則會搜尋執行中的組件。</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>The fully qualified name of the preferred type.</source>
          <target state="translated">慣用類型的完整名稱。</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to specify that the search for <bpt id="p1">&lt;c&gt;</bpt>typeName<ept id="p1">&lt;/c&gt;</ept> is not case-sensitive; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to specify that the search is case-sensitive.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 指定 <bpt id="p1">&lt;c&gt;</bpt>typeName<ept id="p1">&lt;/c&gt;</ept> 的搜尋不區分大小寫，<ph id="ph2">&lt;see langword="false" /&gt;</ph> 指定搜尋區分大小寫。</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>A combination of zero or more bit flags that affect the search for the <bpt id="p1">&lt;c&gt;</bpt>typeName<ept id="p1">&lt;/c&gt;</ept> constructor.</source>
          <target state="translated">零或多個位元旗標的組合，此位元旗標會影響 <bpt id="p1">&lt;c&gt;</bpt>typeName<ept id="p1">&lt;/c&gt;</ept> 建構函式的搜尋。</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>bindingAttr<ept id="p1">&lt;/c&gt;</ept> is zero, a case-sensitive search for public constructors is conducted.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>bindingAttr<ept id="p1">&lt;/c&gt;</ept> 為零，則會針對公用建構函式執行區分大小寫的搜尋。</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>An object that uses <bpt id="p1">&lt;c&gt;</bpt>bindingAttr<ept id="p1">&lt;/c&gt;</ept> and <bpt id="p2">&lt;c&gt;</bpt>args<ept id="p2">&lt;/c&gt;</ept> to seek and identify the <bpt id="p3">&lt;c&gt;</bpt>typeName<ept id="p3">&lt;/c&gt;</ept> constructor.</source>
          <target state="translated">使用 <bpt id="p1">&lt;c&gt;</bpt>bindingAttr<ept id="p1">&lt;/c&gt;</ept> 和 <bpt id="p2">&lt;c&gt;</bpt>args<ept id="p2">&lt;/c&gt;</ept> 來搜尋及識別 <bpt id="p3">&lt;c&gt;</bpt>typeName<ept id="p3">&lt;/c&gt;</ept> 建構函式的物件。</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>binder<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the default binder is used.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>Binder<ept id="p1">&lt;/c&gt;</ept> 為 <ph id="ph1">&lt;see langword="null" /&gt;</ph>，則會使用預設 Binder。</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</source>
          <target state="translated">引數的陣列，此引數在數目、順序和類型上符合要叫用的建構函式的參數。</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> is an empty array or <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the constructor that takes no parameters (the default constructor) is invoked.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> 是空陣列或 <ph id="ph1">&lt;see langword="null" /&gt;</ph>，會叫用未採用參數的建構函式 (預設的建構函式)。</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>Culture-specific information that governs the coercion of <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> to the formal types declared for the <bpt id="p2">&lt;c&gt;</bpt>typeName<ept id="p2">&lt;/c&gt;</ept> constructor.</source>
          <target state="translated">特定文化特性的資訊，其可控制 <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> 到型式類型 (為 <bpt id="p2">&lt;c&gt;</bpt>typeName<ept id="p2">&lt;/c&gt;</ept> 建構函式宣告) 的強制轉型。</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>culture<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the <ph id="ph2">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph> for the current thread is used.</source>
          <target state="translated">如果「文化特性 (Culture)」<bpt id="p1">&lt;c&gt;</bpt><ept id="p1">&lt;/c&gt;</ept>是 <ph id="ph1">&lt;see langword="null" /&gt;</ph>，則使用目前執行緒的 <ph id="ph2">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>An array of one or more attributes that can participate in activation.</source>
          <target state="translated">一或多個屬性的陣列，此屬性可參與啟動過程。</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>This is typically an array that contains a single <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /&gt;</ph> object that specifies the URL that is required to activate a remote object.</source>
          <target state="translated">陣列通常只會包含一個 <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /&gt;</ph> 物件來指定用以啟動遠端物件的 URL。</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>This parameter is related to client-activated objects.</source>
          <target state="translated">此參數與啟動了用戶端的物件相關。</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</source>
          <target state="translated">用戶端啟動是一項舊的技術，保留目的在提供回溯相容性，不建議用於新的開發。</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>Distributed applications should instead use Windows Communication Foundation.</source>
          <target state="translated">分散式應用程式應該改用 Windows Communication Foundation。</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>Creates an instance of the type whose name is specified, using the named assembly and the constructor that best matches the specified parameters.</source>
          <target state="translated">使用具名組件和最符合指定參數的建構函式，建立已具有指定名稱之類型的執行個體。</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>A handle that must be unwrapped to access the newly created instance.</source>
          <target state="translated">必須解除包裝的控制代碼，用來存取新建立的執行個體。</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>Use <ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType&gt;</ph> to unwrap the return value.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType&gt;</ph>要未包裝的傳回值。</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph>, this method can be used to create nonpublic types and members if the caller has been granted <ph id="ph2">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph> with the <ph id="ph3">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType&gt;</ph> flag and if the grant set of the assembly that contains the nonpublic types and members is restricted to the caller’s grant set or to a subset thereof.</source>
          <target state="translated">從開始<ph id="ph1">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph>，這個方法可以用來建立非公用類型和成員，如果呼叫端被授與<ph id="ph2">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph>與<ph id="ph3">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType&gt;</ph>旗標和包含非公用類型和成員的組件的授權集如果是受限制若要呼叫者的授與集或子集。</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>(See <bpt id="p1">[</bpt>Security Considerations for Reflection<ept id="p1">](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)</ept>42d9dc2a-8fcc-4ff3-b002-4ff260ef3dc5.)</source>
          <target state="translated">(請參閱<bpt id="p1">[</bpt>反映的安全性考量<ept id="p1">](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)</ept>42d9dc2a-8fcc-4ff3-b002-4ff260ef3dc5。)</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>To use this functionality, your application should target the <ph id="ph1">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph> or later.</source>
          <target state="translated">若要使用這項功能，您的應用程式應將目標設為 <ph id="ph1">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph> (含) 以後版本。</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source><ph id="ph1">&lt;paramref name="typeName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="typeName" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>No matching constructor was found.</source>
          <target state="translated">找不到相符的建構函式。</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source><ph id="ph1">&lt;paramref name="typename" /&gt;</ph> was not found in <ph id="ph2">&lt;paramref name="assemblyName" /&gt;</ph>.</source>
          <target state="translated">在 <ph id="ph2">&lt;paramref name="assemblyName" /&gt;</ph> 中找不到 <ph id="ph1">&lt;paramref name="typename" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source><ph id="ph1">&lt;paramref name="assemblyName" /&gt;</ph> was not found.</source>
          <target state="translated">找不到 <ph id="ph1">&lt;paramref name="assemblyName" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>The caller does not have permission to call this constructor.</source>
          <target state="translated">呼叫端沒有呼叫這個建構函式的權限。</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</source>
          <target state="translated">無法建立抽象類別的執行個體，或者這個成員曾被晚期繫結機制叫用過。</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>The constructor, which was invoked through reflection, threw an exception.</source>
          <target state="translated">透過反映叫用並擲回例外狀況的建構函式。</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>The COM type was not obtained through <ph id="ph1">&lt;see cref="Overload:System.Type.GetTypeFromProgID" /&gt;</ph> or <ph id="ph2">&lt;see cref="Overload:System.Type.GetTypeFromCLSID" /&gt;</ph>.</source>
          <target state="translated">COM 類型不是透過 <ph id="ph1">&lt;see cref="Overload:System.Type.GetTypeFromProgID" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="Overload:System.Type.GetTypeFromCLSID" /&gt;</ph> 取得。</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>Creation of <ph id="ph1">&lt;see cref="T:System.TypedReference" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.ArgIterator" /&gt;</ph>, <ph id="ph3">&lt;see cref="T:System.Void" /&gt;</ph>, and <ph id="ph4">&lt;see cref="T:System.RuntimeArgumentHandle" /&gt;</ph> types, or arrays of those types, is not supported.</source>
          <target state="translated">不支援建立 <ph id="ph1">&lt;see cref="T:System.TypedReference" /&gt;</ph>、<ph id="ph2">&lt;see cref="T:System.ArgIterator" /&gt;</ph>、<ph id="ph3">&lt;see cref="T:System.Void" /&gt;</ph> 和 <ph id="ph4">&lt;see cref="T:System.RuntimeArgumentHandle" /&gt;</ph> 類型或這些類型的陣列。</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source><ph id="ph1">&lt;paramref name="activationAttributes" /&gt;</ph> is not an empty array, and the type being created does not derive from <ph id="ph2">&lt;see cref="T:System.MarshalByRefObject" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="activationAttributes" /&gt;</ph> 不是空的陣列，而建立中的類型不是衍生自 <ph id="ph2">&lt;see cref="T:System.MarshalByRefObject" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>The constructor that best matches <ph id="ph1">&lt;paramref name="args" /&gt;</ph> has <ph id="ph2">&lt;see langword="varargs" /&gt;</ph> arguments.</source>
          <target state="translated">最符合 <ph id="ph1">&lt;paramref name="args" /&gt;</ph> 的建構函式有 <ph id="ph2">&lt;see langword="varargs" /&gt;</ph> 引數。</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source><ph id="ph1">&lt;paramref name="assemblyName" /&gt;</ph> is not a valid assembly.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="assemblyName" /&gt;</ph> 不是有效的組件。</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>The common language runtime (CLR) version 2.0 or later is currently loaded, and <ph id="ph1">&lt;paramref name="assemblyName" /&gt;</ph> was compiled for a version of the CLR that is later than the currently loaded version.</source>
          <target state="translated">目前載入的是 Common Language Runtime (CLR) 2.0 版或更新版本，且已使用比目前載入之版本更新的 CLR 版本來編譯 <ph id="ph1">&lt;paramref name="assemblyName" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</source>
          <target state="translated">請注意，.NET Framework 2.0、3.0 和 3.5 版全部都會使用 CLR 2.0 版。</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>An assembly or module was loaded twice with two different evidences.</source>
          <target state="translated">使用兩個不同的辨識項載入組件或模組兩次。</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>The assembly name or code base is invalid.</source>
          <target state="translated">組件名稱或程式碼基底無效。</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>for the ability to call unmanaged code when creating an instance of a delegate.</source>
          <target state="translated">提供建立委派的執行個體時，呼叫 unmanaged 程式碼的能力。</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>for accessing nonpublic types and members regardless of their grant set.</source>
          <target state="translated">用來存取非公用類型和成員，不論其授權集。</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>The domain where the type named <bpt id="p1">&lt;c&gt;</bpt>typeName<ept id="p1">&lt;/c&gt;</ept> is created.</source>
          <target state="translated">建立名稱為 <bpt id="p1">&lt;c&gt;</bpt>typeName<ept id="p1">&lt;/c&gt;</ept> 之類型的網域。</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>The name of the assembly where the type named <bpt id="p1">&lt;c&gt;</bpt>typeName<ept id="p1">&lt;/c&gt;</ept> is sought.</source>
          <target state="translated">組件的名稱，該組件包含要在其中搜尋名稱為 <bpt id="p1">&lt;c&gt;</bpt>typeName<ept id="p1">&lt;/c&gt;</ept> 的類型。</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>assemblyName<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the executing assembly is searched.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>assemblyName<ept id="p1">&lt;/c&gt;</ept> 為 <ph id="ph1">&lt;see langword="null" /&gt;</ph>，則會搜尋執行中的組件。</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>The fully qualified name of the preferred type.</source>
          <target state="translated">慣用類型的完整名稱。</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to specify that the search for <bpt id="p1">&lt;c&gt;</bpt>typeName<ept id="p1">&lt;/c&gt;</ept> is not case-sensitive; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to specify that the search is case-sensitive.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 指定 <bpt id="p1">&lt;c&gt;</bpt>typeName<ept id="p1">&lt;/c&gt;</ept> 的搜尋不區分大小寫，<ph id="ph2">&lt;see langword="false" /&gt;</ph> 指定搜尋區分大小寫。</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>A combination of zero or more bit flags that affect the search for the <bpt id="p1">&lt;c&gt;</bpt>typeName<ept id="p1">&lt;/c&gt;</ept> constructor.</source>
          <target state="translated">零或多個位元旗標的組合，此位元旗標會影響 <bpt id="p1">&lt;c&gt;</bpt>typeName<ept id="p1">&lt;/c&gt;</ept> 建構函式的搜尋。</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>bindingAttr<ept id="p1">&lt;/c&gt;</ept> is zero, a case-sensitive search for public constructors is conducted.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>bindingAttr<ept id="p1">&lt;/c&gt;</ept> 為零，則會針對公用建構函式執行區分大小寫的搜尋。</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>An object that uses <bpt id="p1">&lt;c&gt;</bpt>bindingAttr<ept id="p1">&lt;/c&gt;</ept> and <bpt id="p2">&lt;c&gt;</bpt>args<ept id="p2">&lt;/c&gt;</ept> to seek and identify the <bpt id="p3">&lt;c&gt;</bpt>typeName<ept id="p3">&lt;/c&gt;</ept> constructor.</source>
          <target state="translated">使用 <bpt id="p1">&lt;c&gt;</bpt>bindingAttr<ept id="p1">&lt;/c&gt;</ept> 和 <bpt id="p2">&lt;c&gt;</bpt>args<ept id="p2">&lt;/c&gt;</ept> 來搜尋及識別 <bpt id="p3">&lt;c&gt;</bpt>typeName<ept id="p3">&lt;/c&gt;</ept> 建構函式的物件。</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>binder<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the default binder is used.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>Binder<ept id="p1">&lt;/c&gt;</ept> 為 <ph id="ph1">&lt;see langword="null" /&gt;</ph>，則會使用預設 Binder。</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</source>
          <target state="translated">引數的陣列，此引數在數目、順序和類型上符合要叫用的建構函式的參數。</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> is an empty array or <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the constructor that takes no parameters (the default constructor) is invoked.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> 是空陣列或 <ph id="ph1">&lt;see langword="null" /&gt;</ph>，會叫用未採用參數的建構函式 (預設的建構函式)。</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>Culture-specific information that governs the coercion of <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> to the formal types declared for the <bpt id="p2">&lt;c&gt;</bpt>typeName<ept id="p2">&lt;/c&gt;</ept> constructor.</source>
          <target state="translated">特定文化特性的資訊，其可控制 <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> 到型式類型 (為 <bpt id="p2">&lt;c&gt;</bpt>typeName<ept id="p2">&lt;/c&gt;</ept> 建構函式宣告) 的強制轉型。</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>culture<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the <ph id="ph2">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph> for the current thread is used.</source>
          <target state="translated">如果「文化特性 (Culture)」<bpt id="p1">&lt;c&gt;</bpt><ept id="p1">&lt;/c&gt;</ept>是 <ph id="ph1">&lt;see langword="null" /&gt;</ph>，則使用目前執行緒的 <ph id="ph2">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>An array of one or more attributes that can participate in activation.</source>
          <target state="translated">一或多個屬性的陣列，此屬性可參與啟動過程。</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>This is typically an array that contains a single <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /&gt;</ph> object that specifies the URL that is required to activate a remote object.</source>
          <target state="translated">陣列通常只會包含一個 <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /&gt;</ph> 物件來指定用以啟動遠端物件的 URL。</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>This parameter is related to client-activated objects.</source>
          <target state="translated">此參數與啟動了用戶端的物件相關。</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</source>
          <target state="translated">用戶端啟動是一項舊的技術，保留目的在提供回溯相容性，不建議用於新的開發。</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>Distributed applications should instead use Windows Communication Foundation.</source>
          <target state="translated">分散式應用程式應該改用 Windows Communication Foundation。</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>Creates an instance of the type whose name is specified in the specified remote domain, using the named assembly and the constructor that best matches the specified parameters.</source>
          <target state="translated">使用最符合指定參數的具名組件和建構函式，建立已在指定遠端網域中具有指定名稱之類型的執行個體。</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>A handle that must be unwrapped to access the newly created instance.</source>
          <target state="translated">必須解除包裝的控制代碼，用來存取新建立的執行個體。</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>Use <ph id="ph1">&lt;xref:System.Activator.CreateInstance%2A&gt;</ph> when a host needs to execute code in an application domain that has restricted security permissions.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Activator.CreateInstance%2A&gt;</ph>主機需要具有限制的安全性權限的應用程式定義域中執行程式碼。</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>Use <ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType&gt;</ph> to unwrap the return value.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType&gt;</ph>要未包裝的傳回值。</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>This method uses <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType&gt;</ph> to require the immediate caller to have full trust.</source>
          <target state="translated">這個方法會使用<ph id="ph1">&lt;xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType&gt;</ph>需要具有完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source><ph id="ph1">&lt;paramref name="domain" /&gt;</ph> or <ph id="ph2">&lt;paramref name="typeName" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="domain" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="typeName" /&gt;</ph> 為 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>No matching constructor was found.</source>
          <target state="translated">找不到相符的建構函式。</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source><ph id="ph1">&lt;paramref name="typename" /&gt;</ph> was not found in <ph id="ph2">&lt;paramref name="assemblyName" /&gt;</ph>.</source>
          <target state="translated">在 <ph id="ph2">&lt;paramref name="assemblyName" /&gt;</ph> 中找不到 <ph id="ph1">&lt;paramref name="typename" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source><ph id="ph1">&lt;paramref name="assemblyName" /&gt;</ph> was not found.</source>
          <target state="translated">找不到 <ph id="ph1">&lt;paramref name="assemblyName" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>The caller does not have permission to call this constructor.</source>
          <target state="translated">呼叫端沒有呼叫這個建構函式的權限。</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</source>
          <target state="translated">無法建立抽象類別的執行個體，或者這個成員曾被晚期繫結機制叫用過。</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>The constructor, which was invoked through reflection, threw an exception.</source>
          <target state="translated">透過反映叫用並擲回例外狀況的建構函式。</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>The COM type was not obtained through <ph id="ph1">&lt;see cref="Overload:System.Type.GetTypeFromProgID" /&gt;</ph> or <ph id="ph2">&lt;see cref="Overload:System.Type.GetTypeFromCLSID" /&gt;</ph>.</source>
          <target state="translated">COM 類型不是透過 <ph id="ph1">&lt;see cref="Overload:System.Type.GetTypeFromProgID" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="Overload:System.Type.GetTypeFromCLSID" /&gt;</ph> 取得。</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>Creation of <ph id="ph1">&lt;see cref="T:System.TypedReference" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.ArgIterator" /&gt;</ph>, <ph id="ph3">&lt;see cref="T:System.Void" /&gt;</ph>, and <ph id="ph4">&lt;see cref="T:System.RuntimeArgumentHandle" /&gt;</ph> types, or arrays of those types, is not supported.</source>
          <target state="translated">不支援建立 <ph id="ph1">&lt;see cref="T:System.TypedReference" /&gt;</ph>、<ph id="ph2">&lt;see cref="T:System.ArgIterator" /&gt;</ph>、<ph id="ph3">&lt;see cref="T:System.Void" /&gt;</ph> 和 <ph id="ph4">&lt;see cref="T:System.RuntimeArgumentHandle" /&gt;</ph> 類型或這些類型的陣列。</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source><ph id="ph1">&lt;paramref name="activationAttributes" /&gt;</ph> is not an empty array, and the type being created does not derive from <ph id="ph2">&lt;see cref="T:System.MarshalByRefObject" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="activationAttributes" /&gt;</ph> 不是空的陣列，而建立中的類型不是衍生自 <ph id="ph2">&lt;see cref="T:System.MarshalByRefObject" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>The constructor that best matches <ph id="ph1">&lt;paramref name="args" /&gt;</ph> has <ph id="ph2">&lt;see langword="varargs" /&gt;</ph> arguments.</source>
          <target state="translated">最符合 <ph id="ph1">&lt;paramref name="args" /&gt;</ph> 的建構函式有 <ph id="ph2">&lt;see langword="varargs" /&gt;</ph> 引數。</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source><ph id="ph1">&lt;paramref name="assemblyName" /&gt;</ph> is not a valid assembly.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="assemblyName" /&gt;</ph> 不是有效的組件。</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>The common language runtime (CLR) version 2.0 or later is currently loaded, and <ph id="ph1">&lt;paramref name="assemblyName" /&gt;</ph> was compiled for a version of the CLR that is later than the currently loaded version.</source>
          <target state="translated">目前載入的是 Common Language Runtime (CLR) 2.0 版或更新版本，且已使用比目前載入之版本更新的 CLR 版本來編譯 <ph id="ph1">&lt;paramref name="assemblyName" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</source>
          <target state="translated">請注意，.NET Framework 2.0、3.0 和 3.5 版全部都會使用 CLR 2.0 版。</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>An assembly or module was loaded twice with two different evidences.</source>
          <target state="translated">使用兩個不同的辨識項載入組件或模組兩次。</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>The assembly name or code base is invalid.</source>
          <target state="translated">組件名稱或程式碼基底無效。</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">需要完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">這個成員無法供部分信任或安全性透明程式碼。</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>for the ability to call unmanaged code when creating an instance of a delegate.</source>
          <target state="translated">提供建立委派的執行個體時，呼叫 unmanaged 程式碼的能力。</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>for the ability to invoke operations on all type members.</source>
          <target state="translated">提供所有類型成員上叫用作業的能力。</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>The name of the assembly where the type named <bpt id="p1">&lt;c&gt;</bpt>typeName<ept id="p1">&lt;/c&gt;</ept> is sought.</source>
          <target state="translated">組件的名稱，該組件包含要在其中搜尋名稱為 <bpt id="p1">&lt;c&gt;</bpt>typeName<ept id="p1">&lt;/c&gt;</ept> 的類型。</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>assemblyName<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the executing assembly is searched.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>assemblyName<ept id="p1">&lt;/c&gt;</ept> 為 <ph id="ph1">&lt;see langword="null" /&gt;</ph>，則會搜尋執行中的組件。</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>The fully qualified name of the preferred type.</source>
          <target state="translated">慣用類型的完整名稱。</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to specify that the search for <bpt id="p1">&lt;c&gt;</bpt>typeName<ept id="p1">&lt;/c&gt;</ept> is not case-sensitive; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to specify that the search is case-sensitive.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 指定 <bpt id="p1">&lt;c&gt;</bpt>typeName<ept id="p1">&lt;/c&gt;</ept> 的搜尋不區分大小寫，<ph id="ph2">&lt;see langword="false" /&gt;</ph> 指定搜尋區分大小寫。</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>A combination of zero or more bit flags that affect the search for the <bpt id="p1">&lt;c&gt;</bpt>typeName<ept id="p1">&lt;/c&gt;</ept> constructor.</source>
          <target state="translated">零或多個位元旗標的組合，此位元旗標會影響 <bpt id="p1">&lt;c&gt;</bpt>typeName<ept id="p1">&lt;/c&gt;</ept> 建構函式的搜尋。</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>bindingAttr<ept id="p1">&lt;/c&gt;</ept> is zero, a case-sensitive search for public constructors is conducted.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>bindingAttr<ept id="p1">&lt;/c&gt;</ept> 為零，則會針對公用建構函式執行區分大小寫的搜尋。</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>An object that uses <bpt id="p1">&lt;c&gt;</bpt>bindingAttr<ept id="p1">&lt;/c&gt;</ept> and <bpt id="p2">&lt;c&gt;</bpt>args<ept id="p2">&lt;/c&gt;</ept> to seek and identify the <bpt id="p3">&lt;c&gt;</bpt>typeName<ept id="p3">&lt;/c&gt;</ept> constructor.</source>
          <target state="translated">使用 <bpt id="p1">&lt;c&gt;</bpt>bindingAttr<ept id="p1">&lt;/c&gt;</ept> 和 <bpt id="p2">&lt;c&gt;</bpt>args<ept id="p2">&lt;/c&gt;</ept> 來搜尋及識別 <bpt id="p3">&lt;c&gt;</bpt>typeName<ept id="p3">&lt;/c&gt;</ept> 建構函式的物件。</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>binder<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the default binder is used.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>Binder<ept id="p1">&lt;/c&gt;</ept> 為 <ph id="ph1">&lt;see langword="null" /&gt;</ph>，則會使用預設 Binder。</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</source>
          <target state="translated">引數的陣列，此引數在數目、順序和類型上符合要叫用的建構函式的參數。</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> is an empty array or <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the constructor that takes no parameters (the default constructor) is invoked.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> 是空陣列或 <ph id="ph1">&lt;see langword="null" /&gt;</ph>，會叫用未採用參數的建構函式 (預設的建構函式)。</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>Culture-specific information that governs the coercion of <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> to the formal types declared for the <bpt id="p2">&lt;c&gt;</bpt>typeName<ept id="p2">&lt;/c&gt;</ept> constructor.</source>
          <target state="translated">特定文化特性的資訊，其可控制 <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> 到型式類型 (為 <bpt id="p2">&lt;c&gt;</bpt>typeName<ept id="p2">&lt;/c&gt;</ept> 建構函式宣告) 的強制轉型。</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>culture<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the <ph id="ph2">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph> for the current thread is used.</source>
          <target state="translated">如果「文化特性 (Culture)」<bpt id="p1">&lt;c&gt;</bpt><ept id="p1">&lt;/c&gt;</ept>是 <ph id="ph1">&lt;see langword="null" /&gt;</ph>，則使用目前執行緒的 <ph id="ph2">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>An array of one or more attributes that can participate in activation.</source>
          <target state="translated">一或多個屬性的陣列，此屬性可參與啟動過程。</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>This is typically an array that contains a single <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /&gt;</ph> object that specifies the URL that is required to activate a remote object.</source>
          <target state="translated">陣列通常只會包含一個 <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /&gt;</ph> 物件來指定用以啟動遠端物件的 URL。</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>This parameter is related to client-activated objects.</source>
          <target state="translated">此參數與啟動了用戶端的物件相關。</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</source>
          <target state="translated">用戶端啟動是一項舊的技術，保留目的在提供回溯相容性，不建議用於新的開發。</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>Distributed applications should instead use Windows Communication Foundation.</source>
          <target state="translated">分散式應用程式應該改用 Windows Communication Foundation。</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>Information used to make security policy decisions and grant code permissions.</source>
          <target state="translated">用來執行安全性原則決策和授權程式碼使用權限的資訊。</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>Creates an instance of the type whose name is specified, using the named assembly and the constructor that best matches the specified parameters.</source>
          <target state="translated">使用具名組件和最符合指定參數的建構函式，建立已具有指定名稱之類型的執行個體。</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>A handle that must be unwrapped to access the newly created instance.</source>
          <target state="translated">必須解除包裝的控制代碼，用來存取新建立的執行個體。</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>Use <ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType&gt;</ph> to unwrap the return value.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType&gt;</ph>要未包裝的傳回值。</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph>, this method can be used to create nonpublic types and members if the caller has been granted <ph id="ph2">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph> with the <ph id="ph3">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType&gt;</ph> flag and if the grant set of the assembly that contains the nonpublic types and members is restricted to the caller’s grant set or to a subset thereof.</source>
          <target state="translated">從開始<ph id="ph1">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph>，這個方法可以用來建立非公用類型和成員，如果呼叫端被授與<ph id="ph2">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph>與<ph id="ph3">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType&gt;</ph>旗標和包含非公用類型和成員的組件的授權集如果是受限制若要呼叫者的授與集或子集。</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>(See <bpt id="p1">[</bpt>Security Considerations for Reflection<ept id="p1">](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)</ept>.)</source>
          <target state="translated">(請參閱<bpt id="p1">[</bpt>反映的安全性考量<ept id="p1">](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)</ept>。)</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>To use this functionality, your application should target the <ph id="ph1">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph> or later.</source>
          <target state="translated">若要使用這項功能，您的應用程式應將目標設為 <ph id="ph1">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph> (含) 以後版本。</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source><ph id="ph1">&lt;paramref name="typeName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="typeName" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>No matching constructor was found.</source>
          <target state="translated">找不到相符的建構函式。</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source><ph id="ph1">&lt;paramref name="typename" /&gt;</ph> was not found in <ph id="ph2">&lt;paramref name="assemblyName" /&gt;</ph>.</source>
          <target state="translated">在 <ph id="ph2">&lt;paramref name="assemblyName" /&gt;</ph> 中找不到 <ph id="ph1">&lt;paramref name="typename" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source><ph id="ph1">&lt;paramref name="assemblyName" /&gt;</ph> was not found.</source>
          <target state="translated">找不到 <ph id="ph1">&lt;paramref name="assemblyName" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>The caller does not have permission to call this constructor.</source>
          <target state="translated">呼叫端沒有呼叫這個建構函式的權限。</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</source>
          <target state="translated">無法建立抽象類別的執行個體，或者這個成員曾被晚期繫結機制叫用過。</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>The constructor, which was invoked through reflection, threw an exception.</source>
          <target state="translated">透過反映叫用並擲回例外狀況的建構函式。</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>The COM type was not obtained through <ph id="ph1">&lt;see cref="Overload:System.Type.GetTypeFromProgID" /&gt;</ph> or <ph id="ph2">&lt;see cref="Overload:System.Type.GetTypeFromCLSID" /&gt;</ph>.</source>
          <target state="translated">COM 類型不是透過 <ph id="ph1">&lt;see cref="Overload:System.Type.GetTypeFromProgID" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="Overload:System.Type.GetTypeFromCLSID" /&gt;</ph> 取得。</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>Creation of <ph id="ph1">&lt;see cref="T:System.TypedReference" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.ArgIterator" /&gt;</ph>, <ph id="ph3">&lt;see cref="T:System.Void" /&gt;</ph>, and <ph id="ph4">&lt;see cref="T:System.RuntimeArgumentHandle" /&gt;</ph> types, or arrays of those types, is not supported.</source>
          <target state="translated">不支援建立 <ph id="ph1">&lt;see cref="T:System.TypedReference" /&gt;</ph>、<ph id="ph2">&lt;see cref="T:System.ArgIterator" /&gt;</ph>、<ph id="ph3">&lt;see cref="T:System.Void" /&gt;</ph> 和 <ph id="ph4">&lt;see cref="T:System.RuntimeArgumentHandle" /&gt;</ph> 類型或這些類型的陣列。</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source><ph id="ph1">&lt;paramref name="activationAttributes" /&gt;</ph> is not an empty array, and the type being created does not derive from <ph id="ph2">&lt;see cref="T:System.MarshalByRefObject" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="activationAttributes" /&gt;</ph> 不是空的陣列，而建立中的類型不是衍生自 <ph id="ph2">&lt;see cref="T:System.MarshalByRefObject" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>The constructor that best matches <ph id="ph1">&lt;paramref name="args" /&gt;</ph> has <ph id="ph2">&lt;see langword="varargs" /&gt;</ph> arguments.</source>
          <target state="translated">最符合 <ph id="ph1">&lt;paramref name="args" /&gt;</ph> 的建構函式有 <ph id="ph2">&lt;see langword="varargs" /&gt;</ph> 引數。</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source><ph id="ph1">&lt;paramref name="assemblyName" /&gt;</ph> is not a valid assembly.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="assemblyName" /&gt;</ph> 不是有效的組件。</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>The common language runtime (CLR) version 2.0 or later is currently loaded, and <ph id="ph1">&lt;paramref name="assemblyName" /&gt;</ph> was compiled for a version of the CLR that is later than the currently loaded version.</source>
          <target state="translated">目前載入的是 Common Language Runtime (CLR) 2.0 版或更新版本，且已使用比目前載入之版本更新的 CLR 版本來編譯 <ph id="ph1">&lt;paramref name="assemblyName" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</source>
          <target state="translated">請注意，.NET Framework 2.0、3.0 和 3.5 版全部都會使用 CLR 2.0 版。</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>An assembly or module was loaded twice with two different evidences.</source>
          <target state="translated">使用兩個不同的辨識項載入組件或模組兩次。</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>The assembly name or code base is invalid.</source>
          <target state="translated">組件名稱或程式碼基底無效。</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>for the ability to call unmanaged code when creating an instance of a delegate.</source>
          <target state="translated">提供建立委派的執行個體時，呼叫 unmanaged 程式碼的能力。</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>for accessing nonpublic types and members regardless of their grant set.</source>
          <target state="translated">用來存取非公用類型和成員，不論其授權集。</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>The domain where the type named <bpt id="p1">&lt;c&gt;</bpt>typeName<ept id="p1">&lt;/c&gt;</ept> is created.</source>
          <target state="translated">建立名稱為 <bpt id="p1">&lt;c&gt;</bpt>typeName<ept id="p1">&lt;/c&gt;</ept> 之類型的網域。</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>The name of the assembly where the type named <bpt id="p1">&lt;c&gt;</bpt>typeName<ept id="p1">&lt;/c&gt;</ept> is sought.</source>
          <target state="translated">組件的名稱，該組件包含要在其中搜尋名稱為 <bpt id="p1">&lt;c&gt;</bpt>typeName<ept id="p1">&lt;/c&gt;</ept> 的類型。</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>assemblyName<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the executing assembly is searched.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>assemblyName<ept id="p1">&lt;/c&gt;</ept> 為 <ph id="ph1">&lt;see langword="null" /&gt;</ph>，則會搜尋執行中的組件。</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>The fully qualified name of the preferred type.</source>
          <target state="translated">慣用類型的完整名稱。</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to specify that the search for <bpt id="p1">&lt;c&gt;</bpt>typeName<ept id="p1">&lt;/c&gt;</ept> is not case-sensitive; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to specify that the search is case-sensitive.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 指定 <bpt id="p1">&lt;c&gt;</bpt>typeName<ept id="p1">&lt;/c&gt;</ept> 的搜尋不區分大小寫，<ph id="ph2">&lt;see langword="false" /&gt;</ph> 指定搜尋區分大小寫。</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>A combination of zero or more bit flags that affect the search for the <bpt id="p1">&lt;c&gt;</bpt>typeName<ept id="p1">&lt;/c&gt;</ept> constructor.</source>
          <target state="translated">零或多個位元旗標的組合，此位元旗標會影響 <bpt id="p1">&lt;c&gt;</bpt>typeName<ept id="p1">&lt;/c&gt;</ept> 建構函式的搜尋。</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>bindingAttr<ept id="p1">&lt;/c&gt;</ept> is zero, a case-sensitive search for public constructors is conducted.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>bindingAttr<ept id="p1">&lt;/c&gt;</ept> 為零，則會針對公用建構函式執行區分大小寫的搜尋。</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>An object that uses <bpt id="p1">&lt;c&gt;</bpt>bindingAttr<ept id="p1">&lt;/c&gt;</ept> and <bpt id="p2">&lt;c&gt;</bpt>args<ept id="p2">&lt;/c&gt;</ept> to seek and identify the <bpt id="p3">&lt;c&gt;</bpt>typeName<ept id="p3">&lt;/c&gt;</ept> constructor.</source>
          <target state="translated">使用 <bpt id="p1">&lt;c&gt;</bpt>bindingAttr<ept id="p1">&lt;/c&gt;</ept> 和 <bpt id="p2">&lt;c&gt;</bpt>args<ept id="p2">&lt;/c&gt;</ept> 來搜尋及識別 <bpt id="p3">&lt;c&gt;</bpt>typeName<ept id="p3">&lt;/c&gt;</ept> 建構函式的物件。</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>binder<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the default binder is used.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>Binder<ept id="p1">&lt;/c&gt;</ept> 為 <ph id="ph1">&lt;see langword="null" /&gt;</ph>，則會使用預設 Binder。</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</source>
          <target state="translated">引數的陣列，此引數在數目、順序和類型上符合要叫用的建構函式的參數。</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> is an empty array or <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the constructor that takes no parameters (the default constructor) is invoked.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> 是空陣列或 <ph id="ph1">&lt;see langword="null" /&gt;</ph>，會叫用未採用參數的建構函式 (預設的建構函式)。</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>Culture-specific information that governs the coercion of <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> to the formal types declared for the <bpt id="p2">&lt;c&gt;</bpt>typeName<ept id="p2">&lt;/c&gt;</ept> constructor.</source>
          <target state="translated">特定文化特性的資訊，其可控制 <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> 到型式類型 (為 <bpt id="p2">&lt;c&gt;</bpt>typeName<ept id="p2">&lt;/c&gt;</ept> 建構函式宣告) 的強制轉型。</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>culture<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the <ph id="ph2">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph> for the current thread is used.</source>
          <target state="translated">如果「文化特性 (Culture)」<bpt id="p1">&lt;c&gt;</bpt><ept id="p1">&lt;/c&gt;</ept>是 <ph id="ph1">&lt;see langword="null" /&gt;</ph>，則使用目前執行緒的 <ph id="ph2">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>An array of one or more attributes that can participate in activation.</source>
          <target state="translated">一或多個屬性的陣列，此屬性可參與啟動過程。</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>This is typically an array that contains a single <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /&gt;</ph> object.</source>
          <target state="translated">這通常是包含單一 <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /&gt;</ph> 物件的陣列。</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /&gt;</ph> specifies the URL that is required to activate a remote object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /&gt;</ph> 會指定啟動遠端物件所需的 URL。</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>Information used to make security policy decisions and grant code permissions.</source>
          <target state="translated">用來執行安全性原則決策和授權程式碼使用權限的資訊。</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>Creates an instance of the type whose name is specified in the specified remote domain, using the named assembly and the constructor that best matches the specified parameters.</source>
          <target state="translated">使用最符合指定參數的具名組件和建構函式，建立已在指定遠端網域中具有指定名稱之類型的執行個體。</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>A handle that must be unwrapped to access the newly created instance.</source>
          <target state="translated">必須解除包裝的控制代碼，用來存取新建立的執行個體。</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>Use <ph id="ph1">&lt;xref:System.Activator.CreateInstance%2A&gt;</ph> when a host needs to execute code in an application domain that has restricted security permissions.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Activator.CreateInstance%2A&gt;</ph>主機需要具有限制的安全性權限的應用程式定義域中執行程式碼。</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>Use <ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType&gt;</ph> to unwrap the return value.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType&gt;</ph>要未包裝的傳回值。</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>This method uses <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType&gt;</ph> to require the immediate caller to have full trust.</source>
          <target state="translated">這個方法會使用<ph id="ph1">&lt;xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType&gt;</ph>需要具有完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source><ph id="ph1">&lt;paramref name="domain" /&gt;</ph> or <ph id="ph2">&lt;paramref name="typeName" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="domain" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="typeName" /&gt;</ph> 為 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>No matching constructor was found.</source>
          <target state="translated">找不到相符的建構函式。</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source><ph id="ph1">&lt;paramref name="typename" /&gt;</ph> was not found in <ph id="ph2">&lt;paramref name="assemblyName" /&gt;</ph>.</source>
          <target state="translated">在 <ph id="ph2">&lt;paramref name="assemblyName" /&gt;</ph> 中找不到 <ph id="ph1">&lt;paramref name="typename" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source><ph id="ph1">&lt;paramref name="assemblyName" /&gt;</ph> was not found.</source>
          <target state="translated">找不到 <ph id="ph1">&lt;paramref name="assemblyName" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>The caller does not have permission to call this constructor.</source>
          <target state="translated">呼叫端沒有呼叫這個建構函式的權限。</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</source>
          <target state="translated">無法建立抽象類別的執行個體，或者這個成員曾被晚期繫結機制叫用過。</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>The constructor, which was invoked through reflection, threw an exception.</source>
          <target state="translated">透過反映叫用並擲回例外狀況的建構函式。</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>The COM type was not obtained through <ph id="ph1">&lt;see cref="Overload:System.Type.GetTypeFromProgID" /&gt;</ph> or <ph id="ph2">&lt;see cref="Overload:System.Type.GetTypeFromCLSID" /&gt;</ph>.</source>
          <target state="translated">COM 類型不是透過 <ph id="ph1">&lt;see cref="Overload:System.Type.GetTypeFromProgID" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="Overload:System.Type.GetTypeFromCLSID" /&gt;</ph> 取得。</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>Creation of <ph id="ph1">&lt;see cref="T:System.TypedReference" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.ArgIterator" /&gt;</ph>, <ph id="ph3">&lt;see cref="T:System.Void" /&gt;</ph>, and <ph id="ph4">&lt;see cref="T:System.RuntimeArgumentHandle" /&gt;</ph> types, or arrays of those types, is not supported.</source>
          <target state="translated">不支援建立 <ph id="ph1">&lt;see cref="T:System.TypedReference" /&gt;</ph>、<ph id="ph2">&lt;see cref="T:System.ArgIterator" /&gt;</ph>、<ph id="ph3">&lt;see cref="T:System.Void" /&gt;</ph> 和 <ph id="ph4">&lt;see cref="T:System.RuntimeArgumentHandle" /&gt;</ph> 類型或這些類型的陣列。</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source><ph id="ph1">&lt;paramref name="activationAttributes" /&gt;</ph> is not an empty array, and the type being created does not derive from <ph id="ph2">&lt;see cref="T:System.MarshalByRefObject" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="activationAttributes" /&gt;</ph> 不是空的陣列，而建立中的類型不是衍生自 <ph id="ph2">&lt;see cref="T:System.MarshalByRefObject" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>The constructor that best matches <ph id="ph1">&lt;paramref name="args" /&gt;</ph> has <ph id="ph2">&lt;see langword="varargs" /&gt;</ph> arguments.</source>
          <target state="translated">最符合 <ph id="ph1">&lt;paramref name="args" /&gt;</ph> 的建構函式有 <ph id="ph2">&lt;see langword="varargs" /&gt;</ph> 引數。</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source><ph id="ph1">&lt;paramref name="assemblyName" /&gt;</ph> is not a valid assembly.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="assemblyName" /&gt;</ph> 不是有效的組件。</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>The common language runtime (CLR) version 2.0 or later is currently loaded, and <ph id="ph1">&lt;paramref name="assemblyName" /&gt;</ph> was compiled for a version of the CLR that is later than the currently loaded version.</source>
          <target state="translated">目前載入的是 Common Language Runtime (CLR) 2.0 版或更新版本，且已使用比目前載入之版本更新的 CLR 版本來編譯 <ph id="ph1">&lt;paramref name="assemblyName" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</source>
          <target state="translated">請注意，.NET Framework 2.0、3.0 和 3.5 版全部都會使用 CLR 2.0 版。</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>An assembly or module was loaded twice with two different evidences.</source>
          <target state="translated">使用兩個不同的辨識項載入組件或模組兩次。</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>The assembly name or code base is invalid.</source>
          <target state="translated">組件名稱或程式碼基底無效。</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>for the ability to call unmanaged code when creating an instance of a delegate.</source>
          <target state="translated">提供建立委派的執行個體時，呼叫 unmanaged 程式碼的能力。</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>for the ability to invoke operations on all type members.</source>
          <target state="translated">提供所有類型成員上叫用作業的能力。</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">需要完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">這個成員無法供部分信任或安全性透明程式碼。</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance``1">
          <source>The type to create.</source>
          <target state="translated">要建立的類型。</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance``1">
          <source>Creates an instance of the type designated by the specified generic type parameter, using the parameterless constructor.</source>
          <target state="translated">使用無參數建構函式，建立由指定之泛型型別參數所指定之類型的執行個體。</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance``1">
          <source>A reference to the newly created object.</source>
          <target state="translated">新建立物件的參考。</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance``1">
          <source>The <ph id="ph1">&lt;xref:System.Activator.CreateInstance%60%601&gt;</ph> generic method is used by compilers to implement the instantiation of types specified by type parameters.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Activator.CreateInstance%60%601&gt;</ph>編譯器會使用泛型的方法來實作的型別參數所指定的類型具現化。</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance``1">
          <source>For example, in the following generic method, the implementation of <ph id="ph1">`new T()`</ph> (<ph id="ph2">`gcnew T()`</ph> in C++) uses the <ph id="ph3">&lt;xref:System.Activator.CreateInstance%60%601&gt;</ph> generic method.</source>
          <target state="translated">例如，在下列泛型方法的實作<ph id="ph1">`new T()`</ph>(<ph id="ph2">`gcnew T()`</ph> c + + 中) 會使用<ph id="ph3">&lt;xref:System.Activator.CreateInstance%60%601&gt;</ph>泛型方法。</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance``1">
          <source>In general, there is no use for the <ph id="ph1">&lt;xref:System.Activator.CreateInstance%60%601&gt;</ph> generic method in application code, because the type must be known at compile time.</source>
          <target state="translated">一般情況下，沒有任何使用<ph id="ph1">&lt;xref:System.Activator.CreateInstance%60%601&gt;</ph>應用程式中的泛型方法的程式碼，因為必須在編譯時期已知的型別。</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance``1">
          <source>If the type is known at compile time, normal instantiation syntax can be used (<ph id="ph1">`new`</ph> operator in C#, <ph id="ph2">`New`</ph> in Visual Basic, <ph id="ph3">`gcnew`</ph> in C++).</source>
          <target state="translated">如果在編譯時期已知的型別，可以使用標準具現化語法 (<ph id="ph1">`new`</ph>在 C# 中，運算子<ph id="ph2">`New`</ph>在 Visual Basic 中<ph id="ph3">`gcnew`</ph>c + + 中)。</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance``1">
          <source>If the type is not known at compile time, you can call a non-generic overload of <ph id="ph1">&lt;xref:System.Activator.CreateInstance%2A&gt;</ph>.</source>
          <target state="translated">如果不在編譯時期已知類型，您可以呼叫的非泛型多載<ph id="ph1">&lt;xref:System.Activator.CreateInstance%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstance``1">
          <source>There are no overloads of the <ph id="ph1">&lt;xref:System.Activator.CreateInstance%60%601&gt;</ph> generic method that take argument lists, because the non-generic overloads of <ph id="ph2">&lt;xref:System.Activator.CreateInstance%2A&gt;</ph> already provide late-bound constructor resolution.</source>
          <target state="translated">沒有任何多載<ph id="ph1">&lt;xref:System.Activator.CreateInstance%60%601&gt;</ph>泛型方法的引數清單，因為非泛型多載的<ph id="ph2">&lt;xref:System.Activator.CreateInstance%2A&gt;</ph>已經提供晚期繫結的建構函式解析。</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance``1">
          <source>In the <bpt id="p1">[</bpt>.NET for Windows Store apps<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=247912)</ept> or the <bpt id="p2">[</bpt>Portable Class Library<ept id="p2">](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md)</ept>, catch the base class exception, <ph id="ph1">&lt;see cref="T:System.MissingMemberException" /&gt;</ph>, instead.</source>
          <target state="translated">在<bpt id="p1">[</bpt>適用於 Windows 市集應用程式的 .NET<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=247912)</ept> 或是<bpt id="p2">[</bpt>可攜式類別庫<ept id="p2">](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md)</ept>中，改為攔截基底類別例外狀況 <ph id="ph1">&lt;see cref="T:System.MissingMemberException" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstance``1">
          <source>The type that is specified for <ph id="ph1">&lt;paramref name="T" /&gt;</ph> does not have a parameterless constructor.</source>
          <target state="translated">為 <ph id="ph1">&lt;paramref name="T" /&gt;</ph> 指定的型別沒有無參數建構函式。</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" uid="T:System.Activator">
          <source>Creates an instance of the type whose name is specified, using the named assembly file and the constructor that best matches the specified parameters.</source>
          <target state="translated">使用具名組件檔案和最符合指定參數的建構函式，建立已具有指定名稱之類型的執行個體。</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String)">
          <source>The name of a file that contains an assembly where the type named <bpt id="p1">&lt;c&gt;</bpt>typeName<ept id="p1">&lt;/c&gt;</ept> is sought.</source>
          <target state="translated">檔案的名稱，該檔案包含要在其中搜尋名稱為 <bpt id="p1">&lt;c&gt;</bpt>typeName<ept id="p1">&lt;/c&gt;</ept> 之類型的組件。</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String)">
          <source>The name of the preferred type.</source>
          <target state="translated">慣用類型的名稱。</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String)">
          <source>Creates an instance of the type whose name is specified, using the named assembly file and default constructor.</source>
          <target state="translated">使用具名組件檔案和預設建構函式，建立已具有指定名稱之類型的執行個體。</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String)">
          <source>A handle that must be unwrapped to access the newly created instance.</source>
          <target state="translated">必須解除包裝的控制代碼，用來存取新建立的執行個體。</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType&gt;</ph> method to unwrap the return value.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType&gt;</ph>要未包裝的傳回值的方法。</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String)">
          <source>For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <ph id="ph1">&lt;xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Activator.CreateInstance%2A&gt;</ph> methods.</source>
          <target state="translated">其他可能會叫用方法所擲回的例外狀況的相關資訊，請參閱例外狀況區段<ph id="ph1">&lt;xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType&gt;</ph>和<ph id="ph2">&lt;xref:System.Activator.CreateInstance%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String)">
          <source>The following code example demonstrates how to call the <ph id="ph1">&lt;xref:System.Activator.CreateInstanceFrom%2A&gt;</ph> method.</source>
          <target state="translated">下列程式碼範例示範如何呼叫<ph id="ph1">&lt;xref:System.Activator.CreateInstanceFrom%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Activator&gt;</ph> class.</source>
          <target state="translated">這個程式碼範例是針對所提供之較大範例的一部分<ph id="ph1">&lt;xref:System.Activator&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="typeName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="typeName" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String)">
          <source>No matching public constructor was found.</source>
          <target state="translated">找不到相符的公用建構函式。</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="typename" /&gt;</ph> was not found in <ph id="ph2">&lt;paramref name="assemblyFile" /&gt;</ph>.</source>
          <target state="translated">在 <ph id="ph2">&lt;paramref name="assemblyFile" /&gt;</ph> 中找不到 <ph id="ph1">&lt;paramref name="typename" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="assemblyFile" /&gt;</ph> was not found.</source>
          <target state="translated">找不到 <ph id="ph1">&lt;paramref name="assemblyFile" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String)">
          <source>The caller does not have permission to call this constructor.</source>
          <target state="translated">呼叫端沒有呼叫這個建構函式的權限。</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String)">
          <source>Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</source>
          <target state="translated">無法建立抽象類別的執行個體，或者這個成員曾被晚期繫結機制叫用過。</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String)">
          <source>The constructor, which was invoked through reflection, threw an exception.</source>
          <target state="translated">透過反映叫用並擲回例外狀況的建構函式。</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String)">
          <source>The caller does have the required <ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermission" /&gt;</ph>.</source>
          <target state="translated">呼叫端具有所要求的 <ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermission" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="assemblyFile" /&gt;</ph> is not a valid assembly.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="assemblyFile" /&gt;</ph> 不是有效的組件。</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String)">
          <source>The common language runtime (CLR) version 2.0 or later is currently loaded, and <ph id="ph1">&lt;paramref name="assemblyName" /&gt;</ph> was compiled for a version of the CLR that is later than the currently loaded version.</source>
          <target state="translated">目前載入的是 Common Language Runtime (CLR) 2.0 版或更新版本，且已使用比目前載入之版本更新的 CLR 版本來編譯 <ph id="ph1">&lt;paramref name="assemblyName" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String)">
          <source>Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</source>
          <target state="translated">請注意，.NET Framework 2.0、3.0 和 3.5 版全部都會使用 CLR 2.0 版。</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String)">
          <source>for the ability to call unmanaged code when creating an instance of a delegate.</source>
          <target state="translated">提供建立委派的執行個體時，呼叫 unmanaged 程式碼的能力。</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String)">
          <source>for the ability to search directory paths and read their contents.</source>
          <target state="translated">若要搜尋的目錄路徑，並讀取其內容的功能。</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String)">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph> and <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph></source>
          <target state="translated">列舉型別相關聯：<ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph>和 <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String)">
          <source>for accessing nonpublic types regardless of their grant set.</source>
          <target state="translated">用來存取非公用型別，不論其授權集。</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String)">
          <source>The remote domain where the type named <bpt id="p1">&lt;c&gt;</bpt>typeName<ept id="p1">&lt;/c&gt;</ept> is created.</source>
          <target state="translated">建立名稱為 <bpt id="p1">&lt;c&gt;</bpt>typeName<ept id="p1">&lt;/c&gt;</ept> 之類型的遠端網域。</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String)">
          <source>The name of a file that contains an assembly where the type named <bpt id="p1">&lt;c&gt;</bpt>typeName<ept id="p1">&lt;/c&gt;</ept> is sought.</source>
          <target state="translated">檔案的名稱，該檔案包含要在其中搜尋名稱為 <bpt id="p1">&lt;c&gt;</bpt>typeName<ept id="p1">&lt;/c&gt;</ept> 之類型的組件。</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String)">
          <source>The name of the preferred type.</source>
          <target state="translated">慣用類型的名稱。</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String)">
          <source>Creates an instance of the type whose name is specified in the specified remote domain, using the named assembly file and default constructor.</source>
          <target state="translated">使用具名組件檔案和預設建構函式，建立已在指定遠端網域中指定名稱之類型的執行個體。</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String)">
          <source>A handle that must be unwrapped to access the newly created instance.</source>
          <target state="translated">必須解除包裝的控制代碼，用來存取新建立的執行個體。</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String)">
          <source>Use <ph id="ph1">&lt;xref:System.Activator.CreateInstanceFrom%2A&gt;</ph> when a host needs to execute code in an application domain that has restricted security permissions.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Activator.CreateInstanceFrom%2A&gt;</ph>主機需要具有限制的安全性權限的應用程式定義域中執行程式碼。</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType&gt;</ph> method to unwrap the return value.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType&gt;</ph>要未包裝的傳回值的方法。</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String)">
          <source>This method uses <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType&gt;</ph> to require the immediate caller to have full trust.</source>
          <target state="translated">這個方法會使用<ph id="ph1">&lt;xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType&gt;</ph>需要具有完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String)">
          <source>For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <ph id="ph1">&lt;xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Activator.CreateInstance%2A&gt;</ph> methods.</source>
          <target state="translated">其他可能會叫用方法所擲回的例外狀況的相關資訊，請參閱例外狀況區段<ph id="ph1">&lt;xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType&gt;</ph>和<ph id="ph2">&lt;xref:System.Activator.CreateInstance%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="domain" /&gt;</ph> or <ph id="ph2">&lt;paramref name="typeName" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="domain" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="typeName" /&gt;</ph> 為 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String)">
          <source>No matching public constructor was found.</source>
          <target state="translated">找不到相符的公用建構函式。</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="typename" /&gt;</ph> was not found in <ph id="ph2">&lt;paramref name="assemblyFile" /&gt;</ph>.</source>
          <target state="translated">在 <ph id="ph2">&lt;paramref name="assemblyFile" /&gt;</ph> 中找不到 <ph id="ph1">&lt;paramref name="typename" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="assemblyFile" /&gt;</ph> was not found.</source>
          <target state="translated">找不到 <ph id="ph1">&lt;paramref name="assemblyFile" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String)">
          <source>The caller does not have permission to call this constructor.</source>
          <target state="translated">呼叫端沒有呼叫這個建構函式的權限。</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String)">
          <source>Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</source>
          <target state="translated">無法建立抽象類別的執行個體，或者這個成員曾被晚期繫結機制叫用過。</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String)">
          <source>The constructor, which was invoked through reflection, threw an exception.</source>
          <target state="translated">透過反映叫用並擲回例外狀況的建構函式。</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String)">
          <source>The caller does have the required <ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermission" /&gt;</ph>.</source>
          <target state="translated">呼叫端具有所要求的 <ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermission" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="assemblyFile" /&gt;</ph> is not a valid assembly.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="assemblyFile" /&gt;</ph> 不是有效的組件。</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String)">
          <source>The common language runtime (CLR) version 2.0 or later is currently loaded, and <ph id="ph1">&lt;paramref name="assemblyName" /&gt;</ph> was compiled for a version of the CLR that is later than the currently loaded version.</source>
          <target state="translated">目前載入的是 Common Language Runtime (CLR) 2.0 版或更新版本，且已使用比目前載入之版本更新的 CLR 版本來編譯 <ph id="ph1">&lt;paramref name="assemblyName" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String)">
          <source>Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</source>
          <target state="translated">請注意，.NET Framework 2.0、3.0 和 3.5 版全部都會使用 CLR 2.0 版。</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String)">
          <source>for the ability to call unmanaged code when creating an instance of a delegate.</source>
          <target state="translated">提供建立委派的執行個體時，呼叫 unmanaged 程式碼的能力。</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String)">
          <source>for the ability to search directory paths and read their contents.</source>
          <target state="translated">若要搜尋的目錄路徑，並讀取其內容的功能。</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String)">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph> and <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph></source>
          <target state="translated">列舉型別相關聯：<ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph>和 <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">需要完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">這個成員無法供部分信任或安全性透明程式碼。</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Object[])">
          <source>The name of a file that contains an assembly where the type named <bpt id="p1">&lt;c&gt;</bpt>typeName<ept id="p1">&lt;/c&gt;</ept> is sought.</source>
          <target state="translated">檔案的名稱，該檔案包含要在其中搜尋名稱為 <bpt id="p1">&lt;c&gt;</bpt>typeName<ept id="p1">&lt;/c&gt;</ept> 之類型的組件。</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Object[])">
          <source>The name of the preferred type.</source>
          <target state="translated">慣用類型的名稱。</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Object[])">
          <source>An array of one or more attributes that can participate in activation.</source>
          <target state="translated">一或多個屬性的陣列，此屬性可參與啟動過程。</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Object[])">
          <source>This is typically an array that contains a single <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /&gt;</ph> object that specifies the URL that is required to activate a remote object.</source>
          <target state="translated">陣列通常只會包含一個 <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /&gt;</ph> 物件來指定用以啟動遠端物件的 URL。</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Object[])">
          <source>This parameter is related to client-activated objects.</source>
          <target state="translated">此參數與啟動了用戶端的物件相關。</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Object[])">
          <source>Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</source>
          <target state="translated">用戶端啟動是一項舊的技術，保留目的在提供回溯相容性，不建議用於新的開發。</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Object[])">
          <source>Distributed applications should instead use Windows Communication Foundation.</source>
          <target state="translated">分散式應用程式應該改用 Windows Communication Foundation。</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Object[])">
          <source>Creates an instance of the type whose name is specified, using the named assembly file and default constructor.</source>
          <target state="translated">使用具名組件檔案和預設建構函式，建立已具有指定名稱之類型的執行個體。</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Object[])">
          <source>A handle that must be unwrapped to access the newly created instance.</source>
          <target state="translated">必須解除包裝的控制代碼，用來存取新建立的執行個體。</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Object[])">
          <source>Use the <ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType&gt;</ph> method to unwrap the return value.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType&gt;</ph>要未包裝的傳回值的方法。</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Object[])">
          <source>For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <ph id="ph1">&lt;xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Activator.CreateInstance%2A&gt;</ph> methods.</source>
          <target state="translated">其他可能會叫用方法所擲回的例外狀況的相關資訊，請參閱例外狀況區段<ph id="ph1">&lt;xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType&gt;</ph>和<ph id="ph2">&lt;xref:System.Activator.CreateInstance%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Object[])">
          <source><ph id="ph1">&lt;paramref name="typeName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="typeName" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Object[])">
          <source>No matching public constructor was found.</source>
          <target state="translated">找不到相符的公用建構函式。</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Object[])">
          <source><ph id="ph1">&lt;paramref name="typename" /&gt;</ph> was not found in <ph id="ph2">&lt;paramref name="assemblyFile" /&gt;</ph>.</source>
          <target state="translated">在 <ph id="ph2">&lt;paramref name="assemblyFile" /&gt;</ph> 中找不到 <ph id="ph1">&lt;paramref name="typename" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Object[])">
          <source><ph id="ph1">&lt;paramref name="assemblyFile" /&gt;</ph> was not found.</source>
          <target state="translated">找不到 <ph id="ph1">&lt;paramref name="assemblyFile" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Object[])">
          <source>The caller does not have permission to call this constructor.</source>
          <target state="translated">呼叫端沒有呼叫這個建構函式的權限。</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Object[])">
          <source>Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</source>
          <target state="translated">無法建立抽象類別的執行個體，或者這個成員曾被晚期繫結機制叫用過。</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Object[])">
          <source>The constructor, which was invoked through reflection, threw an exception.</source>
          <target state="translated">透過反映叫用並擲回例外狀況的建構函式。</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Object[])">
          <source><ph id="ph1">&lt;paramref name="activationAttributes" /&gt;</ph> is not an empty array, and the type being created does not derive from <ph id="ph2">&lt;see cref="T:System.MarshalByRefObject" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="activationAttributes" /&gt;</ph> 不是空的陣列，而建立中的類型不是衍生自 <ph id="ph2">&lt;see cref="T:System.MarshalByRefObject" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Object[])">
          <source>The caller does have the required <ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermission" /&gt;</ph>.</source>
          <target state="translated">呼叫端具有所要求的 <ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermission" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Object[])">
          <source><ph id="ph1">&lt;paramref name="assemblyFile" /&gt;</ph> is not a valid assembly.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="assemblyFile" /&gt;</ph> 不是有效的組件。</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Object[])">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Object[])">
          <source>The common language runtime (CLR) version 2.0 or later is currently loaded, and <ph id="ph1">&lt;paramref name="assemblyName" /&gt;</ph> was compiled for a version of the CLR that is later than the currently loaded version.</source>
          <target state="translated">目前載入的是 Common Language Runtime (CLR) 2.0 版或更新版本，且已使用比目前載入之版本更新的 CLR 版本來編譯 <ph id="ph1">&lt;paramref name="assemblyName" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Object[])">
          <source>Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</source>
          <target state="translated">請注意，.NET Framework 2.0、3.0 和 3.5 版全部都會使用 CLR 2.0 版。</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Object[])">
          <source>for the ability to call unmanaged code when creating an instance of a delegate.</source>
          <target state="translated">提供建立委派的執行個體時，呼叫 unmanaged 程式碼的能力。</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Object[])">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Object[])">
          <source>for the ability to search directory paths and read their contents.</source>
          <target state="translated">若要搜尋的目錄路徑，並讀取其內容的功能。</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Object[])">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph> and <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph></source>
          <target state="translated">列舉型別相關聯：<ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph>和 <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Object[])">
          <source>for accessing nonpublic types regardless of their grant set.</source>
          <target state="translated">用來存取非公用型別，不論其授權集。</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Object[])">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>The name of a file that contains an assembly where the type named <bpt id="p1">&lt;c&gt;</bpt>typeName<ept id="p1">&lt;/c&gt;</ept> is sought.</source>
          <target state="translated">檔案的名稱，該檔案包含要在其中搜尋名稱為 <bpt id="p1">&lt;c&gt;</bpt>typeName<ept id="p1">&lt;/c&gt;</ept> 之類型的組件。</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>The name of the preferred type.</source>
          <target state="translated">慣用類型的名稱。</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to specify that the search for <bpt id="p1">&lt;c&gt;</bpt>typeName<ept id="p1">&lt;/c&gt;</ept> is not case-sensitive; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to specify that the search is case-sensitive.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 指定 <bpt id="p1">&lt;c&gt;</bpt>typeName<ept id="p1">&lt;/c&gt;</ept> 的搜尋不區分大小寫，<ph id="ph2">&lt;see langword="false" /&gt;</ph> 指定搜尋區分大小寫。</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>A combination of zero or more bit flags that affect the search for the <bpt id="p1">&lt;c&gt;</bpt>typeName<ept id="p1">&lt;/c&gt;</ept> constructor.</source>
          <target state="translated">零或多個位元旗標的組合，此位元旗標會影響 <bpt id="p1">&lt;c&gt;</bpt>typeName<ept id="p1">&lt;/c&gt;</ept> 建構函式的搜尋。</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>bindingAttr<ept id="p1">&lt;/c&gt;</ept> is zero, a case-sensitive search for public constructors is conducted.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>bindingAttr<ept id="p1">&lt;/c&gt;</ept> 為零，則會針對公用建構函式執行區分大小寫的搜尋。</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>An object that uses <bpt id="p1">&lt;c&gt;</bpt>bindingAttr<ept id="p1">&lt;/c&gt;</ept> and <bpt id="p2">&lt;c&gt;</bpt>args<ept id="p2">&lt;/c&gt;</ept> to seek and identify the <bpt id="p3">&lt;c&gt;</bpt>typeName<ept id="p3">&lt;/c&gt;</ept> constructor.</source>
          <target state="translated">使用 <bpt id="p1">&lt;c&gt;</bpt>bindingAttr<ept id="p1">&lt;/c&gt;</ept> 和 <bpt id="p2">&lt;c&gt;</bpt>args<ept id="p2">&lt;/c&gt;</ept> 來搜尋及識別 <bpt id="p3">&lt;c&gt;</bpt>typeName<ept id="p3">&lt;/c&gt;</ept> 建構函式的物件。</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>binder<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the default binder is used.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>Binder<ept id="p1">&lt;/c&gt;</ept> 為 <ph id="ph1">&lt;see langword="null" /&gt;</ph>，則會使用預設 Binder。</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</source>
          <target state="translated">引數的陣列，此引數在數目、順序和類型上符合要叫用的建構函式的參數。</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> is an empty array or <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the constructor that takes no parameters (the default constructor) is invoked.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> 是空陣列或 <ph id="ph1">&lt;see langword="null" /&gt;</ph>，會叫用未採用參數的建構函式 (預設的建構函式)。</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>Culture-specific information that governs the coercion of <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> to the formal types declared for the <bpt id="p2">&lt;c&gt;</bpt>typeName<ept id="p2">&lt;/c&gt;</ept> constructor.</source>
          <target state="translated">特定文化特性的資訊，其可控制 <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> 到型式類型 (為 <bpt id="p2">&lt;c&gt;</bpt>typeName<ept id="p2">&lt;/c&gt;</ept> 建構函式宣告) 的強制轉型。</target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>culture<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the <ph id="ph2">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph> for the current thread is used.</source>
          <target state="translated">如果「文化特性 (Culture)」<bpt id="p1">&lt;c&gt;</bpt><ept id="p1">&lt;/c&gt;</ept>是 <ph id="ph1">&lt;see langword="null" /&gt;</ph>，則使用目前執行緒的 <ph id="ph2">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>An array of one or more attributes that can participate in activation.</source>
          <target state="translated">一或多個屬性的陣列，此屬性可參與啟動過程。</target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>This is typically an array that contains a single <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /&gt;</ph> object that specifies the URL that is required to activate a remote object.</source>
          <target state="translated">陣列通常只會包含一個 <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /&gt;</ph> 物件來指定用以啟動遠端物件的 URL。</target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>This parameter is related to client-activated objects.</source>
          <target state="translated">此參數與啟動了用戶端的物件相關。</target>       </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</source>
          <target state="translated">用戶端啟動是一項舊的技術，保留目的在提供回溯相容性，不建議用於新的開發。</target>       </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>Distributed applications should instead use Windows Communication Foundation.</source>
          <target state="translated">分散式應用程式應該改用 Windows Communication Foundation。</target>       </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>Creates an instance of the type whose name is specified, using the named assembly file and the constructor that best matches the specified parameters.</source>
          <target state="translated">使用具名組件檔案和最符合指定參數的建構函式，建立已具有指定名稱之類型的執行個體。</target>       </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>A handle that must be unwrapped to access the newly created instance.</source>
          <target state="translated">必須解除包裝的控制代碼，用來存取新建立的執行個體。</target>       </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>Use the <ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType&gt;</ph> method to unwrap the return value.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType&gt;</ph>要未包裝的傳回值的方法。</target>       </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <ph id="ph1">&lt;xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Activator.CreateInstance%2A&gt;</ph> methods.</source>
          <target state="translated">其他可能會叫用方法所擲回的例外狀況的相關資訊，請參閱例外狀況區段<ph id="ph1">&lt;xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType&gt;</ph>和<ph id="ph2">&lt;xref:System.Activator.CreateInstance%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source><ph id="ph1">&lt;paramref name="typeName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="typeName" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>No matching constructor was found.</source>
          <target state="translated">找不到相符的建構函式。</target>       </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source><ph id="ph1">&lt;paramref name="typename" /&gt;</ph> was not found in <ph id="ph2">&lt;paramref name="assemblyFile" /&gt;</ph>.</source>
          <target state="translated">在 <ph id="ph2">&lt;paramref name="assemblyFile" /&gt;</ph> 中找不到 <ph id="ph1">&lt;paramref name="typename" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source><ph id="ph1">&lt;paramref name="assemblyFile" /&gt;</ph> was not found.</source>
          <target state="translated">找不到 <ph id="ph1">&lt;paramref name="assemblyFile" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>The caller does not have permission to call this constructor.</source>
          <target state="translated">呼叫端沒有呼叫這個建構函式的權限。</target>       </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</source>
          <target state="translated">無法建立抽象類別的執行個體，或者這個成員曾被晚期繫結機制叫用過。</target>       </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>The constructor, which was invoked through reflection, threw an exception.</source>
          <target state="translated">透過反映叫用並擲回例外狀況的建構函式。</target>       </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>The caller does not have the required <ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermission" /&gt;</ph>.</source>
          <target state="translated">呼叫端沒有所要求的 <ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermission" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source><ph id="ph1">&lt;paramref name="activationAttributes" /&gt;</ph> is not an empty array, and the type being created does not derive from <ph id="ph2">&lt;see cref="T:System.MarshalByRefObject" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="activationAttributes" /&gt;</ph> 不是空的陣列，而建立中的類型不是衍生自 <ph id="ph2">&lt;see cref="T:System.MarshalByRefObject" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source><ph id="ph1">&lt;paramref name="assemblyFile" /&gt;</ph> is not a valid assembly.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="assemblyFile" /&gt;</ph> 不是有效的組件。</target>       </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>The common language runtime (CLR) version 2.0 or later is currently loaded, and <ph id="ph1">&lt;paramref name="assemblyName" /&gt;</ph> was compiled for a version of the CLR that is later than the currently loaded version.</source>
          <target state="translated">目前載入的是 Common Language Runtime (CLR) 2.0 版或更新版本，且已使用比目前載入之版本更新的 CLR 版本來編譯 <ph id="ph1">&lt;paramref name="assemblyName" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</source>
          <target state="translated">請注意，.NET Framework 2.0、3.0 和 3.5 版全部都會使用 CLR 2.0 版。</target>       </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>for the ability to call unmanaged code when creating an instance of a delegate.</source>
          <target state="translated">提供建立委派的執行個體時，呼叫 unmanaged 程式碼的能力。</target>       </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>for the ability to search directory paths and read their contents.</source>
          <target state="translated">若要搜尋的目錄路徑，並讀取其內容的功能。</target>       </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph> and <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph></source>
          <target state="translated">列舉型別相關聯：<ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph>和 <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>for accessing nonpublic types and members regardless of their grant set.</source>
          <target state="translated">用來存取非公用類型和成員，不論其授權集。</target>       </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>The remote domain where the type named <bpt id="p1">&lt;c&gt;</bpt>typeName<ept id="p1">&lt;/c&gt;</ept> is created.</source>
          <target state="translated">建立名稱為 <bpt id="p1">&lt;c&gt;</bpt>typeName<ept id="p1">&lt;/c&gt;</ept> 之類型的遠端網域。</target>       </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>The name of a file that contains an assembly where the type named <bpt id="p1">&lt;c&gt;</bpt>typeName<ept id="p1">&lt;/c&gt;</ept> is sought.</source>
          <target state="translated">檔案的名稱，該檔案包含要在其中搜尋名稱為 <bpt id="p1">&lt;c&gt;</bpt>typeName<ept id="p1">&lt;/c&gt;</ept> 之類型的組件。</target>       </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>The name of the preferred type.</source>
          <target state="translated">慣用類型的名稱。</target>       </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to specify that the search for <bpt id="p1">&lt;c&gt;</bpt>typeName<ept id="p1">&lt;/c&gt;</ept> is not case-sensitive; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to specify that the search is case-sensitive.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 指定 <bpt id="p1">&lt;c&gt;</bpt>typeName<ept id="p1">&lt;/c&gt;</ept> 的搜尋不區分大小寫，<ph id="ph2">&lt;see langword="false" /&gt;</ph> 指定搜尋區分大小寫。</target>       </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>A combination of zero or more bit flags that affect the search for the <bpt id="p1">&lt;c&gt;</bpt>typeName<ept id="p1">&lt;/c&gt;</ept> constructor.</source>
          <target state="translated">零或多個位元旗標的組合，此位元旗標會影響 <bpt id="p1">&lt;c&gt;</bpt>typeName<ept id="p1">&lt;/c&gt;</ept> 建構函式的搜尋。</target>       </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>bindingAttr<ept id="p1">&lt;/c&gt;</ept> is zero, a case-sensitive search for public constructors is conducted.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>bindingAttr<ept id="p1">&lt;/c&gt;</ept> 為零，則會針對公用建構函式執行區分大小寫的搜尋。</target>       </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>An object that uses <bpt id="p1">&lt;c&gt;</bpt>bindingAttr<ept id="p1">&lt;/c&gt;</ept> and <bpt id="p2">&lt;c&gt;</bpt>args<ept id="p2">&lt;/c&gt;</ept> to seek and identify the <bpt id="p3">&lt;c&gt;</bpt>typeName<ept id="p3">&lt;/c&gt;</ept> constructor.</source>
          <target state="translated">使用 <bpt id="p1">&lt;c&gt;</bpt>bindingAttr<ept id="p1">&lt;/c&gt;</ept> 和 <bpt id="p2">&lt;c&gt;</bpt>args<ept id="p2">&lt;/c&gt;</ept> 來搜尋及識別 <bpt id="p3">&lt;c&gt;</bpt>typeName<ept id="p3">&lt;/c&gt;</ept> 建構函式的物件。</target>       </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>binder<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the default binder is used.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>Binder<ept id="p1">&lt;/c&gt;</ept> 為 <ph id="ph1">&lt;see langword="null" /&gt;</ph>，則會使用預設 Binder。</target>       </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</source>
          <target state="translated">引數的陣列，此引數在數目、順序和類型上符合要叫用的建構函式的參數。</target>       </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> is an empty array or <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the constructor that takes no parameters (the default constructor) is invoked.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> 是空陣列或 <ph id="ph1">&lt;see langword="null" /&gt;</ph>，會叫用未採用參數的建構函式 (預設的建構函式)。</target>       </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>Culture-specific information that governs the coercion of <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> to the formal types declared for the <bpt id="p2">&lt;c&gt;</bpt>typeName<ept id="p2">&lt;/c&gt;</ept> constructor.</source>
          <target state="translated">特定文化特性的資訊，其可控制 <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> 到型式類型 (為 <bpt id="p2">&lt;c&gt;</bpt>typeName<ept id="p2">&lt;/c&gt;</ept> 建構函式宣告) 的強制轉型。</target>       </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>culture<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the <ph id="ph2">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph> for the current thread is used.</source>
          <target state="translated">如果「文化特性 (Culture)」<bpt id="p1">&lt;c&gt;</bpt><ept id="p1">&lt;/c&gt;</ept>是 <ph id="ph1">&lt;see langword="null" /&gt;</ph>，則使用目前執行緒的 <ph id="ph2">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>An array of one or more attributes that can participate in activation.</source>
          <target state="translated">一或多個屬性的陣列，此屬性可參與啟動過程。</target>       </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>This is typically an array that contains a single <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /&gt;</ph> object that specifies the URL that is required to activate a remote object.</source>
          <target state="translated">陣列通常只會包含一個 <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /&gt;</ph> 物件來指定用以啟動遠端物件的 URL。</target>       </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>This parameter is related to client-activated objects.</source>
          <target state="translated">此參數與啟動了用戶端的物件相關。</target>       </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</source>
          <target state="translated">用戶端啟動是一項舊的技術，保留目的在提供回溯相容性，不建議用於新的開發。</target>       </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>Distributed applications should instead use Windows Communication Foundation.</source>
          <target state="translated">分散式應用程式應該改用 Windows Communication Foundation。</target>       </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>Creates an instance of the type whose name is specified in the specified remote domain, using the named assembly file and the constructor that best matches the specified parameters.</source>
          <target state="translated">使用最符合指定參數的具名組件檔案和建構函式，建立已在指定遠端網域中指定名稱之類型的執行個體。</target>       </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>A handle that must be unwrapped to access the newly created instance.</source>
          <target state="translated">必須解除包裝的控制代碼，用來存取新建立的執行個體。</target>       </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>Use <ph id="ph1">&lt;xref:System.Activator.CreateInstanceFrom%2A&gt;</ph> when a host needs to execute code in an application domain that has restricted security permissions.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Activator.CreateInstanceFrom%2A&gt;</ph>主機需要具有限制的安全性權限的應用程式定義域中執行程式碼。</target>       </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>Use the <ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType&gt;</ph> method to unwrap the return value.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType&gt;</ph>要未包裝的傳回值的方法。</target>       </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>For information about other exceptions that can be thrown by invoked methods, see the Exceptions sections of the <ph id="ph1">&lt;xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Activator.CreateInstance%2A&gt;</ph> methods.</source>
          <target state="translated">如需其他可能會叫用方法所擲回的例外狀況資訊，請參閱例外狀況的章節<ph id="ph1">&lt;xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType&gt;</ph>和<ph id="ph2">&lt;xref:System.Activator.CreateInstance%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source><ph id="ph1">&lt;paramref name="domain" /&gt;</ph> or <ph id="ph2">&lt;paramref name="typeName" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="domain" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="typeName" /&gt;</ph> 為 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>No matching constructor was found.</source>
          <target state="translated">找不到相符的建構函式。</target>       </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source><ph id="ph1">&lt;paramref name="typename" /&gt;</ph> was not found in <ph id="ph2">&lt;paramref name="assemblyFile" /&gt;</ph>.</source>
          <target state="translated">在 <ph id="ph2">&lt;paramref name="assemblyFile" /&gt;</ph> 中找不到 <ph id="ph1">&lt;paramref name="typename" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source><ph id="ph1">&lt;paramref name="assemblyFile" /&gt;</ph> was not found.</source>
          <target state="translated">找不到 <ph id="ph1">&lt;paramref name="assemblyFile" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>The caller does not have permission to call this constructor.</source>
          <target state="translated">呼叫端沒有呼叫這個建構函式的權限。</target>       </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</source>
          <target state="translated">無法建立抽象類別的執行個體，或者這個成員曾被晚期繫結機制叫用過。</target>       </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>The constructor, which was invoked through reflection, threw an exception.</source>
          <target state="translated">透過反映叫用並擲回例外狀況的建構函式。</target>       </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>The caller does have the required <ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermission" /&gt;</ph>.</source>
          <target state="translated">呼叫端具有所要求的 <ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermission" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source><ph id="ph1">&lt;paramref name="activationAttributes" /&gt;</ph> is not an empty array, and the type being created does not derive from <ph id="ph2">&lt;see cref="T:System.MarshalByRefObject" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="activationAttributes" /&gt;</ph> 不是空的陣列，而建立中的類型不是衍生自 <ph id="ph2">&lt;see cref="T:System.MarshalByRefObject" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source><ph id="ph1">&lt;paramref name="assemblyFile" /&gt;</ph> is not a valid assembly.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="assemblyFile" /&gt;</ph> 不是有效的組件。</target>       </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source><ph id="ph1">&lt;paramref name="assemblyName" /&gt;</ph> was compiled for a version of the common language runtime that is later than the version that is currently loaded.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="assemblyName" /&gt;</ph> 已針對比目前載入版本更新的 Common Language Runtime 進行編譯。</target>       </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>for supplying evidence.</source>
          <target state="translated">用於提供辨識項。</target>       </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>for the ability to search directory paths and read their contents.</source>
          <target state="translated">若要搜尋的目錄路徑，並讀取其內容的功能。</target>       </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph> and <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph></source>
          <target state="translated">列舉型別相關聯：<ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph>和 <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>for accessing nonpublic types and members regardless of their grant set.</source>
          <target state="translated">用來存取非公用類型和成員，不論其授權集。</target>       </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">需要完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">這個成員無法供部分信任或安全性透明程式碼。</target>       </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>The name of a file that contains an assembly where the type named <bpt id="p1">&lt;c&gt;</bpt>typeName<ept id="p1">&lt;/c&gt;</ept> is sought.</source>
          <target state="translated">檔案的名稱，該檔案包含要在其中搜尋名稱為 <bpt id="p1">&lt;c&gt;</bpt>typeName<ept id="p1">&lt;/c&gt;</ept> 之類型的組件。</target>       </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>The name of the preferred type.</source>
          <target state="translated">慣用類型的名稱。</target>       </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to specify that the search for <bpt id="p1">&lt;c&gt;</bpt>typeName<ept id="p1">&lt;/c&gt;</ept> is not case-sensitive; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to specify that the search is case-sensitive.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 指定 <bpt id="p1">&lt;c&gt;</bpt>typeName<ept id="p1">&lt;/c&gt;</ept> 的搜尋不區分大小寫，<ph id="ph2">&lt;see langword="false" /&gt;</ph> 指定搜尋區分大小寫。</target>       </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>A combination of zero or more bit flags that affect the search for the <bpt id="p1">&lt;c&gt;</bpt>typeName<ept id="p1">&lt;/c&gt;</ept> constructor.</source>
          <target state="translated">零或多個位元旗標的組合，此位元旗標會影響 <bpt id="p1">&lt;c&gt;</bpt>typeName<ept id="p1">&lt;/c&gt;</ept> 建構函式的搜尋。</target>       </trans-unit>
        <trans-unit id="903" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>bindingAttr<ept id="p1">&lt;/c&gt;</ept> is zero, a case-sensitive search for public constructors is conducted.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>bindingAttr<ept id="p1">&lt;/c&gt;</ept> 為零，則會針對公用建構函式執行區分大小寫的搜尋。</target>       </trans-unit>
        <trans-unit id="904" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>An object that uses <bpt id="p1">&lt;c&gt;</bpt>bindingAttr<ept id="p1">&lt;/c&gt;</ept> and <bpt id="p2">&lt;c&gt;</bpt>args<ept id="p2">&lt;/c&gt;</ept> to seek and identify the <bpt id="p3">&lt;c&gt;</bpt>typeName<ept id="p3">&lt;/c&gt;</ept> constructor.</source>
          <target state="translated">使用 <bpt id="p1">&lt;c&gt;</bpt>bindingAttr<ept id="p1">&lt;/c&gt;</ept> 和 <bpt id="p2">&lt;c&gt;</bpt>args<ept id="p2">&lt;/c&gt;</ept> 來搜尋及識別 <bpt id="p3">&lt;c&gt;</bpt>typeName<ept id="p3">&lt;/c&gt;</ept> 建構函式的物件。</target>       </trans-unit>
        <trans-unit id="905" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>binder<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the default binder is used.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>Binder<ept id="p1">&lt;/c&gt;</ept> 為 <ph id="ph1">&lt;see langword="null" /&gt;</ph>，則會使用預設 Binder。</target>       </trans-unit>
        <trans-unit id="906" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</source>
          <target state="translated">引數的陣列，此引數在數目、順序和類型上符合要叫用的建構函式的參數。</target>       </trans-unit>
        <trans-unit id="907" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> is an empty array or <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the constructor that takes no parameters (the default constructor) is invoked.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> 是空陣列或 <ph id="ph1">&lt;see langword="null" /&gt;</ph>，會叫用未採用參數的建構函式 (預設的建構函式)。</target>       </trans-unit>
        <trans-unit id="908" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>Culture-specific information that governs the coercion of <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> to the formal types declared for the <bpt id="p2">&lt;c&gt;</bpt>typeName<ept id="p2">&lt;/c&gt;</ept> constructor.</source>
          <target state="translated">特定文化特性的資訊，其可控制 <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> 到型式類型 (為 <bpt id="p2">&lt;c&gt;</bpt>typeName<ept id="p2">&lt;/c&gt;</ept> 建構函式宣告) 的強制轉型。</target>       </trans-unit>
        <trans-unit id="909" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>culture<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the <ph id="ph2">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph> for the current thread is used.</source>
          <target state="translated">如果「文化特性 (Culture)」<bpt id="p1">&lt;c&gt;</bpt><ept id="p1">&lt;/c&gt;</ept>是 <ph id="ph1">&lt;see langword="null" /&gt;</ph>，則使用目前執行緒的 <ph id="ph2">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="910" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>An array of one or more attributes that can participate in activation.</source>
          <target state="translated">一或多個屬性的陣列，此屬性可參與啟動過程。</target>       </trans-unit>
        <trans-unit id="911" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>This is typically an array that contains a single <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /&gt;</ph> object that specifies the URL that is required to activate a remote object.</source>
          <target state="translated">陣列通常只會包含一個 <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /&gt;</ph> 物件來指定用以啟動遠端物件的 URL。</target>       </trans-unit>
        <trans-unit id="912" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>This parameter is related to client-activated objects.</source>
          <target state="translated">此參數與啟動了用戶端的物件相關。</target>       </trans-unit>
        <trans-unit id="913" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</source>
          <target state="translated">用戶端啟動是一項舊的技術，保留目的在提供回溯相容性，不建議用於新的開發。</target>       </trans-unit>
        <trans-unit id="914" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>Distributed applications should instead use Windows Communication Foundation.</source>
          <target state="translated">分散式應用程式應該改用 Windows Communication Foundation。</target>       </trans-unit>
        <trans-unit id="915" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>Information used to make security policy decisions and grant code permissions.</source>
          <target state="translated">用來執行安全性原則決策和授權程式碼使用權限的資訊。</target>       </trans-unit>
        <trans-unit id="916" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>Creates an instance of the type whose name is specified, using the named assembly file and the constructor that best matches the specified parameters.</source>
          <target state="translated">使用具名組件檔案和最符合指定參數的建構函式，建立已具有指定名稱之類型的執行個體。</target>       </trans-unit>
        <trans-unit id="917" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>A handle that must be unwrapped to access the newly created instance.</source>
          <target state="translated">必須解除包裝的控制代碼，用來存取新建立的執行個體。</target>       </trans-unit>
        <trans-unit id="918" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>Use the <ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType&gt;</ph> method to unwrap the return value.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType&gt;</ph>要未包裝的傳回值的方法。</target>       </trans-unit>
        <trans-unit id="919" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <ph id="ph1">&lt;xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Activator.CreateInstance%2A&gt;</ph> methods.</source>
          <target state="translated">其他可能會叫用方法所擲回的例外狀況的相關資訊，請參閱例外狀況區段<ph id="ph1">&lt;xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType&gt;</ph>和<ph id="ph2">&lt;xref:System.Activator.CreateInstance%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="920" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source><ph id="ph1">&lt;paramref name="typeName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="typeName" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="921" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>No matching constructor was found.</source>
          <target state="translated">找不到相符的建構函式。</target>       </trans-unit>
        <trans-unit id="922" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source><ph id="ph1">&lt;paramref name="typename" /&gt;</ph> was not found in <ph id="ph2">&lt;paramref name="assemblyFile" /&gt;</ph>.</source>
          <target state="translated">在 <ph id="ph2">&lt;paramref name="assemblyFile" /&gt;</ph> 中找不到 <ph id="ph1">&lt;paramref name="typename" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="923" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source><ph id="ph1">&lt;paramref name="assemblyFile" /&gt;</ph> was not found.</source>
          <target state="translated">找不到 <ph id="ph1">&lt;paramref name="assemblyFile" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="924" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>The caller does not have permission to call this constructor.</source>
          <target state="translated">呼叫端沒有呼叫這個建構函式的權限。</target>       </trans-unit>
        <trans-unit id="925" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</source>
          <target state="translated">無法建立抽象類別的執行個體，或者這個成員曾被晚期繫結機制叫用過。</target>       </trans-unit>
        <trans-unit id="926" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>The constructor, which was invoked through reflection, threw an exception.</source>
          <target state="translated">透過反映叫用並擲回例外狀況的建構函式。</target>       </trans-unit>
        <trans-unit id="927" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>The caller does not have the required <ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermission" /&gt;</ph>.</source>
          <target state="translated">呼叫端沒有所要求的 <ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermission" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="928" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source><ph id="ph1">&lt;paramref name="activationAttributes" /&gt;</ph> is not an empty array, and the type being created does not derive from <ph id="ph2">&lt;see cref="T:System.MarshalByRefObject" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="activationAttributes" /&gt;</ph> 不是空的陣列，而建立中的類型不是衍生自 <ph id="ph2">&lt;see cref="T:System.MarshalByRefObject" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="929" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source><ph id="ph1">&lt;paramref name="assemblyFile" /&gt;</ph> is not a valid assembly.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="assemblyFile" /&gt;</ph> 不是有效的組件。</target>       </trans-unit>
        <trans-unit id="930" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="931" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>The common language runtime (CLR) version 2.0 or later is currently loaded, and <ph id="ph1">&lt;paramref name="assemblyName" /&gt;</ph> was compiled for a version of the CLR that is later than the currently loaded version.</source>
          <target state="translated">目前載入的是 Common Language Runtime (CLR) 2.0 版或更新版本，且已使用比目前載入之版本更新的 CLR 版本來編譯 <ph id="ph1">&lt;paramref name="assemblyName" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="932" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</source>
          <target state="translated">請注意，.NET Framework 2.0、3.0 和 3.5 版全部都會使用 CLR 2.0 版。</target>       </trans-unit>
        <trans-unit id="933" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>for the ability to call unmanaged code when creating an instance of a delegate.</source>
          <target state="translated">提供建立委派的執行個體時，呼叫 unmanaged 程式碼的能力。</target>       </trans-unit>
        <trans-unit id="934" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="935" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>for the ability to search directory paths and read their contents.</source>
          <target state="translated">若要搜尋的目錄路徑，並讀取其內容的功能。</target>       </trans-unit>
        <trans-unit id="936" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph> and <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph></source>
          <target state="translated">列舉型別相關聯：<ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph>和 <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="937" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>for accessing nonpublic types and members regardless of their grant set.</source>
          <target state="translated">用來存取非公用類型和成員，不論其授權集。</target>       </trans-unit>
        <trans-unit id="938" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="939" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>The remote domain where the type named <bpt id="p1">&lt;c&gt;</bpt>typeName<ept id="p1">&lt;/c&gt;</ept> is created.</source>
          <target state="translated">建立名稱為 <bpt id="p1">&lt;c&gt;</bpt>typeName<ept id="p1">&lt;/c&gt;</ept> 之類型的遠端網域。</target>       </trans-unit>
        <trans-unit id="940" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>The name of a file that contains an assembly where the type named <bpt id="p1">&lt;c&gt;</bpt>typeName<ept id="p1">&lt;/c&gt;</ept> is sought.</source>
          <target state="translated">檔案的名稱，該檔案包含要在其中搜尋名稱為 <bpt id="p1">&lt;c&gt;</bpt>typeName<ept id="p1">&lt;/c&gt;</ept> 之類型的組件。</target>       </trans-unit>
        <trans-unit id="941" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>The name of the preferred type.</source>
          <target state="translated">慣用類型的名稱。</target>       </trans-unit>
        <trans-unit id="942" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to specify that the search for <bpt id="p1">&lt;c&gt;</bpt>typeName<ept id="p1">&lt;/c&gt;</ept> is not case-sensitive; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to specify that the search is case-sensitive.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 指定 <bpt id="p1">&lt;c&gt;</bpt>typeName<ept id="p1">&lt;/c&gt;</ept> 的搜尋不區分大小寫，<ph id="ph2">&lt;see langword="false" /&gt;</ph> 指定搜尋區分大小寫。</target>       </trans-unit>
        <trans-unit id="943" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>A combination of zero or more bit flags that affect the search for the <bpt id="p1">&lt;c&gt;</bpt>typeName<ept id="p1">&lt;/c&gt;</ept> constructor.</source>
          <target state="translated">零或多個位元旗標的組合，此位元旗標會影響 <bpt id="p1">&lt;c&gt;</bpt>typeName<ept id="p1">&lt;/c&gt;</ept> 建構函式的搜尋。</target>       </trans-unit>
        <trans-unit id="944" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>bindingAttr<ept id="p1">&lt;/c&gt;</ept> is zero, a case-sensitive search for public constructors is conducted.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>bindingAttr<ept id="p1">&lt;/c&gt;</ept> 為零，則會針對公用建構函式執行區分大小寫的搜尋。</target>       </trans-unit>
        <trans-unit id="945" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>An object that uses <bpt id="p1">&lt;c&gt;</bpt>bindingAttr<ept id="p1">&lt;/c&gt;</ept> and <bpt id="p2">&lt;c&gt;</bpt>args<ept id="p2">&lt;/c&gt;</ept> to seek and identify the <bpt id="p3">&lt;c&gt;</bpt>typeName<ept id="p3">&lt;/c&gt;</ept> constructor.</source>
          <target state="translated">使用 <bpt id="p1">&lt;c&gt;</bpt>bindingAttr<ept id="p1">&lt;/c&gt;</ept> 和 <bpt id="p2">&lt;c&gt;</bpt>args<ept id="p2">&lt;/c&gt;</ept> 來搜尋及識別 <bpt id="p3">&lt;c&gt;</bpt>typeName<ept id="p3">&lt;/c&gt;</ept> 建構函式的物件。</target>       </trans-unit>
        <trans-unit id="946" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>binder<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the default binder is used.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>Binder<ept id="p1">&lt;/c&gt;</ept> 為 <ph id="ph1">&lt;see langword="null" /&gt;</ph>，則會使用預設 Binder。</target>       </trans-unit>
        <trans-unit id="947" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</source>
          <target state="translated">引數的陣列，此引數在數目、順序和類型上符合要叫用的建構函式的參數。</target>       </trans-unit>
        <trans-unit id="948" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> is an empty array or <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the constructor that takes no parameters (the default constructor) is invoked.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> 是空陣列或 <ph id="ph1">&lt;see langword="null" /&gt;</ph>，會叫用未採用參數的建構函式 (預設的建構函式)。</target>       </trans-unit>
        <trans-unit id="949" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>Culture-specific information that governs the coercion of <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> to the formal types declared for the <bpt id="p2">&lt;c&gt;</bpt>typeName<ept id="p2">&lt;/c&gt;</ept> constructor.</source>
          <target state="translated">特定文化特性的資訊，其可控制 <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> 到型式類型 (為 <bpt id="p2">&lt;c&gt;</bpt>typeName<ept id="p2">&lt;/c&gt;</ept> 建構函式宣告) 的強制轉型。</target>       </trans-unit>
        <trans-unit id="950" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>culture<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the <ph id="ph2">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph> for the current thread is used.</source>
          <target state="translated">如果「文化特性 (Culture)」<bpt id="p1">&lt;c&gt;</bpt><ept id="p1">&lt;/c&gt;</ept>是 <ph id="ph1">&lt;see langword="null" /&gt;</ph>，則使用目前執行緒的 <ph id="ph2">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="951" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>An array of one or more attributes that can participate in activation.</source>
          <target state="translated">一或多個屬性的陣列，此屬性可參與啟動過程。</target>       </trans-unit>
        <trans-unit id="952" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>This is typically an array that contains a single <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /&gt;</ph> object that specifies the URL that is required to activate a remote object.</source>
          <target state="translated">陣列通常只會包含一個 <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /&gt;</ph> 物件來指定用以啟動遠端物件的 URL。</target>       </trans-unit>
        <trans-unit id="953" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>This parameter is related to client-activated objects.</source>
          <target state="translated">此參數與啟動了用戶端的物件相關。</target>       </trans-unit>
        <trans-unit id="954" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</source>
          <target state="translated">用戶端啟動是一項舊的技術，保留目的在提供回溯相容性，不建議用於新的開發。</target>       </trans-unit>
        <trans-unit id="955" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>Distributed applications should instead use Windows Communication Foundation.</source>
          <target state="translated">分散式應用程式應該改用 Windows Communication Foundation。</target>       </trans-unit>
        <trans-unit id="956" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>Information used to make security policy decisions and grant code permissions.</source>
          <target state="translated">用來執行安全性原則決策和授權程式碼使用權限的資訊。</target>       </trans-unit>
        <trans-unit id="957" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>Creates an instance of the type whose name is specified in the specified remote domain, using the named assembly file and the constructor that best matches the specified parameters.</source>
          <target state="translated">使用最符合指定參數的具名組件檔案和建構函式，建立已在指定遠端網域中指定名稱之類型的執行個體。</target>       </trans-unit>
        <trans-unit id="958" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>A handle that must be unwrapped to access the newly created instance.</source>
          <target state="translated">必須解除包裝的控制代碼，用來存取新建立的執行個體。</target>       </trans-unit>
        <trans-unit id="959" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>Use <ph id="ph1">&lt;xref:System.Activator.CreateInstanceFrom%2A&gt;</ph> when a host needs to execute code in an application domain that has restricted security permissions.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Activator.CreateInstanceFrom%2A&gt;</ph>主機需要具有限制的安全性權限的應用程式定義域中執行程式碼。</target>       </trans-unit>
        <trans-unit id="960" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>Use the <ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType&gt;</ph> method to unwrap the return value.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType&gt;</ph>要未包裝的傳回值的方法。</target>       </trans-unit>
        <trans-unit id="961" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>This method uses <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType&gt;</ph> to require the immediate caller to have full trust.</source>
          <target state="translated">這個方法會使用<ph id="ph1">&lt;xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType&gt;</ph>需要具有完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="962" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <ph id="ph1">&lt;xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Activator.CreateInstance%2A&gt;</ph> methods.</source>
          <target state="translated">其他可能會叫用方法所擲回的例外狀況的相關資訊，請參閱例外狀況區段<ph id="ph1">&lt;xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType&gt;</ph>和<ph id="ph2">&lt;xref:System.Activator.CreateInstance%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="963" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source><ph id="ph1">&lt;paramref name="domain" /&gt;</ph> or <ph id="ph2">&lt;paramref name="typeName" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="domain" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="typeName" /&gt;</ph> 為 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="964" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>No matching constructor was found.</source>
          <target state="translated">找不到相符的建構函式。</target>       </trans-unit>
        <trans-unit id="965" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source><ph id="ph1">&lt;paramref name="typename" /&gt;</ph> was not found in <ph id="ph2">&lt;paramref name="assemblyFile" /&gt;</ph>.</source>
          <target state="translated">在 <ph id="ph2">&lt;paramref name="assemblyFile" /&gt;</ph> 中找不到 <ph id="ph1">&lt;paramref name="typename" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="966" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source><ph id="ph1">&lt;paramref name="assemblyFile" /&gt;</ph> was not found.</source>
          <target state="translated">找不到 <ph id="ph1">&lt;paramref name="assemblyFile" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="967" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>The caller does not have permission to call this constructor.</source>
          <target state="translated">呼叫端沒有呼叫這個建構函式的權限。</target>       </trans-unit>
        <trans-unit id="968" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</source>
          <target state="translated">無法建立抽象類別的執行個體，或者這個成員曾被晚期繫結機制叫用過。</target>       </trans-unit>
        <trans-unit id="969" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>The constructor, which was invoked through reflection, threw an exception.</source>
          <target state="translated">透過反映叫用並擲回例外狀況的建構函式。</target>       </trans-unit>
        <trans-unit id="970" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>The caller does have the required <ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermission" /&gt;</ph>.</source>
          <target state="translated">呼叫端具有所要求的 <ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermission" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="971" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source><ph id="ph1">&lt;paramref name="activationAttributes" /&gt;</ph> is not an empty array, and the type being created does not derive from <ph id="ph2">&lt;see cref="T:System.MarshalByRefObject" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="activationAttributes" /&gt;</ph> 不是空的陣列，而建立中的類型不是衍生自 <ph id="ph2">&lt;see cref="T:System.MarshalByRefObject" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="972" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source><ph id="ph1">&lt;paramref name="assemblyFile" /&gt;</ph> is not a valid assembly.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="assemblyFile" /&gt;</ph> 不是有效的組件。</target>       </trans-unit>
        <trans-unit id="973" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="974" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>The common language runtime (CLR) version 2.0 or later is currently loaded, and <ph id="ph1">&lt;paramref name="assemblyName" /&gt;</ph> was compiled for a version of the CLR that is later than the currently loaded version.</source>
          <target state="translated">目前載入的是 Common Language Runtime (CLR) 2.0 版或更新版本，且已使用比目前載入之版本更新的 CLR 版本來編譯 <ph id="ph1">&lt;paramref name="assemblyName" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="975" translate="yes" xml:space="preserve" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</source>
          <target state="translated">請注意，.NET Framework 2.0、3.0 和 3.5 版全部都會使用 CLR 2.0 版。</target>       </trans-unit>
        <trans-unit id="976" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>for supplying evidence.</source>
          <target state="translated">用於提供辨識項。</target>       </trans-unit>
        <trans-unit id="977" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="978" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>for the ability to search directory paths and read their contents.</source>
          <target state="translated">若要搜尋的目錄路徑，並讀取其內容的功能。</target>       </trans-unit>
        <trans-unit id="979" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph> and <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph></source>
          <target state="translated">列舉型別相關聯：<ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph>和 <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="980" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>for accessing nonpublic types and members regardless of their grant set.</source>
          <target state="translated">用來存取非公用類型和成員，不論其授權集。</target>       </trans-unit>
        <trans-unit id="981" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="982" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">需要完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="983" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">這個成員無法供部分信任或安全性透明程式碼。</target>       </trans-unit>
        <trans-unit id="984" translate="yes" xml:space="preserve" uid="T:System.Activator">
          <source>Creates a proxy for a well-known object or XML Web service.</source>
          <target state="translated">為已知物件或 XML Web Service 建立 Proxy。</target>       </trans-unit>
        <trans-unit id="985" translate="yes" xml:space="preserve" uid="M:System.Activator.GetObject(System.Type,System.String)">
          <source>The type of the well-known object to which you want to connect.</source>
          <target state="translated">您要連接的已知物件類型。</target>       </trans-unit>
        <trans-unit id="986" translate="yes" xml:space="preserve" uid="M:System.Activator.GetObject(System.Type,System.String)">
          <source>The URL of the well-known object.</source>
          <target state="translated">已知物件的 URL。</target>       </trans-unit>
        <trans-unit id="987" translate="yes" xml:space="preserve" uid="M:System.Activator.GetObject(System.Type,System.String)">
          <source>Creates a proxy for the well-known object indicated by the specified type and URL.</source>
          <target state="translated">為指定類型和 URL 所指示的已知物件建立 Proxy。</target>       </trans-unit>
        <trans-unit id="988" translate="yes" xml:space="preserve" uid="M:System.Activator.GetObject(System.Type,System.String)">
          <source>A proxy that points to an endpoint served by the requested well-known object.</source>
          <target state="translated">Proxy，指向要求的已知物件所服務的端點。</target>       </trans-unit>
        <trans-unit id="989" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.GetObject(System.Type,System.String)">
          <source>Call the proxy to send messages to the remote object.</source>
          <target state="translated">呼叫以將訊息傳送至遠端物件的 proxy。</target>       </trans-unit>
        <trans-unit id="990" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.GetObject(System.Type,System.String)">
          <source>No messages are sent over the network until a method is called on the proxy.</source>
          <target state="translated">在 proxy 上呼叫方法之前，會透過網路不傳送任何訊息。</target>       </trans-unit>
        <trans-unit id="991" translate="yes" xml:space="preserve" uid="M:System.Activator.GetObject(System.Type,System.String)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> or <ph id="ph2">&lt;paramref name="url" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="url" /&gt;</ph> 為 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="992" translate="yes" xml:space="preserve" uid="M:System.Activator.GetObject(System.Type,System.String)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is not marshaled by reference and is not an interface.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> 不是以傳址方式封送處理，也不是介面。</target>       </trans-unit>
        <trans-unit id="993" translate="yes" xml:space="preserve" uid="M:System.Activator.GetObject(System.Type,System.String)">
          <source>This member was invoked with a late-binding mechanism.</source>
          <target state="translated">這個成員曾被晚期繫結機制叫用過。</target>       </trans-unit>
        <trans-unit id="994" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.GetObject(System.Type,System.String)">
          <source>Requires full trust for the immediate caller.</source>
          <target state="translated">需要完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="995" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.GetObject(System.Type,System.String)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">這個成員無法供部分信任或安全性透明程式碼。</target>       </trans-unit>
        <trans-unit id="996" translate="yes" xml:space="preserve" uid="M:System.Activator.GetObject(System.Type,System.String,System.Object)">
          <source>The type of the well-known object to which you want to connect.</source>
          <target state="translated">您要連接的已知物件類型。</target>       </trans-unit>
        <trans-unit id="997" translate="yes" xml:space="preserve" uid="M:System.Activator.GetObject(System.Type,System.String,System.Object)">
          <source>The URL of the well-known object.</source>
          <target state="translated">已知物件的 URL。</target>       </trans-unit>
        <trans-unit id="998" translate="yes" xml:space="preserve" uid="M:System.Activator.GetObject(System.Type,System.String,System.Object)">
          <source>Channel-specific data or <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">通道特定資料或 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="999" translate="yes" xml:space="preserve" uid="M:System.Activator.GetObject(System.Type,System.String,System.Object)">
          <source>Creates a proxy for the well-known object indicated by the specified type, URL, and channel data.</source>
          <target state="translated">為指定類型、URL 和通道資料所指示的已知物件建立 Proxy。</target>       </trans-unit>
        <trans-unit id="1000" translate="yes" xml:space="preserve" uid="M:System.Activator.GetObject(System.Type,System.String,System.Object)">
          <source>A proxy that points to an endpoint served by the requested well-known object.</source>
          <target state="translated">Proxy，指向要求的已知物件所服務的端點。</target>       </trans-unit>
        <trans-unit id="1001" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.GetObject(System.Type,System.String,System.Object)">
          <source>Call the proxy to send messages to the remote object.</source>
          <target state="translated">呼叫以將訊息傳送至遠端物件的 proxy。</target>       </trans-unit>
        <trans-unit id="1002" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.GetObject(System.Type,System.String,System.Object)">
          <source>No messages are sent over the network until a method is called on the proxy.</source>
          <target state="translated">在 proxy 上呼叫方法之前，會透過網路不傳送任何訊息。</target>       </trans-unit>
        <trans-unit id="1003" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.GetObject(System.Type,System.String,System.Object)">
          <source>The <ph id="ph1">`state`</ph> parameter communicates information to the channel, and is passed to the <ph id="ph2">&lt;xref:System.Runtime.Remoting.Channels.IChannelSender.CreateMessageSink%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">`state`</ph>參數通訊通道的資訊，並為傳遞至<ph id="ph2">&lt;xref:System.Runtime.Remoting.Channels.IChannelSender.CreateMessageSink%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="1004" translate="yes" xml:space="preserve" uid="M:System.Activator.GetObject(System.Type,System.String,System.Object)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> or <ph id="ph2">&lt;paramref name="url" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="url" /&gt;</ph> 為 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1005" translate="yes" xml:space="preserve" uid="M:System.Activator.GetObject(System.Type,System.String,System.Object)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is not marshaled by reference and is not an interface.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> 不是以傳址方式封送處理，也不是介面。</target>       </trans-unit>
        <trans-unit id="1006" translate="yes" xml:space="preserve" uid="M:System.Activator.GetObject(System.Type,System.String,System.Object)">
          <source>This member was invoked with a late-binding mechanism.</source>
          <target state="translated">這個成員曾被晚期繫結機制叫用過。</target>       </trans-unit>
        <trans-unit id="1007" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.GetObject(System.Type,System.String,System.Object)">
          <source>Requires full trust for the immediate caller.</source>
          <target state="translated">需要完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="1008" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.GetObject(System.Type,System.String,System.Object)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">這個成員無法供部分信任或安全性透明程式碼。</target>       </trans-unit>
        <trans-unit id="1009" translate="yes" xml:space="preserve" uid="M:System.Activator.System#Runtime#InteropServices#_Activator#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <source>Reserved for future use.</source>
          <target state="translated">保留供未來使用。</target>       </trans-unit>
        <trans-unit id="1010" translate="yes" xml:space="preserve" uid="M:System.Activator.System#Runtime#InteropServices#_Activator#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <source>Must be IID_NULL.</source>
          <target state="translated">必須是 IID_NULL。</target>       </trans-unit>
        <trans-unit id="1011" translate="yes" xml:space="preserve" uid="M:System.Activator.System#Runtime#InteropServices#_Activator#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <source>The passed-in array of names to map.</source>
          <target state="translated">要對應的傳入名稱陣列。</target>       </trans-unit>
        <trans-unit id="1012" translate="yes" xml:space="preserve" uid="M:System.Activator.System#Runtime#InteropServices#_Activator#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <source>The count of the names to map.</source>
          <target state="translated">要對應的名稱計數。</target>       </trans-unit>
        <trans-unit id="1013" translate="yes" xml:space="preserve" uid="M:System.Activator.System#Runtime#InteropServices#_Activator#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <source>The locale context in which to interpret the names.</source>
          <target state="translated">用於解譯名稱的地區設定內容。</target>       </trans-unit>
        <trans-unit id="1014" translate="yes" xml:space="preserve" uid="M:System.Activator.System#Runtime#InteropServices#_Activator#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <source>The caller-allocated array that receives the IDs corresponding to the names.</source>
          <target state="translated">呼叫端配置的陣列，可接收對應於名稱的 ID。</target>       </trans-unit>
        <trans-unit id="1015" translate="yes" xml:space="preserve" uid="M:System.Activator.System#Runtime#InteropServices#_Activator#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <source>Maps a set of names to a corresponding set of dispatch identifiers.</source>
          <target state="translated">將一組名稱對應至一組對應的分派識別項 (Dispatch Identifier)。</target>       </trans-unit>
        <trans-unit id="1016" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.System#Runtime#InteropServices#_Activator#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <source>This method is used to access managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">此方法用來存取 managed 的類別，從 unmanaged 程式碼，而且不應該從 managed 程式碼呼叫。</target>       </trans-unit>
        <trans-unit id="1017" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.System#Runtime#InteropServices#_Activator#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <source>For more information about <ph id="ph1">`IDispatch::GetIDsOfNames`</ph>, see the MSDN Library.</source>
          <target state="translated">如需有關<ph id="ph1">`IDispatch::GetIDsOfNames`</ph>，請參閱 MSDN Library。</target>       </trans-unit>
        <trans-unit id="1018" translate="yes" xml:space="preserve" uid="M:System.Activator.System#Runtime#InteropServices#_Activator#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <source>Late-bound access using the COM <bpt id="p1">&lt;c&gt;</bpt>IDispatch<ept id="p1">&lt;/c&gt;</ept> interface is not supported.</source>
          <target state="translated">不支援使用 COM <bpt id="p1">&lt;c&gt;</bpt>IDispatch<ept id="p1">&lt;/c&gt;</ept> 介面進行晚期繫結的存取。</target>       </trans-unit>
        <trans-unit id="1019" translate="yes" xml:space="preserve" uid="M:System.Activator.System#Runtime#InteropServices#_Activator#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
          <source>The type information to return.</source>
          <target state="translated">要傳回的類型資訊。</target>       </trans-unit>
        <trans-unit id="1020" translate="yes" xml:space="preserve" uid="M:System.Activator.System#Runtime#InteropServices#_Activator#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
          <source>The locale identifier for the type information.</source>
          <target state="translated">類型資訊的地區設定識別項。</target>       </trans-unit>
        <trans-unit id="1021" translate="yes" xml:space="preserve" uid="M:System.Activator.System#Runtime#InteropServices#_Activator#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
          <source>An object that receives a pointer to the requested type information object.</source>
          <target state="translated">物件，會接收指向所要求之類型資訊物件的指標。</target>       </trans-unit>
        <trans-unit id="1022" translate="yes" xml:space="preserve" uid="M:System.Activator.System#Runtime#InteropServices#_Activator#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
          <source>Retrieves the type information for an object, which can then be used to get the type information for an interface.</source>
          <target state="translated">擷取物件的類型資訊，可以用來取得介面的類型資訊。</target>       </trans-unit>
        <trans-unit id="1023" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.System#Runtime#InteropServices#_Activator#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
          <source>This method is used to access managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">此方法用來存取 managed 的類別，從 unmanaged 程式碼，而且不應該從 managed 程式碼呼叫。</target>       </trans-unit>
        <trans-unit id="1024" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.System#Runtime#InteropServices#_Activator#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
          <source>For more information about <ph id="ph1">`IDispatch::GetTypeInfo`</ph>, see the MSDN Library.</source>
          <target state="translated">如需有關<ph id="ph1">`IDispatch::GetTypeInfo`</ph>，請參閱 MSDN Library。</target>       </trans-unit>
        <trans-unit id="1025" translate="yes" xml:space="preserve" uid="M:System.Activator.System#Runtime#InteropServices#_Activator#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
          <source>Late-bound access using the COM <bpt id="p1">&lt;c&gt;</bpt>IDispatch<ept id="p1">&lt;/c&gt;</ept> interface is not supported.</source>
          <target state="translated">不支援使用 COM <bpt id="p1">&lt;c&gt;</bpt>IDispatch<ept id="p1">&lt;/c&gt;</ept> 介面進行晚期繫結的存取。</target>       </trans-unit>
        <trans-unit id="1026" translate="yes" xml:space="preserve" uid="M:System.Activator.System#Runtime#InteropServices#_Activator#GetTypeInfoCount(System.UInt32@)">
          <source>When this method returns, contains a pointer to a location that receives the number of type information interfaces provided by the object.</source>
          <target state="translated">當這個方法傳回時，包含接收物件提供的類型資訊介面數目的位置指標。</target>       </trans-unit>
        <trans-unit id="1027" translate="yes" xml:space="preserve" uid="M:System.Activator.System#Runtime#InteropServices#_Activator#GetTypeInfoCount(System.UInt32@)">
          <source>This parameter is passed uninitialized.</source>
          <target state="translated">這個參數會以未初始化的狀態傳遞。</target>       </trans-unit>
        <trans-unit id="1028" translate="yes" xml:space="preserve" uid="M:System.Activator.System#Runtime#InteropServices#_Activator#GetTypeInfoCount(System.UInt32@)">
          <source>Retrieves the number of type information interfaces that an object provides (either 0 or 1).</source>
          <target state="translated">擷取物件提供的類型資訊介面數目 (0 或 1)。</target>       </trans-unit>
        <trans-unit id="1029" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.System#Runtime#InteropServices#_Activator#GetTypeInfoCount(System.UInt32@)">
          <source>This method is used to access managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">此方法用來存取 managed 的類別，從 unmanaged 程式碼，而且不應該從 managed 程式碼呼叫。</target>       </trans-unit>
        <trans-unit id="1030" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.System#Runtime#InteropServices#_Activator#GetTypeInfoCount(System.UInt32@)">
          <source>For more information about <ph id="ph1">`IDispatch::GetTypeInfoCount`</ph>, see the MSDN Library.</source>
          <target state="translated">如需有關<ph id="ph1">`IDispatch::GetTypeInfoCount`</ph>，請參閱 MSDN Library。</target>       </trans-unit>
        <trans-unit id="1031" translate="yes" xml:space="preserve" uid="M:System.Activator.System#Runtime#InteropServices#_Activator#GetTypeInfoCount(System.UInt32@)">
          <source>Late-bound access using the COM <bpt id="p1">&lt;c&gt;</bpt>IDispatch<ept id="p1">&lt;/c&gt;</ept> interface is not supported.</source>
          <target state="translated">不支援使用 COM <bpt id="p1">&lt;c&gt;</bpt>IDispatch<ept id="p1">&lt;/c&gt;</ept> 介面進行晚期繫結的存取。</target>       </trans-unit>
        <trans-unit id="1032" translate="yes" xml:space="preserve" uid="M:System.Activator.System#Runtime#InteropServices#_Activator#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <source>A dispatch identifier that identifies the member.</source>
          <target state="translated">用來識別成員的分派識別項。</target>       </trans-unit>
        <trans-unit id="1033" translate="yes" xml:space="preserve" uid="M:System.Activator.System#Runtime#InteropServices#_Activator#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <source>Reserved for future use.</source>
          <target state="translated">保留供未來使用。</target>       </trans-unit>
        <trans-unit id="1034" translate="yes" xml:space="preserve" uid="M:System.Activator.System#Runtime#InteropServices#_Activator#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <source>Must be IID_NULL.</source>
          <target state="translated">必須是 IID_NULL。</target>       </trans-unit>
        <trans-unit id="1035" translate="yes" xml:space="preserve" uid="M:System.Activator.System#Runtime#InteropServices#_Activator#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <source>The locale context in which to interpret arguments.</source>
          <target state="translated">地區設定內容，用於解譯引數。</target>       </trans-unit>
        <trans-unit id="1036" translate="yes" xml:space="preserve" uid="M:System.Activator.System#Runtime#InteropServices#_Activator#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <source>Flags describing the context of the call.</source>
          <target state="translated">描述呼叫之內容的旗標。</target>       </trans-unit>
        <trans-unit id="1037" translate="yes" xml:space="preserve" uid="M:System.Activator.System#Runtime#InteropServices#_Activator#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <source>A pointer to a structure that contains an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</source>
          <target state="translated">指向結構的指標，此結構包含引數陣列、用於具名引數的引數 DISPID 陣列，以及陣列所含項目數目的計數。</target>       </trans-unit>
        <trans-unit id="1038" translate="yes" xml:space="preserve" uid="M:System.Activator.System#Runtime#InteropServices#_Activator#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <source>A pointer to the location where the result is to be stored.</source>
          <target state="translated">儲存結果的位置指標。</target>       </trans-unit>
        <trans-unit id="1039" translate="yes" xml:space="preserve" uid="M:System.Activator.System#Runtime#InteropServices#_Activator#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <source>A pointer to a structure that contains exception information.</source>
          <target state="translated">包含例外狀況資訊之結構的指標。</target>       </trans-unit>
        <trans-unit id="1040" translate="yes" xml:space="preserve" uid="M:System.Activator.System#Runtime#InteropServices#_Activator#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <source>The index of the first argument that has an error.</source>
          <target state="translated">第一個有錯誤的引數索引。</target>       </trans-unit>
        <trans-unit id="1041" translate="yes" xml:space="preserve" uid="M:System.Activator.System#Runtime#InteropServices#_Activator#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <source>Provides access to properties and methods exposed by an object.</source>
          <target state="translated">提供物件所公開的屬性和方法的存取權。</target>       </trans-unit>
        <trans-unit id="1042" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.System#Runtime#InteropServices#_Activator#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <source>This method is used to access managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">此方法用來存取 managed 的類別，從 unmanaged 程式碼，而且不應該從 managed 程式碼呼叫。</target>       </trans-unit>
        <trans-unit id="1043" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activator.System#Runtime#InteropServices#_Activator#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <source>For more information about <ph id="ph1">`IDispatch::Invoke`</ph>, see the MSDN Library.</source>
          <target state="translated">如需有關<ph id="ph1">`IDispatch::Invoke`</ph>，請參閱 MSDN Library。</target>       </trans-unit>
        <trans-unit id="1044" translate="yes" xml:space="preserve" uid="M:System.Activator.System#Runtime#InteropServices#_Activator#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <source>Late-bound access using the COM <bpt id="p1">&lt;c&gt;</bpt>IDispatch<ept id="p1">&lt;/c&gt;</ept> interface is not supported.</source>
          <target state="translated">不支援使用 COM <bpt id="p1">&lt;c&gt;</bpt>IDispatch<ept id="p1">&lt;/c&gt;</ept> 介面進行晚期繫結的存取。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>