<Type Name="Activator" FullName="System.Activator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c9ed2638de4381d9a4998b9fc9f3d5ede399de95" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36434026" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Activator : System.Runtime.InteropServices._Activator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Activator extends System.Object implements class System.Runtime.InteropServices._Activator" />
  <TypeSignature Language="DocId" Value="T:System.Activator" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Activator&#xA;Implements _Activator" />
  <TypeSignature Language="C++ CLI" Value="public ref class Activator sealed : System::Runtime::InteropServices::_Activator" />
  <TypeSignature Language="F#" Value="type Activator = class&#xA;    interface _Activator" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices._Activator</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._Activator))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="2d358-101">包含本機或遠端建立物件類型的方法，或者取得對現有遠端物件的參考。</span>
      <span class="sxs-lookup">
        <span data-stu-id="2d358-101">Contains methods to create types of objects locally or remotely, or obtain references to existing remote objects.</span>
      </span>
      <span data-ttu-id="2d358-102">這個類別無法被繼承。</span>
      <span class="sxs-lookup">
        <span data-stu-id="2d358-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d358-103"><xref:System.Activator.CreateInstance%2A>方法會建立叫用的建構函式最符合的組件中定義之類型的執行個體指定的引數。</span><span class="sxs-lookup"><span data-stu-id="2d358-103">The <xref:System.Activator.CreateInstance%2A> method creates an instance of a type defined in an assembly by invoking the constructor that best matches the specified arguments.</span></span> <span data-ttu-id="2d358-104">如果未不指定任何引數，則會採用任何參數，也就是預設建構函式的建構函式會叫用。</span><span class="sxs-lookup"><span data-stu-id="2d358-104">If no arguments are specified, the constructor that takes no parameters, that is, the default constructor, is invoked.</span></span>  
  
 <span data-ttu-id="2d358-105">您必須擁有足夠的權限，以搜尋與呼叫建構函式。否則，會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="2d358-105">You must have sufficient permission to search for and call a constructor; otherwise, an exception is thrown.</span></span> <span data-ttu-id="2d358-106">根據預設，只有公用的建構函式會被視為的建構函式在搜尋期間。</span><span class="sxs-lookup"><span data-stu-id="2d358-106">By default, only public constructors are considered during the search for a constructor.</span></span> <span data-ttu-id="2d358-107">如果可以找到任何建構函式或預設建構函式，會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="2d358-107">If no constructor or default constructor can be found, an exception is thrown.</span></span>  
  
 <span data-ttu-id="2d358-108">繫結器參數會指定適當的建構函式組件中搜尋的物件。</span><span class="sxs-lookup"><span data-stu-id="2d358-108">A binder parameter specifies an object that searches an assembly for a suitable constructor.</span></span> <span data-ttu-id="2d358-109">您可以指定您自己的繫結器和搜尋準則。</span><span class="sxs-lookup"><span data-stu-id="2d358-109">You can specify your own binder and search criteria.</span></span> <span data-ttu-id="2d358-110">如果沒有指定，會使用預設繫結器。</span><span class="sxs-lookup"><span data-stu-id="2d358-110">If no binder is specified, a default binder is used.</span></span> <span data-ttu-id="2d358-111">如需詳細資訊，請參閱 <xref:System.Reflection.Binder?displayProperty=nameWithType> 和 <xref:System.Reflection.BindingFlags?displayProperty=nameWithType> 類別。</span><span class="sxs-lookup"><span data-stu-id="2d358-111">For more information, see the <xref:System.Reflection.Binder?displayProperty=nameWithType> and <xref:System.Reflection.BindingFlags?displayProperty=nameWithType> classes.</span></span>  
  
 <span data-ttu-id="2d358-112">辨識項參數會影響安全性原則和建構函式的權限。</span><span class="sxs-lookup"><span data-stu-id="2d358-112">An evidence parameter affects the security policy and permissions for the constructor.</span></span> <span data-ttu-id="2d358-113">如需詳細資訊，請參閱 <xref:System.Security.Policy.Evidence?displayProperty=nameWithType> 類別。</span><span class="sxs-lookup"><span data-stu-id="2d358-113">For more information, see the <xref:System.Security.Policy.Evidence?displayProperty=nameWithType> class.</span></span>  
  
 <span data-ttu-id="2d358-114">類型的執行個體可以建立在本機或遠端站台。</span><span class="sxs-lookup"><span data-stu-id="2d358-114">An instance of a type can be created at a local or remote site.</span></span> <span data-ttu-id="2d358-115">如果建立類型時，請從遠端啟動屬性參數會指定遠端網站的 URI。</span><span class="sxs-lookup"><span data-stu-id="2d358-115">If the type is created remotely, an activation attribute parameter specifies the URI of the remote site.</span></span> <span data-ttu-id="2d358-116">到達遠端站台之前建立的執行個體的呼叫可能會通過中間的站台。</span><span class="sxs-lookup"><span data-stu-id="2d358-116">The call to create the instance might pass through intermediary sites before it reaches the remote site.</span></span> <span data-ttu-id="2d358-117">其他啟動屬性可以修改環境或內容中，呼叫遠端和中間的站台上運作。</span><span class="sxs-lookup"><span data-stu-id="2d358-117">Other activation attributes can modify the environment, or context, in which the call operates at the remote and intermediary sites.</span></span>  
  
 <span data-ttu-id="2d358-118">如果在本機建立的執行個體，就會傳回該物件的參考。</span><span class="sxs-lookup"><span data-stu-id="2d358-118">If the instance is created locally, a reference to that object is returned.</span></span> <span data-ttu-id="2d358-119">如果遠端建立執行個體，則會傳回 proxy 的參考。</span><span class="sxs-lookup"><span data-stu-id="2d358-119">If the instance is created remotely, a reference to a proxy is returned.</span></span> <span data-ttu-id="2d358-120">遠端物件是透過 proxy 操作，如同它是本機的物件。</span><span class="sxs-lookup"><span data-stu-id="2d358-120">The remote object is manipulated through the proxy as if it were a local object.</span></span>  
  
 <span data-ttu-id="2d358-121"><xref:System.Activator.GetObject%2A>方法建立目前執行的遠端物件、 伺服器啟動已知物件或 XML Web 服務 proxy。</span><span class="sxs-lookup"><span data-stu-id="2d358-121">The <xref:System.Activator.GetObject%2A> method creates a proxy to a currently running remote object, server-activated well-known object, or XML Web service.</span></span> <span data-ttu-id="2d358-122">您可以指定連線媒體，也就是通道。</span><span class="sxs-lookup"><span data-stu-id="2d358-122">You can specify the connection medium, that is, the channel.</span></span> <span data-ttu-id="2d358-123">如需詳細資訊，請參閱 <xref:System.Runtime.Remoting.Channels.ChannelServices?displayProperty=nameWithType> 類別。</span><span class="sxs-lookup"><span data-stu-id="2d358-123">For more information, see the <xref:System.Runtime.Remoting.Channels.ChannelServices?displayProperty=nameWithType> class.</span></span>  
  
 <span data-ttu-id="2d358-124">組件包含類型定義。</span><span class="sxs-lookup"><span data-stu-id="2d358-124">Assemblies contain type definitions.</span></span> <span data-ttu-id="2d358-125"><xref:System.Activator.CreateInstance%2A>方法會從目前正在執行的組件建立類型的執行個體。</span><span class="sxs-lookup"><span data-stu-id="2d358-125">The <xref:System.Activator.CreateInstance%2A> method creates an instance of a type from a currently running assembly.</span></span> <span data-ttu-id="2d358-126"><xref:System.Activator.CreateInstanceFrom%2A>方法從包含組件檔案中建立執行個體。</span><span class="sxs-lookup"><span data-stu-id="2d358-126">The <xref:System.Activator.CreateInstanceFrom%2A> method creates an instance from a file that contains an assembly.</span></span> <span data-ttu-id="2d358-127"><xref:System.Activator.CreateComInstanceFrom%2A>方法從檔案包含的組件建立 COM 物件的執行個體。</span><span class="sxs-lookup"><span data-stu-id="2d358-127">The <xref:System.Activator.CreateComInstanceFrom%2A> method creates an instance of a COM object from a file that contains an assembly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d358-128">下列範例示範如何使用<xref:System.Activator>以動態方式建構物件在執行階段類別。</span><span class="sxs-lookup"><span data-stu-id="2d358-128">The following example shows how to use the <xref:System.Activator> class to dynamically construct objects at run time.</span></span>  
  
 [!code-cpp[ActivatorX#1](~/samples/snippets/cpp/VS_Snippets_CLR/ActivatorX/cpp/ActivatorX.cpp#1)]
 [!code-csharp[ActivatorX#1](~/samples/snippets/csharp/VS_Snippets_CLR/ActivatorX/cs/ActivatorX.cs#1)]
 [!code-vb[ActivatorX#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ActivatorX/VB/ActivatorX.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="CreateComInstanceFrom">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2d358-129">建立已具有指定名稱之 COM 物件的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-129">Creates an instance of the COM object whose name is specified.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateComInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateComInstanceFrom (string assemblyName, string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateComInstanceFrom(string assemblyName, string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateComInstanceFrom(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateComInstanceFrom (assemblyName As String, typeName As String) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateComInstanceFrom(System::String ^ assemblyName, System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="static member CreateComInstanceFrom : string * string -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateComInstanceFrom (assemblyName, typeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyName">
          <span data-ttu-id="2d358-130">檔案的名稱，該檔案包含要在其中搜尋名稱為 <c>typeName</c> 之類型的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-130">The name of a file that contains an assembly where the type named <c>typeName</c> is sought.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="2d358-131">慣用類型的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-131">The name of the preferred type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d358-132">使用具名組件檔案和預設建構函式 (Constructor)，建立已具有指定名稱之 COM 物件的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-132">Creates an instance of the COM object whose name is specified, using the named assembly file and the default constructor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2d358-133">必須解除包裝的控制代碼，用來存取新建立的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-133">A handle that must be unwrapped to access the newly created instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d358-134">使用<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>要未包裝的傳回值的方法。</span><span class="sxs-lookup"><span data-stu-id="2d358-134">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="2d358-135">A<xref:System.Runtime.InteropServices.ComVisibleAttribute?displayProperty=nameWithType>屬性的值`true`必須應用於明確或預設 COM 型別而<xref:System.Activator.CreateComInstanceFrom%2A>方法可以建立該類型的執行個體，否則<xref:System.TypeLoadException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="2d358-135">A <xref:System.Runtime.InteropServices.ComVisibleAttribute?displayProperty=nameWithType> attribute with a value of `true` must be applied either explicitly or by default to the COM type so the <xref:System.Activator.CreateComInstanceFrom%2A> method can create an instance of that type; otherwise, <xref:System.TypeLoadException> is thrown.</span></span>  
  
 <span data-ttu-id="2d358-136">其他可能會叫用方法所擲回的例外狀況的相關資訊，請參閱例外狀況區段<xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType>和<xref:System.Activator.CreateInstance%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="2d358-136">For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2d358-137">從開始[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]，這個方法可以用來建立非公用型別，如果呼叫端被授與<xref:System.Security.Permissions.ReflectionPermission>與<xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType>旗標和包含非公用類型的組件的授權集如果是呼叫者的授與限制設定或子集。</span><span class="sxs-lookup"><span data-stu-id="2d358-137">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to create nonpublic types if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types is restricted to the caller’s grant set or to a subset thereof.</span></span> <span data-ttu-id="2d358-138">(請參閱[反映的安全性考量](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)。)</span><span class="sxs-lookup"><span data-stu-id="2d358-138">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="2d358-139">若要使用這項功能，您的應用程式應將目標設為 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] (含) 以後版本。</span><span class="sxs-lookup"><span data-stu-id="2d358-139">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2d358-140">
            <paramref name="typeName" /> 或 <paramref name="assemblyName" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-140">
              <paramref name="typeName" /> or <paramref name="assemblyName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="2d358-141">無法透過 COM 建立執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-141">An instance cannot be created through COM.</span>
          </span>
          <span data-ttu-id="2d358-142">或在 <paramref name="assemblyName" /> 中找不到 <paramref name="typename" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-142">-or-  <paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="2d358-143">找不到相符的建構函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-143">No matching constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="2d358-144">找不到 <paramref name="assemblyName" />，或您想載入的模組並未指定檔案的副檔名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-144">
              <paramref name="assemblyName" /> is not found, or the module you are trying to load does not specify a file name extension.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="2d358-145">無法建立抽象類別的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-145">Cannot create an instance of an abstract class.</span>
          </span>
          <span data-ttu-id="2d358-146">或這個成員曾被晚期繫結機制叫用過。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-146">-or-  This member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="2d358-147">呼叫者無法提供非繼承自 <see cref="T:System.MarshalByRefObject" /> 之物件的啟動屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-147">The caller cannot provide activation attributes for an object that does not inherit from <see cref="T:System.MarshalByRefObject" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2d358-148">
            <paramref name="assemblyName" /> 為空字串 ("")。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-148">
              <paramref name="assemblyName" /> is the empty string ("").</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="2d358-149">用來存取非公用型別，不論其授權集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-149">for accessing nonpublic types regardless of their grant set.</span>
          </span>
          <span data-ttu-id="2d358-150">相關聯的列舉型別： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-150">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateComInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateComInstanceFrom (string assemblyName, string typeName, byte[] hashValue, System.Configuration.Assemblies.AssemblyHashAlgorithm hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateComInstanceFrom(string assemblyName, string typeName, unsigned int8[] hashValue, valuetype System.Configuration.Assemblies.AssemblyHashAlgorithm hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateComInstanceFrom(System.String,System.String,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateComInstanceFrom (assemblyName As String, typeName As String, hashValue As Byte(), hashAlgorithm As AssemblyHashAlgorithm) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateComInstanceFrom(System::String ^ assemblyName, System::String ^ typeName, cli::array &lt;System::Byte&gt; ^ hashValue, System::Configuration::Assemblies::AssemblyHashAlgorithm hashAlgorithm);" />
      <MemberSignature Language="F#" Value="static member CreateComInstanceFrom : string * string * byte[] * System.Configuration.Assemblies.AssemblyHashAlgorithm -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateComInstanceFrom (assemblyName, typeName, hashValue, hashAlgorithm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="hashValue" Type="System.Byte[]" />
        <Parameter Name="hashAlgorithm" Type="System.Configuration.Assemblies.AssemblyHashAlgorithm" />
      </Parameters>
      <Docs>
        <param name="assemblyName">
          <span data-ttu-id="2d358-151">檔案的名稱，該檔案包含要在其中搜尋名稱為 <c>typeName</c> 之類型的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-151">The name of a file that contains an assembly where the type named <c>typeName</c> is sought.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="2d358-152">慣用類型的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-152">The name of the preferred type.</span>
          </span>
        </param>
        <param name="hashValue">
          <span data-ttu-id="2d358-153">計算的雜湊碼值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-153">The value of the computed hash code.</span>
          </span>
        </param>
        <param name="hashAlgorithm">
          <span data-ttu-id="2d358-154">雜湊演算法，用於雜湊檔案並產生強式名稱 (Strong Name)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-154">The hash algorithm used for hashing files and generating the strong name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d358-155">使用具名組件檔案和預設建構函式 (Constructor)，建立已具有指定名稱之 COM 物件的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-155">Creates an instance of the COM object whose name is specified, using the named assembly file and the default constructor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2d358-156">必須解除包裝的控制代碼，用來存取新建立的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-156">A handle that must be unwrapped to access the newly created instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d358-157">使用<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>要未包裝的傳回值的方法。</span><span class="sxs-lookup"><span data-stu-id="2d358-157">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="2d358-158">A<xref:System.Runtime.InteropServices.ComVisibleAttribute?displayProperty=nameWithType>屬性的值`true`必須應用於明確或預設 COM 型別而<xref:System.Activator.CreateComInstanceFrom%2A>方法可以建立該類型的執行個體，否則<xref:System.TypeLoadException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="2d358-158">A <xref:System.Runtime.InteropServices.ComVisibleAttribute?displayProperty=nameWithType> attribute with a value of `true` must be applied either explicitly or by default to the COM type so the <xref:System.Activator.CreateComInstanceFrom%2A> method can create an instance of that type; otherwise, <xref:System.TypeLoadException> is thrown.</span></span>  
  
 <span data-ttu-id="2d358-159">其他可能會叫用方法所擲回的例外狀況的相關資訊，請參閱例外狀況區段<xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType>和<xref:System.Activator.CreateInstance%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="2d358-159">For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2d358-160">從開始[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]，這個方法可以用來建立非公用型別，如果呼叫端被授與<xref:System.Security.Permissions.ReflectionPermission>與<xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType>旗標和包含非公用類型的組件的授權集如果是呼叫者的授與限制設定或子集。</span><span class="sxs-lookup"><span data-stu-id="2d358-160">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to create nonpublic types if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types is restricted to the caller’s grant set or to a subset thereof.</span></span> <span data-ttu-id="2d358-161">(請參閱[反映的安全性考量](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)。)</span><span class="sxs-lookup"><span data-stu-id="2d358-161">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="2d358-162">若要使用這項功能，您的應用程式應將目標設為 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] (含) 以後版本。</span><span class="sxs-lookup"><span data-stu-id="2d358-162">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2d358-163">
            <paramref name="typeName" /> 或 <paramref name="assemblyName" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-163">
              <paramref name="typeName" /> or <paramref name="assemblyName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2d358-164">
            <paramref name="assemblyName" /> 為空字串 ("")。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-164">
              <paramref name="assemblyName" /> is the empty string ("").</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="2d358-165">使用兩個不同的辨識項載入組件或模組兩次。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-165">An assembly or module was loaded twice with two different evidences.</span>
          </span>
          <span data-ttu-id="2d358-166">或 <paramref name="assemblyName" /> 超過系統定義的長度上限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-166">-or-  <paramref name="assemblyName" /> is longer than the system-defined maximum length.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="2d358-167">找不到 <paramref name="assemblyName" />，或您想載入的模組並未指定檔案的副檔名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-167">
              <paramref name="assemblyName" /> is not found, or the module you are trying to load does not specify a file name extension.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="2d358-168">已找到 <paramref name="assemblyName" /> 但是無法載入。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-168">
              <paramref name="assemblyName" /> is found but cannot be loaded.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="2d358-169">
            <paramref name="assemblyName" /> 不是有效的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-169">
              <paramref name="assemblyName" /> is not a valid assembly.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="2d358-170">指定未以 "file://" 開頭的程式碼基底時，沒有必要的 <see langword="WebPermission" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-170">A code base that does not start with "file://" was specified without the required <see langword="WebPermission" />.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="2d358-171">無法透過 COM 建立執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-171">An instance cannot be created through COM.</span>
          </span>
          <span data-ttu-id="2d358-172">或在 <paramref name="assemblyName" /> 中找不到 <paramref name="typename" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-172">-or-  <paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="2d358-173">找不到相符的建構函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-173">No matching constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="2d358-174">無法建立抽象類別的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-174">An instance of an abstract class cannot be created.</span>
          </span>
          <span data-ttu-id="2d358-175">或這個成員曾被晚期繫結機制叫用過。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-175">-or-  This member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="2d358-176">呼叫者無法提供非繼承自 <see cref="T:System.MarshalByRefObject" /> 之物件的啟動屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-176">The caller cannot provide activation attributes for an object that does not inherit from <see cref="T:System.MarshalByRefObject" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="2d358-177">用來存取非公用型別，不論其授權集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-177">for accessing nonpublic types regardless of their grant set.</span>
          </span>
          <span data-ttu-id="2d358-178">相關聯的列舉型別： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-178">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="2d358-179">用於讀取以"file:// 開頭的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-179">for reading a URI that begins with "file://".</span>
          </span>
          <span data-ttu-id="2d358-180">相關聯的列舉型別： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-180">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
        <permission cref="T:System.Net.WebPermission">
          <span data-ttu-id="2d358-181">用於讀取不是以"file:// 開頭的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-181">for reading a URI that does not begin with "file://".</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateInstance">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2d358-182">使用最符合指定參數的建構函式，建立指定類型的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-182">Creates an instance of the specified type using the constructor that best matches the specified parameters.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (ActivationContext activationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(class System.ActivationContext activationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.ActivationContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(ActivationContext ^ activationContext);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : ActivationContext -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstance activationContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activationContext" Type="System.ActivationContext" />
      </Parameters>
      <Docs>
        <param name="activationContext">
          <span data-ttu-id="2d358-183">啟動內容物件，指定要建立的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-183">An activation context object that specifies the object to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d358-184">建立類型的執行個體，這個類型是由指定的 <see cref="T:System.ActivationContext" /> 物件所指派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-184">Creates an instance of the type designated by the specified <see cref="T:System.ActivationContext" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2d358-185">必須解除包裝的控制代碼，用來存取新建立的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-185">A handle that must be unwrapped to access the newly created object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d358-186">使用<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>要未包裝的傳回值的方法。</span><span class="sxs-lookup"><span data-stu-id="2d358-186">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="2d358-187">在資訊清單為基礎的啟用期間使用的啟用內容，來設定網域原則，並提供應用程式為基礎的安全性模型。</span><span class="sxs-lookup"><span data-stu-id="2d358-187">The activation context is used during manifest-based activation to set up the domain policy and to provide an application-based security model.</span></span> <span data-ttu-id="2d358-188"><xref:System.ActivationContext>類別包含<xref:System.ApplicationIdentity>物件，提供應用程式資訊清單的存取。</span><span class="sxs-lookup"><span data-stu-id="2d358-188">The <xref:System.ActivationContext> class contains an <xref:System.ApplicationIdentity> object that provides access to the application manifest.</span></span> <span data-ttu-id="2d358-189">如需詳細資訊，請參閱 <xref:System.Security.Policy.ApplicationSecurityManager> 類別。</span><span class="sxs-lookup"><span data-stu-id="2d358-189">For more information, see the <xref:System.Security.Policy.ApplicationSecurityManager> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ActivationContext" />
        <altmember cref="T:System.ApplicationIdentity" />
        <altmember cref="T:System.Security.Policy.ApplicationSecurityManager" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static object CreateInstance (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateInstance(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateInstance(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : Type -&gt; obj" Usage="System.Activator.CreateInstance type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="2d358-190">要建立的物件類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-190">The type of object to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d358-191">使用指定之類型的預設建構函式，建立該類型的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-191">Creates an instance of the specified type using that type's default constructor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2d358-192">新建立物件的參考。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-192">A reference to the newly created object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d358-193">要叫用的建構函式必須可以存取。</span><span class="sxs-lookup"><span data-stu-id="2d358-193">The constructor to be invoked must be accessible.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2d358-194">從開始[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]，這個方法可以用來存取非公用型別，如果呼叫端被授與<xref:System.Security.Permissions.ReflectionPermission>與<xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType>旗標和包含非公用類型的組件的授權集如果是呼叫者的授與限制設定或子集。</span><span class="sxs-lookup"><span data-stu-id="2d358-194">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access nonpublic types if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types is restricted to the caller’s grant set or to a subset thereof.</span></span> <span data-ttu-id="2d358-195">(請參閱[反映的安全性考量](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)。)</span><span class="sxs-lookup"><span data-stu-id="2d358-195">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="2d358-196">若要使用這項功能，您的應用程式應將目標設為 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] (含) 以後版本。</span><span class="sxs-lookup"><span data-stu-id="2d358-196">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d358-197">下列程式碼範例示範如何呼叫<xref:System.Activator.CreateInstance%28System.Type%29>方法。</span><span class="sxs-lookup"><span data-stu-id="2d358-197">The following code example demonstrates how to call the <xref:System.Activator.CreateInstance%28System.Type%29> method.</span></span> <span data-ttu-id="2d358-198">建立數種不同類型的執行個體，並且顯示其預設值。</span><span class="sxs-lookup"><span data-stu-id="2d358-198">Instances of several different types are created and their default values are displayed.</span></span>  
  
 [!code-cpp[ActivatorX#4](~/samples/snippets/cpp/VS_Snippets_CLR/ActivatorX/cpp/source2.cpp#4)]
 [!code-csharp[ActivatorX#4](~/samples/snippets/csharp/VS_Snippets_CLR/ActivatorX/cs/source2.cs#4)]
 [!code-vb[ActivatorX#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/ActivatorX/VB/source2.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2d358-199">
            <paramref name="type" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-199">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2d358-200">
            <paramref name="type" /> 不是 <see langword="RuntimeType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-200">
              <paramref name="type" /> is not a <see langword="RuntimeType" />.</span>
          </span>
          <span data-ttu-id="2d358-201">或 <paramref name="type" /> 是開放式泛型型別 (也就是 <see cref="P:System.Type.ContainsGenericParameters" /> 屬性會傳回 <see langword="true" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-201">-or-  <paramref name="type" /> is an open generic type (that is, the <see cref="P:System.Type.ContainsGenericParameters" /> property returns <see langword="true" />).</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="2d358-202">
            <paramref name="type" /> 不可以是 <see cref="T:System.Reflection.Emit.TypeBuilder" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-202">
              <paramref name="type" /> cannot be a <see cref="T:System.Reflection.Emit.TypeBuilder" />.</span>
          </span>
          <span data-ttu-id="2d358-203">或不支援建立 <see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" /> 和 <see cref="T:System.RuntimeArgumentHandle" /> 類型或這些類型的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-203">-or-  Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span>
          </span>
          <span data-ttu-id="2d358-204">或包含 <paramref name="type" /> 的組件是以 <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" /> 建立的動態組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-204">-or-  The assembly that contains <paramref name="type" /> is a dynamic assembly that was created with <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="2d358-205">正在呼叫的建構函式擲回例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-205">The constructor being called throws an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="2d358-206">
            <block subset="none" type="note">
              <para> 在 [適用於 Windows 市集應用程式的 .NET] (http://go.microsoft.com/fwlink/?LinkID=247912) 或 [可攜式類別庫] (~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md) 中，改為攔截基底類別例外狀況 <see cref="T:System.MemberAccessException" />。</para>
            </block> 呼叫端沒有呼叫這個建構函式的權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-206">
              <block subset="none" type="note">
                <para> In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <see cref="T:System.MemberAccessException" />, instead.  </para>
              </block>  The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="2d358-207">無法建立抽象類別的執行個體，或者這個成員曾被晚期繫結機制叫用過。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-207">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">
          <span data-ttu-id="2d358-208">COM 類型不是透過 <see cref="Overload:System.Type.GetTypeFromProgID" /> 或 <see cref="Overload:System.Type.GetTypeFromCLSID" /> 取得。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-208">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="2d358-209">
            <block subset="none" type="note">
              <para> 在 [適用於 Windows 市集應用程式的 .NET] (http://go.microsoft.com/fwlink/?LinkID=247912) 或 [可攜式類別庫] (~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md) 中，改為攔截基底類別例外狀況 <see cref="T:System.MissingMemberException" />。</para>
            </block> 找不到相符的公用建構函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-209">
              <block subset="none" type="note">
                <para> In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <see cref="T:System.MissingMemberException" />, instead.  </para>
              </block>  No matching public constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.COMException">
          <span data-ttu-id="2d358-210">
            <paramref name="type" /> 是 COM 物件，但用來取得類型的類別識別項無效，或已識別的類別未經登錄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-210">
              <paramref name="type" /> is a COM object but the class identifier used to obtain the type is invalid, or the identified class is not registered.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="2d358-211">
            <paramref name="type" /> 不是有效的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-211">
              <paramref name="type" /> is not a valid type.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="2d358-212">提供建立委派的執行個體時，呼叫 unmanaged 程式碼的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-212">for the ability to call unmanaged code when creating an instance of a delegate.</span>
          </span>
          <span data-ttu-id="2d358-213">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-213">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="2d358-214">用來存取非公用型別，不論其授權集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-214">for accessing nonpublic types regardless of their grant sets.</span>
          </span>
          <span data-ttu-id="2d358-215">相關聯的列舉型別： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-215">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (ActivationContext activationContext, string[] activationCustomData);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(class System.ActivationContext activationContext, string[] activationCustomData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.ActivationContext,System.String[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(ActivationContext ^ activationContext, cli::array &lt;System::String ^&gt; ^ activationCustomData);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : ActivationContext * string[] -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstance (activationContext, activationCustomData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activationContext" Type="System.ActivationContext" />
        <Parameter Name="activationCustomData" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="activationContext">
          <span data-ttu-id="2d358-216">啟動內容物件，指定要建立的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-216">An activation context object that specifies the object to create.</span>
          </span>
        </param>
        <param name="activationCustomData">
          <span data-ttu-id="2d358-217">Unicode 字串的陣列，包含自訂啟動資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-217">An array of Unicode strings that contain custom activation data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d358-218">建立類型的執行個體，這個類型是由指定的 <see cref="T:System.ActivationContext" /> 物件所指派，並且是以指定的自訂啟動資料所啟動。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-218">Creates an instance of the type that is designated by the specified <see cref="T:System.ActivationContext" /> object and activated with the specified custom activation data.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2d358-219">必須解除包裝的控制代碼，用來存取新建立的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-219">A handle that must be unwrapped to access the newly created object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d358-220">使用<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>要未包裝的傳回值的方法。</span><span class="sxs-lookup"><span data-stu-id="2d358-220">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="2d358-221">在資訊清單為基礎的啟用期間使用的啟用內容，來設定網域原則，並提供應用程式為基礎的安全性模型。</span><span class="sxs-lookup"><span data-stu-id="2d358-221">The activation context is used during manifest-based activation to set up the domain policy and to provide an application-based security model.</span></span> <span data-ttu-id="2d358-222"><xref:System.ActivationContext>類別包含<xref:System.ApplicationIdentity>物件，提供應用程式資訊清單的存取。</span><span class="sxs-lookup"><span data-stu-id="2d358-222">The <xref:System.ActivationContext> class contains an <xref:System.ApplicationIdentity> object that provides access to the application manifest.</span></span> <span data-ttu-id="2d358-223">如需詳細資訊，請參閱 <xref:System.Security.Policy.ApplicationSecurityManager> 類別。</span><span class="sxs-lookup"><span data-stu-id="2d358-223">For more information, see the <xref:System.Security.Policy.ApplicationSecurityManager> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ActivationContext" />
        <altmember cref="T:System.ApplicationIdentity" />
        <altmember cref="T:System.Security.Policy.ApplicationSecurityManager" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (string assemblyName, string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(string assemblyName, string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance (assemblyName As String, typeName As String) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(System::String ^ assemblyName, System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : string * string -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstance (assemblyName, typeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyName">
          <span data-ttu-id="2d358-224">組件的名稱，該組件包含要在其中搜尋名稱為 <c>typeName</c> 的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-224">The name of the assembly where the type named <c>typeName</c> is sought.</span>
          </span>
          <span data-ttu-id="2d358-225">如果 <c>assemblyName</c> 為 <see langword="null" />，則會搜尋執行中的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-225">If <c>assemblyName</c> is <see langword="null" />, the executing assembly is searched.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="2d358-226">慣用類型的完整名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-226">The fully qualified name of the preferred type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d358-227">使用具名組件和預設建構函式，建立已具有指定名稱之類型的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-227">Creates an instance of the type whose name is specified, using the named assembly and default constructor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2d358-228">必須解除包裝的控制代碼，用來存取新建立的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-228">A handle that must be unwrapped to access the newly created instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d358-229">使用<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>要未包裝的傳回值。</span><span class="sxs-lookup"><span data-stu-id="2d358-229">Use <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> to unwrap the return value.</span></span>  
  
 <span data-ttu-id="2d358-230">`assemblyName` 可以是下列其中一項：</span><span class="sxs-lookup"><span data-stu-id="2d358-230">`assemblyName` can be either of the following:</span></span>  
  
-   <span data-ttu-id="2d358-231">簡單組件的名稱，不含路徑或檔案副檔名。</span><span class="sxs-lookup"><span data-stu-id="2d358-231">The simple name of an assembly, without its path or file extension.</span></span> <span data-ttu-id="2d358-232">例如，您會指定`TypeExtensions`組件的路徑和名稱是.\bin\TypeExtensions.dll。</span><span class="sxs-lookup"><span data-stu-id="2d358-232">For example, you would specify `TypeExtensions` for an assembly whose path and name are .\bin\TypeExtensions.dll.</span></span>  
  
-   <span data-ttu-id="2d358-233">帶正負號的組件，其中包含簡單名稱、 版本、 文化特性和公開金鑰語彙基元; 完整名稱例如，"TypeExtensions，Version = 1.0.0.0，Culture = neutral，PublicKeyToken = 181869f2f7435b51"。</span><span class="sxs-lookup"><span data-stu-id="2d358-233">The full name of a signed assembly, which consists of its simple name, version, culture, and public key token; for example, "TypeExtensions, Version=1.0.0.0, Culture=neutral, PublicKeyToken=181869f2f7435b51".</span></span>  
  
 <span data-ttu-id="2d358-234">如需有關 common language runtime 如何識別及載入組件的詳細資訊，請參閱[執行階段如何找出組件](~/docs/framework/deployment/how-the-runtime-locates-assemblies.md)。</span><span class="sxs-lookup"><span data-stu-id="2d358-234">For more information on how the common language runtime identifies and loads assemblies, see [How the Runtime Locates Assemblies](~/docs/framework/deployment/how-the-runtime-locates-assemblies.md).</span></span> <span data-ttu-id="2d358-235">如需使用應用程式組態檔，以定義組件位置的資訊，請參閱[指定組件的位置](~/docs/framework/configure-apps/specify-assembly-location.md)。</span><span class="sxs-lookup"><span data-stu-id="2d358-235">For information on using the application configuration file to define assembly locations, see [Specifying an Assembly's Location](~/docs/framework/configure-apps/specify-assembly-location.md).</span></span> <span data-ttu-id="2d358-236">如果`assemblyName`找到，它會載入預設內容中。</span><span class="sxs-lookup"><span data-stu-id="2d358-236">If `assemblyName` is found, it is loaded in the default context.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2d358-237">從開始[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]，這個方法可以用來建立非公用型別，如果呼叫端被授與<xref:System.Security.Permissions.ReflectionPermission>與<xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType>旗標和包含非公用類型的組件的授權集如果是呼叫者的授與限制設定或子集。</span><span class="sxs-lookup"><span data-stu-id="2d358-237">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to create nonpublic types if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types is restricted to the caller’s grant set or to a subset thereof.</span></span> <span data-ttu-id="2d358-238">(請參閱[反映的安全性考量](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)。)</span><span class="sxs-lookup"><span data-stu-id="2d358-238">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="2d358-239">若要使用這項功能，您的應用程式應將目標設為 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] (含) 以後版本。</span><span class="sxs-lookup"><span data-stu-id="2d358-239">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d358-240">下列範例會定義名為類別`Person`名為組件中`PersonInfo`。</span><span class="sxs-lookup"><span data-stu-id="2d358-240">The following example defines a class named `Person` in an assembly named `PersonInfo`.</span></span> <span data-ttu-id="2d358-241">請注意，`Person`類別有兩個建構函式，一個是無參數。</span><span class="sxs-lookup"><span data-stu-id="2d358-241">Note that the `Person` class has two constructors, one of which is parameterless.</span></span>  
  
 [!code-csharp[System.Activator.CreateInstance#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.activator.createinstance/cs/personinfo.cs#1)]
 [!code-vb[System.Activator.CreateInstance#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.activator.createinstance/vb/personinfo.vb#1)]  
  
 <span data-ttu-id="2d358-242">下列範例會呼叫<xref:System.Activator.CreateInstance%28System.String%2CSystem.String%29>方法來具現化`Person`類別。</span><span class="sxs-lookup"><span data-stu-id="2d358-242">The following example calls the <xref:System.Activator.CreateInstance%28System.String%2CSystem.String%29> method to instantiate the `Person` class.</span></span> <span data-ttu-id="2d358-243">它需要 PersonInfo.dll 要加入至專案的參考。</span><span class="sxs-lookup"><span data-stu-id="2d358-243">It requires a reference to PersonInfo.dll to be added to the project.</span></span> <span data-ttu-id="2d358-244">因為<xref:System.Activator.CreateInstance%28System.String%2CSystem.String%29>方法呼叫`Person`類別預設建構函式，則將值指派至其`Name`屬性。</span><span class="sxs-lookup"><span data-stu-id="2d358-244">Because the <xref:System.Activator.CreateInstance%28System.String%2CSystem.String%29> method calls the `Person` class default constructor,  the example assigns a value to its `Name` property.</span></span>  
  
 [!code-csharp[System.Activator.CreateInstance#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.activator.createinstance/cs/createinstanceex1.cs#2)]
 [!code-vb[System.Activator.CreateInstance#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.activator.createinstance/vb/createinstanceex1.vb#2)]  
  
 <span data-ttu-id="2d358-245">不過，<xref:System.Activator.CreateInstance%2A>經常稱為具現化的跨電腦界限或不在設計階段已知的型別。</span><span class="sxs-lookup"><span data-stu-id="2d358-245">However, <xref:System.Activator.CreateInstance%2A> is frequently called to instantiate a type that crosses machine boundaries or that is not known at design time.</span></span> <span data-ttu-id="2d358-246">在此情況下，您不能包含在專案中的組件的參考，無法進行型別之成員的早期繫結呼叫。</span><span class="sxs-lookup"><span data-stu-id="2d358-246">In this case, you cannot include a reference to the assembly in the project and cannot make early-bound calls to the type's members.</span></span> <span data-ttu-id="2d358-247">若要解決這項限制，下列範例會使用<xref:System.Activator.CreateInstance%2A>方法以及反映來指派值給`Person`物件的`Name`屬性，並顯示其值。</span><span class="sxs-lookup"><span data-stu-id="2d358-247">To work around this limitation, the following example uses the <xref:System.Activator.CreateInstance%2A> method along with reflection to assign a value to the `Person` object's `Name` property and to display its value.</span></span>  
  
 [!code-csharp[System.Activator.CreateInstance#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.activator.createinstance/cs/createinstanceex1a.cs#3)]
 [!code-vb[System.Activator.CreateInstance#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.activator.createinstance/vb/createinstanceex1a.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2d358-248">
            <paramref name="typeName" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-248">
              <paramref name="typeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="2d358-249">找不到相符的公用建構函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-249">No matching public constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="2d358-250">在 <paramref name="assemblyName" /> 中找不到 <paramref name="typename" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-250">
              <paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="2d358-251">找不到 <paramref name="assemblyName" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-251">
              <paramref name="assemblyName" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="2d358-252">呼叫端沒有呼叫這個建構函式的權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-252">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="2d358-253">您無法建立抽象類別的執行個體，或者這個成員曾被晚期繫結機制叫用過。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-253">You cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="2d358-254">透過反映叫用並擲回例外狀況的建構函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-254">The constructor, which was invoked through reflection, threw an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">
          <span data-ttu-id="2d358-255">COM 類型不是透過 <see cref="Overload:System.Type.GetTypeFromProgID" /> 或 <see cref="Overload:System.Type.GetTypeFromCLSID" /> 取得。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-255">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="2d358-256">不支援建立 <see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" /> 和 <see cref="T:System.RuntimeArgumentHandle" /> 類型或這些類型的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-256">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="2d358-257">
            <paramref name="assemblyName" /> 不是有效的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-257">
              <paramref name="assemblyName" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="2d358-258">或目前載入的是通用語言執行平台 (CLR) 2.0 版或更新版本，但已針對比目前載入版本更新的 CLR 版本來編譯 <paramref name="assemblyName" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-258">-or-  The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span>
          </span>
          <span data-ttu-id="2d358-259">請注意，.NET Framework 2.0、3.0 和 3.5 版全部都會使用 CLR 2.0 版。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-259">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="2d358-260">使用兩個不同的辨識項載入組件或模組兩次。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-260">An assembly or module was loaded twice with two different evidences.</span>
          </span>
          <span data-ttu-id="2d358-261">或組件名稱或程式碼基底無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-261">-or-  The assembly name or code base is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="2d358-262">提供建立委派的執行個體時，呼叫 unmanaged 程式碼的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-262">for the ability to call unmanaged code when creating an instance of a delegate.</span>
          </span>
          <span data-ttu-id="2d358-263">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-263">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="2d358-264">用來存取非公用型別，不論其授權集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-264">for accessing nonpublic types regardless of their grant set.</span>
          </span>
          <span data-ttu-id="2d358-265">相關聯的列舉型別： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-265">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static object CreateInstance (Type type, bool nonPublic);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateInstance(class System.Type type, bool nonPublic) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.Type,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateInstance(Type ^ type, bool nonPublic);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : Type * bool -&gt; obj" Usage="System.Activator.CreateInstance (type, nonPublic)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="nonPublic" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="2d358-266">要建立的物件類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-266">The type of object to create.</span>
          </span>
        </param>
        <param name="nonPublic">
          <span data-ttu-id="2d358-267">如果公用或非公用預設建構函式可相符，則為 <see langword="true" />；如果只有公用預設建構函式可相符，則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-267">
              <see langword="true" /> if a public or nonpublic default constructor can match; <see langword="false" /> if only a public default constructor can match.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d358-268">使用指定之類型的預設建構函式，建立該類型的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-268">Creates an instance of the specified type using that type's default constructor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2d358-269">新建立物件的參考。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-269">A reference to the newly created object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2d358-270">從開始[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]，這個方法可以用來存取非公用類型和成員，如果呼叫端被授與<xref:System.Security.Permissions.ReflectionPermission>與<xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType>旗標和包含非公用類型和成員的組件的授權集如果是受限制若要呼叫者的授與集或子集。</span><span class="sxs-lookup"><span data-stu-id="2d358-270">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access nonpublic types and members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types and members is restricted to the caller’s grant set or to a subset thereof.</span></span> <span data-ttu-id="2d358-271">(請參閱[反映的安全性考量](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)。)</span><span class="sxs-lookup"><span data-stu-id="2d358-271">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="2d358-272">若要使用這項功能，您的應用程式應將目標設為 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] (含) 以後版本。</span><span class="sxs-lookup"><span data-stu-id="2d358-272">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2d358-273">
            <paramref name="type" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-273">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2d358-274">
            <paramref name="type" /> 不是 <see langword="RuntimeType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-274">
              <paramref name="type" /> is not a <see langword="RuntimeType" />.</span>
          </span>
          <span data-ttu-id="2d358-275">或 <paramref name="type" /> 是開放式泛型型別 (也就是 <see cref="P:System.Type.ContainsGenericParameters" /> 屬性會傳回 <see langword="true" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-275">-or-  <paramref name="type" /> is an open generic type (that is, the <see cref="P:System.Type.ContainsGenericParameters" /> property returns <see langword="true" />).</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="2d358-276">
            <paramref name="type" /> 不可以是 <see cref="T:System.Reflection.Emit.TypeBuilder" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-276">
              <paramref name="type" /> cannot be a <see cref="T:System.Reflection.Emit.TypeBuilder" />.</span>
          </span>
          <span data-ttu-id="2d358-277">或不支援建立 <see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" /> 和 <see cref="T:System.RuntimeArgumentHandle" /> 類型或這些類型的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-277">-or-  Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span>
          </span>
          <span data-ttu-id="2d358-278">或包含 <paramref name="type" /> 的組件是以 <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" /> 建立的動態組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-278">-or-  The assembly that contains <paramref name="type" /> is a dynamic assembly that was created with <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="2d358-279">正在呼叫的建構函式擲回例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-279">The constructor being called throws an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="2d358-280">呼叫端沒有呼叫這個建構函式的權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-280">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="2d358-281">無法建立抽象類別的執行個體，或者這個成員曾被晚期繫結機制叫用過。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-281">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">
          <span data-ttu-id="2d358-282">COM 類型不是透過 <see cref="Overload:System.Type.GetTypeFromProgID" /> 或 <see cref="Overload:System.Type.GetTypeFromCLSID" /> 取得。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-282">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="2d358-283">找不到相符的公用建構函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-283">No matching public constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.COMException">
          <span data-ttu-id="2d358-284">
            <paramref name="type" /> 是 COM 物件，但用來取得類型的類別識別項無效，或已識別的類別未經登錄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-284">
              <paramref name="type" /> is a COM object but the class identifier used to obtain the type is invalid, or the identified class is not registered.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="2d358-285">
            <paramref name="type" /> 不是有效的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-285">
              <paramref name="type" /> is not a valid type.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="2d358-286">提供建立委派的執行個體時，呼叫 unmanaged 程式碼的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-286">for the ability to call unmanaged code when creating an instance of a delegate.</span>
          </span>
          <span data-ttu-id="2d358-287">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-287">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="2d358-288">用來存取非公用類型和成員，不論其授權集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-288">for accessing nonpublic types and members regardless of their grant set.</span>
          </span>
          <span data-ttu-id="2d358-289">相關聯的列舉型別： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-289">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static object CreateInstance (Type type, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateInstance(class System.Type type, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.Type,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateInstance(Type ^ type, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : Type * obj[] -&gt; obj" Usage="System.Activator.CreateInstance (type, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="2d358-290">要建立的物件類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-290">The type of object to create.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="2d358-291">引數的陣列，此引數在數目、順序和類型上符合要叫用的建構函式的參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-291">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span>
          </span>
          <span data-ttu-id="2d358-292">如果 <c>args</c> 是空陣列或 <see langword="null" />，會叫用未採用參數的建構函式 (預設的建構函式)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-292">If <c>args</c> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d358-293">使用最符合指定參數的建構函式，建立指定類型的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-293">Creates an instance of the specified type using the constructor that best matches the specified parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2d358-294">新建立物件的參考。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-294">A reference to the newly created object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d358-295">要叫用的建構函式必須是可存取，而且必須提供尋找最符合指定的引數清單。</span><span class="sxs-lookup"><span data-stu-id="2d358-295">The constructor to be invoked must be accessible and must provide the most specific match with the specified argument list.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2d358-296">從開始[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]，這個方法可以用來存取非公用型別，如果呼叫端被授與<xref:System.Security.Permissions.ReflectionPermission>與<xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType>旗標和包含非公用類型的組件的授權集如果是呼叫者的授與限制設定或子集。</span><span class="sxs-lookup"><span data-stu-id="2d358-296">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access nonpublic types if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types is restricted to the caller’s grant set or to a subset thereof.</span></span> <span data-ttu-id="2d358-297">(請參閱[反映的安全性考量](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)。)</span><span class="sxs-lookup"><span data-stu-id="2d358-297">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="2d358-298">若要使用這項功能，您的應用程式應將目標設為 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] (含) 以後版本。</span><span class="sxs-lookup"><span data-stu-id="2d358-298">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d358-299">下列範例會呼叫<xref:System.Activator.CreateInstance%28System.Type%2CSystem.Object%5B%5D%29>方法來建立<xref:System.String>物件。</span><span class="sxs-lookup"><span data-stu-id="2d358-299">The following example calls the  <xref:System.Activator.CreateInstance%28System.Type%2CSystem.Object%5B%5D%29> method to create a <xref:System.String> object.</span></span> <span data-ttu-id="2d358-300">它會呼叫<xref:System.String.%23ctor%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType>建構函式來具現化包含十個項目開始的第十四個位置的字元陣列中的字串。</span><span class="sxs-lookup"><span data-stu-id="2d358-300">It calls the <xref:System.String.%23ctor%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> constructor to instantiate a string that contains ten elements from a character array starting at the fourteenth position.</span></span>  
  
 [!code-csharp[System.Activator.CreateInstance#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.activator.createinstance/cs/CreateInstance5.cs#5)]
 [!code-vb[System.Activator.CreateInstance#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.activator.createinstance/vb/CreateInstance5.vb#5)]  
  
 <span data-ttu-id="2d358-301">下列範例會建立不規則的陣列，其元素為引數傳遞給<xref:System.String>建構函式。</span><span class="sxs-lookup"><span data-stu-id="2d358-301">The following example creates a jagged array whose elements are arguments to be passed to a <xref:System.String> constructor.</span></span> <span data-ttu-id="2d358-302">範例接著會傳遞至每個陣列<xref:System.Activator.CreateInstance%28System.Type%2CSystem.Object%5B%5D%29>方法來叫用適當的字串的建構函式。</span><span class="sxs-lookup"><span data-stu-id="2d358-302">The example then passes each array to the <xref:System.Activator.CreateInstance%28System.Type%2CSystem.Object%5B%5D%29> method to invoke the appropriate string constructor.</span></span>  
  
 [!code-csharp[System.Activator.CreateInstance#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.activator.createinstance/cs/createinstance2.cs#4)]
 [!code-vb[System.Activator.CreateInstance#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.activator.createinstance/vb/createinstance2.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2d358-303">
            <paramref name="type" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-303">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2d358-304">
            <paramref name="type" /> 不是 <see langword="RuntimeType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-304">
              <paramref name="type" /> is not a <see langword="RuntimeType" />.</span>
          </span>
          <span data-ttu-id="2d358-305">或 <paramref name="type" /> 是開放式泛型型別 (也就是 <see cref="P:System.Type.ContainsGenericParameters" /> 屬性會傳回 <see langword="true" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-305">-or-  <paramref name="type" /> is an open generic type (that is, the <see cref="P:System.Type.ContainsGenericParameters" /> property returns <see langword="true" />).</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="2d358-306">
            <paramref name="type" /> 不可以是 <see cref="T:System.Reflection.Emit.TypeBuilder" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-306">
              <paramref name="type" /> cannot be a <see cref="T:System.Reflection.Emit.TypeBuilder" />.</span>
          </span>
          <span data-ttu-id="2d358-307">或不支援建立 <see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" /> 和 <see cref="T:System.RuntimeArgumentHandle" /> 類型或這些類型的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-307">-or-  Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span>
          </span>
          <span data-ttu-id="2d358-308">或包含 <paramref name="type" /> 的組件是以 <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" /> 建立的動態組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-308">-or-  The assembly that contains <paramref name="type" /> is a dynamic assembly that was created with <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" />.</span>
          </span>
          <span data-ttu-id="2d358-309">或最符合 <paramref name="args" /> 的建構函式有 <see langword="varargs" /> 引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-309">-or-  The constructor that best matches <paramref name="args" /> has <see langword="varargs" /> arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="2d358-310">正在呼叫的建構函式擲回例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-310">The constructor being called throws an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="2d358-311">
            <block subset="none" type="note">
              <para> 在 [適用於 Windows 市集應用程式的 .NET] (http://go.microsoft.com/fwlink/?LinkID=247912) 或 [可攜式類別庫] (~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md) 中，改為攔截基底類別例外狀況 <see cref="T:System.MemberAccessException" />。</para>
            </block> 呼叫端沒有呼叫這個建構函式的權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-311">
              <block subset="none" type="note">
                <para> In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <see cref="T:System.MemberAccessException" />, instead.  </para>
              </block>  The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="2d358-312">無法建立抽象類別的執行個體，或者這個成員曾被晚期繫結機制叫用過。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-312">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">
          <span data-ttu-id="2d358-313">COM 類型不是透過 <see cref="Overload:System.Type.GetTypeFromProgID" /> 或 <see cref="Overload:System.Type.GetTypeFromCLSID" /> 取得。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-313">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="2d358-314">
            <block subset="none" type="note">
              <para> 在 [適用於 Windows 市集應用程式的 .NET] (http://go.microsoft.com/fwlink/?LinkID=247912) 或 [可攜式類別庫] (~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md) 中，改為攔截基底類別例外狀況 <see cref="T:System.MissingMemberException" />。</para>
            </block> 找不到相符的公用建構函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-314">
              <block subset="none" type="note">
                <para> In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <see cref="T:System.MissingMemberException" />, instead.  </para>
              </block>  No matching public constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.COMException">
          <span data-ttu-id="2d358-315">
            <paramref name="type" /> 是 COM 物件，但用來取得類型的類別識別項無效，或已識別的類別未經登錄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-315">
              <paramref name="type" /> is a COM object but the class identifier used to obtain the type is invalid, or the identified class is not registered.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="2d358-316">
            <paramref name="type" /> 不是有效的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-316">
              <paramref name="type" /> is not a valid type.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="2d358-317">提供建立委派的執行個體時，呼叫 unmanaged 程式碼的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-317">for the ability to call unmanaged code when creating an instance of a delegate.</span>
          </span>
          <span data-ttu-id="2d358-318">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-318">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="2d358-319">用來存取非公用型別，不論其授權集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-319">for accessing nonpublic types regardless of their grant set.</span>
          </span>
          <span data-ttu-id="2d358-320">相關聯的列舉型別： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-320">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (AppDomain domain, string assemblyName, string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(class System.AppDomain domain, string assemblyName, string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance (domain As AppDomain, assemblyName As String, typeName As String) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(AppDomain ^ domain, System::String ^ assemblyName, System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : AppDomain * string * string -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstance (domain, assemblyName, typeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.AppDomain" />
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="domain">
          <span data-ttu-id="2d358-321">建立名稱為 <c>typeName</c> 之類型的遠端網域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-321">The remote domain where the type named <c>typeName</c> is created.</span>
          </span>
        </param>
        <param name="assemblyName">
          <span data-ttu-id="2d358-322">組件的名稱，該組件包含要在其中搜尋名稱為 <c>typeName</c> 的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-322">The name of the assembly where the type named <c>typeName</c> is sought.</span>
          </span>
          <span data-ttu-id="2d358-323">如果 <c>assemblyName</c> 為 <see langword="null" />，則會搜尋執行中的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-323">If <c>assemblyName</c> is <see langword="null" />, the executing assembly is searched.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="2d358-324">慣用類型的完整名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-324">The fully qualified name of the preferred type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d358-325">使用具名組件和預設建構函式，建立已在指定遠端網域中具有指定名稱之類型的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-325">Creates an instance of the type whose name is specified in the specified remote domain, using the named assembly and default constructor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2d358-326">必須解除包裝的控制代碼，用來存取新建立的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-326">A handle that must be unwrapped to access the newly created instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d358-327">使用<xref:System.Activator.CreateInstance%2A>主機需要具有限制的安全性權限的應用程式定義域中執行程式碼。</span><span class="sxs-lookup"><span data-stu-id="2d358-327">Use <xref:System.Activator.CreateInstance%2A> when a host needs to execute code in an application domain that has restricted security permissions.</span></span>  
  
 <span data-ttu-id="2d358-328">使用<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>要未包裝的傳回值。</span><span class="sxs-lookup"><span data-stu-id="2d358-328">Use <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> to unwrap the return value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2d358-329">這個方法會使用<xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType>需要具有完全信任立即呼叫者。</span><span class="sxs-lookup"><span data-stu-id="2d358-329">This method uses <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> to require the immediate caller to have full trust.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2d358-330">
            <paramref name="typeName" /> 或 <paramref name="domain" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-330">
              <paramref name="typeName" /> or <paramref name="domain" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="2d358-331">找不到相符的公用建構函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-331">No matching public constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="2d358-332">在 <paramref name="assemblyName" /> 中找不到 <paramref name="typename" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-332">
              <paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="2d358-333">找不到 <paramref name="assemblyName" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-333">
              <paramref name="assemblyName" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="2d358-334">呼叫端沒有呼叫這個建構函式的權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-334">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="2d358-335">無法建立抽象型別的執行個體 (Instance)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-335">Cannot create an instance of an abstract type.</span>
          </span>
          <span data-ttu-id="2d358-336">或這個成員曾被晚期繫結機制叫用過。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-336">-or-  This member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="2d358-337">透過反映叫用並擲回例外狀況的建構函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-337">The constructor, which was invoked through reflection, threw an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">
          <span data-ttu-id="2d358-338">COM 類型不是透過 <see cref="Overload:System.Type.GetTypeFromProgID" /> 或 <see cref="Overload:System.Type.GetTypeFromCLSID" /> 取得。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-338">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="2d358-339">不支援建立 <see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" /> 和 <see cref="T:System.RuntimeArgumentHandle" /> 類型或這些類型的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-339">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="2d358-340">
            <paramref name="assemblyName" /> 不是有效的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-340">
              <paramref name="assemblyName" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="2d358-341">或目前載入的是通用語言執行平台 (CLR) 2.0 版或更新版本，但已針對比目前載入版本更新的 CLR 版本來編譯 <paramref name="assemblyName" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-341">-or-  The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span>
          </span>
          <span data-ttu-id="2d358-342">請注意，.NET Framework 2.0、3.0 和 3.5 版全部都會使用 CLR 2.0 版。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-342">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="2d358-343">使用兩個不同的辨識項載入組件或模組兩次。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-343">An assembly or module was loaded twice with two different evidences.</span>
          </span>
          <span data-ttu-id="2d358-344">或組件名稱或程式碼基底無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-344">-or-  The assembly name or code base is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="2d358-345">提供建立委派的執行個體時，呼叫 unmanaged 程式碼的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-345">for the ability to call unmanaged code when creating an instance of a delegate.</span>
          </span>
          <span data-ttu-id="2d358-346">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-346">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="2d358-347">提供所有類型成員上叫用作業的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-347">for the ability to invoke operations on all type members.</span>
          </span>
          <span data-ttu-id="2d358-348">相關聯的列舉型別： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-348">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="2d358-349">需要完全信任立即呼叫者。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-349">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="2d358-350">這個成員無法供部分信任或安全性透明程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-350">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (string assemblyName, string typeName, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(string assemblyName, string typeName, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.String,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance (assemblyName As String, typeName As String, activationAttributes As Object()) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(System::String ^ assemblyName, System::String ^ typeName, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : string * string * obj[] -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstance (assemblyName, typeName, activationAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="assemblyName">
          <span data-ttu-id="2d358-351">組件的名稱，該組件包含要在其中搜尋名稱為 <c>typeName</c> 的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-351">The name of the assembly where the type named <c>typeName</c> is sought.</span>
          </span>
          <span data-ttu-id="2d358-352">如果 <c>assemblyName</c> 為 <see langword="null" />，則會搜尋執行中的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-352">If <c>assemblyName</c> is <see langword="null" />, the executing assembly is searched.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="2d358-353">慣用類型的完整名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-353">The fully qualified name of the preferred type.</span>
          </span>
        </param>
        <param name="activationAttributes">
          <span data-ttu-id="2d358-354">一或多個屬性的陣列，此屬性可參與啟動過程。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-354">An array of one or more attributes that can participate in activation.</span>
          </span>
          <span data-ttu-id="2d358-355">陣列通常只會包含一個 <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> 物件來指定用以啟動遠端物件的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-355">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span>
          </span>
          <span data-ttu-id="2d358-356">此參數與啟動了用戶端的物件相關。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-356">This parameter is related to client-activated objects.</span>
          </span>
          <span data-ttu-id="2d358-357">用戶端啟動是一項舊的技術，保留目的在提供回溯相容性，不建議用於新的開發。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-357">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span>
          </span>
          <span data-ttu-id="2d358-358">分散式應用程式應該改用 Windows Communication Foundation。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-358">Distributed applications should instead use Windows Communication Foundation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d358-359">使用具名組件和預設建構函式，建立已具有指定名稱之類型的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-359">Creates an instance of the type whose name is specified, using the named assembly and default constructor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2d358-360">必須解除包裝的控制代碼，用來存取新建立的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-360">A handle that must be unwrapped to access the newly created instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d358-361">使用<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>要未包裝的傳回值。</span><span class="sxs-lookup"><span data-stu-id="2d358-361">Use <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> to unwrap the return value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2d358-362">從開始[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]，這個方法可以用來建立非公用型別，如果呼叫端被授與<xref:System.Security.Permissions.ReflectionPermission>與<xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType>旗標和非公用類型的授權集是否限制為呼叫端的授權集或其子集。</span><span class="sxs-lookup"><span data-stu-id="2d358-362">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to create nonpublic types if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the nonpublic types is restricted to the caller’s grant set or to a subset thereof.</span></span> <span data-ttu-id="2d358-363">(請參閱[反映的安全性考量](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)。)</span><span class="sxs-lookup"><span data-stu-id="2d358-363">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="2d358-364">若要使用這項功能，您的應用程式應將目標設為 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] (含) 以後版本。</span><span class="sxs-lookup"><span data-stu-id="2d358-364">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2d358-365">
            <paramref name="typeName" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-365">
              <paramref name="typeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="2d358-366">找不到相符的公用建構函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-366">No matching public constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="2d358-367">在 <paramref name="assemblyName" /> 中找不到 <paramref name="typename" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-367">
              <paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="2d358-368">找不到 <paramref name="assemblyName" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-368">
              <paramref name="assemblyName" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="2d358-369">呼叫端沒有呼叫這個建構函式的權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-369">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="2d358-370">無法建立抽象類別的執行個體，或者這個成員曾被晚期繫結機制叫用過。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-370">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">
          <span data-ttu-id="2d358-371">COM 類型不是透過 <see cref="Overload:System.Type.GetTypeFromProgID" /> 或 <see cref="Overload:System.Type.GetTypeFromCLSID" /> 取得。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-371">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="2d358-372">不支援建立 <see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" /> 和 <see cref="T:System.RuntimeArgumentHandle" /> 類型或這些類型的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-372">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span>
          </span>
          <span data-ttu-id="2d358-373">或 <paramref name="activationAttributes" /> 不是空的陣列，而建立中的類型不是衍生自 <see cref="T:System.MarshalByRefObject" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-373">-or-  <paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span>
          </span>
          <span data-ttu-id="2d358-374">或 <paramref name="activationAttributes" /> 不是 <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> 陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-374">-or-  <paramref name="activationAttributes" /> is not a <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" />  array.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="2d358-375">
            <paramref name="assemblyName" /> 不是有效的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-375">
              <paramref name="assemblyName" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="2d358-376">或目前載入的是通用語言執行平台 (CLR) 2.0 版或更新版本，但已針對比目前載入版本更新的 CLR 版本來編譯 <paramref name="assemblyName" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-376">-or-  The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span>
          </span>
          <span data-ttu-id="2d358-377">請注意，.NET Framework 2.0、3.0 和 3.5 版全部都會使用 CLR 2.0 版。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-377">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="2d358-378">使用兩個不同的辨識項載入組件或模組兩次。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-378">An assembly or module was loaded twice with two different evidences.</span>
          </span>
          <span data-ttu-id="2d358-379">或組件名稱或程式碼基底無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-379">-or-  The assembly name or code base is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="2d358-380">嘗試在 <paramref name="activationAttributes" /> 所指定之目標中進行遠端啟動時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-380">An error occurred when attempting remote activation in a target specified in <paramref name="activationAttributes" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="2d358-381">提供建立委派的執行個體時，呼叫 unmanaged 程式碼的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-381">for the ability to call unmanaged code when creating an instance of a delegate.</span>
          </span>
          <span data-ttu-id="2d358-382">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-382">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="2d358-383">用來存取非公用型別，不論其授權集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-383">for accessing nonpublic types regardless of their grant set.</span>
          </span>
          <span data-ttu-id="2d358-384">相關聯的列舉型別： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-384">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static object CreateInstance (Type type, object[] args, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateInstance(class System.Type type, object[] args, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.Type,System.Object[],System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateInstance(Type ^ type, cli::array &lt;System::Object ^&gt; ^ args, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : Type * obj[] * obj[] -&gt; obj" Usage="System.Activator.CreateInstance (type, args, activationAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="2d358-385">要建立的物件類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-385">The type of object to create.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="2d358-386">引數的陣列，此引數在數目、順序和類型上符合要叫用的建構函式的參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-386">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span>
          </span>
          <span data-ttu-id="2d358-387">如果 <c>args</c> 是空陣列或 <see langword="null" />，會叫用未採用參數的建構函式 (預設的建構函式)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-387">If <c>args</c> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span>
          </span>
        </param>
        <param name="activationAttributes">
          <span data-ttu-id="2d358-388">一或多個屬性的陣列，此屬性可參與啟動過程。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-388">An array of one or more attributes that can participate in activation.</span>
          </span>
          <span data-ttu-id="2d358-389">陣列通常只會包含一個 <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> 物件來指定用以啟動遠端物件的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-389">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span>
          </span>
          <span data-ttu-id="2d358-390">此參數與啟動了用戶端的物件相關。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-390">This parameter is related to client-activated objects.</span>
          </span>
          <span data-ttu-id="2d358-391">用戶端啟動是一項舊的技術，保留目的在提供回溯相容性，不建議用於新的開發。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-391">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span>
          </span>
          <span data-ttu-id="2d358-392">分散式應用程式應該改用 Windows Communication Foundation。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-392">Distributed applications should instead use Windows Communication Foundation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d358-393">使用最符合指定參數的建構函式，建立指定類型的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-393">Creates an instance of the specified type using the constructor that best matches the specified parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2d358-394">新建立物件的參考。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-394">A reference to the newly created object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d358-395">要叫用的建構函式必須是可存取，而且必須提供尋找最符合指定的引數清單。</span><span class="sxs-lookup"><span data-stu-id="2d358-395">The constructor to be invoked must be accessible and must provide the most specific match with the specified argument list.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2d358-396">從開始[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]，這個方法可以用來存取非公用型別，如果呼叫端被授與<xref:System.Security.Permissions.ReflectionPermission>與<xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType>旗標和包含非公用類型的組件的授權集如果是呼叫者的授與限制設定或子集。</span><span class="sxs-lookup"><span data-stu-id="2d358-396">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access nonpublic types if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types is restricted to the caller’s grant set or to a subset thereof.</span></span> <span data-ttu-id="2d358-397">(請參閱[反映的安全性考量](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)。)</span><span class="sxs-lookup"><span data-stu-id="2d358-397">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="2d358-398">若要使用這項功能，您的應用程式應將目標設為 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] (含) 以後版本。</span><span class="sxs-lookup"><span data-stu-id="2d358-398">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2d358-399">
            <paramref name="type" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-399">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2d358-400">
            <paramref name="type" /> 不是 <see langword="RuntimeType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-400">
              <paramref name="type" /> is not a <see langword="RuntimeType" />.</span>
          </span>
          <span data-ttu-id="2d358-401">或 <paramref name="type" /> 是開放式泛型型別 (也就是 <see cref="P:System.Type.ContainsGenericParameters" /> 屬性會傳回 <see langword="true" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-401">-or-  <paramref name="type" /> is an open generic type (that is, the <see cref="P:System.Type.ContainsGenericParameters" /> property returns <see langword="true" />).</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="2d358-402">
            <paramref name="type" /> 不可以是 <see cref="T:System.Reflection.Emit.TypeBuilder" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-402">
              <paramref name="type" /> cannot be a <see cref="T:System.Reflection.Emit.TypeBuilder" />.</span>
          </span>
          <span data-ttu-id="2d358-403">或不支援建立 <see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" /> 和 <see cref="T:System.RuntimeArgumentHandle" /> 類型或這些類型的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-403">-or-  Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span>
          </span>
          <span data-ttu-id="2d358-404">或 <paramref name="activationAttributes" /> 不是空的陣列，而建立中的類型不是衍生自 <see cref="T:System.MarshalByRefObject" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-404">-or-  <paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span>
          </span>
          <span data-ttu-id="2d358-405">或包含 <paramref name="type" /> 的組件是以 <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" /> 建立的動態組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-405">-or-  The assembly that contains <paramref name="type" /> is a dynamic assembly that was created with <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" />.</span>
          </span>
          <span data-ttu-id="2d358-406">或最符合 <paramref name="args" /> 的建構函式有 <see langword="varargs" /> 引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-406">-or-  The constructor that best matches <paramref name="args" /> has <see langword="varargs" /> arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="2d358-407">正在呼叫的建構函式擲回例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-407">The constructor being called throws an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="2d358-408">呼叫端沒有呼叫這個建構函式的權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-408">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="2d358-409">無法建立抽象類別的執行個體，或者這個成員曾被晚期繫結機制叫用過。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-409">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">
          <span data-ttu-id="2d358-410">COM 類型不是透過 <see cref="Overload:System.Type.GetTypeFromProgID" /> 或 <see cref="Overload:System.Type.GetTypeFromCLSID" /> 取得。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-410">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="2d358-411">找不到相符的公用建構函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-411">No matching public constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.COMException">
          <span data-ttu-id="2d358-412">
            <paramref name="type" /> 是 COM 物件，但用來取得類型的類別識別項無效，或已識別的類別未經登錄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-412">
              <paramref name="type" /> is a COM object but the class identifier used to obtain the type is invalid, or the identified class is not registered.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="2d358-413">
            <paramref name="type" /> 不是有效的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-413">
              <paramref name="type" /> is not a valid type.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="2d358-414">提供建立委派的執行個體時，呼叫 unmanaged 程式碼的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-414">for the ability to call unmanaged code when creating an instance of a delegate.</span>
          </span>
          <span data-ttu-id="2d358-415">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-415">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="2d358-416">用來存取非公用型別，不論其授權集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-416">for accessing nonpublic types regardless of their grant set.</span>
          </span>
          <span data-ttu-id="2d358-417">相關聯的列舉型別： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-417">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static object CreateInstance (Type type, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateInstance(class System.Type type, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateInstance(Type ^ type, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : Type * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo -&gt; obj" Usage="System.Activator.CreateInstance (type, bindingAttr, binder, args, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="2d358-418">要建立的物件類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-418">The type of object to create.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="2d358-419">零或多個位元旗標的組合，此位元旗標會影響 <c>type</c> 建構函式的搜尋。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-419">A combination of zero or more bit flags that affect the search for the <c>type</c> constructor.</span>
          </span>
          <span data-ttu-id="2d358-420">如果 <c>bindingAttr</c> 為零，則會針對公用建構函式執行區分大小寫的搜尋。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-420">If <c>bindingAttr</c> is zero, a case-sensitive search for public constructors is conducted.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="2d358-421">使用 <c>bindingAttr</c> 和 <c>args</c> 來搜尋及識別 <c>type</c> 建構函式的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-421">An object that uses <c>bindingAttr</c> and <c>args</c> to seek and identify the <c>type</c> constructor.</span>
          </span>
          <span data-ttu-id="2d358-422">如果 <c>Binder</c> 為 <see langword="null" />，則會使用預設 Binder。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-422">If <c>binder</c> is <see langword="null" />, the default binder is used.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="2d358-423">引數的陣列，此引數在數目、順序和類型上符合要叫用的建構函式的參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-423">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span>
          </span>
          <span data-ttu-id="2d358-424">如果 <c>args</c> 是空陣列或 <see langword="null" />，會叫用未採用參數的建構函式 (預設的建構函式)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-424">If <c>args</c> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="2d358-425">特定文化特性的資訊，其可控制 <c>args</c> 到型式類型 (為 <c>type</c> 建構函式宣告) 的強制轉型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-425">Culture-specific information that governs the coercion of <c>args</c> to the formal types declared for the <c>type</c> constructor.</span>
          </span>
          <span data-ttu-id="2d358-426">如果「文化特性 (Culture)」<c></c>是 <see langword="null" />，則使用目前執行緒的 <see cref="T:System.Globalization.CultureInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-426">If <c>culture</c> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d358-427">使用最符合指定參數的建構函式，建立指定類型的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-427">Creates an instance of the specified type using the constructor that best matches the specified parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2d358-428">新建立物件的參考。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-428">A reference to the newly created object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d358-429">要叫用的建構函式必須提供尋找最符合指定的引數清單的指定繫結和繫結屬性的條件約束。</span><span class="sxs-lookup"><span data-stu-id="2d358-429">The constructor to be invoked must provide the most specific match with the specified argument list under the constraints of the specified binder and binding attributes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2d358-430">從開始[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]，這個方法可以用來存取非公用類型和成員，如果呼叫端被授與<xref:System.Security.Permissions.ReflectionPermission>與<xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType>旗標和包含非公用類型和成員的組件的授權集如果是受限制若要呼叫者的授與集或子集。</span><span class="sxs-lookup"><span data-stu-id="2d358-430">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access nonpublic types and members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types and members is restricted to the caller’s grant set or to a subset thereof.</span></span> <span data-ttu-id="2d358-431">(請參閱[反映的安全性考量](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)。)</span><span class="sxs-lookup"><span data-stu-id="2d358-431">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="2d358-432">若要使用這項功能，您的應用程式應將目標設為 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] (含) 以後版本。</span><span class="sxs-lookup"><span data-stu-id="2d358-432">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2d358-433">
            <paramref name="type" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-433">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2d358-434">
            <paramref name="type" /> 不是 <see langword="RuntimeType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-434">
              <paramref name="type" /> is not a <see langword="RuntimeType" />.</span>
          </span>
          <span data-ttu-id="2d358-435">或 <paramref name="type" /> 是開放式泛型型別 (也就是 <see cref="P:System.Type.ContainsGenericParameters" /> 屬性會傳回 <see langword="true" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-435">-or-  <paramref name="type" /> is an open generic type (that is, the <see cref="P:System.Type.ContainsGenericParameters" /> property returns <see langword="true" />).</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="2d358-436">
            <paramref name="type" /> 不可以是 <see cref="T:System.Reflection.Emit.TypeBuilder" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-436">
              <paramref name="type" /> cannot be a <see cref="T:System.Reflection.Emit.TypeBuilder" />.</span>
          </span>
          <span data-ttu-id="2d358-437">或不支援建立 <see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" /> 和 <see cref="T:System.RuntimeArgumentHandle" /> 類型或這些類型的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-437">-or-  Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span>
          </span>
          <span data-ttu-id="2d358-438">或包含 <paramref name="type" /> 的組件是以 <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" /> 建立的動態組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-438">-or-  The assembly that contains <paramref name="type" /> is a dynamic assembly that was created with <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" />.</span>
          </span>
          <span data-ttu-id="2d358-439">或最符合 <paramref name="args" /> 的建構函式有 <see langword="varargs" /> 引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-439">-or-  The constructor that best matches <paramref name="args" /> has <see langword="varargs" /> arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="2d358-440">正在呼叫的建構函式擲回例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-440">The constructor being called throws an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="2d358-441">呼叫端沒有呼叫這個建構函式的權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-441">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="2d358-442">無法建立抽象類別的執行個體，或者這個成員曾被晚期繫結機制叫用過。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-442">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">
          <span data-ttu-id="2d358-443">COM 類型不是透過 <see cref="Overload:System.Type.GetTypeFromProgID" /> 或 <see cref="Overload:System.Type.GetTypeFromCLSID" /> 取得。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-443">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="2d358-444">找不到相符的建構函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-444">No matching constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.COMException">
          <span data-ttu-id="2d358-445">
            <paramref name="type" /> 是 COM 物件，但用來取得類型的類別識別項無效，或已識別的類別未經登錄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-445">
              <paramref name="type" /> is a COM object but the class identifier used to obtain the type is invalid, or the identified class is not registered.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="2d358-446">
            <paramref name="type" /> 不是有效的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-446">
              <paramref name="type" /> is not a valid type.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="2d358-447">提供建立委派的執行個體時，呼叫 unmanaged 程式碼的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-447">for the ability to call unmanaged code when creating an instance of a delegate.</span>
          </span>
          <span data-ttu-id="2d358-448">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-448">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="2d358-449">用來存取非公用類型和成員，不論其授權集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-449">for accessing nonpublic types and members regardless of their grant set.</span>
          </span>
          <span data-ttu-id="2d358-450">相關聯的列舉型別： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-450">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static object CreateInstance (Type type, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateInstance(class System.Type type, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateInstance(Type ^ type, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : Type * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo * obj[] -&gt; obj" Usage="System.Activator.CreateInstance (type, bindingAttr, binder, args, culture, activationAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="2d358-451">要建立的物件類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-451">The type of object to create.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="2d358-452">零或多個位元旗標的組合，此位元旗標會影響 <c>type</c> 建構函式的搜尋。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-452">A combination of zero or more bit flags that affect the search for the <c>type</c> constructor.</span>
          </span>
          <span data-ttu-id="2d358-453">如果 <c>bindingAttr</c> 為零，則會針對公用建構函式執行區分大小寫的搜尋。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-453">If <c>bindingAttr</c> is zero, a case-sensitive search for public constructors is conducted.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="2d358-454">使用 <c>bindingAttr</c> 和 <c>args</c> 來搜尋及識別 <c>type</c> 建構函式的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-454">An object that uses <c>bindingAttr</c> and <c>args</c> to seek and identify the <c>type</c> constructor.</span>
          </span>
          <span data-ttu-id="2d358-455">如果 <c>Binder</c> 為 <see langword="null" />，則會使用預設 Binder。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-455">If <c>binder</c> is <see langword="null" />, the default binder is used.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="2d358-456">引數的陣列，此引數在數目、順序和類型上符合要叫用的建構函式的參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-456">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span>
          </span>
          <span data-ttu-id="2d358-457">如果 <c>args</c> 是空陣列或 <see langword="null" />，會叫用未採用參數的建構函式 (預設的建構函式)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-457">If <c>args</c> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="2d358-458">特定文化特性的資訊，其可控制 <c>args</c> 到型式類型 (為 <c>type</c> 建構函式宣告) 的強制轉型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-458">Culture-specific information that governs the coercion of <c>args</c> to the formal types declared for the <c>type</c> constructor.</span>
          </span>
          <span data-ttu-id="2d358-459">如果「文化特性 (Culture)」<c></c>是 <see langword="null" />，則使用目前執行緒的 <see cref="T:System.Globalization.CultureInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-459">If <c>culture</c> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          </span>
        </param>
        <param name="activationAttributes">
          <span data-ttu-id="2d358-460">一或多個屬性的陣列，此屬性可參與啟動過程。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-460">An array of one or more attributes that can participate in activation.</span>
          </span>
          <span data-ttu-id="2d358-461">陣列通常只會包含一個 <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> 物件來指定用以啟動遠端物件的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-461">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span>
          </span>
          <span data-ttu-id="2d358-462">此參數與啟動了用戶端的物件相關。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-462">This parameter is related to client-activated objects.</span>
          </span>
          <span data-ttu-id="2d358-463">用戶端啟動是一項舊的技術，保留目的在提供回溯相容性，不建議用於新的開發。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-463">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span>
          </span>
          <span data-ttu-id="2d358-464">分散式應用程式應該改用 Windows Communication Foundation。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-464">Distributed applications should instead use Windows Communication Foundation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d358-465">使用最符合指定參數的建構函式，建立指定類型的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-465">Creates an instance of the specified type using the constructor that best matches the specified parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2d358-466">新建立物件的參考。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-466">A reference to the newly created object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d358-467">要叫用的建構函式必須提供尋找最符合指定的引數清單的指定繫結和繫結屬性的條件約束。</span><span class="sxs-lookup"><span data-stu-id="2d358-467">The constructor to be invoked must provide the most specific match with the specified argument list under the constraints of the specified binder and binding attributes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2d358-468">從開始[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]，這個方法可以用來存取非公用類型和成員，如果呼叫端被授與<xref:System.Security.Permissions.ReflectionPermission>與<xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType>旗標且如果非公用類型和成員的授權集只限制給呼叫者的授與集或子集。</span><span class="sxs-lookup"><span data-stu-id="2d358-468">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access nonpublic types and members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the nonpublic types and members is restricted to the caller’s grant set or to a subset thereof.</span></span> <span data-ttu-id="2d358-469">(請參閱[反映的安全性考量](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)。)</span><span class="sxs-lookup"><span data-stu-id="2d358-469">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="2d358-470">若要使用這項功能，您的應用程式應將目標設為 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] (含) 以後版本。</span><span class="sxs-lookup"><span data-stu-id="2d358-470">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2d358-471">
            <paramref name="type" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-471">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2d358-472">
            <paramref name="type" /> 不是 <see langword="RuntimeType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-472">
              <paramref name="type" /> is not a <see langword="RuntimeType" />.</span>
          </span>
          <span data-ttu-id="2d358-473">或 <paramref name="type" /> 是開放式泛型型別 (也就是 <see cref="P:System.Type.ContainsGenericParameters" /> 屬性會傳回 <see langword="true" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-473">-or-  <paramref name="type" /> is an open generic type (that is, the <see cref="P:System.Type.ContainsGenericParameters" /> property returns <see langword="true" />).</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="2d358-474">
            <paramref name="type" /> 不可以是 <see cref="T:System.Reflection.Emit.TypeBuilder" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-474">
              <paramref name="type" /> cannot be a <see cref="T:System.Reflection.Emit.TypeBuilder" />.</span>
          </span>
          <span data-ttu-id="2d358-475">或不支援建立 <see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" /> 和 <see cref="T:System.RuntimeArgumentHandle" /> 類型或這些類型的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-475">-or-  Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span>
          </span>
          <span data-ttu-id="2d358-476">或 <paramref name="activationAttributes" /> 不是空的陣列，而建立中的類型不是衍生自 <see cref="T:System.MarshalByRefObject" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-476">-or-  <paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span>
          </span>
          <span data-ttu-id="2d358-477">或包含 <paramref name="type" /> 的組件是以 <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" /> 建立的動態組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-477">-or-  The assembly that contains <paramref name="type" /> is a dynamic assembly that was created with <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" />.</span>
          </span>
          <span data-ttu-id="2d358-478">或最符合 <paramref name="args" /> 的建構函式有 <see langword="varargs" /> 引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-478">-or-  The constructor that best matches <paramref name="args" /> has <see langword="varargs" /> arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="2d358-479">正在呼叫的建構函式擲回例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-479">The constructor being called throws an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="2d358-480">呼叫端沒有呼叫這個建構函式的權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-480">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="2d358-481">無法建立抽象類別的執行個體，或者這個成員曾被晚期繫結機制叫用過。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-481">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">
          <span data-ttu-id="2d358-482">COM 類型不是透過 <see cref="Overload:System.Type.GetTypeFromProgID" /> 或 <see cref="Overload:System.Type.GetTypeFromCLSID" /> 取得。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-482">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="2d358-483">找不到相符的建構函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-483">No matching constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.COMException">
          <span data-ttu-id="2d358-484">
            <paramref name="type" /> 是 COM 物件，但用來取得類型的類別識別項無效，或已識別的類別未經登錄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-484">
              <paramref name="type" /> is a COM object but the class identifier used to obtain the type is invalid, or the identified class is not registered.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="2d358-485">
            <paramref name="type" /> 不是有效的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-485">
              <paramref name="type" /> is not a valid type.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="2d358-486">用於提供辨識項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-486">for supplying evidence.</span>
          </span>
          <span data-ttu-id="2d358-487">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-487">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="2d358-488">用來存取非公用類型和成員，不論其授權集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-488">for accessing nonpublic types and members regardless of their grant set.</span>
          </span>
          <span data-ttu-id="2d358-489">相關聯的列舉型別： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-489">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (string assemblyName, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(string assemblyName, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(System::String ^ assemblyName, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : string * string * bool * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo * obj[] -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstance (assemblyName, typeName, ignoreCase, bindingAttr, binder, args, culture, activationAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="assemblyName">
          <span data-ttu-id="2d358-490">組件的名稱，該組件包含要在其中搜尋名稱為 <c>typeName</c> 的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-490">The name of the assembly where the type named <c>typeName</c> is sought.</span>
          </span>
          <span data-ttu-id="2d358-491">如果 <c>assemblyName</c> 為 <see langword="null" />，則會搜尋執行中的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-491">If <c>assemblyName</c> is <see langword="null" />, the executing assembly is searched.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="2d358-492">慣用類型的完整名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-492">The fully qualified name of the preferred type.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="2d358-493">
            <see langword="true" /> 指定 <c>typeName</c> 的搜尋不區分大小寫，<see langword="false" /> 指定搜尋區分大小寫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-493">
              <see langword="true" /> to specify that the search for <c>typeName</c> is not case-sensitive; <see langword="false" /> to specify that the search is case-sensitive.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="2d358-494">零或多個位元旗標的組合，此位元旗標會影響 <c>typeName</c> 建構函式的搜尋。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-494">A combination of zero or more bit flags that affect the search for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="2d358-495">如果 <c>bindingAttr</c> 為零，則會針對公用建構函式執行區分大小寫的搜尋。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-495">If <c>bindingAttr</c> is zero, a case-sensitive search for public constructors is conducted.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="2d358-496">使用 <c>bindingAttr</c> 和 <c>args</c> 來搜尋及識別 <c>typeName</c> 建構函式的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-496">An object that uses <c>bindingAttr</c> and <c>args</c> to seek and identify the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="2d358-497">如果 <c>Binder</c> 為 <see langword="null" />，則會使用預設 Binder。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-497">If <c>binder</c> is <see langword="null" />, the default binder is used.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="2d358-498">引數的陣列，此引數在數目、順序和類型上符合要叫用的建構函式的參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-498">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span>
          </span>
          <span data-ttu-id="2d358-499">如果 <c>args</c> 是空陣列或 <see langword="null" />，會叫用未採用參數的建構函式 (預設的建構函式)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-499">If <c>args</c> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="2d358-500">特定文化特性的資訊，其可控制 <c>args</c> 到型式類型 (為 <c>typeName</c> 建構函式宣告) 的強制轉型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-500">Culture-specific information that governs the coercion of <c>args</c> to the formal types declared for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="2d358-501">如果「文化特性 (Culture)」<c></c>是 <see langword="null" />，則使用目前執行緒的 <see cref="T:System.Globalization.CultureInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-501">If <c>culture</c> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          </span>
        </param>
        <param name="activationAttributes">
          <span data-ttu-id="2d358-502">一或多個屬性的陣列，此屬性可參與啟動過程。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-502">An array of one or more attributes that can participate in activation.</span>
          </span>
          <span data-ttu-id="2d358-503">陣列通常只會包含一個 <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> 物件來指定用以啟動遠端物件的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-503">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span>
          </span>
          <span data-ttu-id="2d358-504">此參數與啟動了用戶端的物件相關。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-504">This parameter is related to client-activated objects.</span>
          </span>
          <span data-ttu-id="2d358-505">用戶端啟動是一項舊的技術，保留目的在提供回溯相容性，不建議用於新的開發。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-505">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span>
          </span>
          <span data-ttu-id="2d358-506">分散式應用程式應該改用 Windows Communication Foundation。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-506">Distributed applications should instead use Windows Communication Foundation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d358-507">使用具名組件和最符合指定參數的建構函式，建立已具有指定名稱之類型的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-507">Creates an instance of the type whose name is specified, using the named assembly and the constructor that best matches the specified parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2d358-508">必須解除包裝的控制代碼，用來存取新建立的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-508">A handle that must be unwrapped to access the newly created instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d358-509">使用<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>要未包裝的傳回值。</span><span class="sxs-lookup"><span data-stu-id="2d358-509">Use <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> to unwrap the return value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2d358-510">從開始[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]，這個方法可以用來建立非公用類型和成員，如果呼叫端被授與<xref:System.Security.Permissions.ReflectionPermission>與<xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType>旗標和包含非公用類型和成員的組件的授權集如果是受限制若要呼叫者的授與集或子集。</span><span class="sxs-lookup"><span data-stu-id="2d358-510">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to create nonpublic types and members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types and members is restricted to the caller’s grant set or to a subset thereof.</span></span> <span data-ttu-id="2d358-511">(請參閱[反映的安全性考量](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)42d9dc2a-8fcc-4ff3-b002-4ff260ef3dc5。)</span><span class="sxs-lookup"><span data-stu-id="2d358-511">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)42d9dc2a-8fcc-4ff3-b002-4ff260ef3dc5.)</span></span>  
>   
>  <span data-ttu-id="2d358-512">若要使用這項功能，您的應用程式應將目標設為 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] (含) 以後版本。</span><span class="sxs-lookup"><span data-stu-id="2d358-512">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2d358-513">
            <paramref name="typeName" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-513">
              <paramref name="typeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="2d358-514">找不到相符的建構函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-514">No matching constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="2d358-515">在 <paramref name="assemblyName" /> 中找不到 <paramref name="typename" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-515">
              <paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="2d358-516">找不到 <paramref name="assemblyName" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-516">
              <paramref name="assemblyName" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="2d358-517">呼叫端沒有呼叫這個建構函式的權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-517">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="2d358-518">無法建立抽象類別的執行個體，或者這個成員曾被晚期繫結機制叫用過。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-518">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="2d358-519">透過反映叫用並擲回例外狀況的建構函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-519">The constructor, which was invoked through reflection, threw an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">
          <span data-ttu-id="2d358-520">COM 類型不是透過 <see cref="Overload:System.Type.GetTypeFromProgID" /> 或 <see cref="Overload:System.Type.GetTypeFromCLSID" /> 取得。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-520">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="2d358-521">不支援建立 <see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" /> 和 <see cref="T:System.RuntimeArgumentHandle" /> 類型或這些類型的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-521">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span>
          </span>
          <span data-ttu-id="2d358-522">或 <paramref name="activationAttributes" /> 不是空的陣列，而建立中的類型不是衍生自 <see cref="T:System.MarshalByRefObject" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-522">-or-  <paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span>
          </span>
          <span data-ttu-id="2d358-523">或最符合 <paramref name="args" /> 的建構函式有 <see langword="varargs" /> 引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-523">-or-  The constructor that best matches <paramref name="args" /> has <see langword="varargs" /> arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="2d358-524">
            <paramref name="assemblyName" /> 不是有效的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-524">
              <paramref name="assemblyName" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="2d358-525">或目前載入的是通用語言執行平台 (CLR) 2.0 版或更新版本，但已針對比目前載入版本更新的 CLR 版本來編譯 <paramref name="assemblyName" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-525">-or-  The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span>
          </span>
          <span data-ttu-id="2d358-526">請注意，.NET Framework 2.0、3.0 和 3.5 版全部都會使用 CLR 2.0 版。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-526">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="2d358-527">使用兩個不同的辨識項載入組件或模組兩次。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-527">An assembly or module was loaded twice with two different evidences.</span>
          </span>
          <span data-ttu-id="2d358-528">或組件名稱或程式碼基底無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-528">-or-  The assembly name or code base is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="2d358-529">提供建立委派的執行個體時，呼叫 unmanaged 程式碼的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-529">for the ability to call unmanaged code when creating an instance of a delegate.</span>
          </span>
          <span data-ttu-id="2d358-530">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-530">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="2d358-531">用來存取非公用類型和成員，不論其授權集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-531">for accessing nonpublic types and members regardless of their grant set.</span>
          </span>
          <span data-ttu-id="2d358-532">相關聯的列舉型別： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-532">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (AppDomain domain, string assemblyName, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(class System.AppDomain domain, string assemblyName, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(AppDomain ^ domain, System::String ^ assemblyName, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : AppDomain * string * string * bool * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo * obj[] -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstance (domain, assemblyName, typeName, ignoreCase, bindingAttr, binder, args, culture, activationAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.AppDomain" />
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="domain">
          <span data-ttu-id="2d358-533">建立名稱為 <c>typeName</c> 之類型的網域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-533">The domain where the type named <c>typeName</c> is created.</span>
          </span>
        </param>
        <param name="assemblyName">
          <span data-ttu-id="2d358-534">組件的名稱，該組件包含要在其中搜尋名稱為 <c>typeName</c> 的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-534">The name of the assembly where the type named <c>typeName</c> is sought.</span>
          </span>
          <span data-ttu-id="2d358-535">如果 <c>assemblyName</c> 為 <see langword="null" />，則會搜尋執行中的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-535">If <c>assemblyName</c> is <see langword="null" />, the executing assembly is searched.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="2d358-536">慣用類型的完整名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-536">The fully qualified name of the preferred type.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="2d358-537">
            <see langword="true" /> 指定 <c>typeName</c> 的搜尋不區分大小寫，<see langword="false" /> 指定搜尋區分大小寫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-537">
              <see langword="true" /> to specify that the search for <c>typeName</c> is not case-sensitive; <see langword="false" /> to specify that the search is case-sensitive.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="2d358-538">零或多個位元旗標的組合，此位元旗標會影響 <c>typeName</c> 建構函式的搜尋。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-538">A combination of zero or more bit flags that affect the search for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="2d358-539">如果 <c>bindingAttr</c> 為零，則會針對公用建構函式執行區分大小寫的搜尋。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-539">If <c>bindingAttr</c> is zero, a case-sensitive search for public constructors is conducted.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="2d358-540">使用 <c>bindingAttr</c> 和 <c>args</c> 來搜尋及識別 <c>typeName</c> 建構函式的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-540">An object that uses <c>bindingAttr</c> and <c>args</c> to seek and identify the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="2d358-541">如果 <c>Binder</c> 為 <see langword="null" />，則會使用預設 Binder。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-541">If <c>binder</c> is <see langword="null" />, the default binder is used.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="2d358-542">引數的陣列，此引數在數目、順序和類型上符合要叫用的建構函式的參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-542">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span>
          </span>
          <span data-ttu-id="2d358-543">如果 <c>args</c> 是空陣列或 <see langword="null" />，會叫用未採用參數的建構函式 (預設的建構函式)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-543">If <c>args</c> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="2d358-544">特定文化特性的資訊，其可控制 <c>args</c> 到型式類型 (為 <c>typeName</c> 建構函式宣告) 的強制轉型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-544">Culture-specific information that governs the coercion of <c>args</c> to the formal types declared for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="2d358-545">如果「文化特性 (Culture)」<c></c>是 <see langword="null" />，則使用目前執行緒的 <see cref="T:System.Globalization.CultureInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-545">If <c>culture</c> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          </span>
        </param>
        <param name="activationAttributes">
          <span data-ttu-id="2d358-546">一或多個屬性的陣列，此屬性可參與啟動過程。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-546">An array of one or more attributes that can participate in activation.</span>
          </span>
          <span data-ttu-id="2d358-547">陣列通常只會包含一個 <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> 物件來指定用以啟動遠端物件的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-547">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span>
          </span>
          <span data-ttu-id="2d358-548">此參數與啟動了用戶端的物件相關。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-548">This parameter is related to client-activated objects.</span>
          </span>
          <span data-ttu-id="2d358-549">用戶端啟動是一項舊的技術，保留目的在提供回溯相容性，不建議用於新的開發。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-549">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span>
          </span>
          <span data-ttu-id="2d358-550">分散式應用程式應該改用 Windows Communication Foundation。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-550">Distributed applications should instead use Windows Communication Foundation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d358-551">使用最符合指定參數的具名組件和建構函式，建立已在指定遠端網域中具有指定名稱之類型的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-551">Creates an instance of the type whose name is specified in the specified remote domain, using the named assembly and the constructor that best matches the specified parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2d358-552">必須解除包裝的控制代碼，用來存取新建立的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-552">A handle that must be unwrapped to access the newly created instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d358-553">使用<xref:System.Activator.CreateInstance%2A>主機需要具有限制的安全性權限的應用程式定義域中執行程式碼。</span><span class="sxs-lookup"><span data-stu-id="2d358-553">Use <xref:System.Activator.CreateInstance%2A> when a host needs to execute code in an application domain that has restricted security permissions.</span></span>  
  
 <span data-ttu-id="2d358-554">使用<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>要未包裝的傳回值。</span><span class="sxs-lookup"><span data-stu-id="2d358-554">Use <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> to unwrap the return value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2d358-555">這個方法會使用<xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType>需要具有完全信任立即呼叫者。</span><span class="sxs-lookup"><span data-stu-id="2d358-555">This method uses <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> to require the immediate caller to have full trust.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2d358-556">
            <paramref name="domain" /> 或 <paramref name="typeName" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-556">
              <paramref name="domain" /> or <paramref name="typeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="2d358-557">找不到相符的建構函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-557">No matching constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="2d358-558">在 <paramref name="assemblyName" /> 中找不到 <paramref name="typename" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-558">
              <paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="2d358-559">找不到 <paramref name="assemblyName" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-559">
              <paramref name="assemblyName" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="2d358-560">呼叫端沒有呼叫這個建構函式的權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-560">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="2d358-561">無法建立抽象類別的執行個體，或者這個成員曾被晚期繫結機制叫用過。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-561">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="2d358-562">透過反映叫用並擲回例外狀況的建構函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-562">The constructor, which was invoked through reflection, threw an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">
          <span data-ttu-id="2d358-563">COM 類型不是透過 <see cref="Overload:System.Type.GetTypeFromProgID" /> 或 <see cref="Overload:System.Type.GetTypeFromCLSID" /> 取得。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-563">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="2d358-564">不支援建立 <see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" /> 和 <see cref="T:System.RuntimeArgumentHandle" /> 類型或這些類型的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-564">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span>
          </span>
          <span data-ttu-id="2d358-565">或 <paramref name="activationAttributes" /> 不是空的陣列，而建立中的類型不是衍生自 <see cref="T:System.MarshalByRefObject" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-565">-or-  <paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span>
          </span>
          <span data-ttu-id="2d358-566">或最符合 <paramref name="args" /> 的建構函式有 <see langword="varargs" /> 引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-566">-or-  The constructor that best matches <paramref name="args" /> has <see langword="varargs" /> arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="2d358-567">
            <paramref name="assemblyName" /> 不是有效的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-567">
              <paramref name="assemblyName" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="2d358-568">或目前載入的是通用語言執行平台 (CLR) 2.0 版或更新版本，但已針對比目前載入版本更新的 CLR 版本來編譯 <paramref name="assemblyName" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-568">-or-  The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span>
          </span>
          <span data-ttu-id="2d358-569">請注意，.NET Framework 2.0、3.0 和 3.5 版全部都會使用 CLR 2.0 版。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-569">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="2d358-570">使用兩個不同的辨識項載入組件或模組兩次。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-570">An assembly or module was loaded twice with two different evidences.</span>
          </span>
          <span data-ttu-id="2d358-571">或組件名稱或程式碼基底無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-571">-or-  The assembly name or code base is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="2d358-572">需要完全信任立即呼叫者。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-572">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="2d358-573">這個成員無法供部分信任或安全性透明程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-573">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="2d358-574">提供建立委派的執行個體時，呼叫 unmanaged 程式碼的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-574">for the ability to call unmanaged code when creating an instance of a delegate.</span>
          </span>
          <span data-ttu-id="2d358-575">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-575">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="2d358-576">提供所有類型成員上叫用作業的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-576">for the ability to invoke operations on all type members.</span>
          </span>
          <span data-ttu-id="2d358-577">相關聯的列舉型別： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-577">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (string assemblyName, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes, System.Security.Policy.Evidence securityInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(string assemblyName, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes, class System.Security.Policy.Evidence securityInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(System::String ^ assemblyName, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes, System::Security::Policy::Evidence ^ securityInfo);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : string * string * bool * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo * obj[] * System.Security.Policy.Evidence -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstance (assemblyName, typeName, ignoreCase, bindingAttr, binder, args, culture, activationAttributes, securityInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Methods which use evidence to sandbox are obsolete and will be removed in a future release of the .NET Framework. Please use an overload of CreateInstance which does not take an Evidence parameter. See http://go.microsoft.com/fwlink/?LinkID=155570 for more information.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
        <Parameter Name="securityInfo" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="assemblyName">
          <span data-ttu-id="2d358-578">組件的名稱，該組件包含要在其中搜尋名稱為 <c>typeName</c> 的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-578">The name of the assembly where the type named <c>typeName</c> is sought.</span>
          </span>
          <span data-ttu-id="2d358-579">如果 <c>assemblyName</c> 為 <see langword="null" />，則會搜尋執行中的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-579">If <c>assemblyName</c> is <see langword="null" />, the executing assembly is searched.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="2d358-580">慣用類型的完整名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-580">The fully qualified name of the preferred type.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="2d358-581">
            <see langword="true" /> 指定 <c>typeName</c> 的搜尋不區分大小寫，<see langword="false" /> 指定搜尋區分大小寫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-581">
              <see langword="true" /> to specify that the search for <c>typeName</c> is not case-sensitive; <see langword="false" /> to specify that the search is case-sensitive.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="2d358-582">零或多個位元旗標的組合，此位元旗標會影響 <c>typeName</c> 建構函式的搜尋。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-582">A combination of zero or more bit flags that affect the search for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="2d358-583">如果 <c>bindingAttr</c> 為零，則會針對公用建構函式執行區分大小寫的搜尋。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-583">If <c>bindingAttr</c> is zero, a case-sensitive search for public constructors is conducted.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="2d358-584">使用 <c>bindingAttr</c> 和 <c>args</c> 來搜尋及識別 <c>typeName</c> 建構函式的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-584">An object that uses <c>bindingAttr</c> and <c>args</c> to seek and identify the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="2d358-585">如果 <c>Binder</c> 為 <see langword="null" />，則會使用預設 Binder。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-585">If <c>binder</c> is <see langword="null" />, the default binder is used.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="2d358-586">引數的陣列，此引數在數目、順序和類型上符合要叫用的建構函式的參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-586">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span>
          </span>
          <span data-ttu-id="2d358-587">如果 <c>args</c> 是空陣列或 <see langword="null" />，會叫用未採用參數的建構函式 (預設的建構函式)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-587">If <c>args</c> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="2d358-588">特定文化特性的資訊，其可控制 <c>args</c> 到型式類型 (為 <c>typeName</c> 建構函式宣告) 的強制轉型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-588">Culture-specific information that governs the coercion of <c>args</c> to the formal types declared for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="2d358-589">如果「文化特性 (Culture)」<c></c>是 <see langword="null" />，則使用目前執行緒的 <see cref="T:System.Globalization.CultureInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-589">If <c>culture</c> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          </span>
        </param>
        <param name="activationAttributes">
          <span data-ttu-id="2d358-590">一或多個屬性的陣列，此屬性可參與啟動過程。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-590">An array of one or more attributes that can participate in activation.</span>
          </span>
          <span data-ttu-id="2d358-591">陣列通常只會包含一個 <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> 物件來指定用以啟動遠端物件的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-591">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span>
          </span>
          <span data-ttu-id="2d358-592">此參數與啟動了用戶端的物件相關。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-592">This parameter is related to client-activated objects.</span>
          </span>
          <span data-ttu-id="2d358-593">用戶端啟動是一項舊的技術，保留目的在提供回溯相容性，不建議用於新的開發。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-593">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span>
          </span>
          <span data-ttu-id="2d358-594">分散式應用程式應該改用 Windows Communication Foundation。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-594">Distributed applications should instead use Windows Communication Foundation.</span>
          </span>
        </param>
        <param name="securityInfo">
          <span data-ttu-id="2d358-595">用來執行安全性原則決策和授權程式碼使用權限的資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-595">Information used to make security policy decisions and grant code permissions.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d358-596">使用具名組件和最符合指定參數的建構函式，建立已具有指定名稱之類型的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-596">Creates an instance of the type whose name is specified, using the named assembly and the constructor that best matches the specified parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2d358-597">必須解除包裝的控制代碼，用來存取新建立的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-597">A handle that must be unwrapped to access the newly created instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d358-598">使用<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>要未包裝的傳回值。</span><span class="sxs-lookup"><span data-stu-id="2d358-598">Use <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> to unwrap the return value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2d358-599">從開始[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]，這個方法可以用來建立非公用類型和成員，如果呼叫端被授與<xref:System.Security.Permissions.ReflectionPermission>與<xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType>旗標和包含非公用類型和成員的組件的授權集如果是受限制若要呼叫者的授與集或子集。</span><span class="sxs-lookup"><span data-stu-id="2d358-599">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to create nonpublic types and members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types and members is restricted to the caller’s grant set or to a subset thereof.</span></span> <span data-ttu-id="2d358-600">(請參閱[反映的安全性考量](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)。)</span><span class="sxs-lookup"><span data-stu-id="2d358-600">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="2d358-601">若要使用這項功能，您的應用程式應將目標設為 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] (含) 以後版本。</span><span class="sxs-lookup"><span data-stu-id="2d358-601">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2d358-602">
            <paramref name="typeName" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-602">
              <paramref name="typeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="2d358-603">找不到相符的建構函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-603">No matching constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="2d358-604">在 <paramref name="assemblyName" /> 中找不到 <paramref name="typename" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-604">
              <paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="2d358-605">找不到 <paramref name="assemblyName" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-605">
              <paramref name="assemblyName" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="2d358-606">呼叫端沒有呼叫這個建構函式的權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-606">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="2d358-607">無法建立抽象類別的執行個體，或者這個成員曾被晚期繫結機制叫用過。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-607">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="2d358-608">透過反映叫用並擲回例外狀況的建構函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-608">The constructor, which was invoked through reflection, threw an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">
          <span data-ttu-id="2d358-609">COM 類型不是透過 <see cref="Overload:System.Type.GetTypeFromProgID" /> 或 <see cref="Overload:System.Type.GetTypeFromCLSID" /> 取得。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-609">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="2d358-610">不支援建立 <see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" /> 和 <see cref="T:System.RuntimeArgumentHandle" /> 類型或這些類型的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-610">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span>
          </span>
          <span data-ttu-id="2d358-611">或 <paramref name="activationAttributes" /> 不是空的陣列，而建立中的類型不是衍生自 <see cref="T:System.MarshalByRefObject" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-611">-or-  <paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span>
          </span>
          <span data-ttu-id="2d358-612">或最符合 <paramref name="args" /> 的建構函式有 <see langword="varargs" /> 引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-612">-or-  The constructor that best matches <paramref name="args" /> has <see langword="varargs" /> arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="2d358-613">
            <paramref name="assemblyName" /> 不是有效的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-613">
              <paramref name="assemblyName" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="2d358-614">或目前載入的是通用語言執行平台 (CLR) 2.0 版或更新版本，但已針對比目前載入版本更新的 CLR 版本來編譯 <paramref name="assemblyName" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-614">-or-  The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span>
          </span>
          <span data-ttu-id="2d358-615">請注意，.NET Framework 2.0、3.0 和 3.5 版全部都會使用 CLR 2.0 版。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-615">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="2d358-616">使用兩個不同的辨識項載入組件或模組兩次。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-616">An assembly or module was loaded twice with two different evidences.</span>
          </span>
          <span data-ttu-id="2d358-617">或組件名稱或程式碼基底無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-617">-or-  The assembly name or code base is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="2d358-618">提供建立委派的執行個體時，呼叫 unmanaged 程式碼的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-618">for the ability to call unmanaged code when creating an instance of a delegate.</span>
          </span>
          <span data-ttu-id="2d358-619">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-619">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="2d358-620">用來存取非公用類型和成員，不論其授權集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-620">for accessing nonpublic types and members regardless of their grant set.</span>
          </span>
          <span data-ttu-id="2d358-621">相關聯的列舉型別： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-621">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (AppDomain domain, string assemblyName, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes, System.Security.Policy.Evidence securityAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(class System.AppDomain domain, string assemblyName, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes, class System.Security.Policy.Evidence securityAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(AppDomain ^ domain, System::String ^ assemblyName, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes, System::Security::Policy::Evidence ^ securityAttributes);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : AppDomain * string * string * bool * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo * obj[] * System.Security.Policy.Evidence -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstance (domain, assemblyName, typeName, ignoreCase, bindingAttr, binder, args, culture, activationAttributes, securityAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Methods which use evidence to sandbox are obsolete and will be removed in a future release of the .NET Framework. Please use an overload of CreateInstance which does not take an Evidence parameter. See http://go.microsoft.com/fwlink/?LinkID=155570 for more information.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.AppDomain" />
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
        <Parameter Name="securityAttributes" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="domain">
          <span data-ttu-id="2d358-622">建立名稱為 <c>typeName</c> 之類型的網域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-622">The domain where the type named <c>typeName</c> is created.</span>
          </span>
        </param>
        <param name="assemblyName">
          <span data-ttu-id="2d358-623">組件的名稱，該組件包含要在其中搜尋名稱為 <c>typeName</c> 的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-623">The name of the assembly where the type named <c>typeName</c> is sought.</span>
          </span>
          <span data-ttu-id="2d358-624">如果 <c>assemblyName</c> 為 <see langword="null" />，則會搜尋執行中的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-624">If <c>assemblyName</c> is <see langword="null" />, the executing assembly is searched.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="2d358-625">慣用類型的完整名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-625">The fully qualified name of the preferred type.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="2d358-626">
            <see langword="true" /> 指定 <c>typeName</c> 的搜尋不區分大小寫，<see langword="false" /> 指定搜尋區分大小寫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-626">
              <see langword="true" /> to specify that the search for <c>typeName</c> is not case-sensitive; <see langword="false" /> to specify that the search is case-sensitive.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="2d358-627">零或多個位元旗標的組合，此位元旗標會影響 <c>typeName</c> 建構函式的搜尋。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-627">A combination of zero or more bit flags that affect the search for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="2d358-628">如果 <c>bindingAttr</c> 為零，則會針對公用建構函式執行區分大小寫的搜尋。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-628">If <c>bindingAttr</c> is zero, a case-sensitive search for public constructors is conducted.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="2d358-629">使用 <c>bindingAttr</c> 和 <c>args</c> 來搜尋及識別 <c>typeName</c> 建構函式的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-629">An object that uses <c>bindingAttr</c> and <c>args</c> to seek and identify the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="2d358-630">如果 <c>Binder</c> 為 <see langword="null" />，則會使用預設 Binder。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-630">If <c>binder</c> is <see langword="null" />, the default binder is used.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="2d358-631">引數的陣列，此引數在數目、順序和類型上符合要叫用的建構函式的參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-631">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span>
          </span>
          <span data-ttu-id="2d358-632">如果 <c>args</c> 是空陣列或 <see langword="null" />，會叫用未採用參數的建構函式 (預設的建構函式)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-632">If <c>args</c> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="2d358-633">特定文化特性的資訊，其可控制 <c>args</c> 到型式類型 (為 <c>typeName</c> 建構函式宣告) 的強制轉型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-633">Culture-specific information that governs the coercion of <c>args</c> to the formal types declared for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="2d358-634">如果「文化特性 (Culture)」<c></c>是 <see langword="null" />，則使用目前執行緒的 <see cref="T:System.Globalization.CultureInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-634">If <c>culture</c> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          </span>
        </param>
        <param name="activationAttributes">
          <span data-ttu-id="2d358-635">一或多個屬性的陣列，此屬性可參與啟動過程。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-635">An array of one or more attributes that can participate in activation.</span>
          </span>
          <span data-ttu-id="2d358-636">這通常是包含單一 <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> 物件的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-636">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object.</span>
          </span>
          <span data-ttu-id="2d358-637">
            <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> 會指定啟動遠端物件所需的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-637">The <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> specifies the URL that is required to activate a remote object.</span>
          </span>
        </param>
        <param name="securityAttributes">
          <span data-ttu-id="2d358-638">用來執行安全性原則決策和授權程式碼使用權限的資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-638">Information used to make security policy decisions and grant code permissions.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d358-639">使用最符合指定參數的具名組件和建構函式，建立已在指定遠端網域中具有指定名稱之類型的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-639">Creates an instance of the type whose name is specified in the specified remote domain, using the named assembly and the constructor that best matches the specified parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2d358-640">必須解除包裝的控制代碼，用來存取新建立的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-640">A handle that must be unwrapped to access the newly created instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d358-641">使用<xref:System.Activator.CreateInstance%2A>主機需要具有限制的安全性權限的應用程式定義域中執行程式碼。</span><span class="sxs-lookup"><span data-stu-id="2d358-641">Use <xref:System.Activator.CreateInstance%2A> when a host needs to execute code in an application domain that has restricted security permissions.</span></span>  
  
 <span data-ttu-id="2d358-642">使用<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>要未包裝的傳回值。</span><span class="sxs-lookup"><span data-stu-id="2d358-642">Use <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> to unwrap the return value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2d358-643">這個方法會使用<xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType>需要具有完全信任立即呼叫者。</span><span class="sxs-lookup"><span data-stu-id="2d358-643">This method uses <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> to require the immediate caller to have full trust.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2d358-644">
            <paramref name="domain" /> 或 <paramref name="typeName" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-644">
              <paramref name="domain" /> or <paramref name="typeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="2d358-645">找不到相符的建構函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-645">No matching constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="2d358-646">在 <paramref name="assemblyName" /> 中找不到 <paramref name="typename" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-646">
              <paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="2d358-647">找不到 <paramref name="assemblyName" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-647">
              <paramref name="assemblyName" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="2d358-648">呼叫端沒有呼叫這個建構函式的權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-648">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="2d358-649">無法建立抽象類別的執行個體，或者這個成員曾被晚期繫結機制叫用過。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-649">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="2d358-650">透過反映叫用並擲回例外狀況的建構函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-650">The constructor, which was invoked through reflection, threw an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">
          <span data-ttu-id="2d358-651">COM 類型不是透過 <see cref="Overload:System.Type.GetTypeFromProgID" /> 或 <see cref="Overload:System.Type.GetTypeFromCLSID" /> 取得。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-651">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="2d358-652">不支援建立 <see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" /> 和 <see cref="T:System.RuntimeArgumentHandle" /> 類型或這些類型的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-652">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span>
          </span>
          <span data-ttu-id="2d358-653">或 <paramref name="activationAttributes" /> 不是空的陣列，而建立中的類型不是衍生自 <see cref="T:System.MarshalByRefObject" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-653">-or-  <paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span>
          </span>
          <span data-ttu-id="2d358-654">或最符合 <paramref name="args" /> 的建構函式有 <see langword="varargs" /> 引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-654">-or-  The constructor that best matches <paramref name="args" /> has <see langword="varargs" /> arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="2d358-655">
            <paramref name="assemblyName" /> 不是有效的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-655">
              <paramref name="assemblyName" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="2d358-656">或目前載入的是通用語言執行平台 (CLR) 2.0 版或更新版本，但已針對比目前載入版本更新的 CLR 版本來編譯 <paramref name="assemblyName" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-656">-or-  The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span>
          </span>
          <span data-ttu-id="2d358-657">請注意，.NET Framework 2.0、3.0 和 3.5 版全部都會使用 CLR 2.0 版。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-657">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="2d358-658">使用兩個不同的辨識項載入組件或模組兩次。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-658">An assembly or module was loaded twice with two different evidences.</span>
          </span>
          <span data-ttu-id="2d358-659">或組件名稱或程式碼基底無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-659">-or-  The assembly name or code base is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="2d358-660">提供建立委派的執行個體時，呼叫 unmanaged 程式碼的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-660">for the ability to call unmanaged code when creating an instance of a delegate.</span>
          </span>
          <span data-ttu-id="2d358-661">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-661">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="2d358-662">提供所有類型成員上叫用作業的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-662">for the ability to invoke operations on all type members.</span>
          </span>
          <span data-ttu-id="2d358-663">相關聯的列舉型別： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-663">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="2d358-664">需要完全信任立即呼叫者。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-664">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="2d358-665">這個成員無法供部分信任或安全性透明程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-665">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T CreateInstance&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T CreateInstance&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance``1" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance(Of T) () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static T CreateInstance();" />
      <MemberSignature Language="F#" Value="static member CreateInstance : unit -&gt; 'T" Usage="System.Activator.CreateInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="2d358-666">要建立的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-666">The type to create.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="2d358-667">使用無參數建構函式，建立由指定之泛型型別參數所指定之類型的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-667">Creates an instance of the type designated by the specified generic type parameter, using the parameterless constructor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2d358-668">新建立物件的參考。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-668">A reference to the newly created object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d358-669"><xref:System.Activator.CreateInstance%60%601>編譯器會使用泛型的方法來實作的型別參數所指定的類型具現化。</span><span class="sxs-lookup"><span data-stu-id="2d358-669">The <xref:System.Activator.CreateInstance%60%601> generic method is used by compilers to implement the instantiation of types specified by type parameters.</span></span> <span data-ttu-id="2d358-670">例如，在下列泛型方法的實作`new T()`(`gcnew T()` c + + 中) 會使用<xref:System.Activator.CreateInstance%60%601>泛型方法。</span><span class="sxs-lookup"><span data-stu-id="2d358-670">For example, in the following generic method, the implementation of `new T()` (`gcnew T()` in C++) uses the <xref:System.Activator.CreateInstance%60%601> generic method.</span></span>  
  
 [!code-cpp[System.Activation.CreateInstance~~1#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.activation.createinstance~~1/cpp/remarks.cpp#1)]
 [!code-csharp[System.Activation.CreateInstance~~1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.activation.createinstance~~1/cs/remarks.cs#1)]
 [!code-vb[System.Activation.CreateInstance~~1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.activation.createinstance~~1/vb/remarks.vb#1)]  
  
 <span data-ttu-id="2d358-671">一般情況下，沒有任何使用<xref:System.Activator.CreateInstance%60%601>應用程式中的泛型方法的程式碼，因為必須在編譯時期已知的型別。</span><span class="sxs-lookup"><span data-stu-id="2d358-671">In general, there is no use for the <xref:System.Activator.CreateInstance%60%601> generic method in application code, because the type must be known at compile time.</span></span> <span data-ttu-id="2d358-672">如果在編譯時期已知的型別，可以使用標準具現化語法 (`new`在 C# 中，運算子`New`在 Visual Basic 中`gcnew`c + + 中)。</span><span class="sxs-lookup"><span data-stu-id="2d358-672">If the type is known at compile time, normal instantiation syntax can be used (`new` operator in C#, `New` in Visual Basic, `gcnew` in C++).</span></span> <span data-ttu-id="2d358-673">如果不在編譯時期已知類型，您可以呼叫的非泛型多載<xref:System.Activator.CreateInstance%2A>。</span><span class="sxs-lookup"><span data-stu-id="2d358-673">If the type is not known at compile time, you can call a non-generic overload of <xref:System.Activator.CreateInstance%2A>.</span></span>  
  
 <span data-ttu-id="2d358-674">沒有任何多載<xref:System.Activator.CreateInstance%60%601>泛型方法的引數清單，因為非泛型多載的<xref:System.Activator.CreateInstance%2A>已經提供晚期繫結的建構函式解析。</span><span class="sxs-lookup"><span data-stu-id="2d358-674">There are no overloads of the <xref:System.Activator.CreateInstance%60%601> generic method that take argument lists, because the non-generic overloads of <xref:System.Activator.CreateInstance%2A> already provide late-bound constructor resolution.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="2d358-675">
            <block subset="none" type="note">
              <para> 在 [適用於 Windows 市集應用程式的 .NET] (http://go.microsoft.com/fwlink/?LinkID=247912) 或 [可攜式類別庫] (~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md) 中，改為攔截基底類別例外狀況 <see cref="T:System.MissingMemberException" />。</para>
            </block> 針對 <paramref name="T" /> 指定的類型沒有無參數建構函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-675">
              <block subset="none" type="note">
                <para> In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <see cref="T:System.MissingMemberException" />, instead.  </para>
              </block>  The type that is specified for <paramref name="T" /> does not have a parameterless constructor.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateInstanceFrom">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2d358-676">使用具名組件檔案和最符合指定參數的建構函式，建立已具有指定名稱之類型的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-676">Creates an instance of the type whose name is specified, using the named assembly file and the constructor that best matches the specified parameters.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (string assemblyFile, string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstanceFrom(string assemblyFile, string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstanceFrom(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstanceFrom (assemblyFile As String, typeName As String) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstanceFrom(System::String ^ assemblyFile, System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="static member CreateInstanceFrom : string * string -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstanceFrom (assemblyFile, typeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyFile">
          <span data-ttu-id="2d358-677">檔案的名稱，該檔案包含要在其中搜尋名稱為 <c>typeName</c> 之類型的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-677">The name of a file that contains an assembly where the type named <c>typeName</c> is sought.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="2d358-678">慣用類型的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-678">The name of the preferred type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d358-679">使用具名組件檔案和預設建構函式，建立已具有指定名稱之類型的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-679">Creates an instance of the type whose name is specified, using the named assembly file and default constructor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2d358-680">必須解除包裝的控制代碼，用來存取新建立的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-680">A handle that must be unwrapped to access the newly created instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d358-681">使用<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>要未包裝的傳回值的方法。</span><span class="sxs-lookup"><span data-stu-id="2d358-681">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="2d358-682">其他可能會叫用方法所擲回的例外狀況的相關資訊，請參閱例外狀況區段<xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType>和<xref:System.Activator.CreateInstance%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="2d358-682">For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d358-683">下列程式碼範例示範如何呼叫<xref:System.Activator.CreateInstanceFrom%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="2d358-683">The following code example demonstrates how to call the <xref:System.Activator.CreateInstanceFrom%2A> method.</span></span> <span data-ttu-id="2d358-684">這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Activator>類別。</span><span class="sxs-lookup"><span data-stu-id="2d358-684">This code example is part of a larger example provided for the <xref:System.Activator> class.</span></span>  
  
 [!code-cpp[ActivatorX#3](~/samples/snippets/cpp/VS_Snippets_CLR/ActivatorX/cpp/ActivatorX.cpp#3)]
 [!code-csharp[ActivatorX#3](~/samples/snippets/csharp/VS_Snippets_CLR/ActivatorX/cs/ActivatorX.cs#3)]
 [!code-vb[ActivatorX#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/ActivatorX/VB/ActivatorX.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2d358-685">
            <paramref name="typeName" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-685">
              <paramref name="typeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="2d358-686">找不到相符的公用建構函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-686">No matching public constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="2d358-687">在 <paramref name="assemblyFile" /> 中找不到 <paramref name="typename" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-687">
              <paramref name="typename" /> was not found in <paramref name="assemblyFile" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="2d358-688">找不到 <paramref name="assemblyFile" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-688">
              <paramref name="assemblyFile" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="2d358-689">呼叫端沒有呼叫這個建構函式的權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-689">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="2d358-690">無法建立抽象類別的執行個體，或者這個成員曾被晚期繫結機制叫用過。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-690">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="2d358-691">透過反映叫用並擲回例外狀況的建構函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-691">The constructor, which was invoked through reflection, threw an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="2d358-692">呼叫端具有所要求的 <see cref="T:System.Security.Permissions.FileIOPermission" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-692">The caller does have the required <see cref="T:System.Security.Permissions.FileIOPermission" />.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="2d358-693">
            <paramref name="assemblyFile" /> 不是有效的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-693">
              <paramref name="assemblyFile" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="2d358-694">或目前載入的是通用語言執行平台 (CLR) 2.0 版或更新版本，但已針對比目前載入版本更新的 CLR 版本來編譯 <paramref name="assemblyName" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-694">-or-  The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span>
          </span>
          <span data-ttu-id="2d358-695">請注意，.NET Framework 2.0、3.0 和 3.5 版全部都會使用 CLR 2.0 版。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-695">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="2d358-696">提供建立委派的執行個體時，呼叫 unmanaged 程式碼的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-696">for the ability to call unmanaged code when creating an instance of a delegate.</span>
          </span>
          <span data-ttu-id="2d358-697">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-697">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="2d358-698">若要搜尋的目錄路徑，並讀取其內容的功能。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-698">for the ability to search directory paths and read their contents.</span>
          </span>
          <span data-ttu-id="2d358-699">列舉型別相關聯：<see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />和 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-699">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="2d358-700">用來存取非公用型別，不論其授權集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-700">for accessing nonpublic types regardless of their grant set.</span>
          </span>
          <span data-ttu-id="2d358-701">相關聯的列舉型別： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-701">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (AppDomain domain, string assemblyFile, string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstanceFrom(class System.AppDomain domain, string assemblyFile, string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstanceFrom (domain As AppDomain, assemblyFile As String, typeName As String) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstanceFrom(AppDomain ^ domain, System::String ^ assemblyFile, System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="static member CreateInstanceFrom : AppDomain * string * string -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstanceFrom (domain, assemblyFile, typeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.AppDomain" />
        <Parameter Name="assemblyFile" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="domain">
          <span data-ttu-id="2d358-702">建立名稱為 <c>typeName</c> 之類型的遠端網域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-702">The remote domain where the type named <c>typeName</c> is created.</span>
          </span>
        </param>
        <param name="assemblyFile">
          <span data-ttu-id="2d358-703">檔案的名稱，該檔案包含要在其中搜尋名稱為 <c>typeName</c> 之類型的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-703">The name of a file that contains an assembly where the type named <c>typeName</c> is sought.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="2d358-704">慣用類型的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-704">The name of the preferred type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d358-705">使用具名組件檔案和預設建構函式，建立已在指定遠端網域中指定名稱之類型的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-705">Creates an instance of the type whose name is specified in the specified remote domain, using the named assembly file and default constructor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2d358-706">必須解除包裝的控制代碼，用來存取新建立的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-706">A handle that must be unwrapped to access the newly created instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d358-707">使用<xref:System.Activator.CreateInstanceFrom%2A>主機需要具有限制的安全性權限的應用程式定義域中執行程式碼。</span><span class="sxs-lookup"><span data-stu-id="2d358-707">Use <xref:System.Activator.CreateInstanceFrom%2A> when a host needs to execute code in an application domain that has restricted security permissions.</span></span>  
  
 <span data-ttu-id="2d358-708">使用<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>要未包裝的傳回值的方法。</span><span class="sxs-lookup"><span data-stu-id="2d358-708">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2d358-709">這個方法會使用<xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType>需要具有完全信任立即呼叫者。</span><span class="sxs-lookup"><span data-stu-id="2d358-709">This method uses <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> to require the immediate caller to have full trust.</span></span>  
  
 <span data-ttu-id="2d358-710">其他可能會叫用方法所擲回的例外狀況的相關資訊，請參閱例外狀況區段<xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType>和<xref:System.Activator.CreateInstance%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="2d358-710">For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2d358-711">
            <paramref name="domain" /> 或 <paramref name="typeName" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-711">
              <paramref name="domain" /> or <paramref name="typeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="2d358-712">找不到相符的公用建構函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-712">No matching public constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="2d358-713">在 <paramref name="assemblyFile" /> 中找不到 <paramref name="typename" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-713">
              <paramref name="typename" /> was not found in <paramref name="assemblyFile" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="2d358-714">找不到 <paramref name="assemblyFile" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-714">
              <paramref name="assemblyFile" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="2d358-715">呼叫端沒有呼叫這個建構函式的權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-715">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="2d358-716">無法建立抽象類別的執行個體，或者這個成員曾被晚期繫結機制叫用過。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-716">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="2d358-717">透過反映叫用並擲回例外狀況的建構函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-717">The constructor, which was invoked through reflection, threw an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="2d358-718">呼叫端具有所要求的 <see cref="T:System.Security.Permissions.FileIOPermission" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-718">The caller does have the required <see cref="T:System.Security.Permissions.FileIOPermission" />.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="2d358-719">
            <paramref name="assemblyFile" /> 不是有效的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-719">
              <paramref name="assemblyFile" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="2d358-720">或目前載入的是通用語言執行平台 (CLR) 2.0 版或更新版本，但已針對比目前載入版本更新的 CLR 版本來編譯 <paramref name="assemblyName" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-720">-or-  The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span>
          </span>
          <span data-ttu-id="2d358-721">請注意，.NET Framework 2.0、3.0 和 3.5 版全部都會使用 CLR 2.0 版。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-721">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="2d358-722">提供建立委派的執行個體時，呼叫 unmanaged 程式碼的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-722">for the ability to call unmanaged code when creating an instance of a delegate.</span>
          </span>
          <span data-ttu-id="2d358-723">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-723">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="2d358-724">若要搜尋的目錄路徑，並讀取其內容的功能。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-724">for the ability to search directory paths and read their contents.</span>
          </span>
          <span data-ttu-id="2d358-725">列舉型別相關聯：<see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />和 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-725">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="2d358-726">需要完全信任立即呼叫者。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-726">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="2d358-727">這個成員無法供部分信任或安全性透明程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-727">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (string assemblyFile, string typeName, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstanceFrom(string assemblyFile, string typeName, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstanceFrom (assemblyFile As String, typeName As String, activationAttributes As Object()) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstanceFrom(System::String ^ assemblyFile, System::String ^ typeName, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberSignature Language="F#" Value="static member CreateInstanceFrom : string * string * obj[] -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstanceFrom (assemblyFile, typeName, activationAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="assemblyFile">
          <span data-ttu-id="2d358-728">檔案的名稱，該檔案包含要在其中搜尋名稱為 <c>typeName</c> 之類型的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-728">The name of a file that contains an assembly where the type named <c>typeName</c> is sought.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="2d358-729">慣用類型的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-729">The name of the preferred type.</span>
          </span>
        </param>
        <param name="activationAttributes">
          <span data-ttu-id="2d358-730">一或多個屬性的陣列，此屬性可參與啟動過程。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-730">An array of one or more attributes that can participate in activation.</span>
          </span>
          <span data-ttu-id="2d358-731">陣列通常只會包含一個 <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> 物件來指定用以啟動遠端物件的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-731">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span>
          </span>
          <span data-ttu-id="2d358-732">此參數與啟動了用戶端的物件相關。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-732">This parameter is related to client-activated objects.</span>
          </span>
          <span data-ttu-id="2d358-733">用戶端啟動是一項舊的技術，保留目的在提供回溯相容性，不建議用於新的開發。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-733">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span>
          </span>
          <span data-ttu-id="2d358-734">分散式應用程式應該改用 Windows Communication Foundation。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-734">Distributed applications should instead use Windows Communication Foundation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d358-735">使用具名組件檔案和預設建構函式，建立已具有指定名稱之類型的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-735">Creates an instance of the type whose name is specified, using the named assembly file and default constructor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2d358-736">必須解除包裝的控制代碼，用來存取新建立的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-736">A handle that must be unwrapped to access the newly created instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d358-737">使用<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>要未包裝的傳回值的方法。</span><span class="sxs-lookup"><span data-stu-id="2d358-737">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="2d358-738">其他可能會叫用方法所擲回的例外狀況的相關資訊，請參閱例外狀況區段<xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType>和<xref:System.Activator.CreateInstance%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="2d358-738">For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2d358-739">
            <paramref name="typeName" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-739">
              <paramref name="typeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="2d358-740">找不到相符的公用建構函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-740">No matching public constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="2d358-741">在 <paramref name="assemblyFile" /> 中找不到 <paramref name="typename" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-741">
              <paramref name="typename" /> was not found in <paramref name="assemblyFile" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="2d358-742">找不到 <paramref name="assemblyFile" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-742">
              <paramref name="assemblyFile" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="2d358-743">呼叫端沒有呼叫這個建構函式的權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-743">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="2d358-744">無法建立抽象類別的執行個體，或者這個成員曾被晚期繫結機制叫用過。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-744">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="2d358-745">透過反映叫用並擲回例外狀況的建構函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-745">The constructor, which was invoked through reflection, threw an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="2d358-746">
            <paramref name="activationAttributes" /> 不是空的陣列，而建立中的類型不是衍生自 <see cref="T:System.MarshalByRefObject" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-746">
              <paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="2d358-747">呼叫端具有所要求的 <see cref="T:System.Security.Permissions.FileIOPermission" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-747">The caller does have the required <see cref="T:System.Security.Permissions.FileIOPermission" />.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="2d358-748">
            <paramref name="assemblyFile" /> 不是有效的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-748">
              <paramref name="assemblyFile" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="2d358-749">或目前載入的是通用語言執行平台 (CLR) 2.0 版或更新版本，但已針對比目前載入版本更新的 CLR 版本來編譯 <paramref name="assemblyName" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-749">-or-  The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span>
          </span>
          <span data-ttu-id="2d358-750">請注意，.NET Framework 2.0、3.0 和 3.5 版全部都會使用 CLR 2.0 版。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-750">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="2d358-751">提供建立委派的執行個體時，呼叫 unmanaged 程式碼的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-751">for the ability to call unmanaged code when creating an instance of a delegate.</span>
          </span>
          <span data-ttu-id="2d358-752">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-752">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="2d358-753">若要搜尋的目錄路徑，並讀取其內容的功能。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-753">for the ability to search directory paths and read their contents.</span>
          </span>
          <span data-ttu-id="2d358-754">列舉型別相關聯：<see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />和 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-754">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="2d358-755">用來存取非公用型別，不論其授權集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-755">for accessing nonpublic types regardless of their grant set.</span>
          </span>
          <span data-ttu-id="2d358-756">相關聯的列舉型別： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-756">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (string assemblyFile, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstanceFrom(string assemblyFile, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstanceFrom(System::String ^ assemblyFile, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberSignature Language="F#" Value="static member CreateInstanceFrom : string * string * bool * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo * obj[] -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstanceFrom (assemblyFile, typeName, ignoreCase, bindingAttr, binder, args, culture, activationAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="assemblyFile">
          <span data-ttu-id="2d358-757">檔案的名稱，該檔案包含要在其中搜尋名稱為 <c>typeName</c> 之類型的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-757">The name of a file that contains an assembly where the type named <c>typeName</c> is sought.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="2d358-758">慣用類型的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-758">The name of the preferred type.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="2d358-759">
            <see langword="true" /> 指定 <c>typeName</c> 的搜尋不區分大小寫，<see langword="false" /> 指定搜尋區分大小寫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-759">
              <see langword="true" /> to specify that the search for <c>typeName</c> is not case-sensitive; <see langword="false" /> to specify that the search is case-sensitive.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="2d358-760">零或多個位元旗標的組合，此位元旗標會影響 <c>typeName</c> 建構函式的搜尋。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-760">A combination of zero or more bit flags that affect the search for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="2d358-761">如果 <c>bindingAttr</c> 為零，則會針對公用建構函式執行區分大小寫的搜尋。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-761">If <c>bindingAttr</c> is zero, a case-sensitive search for public constructors is conducted.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="2d358-762">使用 <c>bindingAttr</c> 和 <c>args</c> 來搜尋及識別 <c>typeName</c> 建構函式的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-762">An object that uses <c>bindingAttr</c> and <c>args</c> to seek and identify the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="2d358-763">如果 <c>Binder</c> 為 <see langword="null" />，則會使用預設 Binder。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-763">If <c>binder</c> is <see langword="null" />, the default binder is used.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="2d358-764">引數的陣列，此引數在數目、順序和類型上符合要叫用的建構函式的參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-764">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span>
          </span>
          <span data-ttu-id="2d358-765">如果 <c>args</c> 是空陣列或 <see langword="null" />，會叫用未採用參數的建構函式 (預設的建構函式)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-765">If <c>args</c> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="2d358-766">特定文化特性的資訊，其可控制 <c>args</c> 到型式類型 (為 <c>typeName</c> 建構函式宣告) 的強制轉型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-766">Culture-specific information that governs the coercion of <c>args</c> to the formal types declared for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="2d358-767">如果「文化特性 (Culture)」<c></c>是 <see langword="null" />，則使用目前執行緒的 <see cref="T:System.Globalization.CultureInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-767">If <c>culture</c> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          </span>
        </param>
        <param name="activationAttributes">
          <span data-ttu-id="2d358-768">一或多個屬性的陣列，此屬性可參與啟動過程。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-768">An array of one or more attributes that can participate in activation.</span>
          </span>
          <span data-ttu-id="2d358-769">陣列通常只會包含一個 <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> 物件來指定用以啟動遠端物件的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-769">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span>
          </span>
          <span data-ttu-id="2d358-770">此參數與啟動了用戶端的物件相關。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-770">This parameter is related to client-activated objects.</span>
          </span>
          <span data-ttu-id="2d358-771">用戶端啟動是一項舊的技術，保留目的在提供回溯相容性，不建議用於新的開發。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-771">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span>
          </span>
          <span data-ttu-id="2d358-772">分散式應用程式應該改用 Windows Communication Foundation。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-772">Distributed applications should instead use Windows Communication Foundation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d358-773">使用具名組件檔案和最符合指定參數的建構函式，建立已具有指定名稱之類型的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-773">Creates an instance of the type whose name is specified, using the named assembly file and the constructor that best matches the specified parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2d358-774">必須解除包裝的控制代碼，用來存取新建立的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-774">A handle that must be unwrapped to access the newly created instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d358-775">使用<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>要未包裝的傳回值的方法。</span><span class="sxs-lookup"><span data-stu-id="2d358-775">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="2d358-776">其他可能會叫用方法所擲回的例外狀況的相關資訊，請參閱例外狀況區段<xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType>和<xref:System.Activator.CreateInstance%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="2d358-776">For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2d358-777">
            <paramref name="typeName" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-777">
              <paramref name="typeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="2d358-778">找不到相符的建構函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-778">No matching constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="2d358-779">在 <paramref name="assemblyFile" /> 中找不到 <paramref name="typename" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-779">
              <paramref name="typename" /> was not found in <paramref name="assemblyFile" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="2d358-780">找不到 <paramref name="assemblyFile" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-780">
              <paramref name="assemblyFile" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="2d358-781">呼叫端沒有呼叫這個建構函式的權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-781">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="2d358-782">無法建立抽象類別的執行個體，或者這個成員曾被晚期繫結機制叫用過。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-782">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="2d358-783">透過反映叫用並擲回例外狀況的建構函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-783">The constructor, which was invoked through reflection, threw an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="2d358-784">呼叫端沒有所要求的 <see cref="T:System.Security.Permissions.FileIOPermission" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-784">The caller does not have the required <see cref="T:System.Security.Permissions.FileIOPermission" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="2d358-785">
            <paramref name="activationAttributes" /> 不是空的陣列，而建立中的類型不是衍生自 <see cref="T:System.MarshalByRefObject" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-785">
              <paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="2d358-786">
            <paramref name="assemblyFile" /> 不是有效的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-786">
              <paramref name="assemblyFile" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="2d358-787">或目前載入的是通用語言執行平台 (CLR) 2.0 版或更新版本，但已針對比目前載入版本更新的 CLR 版本來編譯 <paramref name="assemblyName" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-787">-or-  The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span>
          </span>
          <span data-ttu-id="2d358-788">請注意，.NET Framework 2.0、3.0 和 3.5 版全部都會使用 CLR 2.0 版。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-788">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="2d358-789">提供建立委派的執行個體時，呼叫 unmanaged 程式碼的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-789">for the ability to call unmanaged code when creating an instance of a delegate.</span>
          </span>
          <span data-ttu-id="2d358-790">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-790">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="2d358-791">若要搜尋的目錄路徑，並讀取其內容的功能。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-791">for the ability to search directory paths and read their contents.</span>
          </span>
          <span data-ttu-id="2d358-792">列舉型別相關聯：<see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />和 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-792">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="2d358-793">用來存取非公用類型和成員，不論其授權集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-793">for accessing nonpublic types and members regardless of their grant set.</span>
          </span>
          <span data-ttu-id="2d358-794">相關聯的列舉型別： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-794">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (AppDomain domain, string assemblyFile, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstanceFrom(class System.AppDomain domain, string assemblyFile, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstanceFrom(AppDomain ^ domain, System::String ^ assemblyFile, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberSignature Language="F#" Value="static member CreateInstanceFrom : AppDomain * string * string * bool * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo * obj[] -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstanceFrom (domain, assemblyFile, typeName, ignoreCase, bindingAttr, binder, args, culture, activationAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.AppDomain" />
        <Parameter Name="assemblyFile" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="domain">
          <span data-ttu-id="2d358-795">建立名稱為 <c>typeName</c> 之類型的遠端網域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-795">The remote domain where the type named <c>typeName</c> is created.</span>
          </span>
        </param>
        <param name="assemblyFile">
          <span data-ttu-id="2d358-796">檔案的名稱，該檔案包含要在其中搜尋名稱為 <c>typeName</c> 之類型的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-796">The name of a file that contains an assembly where the type named <c>typeName</c> is sought.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="2d358-797">慣用類型的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-797">The name of the preferred type.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="2d358-798">
            <see langword="true" /> 指定 <c>typeName</c> 的搜尋不區分大小寫，<see langword="false" /> 指定搜尋區分大小寫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-798">
              <see langword="true" /> to specify that the search for <c>typeName</c> is not case-sensitive; <see langword="false" /> to specify that the search is case-sensitive.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="2d358-799">零或多個位元旗標的組合，此位元旗標會影響 <c>typeName</c> 建構函式的搜尋。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-799">A combination of zero or more bit flags that affect the search for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="2d358-800">如果 <c>bindingAttr</c> 為零，則會針對公用建構函式執行區分大小寫的搜尋。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-800">If <c>bindingAttr</c> is zero, a case-sensitive search for public constructors is conducted.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="2d358-801">使用 <c>bindingAttr</c> 和 <c>args</c> 來搜尋及識別 <c>typeName</c> 建構函式的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-801">An object that uses <c>bindingAttr</c> and <c>args</c> to seek and identify the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="2d358-802">如果 <c>Binder</c> 為 <see langword="null" />，則會使用預設 Binder。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-802">If <c>binder</c> is <see langword="null" />, the default binder is used.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="2d358-803">引數的陣列，此引數在數目、順序和類型上符合要叫用的建構函式的參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-803">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span>
          </span>
          <span data-ttu-id="2d358-804">如果 <c>args</c> 是空陣列或 <see langword="null" />，會叫用未採用參數的建構函式 (預設的建構函式)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-804">If <c>args</c> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="2d358-805">特定文化特性的資訊，其可控制 <c>args</c> 到型式類型 (為 <c>typeName</c> 建構函式宣告) 的強制轉型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-805">Culture-specific information that governs the coercion of <c>args</c> to the formal types declared for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="2d358-806">如果「文化特性 (Culture)」<c></c>是 <see langword="null" />，則使用目前執行緒的 <see cref="T:System.Globalization.CultureInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-806">If <c>culture</c> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          </span>
        </param>
        <param name="activationAttributes">
          <span data-ttu-id="2d358-807">一或多個屬性的陣列，此屬性可參與啟動過程。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-807">An array of one or more attributes that can participate in activation.</span>
          </span>
          <span data-ttu-id="2d358-808">陣列通常只會包含一個 <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> 物件來指定用以啟動遠端物件的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-808">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span>
          </span>
          <span data-ttu-id="2d358-809">此參數與啟動了用戶端的物件相關。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-809">This parameter is related to client-activated objects.</span>
          </span>
          <span data-ttu-id="2d358-810">用戶端啟動是一項舊的技術，保留目的在提供回溯相容性，不建議用於新的開發。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-810">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span>
          </span>
          <span data-ttu-id="2d358-811">分散式應用程式應該改用 Windows Communication Foundation。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-811">Distributed applications should instead use Windows Communication Foundation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d358-812">使用最符合指定參數的具名組件檔案和建構函式，建立已在指定遠端網域中指定名稱之類型的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-812">Creates an instance of the type whose name is specified in the specified remote domain, using the named assembly file and the constructor that best matches the specified parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2d358-813">必須解除包裝的控制代碼，用來存取新建立的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-813">A handle that must be unwrapped to access the newly created instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d358-814">使用<xref:System.Activator.CreateInstanceFrom%2A>主機需要具有限制的安全性權限的應用程式定義域中執行程式碼。</span><span class="sxs-lookup"><span data-stu-id="2d358-814">Use <xref:System.Activator.CreateInstanceFrom%2A> when a host needs to execute code in an application domain that has restricted security permissions.</span></span>  
  
 <span data-ttu-id="2d358-815">使用<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>要未包裝的傳回值的方法。</span><span class="sxs-lookup"><span data-stu-id="2d358-815">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="2d358-816">如需其他可能會叫用方法所擲回的例外狀況資訊，請參閱例外狀況的章節<xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType>和<xref:System.Activator.CreateInstance%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="2d358-816">For information about other exceptions that can be thrown by invoked methods, see the Exceptions sections of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2d358-817">
            <paramref name="domain" /> 或 <paramref name="typeName" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-817">
              <paramref name="domain" /> or <paramref name="typeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="2d358-818">找不到相符的建構函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-818">No matching constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="2d358-819">在 <paramref name="assemblyFile" /> 中找不到 <paramref name="typename" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-819">
              <paramref name="typename" /> was not found in <paramref name="assemblyFile" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="2d358-820">找不到 <paramref name="assemblyFile" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-820">
              <paramref name="assemblyFile" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="2d358-821">呼叫端沒有呼叫這個建構函式的權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-821">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="2d358-822">無法建立抽象類別的執行個體，或者這個成員曾被晚期繫結機制叫用過。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-822">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="2d358-823">透過反映叫用並擲回例外狀況的建構函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-823">The constructor, which was invoked through reflection, threw an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="2d358-824">呼叫端具有所要求的 <see cref="T:System.Security.Permissions.FileIOPermission" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-824">The caller does have the required <see cref="T:System.Security.Permissions.FileIOPermission" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="2d358-825">
            <paramref name="activationAttributes" /> 不是空的陣列，而建立中的類型不是衍生自 <see cref="T:System.MarshalByRefObject" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-825">
              <paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="2d358-826">
            <paramref name="assemblyFile" /> 不是有效的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-826">
              <paramref name="assemblyFile" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="2d358-827">或已針對比目前載入版本更新的通用語言執行平台來編譯 <paramref name="assemblyName" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-827">-or-  <paramref name="assemblyName" /> was compiled for a version of the common language runtime that is later than the version that is currently loaded.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="2d358-828">用於提供辨識項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-828">for supplying evidence.</span>
          </span>
          <span data-ttu-id="2d358-829">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-829">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="2d358-830">若要搜尋的目錄路徑，並讀取其內容的功能。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-830">for the ability to search directory paths and read their contents.</span>
          </span>
          <span data-ttu-id="2d358-831">列舉型別相關聯：<see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />和 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-831">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="2d358-832">用來存取非公用類型和成員，不論其授權集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-832">for accessing nonpublic types and members regardless of their grant set.</span>
          </span>
          <span data-ttu-id="2d358-833">相關聯的列舉型別： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-833">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="2d358-834">需要完全信任立即呼叫者。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-834">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="2d358-835">這個成員無法供部分信任或安全性透明程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-835">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (string assemblyFile, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes, System.Security.Policy.Evidence securityInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstanceFrom(string assemblyFile, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes, class System.Security.Policy.Evidence securityInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstanceFrom(System::String ^ assemblyFile, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes, System::Security::Policy::Evidence ^ securityInfo);" />
      <MemberSignature Language="F#" Value="static member CreateInstanceFrom : string * string * bool * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo * obj[] * System.Security.Policy.Evidence -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstanceFrom (assemblyFile, typeName, ignoreCase, bindingAttr, binder, args, culture, activationAttributes, securityInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Methods which use evidence to sandbox are obsolete and will be removed in a future release of the .NET Framework. Please use an overload of CreateInstanceFrom which does not take an Evidence parameter. See http://go.microsoft.com/fwlink/?LinkID=155570 for more information.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
        <Parameter Name="securityInfo" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="assemblyFile">
          <span data-ttu-id="2d358-836">檔案的名稱，該檔案包含要在其中搜尋名稱為 <c>typeName</c> 之類型的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-836">The name of a file that contains an assembly where the type named <c>typeName</c> is sought.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="2d358-837">慣用類型的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-837">The name of the preferred type.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="2d358-838">
            <see langword="true" /> 指定 <c>typeName</c> 的搜尋不區分大小寫，<see langword="false" /> 指定搜尋區分大小寫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-838">
              <see langword="true" /> to specify that the search for <c>typeName</c> is not case-sensitive; <see langword="false" /> to specify that the search is case-sensitive.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="2d358-839">零或多個位元旗標的組合，此位元旗標會影響 <c>typeName</c> 建構函式的搜尋。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-839">A combination of zero or more bit flags that affect the search for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="2d358-840">如果 <c>bindingAttr</c> 為零，則會針對公用建構函式執行區分大小寫的搜尋。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-840">If <c>bindingAttr</c> is zero, a case-sensitive search for public constructors is conducted.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="2d358-841">使用 <c>bindingAttr</c> 和 <c>args</c> 來搜尋及識別 <c>typeName</c> 建構函式的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-841">An object that uses <c>bindingAttr</c> and <c>args</c> to seek and identify the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="2d358-842">如果 <c>Binder</c> 為 <see langword="null" />，則會使用預設 Binder。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-842">If <c>binder</c> is <see langword="null" />, the default binder is used.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="2d358-843">引數的陣列，此引數在數目、順序和類型上符合要叫用的建構函式的參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-843">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span>
          </span>
          <span data-ttu-id="2d358-844">如果 <c>args</c> 是空陣列或 <see langword="null" />，會叫用未採用參數的建構函式 (預設的建構函式)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-844">If <c>args</c> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="2d358-845">特定文化特性的資訊，其可控制 <c>args</c> 到型式類型 (為 <c>typeName</c> 建構函式宣告) 的強制轉型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-845">Culture-specific information that governs the coercion of <c>args</c> to the formal types declared for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="2d358-846">如果「文化特性 (Culture)」<c></c>是 <see langword="null" />，則使用目前執行緒的 <see cref="T:System.Globalization.CultureInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-846">If <c>culture</c> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          </span>
        </param>
        <param name="activationAttributes">
          <span data-ttu-id="2d358-847">一或多個屬性的陣列，此屬性可參與啟動過程。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-847">An array of one or more attributes that can participate in activation.</span>
          </span>
          <span data-ttu-id="2d358-848">陣列通常只會包含一個 <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> 物件來指定用以啟動遠端物件的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-848">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span>
          </span>
          <span data-ttu-id="2d358-849">此參數與啟動了用戶端的物件相關。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-849">This parameter is related to client-activated objects.</span>
          </span>
          <span data-ttu-id="2d358-850">用戶端啟動是一項舊的技術，保留目的在提供回溯相容性，不建議用於新的開發。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-850">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span>
          </span>
          <span data-ttu-id="2d358-851">分散式應用程式應該改用 Windows Communication Foundation。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-851">Distributed applications should instead use Windows Communication Foundation.</span>
          </span>
        </param>
        <param name="securityInfo">
          <span data-ttu-id="2d358-852">用來執行安全性原則決策和授權程式碼使用權限的資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-852">Information used to make security policy decisions and grant code permissions.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d358-853">使用具名組件檔案和最符合指定參數的建構函式，建立已具有指定名稱之類型的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-853">Creates an instance of the type whose name is specified, using the named assembly file and the constructor that best matches the specified parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2d358-854">必須解除包裝的控制代碼，用來存取新建立的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-854">A handle that must be unwrapped to access the newly created instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d358-855">使用<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>要未包裝的傳回值的方法。</span><span class="sxs-lookup"><span data-stu-id="2d358-855">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="2d358-856">其他可能會叫用方法所擲回的例外狀況的相關資訊，請參閱例外狀況區段<xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType>和<xref:System.Activator.CreateInstance%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="2d358-856">For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2d358-857">
            <paramref name="typeName" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-857">
              <paramref name="typeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="2d358-858">找不到相符的建構函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-858">No matching constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="2d358-859">在 <paramref name="assemblyFile" /> 中找不到 <paramref name="typename" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-859">
              <paramref name="typename" /> was not found in <paramref name="assemblyFile" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="2d358-860">找不到 <paramref name="assemblyFile" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-860">
              <paramref name="assemblyFile" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="2d358-861">呼叫端沒有呼叫這個建構函式的權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-861">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="2d358-862">無法建立抽象類別的執行個體，或者這個成員曾被晚期繫結機制叫用過。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-862">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="2d358-863">透過反映叫用並擲回例外狀況的建構函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-863">The constructor, which was invoked through reflection, threw an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="2d358-864">呼叫端沒有所要求的 <see cref="T:System.Security.Permissions.FileIOPermission" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-864">The caller does not have the required <see cref="T:System.Security.Permissions.FileIOPermission" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="2d358-865">
            <paramref name="activationAttributes" /> 不是空的陣列，而建立中的類型不是衍生自 <see cref="T:System.MarshalByRefObject" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-865">
              <paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="2d358-866">
            <paramref name="assemblyFile" /> 不是有效的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-866">
              <paramref name="assemblyFile" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="2d358-867">或目前載入的是通用語言執行平台 (CLR) 2.0 版或更新版本，但已針對比目前載入版本更新的 CLR 版本來編譯 <paramref name="assemblyName" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-867">-or-  The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span>
          </span>
          <span data-ttu-id="2d358-868">請注意，.NET Framework 2.0、3.0 和 3.5 版全部都會使用 CLR 2.0 版。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-868">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="2d358-869">提供建立委派的執行個體時，呼叫 unmanaged 程式碼的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-869">for the ability to call unmanaged code when creating an instance of a delegate.</span>
          </span>
          <span data-ttu-id="2d358-870">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-870">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="2d358-871">若要搜尋的目錄路徑，並讀取其內容的功能。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-871">for the ability to search directory paths and read their contents.</span>
          </span>
          <span data-ttu-id="2d358-872">列舉型別相關聯：<see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />和 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-872">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="2d358-873">用來存取非公用類型和成員，不論其授權集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-873">for accessing nonpublic types and members regardless of their grant set.</span>
          </span>
          <span data-ttu-id="2d358-874">相關聯的列舉型別： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-874">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (AppDomain domain, string assemblyFile, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes, System.Security.Policy.Evidence securityAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstanceFrom(class System.AppDomain domain, string assemblyFile, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes, class System.Security.Policy.Evidence securityAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstanceFrom(AppDomain ^ domain, System::String ^ assemblyFile, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes, System::Security::Policy::Evidence ^ securityAttributes);" />
      <MemberSignature Language="F#" Value="static member CreateInstanceFrom : AppDomain * string * string * bool * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo * obj[] * System.Security.Policy.Evidence -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstanceFrom (domain, assemblyFile, typeName, ignoreCase, bindingAttr, binder, args, culture, activationAttributes, securityAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Methods which use Evidence to sandbox are obsolete and will be removed in a future release of the .NET Framework. Please use an overload of CreateInstanceFrom which does not take an Evidence parameter. See http://go.microsoft.com/fwlink/?LinkID=155570 for more information.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.AppDomain" />
        <Parameter Name="assemblyFile" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
        <Parameter Name="securityAttributes" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="domain">
          <span data-ttu-id="2d358-875">建立名稱為 <c>typeName</c> 之類型的遠端網域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-875">The remote domain where the type named <c>typeName</c> is created.</span>
          </span>
        </param>
        <param name="assemblyFile">
          <span data-ttu-id="2d358-876">檔案的名稱，該檔案包含要在其中搜尋名稱為 <c>typeName</c> 之類型的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-876">The name of a file that contains an assembly where the type named <c>typeName</c> is sought.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="2d358-877">慣用類型的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-877">The name of the preferred type.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="2d358-878">
            <see langword="true" /> 指定 <c>typeName</c> 的搜尋不區分大小寫，<see langword="false" /> 指定搜尋區分大小寫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-878">
              <see langword="true" /> to specify that the search for <c>typeName</c> is not case-sensitive; <see langword="false" /> to specify that the search is case-sensitive.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="2d358-879">零或多個位元旗標的組合，此位元旗標會影響 <c>typeName</c> 建構函式的搜尋。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-879">A combination of zero or more bit flags that affect the search for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="2d358-880">如果 <c>bindingAttr</c> 為零，則會針對公用建構函式執行區分大小寫的搜尋。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-880">If <c>bindingAttr</c> is zero, a case-sensitive search for public constructors is conducted.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="2d358-881">使用 <c>bindingAttr</c> 和 <c>args</c> 來搜尋及識別 <c>typeName</c> 建構函式的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-881">An object that uses <c>bindingAttr</c> and <c>args</c> to seek and identify the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="2d358-882">如果 <c>Binder</c> 為 <see langword="null" />，則會使用預設 Binder。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-882">If <c>binder</c> is <see langword="null" />, the default binder is used.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="2d358-883">引數的陣列，此引數在數目、順序和類型上符合要叫用的建構函式的參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-883">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span>
          </span>
          <span data-ttu-id="2d358-884">如果 <c>args</c> 是空陣列或 <see langword="null" />，會叫用未採用參數的建構函式 (預設的建構函式)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-884">If <c>args</c> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="2d358-885">特定文化特性的資訊，其可控制 <c>args</c> 到型式類型 (為 <c>typeName</c> 建構函式宣告) 的強制轉型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-885">Culture-specific information that governs the coercion of <c>args</c> to the formal types declared for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="2d358-886">如果「文化特性 (Culture)」<c></c>是 <see langword="null" />，則使用目前執行緒的 <see cref="T:System.Globalization.CultureInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-886">If <c>culture</c> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          </span>
        </param>
        <param name="activationAttributes">
          <span data-ttu-id="2d358-887">一或多個屬性的陣列，此屬性可參與啟動過程。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-887">An array of one or more attributes that can participate in activation.</span>
          </span>
          <span data-ttu-id="2d358-888">陣列通常只會包含一個 <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> 物件來指定用以啟動遠端物件的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-888">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span>
          </span>
          <span data-ttu-id="2d358-889">此參數與啟動了用戶端的物件相關。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-889">This parameter is related to client-activated objects.</span>
          </span>
          <span data-ttu-id="2d358-890">用戶端啟動是一項舊的技術，保留目的在提供回溯相容性，不建議用於新的開發。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-890">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span>
          </span>
          <span data-ttu-id="2d358-891">分散式應用程式應該改用 Windows Communication Foundation。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-891">Distributed applications should instead use Windows Communication Foundation.</span>
          </span>
        </param>
        <param name="securityAttributes">
          <span data-ttu-id="2d358-892">用來執行安全性原則決策和授權程式碼使用權限的資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-892">Information used to make security policy decisions and grant code permissions.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d358-893">使用最符合指定參數的具名組件檔案和建構函式，建立已在指定遠端網域中指定名稱之類型的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-893">Creates an instance of the type whose name is specified in the specified remote domain, using the named assembly file and the constructor that best matches the specified parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2d358-894">必須解除包裝的控制代碼，用來存取新建立的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-894">A handle that must be unwrapped to access the newly created instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d358-895">使用<xref:System.Activator.CreateInstanceFrom%2A>主機需要具有限制的安全性權限的應用程式定義域中執行程式碼。</span><span class="sxs-lookup"><span data-stu-id="2d358-895">Use <xref:System.Activator.CreateInstanceFrom%2A> when a host needs to execute code in an application domain that has restricted security permissions.</span></span>  
  
 <span data-ttu-id="2d358-896">使用<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>要未包裝的傳回值的方法。</span><span class="sxs-lookup"><span data-stu-id="2d358-896">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2d358-897">這個方法會使用<xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType>需要具有完全信任立即呼叫者。</span><span class="sxs-lookup"><span data-stu-id="2d358-897">This method uses <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> to require the immediate caller to have full trust.</span></span>  
  
 <span data-ttu-id="2d358-898">其他可能會叫用方法所擲回的例外狀況的相關資訊，請參閱例外狀況區段<xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType>和<xref:System.Activator.CreateInstance%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="2d358-898">For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2d358-899">
            <paramref name="domain" /> 或 <paramref name="typeName" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-899">
              <paramref name="domain" /> or <paramref name="typeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="2d358-900">找不到相符的建構函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-900">No matching constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="2d358-901">在 <paramref name="assemblyFile" /> 中找不到 <paramref name="typename" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-901">
              <paramref name="typename" /> was not found in <paramref name="assemblyFile" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="2d358-902">找不到 <paramref name="assemblyFile" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-902">
              <paramref name="assemblyFile" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="2d358-903">呼叫端沒有呼叫這個建構函式的權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-903">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="2d358-904">無法建立抽象類別的執行個體，或者這個成員曾被晚期繫結機制叫用過。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-904">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="2d358-905">透過反映叫用並擲回例外狀況的建構函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-905">The constructor, which was invoked through reflection, threw an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="2d358-906">呼叫端具有所要求的 <see cref="T:System.Security.Permissions.FileIOPermission" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-906">The caller does have the required <see cref="T:System.Security.Permissions.FileIOPermission" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="2d358-907">
            <paramref name="activationAttributes" /> 不是空的陣列，而建立中的類型不是衍生自 <see cref="T:System.MarshalByRefObject" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-907">
              <paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="2d358-908">
            <paramref name="assemblyFile" /> 不是有效的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-908">
              <paramref name="assemblyFile" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="2d358-909">或目前載入的是通用語言執行平台 (CLR) 2.0 版或更新版本，但已針對比目前載入版本更新的 CLR 版本來編譯 <paramref name="assemblyName" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-909">-or-  The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span>
          </span>
          <span data-ttu-id="2d358-910">請注意，.NET Framework 2.0、3.0 和 3.5 版全部都會使用 CLR 2.0 版。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-910">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="2d358-911">用於提供辨識項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-911">for supplying evidence.</span>
          </span>
          <span data-ttu-id="2d358-912">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-912">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="2d358-913">若要搜尋的目錄路徑，並讀取其內容的功能。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-913">for the ability to search directory paths and read their contents.</span>
          </span>
          <span data-ttu-id="2d358-914">列舉型別相關聯：<see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />和 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-914">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="2d358-915">用來存取非公用類型和成員，不論其授權集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-915">for accessing nonpublic types and members regardless of their grant set.</span>
          </span>
          <span data-ttu-id="2d358-916">相關聯的列舉型別： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-916">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="2d358-917">需要完全信任立即呼叫者。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-917">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="2d358-918">這個成員無法供部分信任或安全性透明程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-918">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetObject">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2d358-919">為已知物件或 XML Web Service 建立 Proxy。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-919">Creates a proxy for a well-known object or XML Web service.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetObject">
      <MemberSignature Language="C#" Value="public static object GetObject (Type type, string url);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetObject(class System.Type type, string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.GetObject(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetObject(Type ^ type, System::String ^ url);" />
      <MemberSignature Language="F#" Value="static member GetObject : Type * string -&gt; obj" Usage="System.Activator.GetObject (type, url)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="2d358-920">您要連接的已知物件類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-920">The type of the well-known object to which you want to connect.</span>
          </span>
        </param>
        <param name="url">
          <span data-ttu-id="2d358-921">已知物件的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-921">The URL of the well-known object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d358-922">為指定類型和 URL 所指示的已知物件建立 Proxy。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-922">Creates a proxy for the well-known object indicated by the specified type and URL.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2d358-923">Proxy，指向要求的已知物件所服務的端點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-923">A proxy that points to an endpoint served by the requested well-known object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d358-924">呼叫以將訊息傳送至遠端物件的 proxy。</span><span class="sxs-lookup"><span data-stu-id="2d358-924">Call the proxy to send messages to the remote object.</span></span> <span data-ttu-id="2d358-925">在 proxy 上呼叫方法之前，會透過網路不傳送任何訊息。</span><span class="sxs-lookup"><span data-stu-id="2d358-925">No messages are sent over the network until a method is called on the proxy.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2d358-926">
            <paramref name="type" /> 或 <paramref name="url" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-926">
              <paramref name="type" /> or <paramref name="url" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.Remoting.RemotingException">
          <span data-ttu-id="2d358-927">
            <paramref name="type" /> 不是以傳址方式封送處理，也不是介面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-927">
              <paramref name="type" /> is not marshaled by reference and is not an interface.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="2d358-928">這個成員曾被晚期繫結機制叫用過。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-928">This member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="2d358-929">需要完全信任立即呼叫者。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-929">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="2d358-930">這個成員無法供部分信任或安全性透明程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-930">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="T:System.Runtime.Remoting.WellKnownObjectMode" />
        <altmember cref="T:System.Runtime.Remoting.RemotingConfiguration" />
      </Docs>
    </Member>
    <Member MemberName="GetObject">
      <MemberSignature Language="C#" Value="public static object GetObject (Type type, string url, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetObject(class System.Type type, string url, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.GetObject(System.Type,System.String,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetObject(Type ^ type, System::String ^ url, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="static member GetObject : Type * string * obj -&gt; obj" Usage="System.Activator.GetObject (type, url, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="2d358-931">您要連接的已知物件類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-931">The type of the well-known object to which you want to connect.</span>
          </span>
        </param>
        <param name="url">
          <span data-ttu-id="2d358-932">已知物件的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-932">The URL of the well-known object.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="2d358-933">通道特定資料或 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-933">Channel-specific data or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d358-934">為指定類型、URL 和通道資料所指示的已知物件建立 Proxy。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-934">Creates a proxy for the well-known object indicated by the specified type, URL, and channel data.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2d358-935">Proxy，指向要求的已知物件所服務的端點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-935">A proxy that points to an endpoint served by the requested well-known object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d358-936">呼叫以將訊息傳送至遠端物件的 proxy。</span><span class="sxs-lookup"><span data-stu-id="2d358-936">Call the proxy to send messages to the remote object.</span></span> <span data-ttu-id="2d358-937">在 proxy 上呼叫方法之前，會透過網路不傳送任何訊息。</span><span class="sxs-lookup"><span data-stu-id="2d358-937">No messages are sent over the network until a method is called on the proxy.</span></span>  
  
 <span data-ttu-id="2d358-938">`state`參數通訊通道的資訊，並為傳遞至<xref:System.Runtime.Remoting.Channels.IChannelSender.CreateMessageSink%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="2d358-938">The `state` parameter communicates information to the channel, and is passed to the <xref:System.Runtime.Remoting.Channels.IChannelSender.CreateMessageSink%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2d358-939">
            <paramref name="type" /> 或 <paramref name="url" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-939">
              <paramref name="type" /> or <paramref name="url" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.Remoting.RemotingException">
          <span data-ttu-id="2d358-940">
            <paramref name="type" /> 不是以傳址方式封送處理，也不是介面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-940">
              <paramref name="type" /> is not marshaled by reference and is not an interface.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="2d358-941">這個成員曾被晚期繫結機制叫用過。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-941">This member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="2d358-942">需要完全信任立即呼叫者。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-942">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="2d358-943">這個成員無法供部分信任或安全性透明程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-943">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="T:System.Runtime.Remoting.WellKnownObjectMode" />
        <altmember cref="T:System.Runtime.Remoting.RemotingConfiguration" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._Activator.GetIDsOfNames">
      <MemberSignature Language="C#" Value="void _Activator.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._Activator.GetIDsOfNames([in]valuetype System.Guid&amp; riid, native int rgszNames, unsigned int32 cNames, unsigned int32 lcid, native int rgDispId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.System#Runtime#InteropServices#_Activator#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetIDsOfNames (ByRef riid As Guid, rgszNames As IntPtr, cNames As UInteger, lcid As UInteger, rgDispId As IntPtr) Implements _Activator.GetIDsOfNames" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._Activator.GetIDsOfNames(Guid % riid, IntPtr rgszNames, System::UInt32 cNames, System::UInt32 lcid, IntPtr rgDispId) = System::Runtime::InteropServices::_Activator::GetIDsOfNames;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Activator.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="rgszNames" Type="System.IntPtr" />
        <Parameter Name="cNames" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="rgDispId" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="riid">
          <span data-ttu-id="2d358-944">保留供未來使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-944">Reserved for future use.</span>
          </span>
          <span data-ttu-id="2d358-945">必須是 IID_NULL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-945">Must be IID_NULL.</span>
          </span>
        </param>
        <param name="rgszNames">
          <span data-ttu-id="2d358-946">要對應的傳入名稱陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-946">The passed-in array of names to map.</span>
          </span>
        </param>
        <param name="cNames">
          <span data-ttu-id="2d358-947">要對應的名稱計數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-947">The count of the names to map.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="2d358-948">用於解譯名稱的地區設定內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-948">The locale context in which to interpret the names.</span>
          </span>
        </param>
        <param name="rgDispId">
          <span data-ttu-id="2d358-949">呼叫端配置的陣列，可接收對應於名稱的 ID。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-949">The caller-allocated array that receives the IDs corresponding to the names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d358-950">將一組名稱對應至一組對應的分派識別項 (Dispatch Identifier)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-950">Maps a set of names to a corresponding set of dispatch identifiers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d358-951">此方法用來存取 managed 的類別，從 unmanaged 程式碼，而且不應該從 managed 程式碼呼叫。</span><span class="sxs-lookup"><span data-stu-id="2d358-951">This method is used to access managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="2d358-952">如需有關`IDispatch::GetIDsOfNames`，請參閱 MSDN Library。</span><span class="sxs-lookup"><span data-stu-id="2d358-952">For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="2d358-953">不支援使用 COM <c>IDispatch</c> 介面進行晚期繫結的存取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-953">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._Activator.GetTypeInfo">
      <MemberSignature Language="C#" Value="void _Activator.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._Activator.GetTypeInfo(unsigned int32 iTInfo, unsigned int32 lcid, native int ppTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.System#Runtime#InteropServices#_Activator#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfo (iTInfo As UInteger, lcid As UInteger, ppTInfo As IntPtr) Implements _Activator.GetTypeInfo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._Activator.GetTypeInfo(System::UInt32 iTInfo, System::UInt32 lcid, IntPtr ppTInfo) = System::Runtime::InteropServices::_Activator::GetTypeInfo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Activator.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iTInfo" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="ppTInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="iTInfo">
          <span data-ttu-id="2d358-954">要傳回的類型資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-954">The type information to return.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="2d358-955">類型資訊的地區設定識別項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-955">The locale identifier for the type information.</span>
          </span>
        </param>
        <param name="ppTInfo">
          <span data-ttu-id="2d358-956">物件，會接收指向所要求之類型資訊物件的指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-956">An object that receives a pointer to the requested type information object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d358-957">擷取物件的類型資訊，可以用來取得介面的類型資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-957">Retrieves the type information for an object, which can then be used to get the type information for an interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d358-958">此方法用來存取 managed 的類別，從 unmanaged 程式碼，而且不應該從 managed 程式碼呼叫。</span><span class="sxs-lookup"><span data-stu-id="2d358-958">This method is used to access managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="2d358-959">如需有關`IDispatch::GetTypeInfo`，請參閱 MSDN Library。</span><span class="sxs-lookup"><span data-stu-id="2d358-959">For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="2d358-960">不支援使用 COM <c>IDispatch</c> 介面進行晚期繫結的存取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-960">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._Activator.GetTypeInfoCount">
      <MemberSignature Language="C#" Value="void _Activator.GetTypeInfoCount (out uint pcTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._Activator.GetTypeInfoCount([out] unsigned int32&amp; pcTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.System#Runtime#InteropServices#_Activator#GetTypeInfoCount(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfoCount (ByRef pcTInfo As UInteger) Implements _Activator.GetTypeInfoCount" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._Activator.GetTypeInfoCount([Runtime::InteropServices::Out] System::UInt32 % pcTInfo) = System::Runtime::InteropServices::_Activator::GetTypeInfoCount;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Activator.GetTypeInfoCount(System.UInt32@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcTInfo" Type="System.UInt32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pcTInfo">
          <span data-ttu-id="2d358-961">當這個方法傳回時，包含接收物件提供的類型資訊介面數目的位置指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-961">When this method returns, contains a pointer to a location that receives the number of type information interfaces provided by the object.</span>
          </span>
          <span data-ttu-id="2d358-962">這個參數會以未初始化的狀態傳遞。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-962">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d358-963">擷取物件提供的類型資訊介面數目 (0 或 1)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-963">Retrieves the number of type information interfaces that an object provides (either 0 or 1).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d358-964">此方法用來存取 managed 的類別，從 unmanaged 程式碼，而且不應該從 managed 程式碼呼叫。</span><span class="sxs-lookup"><span data-stu-id="2d358-964">This method is used to access managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="2d358-965">如需有關`IDispatch::GetTypeInfoCount`，請參閱 MSDN Library。</span><span class="sxs-lookup"><span data-stu-id="2d358-965">For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="2d358-966">不支援使用 COM <c>IDispatch</c> 介面進行晚期繫結的存取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-966">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._Activator.Invoke">
      <MemberSignature Language="C#" Value="void _Activator.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._Activator.Invoke(unsigned int32 dispIdMember, [in]valuetype System.Guid&amp; riid, unsigned int32 lcid, int16 wFlags, native int pDispParams, native int pVarResult, native int pExcepInfo, native int puArgErr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.System#Runtime#InteropServices#_Activator#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub Invoke (dispIdMember As UInteger, ByRef riid As Guid, lcid As UInteger, wFlags As Short, pDispParams As IntPtr, pVarResult As IntPtr, pExcepInfo As IntPtr, puArgErr As IntPtr) Implements _Activator.Invoke" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._Activator.Invoke(System::UInt32 dispIdMember, Guid % riid, System::UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr) = System::Runtime::InteropServices::_Activator::Invoke;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Activator.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispIdMember" Type="System.UInt32" />
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="wFlags" Type="System.Int16" />
        <Parameter Name="pDispParams" Type="System.IntPtr" />
        <Parameter Name="pVarResult" Type="System.IntPtr" />
        <Parameter Name="pExcepInfo" Type="System.IntPtr" />
        <Parameter Name="puArgErr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="dispIdMember">
          <span data-ttu-id="2d358-967">用來識別成員的分派識別項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-967">A dispatch identifier that identifies the member.</span>
          </span>
        </param>
        <param name="riid">
          <span data-ttu-id="2d358-968">保留供未來使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-968">Reserved for future use.</span>
          </span>
          <span data-ttu-id="2d358-969">必須是 IID_NULL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-969">Must be IID_NULL.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="2d358-970">地區設定內容，用於解譯引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-970">The locale context in which to interpret arguments.</span>
          </span>
        </param>
        <param name="wFlags">
          <span data-ttu-id="2d358-971">描述呼叫之內容的旗標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-971">Flags describing the context of the call.</span>
          </span>
        </param>
        <param name="pDispParams">
          <span data-ttu-id="2d358-972">指向結構的指標，此結構包含引數陣列、用於具名引數的引數 DISPID 陣列，以及陣列所含項目數目的計數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-972">A pointer to a structure that contains an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</span>
          </span>
        </param>
        <param name="pVarResult">
          <span data-ttu-id="2d358-973">儲存結果的位置指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-973">A pointer to the location where the result is to be stored.</span>
          </span>
        </param>
        <param name="pExcepInfo">
          <span data-ttu-id="2d358-974">包含例外狀況資訊之結構的指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-974">A pointer to a structure that contains exception information.</span>
          </span>
        </param>
        <param name="puArgErr">
          <span data-ttu-id="2d358-975">第一個有錯誤的引數索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-975">The index of the first argument that has an error.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d358-976">提供物件所公開的屬性和方法的存取權。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-976">Provides access to properties and methods exposed by an object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d358-977">此方法用來存取 managed 的類別，從 unmanaged 程式碼，而且不應該從 managed 程式碼呼叫。</span><span class="sxs-lookup"><span data-stu-id="2d358-977">This method is used to access managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="2d358-978">如需有關`IDispatch::Invoke`，請參閱 MSDN Library。</span><span class="sxs-lookup"><span data-stu-id="2d358-978">For more information about `IDispatch::Invoke`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="2d358-979">不支援使用 COM <c>IDispatch</c> 介面進行晚期繫結的存取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d358-979">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>