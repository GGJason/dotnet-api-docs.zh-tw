<Type Name="Activator" FullName="System.Activator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="478485e5e57fcdc6085cef5cf6ccbabb05365869" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39776973" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Activator : System.Runtime.InteropServices._Activator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Activator extends System.Object implements class System.Runtime.InteropServices._Activator" />
  <TypeSignature Language="DocId" Value="T:System.Activator" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Activator&#xA;Implements _Activator" />
  <TypeSignature Language="C++ CLI" Value="public ref class Activator sealed : System::Runtime::InteropServices::_Activator" />
  <TypeSignature Language="F#" Value="type Activator = class&#xA;    interface _Activator" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices._Activator</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._Activator))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="1d8a3-101">包含本機或遠端建立物件類型的方法，或者取得對現有遠端物件的參考。</span>
      <span class="sxs-lookup">
        <span data-stu-id="1d8a3-101">Contains methods to create types of objects locally or remotely, or obtain references to existing remote objects.</span>
      </span>
      <span data-ttu-id="1d8a3-102">這個類別無法被繼承。</span>
      <span class="sxs-lookup">
        <span data-stu-id="1d8a3-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d8a3-103"><xref:System.Activator.CreateInstance%2A>方法建立的組件中定義叫用建構函式最符合的型別執行個體指定的引數。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-103">The <xref:System.Activator.CreateInstance%2A> method creates an instance of a type defined in an assembly by invoking the constructor that best matches the specified arguments.</span></span> <span data-ttu-id="1d8a3-104">如果未不指定任何參數，不接受任何參數，也就是預設建構函式的建構函式會叫用。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-104">If no arguments are specified, the constructor that takes no parameters, that is, the default constructor, is invoked.</span></span>  
  
 <span data-ttu-id="1d8a3-105">您必須擁有足夠的權限，以搜尋與呼叫建構函式否則，會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-105">You must have sufficient permission to search for and call a constructor; otherwise, an exception is thrown.</span></span> <span data-ttu-id="1d8a3-106">根據預設，只有公用的建構函式會被視為建構函式搜尋期間。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-106">By default, only public constructors are considered during the search for a constructor.</span></span> <span data-ttu-id="1d8a3-107">如果可以找到任何建構函式或預設建構函式，則會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-107">If no constructor or default constructor can be found, an exception is thrown.</span></span>  
  
 <span data-ttu-id="1d8a3-108">繫結器參數會指定適當的建構函式組件中搜尋的物件。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-108">A binder parameter specifies an object that searches an assembly for a suitable constructor.</span></span> <span data-ttu-id="1d8a3-109">您可以指定您自己的繫結器和搜尋準則。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-109">You can specify your own binder and search criteria.</span></span> <span data-ttu-id="1d8a3-110">如果未不指定任何繫結器，則會使用預設繫結器。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-110">If no binder is specified, a default binder is used.</span></span> <span data-ttu-id="1d8a3-111">如需詳細資訊，請參閱 <xref:System.Reflection.Binder?displayProperty=nameWithType> 和 <xref:System.Reflection.BindingFlags?displayProperty=nameWithType> 類別。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-111">For more information, see the <xref:System.Reflection.Binder?displayProperty=nameWithType> and <xref:System.Reflection.BindingFlags?displayProperty=nameWithType> classes.</span></span>  
  
 <span data-ttu-id="1d8a3-112">辨識項參數會影響安全性原則和建構函式的權限。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-112">An evidence parameter affects the security policy and permissions for the constructor.</span></span> <span data-ttu-id="1d8a3-113">如需詳細資訊，請參閱 <xref:System.Security.Policy.Evidence?displayProperty=nameWithType> 類別。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-113">For more information, see the <xref:System.Security.Policy.Evidence?displayProperty=nameWithType> class.</span></span>  
  
 <span data-ttu-id="1d8a3-114">在本機或遠端站台，可以建立型別的執行個體。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-114">An instance of a type can be created at a local or remote site.</span></span> <span data-ttu-id="1d8a3-115">如果從遠端建立型別，則啟用屬性參數會指定遠端站台的 URI。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-115">If the type is created remotely, an activation attribute parameter specifies the URI of the remote site.</span></span> <span data-ttu-id="1d8a3-116">到達遠端站台之前，建立執行個體的呼叫可能會通過中間的站台。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-116">The call to create the instance might pass through intermediary sites before it reaches the remote site.</span></span> <span data-ttu-id="1d8a3-117">其他啟動屬性可以修改的環境中或在其中呼叫則是在遠端和中間的站台運作的內容。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-117">Other activation attributes can modify the environment, or context, in which the call operates at the remote and intermediary sites.</span></span>  
  
 <span data-ttu-id="1d8a3-118">如果在本機建立的執行個體，則會傳回該物件的參考。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-118">If the instance is created locally, a reference to that object is returned.</span></span> <span data-ttu-id="1d8a3-119">如果從遠端建立執行個體，則會傳回 proxy 的參考。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-119">If the instance is created remotely, a reference to a proxy is returned.</span></span> <span data-ttu-id="1d8a3-120">遠端物件是透過 proxy 操作，如同它是本機物件。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-120">The remote object is manipulated through the proxy as if it were a local object.</span></span>  
  
 <span data-ttu-id="1d8a3-121"><xref:System.Activator.GetObject%2A>方法會建立目前執行的遠端物件、 伺服器啟動已知物件或 XML Web service 的 proxy。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-121">The <xref:System.Activator.GetObject%2A> method creates a proxy to a currently running remote object, server-activated well-known object, or XML Web service.</span></span> <span data-ttu-id="1d8a3-122">您可以指定連接媒體，也就是通道。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-122">You can specify the connection medium, that is, the channel.</span></span> <span data-ttu-id="1d8a3-123">如需詳細資訊，請參閱 <xref:System.Runtime.Remoting.Channels.ChannelServices?displayProperty=nameWithType> 類別。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-123">For more information, see the <xref:System.Runtime.Remoting.Channels.ChannelServices?displayProperty=nameWithType> class.</span></span>  
  
 <span data-ttu-id="1d8a3-124">組件包含型別定義。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-124">Assemblies contain type definitions.</span></span> <span data-ttu-id="1d8a3-125"><xref:System.Activator.CreateInstance%2A>方法會從目前正在執行的組件來建立型別的執行個體。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-125">The <xref:System.Activator.CreateInstance%2A> method creates an instance of a type from a currently running assembly.</span></span> <span data-ttu-id="1d8a3-126"><xref:System.Activator.CreateInstanceFrom%2A>方法從檔案包含的組件中建立執行個體。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-126">The <xref:System.Activator.CreateInstanceFrom%2A> method creates an instance from a file that contains an assembly.</span></span> <span data-ttu-id="1d8a3-127"><xref:System.Activator.CreateComInstanceFrom%2A>方法從檔案包含的組件建立 COM 物件的執行個體。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-127">The <xref:System.Activator.CreateComInstanceFrom%2A> method creates an instance of a COM object from a file that contains an assembly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1d8a3-128">下列範例示範如何使用<xref:System.Activator>以動態方式建構物件，在執行階段類別。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-128">The following example shows how to use the <xref:System.Activator> class to dynamically construct objects at run time.</span></span>  
  
 [!code-cpp[ActivatorX#1](~/samples/snippets/cpp/VS_Snippets_CLR/ActivatorX/cpp/ActivatorX.cpp#1)]
 [!code-csharp[ActivatorX#1](~/samples/snippets/csharp/VS_Snippets_CLR/ActivatorX/cs/ActivatorX.cs#1)]
 [!code-vb[ActivatorX#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ActivatorX/VB/ActivatorX.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="CreateComInstanceFrom">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1d8a3-129">建立已具有指定名稱之 COM 物件的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-129">Creates an instance of the COM object whose name is specified.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateComInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateComInstanceFrom (string assemblyName, string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateComInstanceFrom(string assemblyName, string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateComInstanceFrom(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateComInstanceFrom (assemblyName As String, typeName As String) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateComInstanceFrom(System::String ^ assemblyName, System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="static member CreateComInstanceFrom : string * string -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateComInstanceFrom (assemblyName, typeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyName">
          <span data-ttu-id="1d8a3-130">檔案的名稱，該檔案包含要在其中搜尋名稱為 <c>typeName</c> 之類型的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-130">The name of a file that contains an assembly where the type named <c>typeName</c> is sought.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="1d8a3-131">慣用類型的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-131">The name of the preferred type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1d8a3-132">使用具名組件檔案和預設建構函式 (Constructor)，建立已具有指定名稱之 COM 物件的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-132">Creates an instance of the COM object whose name is specified, using the named assembly file and the default constructor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1d8a3-133">必須解除包裝的控制代碼，用來存取新建立的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-133">A handle that must be unwrapped to access the newly created instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d8a3-134">使用<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>要未包裝的傳回值的方法。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-134">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="1d8a3-135">A<xref:System.Runtime.InteropServices.ComVisibleAttribute?displayProperty=nameWithType>屬性的值`true`必須為 COM 型別套用明確或預設所以<xref:System.Activator.CreateComInstanceFrom%2A>方法可建立該類型的執行個體，否則<xref:System.TypeLoadException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-135">A <xref:System.Runtime.InteropServices.ComVisibleAttribute?displayProperty=nameWithType> attribute with a value of `true` must be applied either explicitly or by default to the COM type so the <xref:System.Activator.CreateComInstanceFrom%2A> method can create an instance of that type; otherwise, <xref:System.TypeLoadException> is thrown.</span></span>  
  
 <span data-ttu-id="1d8a3-136">如需其他可能會叫用方法所擲回的例外狀況資訊，請參閱例外狀況區段<xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType>和<xref:System.Activator.CreateInstance%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-136">For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1d8a3-137">開頭[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]，這個方法可用來建立非公用型別，如果呼叫者已授與<xref:System.Security.Permissions.ReflectionPermission>使用<xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType>旗標，以及包含非公用類型的組件的授權集是否限制為呼叫者的授與設定或其子集。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-137">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to create nonpublic types if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types is restricted to the caller’s grant set or to a subset thereof.</span></span> <span data-ttu-id="1d8a3-138">(請參閱[反映的安全性考量](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)。)</span><span class="sxs-lookup"><span data-stu-id="1d8a3-138">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="1d8a3-139">若要使用這項功能，您的應用程式應將目標設為 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] (含) 以後版本。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-139">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1d8a3-140">
            <paramref name="typeName" /> 或 <paramref name="assemblyName" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-140">
              <paramref name="typeName" /> or <paramref name="assemblyName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="1d8a3-141">無法透過 COM 建立執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-141">An instance cannot be created through COM.</span>
          </span>
          <span data-ttu-id="1d8a3-142">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-142">-or-</span>
          </span>
          <span data-ttu-id="1d8a3-143">在 <paramref name="assemblyName" /> 中找不到 <paramref name="typename" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-143">
              <paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="1d8a3-144">找不到相符的建構函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-144">No matching constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="1d8a3-145">找不到 <paramref name="assemblyName" />，或您想載入的模組並未指定檔案的副檔名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-145">
              <paramref name="assemblyName" /> is not found, or the module you are trying to load does not specify a file name extension.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="1d8a3-146">無法建立抽象類別的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-146">Cannot create an instance of an abstract class.</span>
          </span>
          <span data-ttu-id="1d8a3-147">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-147">-or-</span>
          </span>
          <span data-ttu-id="1d8a3-148">這個成員曾被晚期繫結機制叫用過。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-148">This member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="1d8a3-149">呼叫者無法提供非繼承自 <see cref="T:System.MarshalByRefObject" /> 之物件的啟動屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-149">The caller cannot provide activation attributes for an object that does not inherit from <see cref="T:System.MarshalByRefObject" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1d8a3-150">
            <paramref name="assemblyName" /> 為空字串 ("")。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-150">
              <paramref name="assemblyName" /> is the empty string ("").</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="1d8a3-151">用來存取非公用類型，不論其授權集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-151">for accessing nonpublic types regardless of their grant set.</span>
          </span>
          <span data-ttu-id="1d8a3-152">相關聯的列舉型別： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-152">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateComInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateComInstanceFrom (string assemblyName, string typeName, byte[] hashValue, System.Configuration.Assemblies.AssemblyHashAlgorithm hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateComInstanceFrom(string assemblyName, string typeName, unsigned int8[] hashValue, valuetype System.Configuration.Assemblies.AssemblyHashAlgorithm hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateComInstanceFrom(System.String,System.String,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateComInstanceFrom (assemblyName As String, typeName As String, hashValue As Byte(), hashAlgorithm As AssemblyHashAlgorithm) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateComInstanceFrom(System::String ^ assemblyName, System::String ^ typeName, cli::array &lt;System::Byte&gt; ^ hashValue, System::Configuration::Assemblies::AssemblyHashAlgorithm hashAlgorithm);" />
      <MemberSignature Language="F#" Value="static member CreateComInstanceFrom : string * string * byte[] * System.Configuration.Assemblies.AssemblyHashAlgorithm -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateComInstanceFrom (assemblyName, typeName, hashValue, hashAlgorithm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="hashValue" Type="System.Byte[]" />
        <Parameter Name="hashAlgorithm" Type="System.Configuration.Assemblies.AssemblyHashAlgorithm" />
      </Parameters>
      <Docs>
        <param name="assemblyName">
          <span data-ttu-id="1d8a3-153">檔案的名稱，該檔案包含要在其中搜尋名稱為 <c>typeName</c> 之類型的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-153">The name of a file that contains an assembly where the type named <c>typeName</c> is sought.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="1d8a3-154">慣用類型的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-154">The name of the preferred type.</span>
          </span>
        </param>
        <param name="hashValue">
          <span data-ttu-id="1d8a3-155">計算的雜湊碼值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-155">The value of the computed hash code.</span>
          </span>
        </param>
        <param name="hashAlgorithm">
          <span data-ttu-id="1d8a3-156">雜湊演算法，用於雜湊檔案並產生強式名稱 (Strong Name)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-156">The hash algorithm used for hashing files and generating the strong name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1d8a3-157">使用具名組件檔案和預設建構函式 (Constructor)，建立已具有指定名稱之 COM 物件的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-157">Creates an instance of the COM object whose name is specified, using the named assembly file and the default constructor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1d8a3-158">必須解除包裝的控制代碼，用來存取新建立的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-158">A handle that must be unwrapped to access the newly created instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d8a3-159">使用<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>要未包裝的傳回值的方法。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-159">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="1d8a3-160">A<xref:System.Runtime.InteropServices.ComVisibleAttribute?displayProperty=nameWithType>屬性的值`true`必須為 COM 型別套用明確或預設所以<xref:System.Activator.CreateComInstanceFrom%2A>方法可建立該類型的執行個體，否則<xref:System.TypeLoadException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-160">A <xref:System.Runtime.InteropServices.ComVisibleAttribute?displayProperty=nameWithType> attribute with a value of `true` must be applied either explicitly or by default to the COM type so the <xref:System.Activator.CreateComInstanceFrom%2A> method can create an instance of that type; otherwise, <xref:System.TypeLoadException> is thrown.</span></span>  
  
 <span data-ttu-id="1d8a3-161">如需其他可能會叫用方法所擲回的例外狀況資訊，請參閱例外狀況區段<xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType>和<xref:System.Activator.CreateInstance%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-161">For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1d8a3-162">開頭[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]，這個方法可用來建立非公用型別，如果呼叫者已授與<xref:System.Security.Permissions.ReflectionPermission>使用<xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType>旗標，以及包含非公用類型的組件的授權集是否限制為呼叫者的授與設定或其子集。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-162">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to create nonpublic types if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types is restricted to the caller’s grant set or to a subset thereof.</span></span> <span data-ttu-id="1d8a3-163">(請參閱[反映的安全性考量](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)。)</span><span class="sxs-lookup"><span data-stu-id="1d8a3-163">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="1d8a3-164">若要使用這項功能，您的應用程式應將目標設為 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] (含) 以後版本。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-164">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1d8a3-165">
            <paramref name="typeName" /> 或 <paramref name="assemblyName" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-165">
              <paramref name="typeName" /> or <paramref name="assemblyName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1d8a3-166">
            <paramref name="assemblyName" /> 為空字串 ("")。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-166">
              <paramref name="assemblyName" /> is the empty string ("").</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="1d8a3-167">使用兩個不同的辨識項載入組件或模組兩次。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-167">An assembly or module was loaded twice with two different evidences.</span>
          </span>
          <span data-ttu-id="1d8a3-168">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-168">-or-</span>
          </span>
          <span data-ttu-id="1d8a3-169">
            <paramref name="assemblyName" /> 超過系統定義的長度上限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-169">
              <paramref name="assemblyName" /> is longer than the system-defined maximum length.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="1d8a3-170">找不到 <paramref name="assemblyName" />，或您想載入的模組並未指定檔案的副檔名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-170">
              <paramref name="assemblyName" /> is not found, or the module you are trying to load does not specify a file name extension.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="1d8a3-171">已找到 <paramref name="assemblyName" /> 但是無法載入。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-171">
              <paramref name="assemblyName" /> is found but cannot be loaded.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="1d8a3-172">
            <paramref name="assemblyName" /> 不是有效的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-172">
              <paramref name="assemblyName" /> is not a valid assembly.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="1d8a3-173">指定未以 "file://" 開頭的程式碼基底時，沒有必要的 <see langword="WebPermission" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-173">A code base that does not start with "file://" was specified without the required <see langword="WebPermission" />.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="1d8a3-174">無法透過 COM 建立執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-174">An instance cannot be created through COM.</span>
          </span>
          <span data-ttu-id="1d8a3-175">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-175">-or-</span>
          </span>
          <span data-ttu-id="1d8a3-176">在 <paramref name="assemblyName" /> 中找不到 <paramref name="typename" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-176">
              <paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="1d8a3-177">找不到相符的建構函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-177">No matching constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="1d8a3-178">無法建立抽象類別的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-178">An instance of an abstract class cannot be created.</span>
          </span>
          <span data-ttu-id="1d8a3-179">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-179">-or-</span>
          </span>
          <span data-ttu-id="1d8a3-180">這個成員曾被晚期繫結機制叫用過。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-180">This member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="1d8a3-181">呼叫者無法提供非繼承自 <see cref="T:System.MarshalByRefObject" /> 之物件的啟動屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-181">The caller cannot provide activation attributes for an object that does not inherit from <see cref="T:System.MarshalByRefObject" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="1d8a3-182">用來存取非公用類型，不論其授權集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-182">for accessing nonpublic types regardless of their grant set.</span>
          </span>
          <span data-ttu-id="1d8a3-183">相關聯的列舉型別： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-183">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="1d8a3-184">用於讀取以"file:// 開頭的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-184">for reading a URI that begins with "file://".</span>
          </span>
          <span data-ttu-id="1d8a3-185">相關聯的列舉型別： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-185">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
        <permission cref="T:System.Net.WebPermission">
          <span data-ttu-id="1d8a3-186">用於讀取不是以"file:// 開頭的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-186">for reading a URI that does not begin with "file://".</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateInstance">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1d8a3-187">使用最符合指定參數的建構函式，建立指定類型的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-187">Creates an instance of the specified type using the constructor that best matches the specified parameters.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (ActivationContext activationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(class System.ActivationContext activationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.ActivationContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(ActivationContext ^ activationContext);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : ActivationContext -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstance activationContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activationContext" Type="System.ActivationContext" />
      </Parameters>
      <Docs>
        <param name="activationContext">
          <span data-ttu-id="1d8a3-188">啟動內容物件，指定要建立的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-188">An activation context object that specifies the object to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1d8a3-189">建立類型的執行個體，這個類型是由指定的 <see cref="T:System.ActivationContext" /> 物件所指派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-189">Creates an instance of the type designated by the specified <see cref="T:System.ActivationContext" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1d8a3-190">必須解除包裝的控制代碼，用來存取新建立的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-190">A handle that must be unwrapped to access the newly created object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d8a3-191">使用<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>要未包裝的傳回值的方法。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-191">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="1d8a3-192">啟用內容可在資訊清單架構啟動過程中，若要設定網域原則，並提供應用程式為基礎的安全性模型。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-192">The activation context is used during manifest-based activation to set up the domain policy and to provide an application-based security model.</span></span> <span data-ttu-id="1d8a3-193"><xref:System.ActivationContext>類別包含<xref:System.ApplicationIdentity>提供存取權的應用程式資訊清單的物件。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-193">The <xref:System.ActivationContext> class contains an <xref:System.ApplicationIdentity> object that provides access to the application manifest.</span></span> <span data-ttu-id="1d8a3-194">如需詳細資訊，請參閱 <xref:System.Security.Policy.ApplicationSecurityManager> 類別。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-194">For more information, see the <xref:System.Security.Policy.ApplicationSecurityManager> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ActivationContext" />
        <altmember cref="T:System.ApplicationIdentity" />
        <altmember cref="T:System.Security.Policy.ApplicationSecurityManager" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static object CreateInstance (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateInstance(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateInstance(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : Type -&gt; obj" Usage="System.Activator.CreateInstance type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="1d8a3-195">要建立的物件類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-195">The type of object to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1d8a3-196">使用指定之類型的預設建構函式，建立該類型的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-196">Creates an instance of the specified type using that type's default constructor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1d8a3-197">新建立物件的參考。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-197">A reference to the newly created object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d8a3-198">要叫用建構函式必須是可存取。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-198">The constructor to be invoked must be accessible.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1d8a3-199">開頭[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]，這個方法可用來存取非公用型別，如果呼叫者已授與<xref:System.Security.Permissions.ReflectionPermission>使用<xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType>旗標，以及包含非公用類型的組件的授權集是否限制為呼叫者的授與設定或其子集。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-199">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access nonpublic types if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types is restricted to the caller’s grant set or to a subset thereof.</span></span> <span data-ttu-id="1d8a3-200">(請參閱[反映的安全性考量](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)。)</span><span class="sxs-lookup"><span data-stu-id="1d8a3-200">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="1d8a3-201">若要使用這項功能，您的應用程式應將目標設為 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] (含) 以後版本。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-201">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1d8a3-202">下列程式碼範例示範如何呼叫<xref:System.Activator.CreateInstance%28System.Type%29>方法。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-202">The following code example demonstrates how to call the <xref:System.Activator.CreateInstance%28System.Type%29> method.</span></span> <span data-ttu-id="1d8a3-203">會建立許多不同類型的執行個體，並顯示其預設值。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-203">Instances of several different types are created and their default values are displayed.</span></span>  
  
 [!code-cpp[ActivatorX#4](~/samples/snippets/cpp/VS_Snippets_CLR/ActivatorX/cpp/source2.cpp#4)]
 [!code-csharp[ActivatorX#4](~/samples/snippets/csharp/VS_Snippets_CLR/ActivatorX/cs/source2.cs#4)]
 [!code-vb[ActivatorX#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/ActivatorX/VB/source2.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1d8a3-204">
            <paramref name="type" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-204">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1d8a3-205">
            <paramref name="type" /> 不是 <see langword="RuntimeType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-205">
              <paramref name="type" /> is not a <see langword="RuntimeType" />.</span>
          </span>
          <span data-ttu-id="1d8a3-206">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-206">-or-</span>
          </span>
          <span data-ttu-id="1d8a3-207">
            <paramref name="type" /> 是開放式泛型類型 (也就是 <see cref="P:System.Type.ContainsGenericParameters" /> 屬性會傳回 <see langword="true" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-207">
              <paramref name="type" /> is an open generic type (that is, the <see cref="P:System.Type.ContainsGenericParameters" /> property returns <see langword="true" />).</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="1d8a3-208">
            <paramref name="type" /> 不可以是 <see cref="T:System.Reflection.Emit.TypeBuilder" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-208">
              <paramref name="type" /> cannot be a <see cref="T:System.Reflection.Emit.TypeBuilder" />.</span>
          </span>
          <span data-ttu-id="1d8a3-209">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-209">-or-</span>
          </span>
          <span data-ttu-id="1d8a3-210">不支援建立 <see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" /> 和 <see cref="T:System.RuntimeArgumentHandle" /> 類型或這些類型的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-210">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span>
          </span>
          <span data-ttu-id="1d8a3-211">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-211">-or-</span>
          </span>
          <span data-ttu-id="1d8a3-212">包含 <paramref name="type" /> 的組件是以 <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" /> 建立的動態組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-212">The assembly that contains <paramref name="type" /> is a dynamic assembly that was created with <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="1d8a3-213">正在呼叫的建構函式擲回例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-213">The constructor being called throws an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="1d8a3-214">
            <block subset="none" type="note">
              <para> 在[適用於 Microsoft Store 應用程式的 .NET](http://go.microsoft.com/fwlink/?LinkID=247912)中，或[可攜式類別庫](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md)中，改為捕捉基底類別例外狀況 <see cref="T:System.MemberAccessException" />。</para>
            </block>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-214">
              <block subset="none" type="note">
                <para> In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <see cref="T:System.MemberAccessException" />, instead.  </para>
              </block>
            </span>
          </span>
          <span data-ttu-id="1d8a3-215">呼叫端沒有呼叫這個建構函式的權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-215">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="1d8a3-216">無法建立抽象類別的執行個體，或者這個成員曾被晚期繫結機制叫用過。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-216">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">
          <span data-ttu-id="1d8a3-217">COM 類型不是透過 <see cref="Overload:System.Type.GetTypeFromProgID" /> 或 <see cref="Overload:System.Type.GetTypeFromCLSID" /> 取得。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-217">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="1d8a3-218">
            <block subset="none" type="note">
              <para> 在[適用於 Microsoft Store 應用程式的 .NET](http://go.microsoft.com/fwlink/?LinkID=247912)中，或[可攜式類別庫](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md)中，改為捕捉基底類別例外狀況 <see cref="T:System.MissingMemberException" />。</para>
            </block>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-218">
              <block subset="none" type="note">
                <para> In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <see cref="T:System.MissingMemberException" />, instead.  </para>
              </block>
            </span>
          </span>
          <span data-ttu-id="1d8a3-219">找不到相符的公用建構函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-219">No matching public constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.COMException">
          <span data-ttu-id="1d8a3-220">
            <paramref name="type" /> 是 COM 物件，但用來取得類型的類別識別項無效，或已識別的類別未經登錄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-220">
              <paramref name="type" /> is a COM object but the class identifier used to obtain the type is invalid, or the identified class is not registered.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="1d8a3-221">
            <paramref name="type" /> 不是有效的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-221">
              <paramref name="type" /> is not a valid type.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="1d8a3-222">提供建立委派的執行個體時，呼叫 unmanaged 程式碼的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-222">for the ability to call unmanaged code when creating an instance of a delegate.</span>
          </span>
          <span data-ttu-id="1d8a3-223">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-223">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="1d8a3-224">用來存取非公用類型，不論其授與集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-224">for accessing nonpublic types regardless of their grant sets.</span>
          </span>
          <span data-ttu-id="1d8a3-225">相關聯的列舉型別： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-225">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (ActivationContext activationContext, string[] activationCustomData);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(class System.ActivationContext activationContext, string[] activationCustomData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.ActivationContext,System.String[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(ActivationContext ^ activationContext, cli::array &lt;System::String ^&gt; ^ activationCustomData);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : ActivationContext * string[] -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstance (activationContext, activationCustomData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activationContext" Type="System.ActivationContext" />
        <Parameter Name="activationCustomData" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="activationContext">
          <span data-ttu-id="1d8a3-226">啟動內容物件，指定要建立的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-226">An activation context object that specifies the object to create.</span>
          </span>
        </param>
        <param name="activationCustomData">
          <span data-ttu-id="1d8a3-227">Unicode 字串的陣列，包含自訂啟動資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-227">An array of Unicode strings that contain custom activation data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1d8a3-228">建立類型的執行個體，這個類型是由指定的 <see cref="T:System.ActivationContext" /> 物件所指派，並且是以指定的自訂啟動資料所啟動。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-228">Creates an instance of the type that is designated by the specified <see cref="T:System.ActivationContext" /> object and activated with the specified custom activation data.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1d8a3-229">必須解除包裝的控制代碼，用來存取新建立的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-229">A handle that must be unwrapped to access the newly created object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d8a3-230">使用<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>要未包裝的傳回值的方法。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-230">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="1d8a3-231">啟用內容可在資訊清單架構啟動過程中，若要設定網域原則，並提供應用程式為基礎的安全性模型。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-231">The activation context is used during manifest-based activation to set up the domain policy and to provide an application-based security model.</span></span> <span data-ttu-id="1d8a3-232"><xref:System.ActivationContext>類別包含<xref:System.ApplicationIdentity>提供存取權的應用程式資訊清單的物件。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-232">The <xref:System.ActivationContext> class contains an <xref:System.ApplicationIdentity> object that provides access to the application manifest.</span></span> <span data-ttu-id="1d8a3-233">如需詳細資訊，請參閱 <xref:System.Security.Policy.ApplicationSecurityManager> 類別。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-233">For more information, see the <xref:System.Security.Policy.ApplicationSecurityManager> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ActivationContext" />
        <altmember cref="T:System.ApplicationIdentity" />
        <altmember cref="T:System.Security.Policy.ApplicationSecurityManager" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (string assemblyName, string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(string assemblyName, string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance (assemblyName As String, typeName As String) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(System::String ^ assemblyName, System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : string * string -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstance (assemblyName, typeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyName">
          <span data-ttu-id="1d8a3-234">組件的名稱，該組件包含要在其中搜尋名稱為 <c>typeName</c> 的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-234">The name of the assembly where the type named <c>typeName</c> is sought.</span>
          </span>
          <span data-ttu-id="1d8a3-235">如果 <c>assemblyName</c> 為 <see langword="null" />，則會搜尋執行中的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-235">If <c>assemblyName</c> is <see langword="null" />, the executing assembly is searched.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="1d8a3-236">慣用類型的完整名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-236">The fully qualified name of the preferred type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1d8a3-237">使用具名組件和預設建構函式，建立已具有指定名稱之類型的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-237">Creates an instance of the type whose name is specified, using the named assembly and default constructor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1d8a3-238">必須解除包裝的控制代碼，用來存取新建立的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-238">A handle that must be unwrapped to access the newly created instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d8a3-239">使用<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>要未包裝的傳回值。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-239">Use <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> to unwrap the return value.</span></span>  
  
 <span data-ttu-id="1d8a3-240">`assemblyName` 可以是下列其中一項：</span><span class="sxs-lookup"><span data-stu-id="1d8a3-240">`assemblyName` can be either of the following:</span></span>  
  
-   <span data-ttu-id="1d8a3-241">組件，而它的路徑或檔案的副檔名不簡單名稱。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-241">The simple name of an assembly, without its path or file extension.</span></span> <span data-ttu-id="1d8a3-242">例如，您會指定`TypeExtensions`其路徑和名稱是.\bin\TypeExtensions.dll 組件。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-242">For example, you would specify `TypeExtensions` for an assembly whose path and name are .\bin\TypeExtensions.dll.</span></span>  
  
-   <span data-ttu-id="1d8a3-243">帶正負號的組件，其中包含其簡單名稱、 版本、 文化特性和公開金鑰語彙基元; 的完整名稱例如，"TypeExtensions，version=1.0.0.0，Culture = neutral，PublicKeyToken = 181869f2f7435b51"。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-243">The full name of a signed assembly, which consists of its simple name, version, culture, and public key token; for example, "TypeExtensions, Version=1.0.0.0, Culture=neutral, PublicKeyToken=181869f2f7435b51".</span></span>  
  
 <span data-ttu-id="1d8a3-244">如需有關 common language runtime 如何識別及載入組件的詳細資訊，請參閱 <<c0> [ 執行階段如何找出組件](~/docs/framework/deployment/how-the-runtime-locates-assemblies.md)。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-244">For more information on how the common language runtime identifies and loads assemblies, see [How the Runtime Locates Assemblies](~/docs/framework/deployment/how-the-runtime-locates-assemblies.md).</span></span> <span data-ttu-id="1d8a3-245">如需使用應用程式組態檔來定義組件位置的資訊，請參閱[指定組件的位置](~/docs/framework/configure-apps/specify-assembly-location.md)。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-245">For information on using the application configuration file to define assembly locations, see [Specifying an Assembly's Location](~/docs/framework/configure-apps/specify-assembly-location.md).</span></span> <span data-ttu-id="1d8a3-246">如果`assemblyName`找到，它會載入預設內容中。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-246">If `assemblyName` is found, it is loaded in the default context.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1d8a3-247">開頭[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]，這個方法可用來建立非公用型別，如果呼叫者已授與<xref:System.Security.Permissions.ReflectionPermission>使用<xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType>旗標，以及包含非公用類型的組件的授權集是否限制為呼叫者的授與設定或其子集。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-247">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to create nonpublic types if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types is restricted to the caller’s grant set or to a subset thereof.</span></span> <span data-ttu-id="1d8a3-248">(請參閱[反映的安全性考量](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)。)</span><span class="sxs-lookup"><span data-stu-id="1d8a3-248">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="1d8a3-249">若要使用這項功能，您的應用程式應將目標設為 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] (含) 以後版本。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-249">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1d8a3-250">下列範例會定義名為類別`Person`名為組件中`PersonInfo`。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-250">The following example defines a class named `Person` in an assembly named `PersonInfo`.</span></span> <span data-ttu-id="1d8a3-251">請注意，`Person`類別有兩個建構函式，其中之一就是無參數。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-251">Note that the `Person` class has two constructors, one of which is parameterless.</span></span>  
  
 [!code-csharp[System.Activator.CreateInstance#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.activator.createinstance/cs/personinfo.cs#1)]
 [!code-vb[System.Activator.CreateInstance#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.activator.createinstance/vb/personinfo.vb#1)]  
  
 <span data-ttu-id="1d8a3-252">下列範例會呼叫<xref:System.Activator.CreateInstance%28System.String%2CSystem.String%29>方法具現化`Person`類別。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-252">The following example calls the <xref:System.Activator.CreateInstance%28System.String%2CSystem.String%29> method to instantiate the `Person` class.</span></span> <span data-ttu-id="1d8a3-253">它需要 PersonInfo.dll 可以加入至專案的參考。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-253">It requires a reference to PersonInfo.dll to be added to the project.</span></span> <span data-ttu-id="1d8a3-254">因為<xref:System.Activator.CreateInstance%28System.String%2CSystem.String%29>方法呼叫`Person`類別預設建構函式，此範例將值指派給其`Name`屬性。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-254">Because the <xref:System.Activator.CreateInstance%28System.String%2CSystem.String%29> method calls the `Person` class default constructor,  the example assigns a value to its `Name` property.</span></span>  
  
 [!code-csharp[System.Activator.CreateInstance#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.activator.createinstance/cs/createinstanceex1.cs#2)]
 [!code-vb[System.Activator.CreateInstance#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.activator.createinstance/vb/createinstanceex1.vb#2)]  
  
 <span data-ttu-id="1d8a3-255">不過，<xref:System.Activator.CreateInstance%2A>常被稱為型別，在跨電腦界限或在設計階段不知道，具現化。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-255">However, <xref:System.Activator.CreateInstance%2A> is frequently called to instantiate a type that crosses machine boundaries or that is not known at design time.</span></span> <span data-ttu-id="1d8a3-256">在此情況下，您不能包含在專案中的組件的參考，並不能進行型別之成員的早期繫結呼叫。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-256">In this case, you cannot include a reference to the assembly in the project and cannot make early-bound calls to the type's members.</span></span> <span data-ttu-id="1d8a3-257">若要解決這項限制，下列範例會使用<xref:System.Activator.CreateInstance%2A>方法，以及將值指派給反映`Person`物件的`Name`屬性，並顯示其值。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-257">To work around this limitation, the following example uses the <xref:System.Activator.CreateInstance%2A> method along with reflection to assign a value to the `Person` object's `Name` property and to display its value.</span></span>  
  
 [!code-csharp[System.Activator.CreateInstance#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.activator.createinstance/cs/createinstanceex1a.cs#3)]
 [!code-vb[System.Activator.CreateInstance#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.activator.createinstance/vb/createinstanceex1a.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1d8a3-258">
            <paramref name="typeName" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-258">
              <paramref name="typeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="1d8a3-259">找不到相符的公用建構函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-259">No matching public constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="1d8a3-260">在 <paramref name="assemblyName" /> 中找不到 <paramref name="typename" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-260">
              <paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="1d8a3-261">找不到 <paramref name="assemblyName" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-261">
              <paramref name="assemblyName" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="1d8a3-262">呼叫端沒有呼叫這個建構函式的權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-262">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="1d8a3-263">您無法建立抽象類別的執行個體，或者這個成員曾被晚期繫結機制叫用過。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-263">You cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="1d8a3-264">透過反映叫用並擲回例外狀況的建構函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-264">The constructor, which was invoked through reflection, threw an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">
          <span data-ttu-id="1d8a3-265">COM 類型不是透過 <see cref="Overload:System.Type.GetTypeFromProgID" /> 或 <see cref="Overload:System.Type.GetTypeFromCLSID" /> 取得。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-265">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="1d8a3-266">不支援建立 <see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" /> 和 <see cref="T:System.RuntimeArgumentHandle" /> 類型或這些類型的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-266">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="1d8a3-267">
            <paramref name="assemblyName" /> 不是有效的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-267">
              <paramref name="assemblyName" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="1d8a3-268">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-268">-or-</span>
          </span>
          <span data-ttu-id="1d8a3-269">目前載入的是 Common Language Runtime (CLR) 2.0 版或更新版本，且已使用比目前載入之版本更新的 CLR 版本來編譯 <paramref name="assemblyName" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-269">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span>
          </span>
          <span data-ttu-id="1d8a3-270">請注意，.NET Framework 2.0、3.0 和 3.5 版全部都會使用 CLR 2.0 版。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-270">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="1d8a3-271">使用兩個不同的辨識項載入組件或模組兩次。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-271">An assembly or module was loaded twice with two different evidences.</span>
          </span>
          <span data-ttu-id="1d8a3-272">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-272">-or-</span>
          </span>
          <span data-ttu-id="1d8a3-273">組件名稱或程式碼基底無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-273">The assembly name or code base is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="1d8a3-274">提供建立委派的執行個體時，呼叫 unmanaged 程式碼的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-274">for the ability to call unmanaged code when creating an instance of a delegate.</span>
          </span>
          <span data-ttu-id="1d8a3-275">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-275">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="1d8a3-276">用來存取非公用類型，不論其授權集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-276">for accessing nonpublic types regardless of their grant set.</span>
          </span>
          <span data-ttu-id="1d8a3-277">相關聯的列舉型別： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-277">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static object CreateInstance (Type type, bool nonPublic);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateInstance(class System.Type type, bool nonPublic) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.Type,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateInstance(Type ^ type, bool nonPublic);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : Type * bool -&gt; obj" Usage="System.Activator.CreateInstance (type, nonPublic)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="nonPublic" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="1d8a3-278">要建立的物件類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-278">The type of object to create.</span>
          </span>
        </param>
        <param name="nonPublic">
          <span data-ttu-id="1d8a3-279">如果公用或非公用預設建構函式可相符，則為 <see langword="true" />；如果只有公用預設建構函式可相符，則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-279">
              <see langword="true" /> if a public or nonpublic default constructor can match; <see langword="false" /> if only a public default constructor can match.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1d8a3-280">使用指定之類型的預設建構函式，建立該類型的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-280">Creates an instance of the specified type using that type's default constructor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1d8a3-281">新建立物件的參考。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-281">A reference to the newly created object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="1d8a3-282">開頭[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]，這個方法可用來存取非公用類型和成員，如果呼叫者已授與<xref:System.Security.Permissions.ReflectionPermission>使用<xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType>旗標，以及包含非公用類型和成員的組件的授權集是否限制若要將呼叫者的授與集或子集。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-282">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access nonpublic types and members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types and members is restricted to the caller’s grant set or to a subset thereof.</span></span> <span data-ttu-id="1d8a3-283">(請參閱[反映的安全性考量](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)。)</span><span class="sxs-lookup"><span data-stu-id="1d8a3-283">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="1d8a3-284">若要使用這項功能，您的應用程式應將目標設為 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] (含) 以後版本。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-284">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1d8a3-285">
            <paramref name="type" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-285">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1d8a3-286">
            <paramref name="type" /> 不是 <see langword="RuntimeType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-286">
              <paramref name="type" /> is not a <see langword="RuntimeType" />.</span>
          </span>
          <span data-ttu-id="1d8a3-287">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-287">-or-</span>
          </span>
          <span data-ttu-id="1d8a3-288">
            <paramref name="type" /> 是開放式泛型類型 (也就是 <see cref="P:System.Type.ContainsGenericParameters" /> 屬性會傳回 <see langword="true" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-288">
              <paramref name="type" /> is an open generic type (that is, the <see cref="P:System.Type.ContainsGenericParameters" /> property returns <see langword="true" />).</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="1d8a3-289">
            <paramref name="type" /> 不可以是 <see cref="T:System.Reflection.Emit.TypeBuilder" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-289">
              <paramref name="type" /> cannot be a <see cref="T:System.Reflection.Emit.TypeBuilder" />.</span>
          </span>
          <span data-ttu-id="1d8a3-290">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-290">-or-</span>
          </span>
          <span data-ttu-id="1d8a3-291">不支援建立 <see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" /> 和 <see cref="T:System.RuntimeArgumentHandle" /> 類型或這些類型的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-291">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span>
          </span>
          <span data-ttu-id="1d8a3-292">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-292">-or-</span>
          </span>
          <span data-ttu-id="1d8a3-293">包含 <paramref name="type" /> 的組件是以 <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" /> 建立的動態組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-293">The assembly that contains <paramref name="type" /> is a dynamic assembly that was created with <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="1d8a3-294">正在呼叫的建構函式擲回例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-294">The constructor being called throws an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="1d8a3-295">呼叫端沒有呼叫這個建構函式的權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-295">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="1d8a3-296">無法建立抽象類別的執行個體，或者這個成員曾被晚期繫結機制叫用過。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-296">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">
          <span data-ttu-id="1d8a3-297">COM 類型不是透過 <see cref="Overload:System.Type.GetTypeFromProgID" /> 或 <see cref="Overload:System.Type.GetTypeFromCLSID" /> 取得。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-297">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="1d8a3-298">找不到相符的公用建構函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-298">No matching public constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.COMException">
          <span data-ttu-id="1d8a3-299">
            <paramref name="type" /> 是 COM 物件，但用來取得類型的類別識別項無效，或已識別的類別未經登錄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-299">
              <paramref name="type" /> is a COM object but the class identifier used to obtain the type is invalid, or the identified class is not registered.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="1d8a3-300">
            <paramref name="type" /> 不是有效的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-300">
              <paramref name="type" /> is not a valid type.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="1d8a3-301">提供建立委派的執行個體時，呼叫 unmanaged 程式碼的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-301">for the ability to call unmanaged code when creating an instance of a delegate.</span>
          </span>
          <span data-ttu-id="1d8a3-302">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-302">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="1d8a3-303">用來存取非公用類型和成員而不論是否其授權集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-303">for accessing nonpublic types and members regardless of their grant set.</span>
          </span>
          <span data-ttu-id="1d8a3-304">相關聯的列舉型別： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-304">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static object CreateInstance (Type type, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateInstance(class System.Type type, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.Type,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateInstance(Type ^ type, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : Type * obj[] -&gt; obj" Usage="System.Activator.CreateInstance (type, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="1d8a3-305">要建立的物件類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-305">The type of object to create.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="1d8a3-306">引數的陣列，此引數在數目、順序和類型上符合要叫用的建構函式的參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-306">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span>
          </span>
          <span data-ttu-id="1d8a3-307">如果 <c>args</c> 是空陣列或 <see langword="null" />，會叫用未採用參數的建構函式 (預設的建構函式)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-307">If <c>args</c> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1d8a3-308">使用最符合指定參數的建構函式，建立指定類型的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-308">Creates an instance of the specified type using the constructor that best matches the specified parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1d8a3-309">新建立物件的參考。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-309">A reference to the newly created object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d8a3-310">要叫用建構函式必須是可存取，而且必須提供指定的引數清單最特定的相符項目。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-310">The constructor to be invoked must be accessible and must provide the most specific match with the specified argument list.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1d8a3-311">開頭[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]，這個方法可用來存取非公用型別，如果呼叫者已授與<xref:System.Security.Permissions.ReflectionPermission>使用<xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType>旗標，以及包含非公用類型的組件的授權集是否限制為呼叫者的授與設定或其子集。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-311">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access nonpublic types if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types is restricted to the caller’s grant set or to a subset thereof.</span></span> <span data-ttu-id="1d8a3-312">(請參閱[反映的安全性考量](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)。)</span><span class="sxs-lookup"><span data-stu-id="1d8a3-312">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="1d8a3-313">若要使用這項功能，您的應用程式應將目標設為 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] (含) 以後版本。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-313">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1d8a3-314">下列範例會呼叫<xref:System.Activator.CreateInstance%28System.Type%2CSystem.Object%5B%5D%29>方法用來建立<xref:System.String>物件。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-314">The following example calls the  <xref:System.Activator.CreateInstance%28System.Type%2CSystem.Object%5B%5D%29> method to create a <xref:System.String> object.</span></span> <span data-ttu-id="1d8a3-315">它會呼叫<xref:System.String.%23ctor%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType>建構函式來具現化字串，包含十個項目，從字元陣列的第十四個位置開始。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-315">It calls the <xref:System.String.%23ctor%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> constructor to instantiate a string that contains ten elements from a character array starting at the fourteenth position.</span></span>  
  
 [!code-csharp[System.Activator.CreateInstance#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.activator.createinstance/cs/CreateInstance5.cs#5)]
 [!code-vb[System.Activator.CreateInstance#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.activator.createinstance/vb/CreateInstance5.vb#5)]  
  
 <span data-ttu-id="1d8a3-316">下列範例會建立不規則的陣列，其項目是引數傳遞至<xref:System.String>建構函式。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-316">The following example creates a jagged array whose elements are arguments to be passed to a <xref:System.String> constructor.</span></span> <span data-ttu-id="1d8a3-317">範例接著會傳遞至每個陣列<xref:System.Activator.CreateInstance%28System.Type%2CSystem.Object%5B%5D%29>方法來叫用適當的字串建構函式。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-317">The example then passes each array to the <xref:System.Activator.CreateInstance%28System.Type%2CSystem.Object%5B%5D%29> method to invoke the appropriate string constructor.</span></span>  
  
 [!code-csharp[System.Activator.CreateInstance#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.activator.createinstance/cs/createinstance2.cs#4)]
 [!code-vb[System.Activator.CreateInstance#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.activator.createinstance/vb/createinstance2.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1d8a3-318">
            <paramref name="type" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-318">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1d8a3-319">
            <paramref name="type" /> 不是 <see langword="RuntimeType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-319">
              <paramref name="type" /> is not a <see langword="RuntimeType" />.</span>
          </span>
          <span data-ttu-id="1d8a3-320">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-320">-or-</span>
          </span>
          <span data-ttu-id="1d8a3-321">
            <paramref name="type" /> 是開放式泛型類型 (也就是 <see cref="P:System.Type.ContainsGenericParameters" /> 屬性會傳回 <see langword="true" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-321">
              <paramref name="type" /> is an open generic type (that is, the <see cref="P:System.Type.ContainsGenericParameters" /> property returns <see langword="true" />).</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="1d8a3-322">
            <paramref name="type" /> 不可以是 <see cref="T:System.Reflection.Emit.TypeBuilder" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-322">
              <paramref name="type" /> cannot be a <see cref="T:System.Reflection.Emit.TypeBuilder" />.</span>
          </span>
          <span data-ttu-id="1d8a3-323">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-323">-or-</span>
          </span>
          <span data-ttu-id="1d8a3-324">不支援建立 <see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" /> 和 <see cref="T:System.RuntimeArgumentHandle" /> 類型或這些類型的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-324">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span>
          </span>
          <span data-ttu-id="1d8a3-325">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-325">-or-</span>
          </span>
          <span data-ttu-id="1d8a3-326">包含 <paramref name="type" /> 的組件是以 <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" /> 建立的動態組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-326">The assembly that contains <paramref name="type" /> is a dynamic assembly that was created with <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" />.</span>
          </span>
          <span data-ttu-id="1d8a3-327">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-327">-or-</span>
          </span>
          <span data-ttu-id="1d8a3-328">最符合 <paramref name="args" /> 的建構函式有 <see langword="varargs" /> 引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-328">The constructor that best matches <paramref name="args" /> has <see langword="varargs" /> arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="1d8a3-329">正在呼叫的建構函式擲回例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-329">The constructor being called throws an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="1d8a3-330">
            <block subset="none" type="note">
              <para> 在[適用於 Microsoft Store 應用程式的 .NET](http://go.microsoft.com/fwlink/?LinkID=247912)中，或[可攜式類別庫](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md)中，改為捕捉基底類別例外狀況 <see cref="T:System.MemberAccessException" />。</para>
            </block>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-330">
              <block subset="none" type="note">
                <para> In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <see cref="T:System.MemberAccessException" />, instead.  </para>
              </block>
            </span>
          </span>
          <span data-ttu-id="1d8a3-331">呼叫端沒有呼叫這個建構函式的權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-331">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="1d8a3-332">無法建立抽象類別的執行個體，或者這個成員曾被晚期繫結機制叫用過。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-332">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">
          <span data-ttu-id="1d8a3-333">COM 類型不是透過 <see cref="Overload:System.Type.GetTypeFromProgID" /> 或 <see cref="Overload:System.Type.GetTypeFromCLSID" /> 取得。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-333">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="1d8a3-334">
            <block subset="none" type="note">
              <para> 在[適用於 Microsoft Store 應用程式的 .NET](http://go.microsoft.com/fwlink/?LinkID=247912)中，或[可攜式類別庫](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md)中，改為捕捉基底類別例外狀況 <see cref="T:System.MissingMemberException" />。</para>
            </block>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-334">
              <block subset="none" type="note">
                <para> In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <see cref="T:System.MissingMemberException" />, instead.  </para>
              </block>
            </span>
          </span>
          <span data-ttu-id="1d8a3-335">找不到相符的公用建構函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-335">No matching public constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.COMException">
          <span data-ttu-id="1d8a3-336">
            <paramref name="type" /> 是 COM 物件，但用來取得類型的類別識別項無效，或已識別的類別未經登錄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-336">
              <paramref name="type" /> is a COM object but the class identifier used to obtain the type is invalid, or the identified class is not registered.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="1d8a3-337">
            <paramref name="type" /> 不是有效的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-337">
              <paramref name="type" /> is not a valid type.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="1d8a3-338">提供建立委派的執行個體時，呼叫 unmanaged 程式碼的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-338">for the ability to call unmanaged code when creating an instance of a delegate.</span>
          </span>
          <span data-ttu-id="1d8a3-339">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-339">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="1d8a3-340">用來存取非公用類型，不論其授權集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-340">for accessing nonpublic types regardless of their grant set.</span>
          </span>
          <span data-ttu-id="1d8a3-341">相關聯的列舉型別： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-341">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (AppDomain domain, string assemblyName, string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(class System.AppDomain domain, string assemblyName, string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance (domain As AppDomain, assemblyName As String, typeName As String) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(AppDomain ^ domain, System::String ^ assemblyName, System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : AppDomain * string * string -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstance (domain, assemblyName, typeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.AppDomain" />
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="domain">
          <span data-ttu-id="1d8a3-342">建立名稱為 <c>typeName</c> 之類型的遠端網域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-342">The remote domain where the type named <c>typeName</c> is created.</span>
          </span>
        </param>
        <param name="assemblyName">
          <span data-ttu-id="1d8a3-343">組件的名稱，該組件包含要在其中搜尋名稱為 <c>typeName</c> 的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-343">The name of the assembly where the type named <c>typeName</c> is sought.</span>
          </span>
          <span data-ttu-id="1d8a3-344">如果 <c>assemblyName</c> 為 <see langword="null" />，則會搜尋執行中的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-344">If <c>assemblyName</c> is <see langword="null" />, the executing assembly is searched.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="1d8a3-345">慣用類型的完整名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-345">The fully qualified name of the preferred type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1d8a3-346">使用具名組件和預設建構函式，建立已在指定遠端網域中具有指定名稱之類型的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-346">Creates an instance of the type whose name is specified in the specified remote domain, using the named assembly and default constructor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1d8a3-347">必須解除包裝的控制代碼，用來存取新建立的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-347">A handle that must be unwrapped to access the newly created instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d8a3-348">使用<xref:System.Activator.CreateInstance%2A>主機需要具有限制的安全性權限的應用程式定義域中執行程式碼。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-348">Use <xref:System.Activator.CreateInstance%2A> when a host needs to execute code in an application domain that has restricted security permissions.</span></span>  
  
 <span data-ttu-id="1d8a3-349">使用<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>要未包裝的傳回值。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-349">Use <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> to unwrap the return value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1d8a3-350">這個方法會使用<xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType>要求必須受到完全信任立即呼叫端。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-350">This method uses <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> to require the immediate caller to have full trust.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1d8a3-351">
            <paramref name="typeName" /> 或 <paramref name="domain" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-351">
              <paramref name="typeName" /> or <paramref name="domain" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="1d8a3-352">找不到相符的公用建構函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-352">No matching public constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="1d8a3-353">在 <paramref name="assemblyName" /> 中找不到 <paramref name="typename" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-353">
              <paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="1d8a3-354">找不到 <paramref name="assemblyName" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-354">
              <paramref name="assemblyName" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="1d8a3-355">呼叫端沒有呼叫這個建構函式的權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-355">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="1d8a3-356">無法建立抽象型別的執行個體 (Instance)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-356">Cannot create an instance of an abstract type.</span>
          </span>
          <span data-ttu-id="1d8a3-357">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-357">-or-</span>
          </span>
          <span data-ttu-id="1d8a3-358">這個成員曾被晚期繫結機制叫用過。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-358">This member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="1d8a3-359">透過反映叫用並擲回例外狀況的建構函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-359">The constructor, which was invoked through reflection, threw an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">
          <span data-ttu-id="1d8a3-360">COM 類型不是透過 <see cref="Overload:System.Type.GetTypeFromProgID" /> 或 <see cref="Overload:System.Type.GetTypeFromCLSID" /> 取得。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-360">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="1d8a3-361">不支援建立 <see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" /> 和 <see cref="T:System.RuntimeArgumentHandle" /> 類型或這些類型的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-361">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="1d8a3-362">
            <paramref name="assemblyName" /> 不是有效的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-362">
              <paramref name="assemblyName" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="1d8a3-363">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-363">-or-</span>
          </span>
          <span data-ttu-id="1d8a3-364">目前載入的是 Common Language Runtime (CLR) 2.0 版或更新版本，且已使用比目前載入之版本更新的 CLR 版本來編譯 <paramref name="assemblyName" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-364">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span>
          </span>
          <span data-ttu-id="1d8a3-365">請注意，.NET Framework 2.0、3.0 和 3.5 版全部都會使用 CLR 2.0 版。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-365">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="1d8a3-366">使用兩個不同的辨識項載入組件或模組兩次。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-366">An assembly or module was loaded twice with two different evidences.</span>
          </span>
          <span data-ttu-id="1d8a3-367">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-367">-or-</span>
          </span>
          <span data-ttu-id="1d8a3-368">組件名稱或程式碼基底無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-368">The assembly name or code base is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="1d8a3-369">提供建立委派的執行個體時，呼叫 unmanaged 程式碼的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-369">for the ability to call unmanaged code when creating an instance of a delegate.</span>
          </span>
          <span data-ttu-id="1d8a3-370">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-370">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="1d8a3-371">提供所有型別成員上叫用作業的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-371">for the ability to invoke operations on all type members.</span>
          </span>
          <span data-ttu-id="1d8a3-372">相關聯的列舉型別： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-372">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="1d8a3-373">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-373">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="1d8a3-374">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-374">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (string assemblyName, string typeName, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(string assemblyName, string typeName, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.String,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance (assemblyName As String, typeName As String, activationAttributes As Object()) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(System::String ^ assemblyName, System::String ^ typeName, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : string * string * obj[] -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstance (assemblyName, typeName, activationAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="assemblyName">
          <span data-ttu-id="1d8a3-375">組件的名稱，該組件包含要在其中搜尋名稱為 <c>typeName</c> 的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-375">The name of the assembly where the type named <c>typeName</c> is sought.</span>
          </span>
          <span data-ttu-id="1d8a3-376">如果 <c>assemblyName</c> 為 <see langword="null" />，則會搜尋執行中的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-376">If <c>assemblyName</c> is <see langword="null" />, the executing assembly is searched.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="1d8a3-377">慣用類型的完整名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-377">The fully qualified name of the preferred type.</span>
          </span>
        </param>
        <param name="activationAttributes">
          <span data-ttu-id="1d8a3-378">一或多個屬性的陣列，此屬性可參與啟動過程。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-378">An array of one or more attributes that can participate in activation.</span>
          </span>
          <span data-ttu-id="1d8a3-379">陣列通常只會包含一個 <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> 物件來指定用以啟動遠端物件的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-379">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span>
          </span>
          <span data-ttu-id="1d8a3-380">此參數與啟動了用戶端的物件相關。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-380">This parameter is related to client-activated objects.</span>
          </span>
          <span data-ttu-id="1d8a3-381">用戶端啟動是一項舊的技術，保留目的在提供回溯相容性，不建議用於新的開發。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-381">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span>
          </span>
          <span data-ttu-id="1d8a3-382">分散式應用程式應該改用 Windows Communication Foundation。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-382">Distributed applications should instead use Windows Communication Foundation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1d8a3-383">使用具名組件和預設建構函式，建立已具有指定名稱之類型的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-383">Creates an instance of the type whose name is specified, using the named assembly and default constructor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1d8a3-384">必須解除包裝的控制代碼，用來存取新建立的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-384">A handle that must be unwrapped to access the newly created instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d8a3-385">使用<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>要未包裝的傳回值。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-385">Use <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> to unwrap the return value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1d8a3-386">開頭[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]，這個方法可用來建立非公用型別，如果呼叫者已授與<xref:System.Security.Permissions.ReflectionPermission>使用<xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType>旗標和非公用類型的授權集是否限制為呼叫端的授權集或子集。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-386">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to create nonpublic types if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the nonpublic types is restricted to the caller’s grant set or to a subset thereof.</span></span> <span data-ttu-id="1d8a3-387">(請參閱[反映的安全性考量](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)。)</span><span class="sxs-lookup"><span data-stu-id="1d8a3-387">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="1d8a3-388">若要使用這項功能，您的應用程式應將目標設為 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] (含) 以後版本。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-388">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1d8a3-389">
            <paramref name="typeName" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-389">
              <paramref name="typeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="1d8a3-390">找不到相符的公用建構函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-390">No matching public constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="1d8a3-391">在 <paramref name="assemblyName" /> 中找不到 <paramref name="typename" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-391">
              <paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="1d8a3-392">找不到 <paramref name="assemblyName" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-392">
              <paramref name="assemblyName" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="1d8a3-393">呼叫端沒有呼叫這個建構函式的權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-393">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="1d8a3-394">無法建立抽象類別的執行個體，或者這個成員曾被晚期繫結機制叫用過。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-394">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">
          <span data-ttu-id="1d8a3-395">COM 類型不是透過 <see cref="Overload:System.Type.GetTypeFromProgID" /> 或 <see cref="Overload:System.Type.GetTypeFromCLSID" /> 取得。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-395">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="1d8a3-396">不支援建立 <see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" /> 和 <see cref="T:System.RuntimeArgumentHandle" /> 類型或這些類型的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-396">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span>
          </span>
          <span data-ttu-id="1d8a3-397">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-397">-or-</span>
          </span>
          <span data-ttu-id="1d8a3-398">
            <paramref name="activationAttributes" /> 不是空的陣列，而建立中的類型不是衍生自 <see cref="T:System.MarshalByRefObject" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-398">
              <paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span>
          </span>
          <span data-ttu-id="1d8a3-399">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-399">-or-</span>
          </span>
          <span data-ttu-id="1d8a3-400">
            <paramref name="activationAttributes" /> 不是 <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-400">
              <paramref name="activationAttributes" /> is not a <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /></span>
          </span>
          <span data-ttu-id="1d8a3-401">陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-401">array.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="1d8a3-402">
            <paramref name="assemblyName" /> 不是有效的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-402">
              <paramref name="assemblyName" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="1d8a3-403">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-403">-or-</span>
          </span>
          <span data-ttu-id="1d8a3-404">目前載入的是 Common Language Runtime (CLR) 2.0 版或更新版本，且已使用比目前載入之版本更新的 CLR 版本來編譯 <paramref name="assemblyName" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-404">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span>
          </span>
          <span data-ttu-id="1d8a3-405">請注意，.NET Framework 2.0、3.0 和 3.5 版全部都會使用 CLR 2.0 版。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-405">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="1d8a3-406">使用兩個不同的辨識項載入組件或模組兩次。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-406">An assembly or module was loaded twice with two different evidences.</span>
          </span>
          <span data-ttu-id="1d8a3-407">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-407">-or-</span>
          </span>
          <span data-ttu-id="1d8a3-408">組件名稱或程式碼基底無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-408">The assembly name or code base is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="1d8a3-409">嘗試在 <paramref name="activationAttributes" /> 所指定之目標中進行遠端啟動時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-409">An error occurred when attempting remote activation in a target specified in <paramref name="activationAttributes" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="1d8a3-410">提供建立委派的執行個體時，呼叫 unmanaged 程式碼的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-410">for the ability to call unmanaged code when creating an instance of a delegate.</span>
          </span>
          <span data-ttu-id="1d8a3-411">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-411">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="1d8a3-412">用來存取非公用類型，不論其授權集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-412">for accessing nonpublic types regardless of their grant set.</span>
          </span>
          <span data-ttu-id="1d8a3-413">相關聯的列舉型別： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-413">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static object CreateInstance (Type type, object[] args, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateInstance(class System.Type type, object[] args, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.Type,System.Object[],System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateInstance(Type ^ type, cli::array &lt;System::Object ^&gt; ^ args, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : Type * obj[] * obj[] -&gt; obj" Usage="System.Activator.CreateInstance (type, args, activationAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="1d8a3-414">要建立的物件類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-414">The type of object to create.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="1d8a3-415">引數的陣列，此引數在數目、順序和類型上符合要叫用的建構函式的參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-415">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span>
          </span>
          <span data-ttu-id="1d8a3-416">如果 <c>args</c> 是空陣列或 <see langword="null" />，會叫用未採用參數的建構函式 (預設的建構函式)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-416">If <c>args</c> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span>
          </span>
        </param>
        <param name="activationAttributes">
          <span data-ttu-id="1d8a3-417">一或多個屬性的陣列，此屬性可參與啟動過程。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-417">An array of one or more attributes that can participate in activation.</span>
          </span>
          <span data-ttu-id="1d8a3-418">陣列通常只會包含一個 <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> 物件來指定用以啟動遠端物件的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-418">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span>
          </span>
          <span data-ttu-id="1d8a3-419">此參數與啟動了用戶端的物件相關。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-419">This parameter is related to client-activated objects.</span>
          </span>
          <span data-ttu-id="1d8a3-420">用戶端啟動是一項舊的技術，保留目的在提供回溯相容性，不建議用於新的開發。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-420">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span>
          </span>
          <span data-ttu-id="1d8a3-421">分散式應用程式應該改用 Windows Communication Foundation。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-421">Distributed applications should instead use Windows Communication Foundation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1d8a3-422">使用最符合指定參數的建構函式，建立指定類型的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-422">Creates an instance of the specified type using the constructor that best matches the specified parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1d8a3-423">新建立物件的參考。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-423">A reference to the newly created object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d8a3-424">要叫用建構函式必須是可存取，而且必須提供指定的引數清單最特定的相符項目。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-424">The constructor to be invoked must be accessible and must provide the most specific match with the specified argument list.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1d8a3-425">開頭[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]，這個方法可用來存取非公用型別，如果呼叫者已授與<xref:System.Security.Permissions.ReflectionPermission>使用<xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType>旗標，以及包含非公用類型的組件的授權集是否限制為呼叫者的授與設定或其子集。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-425">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access nonpublic types if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types is restricted to the caller’s grant set or to a subset thereof.</span></span> <span data-ttu-id="1d8a3-426">(請參閱[反映的安全性考量](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)。)</span><span class="sxs-lookup"><span data-stu-id="1d8a3-426">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="1d8a3-427">若要使用這項功能，您的應用程式應將目標設為 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] (含) 以後版本。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-427">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1d8a3-428">
            <paramref name="type" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-428">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1d8a3-429">
            <paramref name="type" /> 不是 <see langword="RuntimeType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-429">
              <paramref name="type" /> is not a <see langword="RuntimeType" />.</span>
          </span>
          <span data-ttu-id="1d8a3-430">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-430">-or-</span>
          </span>
          <span data-ttu-id="1d8a3-431">
            <paramref name="type" /> 是開放式泛型類型 (也就是 <see cref="P:System.Type.ContainsGenericParameters" /> 屬性會傳回 <see langword="true" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-431">
              <paramref name="type" /> is an open generic type (that is, the <see cref="P:System.Type.ContainsGenericParameters" /> property returns <see langword="true" />).</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="1d8a3-432">
            <paramref name="type" /> 不可以是 <see cref="T:System.Reflection.Emit.TypeBuilder" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-432">
              <paramref name="type" /> cannot be a <see cref="T:System.Reflection.Emit.TypeBuilder" />.</span>
          </span>
          <span data-ttu-id="1d8a3-433">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-433">-or-</span>
          </span>
          <span data-ttu-id="1d8a3-434">不支援建立 <see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" /> 和 <see cref="T:System.RuntimeArgumentHandle" /> 類型或這些類型的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-434">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span>
          </span>
          <span data-ttu-id="1d8a3-435">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-435">-or-</span>
          </span>
          <span data-ttu-id="1d8a3-436">
            <paramref name="activationAttributes" /> 不是空的陣列，而建立中的類型不是衍生自 <see cref="T:System.MarshalByRefObject" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-436">
              <paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span>
          </span>
          <span data-ttu-id="1d8a3-437">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-437">-or-</span>
          </span>
          <span data-ttu-id="1d8a3-438">包含 <paramref name="type" /> 的組件是以 <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" /> 建立的動態組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-438">The assembly that contains <paramref name="type" /> is a dynamic assembly that was created with <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" />.</span>
          </span>
          <span data-ttu-id="1d8a3-439">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-439">-or-</span>
          </span>
          <span data-ttu-id="1d8a3-440">最符合 <paramref name="args" /> 的建構函式有 <see langword="varargs" /> 引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-440">The constructor that best matches <paramref name="args" /> has <see langword="varargs" /> arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="1d8a3-441">正在呼叫的建構函式擲回例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-441">The constructor being called throws an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="1d8a3-442">呼叫端沒有呼叫這個建構函式的權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-442">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="1d8a3-443">無法建立抽象類別的執行個體，或者這個成員曾被晚期繫結機制叫用過。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-443">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">
          <span data-ttu-id="1d8a3-444">COM 類型不是透過 <see cref="Overload:System.Type.GetTypeFromProgID" /> 或 <see cref="Overload:System.Type.GetTypeFromCLSID" /> 取得。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-444">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="1d8a3-445">找不到相符的公用建構函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-445">No matching public constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.COMException">
          <span data-ttu-id="1d8a3-446">
            <paramref name="type" /> 是 COM 物件，但用來取得類型的類別識別項無效，或已識別的類別未經登錄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-446">
              <paramref name="type" /> is a COM object but the class identifier used to obtain the type is invalid, or the identified class is not registered.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="1d8a3-447">
            <paramref name="type" /> 不是有效的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-447">
              <paramref name="type" /> is not a valid type.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="1d8a3-448">提供建立委派的執行個體時，呼叫 unmanaged 程式碼的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-448">for the ability to call unmanaged code when creating an instance of a delegate.</span>
          </span>
          <span data-ttu-id="1d8a3-449">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-449">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="1d8a3-450">用來存取非公用類型，不論其授權集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-450">for accessing nonpublic types regardless of their grant set.</span>
          </span>
          <span data-ttu-id="1d8a3-451">相關聯的列舉型別： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-451">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static object CreateInstance (Type type, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateInstance(class System.Type type, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateInstance(Type ^ type, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : Type * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo -&gt; obj" Usage="System.Activator.CreateInstance (type, bindingAttr, binder, args, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="1d8a3-452">要建立的物件類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-452">The type of object to create.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="1d8a3-453">零或多個位元旗標的組合，此位元旗標會影響 <c>type</c> 建構函式的搜尋。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-453">A combination of zero or more bit flags that affect the search for the <c>type</c> constructor.</span>
          </span>
          <span data-ttu-id="1d8a3-454">如果 <c>bindingAttr</c> 為零，則會針對公用建構函式執行區分大小寫的搜尋。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-454">If <c>bindingAttr</c> is zero, a case-sensitive search for public constructors is conducted.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="1d8a3-455">使用 <c>bindingAttr</c> 和 <c>args</c> 來搜尋及識別 <c>type</c> 建構函式的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-455">An object that uses <c>bindingAttr</c> and <c>args</c> to seek and identify the <c>type</c> constructor.</span>
          </span>
          <span data-ttu-id="1d8a3-456">如果 <c>Binder</c> 為 <see langword="null" />，則會使用預設 Binder。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-456">If <c>binder</c> is <see langword="null" />, the default binder is used.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="1d8a3-457">引數的陣列，此引數在數目、順序和類型上符合要叫用的建構函式的參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-457">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span>
          </span>
          <span data-ttu-id="1d8a3-458">如果 <c>args</c> 是空陣列或 <see langword="null" />，會叫用未採用參數的建構函式 (預設的建構函式)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-458">If <c>args</c> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="1d8a3-459">特定文化特性的資訊，其可控制 <c>args</c> 到型式類型 (為 <c>type</c> 建構函式宣告) 的強制轉型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-459">Culture-specific information that governs the coercion of <c>args</c> to the formal types declared for the <c>type</c> constructor.</span>
          </span>
          <span data-ttu-id="1d8a3-460">如果「文化特性 (Culture)」<c></c>是 <see langword="null" />，則使用目前執行緒的 <see cref="T:System.Globalization.CultureInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-460">If <c>culture</c> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1d8a3-461">使用最符合指定參數的建構函式，建立指定類型的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-461">Creates an instance of the specified type using the constructor that best matches the specified parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1d8a3-462">新建立物件的參考。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-462">A reference to the newly created object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d8a3-463">要叫用建構函式必須提供最符合指定繫結和繫結屬性的限制下指定的引數清單。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-463">The constructor to be invoked must provide the most specific match with the specified argument list under the constraints of the specified binder and binding attributes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1d8a3-464">開頭[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]，這個方法可用來存取非公用類型和成員，如果呼叫者已授與<xref:System.Security.Permissions.ReflectionPermission>使用<xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType>旗標，以及包含非公用類型和成員的組件的授權集是否限制若要將呼叫者的授與集或子集。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-464">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access nonpublic types and members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types and members is restricted to the caller’s grant set or to a subset thereof.</span></span> <span data-ttu-id="1d8a3-465">(請參閱[反映的安全性考量](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)。)</span><span class="sxs-lookup"><span data-stu-id="1d8a3-465">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="1d8a3-466">若要使用這項功能，您的應用程式應將目標設為 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] (含) 以後版本。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-466">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1d8a3-467">
            <paramref name="type" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-467">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1d8a3-468">
            <paramref name="type" /> 不是 <see langword="RuntimeType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-468">
              <paramref name="type" /> is not a <see langword="RuntimeType" />.</span>
          </span>
          <span data-ttu-id="1d8a3-469">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-469">-or-</span>
          </span>
          <span data-ttu-id="1d8a3-470">
            <paramref name="type" /> 是開放式泛型類型 (也就是 <see cref="P:System.Type.ContainsGenericParameters" /> 屬性會傳回 <see langword="true" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-470">
              <paramref name="type" /> is an open generic type (that is, the <see cref="P:System.Type.ContainsGenericParameters" /> property returns <see langword="true" />).</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="1d8a3-471">
            <paramref name="type" /> 不可以是 <see cref="T:System.Reflection.Emit.TypeBuilder" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-471">
              <paramref name="type" /> cannot be a <see cref="T:System.Reflection.Emit.TypeBuilder" />.</span>
          </span>
          <span data-ttu-id="1d8a3-472">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-472">-or-</span>
          </span>
          <span data-ttu-id="1d8a3-473">不支援建立 <see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" /> 和 <see cref="T:System.RuntimeArgumentHandle" /> 類型或這些類型的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-473">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span>
          </span>
          <span data-ttu-id="1d8a3-474">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-474">-or-</span>
          </span>
          <span data-ttu-id="1d8a3-475">包含 <paramref name="type" /> 的組件是以 <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" /> 建立的動態組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-475">The assembly that contains <paramref name="type" /> is a dynamic assembly that was created with <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" />.</span>
          </span>
          <span data-ttu-id="1d8a3-476">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-476">-or-</span>
          </span>
          <span data-ttu-id="1d8a3-477">最符合 <paramref name="args" /> 的建構函式有 <see langword="varargs" /> 引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-477">The constructor that best matches <paramref name="args" /> has <see langword="varargs" /> arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="1d8a3-478">正在呼叫的建構函式擲回例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-478">The constructor being called throws an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="1d8a3-479">呼叫端沒有呼叫這個建構函式的權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-479">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="1d8a3-480">無法建立抽象類別的執行個體，或者這個成員曾被晚期繫結機制叫用過。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-480">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">
          <span data-ttu-id="1d8a3-481">COM 類型不是透過 <see cref="Overload:System.Type.GetTypeFromProgID" /> 或 <see cref="Overload:System.Type.GetTypeFromCLSID" /> 取得。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-481">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="1d8a3-482">找不到相符的建構函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-482">No matching constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.COMException">
          <span data-ttu-id="1d8a3-483">
            <paramref name="type" /> 是 COM 物件，但用來取得類型的類別識別項無效，或已識別的類別未經登錄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-483">
              <paramref name="type" /> is a COM object but the class identifier used to obtain the type is invalid, or the identified class is not registered.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="1d8a3-484">
            <paramref name="type" /> 不是有效的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-484">
              <paramref name="type" /> is not a valid type.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="1d8a3-485">提供建立委派的執行個體時，呼叫 unmanaged 程式碼的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-485">for the ability to call unmanaged code when creating an instance of a delegate.</span>
          </span>
          <span data-ttu-id="1d8a3-486">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-486">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="1d8a3-487">用來存取非公用類型和成員而不論是否其授權集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-487">for accessing nonpublic types and members regardless of their grant set.</span>
          </span>
          <span data-ttu-id="1d8a3-488">相關聯的列舉型別： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-488">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static object CreateInstance (Type type, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateInstance(class System.Type type, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateInstance(Type ^ type, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : Type * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo * obj[] -&gt; obj" Usage="System.Activator.CreateInstance (type, bindingAttr, binder, args, culture, activationAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="1d8a3-489">要建立的物件類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-489">The type of object to create.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="1d8a3-490">零或多個位元旗標的組合，此位元旗標會影響 <c>type</c> 建構函式的搜尋。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-490">A combination of zero or more bit flags that affect the search for the <c>type</c> constructor.</span>
          </span>
          <span data-ttu-id="1d8a3-491">如果 <c>bindingAttr</c> 為零，則會針對公用建構函式執行區分大小寫的搜尋。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-491">If <c>bindingAttr</c> is zero, a case-sensitive search for public constructors is conducted.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="1d8a3-492">使用 <c>bindingAttr</c> 和 <c>args</c> 來搜尋及識別 <c>type</c> 建構函式的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-492">An object that uses <c>bindingAttr</c> and <c>args</c> to seek and identify the <c>type</c> constructor.</span>
          </span>
          <span data-ttu-id="1d8a3-493">如果 <c>Binder</c> 為 <see langword="null" />，則會使用預設 Binder。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-493">If <c>binder</c> is <see langword="null" />, the default binder is used.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="1d8a3-494">引數的陣列，此引數在數目、順序和類型上符合要叫用的建構函式的參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-494">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span>
          </span>
          <span data-ttu-id="1d8a3-495">如果 <c>args</c> 是空陣列或 <see langword="null" />，會叫用未採用參數的建構函式 (預設的建構函式)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-495">If <c>args</c> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="1d8a3-496">特定文化特性的資訊，其可控制 <c>args</c> 到型式類型 (為 <c>type</c> 建構函式宣告) 的強制轉型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-496">Culture-specific information that governs the coercion of <c>args</c> to the formal types declared for the <c>type</c> constructor.</span>
          </span>
          <span data-ttu-id="1d8a3-497">如果「文化特性 (Culture)」<c></c>是 <see langword="null" />，則使用目前執行緒的 <see cref="T:System.Globalization.CultureInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-497">If <c>culture</c> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          </span>
        </param>
        <param name="activationAttributes">
          <span data-ttu-id="1d8a3-498">一或多個屬性的陣列，此屬性可參與啟動過程。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-498">An array of one or more attributes that can participate in activation.</span>
          </span>
          <span data-ttu-id="1d8a3-499">陣列通常只會包含一個 <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> 物件來指定用以啟動遠端物件的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-499">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span>
          </span>
          <span data-ttu-id="1d8a3-500">此參數與啟動了用戶端的物件相關。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-500">This parameter is related to client-activated objects.</span>
          </span>
          <span data-ttu-id="1d8a3-501">用戶端啟動是一項舊的技術，保留目的在提供回溯相容性，不建議用於新的開發。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-501">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span>
          </span>
          <span data-ttu-id="1d8a3-502">分散式應用程式應該改用 Windows Communication Foundation。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-502">Distributed applications should instead use Windows Communication Foundation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1d8a3-503">使用最符合指定參數的建構函式，建立指定類型的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-503">Creates an instance of the specified type using the constructor that best matches the specified parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1d8a3-504">新建立物件的參考。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-504">A reference to the newly created object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d8a3-505">要叫用建構函式必須提供最符合指定繫結和繫結屬性的限制下指定的引數清單。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-505">The constructor to be invoked must provide the most specific match with the specified argument list under the constraints of the specified binder and binding attributes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1d8a3-506">開頭[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]，這個方法可用來存取非公用類型和成員，如果呼叫者已授與<xref:System.Security.Permissions.ReflectionPermission>使用<xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType>旗標和非公用類型和成員的授權集是否限制呼叫端的授權集或子集。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-506">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access nonpublic types and members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the nonpublic types and members is restricted to the caller’s grant set or to a subset thereof.</span></span> <span data-ttu-id="1d8a3-507">(請參閱[反映的安全性考量](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)。)</span><span class="sxs-lookup"><span data-stu-id="1d8a3-507">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="1d8a3-508">若要使用這項功能，您的應用程式應將目標設為 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] (含) 以後版本。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-508">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1d8a3-509">
            <paramref name="type" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-509">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1d8a3-510">
            <paramref name="type" /> 不是 <see langword="RuntimeType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-510">
              <paramref name="type" /> is not a <see langword="RuntimeType" />.</span>
          </span>
          <span data-ttu-id="1d8a3-511">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-511">-or-</span>
          </span>
          <span data-ttu-id="1d8a3-512">
            <paramref name="type" /> 是開放式泛型類型 (也就是 <see cref="P:System.Type.ContainsGenericParameters" /> 屬性會傳回 <see langword="true" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-512">
              <paramref name="type" /> is an open generic type (that is, the <see cref="P:System.Type.ContainsGenericParameters" /> property returns <see langword="true" />).</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="1d8a3-513">
            <paramref name="type" /> 不可以是 <see cref="T:System.Reflection.Emit.TypeBuilder" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-513">
              <paramref name="type" /> cannot be a <see cref="T:System.Reflection.Emit.TypeBuilder" />.</span>
          </span>
          <span data-ttu-id="1d8a3-514">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-514">-or-</span>
          </span>
          <span data-ttu-id="1d8a3-515">不支援建立 <see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" /> 和 <see cref="T:System.RuntimeArgumentHandle" /> 類型或這些類型的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-515">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span>
          </span>
          <span data-ttu-id="1d8a3-516">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-516">-or-</span>
          </span>
          <span data-ttu-id="1d8a3-517">
            <paramref name="activationAttributes" /> 不是空的陣列，而建立中的類型不是衍生自 <see cref="T:System.MarshalByRefObject" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-517">
              <paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span>
          </span>
          <span data-ttu-id="1d8a3-518">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-518">-or-</span>
          </span>
          <span data-ttu-id="1d8a3-519">包含 <paramref name="type" /> 的組件是以 <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" /> 建立的動態組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-519">The assembly that contains <paramref name="type" /> is a dynamic assembly that was created with <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" />.</span>
          </span>
          <span data-ttu-id="1d8a3-520">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-520">-or-</span>
          </span>
          <span data-ttu-id="1d8a3-521">最符合 <paramref name="args" /> 的建構函式有 <see langword="varargs" /> 引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-521">The constructor that best matches <paramref name="args" /> has <see langword="varargs" /> arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="1d8a3-522">正在呼叫的建構函式擲回例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-522">The constructor being called throws an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="1d8a3-523">呼叫端沒有呼叫這個建構函式的權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-523">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="1d8a3-524">無法建立抽象類別的執行個體，或者這個成員曾被晚期繫結機制叫用過。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-524">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">
          <span data-ttu-id="1d8a3-525">COM 類型不是透過 <see cref="Overload:System.Type.GetTypeFromProgID" /> 或 <see cref="Overload:System.Type.GetTypeFromCLSID" /> 取得。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-525">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="1d8a3-526">找不到相符的建構函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-526">No matching constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.COMException">
          <span data-ttu-id="1d8a3-527">
            <paramref name="type" /> 是 COM 物件，但用來取得類型的類別識別項無效，或已識別的類別未經登錄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-527">
              <paramref name="type" /> is a COM object but the class identifier used to obtain the type is invalid, or the identified class is not registered.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="1d8a3-528">
            <paramref name="type" /> 不是有效的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-528">
              <paramref name="type" /> is not a valid type.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="1d8a3-529">提供辨識項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-529">for supplying evidence.</span>
          </span>
          <span data-ttu-id="1d8a3-530">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-530">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="1d8a3-531">用來存取非公用類型和成員而不論是否其授權集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-531">for accessing nonpublic types and members regardless of their grant set.</span>
          </span>
          <span data-ttu-id="1d8a3-532">相關聯的列舉型別： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-532">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (string assemblyName, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(string assemblyName, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(System::String ^ assemblyName, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : string * string * bool * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo * obj[] -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstance (assemblyName, typeName, ignoreCase, bindingAttr, binder, args, culture, activationAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="assemblyName">
          <span data-ttu-id="1d8a3-533">組件的名稱，該組件包含要在其中搜尋名稱為 <c>typeName</c> 的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-533">The name of the assembly where the type named <c>typeName</c> is sought.</span>
          </span>
          <span data-ttu-id="1d8a3-534">如果 <c>assemblyName</c> 為 <see langword="null" />，則會搜尋執行中的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-534">If <c>assemblyName</c> is <see langword="null" />, the executing assembly is searched.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="1d8a3-535">慣用類型的完整名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-535">The fully qualified name of the preferred type.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="1d8a3-536">
            <see langword="true" /> 指定 <c>typeName</c> 的搜尋不區分大小寫，<see langword="false" /> 指定搜尋區分大小寫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-536">
              <see langword="true" /> to specify that the search for <c>typeName</c> is not case-sensitive; <see langword="false" /> to specify that the search is case-sensitive.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="1d8a3-537">零或多個位元旗標的組合，此位元旗標會影響 <c>typeName</c> 建構函式的搜尋。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-537">A combination of zero or more bit flags that affect the search for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="1d8a3-538">如果 <c>bindingAttr</c> 為零，則會針對公用建構函式執行區分大小寫的搜尋。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-538">If <c>bindingAttr</c> is zero, a case-sensitive search for public constructors is conducted.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="1d8a3-539">使用 <c>bindingAttr</c> 和 <c>args</c> 來搜尋及識別 <c>typeName</c> 建構函式的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-539">An object that uses <c>bindingAttr</c> and <c>args</c> to seek and identify the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="1d8a3-540">如果 <c>Binder</c> 為 <see langword="null" />，則會使用預設 Binder。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-540">If <c>binder</c> is <see langword="null" />, the default binder is used.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="1d8a3-541">引數的陣列，此引數在數目、順序和類型上符合要叫用的建構函式的參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-541">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span>
          </span>
          <span data-ttu-id="1d8a3-542">如果 <c>args</c> 是空陣列或 <see langword="null" />，會叫用未採用參數的建構函式 (預設的建構函式)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-542">If <c>args</c> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="1d8a3-543">特定文化特性的資訊，其可控制 <c>args</c> 到型式類型 (為 <c>typeName</c> 建構函式宣告) 的強制轉型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-543">Culture-specific information that governs the coercion of <c>args</c> to the formal types declared for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="1d8a3-544">如果「文化特性 (Culture)」<c></c>是 <see langword="null" />，則使用目前執行緒的 <see cref="T:System.Globalization.CultureInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-544">If <c>culture</c> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          </span>
        </param>
        <param name="activationAttributes">
          <span data-ttu-id="1d8a3-545">一或多個屬性的陣列，此屬性可參與啟動過程。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-545">An array of one or more attributes that can participate in activation.</span>
          </span>
          <span data-ttu-id="1d8a3-546">陣列通常只會包含一個 <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> 物件來指定用以啟動遠端物件的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-546">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span>
          </span>
          <span data-ttu-id="1d8a3-547">此參數與啟動了用戶端的物件相關。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-547">This parameter is related to client-activated objects.</span>
          </span>
          <span data-ttu-id="1d8a3-548">用戶端啟動是一項舊的技術，保留目的在提供回溯相容性，不建議用於新的開發。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-548">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span>
          </span>
          <span data-ttu-id="1d8a3-549">分散式應用程式應該改用 Windows Communication Foundation。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-549">Distributed applications should instead use Windows Communication Foundation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1d8a3-550">使用具名組件和最符合指定參數的建構函式，建立已具有指定名稱之類型的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-550">Creates an instance of the type whose name is specified, using the named assembly and the constructor that best matches the specified parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1d8a3-551">必須解除包裝的控制代碼，用來存取新建立的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-551">A handle that must be unwrapped to access the newly created instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d8a3-552">使用<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>要未包裝的傳回值。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-552">Use <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> to unwrap the return value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1d8a3-553">開頭[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]，這個方法可用來建立非公用類型和成員，如果呼叫者已授與<xref:System.Security.Permissions.ReflectionPermission>使用<xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType>旗標，以及包含非公用類型和成員的組件的授權集是否限制若要將呼叫者的授與集或子集。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-553">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to create nonpublic types and members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types and members is restricted to the caller’s grant set or to a subset thereof.</span></span> <span data-ttu-id="1d8a3-554">(請參閱[反映的安全性考量](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)42d9dc2a-8fcc-4ff3-b002-4ff260ef3dc5。)</span><span class="sxs-lookup"><span data-stu-id="1d8a3-554">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)42d9dc2a-8fcc-4ff3-b002-4ff260ef3dc5.)</span></span>  
>   
>  <span data-ttu-id="1d8a3-555">若要使用這項功能，您的應用程式應將目標設為 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] (含) 以後版本。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-555">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1d8a3-556">
            <paramref name="typeName" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-556">
              <paramref name="typeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="1d8a3-557">找不到相符的建構函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-557">No matching constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="1d8a3-558">在 <paramref name="assemblyName" /> 中找不到 <paramref name="typename" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-558">
              <paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="1d8a3-559">找不到 <paramref name="assemblyName" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-559">
              <paramref name="assemblyName" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="1d8a3-560">呼叫端沒有呼叫這個建構函式的權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-560">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="1d8a3-561">無法建立抽象類別的執行個體，或者這個成員曾被晚期繫結機制叫用過。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-561">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="1d8a3-562">透過反映叫用並擲回例外狀況的建構函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-562">The constructor, which was invoked through reflection, threw an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">
          <span data-ttu-id="1d8a3-563">COM 類型不是透過 <see cref="Overload:System.Type.GetTypeFromProgID" /> 或 <see cref="Overload:System.Type.GetTypeFromCLSID" /> 取得。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-563">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="1d8a3-564">不支援建立 <see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" /> 和 <see cref="T:System.RuntimeArgumentHandle" /> 類型或這些類型的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-564">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span>
          </span>
          <span data-ttu-id="1d8a3-565">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-565">-or-</span>
          </span>
          <span data-ttu-id="1d8a3-566">
            <paramref name="activationAttributes" /> 不是空的陣列，而建立中的類型不是衍生自 <see cref="T:System.MarshalByRefObject" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-566">
              <paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span>
          </span>
          <span data-ttu-id="1d8a3-567">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-567">-or-</span>
          </span>
          <span data-ttu-id="1d8a3-568">最符合 <paramref name="args" /> 的建構函式有 <see langword="varargs" /> 引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-568">The constructor that best matches <paramref name="args" /> has <see langword="varargs" /> arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="1d8a3-569">
            <paramref name="assemblyName" /> 不是有效的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-569">
              <paramref name="assemblyName" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="1d8a3-570">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-570">-or-</span>
          </span>
          <span data-ttu-id="1d8a3-571">目前載入的是 Common Language Runtime (CLR) 2.0 版或更新版本，且已使用比目前載入之版本更新的 CLR 版本來編譯 <paramref name="assemblyName" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-571">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span>
          </span>
          <span data-ttu-id="1d8a3-572">請注意，.NET Framework 2.0、3.0 和 3.5 版全部都會使用 CLR 2.0 版。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-572">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="1d8a3-573">使用兩個不同的辨識項載入組件或模組兩次。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-573">An assembly or module was loaded twice with two different evidences.</span>
          </span>
          <span data-ttu-id="1d8a3-574">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-574">-or-</span>
          </span>
          <span data-ttu-id="1d8a3-575">組件名稱或程式碼基底無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-575">The assembly name or code base is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="1d8a3-576">提供建立委派的執行個體時，呼叫 unmanaged 程式碼的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-576">for the ability to call unmanaged code when creating an instance of a delegate.</span>
          </span>
          <span data-ttu-id="1d8a3-577">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-577">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="1d8a3-578">用來存取非公用類型和成員而不論是否其授權集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-578">for accessing nonpublic types and members regardless of their grant set.</span>
          </span>
          <span data-ttu-id="1d8a3-579">相關聯的列舉型別： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-579">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (AppDomain domain, string assemblyName, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(class System.AppDomain domain, string assemblyName, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(AppDomain ^ domain, System::String ^ assemblyName, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : AppDomain * string * string * bool * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo * obj[] -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstance (domain, assemblyName, typeName, ignoreCase, bindingAttr, binder, args, culture, activationAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.AppDomain" />
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="domain">
          <span data-ttu-id="1d8a3-580">建立名稱為 <c>typeName</c> 之類型的網域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-580">The domain where the type named <c>typeName</c> is created.</span>
          </span>
        </param>
        <param name="assemblyName">
          <span data-ttu-id="1d8a3-581">組件的名稱，該組件包含要在其中搜尋名稱為 <c>typeName</c> 的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-581">The name of the assembly where the type named <c>typeName</c> is sought.</span>
          </span>
          <span data-ttu-id="1d8a3-582">如果 <c>assemblyName</c> 為 <see langword="null" />，則會搜尋執行中的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-582">If <c>assemblyName</c> is <see langword="null" />, the executing assembly is searched.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="1d8a3-583">慣用類型的完整名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-583">The fully qualified name of the preferred type.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="1d8a3-584">
            <see langword="true" /> 指定 <c>typeName</c> 的搜尋不區分大小寫，<see langword="false" /> 指定搜尋區分大小寫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-584">
              <see langword="true" /> to specify that the search for <c>typeName</c> is not case-sensitive; <see langword="false" /> to specify that the search is case-sensitive.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="1d8a3-585">零或多個位元旗標的組合，此位元旗標會影響 <c>typeName</c> 建構函式的搜尋。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-585">A combination of zero or more bit flags that affect the search for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="1d8a3-586">如果 <c>bindingAttr</c> 為零，則會針對公用建構函式執行區分大小寫的搜尋。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-586">If <c>bindingAttr</c> is zero, a case-sensitive search for public constructors is conducted.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="1d8a3-587">使用 <c>bindingAttr</c> 和 <c>args</c> 來搜尋及識別 <c>typeName</c> 建構函式的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-587">An object that uses <c>bindingAttr</c> and <c>args</c> to seek and identify the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="1d8a3-588">如果 <c>Binder</c> 為 <see langword="null" />，則會使用預設 Binder。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-588">If <c>binder</c> is <see langword="null" />, the default binder is used.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="1d8a3-589">引數的陣列，此引數在數目、順序和類型上符合要叫用的建構函式的參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-589">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span>
          </span>
          <span data-ttu-id="1d8a3-590">如果 <c>args</c> 是空陣列或 <see langword="null" />，會叫用未採用參數的建構函式 (預設的建構函式)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-590">If <c>args</c> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="1d8a3-591">特定文化特性的資訊，其可控制 <c>args</c> 到型式類型 (為 <c>typeName</c> 建構函式宣告) 的強制轉型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-591">Culture-specific information that governs the coercion of <c>args</c> to the formal types declared for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="1d8a3-592">如果「文化特性 (Culture)」<c></c>是 <see langword="null" />，則使用目前執行緒的 <see cref="T:System.Globalization.CultureInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-592">If <c>culture</c> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          </span>
        </param>
        <param name="activationAttributes">
          <span data-ttu-id="1d8a3-593">一或多個屬性的陣列，此屬性可參與啟動過程。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-593">An array of one or more attributes that can participate in activation.</span>
          </span>
          <span data-ttu-id="1d8a3-594">陣列通常只會包含一個 <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> 物件來指定用以啟動遠端物件的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-594">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span>
          </span>
          <span data-ttu-id="1d8a3-595">此參數與啟動了用戶端的物件相關。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-595">This parameter is related to client-activated objects.</span>
          </span>
          <span data-ttu-id="1d8a3-596">用戶端啟動是一項舊的技術，保留目的在提供回溯相容性，不建議用於新的開發。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-596">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span>
          </span>
          <span data-ttu-id="1d8a3-597">分散式應用程式應該改用 Windows Communication Foundation。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-597">Distributed applications should instead use Windows Communication Foundation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1d8a3-598">使用最符合指定參數的具名組件和建構函式，建立已在指定遠端網域中具有指定名稱之類型的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-598">Creates an instance of the type whose name is specified in the specified remote domain, using the named assembly and the constructor that best matches the specified parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1d8a3-599">必須解除包裝的控制代碼，用來存取新建立的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-599">A handle that must be unwrapped to access the newly created instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d8a3-600">使用<xref:System.Activator.CreateInstance%2A>主機需要具有限制的安全性權限的應用程式定義域中執行程式碼。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-600">Use <xref:System.Activator.CreateInstance%2A> when a host needs to execute code in an application domain that has restricted security permissions.</span></span>  
  
 <span data-ttu-id="1d8a3-601">使用<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>要未包裝的傳回值。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-601">Use <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> to unwrap the return value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1d8a3-602">這個方法會使用<xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType>要求必須受到完全信任立即呼叫端。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-602">This method uses <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> to require the immediate caller to have full trust.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1d8a3-603">
            <paramref name="domain" /> 或 <paramref name="typeName" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-603">
              <paramref name="domain" /> or <paramref name="typeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="1d8a3-604">找不到相符的建構函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-604">No matching constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="1d8a3-605">在 <paramref name="assemblyName" /> 中找不到 <paramref name="typename" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-605">
              <paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="1d8a3-606">找不到 <paramref name="assemblyName" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-606">
              <paramref name="assemblyName" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="1d8a3-607">呼叫端沒有呼叫這個建構函式的權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-607">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="1d8a3-608">無法建立抽象類別的執行個體，或者這個成員曾被晚期繫結機制叫用過。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-608">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="1d8a3-609">透過反映叫用並擲回例外狀況的建構函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-609">The constructor, which was invoked through reflection, threw an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">
          <span data-ttu-id="1d8a3-610">COM 類型不是透過 <see cref="Overload:System.Type.GetTypeFromProgID" /> 或 <see cref="Overload:System.Type.GetTypeFromCLSID" /> 取得。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-610">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="1d8a3-611">不支援建立 <see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" /> 和 <see cref="T:System.RuntimeArgumentHandle" /> 類型或這些類型的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-611">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span>
          </span>
          <span data-ttu-id="1d8a3-612">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-612">-or-</span>
          </span>
          <span data-ttu-id="1d8a3-613">
            <paramref name="activationAttributes" /> 不是空的陣列，而建立中的類型不是衍生自 <see cref="T:System.MarshalByRefObject" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-613">
              <paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span>
          </span>
          <span data-ttu-id="1d8a3-614">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-614">-or-</span>
          </span>
          <span data-ttu-id="1d8a3-615">最符合 <paramref name="args" /> 的建構函式有 <see langword="varargs" /> 引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-615">The constructor that best matches <paramref name="args" /> has <see langword="varargs" /> arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="1d8a3-616">
            <paramref name="assemblyName" /> 不是有效的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-616">
              <paramref name="assemblyName" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="1d8a3-617">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-617">-or-</span>
          </span>
          <span data-ttu-id="1d8a3-618">目前載入的是 Common Language Runtime (CLR) 2.0 版或更新版本，且已使用比目前載入之版本更新的 CLR 版本來編譯 <paramref name="assemblyName" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-618">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span>
          </span>
          <span data-ttu-id="1d8a3-619">請注意，.NET Framework 2.0、3.0 和 3.5 版全部都會使用 CLR 2.0 版。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-619">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="1d8a3-620">使用兩個不同的辨識項載入組件或模組兩次。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-620">An assembly or module was loaded twice with two different evidences.</span>
          </span>
          <span data-ttu-id="1d8a3-621">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-621">-or-</span>
          </span>
          <span data-ttu-id="1d8a3-622">組件名稱或程式碼基底無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-622">The assembly name or code base is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="1d8a3-623">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-623">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="1d8a3-624">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-624">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="1d8a3-625">提供建立委派的執行個體時，呼叫 unmanaged 程式碼的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-625">for the ability to call unmanaged code when creating an instance of a delegate.</span>
          </span>
          <span data-ttu-id="1d8a3-626">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-626">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="1d8a3-627">提供所有型別成員上叫用作業的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-627">for the ability to invoke operations on all type members.</span>
          </span>
          <span data-ttu-id="1d8a3-628">相關聯的列舉型別： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-628">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (string assemblyName, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes, System.Security.Policy.Evidence securityInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(string assemblyName, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes, class System.Security.Policy.Evidence securityInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(System::String ^ assemblyName, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes, System::Security::Policy::Evidence ^ securityInfo);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : string * string * bool * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo * obj[] * System.Security.Policy.Evidence -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstance (assemblyName, typeName, ignoreCase, bindingAttr, binder, args, culture, activationAttributes, securityInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Methods which use evidence to sandbox are obsolete and will be removed in a future release of the .NET Framework. Please use an overload of CreateInstance which does not take an Evidence parameter. See http://go.microsoft.com/fwlink/?LinkID=155570 for more information.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
        <Parameter Name="securityInfo" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="assemblyName">
          <span data-ttu-id="1d8a3-629">組件的名稱，該組件包含要在其中搜尋名稱為 <c>typeName</c> 的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-629">The name of the assembly where the type named <c>typeName</c> is sought.</span>
          </span>
          <span data-ttu-id="1d8a3-630">如果 <c>assemblyName</c> 為 <see langword="null" />，則會搜尋執行中的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-630">If <c>assemblyName</c> is <see langword="null" />, the executing assembly is searched.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="1d8a3-631">慣用類型的完整名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-631">The fully qualified name of the preferred type.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="1d8a3-632">
            <see langword="true" /> 指定 <c>typeName</c> 的搜尋不區分大小寫，<see langword="false" /> 指定搜尋區分大小寫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-632">
              <see langword="true" /> to specify that the search for <c>typeName</c> is not case-sensitive; <see langword="false" /> to specify that the search is case-sensitive.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="1d8a3-633">零或多個位元旗標的組合，此位元旗標會影響 <c>typeName</c> 建構函式的搜尋。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-633">A combination of zero or more bit flags that affect the search for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="1d8a3-634">如果 <c>bindingAttr</c> 為零，則會針對公用建構函式執行區分大小寫的搜尋。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-634">If <c>bindingAttr</c> is zero, a case-sensitive search for public constructors is conducted.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="1d8a3-635">使用 <c>bindingAttr</c> 和 <c>args</c> 來搜尋及識別 <c>typeName</c> 建構函式的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-635">An object that uses <c>bindingAttr</c> and <c>args</c> to seek and identify the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="1d8a3-636">如果 <c>Binder</c> 為 <see langword="null" />，則會使用預設 Binder。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-636">If <c>binder</c> is <see langword="null" />, the default binder is used.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="1d8a3-637">引數的陣列，此引數在數目、順序和類型上符合要叫用的建構函式的參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-637">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span>
          </span>
          <span data-ttu-id="1d8a3-638">如果 <c>args</c> 是空陣列或 <see langword="null" />，會叫用未採用參數的建構函式 (預設的建構函式)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-638">If <c>args</c> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="1d8a3-639">特定文化特性的資訊，其可控制 <c>args</c> 到型式類型 (為 <c>typeName</c> 建構函式宣告) 的強制轉型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-639">Culture-specific information that governs the coercion of <c>args</c> to the formal types declared for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="1d8a3-640">如果「文化特性 (Culture)」<c></c>是 <see langword="null" />，則使用目前執行緒的 <see cref="T:System.Globalization.CultureInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-640">If <c>culture</c> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          </span>
        </param>
        <param name="activationAttributes">
          <span data-ttu-id="1d8a3-641">一或多個屬性的陣列，此屬性可參與啟動過程。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-641">An array of one or more attributes that can participate in activation.</span>
          </span>
          <span data-ttu-id="1d8a3-642">陣列通常只會包含一個 <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> 物件來指定用以啟動遠端物件的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-642">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span>
          </span>
          <span data-ttu-id="1d8a3-643">此參數與啟動了用戶端的物件相關。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-643">This parameter is related to client-activated objects.</span>
          </span>
          <span data-ttu-id="1d8a3-644">用戶端啟動是一項舊的技術，保留目的在提供回溯相容性，不建議用於新的開發。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-644">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span>
          </span>
          <span data-ttu-id="1d8a3-645">分散式應用程式應該改用 Windows Communication Foundation。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-645">Distributed applications should instead use Windows Communication Foundation.</span>
          </span>
        </param>
        <param name="securityInfo">
          <span data-ttu-id="1d8a3-646">用來執行安全性原則決策和授權程式碼使用權限的資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-646">Information used to make security policy decisions and grant code permissions.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1d8a3-647">使用具名組件和最符合指定參數的建構函式，建立已具有指定名稱之類型的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-647">Creates an instance of the type whose name is specified, using the named assembly and the constructor that best matches the specified parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1d8a3-648">必須解除包裝的控制代碼，用來存取新建立的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-648">A handle that must be unwrapped to access the newly created instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d8a3-649">使用<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>要未包裝的傳回值。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-649">Use <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> to unwrap the return value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1d8a3-650">開頭[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]，這個方法可用來建立非公用類型和成員，如果呼叫者已授與<xref:System.Security.Permissions.ReflectionPermission>使用<xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType>旗標，以及包含非公用類型和成員的組件的授權集是否限制若要將呼叫者的授與集或子集。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-650">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to create nonpublic types and members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types and members is restricted to the caller’s grant set or to a subset thereof.</span></span> <span data-ttu-id="1d8a3-651">(請參閱[反映的安全性考量](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)。)</span><span class="sxs-lookup"><span data-stu-id="1d8a3-651">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="1d8a3-652">若要使用這項功能，您的應用程式應將目標設為 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] (含) 以後版本。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-652">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1d8a3-653">
            <paramref name="typeName" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-653">
              <paramref name="typeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="1d8a3-654">找不到相符的建構函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-654">No matching constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="1d8a3-655">在 <paramref name="assemblyName" /> 中找不到 <paramref name="typename" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-655">
              <paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="1d8a3-656">找不到 <paramref name="assemblyName" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-656">
              <paramref name="assemblyName" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="1d8a3-657">呼叫端沒有呼叫這個建構函式的權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-657">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="1d8a3-658">無法建立抽象類別的執行個體，或者這個成員曾被晚期繫結機制叫用過。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-658">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="1d8a3-659">透過反映叫用並擲回例外狀況的建構函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-659">The constructor, which was invoked through reflection, threw an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">
          <span data-ttu-id="1d8a3-660">COM 類型不是透過 <see cref="Overload:System.Type.GetTypeFromProgID" /> 或 <see cref="Overload:System.Type.GetTypeFromCLSID" /> 取得。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-660">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="1d8a3-661">不支援建立 <see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" /> 和 <see cref="T:System.RuntimeArgumentHandle" /> 類型或這些類型的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-661">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span>
          </span>
          <span data-ttu-id="1d8a3-662">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-662">-or-</span>
          </span>
          <span data-ttu-id="1d8a3-663">
            <paramref name="activationAttributes" /> 不是空的陣列，而建立中的類型不是衍生自 <see cref="T:System.MarshalByRefObject" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-663">
              <paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span>
          </span>
          <span data-ttu-id="1d8a3-664">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-664">-or-</span>
          </span>
          <span data-ttu-id="1d8a3-665">最符合 <paramref name="args" /> 的建構函式有 <see langword="varargs" /> 引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-665">The constructor that best matches <paramref name="args" /> has <see langword="varargs" /> arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="1d8a3-666">
            <paramref name="assemblyName" /> 不是有效的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-666">
              <paramref name="assemblyName" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="1d8a3-667">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-667">-or-</span>
          </span>
          <span data-ttu-id="1d8a3-668">目前載入的是 Common Language Runtime (CLR) 2.0 版或更新版本，且已使用比目前載入之版本更新的 CLR 版本來編譯 <paramref name="assemblyName" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-668">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span>
          </span>
          <span data-ttu-id="1d8a3-669">請注意，.NET Framework 2.0、3.0 和 3.5 版全部都會使用 CLR 2.0 版。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-669">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="1d8a3-670">使用兩個不同的辨識項載入組件或模組兩次。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-670">An assembly or module was loaded twice with two different evidences.</span>
          </span>
          <span data-ttu-id="1d8a3-671">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-671">-or-</span>
          </span>
          <span data-ttu-id="1d8a3-672">組件名稱或程式碼基底無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-672">The assembly name or code base is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="1d8a3-673">提供建立委派的執行個體時，呼叫 unmanaged 程式碼的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-673">for the ability to call unmanaged code when creating an instance of a delegate.</span>
          </span>
          <span data-ttu-id="1d8a3-674">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-674">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="1d8a3-675">用來存取非公用類型和成員而不論是否其授權集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-675">for accessing nonpublic types and members regardless of their grant set.</span>
          </span>
          <span data-ttu-id="1d8a3-676">相關聯的列舉型別： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-676">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (AppDomain domain, string assemblyName, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes, System.Security.Policy.Evidence securityAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(class System.AppDomain domain, string assemblyName, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes, class System.Security.Policy.Evidence securityAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(AppDomain ^ domain, System::String ^ assemblyName, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes, System::Security::Policy::Evidence ^ securityAttributes);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : AppDomain * string * string * bool * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo * obj[] * System.Security.Policy.Evidence -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstance (domain, assemblyName, typeName, ignoreCase, bindingAttr, binder, args, culture, activationAttributes, securityAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Methods which use evidence to sandbox are obsolete and will be removed in a future release of the .NET Framework. Please use an overload of CreateInstance which does not take an Evidence parameter. See http://go.microsoft.com/fwlink/?LinkID=155570 for more information.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.AppDomain" />
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
        <Parameter Name="securityAttributes" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="domain">
          <span data-ttu-id="1d8a3-677">建立名稱為 <c>typeName</c> 之類型的網域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-677">The domain where the type named <c>typeName</c> is created.</span>
          </span>
        </param>
        <param name="assemblyName">
          <span data-ttu-id="1d8a3-678">組件的名稱，該組件包含要在其中搜尋名稱為 <c>typeName</c> 的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-678">The name of the assembly where the type named <c>typeName</c> is sought.</span>
          </span>
          <span data-ttu-id="1d8a3-679">如果 <c>assemblyName</c> 為 <see langword="null" />，則會搜尋執行中的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-679">If <c>assemblyName</c> is <see langword="null" />, the executing assembly is searched.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="1d8a3-680">慣用類型的完整名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-680">The fully qualified name of the preferred type.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="1d8a3-681">
            <see langword="true" /> 指定 <c>typeName</c> 的搜尋不區分大小寫，<see langword="false" /> 指定搜尋區分大小寫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-681">
              <see langword="true" /> to specify that the search for <c>typeName</c> is not case-sensitive; <see langword="false" /> to specify that the search is case-sensitive.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="1d8a3-682">零或多個位元旗標的組合，此位元旗標會影響 <c>typeName</c> 建構函式的搜尋。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-682">A combination of zero or more bit flags that affect the search for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="1d8a3-683">如果 <c>bindingAttr</c> 為零，則會針對公用建構函式執行區分大小寫的搜尋。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-683">If <c>bindingAttr</c> is zero, a case-sensitive search for public constructors is conducted.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="1d8a3-684">使用 <c>bindingAttr</c> 和 <c>args</c> 來搜尋及識別 <c>typeName</c> 建構函式的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-684">An object that uses <c>bindingAttr</c> and <c>args</c> to seek and identify the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="1d8a3-685">如果 <c>Binder</c> 為 <see langword="null" />，則會使用預設 Binder。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-685">If <c>binder</c> is <see langword="null" />, the default binder is used.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="1d8a3-686">引數的陣列，此引數在數目、順序和類型上符合要叫用的建構函式的參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-686">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span>
          </span>
          <span data-ttu-id="1d8a3-687">如果 <c>args</c> 是空陣列或 <see langword="null" />，會叫用未採用參數的建構函式 (預設的建構函式)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-687">If <c>args</c> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="1d8a3-688">特定文化特性的資訊，其可控制 <c>args</c> 到型式類型 (為 <c>typeName</c> 建構函式宣告) 的強制轉型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-688">Culture-specific information that governs the coercion of <c>args</c> to the formal types declared for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="1d8a3-689">如果「文化特性 (Culture)」<c></c>是 <see langword="null" />，則使用目前執行緒的 <see cref="T:System.Globalization.CultureInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-689">If <c>culture</c> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          </span>
        </param>
        <param name="activationAttributes">
          <span data-ttu-id="1d8a3-690">一或多個屬性的陣列，此屬性可參與啟動過程。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-690">An array of one or more attributes that can participate in activation.</span>
          </span>
          <span data-ttu-id="1d8a3-691">這通常是包含單一 <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> 物件的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-691">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object.</span>
          </span>
          <span data-ttu-id="1d8a3-692">
            <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> 會指定啟動遠端物件所需的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-692">The <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> specifies the URL that is required to activate a remote object.</span>
          </span>
        </param>
        <param name="securityAttributes">
          <span data-ttu-id="1d8a3-693">用來執行安全性原則決策和授權程式碼使用權限的資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-693">Information used to make security policy decisions and grant code permissions.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1d8a3-694">使用最符合指定參數的具名組件和建構函式，建立已在指定遠端網域中具有指定名稱之類型的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-694">Creates an instance of the type whose name is specified in the specified remote domain, using the named assembly and the constructor that best matches the specified parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1d8a3-695">必須解除包裝的控制代碼，用來存取新建立的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-695">A handle that must be unwrapped to access the newly created instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d8a3-696">使用<xref:System.Activator.CreateInstance%2A>主機需要具有限制的安全性權限的應用程式定義域中執行程式碼。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-696">Use <xref:System.Activator.CreateInstance%2A> when a host needs to execute code in an application domain that has restricted security permissions.</span></span>  
  
 <span data-ttu-id="1d8a3-697">使用<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>要未包裝的傳回值。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-697">Use <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> to unwrap the return value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1d8a3-698">這個方法會使用<xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType>要求必須受到完全信任立即呼叫端。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-698">This method uses <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> to require the immediate caller to have full trust.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1d8a3-699">
            <paramref name="domain" /> 或 <paramref name="typeName" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-699">
              <paramref name="domain" /> or <paramref name="typeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="1d8a3-700">找不到相符的建構函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-700">No matching constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="1d8a3-701">在 <paramref name="assemblyName" /> 中找不到 <paramref name="typename" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-701">
              <paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="1d8a3-702">找不到 <paramref name="assemblyName" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-702">
              <paramref name="assemblyName" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="1d8a3-703">呼叫端沒有呼叫這個建構函式的權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-703">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="1d8a3-704">無法建立抽象類別的執行個體，或者這個成員曾被晚期繫結機制叫用過。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-704">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="1d8a3-705">透過反映叫用並擲回例外狀況的建構函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-705">The constructor, which was invoked through reflection, threw an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">
          <span data-ttu-id="1d8a3-706">COM 類型不是透過 <see cref="Overload:System.Type.GetTypeFromProgID" /> 或 <see cref="Overload:System.Type.GetTypeFromCLSID" /> 取得。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-706">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="1d8a3-707">不支援建立 <see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" /> 和 <see cref="T:System.RuntimeArgumentHandle" /> 類型或這些類型的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-707">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span>
          </span>
          <span data-ttu-id="1d8a3-708">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-708">-or-</span>
          </span>
          <span data-ttu-id="1d8a3-709">
            <paramref name="activationAttributes" /> 不是空的陣列，而建立中的類型不是衍生自 <see cref="T:System.MarshalByRefObject" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-709">
              <paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span>
          </span>
          <span data-ttu-id="1d8a3-710">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-710">-or-</span>
          </span>
          <span data-ttu-id="1d8a3-711">最符合 <paramref name="args" /> 的建構函式有 <see langword="varargs" /> 引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-711">The constructor that best matches <paramref name="args" /> has <see langword="varargs" /> arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="1d8a3-712">
            <paramref name="assemblyName" /> 不是有效的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-712">
              <paramref name="assemblyName" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="1d8a3-713">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-713">-or-</span>
          </span>
          <span data-ttu-id="1d8a3-714">目前載入的是 Common Language Runtime (CLR) 2.0 版或更新版本，且已使用比目前載入之版本更新的 CLR 版本來編譯 <paramref name="assemblyName" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-714">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span>
          </span>
          <span data-ttu-id="1d8a3-715">請注意，.NET Framework 2.0、3.0 和 3.5 版全部都會使用 CLR 2.0 版。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-715">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="1d8a3-716">使用兩個不同的辨識項載入組件或模組兩次。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-716">An assembly or module was loaded twice with two different evidences.</span>
          </span>
          <span data-ttu-id="1d8a3-717">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-717">-or-</span>
          </span>
          <span data-ttu-id="1d8a3-718">組件名稱或程式碼基底無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-718">The assembly name or code base is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="1d8a3-719">提供建立委派的執行個體時，呼叫 unmanaged 程式碼的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-719">for the ability to call unmanaged code when creating an instance of a delegate.</span>
          </span>
          <span data-ttu-id="1d8a3-720">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-720">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="1d8a3-721">提供所有型別成員上叫用作業的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-721">for the ability to invoke operations on all type members.</span>
          </span>
          <span data-ttu-id="1d8a3-722">相關聯的列舉型別： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-722">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="1d8a3-723">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-723">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="1d8a3-724">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-724">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T CreateInstance&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T CreateInstance&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance``1" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance(Of T) () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static T CreateInstance();" />
      <MemberSignature Language="F#" Value="static member CreateInstance : unit -&gt; 'T" Usage="System.Activator.CreateInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="1d8a3-725">要建立的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-725">The type to create.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="1d8a3-726">使用無參數建構函式，建立由指定之泛型型別參數所指定之類型的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-726">Creates an instance of the type designated by the specified generic type parameter, using the parameterless constructor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1d8a3-727">新建立物件的參考。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-727">A reference to the newly created object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d8a3-728"><xref:System.Activator.CreateInstance%60%601>編譯器會使用泛型的方法來實作型別參數所指定的型別具現化。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-728">The <xref:System.Activator.CreateInstance%60%601> generic method is used by compilers to implement the instantiation of types specified by type parameters.</span></span> <span data-ttu-id="1d8a3-729">例如，在下列泛型方法的實作`new T()`(`gcnew T()` c + + 中) 會使用<xref:System.Activator.CreateInstance%60%601>泛型方法。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-729">For example, in the following generic method, the implementation of `new T()` (`gcnew T()` in C++) uses the <xref:System.Activator.CreateInstance%60%601> generic method.</span></span>  
  
 [!code-cpp[System.Activation.CreateInstance~~1#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.activation.createinstance~~1/cpp/remarks.cpp#1)]
 [!code-csharp[System.Activation.CreateInstance~~1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.activation.createinstance~~1/cs/remarks.cs#1)]
 [!code-vb[System.Activation.CreateInstance~~1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.activation.createinstance~~1/vb/remarks.vb#1)]  
  
 <span data-ttu-id="1d8a3-730">一般情況下，沒有任何適用於<xref:System.Activator.CreateInstance%60%601>應用程式中的泛型方法程式碼，因為必須在編譯時期已知的型別。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-730">In general, there is no use for the <xref:System.Activator.CreateInstance%60%601> generic method in application code, because the type must be known at compile time.</span></span> <span data-ttu-id="1d8a3-731">如果在編譯時期已知的類型，可以使用標準具現化語法 (`new`在 C# 中，運算子`New`Visual Basic 中`gcnew`c + + 中)。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-731">If the type is known at compile time, normal instantiation syntax can be used (`new` operator in C#, `New` in Visual Basic, `gcnew` in C++).</span></span> <span data-ttu-id="1d8a3-732">如果在編譯時期不知道類型，您可以呼叫的非泛型多載<xref:System.Activator.CreateInstance%2A>。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-732">If the type is not known at compile time, you can call a non-generic overload of <xref:System.Activator.CreateInstance%2A>.</span></span>  
  
 <span data-ttu-id="1d8a3-733">沒有任何多載<xref:System.Activator.CreateInstance%60%601>泛型方法接受引數清單，因為非泛型多載的<xref:System.Activator.CreateInstance%2A>已經提供晚期繫結的建構函式解析。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-733">There are no overloads of the <xref:System.Activator.CreateInstance%60%601> generic method that take argument lists, because the non-generic overloads of <xref:System.Activator.CreateInstance%2A> already provide late-bound constructor resolution.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="1d8a3-734">
            <block subset="none" type="note">
              <para> 在[適用於 Microsoft Store 應用程式的 .NET](http://go.microsoft.com/fwlink/?LinkID=247912)中，或[可攜式類別庫](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md)中，改為捕捉基底類別例外狀況 <see cref="T:System.MissingMemberException" />。</para>
            </block>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-734">
              <block subset="none" type="note">
                <para> In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <see cref="T:System.MissingMemberException" />, instead.  </para>
              </block>
            </span>
          </span>
          <span data-ttu-id="1d8a3-735">為 <paramref name="T" /> 指定的型別沒有無參數建構函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-735">The type that is specified for <paramref name="T" /> does not have a parameterless constructor.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateInstanceFrom">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1d8a3-736">使用具名組件檔案和最符合指定參數的建構函式，建立已具有指定名稱之類型的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-736">Creates an instance of the type whose name is specified, using the named assembly file and the constructor that best matches the specified parameters.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (string assemblyFile, string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstanceFrom(string assemblyFile, string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstanceFrom(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstanceFrom (assemblyFile As String, typeName As String) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstanceFrom(System::String ^ assemblyFile, System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="static member CreateInstanceFrom : string * string -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstanceFrom (assemblyFile, typeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyFile">
          <span data-ttu-id="1d8a3-737">檔案的名稱，該檔案包含要在其中搜尋名稱為 <c>typeName</c> 之類型的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-737">The name of a file that contains an assembly where the type named <c>typeName</c> is sought.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="1d8a3-738">慣用類型的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-738">The name of the preferred type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1d8a3-739">使用具名組件檔案和預設建構函式，建立已具有指定名稱之類型的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-739">Creates an instance of the type whose name is specified, using the named assembly file and default constructor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1d8a3-740">必須解除包裝的控制代碼，用來存取新建立的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-740">A handle that must be unwrapped to access the newly created instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d8a3-741">使用<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>要未包裝的傳回值的方法。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-741">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="1d8a3-742">如需其他可能會叫用方法所擲回的例外狀況資訊，請參閱例外狀況區段<xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType>和<xref:System.Activator.CreateInstance%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-742">For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1d8a3-743">下列程式碼範例示範如何呼叫<xref:System.Activator.CreateInstanceFrom%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-743">The following code example demonstrates how to call the <xref:System.Activator.CreateInstanceFrom%2A> method.</span></span> <span data-ttu-id="1d8a3-744">此程式碼範例是針對提供之較大範例的一部分<xref:System.Activator>類別。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-744">This code example is part of a larger example provided for the <xref:System.Activator> class.</span></span>  
  
 [!code-cpp[ActivatorX#3](~/samples/snippets/cpp/VS_Snippets_CLR/ActivatorX/cpp/ActivatorX.cpp#3)]
 [!code-csharp[ActivatorX#3](~/samples/snippets/csharp/VS_Snippets_CLR/ActivatorX/cs/ActivatorX.cs#3)]
 [!code-vb[ActivatorX#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/ActivatorX/VB/ActivatorX.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1d8a3-745">
            <paramref name="typeName" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-745">
              <paramref name="typeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="1d8a3-746">找不到相符的公用建構函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-746">No matching public constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="1d8a3-747">在 <paramref name="assemblyFile" /> 中找不到 <paramref name="typename" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-747">
              <paramref name="typename" /> was not found in <paramref name="assemblyFile" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="1d8a3-748">找不到 <paramref name="assemblyFile" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-748">
              <paramref name="assemblyFile" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="1d8a3-749">呼叫端沒有呼叫這個建構函式的權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-749">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="1d8a3-750">無法建立抽象類別的執行個體，或者這個成員曾被晚期繫結機制叫用過。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-750">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="1d8a3-751">透過反映叫用並擲回例外狀況的建構函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-751">The constructor, which was invoked through reflection, threw an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="1d8a3-752">呼叫端具有所要求的 <see cref="T:System.Security.Permissions.FileIOPermission" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-752">The caller does have the required <see cref="T:System.Security.Permissions.FileIOPermission" />.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="1d8a3-753">
            <paramref name="assemblyFile" /> 不是有效的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-753">
              <paramref name="assemblyFile" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="1d8a3-754">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-754">-or-</span>
          </span>
          <span data-ttu-id="1d8a3-755">目前載入的是 Common Language Runtime (CLR) 2.0 版或更新版本，且已使用比目前載入之版本更新的 CLR 版本來編譯 <paramref name="assemblyName" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-755">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span>
          </span>
          <span data-ttu-id="1d8a3-756">請注意，.NET Framework 2.0、3.0 和 3.5 版全部都會使用 CLR 2.0 版。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-756">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="1d8a3-757">提供建立委派的執行個體時，呼叫 unmanaged 程式碼的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-757">for the ability to call unmanaged code when creating an instance of a delegate.</span>
          </span>
          <span data-ttu-id="1d8a3-758">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-758">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="1d8a3-759">提供要搜尋的目錄路徑，並讀取其內容的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-759">for the ability to search directory paths and read their contents.</span>
          </span>
          <span data-ttu-id="1d8a3-760">相關聯的列舉型別：<see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />和 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-760">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="1d8a3-761">用來存取非公用類型，不論其授權集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-761">for accessing nonpublic types regardless of their grant set.</span>
          </span>
          <span data-ttu-id="1d8a3-762">相關聯的列舉型別： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-762">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (AppDomain domain, string assemblyFile, string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstanceFrom(class System.AppDomain domain, string assemblyFile, string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstanceFrom (domain As AppDomain, assemblyFile As String, typeName As String) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstanceFrom(AppDomain ^ domain, System::String ^ assemblyFile, System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="static member CreateInstanceFrom : AppDomain * string * string -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstanceFrom (domain, assemblyFile, typeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.AppDomain" />
        <Parameter Name="assemblyFile" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="domain">
          <span data-ttu-id="1d8a3-763">建立名稱為 <c>typeName</c> 之類型的遠端網域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-763">The remote domain where the type named <c>typeName</c> is created.</span>
          </span>
        </param>
        <param name="assemblyFile">
          <span data-ttu-id="1d8a3-764">檔案的名稱，該檔案包含要在其中搜尋名稱為 <c>typeName</c> 之類型的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-764">The name of a file that contains an assembly where the type named <c>typeName</c> is sought.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="1d8a3-765">慣用類型的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-765">The name of the preferred type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1d8a3-766">使用具名組件檔案和預設建構函式，建立已在指定遠端網域中指定名稱之類型的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-766">Creates an instance of the type whose name is specified in the specified remote domain, using the named assembly file and default constructor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1d8a3-767">必須解除包裝的控制代碼，用來存取新建立的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-767">A handle that must be unwrapped to access the newly created instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d8a3-768">使用<xref:System.Activator.CreateInstanceFrom%2A>主機需要具有限制的安全性權限的應用程式定義域中執行程式碼。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-768">Use <xref:System.Activator.CreateInstanceFrom%2A> when a host needs to execute code in an application domain that has restricted security permissions.</span></span>  
  
 <span data-ttu-id="1d8a3-769">使用<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>要未包裝的傳回值的方法。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-769">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1d8a3-770">這個方法會使用<xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType>要求必須受到完全信任立即呼叫端。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-770">This method uses <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> to require the immediate caller to have full trust.</span></span>  
  
 <span data-ttu-id="1d8a3-771">如需其他可能會叫用方法所擲回的例外狀況資訊，請參閱例外狀況區段<xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType>和<xref:System.Activator.CreateInstance%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-771">For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1d8a3-772">
            <paramref name="domain" /> 或 <paramref name="typeName" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-772">
              <paramref name="domain" /> or <paramref name="typeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="1d8a3-773">找不到相符的公用建構函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-773">No matching public constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="1d8a3-774">在 <paramref name="assemblyFile" /> 中找不到 <paramref name="typename" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-774">
              <paramref name="typename" /> was not found in <paramref name="assemblyFile" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="1d8a3-775">找不到 <paramref name="assemblyFile" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-775">
              <paramref name="assemblyFile" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="1d8a3-776">呼叫端沒有呼叫這個建構函式的權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-776">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="1d8a3-777">無法建立抽象類別的執行個體，或者這個成員曾被晚期繫結機制叫用過。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-777">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="1d8a3-778">透過反映叫用並擲回例外狀況的建構函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-778">The constructor, which was invoked through reflection, threw an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="1d8a3-779">呼叫端具有所要求的 <see cref="T:System.Security.Permissions.FileIOPermission" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-779">The caller does have the required <see cref="T:System.Security.Permissions.FileIOPermission" />.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="1d8a3-780">
            <paramref name="assemblyFile" /> 不是有效的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-780">
              <paramref name="assemblyFile" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="1d8a3-781">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-781">-or-</span>
          </span>
          <span data-ttu-id="1d8a3-782">目前載入的是 Common Language Runtime (CLR) 2.0 版或更新版本，且已使用比目前載入之版本更新的 CLR 版本來編譯 <paramref name="assemblyName" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-782">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span>
          </span>
          <span data-ttu-id="1d8a3-783">請注意，.NET Framework 2.0、3.0 和 3.5 版全部都會使用 CLR 2.0 版。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-783">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="1d8a3-784">提供建立委派的執行個體時，呼叫 unmanaged 程式碼的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-784">for the ability to call unmanaged code when creating an instance of a delegate.</span>
          </span>
          <span data-ttu-id="1d8a3-785">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-785">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="1d8a3-786">提供要搜尋的目錄路徑，並讀取其內容的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-786">for the ability to search directory paths and read their contents.</span>
          </span>
          <span data-ttu-id="1d8a3-787">相關聯的列舉型別：<see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />和 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-787">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="1d8a3-788">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-788">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="1d8a3-789">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-789">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (string assemblyFile, string typeName, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstanceFrom(string assemblyFile, string typeName, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstanceFrom (assemblyFile As String, typeName As String, activationAttributes As Object()) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstanceFrom(System::String ^ assemblyFile, System::String ^ typeName, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberSignature Language="F#" Value="static member CreateInstanceFrom : string * string * obj[] -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstanceFrom (assemblyFile, typeName, activationAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="assemblyFile">
          <span data-ttu-id="1d8a3-790">檔案的名稱，該檔案包含要在其中搜尋名稱為 <c>typeName</c> 之類型的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-790">The name of a file that contains an assembly where the type named <c>typeName</c> is sought.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="1d8a3-791">慣用類型的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-791">The name of the preferred type.</span>
          </span>
        </param>
        <param name="activationAttributes">
          <span data-ttu-id="1d8a3-792">一或多個屬性的陣列，此屬性可參與啟動過程。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-792">An array of one or more attributes that can participate in activation.</span>
          </span>
          <span data-ttu-id="1d8a3-793">陣列通常只會包含一個 <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> 物件來指定用以啟動遠端物件的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-793">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span>
          </span>
          <span data-ttu-id="1d8a3-794">此參數與啟動了用戶端的物件相關。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-794">This parameter is related to client-activated objects.</span>
          </span>
          <span data-ttu-id="1d8a3-795">用戶端啟動是一項舊的技術，保留目的在提供回溯相容性，不建議用於新的開發。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-795">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span>
          </span>
          <span data-ttu-id="1d8a3-796">分散式應用程式應該改用 Windows Communication Foundation。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-796">Distributed applications should instead use Windows Communication Foundation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1d8a3-797">使用具名組件檔案和預設建構函式，建立已具有指定名稱之類型的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-797">Creates an instance of the type whose name is specified, using the named assembly file and default constructor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1d8a3-798">必須解除包裝的控制代碼，用來存取新建立的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-798">A handle that must be unwrapped to access the newly created instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d8a3-799">使用<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>要未包裝的傳回值的方法。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-799">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="1d8a3-800">如需其他可能會叫用方法所擲回的例外狀況資訊，請參閱例外狀況區段<xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType>和<xref:System.Activator.CreateInstance%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-800">For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1d8a3-801">
            <paramref name="typeName" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-801">
              <paramref name="typeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="1d8a3-802">找不到相符的公用建構函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-802">No matching public constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="1d8a3-803">在 <paramref name="assemblyFile" /> 中找不到 <paramref name="typename" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-803">
              <paramref name="typename" /> was not found in <paramref name="assemblyFile" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="1d8a3-804">找不到 <paramref name="assemblyFile" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-804">
              <paramref name="assemblyFile" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="1d8a3-805">呼叫端沒有呼叫這個建構函式的權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-805">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="1d8a3-806">無法建立抽象類別的執行個體，或者這個成員曾被晚期繫結機制叫用過。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-806">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="1d8a3-807">透過反映叫用並擲回例外狀況的建構函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-807">The constructor, which was invoked through reflection, threw an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="1d8a3-808">
            <paramref name="activationAttributes" /> 不是空的陣列，而建立中的類型不是衍生自 <see cref="T:System.MarshalByRefObject" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-808">
              <paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="1d8a3-809">呼叫端具有所要求的 <see cref="T:System.Security.Permissions.FileIOPermission" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-809">The caller does have the required <see cref="T:System.Security.Permissions.FileIOPermission" />.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="1d8a3-810">
            <paramref name="assemblyFile" /> 不是有效的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-810">
              <paramref name="assemblyFile" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="1d8a3-811">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-811">-or-</span>
          </span>
          <span data-ttu-id="1d8a3-812">目前載入的是 Common Language Runtime (CLR) 2.0 版或更新版本，且已使用比目前載入之版本更新的 CLR 版本來編譯 <paramref name="assemblyName" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-812">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span>
          </span>
          <span data-ttu-id="1d8a3-813">請注意，.NET Framework 2.0、3.0 和 3.5 版全部都會使用 CLR 2.0 版。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-813">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="1d8a3-814">提供建立委派的執行個體時，呼叫 unmanaged 程式碼的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-814">for the ability to call unmanaged code when creating an instance of a delegate.</span>
          </span>
          <span data-ttu-id="1d8a3-815">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-815">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="1d8a3-816">提供要搜尋的目錄路徑，並讀取其內容的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-816">for the ability to search directory paths and read their contents.</span>
          </span>
          <span data-ttu-id="1d8a3-817">相關聯的列舉型別：<see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />和 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-817">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="1d8a3-818">用來存取非公用類型，不論其授權集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-818">for accessing nonpublic types regardless of their grant set.</span>
          </span>
          <span data-ttu-id="1d8a3-819">相關聯的列舉型別： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-819">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (string assemblyFile, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstanceFrom(string assemblyFile, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstanceFrom(System::String ^ assemblyFile, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberSignature Language="F#" Value="static member CreateInstanceFrom : string * string * bool * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo * obj[] -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstanceFrom (assemblyFile, typeName, ignoreCase, bindingAttr, binder, args, culture, activationAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="assemblyFile">
          <span data-ttu-id="1d8a3-820">檔案的名稱，該檔案包含要在其中搜尋名稱為 <c>typeName</c> 之類型的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-820">The name of a file that contains an assembly where the type named <c>typeName</c> is sought.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="1d8a3-821">慣用類型的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-821">The name of the preferred type.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="1d8a3-822">
            <see langword="true" /> 指定 <c>typeName</c> 的搜尋不區分大小寫，<see langword="false" /> 指定搜尋區分大小寫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-822">
              <see langword="true" /> to specify that the search for <c>typeName</c> is not case-sensitive; <see langword="false" /> to specify that the search is case-sensitive.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="1d8a3-823">零或多個位元旗標的組合，此位元旗標會影響 <c>typeName</c> 建構函式的搜尋。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-823">A combination of zero or more bit flags that affect the search for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="1d8a3-824">如果 <c>bindingAttr</c> 為零，則會針對公用建構函式執行區分大小寫的搜尋。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-824">If <c>bindingAttr</c> is zero, a case-sensitive search for public constructors is conducted.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="1d8a3-825">使用 <c>bindingAttr</c> 和 <c>args</c> 來搜尋及識別 <c>typeName</c> 建構函式的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-825">An object that uses <c>bindingAttr</c> and <c>args</c> to seek and identify the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="1d8a3-826">如果 <c>Binder</c> 為 <see langword="null" />，則會使用預設 Binder。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-826">If <c>binder</c> is <see langword="null" />, the default binder is used.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="1d8a3-827">引數的陣列，此引數在數目、順序和類型上符合要叫用的建構函式的參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-827">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span>
          </span>
          <span data-ttu-id="1d8a3-828">如果 <c>args</c> 是空陣列或 <see langword="null" />，會叫用未採用參數的建構函式 (預設的建構函式)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-828">If <c>args</c> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="1d8a3-829">特定文化特性的資訊，其可控制 <c>args</c> 到型式類型 (為 <c>typeName</c> 建構函式宣告) 的強制轉型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-829">Culture-specific information that governs the coercion of <c>args</c> to the formal types declared for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="1d8a3-830">如果「文化特性 (Culture)」<c></c>是 <see langword="null" />，則使用目前執行緒的 <see cref="T:System.Globalization.CultureInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-830">If <c>culture</c> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          </span>
        </param>
        <param name="activationAttributes">
          <span data-ttu-id="1d8a3-831">一或多個屬性的陣列，此屬性可參與啟動過程。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-831">An array of one or more attributes that can participate in activation.</span>
          </span>
          <span data-ttu-id="1d8a3-832">陣列通常只會包含一個 <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> 物件來指定用以啟動遠端物件的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-832">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span>
          </span>
          <span data-ttu-id="1d8a3-833">此參數與啟動了用戶端的物件相關。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-833">This parameter is related to client-activated objects.</span>
          </span>
          <span data-ttu-id="1d8a3-834">用戶端啟動是一項舊的技術，保留目的在提供回溯相容性，不建議用於新的開發。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-834">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span>
          </span>
          <span data-ttu-id="1d8a3-835">分散式應用程式應該改用 Windows Communication Foundation。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-835">Distributed applications should instead use Windows Communication Foundation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1d8a3-836">使用具名組件檔案和最符合指定參數的建構函式，建立已具有指定名稱之類型的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-836">Creates an instance of the type whose name is specified, using the named assembly file and the constructor that best matches the specified parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1d8a3-837">必須解除包裝的控制代碼，用來存取新建立的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-837">A handle that must be unwrapped to access the newly created instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d8a3-838">使用<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>要未包裝的傳回值的方法。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-838">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="1d8a3-839">如需其他可能會叫用方法所擲回的例外狀況資訊，請參閱例外狀況區段<xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType>和<xref:System.Activator.CreateInstance%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-839">For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1d8a3-840">
            <paramref name="typeName" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-840">
              <paramref name="typeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="1d8a3-841">找不到相符的建構函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-841">No matching constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="1d8a3-842">在 <paramref name="assemblyFile" /> 中找不到 <paramref name="typename" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-842">
              <paramref name="typename" /> was not found in <paramref name="assemblyFile" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="1d8a3-843">找不到 <paramref name="assemblyFile" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-843">
              <paramref name="assemblyFile" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="1d8a3-844">呼叫端沒有呼叫這個建構函式的權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-844">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="1d8a3-845">無法建立抽象類別的執行個體，或者這個成員曾被晚期繫結機制叫用過。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-845">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="1d8a3-846">透過反映叫用並擲回例外狀況的建構函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-846">The constructor, which was invoked through reflection, threw an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="1d8a3-847">呼叫端沒有所要求的 <see cref="T:System.Security.Permissions.FileIOPermission" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-847">The caller does not have the required <see cref="T:System.Security.Permissions.FileIOPermission" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="1d8a3-848">
            <paramref name="activationAttributes" /> 不是空的陣列，而建立中的類型不是衍生自 <see cref="T:System.MarshalByRefObject" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-848">
              <paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="1d8a3-849">
            <paramref name="assemblyFile" /> 不是有效的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-849">
              <paramref name="assemblyFile" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="1d8a3-850">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-850">-or-</span>
          </span>
          <span data-ttu-id="1d8a3-851">目前載入的是 Common Language Runtime (CLR) 2.0 版或更新版本，且已使用比目前載入之版本更新的 CLR 版本來編譯 <paramref name="assemblyName" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-851">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span>
          </span>
          <span data-ttu-id="1d8a3-852">請注意，.NET Framework 2.0、3.0 和 3.5 版全部都會使用 CLR 2.0 版。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-852">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="1d8a3-853">提供建立委派的執行個體時，呼叫 unmanaged 程式碼的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-853">for the ability to call unmanaged code when creating an instance of a delegate.</span>
          </span>
          <span data-ttu-id="1d8a3-854">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-854">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="1d8a3-855">提供要搜尋的目錄路徑，並讀取其內容的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-855">for the ability to search directory paths and read their contents.</span>
          </span>
          <span data-ttu-id="1d8a3-856">相關聯的列舉型別：<see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />和 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-856">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="1d8a3-857">用來存取非公用類型和成員而不論是否其授權集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-857">for accessing nonpublic types and members regardless of their grant set.</span>
          </span>
          <span data-ttu-id="1d8a3-858">相關聯的列舉型別： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-858">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (AppDomain domain, string assemblyFile, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstanceFrom(class System.AppDomain domain, string assemblyFile, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstanceFrom(AppDomain ^ domain, System::String ^ assemblyFile, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberSignature Language="F#" Value="static member CreateInstanceFrom : AppDomain * string * string * bool * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo * obj[] -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstanceFrom (domain, assemblyFile, typeName, ignoreCase, bindingAttr, binder, args, culture, activationAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.AppDomain" />
        <Parameter Name="assemblyFile" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="domain">
          <span data-ttu-id="1d8a3-859">建立名稱為 <c>typeName</c> 之類型的遠端網域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-859">The remote domain where the type named <c>typeName</c> is created.</span>
          </span>
        </param>
        <param name="assemblyFile">
          <span data-ttu-id="1d8a3-860">檔案的名稱，該檔案包含要在其中搜尋名稱為 <c>typeName</c> 之類型的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-860">The name of a file that contains an assembly where the type named <c>typeName</c> is sought.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="1d8a3-861">慣用類型的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-861">The name of the preferred type.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="1d8a3-862">
            <see langword="true" /> 指定 <c>typeName</c> 的搜尋不區分大小寫，<see langword="false" /> 指定搜尋區分大小寫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-862">
              <see langword="true" /> to specify that the search for <c>typeName</c> is not case-sensitive; <see langword="false" /> to specify that the search is case-sensitive.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="1d8a3-863">零或多個位元旗標的組合，此位元旗標會影響 <c>typeName</c> 建構函式的搜尋。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-863">A combination of zero or more bit flags that affect the search for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="1d8a3-864">如果 <c>bindingAttr</c> 為零，則會針對公用建構函式執行區分大小寫的搜尋。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-864">If <c>bindingAttr</c> is zero, a case-sensitive search for public constructors is conducted.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="1d8a3-865">使用 <c>bindingAttr</c> 和 <c>args</c> 來搜尋及識別 <c>typeName</c> 建構函式的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-865">An object that uses <c>bindingAttr</c> and <c>args</c> to seek and identify the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="1d8a3-866">如果 <c>Binder</c> 為 <see langword="null" />，則會使用預設 Binder。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-866">If <c>binder</c> is <see langword="null" />, the default binder is used.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="1d8a3-867">引數的陣列，此引數在數目、順序和類型上符合要叫用的建構函式的參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-867">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span>
          </span>
          <span data-ttu-id="1d8a3-868">如果 <c>args</c> 是空陣列或 <see langword="null" />，會叫用未採用參數的建構函式 (預設的建構函式)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-868">If <c>args</c> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="1d8a3-869">特定文化特性的資訊，其可控制 <c>args</c> 到型式類型 (為 <c>typeName</c> 建構函式宣告) 的強制轉型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-869">Culture-specific information that governs the coercion of <c>args</c> to the formal types declared for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="1d8a3-870">如果「文化特性 (Culture)」<c></c>是 <see langword="null" />，則使用目前執行緒的 <see cref="T:System.Globalization.CultureInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-870">If <c>culture</c> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          </span>
        </param>
        <param name="activationAttributes">
          <span data-ttu-id="1d8a3-871">一或多個屬性的陣列，此屬性可參與啟動過程。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-871">An array of one or more attributes that can participate in activation.</span>
          </span>
          <span data-ttu-id="1d8a3-872">陣列通常只會包含一個 <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> 物件來指定用以啟動遠端物件的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-872">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span>
          </span>
          <span data-ttu-id="1d8a3-873">此參數與啟動了用戶端的物件相關。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-873">This parameter is related to client-activated objects.</span>
          </span>
          <span data-ttu-id="1d8a3-874">用戶端啟動是一項舊的技術，保留目的在提供回溯相容性，不建議用於新的開發。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-874">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span>
          </span>
          <span data-ttu-id="1d8a3-875">分散式應用程式應該改用 Windows Communication Foundation。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-875">Distributed applications should instead use Windows Communication Foundation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1d8a3-876">使用最符合指定參數的具名組件檔案和建構函式，建立已在指定遠端網域中指定名稱之類型的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-876">Creates an instance of the type whose name is specified in the specified remote domain, using the named assembly file and the constructor that best matches the specified parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1d8a3-877">必須解除包裝的控制代碼，用來存取新建立的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-877">A handle that must be unwrapped to access the newly created instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d8a3-878">使用<xref:System.Activator.CreateInstanceFrom%2A>主機需要具有限制的安全性權限的應用程式定義域中執行程式碼。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-878">Use <xref:System.Activator.CreateInstanceFrom%2A> when a host needs to execute code in an application domain that has restricted security permissions.</span></span>  
  
 <span data-ttu-id="1d8a3-879">使用<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>要未包裝的傳回值的方法。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-879">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="1d8a3-880">如需其他可能會叫用方法所擲回的例外狀況資訊，請參閱例外狀況的章節<xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType>和<xref:System.Activator.CreateInstance%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-880">For information about other exceptions that can be thrown by invoked methods, see the Exceptions sections of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1d8a3-881">
            <paramref name="domain" /> 或 <paramref name="typeName" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-881">
              <paramref name="domain" /> or <paramref name="typeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="1d8a3-882">找不到相符的建構函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-882">No matching constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="1d8a3-883">在 <paramref name="assemblyFile" /> 中找不到 <paramref name="typename" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-883">
              <paramref name="typename" /> was not found in <paramref name="assemblyFile" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="1d8a3-884">找不到 <paramref name="assemblyFile" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-884">
              <paramref name="assemblyFile" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="1d8a3-885">呼叫端沒有呼叫這個建構函式的權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-885">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="1d8a3-886">無法建立抽象類別的執行個體，或者這個成員曾被晚期繫結機制叫用過。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-886">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="1d8a3-887">透過反映叫用並擲回例外狀況的建構函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-887">The constructor, which was invoked through reflection, threw an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="1d8a3-888">呼叫端具有所要求的 <see cref="T:System.Security.Permissions.FileIOPermission" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-888">The caller does have the required <see cref="T:System.Security.Permissions.FileIOPermission" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="1d8a3-889">
            <paramref name="activationAttributes" /> 不是空的陣列，而建立中的類型不是衍生自 <see cref="T:System.MarshalByRefObject" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-889">
              <paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="1d8a3-890">
            <paramref name="assemblyFile" /> 不是有效的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-890">
              <paramref name="assemblyFile" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="1d8a3-891">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-891">-or-</span>
          </span>
          <span data-ttu-id="1d8a3-892">
            <paramref name="assemblyName" /> 已針對比目前載入版本更新的 Common Language Runtime 進行編譯。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-892">
              <paramref name="assemblyName" /> was compiled for a version of the common language runtime that is later than the version that is currently loaded.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="1d8a3-893">提供辨識項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-893">for supplying evidence.</span>
          </span>
          <span data-ttu-id="1d8a3-894">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-894">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="1d8a3-895">提供要搜尋的目錄路徑，並讀取其內容的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-895">for the ability to search directory paths and read their contents.</span>
          </span>
          <span data-ttu-id="1d8a3-896">相關聯的列舉型別：<see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />和 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-896">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="1d8a3-897">用來存取非公用類型和成員而不論是否其授權集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-897">for accessing nonpublic types and members regardless of their grant set.</span>
          </span>
          <span data-ttu-id="1d8a3-898">相關聯的列舉型別： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-898">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="1d8a3-899">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-899">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="1d8a3-900">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-900">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (string assemblyFile, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes, System.Security.Policy.Evidence securityInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstanceFrom(string assemblyFile, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes, class System.Security.Policy.Evidence securityInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstanceFrom(System::String ^ assemblyFile, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes, System::Security::Policy::Evidence ^ securityInfo);" />
      <MemberSignature Language="F#" Value="static member CreateInstanceFrom : string * string * bool * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo * obj[] * System.Security.Policy.Evidence -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstanceFrom (assemblyFile, typeName, ignoreCase, bindingAttr, binder, args, culture, activationAttributes, securityInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Methods which use evidence to sandbox are obsolete and will be removed in a future release of the .NET Framework. Please use an overload of CreateInstanceFrom which does not take an Evidence parameter. See http://go.microsoft.com/fwlink/?LinkID=155570 for more information.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
        <Parameter Name="securityInfo" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="assemblyFile">
          <span data-ttu-id="1d8a3-901">檔案的名稱，該檔案包含要在其中搜尋名稱為 <c>typeName</c> 之類型的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-901">The name of a file that contains an assembly where the type named <c>typeName</c> is sought.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="1d8a3-902">慣用類型的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-902">The name of the preferred type.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="1d8a3-903">
            <see langword="true" /> 指定 <c>typeName</c> 的搜尋不區分大小寫，<see langword="false" /> 指定搜尋區分大小寫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-903">
              <see langword="true" /> to specify that the search for <c>typeName</c> is not case-sensitive; <see langword="false" /> to specify that the search is case-sensitive.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="1d8a3-904">零或多個位元旗標的組合，此位元旗標會影響 <c>typeName</c> 建構函式的搜尋。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-904">A combination of zero or more bit flags that affect the search for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="1d8a3-905">如果 <c>bindingAttr</c> 為零，則會針對公用建構函式執行區分大小寫的搜尋。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-905">If <c>bindingAttr</c> is zero, a case-sensitive search for public constructors is conducted.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="1d8a3-906">使用 <c>bindingAttr</c> 和 <c>args</c> 來搜尋及識別 <c>typeName</c> 建構函式的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-906">An object that uses <c>bindingAttr</c> and <c>args</c> to seek and identify the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="1d8a3-907">如果 <c>Binder</c> 為 <see langword="null" />，則會使用預設 Binder。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-907">If <c>binder</c> is <see langword="null" />, the default binder is used.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="1d8a3-908">引數的陣列，此引數在數目、順序和類型上符合要叫用的建構函式的參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-908">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span>
          </span>
          <span data-ttu-id="1d8a3-909">如果 <c>args</c> 是空陣列或 <see langword="null" />，會叫用未採用參數的建構函式 (預設的建構函式)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-909">If <c>args</c> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="1d8a3-910">特定文化特性的資訊，其可控制 <c>args</c> 到型式類型 (為 <c>typeName</c> 建構函式宣告) 的強制轉型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-910">Culture-specific information that governs the coercion of <c>args</c> to the formal types declared for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="1d8a3-911">如果「文化特性 (Culture)」<c></c>是 <see langword="null" />，則使用目前執行緒的 <see cref="T:System.Globalization.CultureInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-911">If <c>culture</c> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          </span>
        </param>
        <param name="activationAttributes">
          <span data-ttu-id="1d8a3-912">一或多個屬性的陣列，此屬性可參與啟動過程。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-912">An array of one or more attributes that can participate in activation.</span>
          </span>
          <span data-ttu-id="1d8a3-913">陣列通常只會包含一個 <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> 物件來指定用以啟動遠端物件的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-913">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span>
          </span>
          <span data-ttu-id="1d8a3-914">此參數與啟動了用戶端的物件相關。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-914">This parameter is related to client-activated objects.</span>
          </span>
          <span data-ttu-id="1d8a3-915">用戶端啟動是一項舊的技術，保留目的在提供回溯相容性，不建議用於新的開發。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-915">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span>
          </span>
          <span data-ttu-id="1d8a3-916">分散式應用程式應該改用 Windows Communication Foundation。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-916">Distributed applications should instead use Windows Communication Foundation.</span>
          </span>
        </param>
        <param name="securityInfo">
          <span data-ttu-id="1d8a3-917">用來執行安全性原則決策和授權程式碼使用權限的資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-917">Information used to make security policy decisions and grant code permissions.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1d8a3-918">使用具名組件檔案和最符合指定參數的建構函式，建立已具有指定名稱之類型的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-918">Creates an instance of the type whose name is specified, using the named assembly file and the constructor that best matches the specified parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1d8a3-919">必須解除包裝的控制代碼，用來存取新建立的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-919">A handle that must be unwrapped to access the newly created instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d8a3-920">使用<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>要未包裝的傳回值的方法。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-920">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="1d8a3-921">如需其他可能會叫用方法所擲回的例外狀況資訊，請參閱例外狀況區段<xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType>和<xref:System.Activator.CreateInstance%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-921">For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1d8a3-922">
            <paramref name="typeName" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-922">
              <paramref name="typeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="1d8a3-923">找不到相符的建構函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-923">No matching constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="1d8a3-924">在 <paramref name="assemblyFile" /> 中找不到 <paramref name="typename" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-924">
              <paramref name="typename" /> was not found in <paramref name="assemblyFile" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="1d8a3-925">找不到 <paramref name="assemblyFile" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-925">
              <paramref name="assemblyFile" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="1d8a3-926">呼叫端沒有呼叫這個建構函式的權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-926">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="1d8a3-927">無法建立抽象類別的執行個體，或者這個成員曾被晚期繫結機制叫用過。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-927">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="1d8a3-928">透過反映叫用並擲回例外狀況的建構函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-928">The constructor, which was invoked through reflection, threw an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="1d8a3-929">呼叫端沒有所要求的 <see cref="T:System.Security.Permissions.FileIOPermission" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-929">The caller does not have the required <see cref="T:System.Security.Permissions.FileIOPermission" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="1d8a3-930">
            <paramref name="activationAttributes" /> 不是空的陣列，而建立中的類型不是衍生自 <see cref="T:System.MarshalByRefObject" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-930">
              <paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="1d8a3-931">
            <paramref name="assemblyFile" /> 不是有效的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-931">
              <paramref name="assemblyFile" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="1d8a3-932">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-932">-or-</span>
          </span>
          <span data-ttu-id="1d8a3-933">目前載入的是 Common Language Runtime (CLR) 2.0 版或更新版本，且已使用比目前載入之版本更新的 CLR 版本來編譯 <paramref name="assemblyName" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-933">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span>
          </span>
          <span data-ttu-id="1d8a3-934">請注意，.NET Framework 2.0、3.0 和 3.5 版全部都會使用 CLR 2.0 版。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-934">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="1d8a3-935">提供建立委派的執行個體時，呼叫 unmanaged 程式碼的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-935">for the ability to call unmanaged code when creating an instance of a delegate.</span>
          </span>
          <span data-ttu-id="1d8a3-936">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-936">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="1d8a3-937">提供要搜尋的目錄路徑，並讀取其內容的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-937">for the ability to search directory paths and read their contents.</span>
          </span>
          <span data-ttu-id="1d8a3-938">相關聯的列舉型別：<see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />和 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-938">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="1d8a3-939">用來存取非公用類型和成員而不論是否其授權集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-939">for accessing nonpublic types and members regardless of their grant set.</span>
          </span>
          <span data-ttu-id="1d8a3-940">相關聯的列舉型別： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-940">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (AppDomain domain, string assemblyFile, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes, System.Security.Policy.Evidence securityAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstanceFrom(class System.AppDomain domain, string assemblyFile, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes, class System.Security.Policy.Evidence securityAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstanceFrom(AppDomain ^ domain, System::String ^ assemblyFile, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes, System::Security::Policy::Evidence ^ securityAttributes);" />
      <MemberSignature Language="F#" Value="static member CreateInstanceFrom : AppDomain * string * string * bool * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo * obj[] * System.Security.Policy.Evidence -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstanceFrom (domain, assemblyFile, typeName, ignoreCase, bindingAttr, binder, args, culture, activationAttributes, securityAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Methods which use Evidence to sandbox are obsolete and will be removed in a future release of the .NET Framework. Please use an overload of CreateInstanceFrom which does not take an Evidence parameter. See http://go.microsoft.com/fwlink/?LinkID=155570 for more information.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.AppDomain" />
        <Parameter Name="assemblyFile" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
        <Parameter Name="securityAttributes" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="domain">
          <span data-ttu-id="1d8a3-941">建立名稱為 <c>typeName</c> 之類型的遠端網域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-941">The remote domain where the type named <c>typeName</c> is created.</span>
          </span>
        </param>
        <param name="assemblyFile">
          <span data-ttu-id="1d8a3-942">檔案的名稱，該檔案包含要在其中搜尋名稱為 <c>typeName</c> 之類型的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-942">The name of a file that contains an assembly where the type named <c>typeName</c> is sought.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="1d8a3-943">慣用類型的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-943">The name of the preferred type.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="1d8a3-944">
            <see langword="true" /> 指定 <c>typeName</c> 的搜尋不區分大小寫，<see langword="false" /> 指定搜尋區分大小寫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-944">
              <see langword="true" /> to specify that the search for <c>typeName</c> is not case-sensitive; <see langword="false" /> to specify that the search is case-sensitive.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="1d8a3-945">零或多個位元旗標的組合，此位元旗標會影響 <c>typeName</c> 建構函式的搜尋。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-945">A combination of zero or more bit flags that affect the search for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="1d8a3-946">如果 <c>bindingAttr</c> 為零，則會針對公用建構函式執行區分大小寫的搜尋。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-946">If <c>bindingAttr</c> is zero, a case-sensitive search for public constructors is conducted.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="1d8a3-947">使用 <c>bindingAttr</c> 和 <c>args</c> 來搜尋及識別 <c>typeName</c> 建構函式的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-947">An object that uses <c>bindingAttr</c> and <c>args</c> to seek and identify the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="1d8a3-948">如果 <c>Binder</c> 為 <see langword="null" />，則會使用預設 Binder。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-948">If <c>binder</c> is <see langword="null" />, the default binder is used.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="1d8a3-949">引數的陣列，此引數在數目、順序和類型上符合要叫用的建構函式的參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-949">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span>
          </span>
          <span data-ttu-id="1d8a3-950">如果 <c>args</c> 是空陣列或 <see langword="null" />，會叫用未採用參數的建構函式 (預設的建構函式)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-950">If <c>args</c> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="1d8a3-951">特定文化特性的資訊，其可控制 <c>args</c> 到型式類型 (為 <c>typeName</c> 建構函式宣告) 的強制轉型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-951">Culture-specific information that governs the coercion of <c>args</c> to the formal types declared for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="1d8a3-952">如果「文化特性 (Culture)」<c></c>是 <see langword="null" />，則使用目前執行緒的 <see cref="T:System.Globalization.CultureInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-952">If <c>culture</c> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          </span>
        </param>
        <param name="activationAttributes">
          <span data-ttu-id="1d8a3-953">一或多個屬性的陣列，此屬性可參與啟動過程。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-953">An array of one or more attributes that can participate in activation.</span>
          </span>
          <span data-ttu-id="1d8a3-954">陣列通常只會包含一個 <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> 物件來指定用以啟動遠端物件的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-954">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span>
          </span>
          <span data-ttu-id="1d8a3-955">此參數與啟動了用戶端的物件相關。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-955">This parameter is related to client-activated objects.</span>
          </span>
          <span data-ttu-id="1d8a3-956">用戶端啟動是一項舊的技術，保留目的在提供回溯相容性，不建議用於新的開發。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-956">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span>
          </span>
          <span data-ttu-id="1d8a3-957">分散式應用程式應該改用 Windows Communication Foundation。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-957">Distributed applications should instead use Windows Communication Foundation.</span>
          </span>
        </param>
        <param name="securityAttributes">
          <span data-ttu-id="1d8a3-958">用來執行安全性原則決策和授權程式碼使用權限的資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-958">Information used to make security policy decisions and grant code permissions.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1d8a3-959">使用最符合指定參數的具名組件檔案和建構函式，建立已在指定遠端網域中指定名稱之類型的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-959">Creates an instance of the type whose name is specified in the specified remote domain, using the named assembly file and the constructor that best matches the specified parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1d8a3-960">必須解除包裝的控制代碼，用來存取新建立的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-960">A handle that must be unwrapped to access the newly created instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d8a3-961">使用<xref:System.Activator.CreateInstanceFrom%2A>主機需要具有限制的安全性權限的應用程式定義域中執行程式碼。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-961">Use <xref:System.Activator.CreateInstanceFrom%2A> when a host needs to execute code in an application domain that has restricted security permissions.</span></span>  
  
 <span data-ttu-id="1d8a3-962">使用<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>要未包裝的傳回值的方法。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-962">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1d8a3-963">這個方法會使用<xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType>要求必須受到完全信任立即呼叫端。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-963">This method uses <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> to require the immediate caller to have full trust.</span></span>  
  
 <span data-ttu-id="1d8a3-964">如需其他可能會叫用方法所擲回的例外狀況資訊，請參閱例外狀況區段<xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType>和<xref:System.Activator.CreateInstance%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-964">For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1d8a3-965">
            <paramref name="domain" /> 或 <paramref name="typeName" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-965">
              <paramref name="domain" /> or <paramref name="typeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="1d8a3-966">找不到相符的建構函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-966">No matching constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="1d8a3-967">在 <paramref name="assemblyFile" /> 中找不到 <paramref name="typename" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-967">
              <paramref name="typename" /> was not found in <paramref name="assemblyFile" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="1d8a3-968">找不到 <paramref name="assemblyFile" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-968">
              <paramref name="assemblyFile" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="1d8a3-969">呼叫端沒有呼叫這個建構函式的權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-969">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="1d8a3-970">無法建立抽象類別的執行個體，或者這個成員曾被晚期繫結機制叫用過。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-970">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="1d8a3-971">透過反映叫用並擲回例外狀況的建構函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-971">The constructor, which was invoked through reflection, threw an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="1d8a3-972">呼叫端具有所要求的 <see cref="T:System.Security.Permissions.FileIOPermission" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-972">The caller does have the required <see cref="T:System.Security.Permissions.FileIOPermission" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="1d8a3-973">
            <paramref name="activationAttributes" /> 不是空的陣列，而建立中的類型不是衍生自 <see cref="T:System.MarshalByRefObject" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-973">
              <paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="1d8a3-974">
            <paramref name="assemblyFile" /> 不是有效的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-974">
              <paramref name="assemblyFile" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="1d8a3-975">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-975">-or-</span>
          </span>
          <span data-ttu-id="1d8a3-976">目前載入的是 Common Language Runtime (CLR) 2.0 版或更新版本，且已使用比目前載入之版本更新的 CLR 版本來編譯 <paramref name="assemblyName" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-976">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span>
          </span>
          <span data-ttu-id="1d8a3-977">請注意，.NET Framework 2.0、3.0 和 3.5 版全部都會使用 CLR 2.0 版。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-977">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="1d8a3-978">提供辨識項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-978">for supplying evidence.</span>
          </span>
          <span data-ttu-id="1d8a3-979">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-979">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="1d8a3-980">提供要搜尋的目錄路徑，並讀取其內容的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-980">for the ability to search directory paths and read their contents.</span>
          </span>
          <span data-ttu-id="1d8a3-981">相關聯的列舉型別：<see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />和 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-981">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="1d8a3-982">用來存取非公用類型和成員而不論是否其授權集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-982">for accessing nonpublic types and members regardless of their grant set.</span>
          </span>
          <span data-ttu-id="1d8a3-983">相關聯的列舉型別： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-983">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="1d8a3-984">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-984">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="1d8a3-985">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-985">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetObject">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1d8a3-986">為已知物件或 XML Web Service 建立 Proxy。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-986">Creates a proxy for a well-known object or XML Web service.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetObject">
      <MemberSignature Language="C#" Value="public static object GetObject (Type type, string url);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetObject(class System.Type type, string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.GetObject(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetObject(Type ^ type, System::String ^ url);" />
      <MemberSignature Language="F#" Value="static member GetObject : Type * string -&gt; obj" Usage="System.Activator.GetObject (type, url)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="1d8a3-987">您要連接的已知物件類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-987">The type of the well-known object to which you want to connect.</span>
          </span>
        </param>
        <param name="url">
          <span data-ttu-id="1d8a3-988">已知物件的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-988">The URL of the well-known object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1d8a3-989">為指定類型和 URL 所指示的已知物件建立 Proxy。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-989">Creates a proxy for the well-known object indicated by the specified type and URL.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1d8a3-990">Proxy，指向要求的已知物件所服務的端點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-990">A proxy that points to an endpoint served by the requested well-known object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d8a3-991">呼叫以將訊息傳送至遠端物件 proxy。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-991">Call the proxy to send messages to the remote object.</span></span> <span data-ttu-id="1d8a3-992">在 proxy 上呼叫方法之前，會透過網路不傳送任何訊息。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-992">No messages are sent over the network until a method is called on the proxy.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1d8a3-993">
            <paramref name="type" /> 或 <paramref name="url" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-993">
              <paramref name="type" /> or <paramref name="url" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.Remoting.RemotingException">
          <span data-ttu-id="1d8a3-994">
            <paramref name="type" /> 不是以傳址方式封送處理，也不是介面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-994">
              <paramref name="type" /> is not marshaled by reference and is not an interface.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="1d8a3-995">這個成員曾被晚期繫結機制叫用過。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-995">This member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="1d8a3-996">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-996">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="1d8a3-997">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-997">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="T:System.Runtime.Remoting.WellKnownObjectMode" />
        <altmember cref="T:System.Runtime.Remoting.RemotingConfiguration" />
      </Docs>
    </Member>
    <Member MemberName="GetObject">
      <MemberSignature Language="C#" Value="public static object GetObject (Type type, string url, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetObject(class System.Type type, string url, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.GetObject(System.Type,System.String,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetObject(Type ^ type, System::String ^ url, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="static member GetObject : Type * string * obj -&gt; obj" Usage="System.Activator.GetObject (type, url, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="1d8a3-998">您要連接的已知物件類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-998">The type of the well-known object to which you want to connect.</span>
          </span>
        </param>
        <param name="url">
          <span data-ttu-id="1d8a3-999">已知物件的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-999">The URL of the well-known object.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="1d8a3-1000">通道特定資料或 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-1000">Channel-specific data or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1d8a3-1001">為指定類型、URL 和通道資料所指示的已知物件建立 Proxy。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-1001">Creates a proxy for the well-known object indicated by the specified type, URL, and channel data.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1d8a3-1002">Proxy，指向要求的已知物件所服務的端點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-1002">A proxy that points to an endpoint served by the requested well-known object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d8a3-1003">呼叫以將訊息傳送至遠端物件 proxy。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-1003">Call the proxy to send messages to the remote object.</span></span> <span data-ttu-id="1d8a3-1004">在 proxy 上呼叫方法之前，會透過網路不傳送任何訊息。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-1004">No messages are sent over the network until a method is called on the proxy.</span></span>  
  
 <span data-ttu-id="1d8a3-1005">`state`參數會將資訊傳至通道，並傳遞給<xref:System.Runtime.Remoting.Channels.IChannelSender.CreateMessageSink%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-1005">The `state` parameter communicates information to the channel, and is passed to the <xref:System.Runtime.Remoting.Channels.IChannelSender.CreateMessageSink%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1d8a3-1006">
            <paramref name="type" /> 或 <paramref name="url" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-1006">
              <paramref name="type" /> or <paramref name="url" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.Remoting.RemotingException">
          <span data-ttu-id="1d8a3-1007">
            <paramref name="type" /> 不是以傳址方式封送處理，也不是介面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-1007">
              <paramref name="type" /> is not marshaled by reference and is not an interface.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="1d8a3-1008">這個成員曾被晚期繫結機制叫用過。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-1008">This member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="1d8a3-1009">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-1009">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="1d8a3-1010">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-1010">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="T:System.Runtime.Remoting.WellKnownObjectMode" />
        <altmember cref="T:System.Runtime.Remoting.RemotingConfiguration" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._Activator.GetIDsOfNames">
      <MemberSignature Language="C#" Value="void _Activator.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._Activator.GetIDsOfNames([in]valuetype System.Guid&amp; riid, native int rgszNames, unsigned int32 cNames, unsigned int32 lcid, native int rgDispId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.System#Runtime#InteropServices#_Activator#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetIDsOfNames (ByRef riid As Guid, rgszNames As IntPtr, cNames As UInteger, lcid As UInteger, rgDispId As IntPtr) Implements _Activator.GetIDsOfNames" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._Activator.GetIDsOfNames(Guid % riid, IntPtr rgszNames, System::UInt32 cNames, System::UInt32 lcid, IntPtr rgDispId) = System::Runtime::InteropServices::_Activator::GetIDsOfNames;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Activator.GetIDsOfNames(System.Guid,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="riid" Type="System.Guid" RefType="ref" />
        <Parameter Name="rgszNames" Type="System.IntPtr" />
        <Parameter Name="cNames" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="rgDispId" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="riid">
          <span data-ttu-id="1d8a3-1011">保留供未來使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-1011">Reserved for future use.</span>
          </span>
          <span data-ttu-id="1d8a3-1012">必須是 IID_NULL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-1012">Must be IID_NULL.</span>
          </span>
        </param>
        <param name="rgszNames">
          <span data-ttu-id="1d8a3-1013">要對應的傳入名稱陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-1013">The passed-in array of names to map.</span>
          </span>
        </param>
        <param name="cNames">
          <span data-ttu-id="1d8a3-1014">要對應的名稱計數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-1014">The count of the names to map.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="1d8a3-1015">用於解譯名稱的地區設定內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-1015">The locale context in which to interpret the names.</span>
          </span>
        </param>
        <param name="rgDispId">
          <span data-ttu-id="1d8a3-1016">呼叫端配置的陣列，可接收對應於名稱的 ID。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-1016">The caller-allocated array that receives the IDs corresponding to the names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1d8a3-1017">將一組名稱對應至一組對應的分派識別項 (Dispatch Identifier)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-1017">Maps a set of names to a corresponding set of dispatch identifiers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d8a3-1018">這個方法用來從 unmanaged 程式碼，存取 managed 的類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-1018">This method is used to access managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="1d8a3-1019">如需詳細資訊`IDispatch::GetIDsOfNames`，請參閱 MSDN Library。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-1019">For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="1d8a3-1020">不支援使用 COM <c>IDispatch</c> 介面進行晚期繫結的存取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-1020">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._Activator.GetTypeInfo">
      <MemberSignature Language="C#" Value="void _Activator.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._Activator.GetTypeInfo(unsigned int32 iTInfo, unsigned int32 lcid, native int ppTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.System#Runtime#InteropServices#_Activator#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfo (iTInfo As UInteger, lcid As UInteger, ppTInfo As IntPtr) Implements _Activator.GetTypeInfo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._Activator.GetTypeInfo(System::UInt32 iTInfo, System::UInt32 lcid, IntPtr ppTInfo) = System::Runtime::InteropServices::_Activator::GetTypeInfo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Activator.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iTInfo" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="ppTInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="iTInfo">
          <span data-ttu-id="1d8a3-1021">要傳回的類型資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-1021">The type information to return.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="1d8a3-1022">類型資訊的地區設定識別項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-1022">The locale identifier for the type information.</span>
          </span>
        </param>
        <param name="ppTInfo">
          <span data-ttu-id="1d8a3-1023">物件，會接收指向所要求之類型資訊物件的指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-1023">An object that receives a pointer to the requested type information object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1d8a3-1024">擷取物件的類型資訊，可以用來取得介面的類型資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-1024">Retrieves the type information for an object, which can then be used to get the type information for an interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d8a3-1025">這個方法用來從 unmanaged 程式碼，存取 managed 的類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-1025">This method is used to access managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="1d8a3-1026">如需詳細資訊`IDispatch::GetTypeInfo`，請參閱 MSDN Library。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-1026">For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="1d8a3-1027">不支援使用 COM <c>IDispatch</c> 介面進行晚期繫結的存取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-1027">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._Activator.GetTypeInfoCount">
      <MemberSignature Language="C#" Value="void _Activator.GetTypeInfoCount (out uint pcTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._Activator.GetTypeInfoCount([out] unsigned int32&amp; pcTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.System#Runtime#InteropServices#_Activator#GetTypeInfoCount(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfoCount (ByRef pcTInfo As UInteger) Implements _Activator.GetTypeInfoCount" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._Activator.GetTypeInfoCount([Runtime::InteropServices::Out] System::UInt32 % pcTInfo) = System::Runtime::InteropServices::_Activator::GetTypeInfoCount;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Activator.GetTypeInfoCount(System.UInt32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcTInfo" Type="System.UInt32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pcTInfo">
          <span data-ttu-id="1d8a3-1028">當這個方法傳回時，包含接收物件提供的類型資訊介面數目的位置指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-1028">When this method returns, contains a pointer to a location that receives the number of type information interfaces provided by the object.</span>
          </span>
          <span data-ttu-id="1d8a3-1029">這個參數會以未初始化的狀態傳遞。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-1029">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1d8a3-1030">擷取物件提供的類型資訊介面數目 (0 或 1)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-1030">Retrieves the number of type information interfaces that an object provides (either 0 or 1).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d8a3-1031">這個方法用來從 unmanaged 程式碼，存取 managed 的類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-1031">This method is used to access managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="1d8a3-1032">如需詳細資訊`IDispatch::GetTypeInfoCount`，請參閱 MSDN Library。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-1032">For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="1d8a3-1033">不支援使用 COM <c>IDispatch</c> 介面進行晚期繫結的存取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-1033">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._Activator.Invoke">
      <MemberSignature Language="C#" Value="void _Activator.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._Activator.Invoke(unsigned int32 dispIdMember, [in]valuetype System.Guid&amp; riid, unsigned int32 lcid, int16 wFlags, native int pDispParams, native int pVarResult, native int pExcepInfo, native int puArgErr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.System#Runtime#InteropServices#_Activator#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub Invoke (dispIdMember As UInteger, ByRef riid As Guid, lcid As UInteger, wFlags As Short, pDispParams As IntPtr, pVarResult As IntPtr, pExcepInfo As IntPtr, puArgErr As IntPtr) Implements _Activator.Invoke" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._Activator.Invoke(System::UInt32 dispIdMember, Guid % riid, System::UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr) = System::Runtime::InteropServices::_Activator::Invoke;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Activator.Invoke(System.UInt32,System.Guid,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispIdMember" Type="System.UInt32" />
        <Parameter Name="riid" Type="System.Guid" RefType="ref" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="wFlags" Type="System.Int16" />
        <Parameter Name="pDispParams" Type="System.IntPtr" />
        <Parameter Name="pVarResult" Type="System.IntPtr" />
        <Parameter Name="pExcepInfo" Type="System.IntPtr" />
        <Parameter Name="puArgErr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="dispIdMember">
          <span data-ttu-id="1d8a3-1034">用來識別成員的分派識別項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-1034">A dispatch identifier that identifies the member.</span>
          </span>
        </param>
        <param name="riid">
          <span data-ttu-id="1d8a3-1035">保留供未來使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-1035">Reserved for future use.</span>
          </span>
          <span data-ttu-id="1d8a3-1036">必須是 IID_NULL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-1036">Must be IID_NULL.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="1d8a3-1037">地區設定內容，用於解譯引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-1037">The locale context in which to interpret arguments.</span>
          </span>
        </param>
        <param name="wFlags">
          <span data-ttu-id="1d8a3-1038">描述呼叫之內容的旗標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-1038">Flags describing the context of the call.</span>
          </span>
        </param>
        <param name="pDispParams">
          <span data-ttu-id="1d8a3-1039">指向結構的指標，此結構包含引數陣列、用於具名引數的引數 DISPID 陣列，以及陣列所含項目數目的計數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-1039">A pointer to a structure that contains an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</span>
          </span>
        </param>
        <param name="pVarResult">
          <span data-ttu-id="1d8a3-1040">儲存結果的位置指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-1040">A pointer to the location where the result is to be stored.</span>
          </span>
        </param>
        <param name="pExcepInfo">
          <span data-ttu-id="1d8a3-1041">包含例外狀況資訊之結構的指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-1041">A pointer to a structure that contains exception information.</span>
          </span>
        </param>
        <param name="puArgErr">
          <span data-ttu-id="1d8a3-1042">第一個有錯誤的引數索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-1042">The index of the first argument that has an error.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1d8a3-1043">提供物件所公開的屬性和方法的存取權。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-1043">Provides access to properties and methods exposed by an object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d8a3-1044">這個方法用來從 unmanaged 程式碼，存取 managed 的類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-1044">This method is used to access managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="1d8a3-1045">如需詳細資訊`IDispatch::Invoke`，請參閱 MSDN Library。</span><span class="sxs-lookup"><span data-stu-id="1d8a3-1045">For more information about `IDispatch::Invoke`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="1d8a3-1046">不支援使用 COM <c>IDispatch</c> 介面進行晚期繫結的存取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d8a3-1046">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>