<Type Name="TimeZoneInfo+TransitionTime" FullName="System.TimeZoneInfo+TransitionTime">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="81dddef25ee4dee2eddd1f1de95cb86508ff77bf" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30729522" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct TimeZoneInfo.TransitionTime : IEquatable&lt;TimeZoneInfo.TransitionTime&gt;, System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class nested public sequential ansi serializable sealed beforefieldinit TimeZoneInfo/TransitionTime extends System.ValueType implements class System.IEquatable`1&lt;valuetype System.TimeZoneInfo/TransitionTime&gt;, class System.Runtime.Serialization.IDeserializationCallback, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.TimeZoneInfo.TransitionTime" />
  <TypeSignature Language="VB.NET" Value="Public Structure TimeZoneInfo.TransitionTime&#xA;Implements IDeserializationCallback, IEquatable(Of TimeZoneInfo.TransitionTime), ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public: value class TimeZoneInfo::TransitionTime : IEquatable&lt;TimeZoneInfo::TransitionTime&gt;, System::Runtime::Serialization::IDeserializationCallback, System::Runtime::Serialization::ISerializable" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.TimeZoneInfo+TransitionTime&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IDeserializationCallback</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.Core, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=b77a5c561934e089")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>提供某時區中之特定時間變更的相關資訊，例如從日光節約時間變更為標準時間，或從標準時間變更為日光節約時間。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用<xref:System.TimeZoneInfo.TransitionTime>結構表示從標準時間到日光節約時間，或從回標準時間日光節約時間轉換發生時。 此結構支援固定日期規則和浮動日期規則。 使用固定日期規則 （例如上午 2:00 在特定月份的特定日期發生的時間轉換 11 月 3 日)。 （例如上午 2:00 在特定月份特定星期的特定日期發生的時間轉換使用浮動日期規則 第一個星期日年 11 月）。  
  
 下表比較固定日期和浮動日期轉換中使用的內容：  
  
||月份|週|Day|時間|  
|-|-----------|----------|---------|----------|  
|固定日期規則|<xref:System.TimeZoneInfo.TransitionTime.Month%2A>|N/A|<xref:System.TimeZoneInfo.TransitionTime.Day%2A>|<xref:System.TimeZoneInfo.TransitionTime.TimeOfDay%2A>|  
|浮動日期規則|<xref:System.TimeZoneInfo.TransitionTime.Month%2A>|<xref:System.TimeZoneInfo.TransitionTime.Week%2A>|<xref:System.TimeZoneInfo.TransitionTime.DayOfWeek%2A>|<xref:System.TimeZoneInfo.TransitionTime.TimeOfDay%2A>|  
  
 固定日期和浮動日期轉換<xref:System.TimeZoneInfo.TransitionTime.TimeOfDay%2A>屬性會取得發生時間變更的時間。 從標準轉換到日光節約時間，這是時區的標準時間值。 從日光節約標準時間轉換，這是時區的日光節約時間值。 這是<xref:System.DateTime>值的日期元件會被忽略; 其年、 月和日值必須一律等於 1。  
  
> [!NOTE]
>  執行個體<xref:System.TimeZoneInfo.TransitionTime>結構是不變。 一旦建立物件之後，就無法修改其值。  
  
 A<xref:System.TimeZoneInfo.TransitionTime>物件可以藉由呼叫建立`static`(`Shared`在 Visual Basic 中)<xref:System.TimeZoneInfo.TransitionTime.CreateFixedDateRule%2A>和<xref:System.TimeZoneInfo.TransitionTime.CreateFloatingDateRule%2A>分別建立固定或浮動日期規則的方法。 開始和結束<xref:System.TimeZoneInfo.TransitionTime>物件做為參數，然後提供<xref:System.TimeZoneInfo.AdjustmentRule.CreateAdjustmentRule%2A>方法來建立新的調整規則，其中包含此轉換的時間資訊。  
  
 <xref:System.TimeZoneInfo.AdjustmentRule.DaylightTransitionStart%2A>和<xref:System.TimeZoneInfo.AdjustmentRule.DaylightTransitionEnd%2A>屬性<xref:System.TimeZoneInfo.AdjustmentRule>物件傳回<xref:System.TimeZoneInfo.TransitionTime>物件。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateFixedDateRule">
      <MemberSignature Language="C#" Value="public static TimeZoneInfo.TransitionTime CreateFixedDateRule (DateTime timeOfDay, int month, int day);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TimeZoneInfo/TransitionTime CreateFixedDateRule(valuetype System.DateTime timeOfDay, int32 month, int32 day) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.TransitionTime.CreateFixedDateRule(System.DateTime,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFixedDateRule (timeOfDay As DateTime, month As Integer, day As Integer) As TimeZoneInfo.TransitionTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeZoneInfo::TransitionTime CreateFixedDateRule(DateTime timeOfDay, int month, int day);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeZoneInfo+TransitionTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeOfDay" Type="System.DateTime" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="timeOfDay">發生時間變更的時間。 這個參數會對應至 <see cref="P:System.TimeZoneInfo.TransitionTime.TimeOfDay" /> 屬性。</param>
        <param name="month">發生時間變更的月份。 這個參數會對應至 <see cref="P:System.TimeZoneInfo.TransitionTime.Month" /> 屬性。</param>
        <param name="day">發生時間變更的月份日期。 這個參數會對應至 <see cref="P:System.TimeZoneInfo.TransitionTime.Day" /> 屬性。</param>
        <summary>定義使用固定日期規則的時間變更 (也就是在特定月份的特定日期發生的時間變更)。</summary>
        <returns>時間變更的相關資料。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會建立固定日期規則 （也就是在特定月份的特定日期發生的時間變更）。 例如，發生時間變更，一律在年 10 月 28 遵循固定日期規則。  
  
 之轉換的標準時間到日光節約時間，`timeOfDay`引數代表時區的標準時間轉換的時間。 從日光節約時間轉換為標準時間，則代表時區的日光節約時間轉換的時間。 請注意，這是<xref:System.DateTime>的年、 月和日期值必須全部等於 1 的值。  
  
   
  
## Examples  
 下列範例會建立使用固定日期規則和浮動日期規則的虛數的時區的時區轉換。 固定日期規則定義的上午 2:00 開始的時區調整 在年 3 月 15 日在上午 3:00 和結束 在 11 月 15日日到 1955 年 1900 年。  
  
 [!code-csharp[System.TimeZone2.TransitionTime.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.TransitionTime.Class/cs/System.TimeZone2.TransitionTime.Class.cs#2)]
 [!code-vb[System.TimeZone2.TransitionTime.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.TransitionTime.Class/vb/System.TimeZone2.TransitionTime.Class.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="timeOfDay" /> 參數具有非預設的日期元件。  
  
 -或-  
  
 <paramref name="timeOfDay" /> 參數的 <see cref="P:System.DateTime.Kind" /> 屬性不是 <see cref="F:System.DateTimeKind.Unspecified" />。  
  
 -或-  
  
 <paramref name="timeOfDay" /> 參數不表示整數毫秒數。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="month" /> 參數小於 1 或大於 12。  
  
 -或-  
  
 <paramref name="day" /> 參數小於 1 或大於 31。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFloatingDateRule">
      <MemberSignature Language="C#" Value="public static TimeZoneInfo.TransitionTime CreateFloatingDateRule (DateTime timeOfDay, int month, int week, DayOfWeek dayOfWeek);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TimeZoneInfo/TransitionTime CreateFloatingDateRule(valuetype System.DateTime timeOfDay, int32 month, int32 week, valuetype System.DayOfWeek dayOfWeek) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.TransitionTime.CreateFloatingDateRule(System.DateTime,System.Int32,System.Int32,System.DayOfWeek)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeZoneInfo::TransitionTime CreateFloatingDateRule(DateTime timeOfDay, int month, int week, DayOfWeek dayOfWeek);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeZoneInfo+TransitionTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeOfDay" Type="System.DateTime" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="week" Type="System.Int32" />
        <Parameter Name="dayOfWeek" Type="System.DayOfWeek" />
      </Parameters>
      <Docs>
        <param name="timeOfDay">發生時間變更的時間。 這個參數會對應至 <see cref="P:System.TimeZoneInfo.TransitionTime.TimeOfDay" /> 屬性。</param>
        <param name="month">發生時間變更的月份。 這個參數會對應至 <see cref="P:System.TimeZoneInfo.TransitionTime.Month" /> 屬性。</param>
        <param name="week">發生時間變更的當月週次。 它的值範圍從 1 到 5，5 代表月份的最後一週。 這個參數會對應至 <see cref="P:System.TimeZoneInfo.TransitionTime.Week" /> 屬性。</param>
        <param name="dayOfWeek">發生時間變更的當週日次。 這個參數會對應至 <see cref="P:System.TimeZoneInfo.TransitionTime.DayOfWeek" /> 屬性。</param>
        <summary>定義使用浮動日期規則的時間變更 (也就是在特定月份特定星期的特定日期發生的時間變更)。</summary>
        <returns>時間變更的相關資料。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會建立浮動日期規則 （也就是在特定月份特定星期的特定日期發生的時間變更）。 例如，年 10 月的最後一個星期日發生時間變更遵循浮動日期規則。  
  
 之轉換的標準時間到日光節約時間，`timeOfDay`引數代表時區的標準時間轉換的時間。 從日光節約時間轉換為標準時間，則代表時區的日光節約時間轉換的時間。 請注意，這是<xref:System.DateTime>的年、 月和日期值必須全部等於 1 的值。  
  
   
  
## Examples  
 下列範例會建立使用固定日期規則和浮動日期規則的虛數的時區的時區轉換。 浮動日期規則定義的上午 2:00 開始的時區調整 在 3 月的最後一個星期日且結束於上午 3:00 在年 1956年開始年 10 月的第四個星期日。  
  
 [!code-csharp[System.TimeZone2.TransitionTime.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.TransitionTime.Class/cs/System.TimeZone2.TransitionTime.Class.cs#2)]
 [!code-vb[System.TimeZone2.TransitionTime.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.TransitionTime.Class/vb/System.TimeZone2.TransitionTime.Class.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="timeOfDay" /> 參數具有非預設的日期元件。  
  
 -或-  
  
 <paramref name="timeOfDay" /> 參數不表示整數毫秒數。  
  
 -或-  
  
 <paramref name="timeOfDay" /> 參數的 <see cref="P:System.DateTime.Kind" /> 屬性不是 <see cref="F:System.DateTimeKind.Unspecified" />。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="month" /> 小於 1 或大於 12。  
  
 -或-  
  
 <paramref name="week" /> 小於 1 或大於 5。  
  
 -或-  
  
 <paramref name="dayOfWeek" /> 參數不是 <see cref="T:System.DayOfWeek" /> 列舉的成員。</exception>
      </Docs>
    </Member>
    <Member MemberName="Day">
      <MemberSignature Language="C#" Value="public int Day { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Day" />
      <MemberSignature Language="DocId" Value="P:System.TimeZoneInfo.TransitionTime.Day" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Day As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Day { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得發生時間變更的日期。</summary>
        <value>發生時間變更的日期。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.TimeZoneInfo.TransitionTime.Day%2A>屬性會傳回有效的值才<xref:System.TimeZoneInfo.TransitionTime.IsFixedDateRule%2A>屬性是`true`。  
  
 <xref:System.TimeZoneInfo.TransitionTime.Day%2A>屬性值會對應至值的`day`參數<xref:System.TimeZoneInfo.TransitionTime.CreateFixedDateRule%2A>方法。 如果其值大於轉換的月份天數，轉換就會發生在當月的最後一天。  
  
 <xref:System.TimeZoneInfo.TransitionTime.Day%2A>屬性表示當月日期所在套用固定日期規則 （例如，年 4 月 15）。 相反地，<xref:System.TimeZoneInfo.TransitionTime.DayOfWeek%2A>屬性會指出一週天數套用浮動日期規則 （例如，年 11 月的第二個星期日）。  
  
   
  
## Examples  
 下列範例會列舉本機電腦上找到的時區，並顯示所有固定日期轉換的轉換時間資訊。 時間的資訊包括發生時間變更的日期。  
  
 [!code-csharp[System.TimeZone2.TransitionTime.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.TransitionTime.Class/cs/System.TimeZone2.TransitionTime.Class.cs#3)]
 [!code-vb[System.TimeZone2.TransitionTime.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.TransitionTime.Class/vb/System.TimeZone2.TransitionTime.Class.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DayOfWeek">
      <MemberSignature Language="C#" Value="public DayOfWeek DayOfWeek { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DayOfWeek DayOfWeek" />
      <MemberSignature Language="DocId" Value="P:System.TimeZoneInfo.TransitionTime.DayOfWeek" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DayOfWeek As DayOfWeek" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DayOfWeek DayOfWeek { DayOfWeek get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DayOfWeek</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得發生時間變更的當週日次。</summary>
        <value>發生時間變更的當週日次。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.TimeZoneInfo.TransitionTime.DayOfWeek%2A>屬性會傳回有效的值才<xref:System.TimeZoneInfo.TransitionTime.IsFixedDateRule%2A>屬性是`false`。  
  
 <xref:System.TimeZoneInfo.TransitionTime.DayOfWeek%2A>屬性會指出一週天數套用浮動日期規則 （例如，年 11 月的第二個星期日）。 相反地，<xref:System.TimeZoneInfo.TransitionTime.Day%2A>屬性表示當月日期所在套用固定日期規則 （例如，年 4 月 15）。  
  
   
  
## Examples  
 下列範例會列舉本機電腦上找到的時區，並顯示所有浮動日期轉換的轉換時間資訊。 時間的資訊包括發生時間變更的一週天數。  
  
 [!code-csharp[System.TimeZone2.TransitionTime.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.TransitionTime.Class/cs/System.TimeZone2.TransitionTime.Class.cs#4)]
 [!code-vb[System.TimeZone2.TransitionTime.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.TransitionTime.Class/vb/System.TimeZone2.TransitionTime.Class.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>判斷兩個 <see cref="T:System.TimeZoneInfo.TransitionTime" /> 物件是否具有完全相同的值。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.TransitionTime.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">要與目前 <see cref="T:System.TimeZoneInfo.TransitionTime" /> 物件比較的物件。</param>
        <summary>判斷物件的值是否與目前 <see cref="T:System.TimeZoneInfo.TransitionTime" /> 物件的值相等。</summary>
        <returns>
          如果兩個物件相等則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 相等的定義如下：`obj`參數必須是<xref:System.TimeZoneInfo.TransitionTime>物件，並必須等於目前的屬性值<xref:System.TimeZoneInfo.TransitionTime>物件。  
  
   
  
## Examples  
 下列範例說明如何呼叫<xref:System.TimeZoneInfo.TransitionTime.Equals%2A>方法。  
  
 [!code-csharp[System.TimeZone2.TransitionTime.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.TransitionTime.Class/cs/System.TimeZone2.TransitionTime.Class.cs#1)]
 [!code-vb[System.TimeZone2.TransitionTime.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.TransitionTime.Class/vb/System.TimeZone2.TransitionTime.Class.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (TimeZoneInfo.TransitionTime other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.TimeZoneInfo/TransitionTime other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.TransitionTime.Equals(System.TimeZoneInfo.TransitionTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As TimeZoneInfo.TransitionTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(TimeZoneInfo::TransitionTime other);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.TimeZoneInfo+TransitionTime" />
      </Parameters>
      <Docs>
        <param name="other">要與目前執行個體比較的物件。</param>
        <summary>判斷目前 <see cref="T:System.TimeZoneInfo.TransitionTime" /> 物件的值是否與第二個 <see cref="T:System.TimeZoneInfo.TransitionTime" /> 物件的值相等。</summary>
        <returns>
          如果兩個物件的屬性值相同，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要判斷是否這兩個<xref:System.TimeZoneInfo.TransitionTime>物件是否相等，這個方法的執行屬性地比較。 方法會傳回`true`只有當目前<xref:System.TimeZoneInfo.TransitionTime>物件和`other`物件有相同的值為每個<xref:System.TimeZoneInfo.TransitionTime>物件的六個屬性值。  
  
   
  
## Examples  
 下列範例說明如何呼叫<xref:System.TimeZoneInfo.TransitionTime.Equals%2A>方法。  
  
 [!code-csharp[System.TimeZone2.TransitionTime.Class#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.TransitionTime.Class/cs/System.TimeZone2.TransitionTime.Class.cs#7)]
 [!code-vb[System.TimeZone2.TransitionTime.Class#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.TransitionTime.Class/vb/System.TimeZone2.TransitionTime.Class.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.TransitionTime.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>做為雜湊函式，用於雜湊演算法和資料結構，例如雜湊資料表。</summary>
        <returns>32 位元帶正負號的整數，做為這個 <see cref="T:System.TimeZoneInfo.TransitionTime" /> 物件的雜湊碼。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFixedDateRule">
      <MemberSignature Language="C#" Value="public bool IsFixedDateRule { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFixedDateRule" />
      <MemberSignature Language="DocId" Value="P:System.TimeZoneInfo.TransitionTime.IsFixedDateRule" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFixedDateRule As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFixedDateRule { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，指出時間變更發生在固定日期和時間 (例如 11 月 1 日) 或是浮動日期和時間 (例如 10 月的最後一個星期日)。</summary>
        <value>
          如果時間變更規則是固定日期，則為 <see langword="true" />，如果時間變更規則是浮動日期，則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 固定日期規則會指出轉換發生在相同的日期和時間調整規則所套用的每一年。 例如，發生時間變更，每年 11 月 3 會遵循固定日期規則。 浮動日期規則表示調整規則適用於每一年在特定月份特定星期的特定日期發生的轉換。 例如，年 11 月的第一個星期日，就會發生時間變更遵循浮動日期規則。  
  
 值<xref:System.TimeZoneInfo.TransitionTime.IsFixedDateRule%2A>屬性會決定哪些內容的<xref:System.TimeZoneInfo.TransitionTime>物件具有有效的值。 下表指出哪一個屬性的值受到<xref:System.TimeZoneInfo.TransitionTime.IsFixedDateRule%2A>屬性。  
  
|TransitionTime 屬性|IsFixedDateRule = true|IsFixedDateRule = false|  
|-----------------------------|-----------------------------|------------------------------|  
|`Day`|驗證|未使用|  
|`DayOfWeek`|未使用|驗證|  
|`Week`|未使用|驗證|  
|`Month`|驗證|驗證|  
|`TimeOfDay`|驗證|驗證|  
  
   
  
## Examples  
 下列範例會列出所有可用的本機系統時區轉換次數與日光節約時間。 固定日期規則的時區，它會顯示內容的轉換時間資訊<xref:System.TimeZoneInfo.TransitionTime>物件。 沒有固定日期規則的時區，它會使用<xref:System.Globalization.Calendar>物件，代表目前系統的行事曆來判斷實際的開始和結束日期的轉換。 這個範例會顯示結果到主控台。  
  
 [!code-csharp[System.TimeZone2.TransitionTime.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.TransitionTime.Class/cs/example1.cs#5)]
 [!code-vb[System.TimeZone2.TransitionTime.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.TransitionTime.Class/vb/example1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Month">
      <MemberSignature Language="C#" Value="public int Month { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Month" />
      <MemberSignature Language="DocId" Value="P:System.TimeZoneInfo.TransitionTime.Month" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Month As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Month { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得發生時間變更的月份。</summary>
        <value>發生時間變更的月份。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有效值<xref:System.TimeZoneInfo.TransitionTime.Month%2A>屬性範圍從 1 到 12。  
  
 <xref:System.TimeZoneInfo.TransitionTime.Month%2A>屬性適用於日期固定和浮動日期規則。  
  
   
  
## Examples  
 下列範例會列舉本機電腦上找到的時區，並顯示所有浮動日期轉換的轉換時間資訊。 時間的資訊包括發生時間變更的月份。  
  
 [!code-csharp[System.TimeZone2.TransitionTime.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.TransitionTime.Class/cs/System.TimeZone2.TransitionTime.Class.cs#4)]
 [!code-vb[System.TimeZone2.TransitionTime.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.TransitionTime.Class/vb/System.TimeZone2.TransitionTime.Class.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (TimeZoneInfo.TransitionTime t1, TimeZoneInfo.TransitionTime t2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.TimeZoneInfo/TransitionTime t1, valuetype System.TimeZoneInfo/TransitionTime t2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.TransitionTime.op_Equality(System.TimeZoneInfo.TransitionTime,System.TimeZoneInfo.TransitionTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (t1 As TimeZoneInfo.TransitionTime, t2 As TimeZoneInfo.TransitionTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(TimeZoneInfo::TransitionTime t1, TimeZoneInfo::TransitionTime t2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t1" Type="System.TimeZoneInfo+TransitionTime" />
        <Parameter Name="t2" Type="System.TimeZoneInfo+TransitionTime" />
      </Parameters>
      <Docs>
        <param name="t1">要比較的第一個物件。</param>
        <param name="t2">要比較的第二個物件。</param>
        <summary>判斷指定的兩個 <see cref="T:System.TimeZoneInfo.TransitionTime" /> 物件是否相等。</summary>
        <returns>
          如果 <paramref name="t1" /> 和 <paramref name="t2" /> 的值相同，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 兩個<xref:System.TimeZoneInfo.TransitionTime>物件是否相等，如果其六個屬性的每個有相同的值。 反之則為不相等。  
  
 這個運算子的對等方法是<xref:System.TimeZoneInfo.TransitionTime.Equals%28System.TimeZoneInfo.TransitionTime%29?displayProperty=nameWithType>。]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (TimeZoneInfo.TransitionTime t1, TimeZoneInfo.TransitionTime t2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.TimeZoneInfo/TransitionTime t1, valuetype System.TimeZoneInfo/TransitionTime t2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.TransitionTime.op_Inequality(System.TimeZoneInfo.TransitionTime,System.TimeZoneInfo.TransitionTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (t1 As TimeZoneInfo.TransitionTime, t2 As TimeZoneInfo.TransitionTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(TimeZoneInfo::TransitionTime t1, TimeZoneInfo::TransitionTime t2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t1" Type="System.TimeZoneInfo+TransitionTime" />
        <Parameter Name="t2" Type="System.TimeZoneInfo+TransitionTime" />
      </Parameters>
      <Docs>
        <param name="t1">要比較的第一個物件。</param>
        <param name="t2">要比較的第二個物件。</param>
        <summary>判斷指定的兩個 <see cref="T:System.TimeZoneInfo.TransitionTime" /> 物件是否相等。</summary>
        <returns>
          如果 <paramref name="t1" /> 與 <paramref name="t2" /> 有任何不同的成員值，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 兩個<xref:System.TimeZoneInfo.TransitionTime>物件不相等，如果有任何其六個屬性的值不同。 否則，它們相等。  
  
 這個運算子的對等方法是<xref:System.TimeZoneInfo.TransitionTime.Equals%28System.TimeZoneInfo.TransitionTime%29?displayProperty=nameWithType>。]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.IDeserializationCallback.OnDeserialization">
      <MemberSignature Language="C#" Value="void IDeserializationCallback.OnDeserialization (object sender);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(object sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.TransitionTime.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub OnDeserialization (sender As Object) Implements IDeserializationCallback.OnDeserialization" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System::Object ^ sender) = System::Runtime::Serialization::IDeserializationCallback::OnDeserialization;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="sender">初始化回呼 (Callback) 的物件。 這個參數的功能目前未實作。</param>
        <summary>在物件完成還原序列化時執行。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.TransitionTime.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">要填入資料的物件。</param>
        <param name="context">這個序列化的目的端 (請參閱 <see cref="T:System.Runtime.Serialization.StreamingContext" />)。</param>
        <summary>將序列化 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 物件所需的資料填入此物件。</summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">需要完全信任立即呼叫者。 這個成員無法供部分信任或安全性透明程式碼。</permission>
      </Docs>
    </Member>
    <Member MemberName="TimeOfDay">
      <MemberSignature Language="C#" Value="public DateTime TimeOfDay { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime TimeOfDay" />
      <MemberSignature Language="DocId" Value="P:System.TimeZoneInfo.TransitionTime.TimeOfDay" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TimeOfDay As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime TimeOfDay { DateTime get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得發生時間變更的時、分和秒。</summary>
        <value>發生時間變更的當日時間。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 之轉換的標準時間到日光節約時間，<xref:System.TimeZoneInfo.TransitionTime.TimeOfDay%2A>值表示時區的標準時間轉換的時間。 從日光節約時間轉換為標準時間，則代表時區的日光節約時間轉換的時間。  
  
 <xref:System.TimeZoneInfo.TransitionTime.TimeOfDay%2A>屬性定義的時間變更，但不是其日期的時間。 日期由<xref:System.TimeZoneInfo.TransitionTime.Month%2A>和<xref:System.TimeZoneInfo.TransitionTime.Day%2A>屬性的固定規則變更，以及由<xref:System.TimeZoneInfo.TransitionTime.Month%2A>， <xref:System.TimeZoneInfo.TransitionTime.Week%2A>，和<xref:System.TimeZoneInfo.TransitionTime.DayOfWeek%2A>浮動規則變更的屬性。 這個日期元件<xref:System.DateTime>值會被忽略，則為年、 月和日的值永遠為 1。  
  
 <xref:System.TimeZoneInfo.TransitionTime.TimeOfDay%2A>屬性適用於日期固定和浮動日期轉換。  
  
   
  
## Examples  
 下列範例會列舉本機電腦上找到的時區，並顯示轉換有調整規則的時區的時間資訊。 時間資訊包括發生時間變更的當日的時間。  
  
 [!code-csharp[System.TimeZone2.TransitionTime.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.TransitionTime.Class/cs/System.TimeZone2.TransitionTime.Class.cs#6)]
 [!code-vb[System.TimeZone2.TransitionTime.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.TransitionTime.Class/vb/System.TimeZone2.TransitionTime.Class.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Week">
      <MemberSignature Language="C#" Value="public int Week { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Week" />
      <MemberSignature Language="DocId" Value="P:System.TimeZoneInfo.TransitionTime.Week" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Week As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Week { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得發生時間變更的當月週次。</summary>
        <value>發生時間變更的當月週次。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 值<xref:System.TimeZoneInfo.TransitionTime.Week%2A>屬性只適用於使用浮動日期規則的時間變更。 有效的值可以介於 1 到 5。  
  
 <xref:System.TimeZoneInfo.TransitionTime.Month%2A>屬性會定義發生時間變更的月份。 <xref:System.TimeZoneInfo.TransitionTime.Week%2A>屬性會決定轉換發生的一週。 <xref:System.TimeZoneInfo.TransitionTime.DayOfWeek%2A>屬性會定義轉換發生的一週天數。 值<xref:System.TimeZoneInfo.TransitionTime.Week%2A>屬性會決定下表所示。  
  
|如果週屬性值|轉換會發生|  
|-----------------------------------|------------------------------|  
|1|第一個出現<xref:System.TimeZoneInfo.TransitionTime.DayOfWeek%2A>值<xref:System.TimeZoneInfo.TransitionTime.Month%2A>。|  
|2|第二次發生<xref:System.TimeZoneInfo.TransitionTime.DayOfWeek%2A>值<xref:System.TimeZoneInfo.TransitionTime.Month%2A>。|  
|3|第三次發生<xref:System.TimeZoneInfo.TransitionTime.DayOfWeek%2A>值<xref:System.TimeZoneInfo.TransitionTime.Month%2A>。|  
|4|第四個次數<xref:System.TimeZoneInfo.TransitionTime.DayOfWeek%2A>值<xref:System.TimeZoneInfo.TransitionTime.Month%2A>。|  
|5|最後一個出現<xref:System.TimeZoneInfo.TransitionTime.DayOfWeek%2A>值<xref:System.TimeZoneInfo.TransitionTime.Month%2A>。|  
  
 例如，如果第一個星期日的 3 月的值，轉換就會發生<xref:System.TimeZoneInfo.TransitionTime.Week%2A>屬性為 1。 如果它就會發生在 3 月的值最後一個星期日<xref:System.TimeZoneInfo.TransitionTime.Week%2A>屬性為 5。  
  
   
  
## Examples  
 下列範例會列舉本機電腦上找到的時區，並顯示所有浮動日期轉換的轉換時間資訊。 時間的資訊包括發生時間變更的當月週次。 此範例也會定義`WeekOfMonth`顯示字串表示的序數值列舉<xref:System.TimeZoneInfo.TransitionTime.Week%2A>屬性，而不是整數。  
  
 [!code-csharp[System.TimeZone2.TransitionTime.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.TransitionTime.Class/cs/System.TimeZone2.TransitionTime.Class.cs#4)]
 [!code-vb[System.TimeZone2.TransitionTime.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.TransitionTime.Class/vb/System.TimeZone2.TransitionTime.Class.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.TimeZoneInfo.TransitionTime.Day" />
        <altmember cref="P:System.TimeZoneInfo.TransitionTime.Month" />
      </Docs>
    </Member>
  </Members>
</Type>