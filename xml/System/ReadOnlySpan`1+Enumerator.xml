<Type Name="ReadOnlySpan&lt;T&gt;+Enumerator" FullName="System.ReadOnlySpan&lt;T&gt;+Enumerator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bd1ce9d661ceaee8286bac06ad73466d6f1f1418" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58741140" /></Metadata><TypeSignature Language="C#" Value="public struct ReadOnlySpan&lt;T&gt;.Enumerator" />
  <TypeSignature Language="ILAsm" Value=".class nested public sequential ansi sealed beforefieldinit ReadOnlySpan`1/Enumerator&lt;T&gt; extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.ReadOnlySpan`1.Enumerator" />
  <TypeSignature Language="VB.NET" Value="Public Structure ReadOnlySpan(Of T).Enumerator" />
  <TypeSignature Language="C++ CLI" Value="public: value class ReadOnlySpan&lt;T&gt;::Enumerator" />
  <TypeSignature Language="F#" Value="type ReadOnlySpan&lt;'T&gt;.Enumerator = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.2;netcore-2.1;netcore-3.0;netstandard-2.1">
      <AttributeName>System.Runtime.CompilerServices.IsByRefLike</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="0efc4-101">提供 <see cref="T:System.ReadOnlySpan`1" /> 項目的列舉值。</span><span class="sxs-lookup"><span data-stu-id="0efc4-101">Provides an enumerator for the elements of a <see cref="T:System.ReadOnlySpan`1" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[<span data-ttu-id="0efc4-102">C# [foreach](~/docs/csharp/language-reference/keywords/foreach-in.md) C# 語言和[每個...下一步](~/docs/visual-basic/language-reference/statements/for-each-next-statement.md)建構在 Visual Basic 中的會隱藏列舉值的複雜度。</span><span class="sxs-lookup"><span data-stu-id="0efc4-102">The C# [foreach](~/docs/csharp/language-reference/keywords/foreach-in.md) of the C# language and the [For Each...Next](~/docs/visual-basic/language-reference/statements/for-each-next-statement.md) construct in Visual Basic hides the complexity of enumerators.</span></span> <span data-ttu-id="0efc4-103">而不要直接操作列舉值，並使用`foreach`或`For Each...Next`建議。</span><span class="sxs-lookup"><span data-stu-id="0efc4-103">Instead of directly manipulating the enumerator, using `foreach` or `For Each...Next` is recommended.</span></span> 

<span data-ttu-id="0efc4-104">一開始，列舉值位於第一個元素之前<xref:System.ReadOnlySpan`1>。</span><span class="sxs-lookup"><span data-stu-id="0efc4-104">Initially, the enumerator is positioned before the first element in the <xref:System.ReadOnlySpan`1>.</span></span> <span data-ttu-id="0efc4-105">在這個位置上，<xref:System.ReadOnlySpan`1.Enumerator.Current> 並未定義。</span><span class="sxs-lookup"><span data-stu-id="0efc4-105">At this position, <xref:System.ReadOnlySpan`1.Enumerator.Current> is undefined.</span></span> <span data-ttu-id="0efc4-106">您必須呼叫<xref:System.ReadOnlySpan`1.Enumerator.MoveNext%2A>列舉值前進到中的第一個項目<xref:System.ReadOnlySpan`1>讀取的值之前<xref:System.ReadOnlySpan`1.Enumerator.Current>。</span><span class="sxs-lookup"><span data-stu-id="0efc4-106">You must call <xref:System.ReadOnlySpan`1.Enumerator.MoveNext%2A> to advance the enumerator to the first item in the <xref:System.ReadOnlySpan`1> before reading the value of <xref:System.ReadOnlySpan`1.Enumerator.Current>.</span></span>

<span data-ttu-id="0efc4-107"><xref:System.ReadOnlySpan`1.Enumerator.Current> 會傳回相同的值，直到<xref:System.ReadOnlySpan`1.Enumerator.MoveNext%2A>呼叫。</span><span class="sxs-lookup"><span data-stu-id="0efc4-107"><xref:System.ReadOnlySpan`1.Enumerator.Current> returns the same value until <xref:System.ReadOnlySpan`1.Enumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="0efc4-108"><xref:System.ReadOnlySpan`1.Enumerator.MoveNext%2A> 設定<xref:System.ReadOnlySpan`1.Enumerator.Current>中的下一個項目<xref:System.ReadOnlySpan`1>。</span><span class="sxs-lookup"><span data-stu-id="0efc4-108"><xref:System.ReadOnlySpan`1.Enumerator.MoveNext%2A> sets <xref:System.ReadOnlySpan`1.Enumerator.Current> to the next item in the <xref:System.ReadOnlySpan`1>.</span></span>

<span data-ttu-id="0efc4-109">如果<xref:System.ReadOnlySpan`1.Enumerator.MoveNext%2A>通過結尾<xref:System.ReadOnlySpan`1>，<xref:System.ReadOnlySpan`1.Enumerator.MoveNext%2A>傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="0efc4-109">If <xref:System.ReadOnlySpan`1.Enumerator.MoveNext%2A> passes the end of the <xref:System.ReadOnlySpan`1>, <xref:System.ReadOnlySpan`1.Enumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="0efc4-110">列舉值位於此狀態，後續呼叫<xref:System.ReadOnlySpan`1.Enumerator.MoveNext%2A>也會傳回`false`和<xref:System.ReadOnlySpan`1.Enumerator.Current>是未定義。</span><span class="sxs-lookup"><span data-stu-id="0efc4-110">When the enumerator is at this state, subsequent calls to <xref:System.ReadOnlySpan`1.Enumerator.MoveNext%2A> also return `false` and <xref:System.ReadOnlySpan`1.Enumerator.Current> is undefined.</span></span> <span data-ttu-id="0efc4-111">您無法設定<xref:System.ReadOnlySpan`1.Enumerator.Current>中的第一個項目<xref:System.ReadOnlySpan`1>一次; 您必須改為建立新的列舉值執行個體。</span><span class="sxs-lookup"><span data-stu-id="0efc4-111">You cannot set <xref:System.ReadOnlySpan`1.Enumerator.Current> to the first item in the <xref:System.ReadOnlySpan`1> again; you must create a new enumerator instance instead.</span></span> 

<span data-ttu-id="0efc4-112">雖然<xref:System.ReadOnlySpan`1>配置在堆疊上，在其上的基礎資料<xref:System.ReadOnlySpan`1>點，可能無法。</span><span class="sxs-lookup"><span data-stu-id="0efc4-112">Though the <xref:System.ReadOnlySpan`1> is allocated on the stack, the underlying data on which the <xref:System.ReadOnlySpan`1> points to, may not be.</span></span> <span data-ttu-id="0efc4-113">因此，列舉<xref:System.ReadOnlySpan`1>在本質上並非安全執行緒程序。</span><span class="sxs-lookup"><span data-stu-id="0efc4-113">Therefore, enumerating through a <xref:System.ReadOnlySpan`1> is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="0efc4-114">若要保證列舉期間的執行緒安全，您必須實作自己的同步處理。</span><span class="sxs-lookup"><span data-stu-id="0efc4-114">To guarantee thread safety during enumeration, you must implement your own synchronization.</span></span>

<span data-ttu-id="0efc4-115">不同於在.NET 中，某些其他列舉值結構<xref:System.ReadOnlySpan`1.Enumerator>:</span><span class="sxs-lookup"><span data-stu-id="0efc4-115">Unlike some other enumerator structures in .NET, the <xref:System.ReadOnlySpan`1.Enumerator>:</span></span>

- <span data-ttu-id="0efc4-116">不會實作<xref:System.Collections.IEnumerator>或<xref:System.Collections.Generic.IEnumerator`1>介面。</span><span class="sxs-lookup"><span data-stu-id="0efc4-116">Does not implement the <xref:System.Collections.IEnumerator> or <xref:System.Collections.Generic.IEnumerator`1> interface.</span></span> <span data-ttu-id="0efc4-117">這是因為<xref:System.ReadOnlySpan`1.Enumerator>已[ref struct](~/docs/csharp/language-reference/keywords/ref.md#ref-struct-types)和無法進行 boxed 處理。</span><span class="sxs-lookup"><span data-stu-id="0efc4-117">This is because <xref:System.ReadOnlySpan`1.Enumerator> is a [ref struct](~/docs/csharp/language-reference/keywords/ref.md#ref-struct-types) and cannot be boxed.</span></span>

- <span data-ttu-id="0efc4-118">不包含`Reset`方法，可以將列舉值設定為在範圍中第一個項目之前，其初始位置。</span><span class="sxs-lookup"><span data-stu-id="0efc4-118">Does not include a `Reset` method, which can set the enumerator to its initial position before the first element in the span.</span></span> <span data-ttu-id="0efc4-119">(<xref:System.Collections.IEnumerator.Reset?displayProperty=nameWithType>方法必須實作此介面的一部分，但大部分的實作者會擲回例外狀況，或不提供任何實作。)</span><span class="sxs-lookup"><span data-stu-id="0efc4-119">(The <xref:System.Collections.IEnumerator.Reset?displayProperty=nameWithType> method must be implemented as part of the interface, but most implementors either throw an exception or provide no implementation.)</span></span>]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public T&amp; Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance T&amp; modreq(System.Runtime.InteropServices.InAttribute) Current" />
      <MemberSignature Language="DocId" Value="P:System.ReadOnlySpan`1.Enumerator.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As T&amp;" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T&amp; ^ Current { T&amp; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : T&amp;" Usage="System.ReadOnlySpan&lt;'T&gt;.Enumerator.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.2;netcore-2.1;netcore-3.0;netstandard-2.1">
          <AttributeName>System.Runtime.CompilerServices.IsReadOnly</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue RefType="Ref">
        <ReturnType>T&amp;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0efc4-120">取得位於目前列舉值位置的項目參考。</span><span class="sxs-lookup"><span data-stu-id="0efc4-120">Gets a reference to the item at the current position of the enumerator.</span></span></summary>
        <value><span data-ttu-id="0efc4-121"><see cref="T:System.ReadOnlySpan`1" /> 中位於目前列舉值位置的項目。</span><span class="sxs-lookup"><span data-stu-id="0efc4-121">The element in the <see cref="T:System.ReadOnlySpan`1" /> at the current position of the enumerator.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="0efc4-122">`Current` 未定義下的下列條件：</span><span class="sxs-lookup"><span data-stu-id="0efc4-122">`Current` is undefined under either of the following conditions:</span></span> 

- <span data-ttu-id="0efc4-123">立即建立列舉值之後，將列舉值位於範圍中的第一個元素之前。</span><span class="sxs-lookup"><span data-stu-id="0efc4-123">Immediately after the enumerator is created, the enumerator is positioned before the first element in the span.</span></span> <span data-ttu-id="0efc4-124"><xref:System.ReadOnlySpan`1.Enumerator.MoveNext*> 將列舉值前進至範圍的第一個項目，再讀取的值時必須呼叫`Current`。</span><span class="sxs-lookup"><span data-stu-id="0efc4-124"><xref:System.ReadOnlySpan`1.Enumerator.MoveNext*> must be called to advance the enumerator to the first element of the span before reading the value of `Current`.</span></span>

- <span data-ttu-id="0efc4-125">在上次呼叫<xref:System.ReadOnlySpan`1.Enumerator.MoveNext*>傳回`false`，表示範圍結尾。</span><span class="sxs-lookup"><span data-stu-id="0efc4-125">The last call to <xref:System.ReadOnlySpan`1.Enumerator.MoveNext*> returned `false`, which indicates the end of the span.</span></span> 

<span data-ttu-id="0efc4-126">`Current` 會傳回相同的值，直到<xref:System.ReadOnlySpan`1.Enumerator.MoveNext*>呼叫。</span><span class="sxs-lookup"><span data-stu-id="0efc4-126">`Current` returns the same value until <xref:System.ReadOnlySpan`1.Enumerator.MoveNext*> is called.</span></span> <span data-ttu-id="0efc4-127"><xref:System.ReadOnlySpan`1.Enumerator.MoveNext*> 設定`Current`範圍中的下一個項目。</span><span class="sxs-lookup"><span data-stu-id="0efc4-127"><xref:System.ReadOnlySpan`1.Enumerator.MoveNext*> sets `Current` to the next item in the span.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ReadOnlySpan`1.Enumerator.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool MoveNext();" />
      <MemberSignature Language="F#" Value="member this.MoveNext : unit -&gt; bool" Usage="enumerator.MoveNext " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0efc4-128">將列舉值前移至 <see cref="System.ReadOnlySpan`1" /> 的下一個項目。</span><span class="sxs-lookup"><span data-stu-id="0efc4-128">Advances the enumerator to the next item of the <see cref="System.ReadOnlySpan`1" />.</span></span></summary>
        <returns><span data-ttu-id="0efc4-129">如果列舉值成功前移至下一個項目，則為 `true`；如果已傳遞範圍結尾，則為 `false`。</span><span class="sxs-lookup"><span data-stu-id="0efc4-129">`true` if the enumerator successfully advanced to the next item; `false` if the end of the span has been passed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="0efc4-130">建立列舉值之後，將它放在範圍內，且第一個呼叫的第一個元素之前`MoveNext`將列舉值前移至範圍中的第一個項目。</span><span class="sxs-lookup"><span data-stu-id="0efc4-130">After an enumerator is created, it is positioned before the first element in the span, and the first call to `MoveNext` advances the enumerator to the first item in the span.</span></span> 

<span data-ttu-id="0efc4-131">如果`MoveNext`傳遞的範圍內，結尾`MoveNext`傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="0efc4-131">If `MoveNext` passes the end of the span, `MoveNext` returns `false`.</span></span> <span data-ttu-id="0efc4-132">列舉值位於此狀態，後續呼叫`MoveNext`也會傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="0efc4-132">When the enumerator is at this state, subsequent calls to `MoveNext` also return `false`.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>