<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Environment.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5b8f2716206a0d7c4bbbc8310b3ec10e214e0d3af.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b8f2716206a0d7c4bbbc8310b3ec10e214e0d3af</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Environment">
          <source>Provides information about, and means to manipulate, the current environment and platform.</source>
          <target state="translated">提供有關目前環境和平台的資訊，以及操作的方法。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Environment">
          <source>This class cannot be inherited.</source>
          <target state="translated">這個類別無法被繼承。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Environment">
          <source>Use the <ph id="ph1">&lt;xref:System.Environment&gt;</ph> class to retrieve information such as command-line arguments, the exit code, environment variable settings, contents of the call stack, time since last system boot, and the version of the common language runtime.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Environment&gt;</ph>類別來擷取資訊，例如命令列引數，結束代碼、 環境變數設定、 呼叫堆疊，時間的內容自上次系統開機，以及 common language runtime 的版本。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Environment">
          <source>The following example demonstrates displays a list of information about the current environment.</source>
          <target state="translated">下列範例會示範顯示目前環境的相關資訊的清單。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="P:System.Environment.CommandLine">
          <source>Gets the command line for this process.</source>
          <target state="translated">取得這個處理程序的命令列。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.CommandLine">
          <source>A string containing command-line arguments.</source>
          <target state="translated">含有命令列引數的字串。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.CommandLine">
          <source>This property provides access to the program name and any arguments specified on the command line when the current process was started.</source>
          <target state="translated">這個屬性提供的存取權的程序名稱和目前的處理序啟動時，在命令列上指定任何引數。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.CommandLine">
          <source>The program name can  include path information, but is not required to do so.</source>
          <target state="translated">程式名稱可以包含路徑資訊，但不需要執行這項操作。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.CommandLine">
          <source>Use the <ph id="ph1">&lt;xref:System.Environment.GetCommandLineArgs%2A&gt;</ph> method to retrieve the command-line information parsed and stored in an array of strings.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Environment.GetCommandLineArgs%2A&gt;</ph>方法來擷取命令列資訊剖析，並儲存在字串陣列。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.CommandLine">
          <source>The maximum size of the command-line buffer is not set to a specific number of characters; it varies depending on the Windows operating system that is running on the computer.</source>
          <target state="translated">未設定的命令列的緩衝區大小上限指定的數字字元。Windows 作業系統的電腦上執行而有所不同。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.CommandLine">
          <source>The following example displays its own command line.</source>
          <target state="translated">下列範例會顯示命令列。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.CommandLine">
          <source>for read access to the PATH environment variable.</source>
          <target state="translated">PATH 環境變數的讀取權限。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.CommandLine">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="P:System.Environment.CurrentDirectory">
          <source>Gets or sets the fully qualified path of the current working directory.</source>
          <target state="translated">取得或設定目前工作目錄的完整路徑。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.CurrentDirectory">
          <source>A string containing a directory path.</source>
          <target state="translated">含有目錄路徑的字串。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.CurrentDirectory">
          <source>By definition, if this process starts in the root directory of a local or network drive, the value of this property is the drive name followed by a trailing slash (for example, "C:<ph id="ph1">\\</ph>").</source>
          <target state="translated">根據定義，此程序啟動的本機目錄的根目錄或網路磁碟機中，如果這個屬性的值是後面接著結尾的斜線的磁碟機名稱 (例如，"c:<ph id="ph1">\\</ph>")。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.CurrentDirectory">
          <source>If this process starts in a subdirectory, the value of this property is the drive and subdirectory path, without a trailing slash (for example, "C:\mySubDirectory").</source>
          <target state="translated">如果此程序啟動的子目錄中，這個屬性的值會是磁碟機和子目錄，不含路徑結尾的斜線 (例如，"C:\mySubDirectory")。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.CurrentDirectory">
          <source>The following example demonstrates setting the <ph id="ph1">&lt;xref:System.Environment.CurrentDirectory%2A&gt;</ph> property.</source>
          <target state="translated">下列範例會示範設定<ph id="ph1">&lt;xref:System.Environment.CurrentDirectory%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="P:System.Environment.CurrentDirectory">
          <source>Attempted to set to an empty string ("").</source>
          <target state="translated">嘗試設定為空字串 ("")。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="P:System.Environment.CurrentDirectory">
          <source>Attempted to set to <ph id="ph1">&lt;see langword="null." /&gt;</ph></source>
          <target state="translated">嘗試設定為 <ph id="ph1">&lt;see langword="null." /&gt;</ph></target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="P:System.Environment.CurrentDirectory">
          <source>An I/O error occurred.</source>
          <target state="translated">發生 I/O 錯誤。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="P:System.Environment.CurrentDirectory">
          <source>Attempted to set a local path that cannot be found.</source>
          <target state="translated">嘗試設定找不到的本機路徑。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="P:System.Environment.CurrentDirectory">
          <source>The caller does not have the appropriate permission.</source>
          <target state="translated">呼叫端沒有適當的權限。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.CurrentDirectory">
          <source>for writing to files or directories in a set operation.</source>
          <target state="translated">用於寫入至檔案或設定作業中的目錄。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.CurrentDirectory">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.CurrentDirectory">
          <source>for access to the information in the path itself in a get operation.</source>
          <target state="translated">用於存取路徑本身在 get 作業中的資訊。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.CurrentDirectory">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="P:System.Environment.CurrentManagedThreadId">
          <source>Gets a unique identifier for the current managed thread.</source>
          <target state="translated">取得目前 Managed 執行緒的唯一識別項。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.CurrentManagedThreadId">
          <source>An integer that represents a unique identifier for this managed thread.</source>
          <target state="translated">整數，表示這個 Managed 執行緒的唯一識別項。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Environment.Exit(System.Int32)">
          <source>The exit code to return to the operating system.</source>
          <target state="translated">要傳回作業系統的結束代碼。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Environment.Exit(System.Int32)">
          <source>Use 0 (zero) to indicate that the process completed successfully.</source>
          <target state="translated">使用 0 (零) 表示處理程序已順利完成。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Environment.Exit(System.Int32)">
          <source>Terminates this process and returns an exit code to the operating system.</source>
          <target state="translated">結束這個處理序，並傳回結束代碼給作業系統。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.Exit(System.Int32)">
          <source>For the <ph id="ph1">`exitCode`</ph> parameter, use a non-zero number to indicate an error.</source>
          <target state="translated">如<ph id="ph1">`exitCode`</ph>參數，使用非零值表示錯誤。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.Exit(System.Int32)">
          <source>In your application, you can define your own error codes in an enumeration, and return the appropriate error code based on the scenario.</source>
          <target state="translated">應用程式中，您可以列舉型別，定義您自己的錯誤代碼，並傳回適當的錯誤程式碼為基礎。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.Exit(System.Int32)">
          <source>For example, return a value of 1 to indicate that the required file is not present, and a value of 2 to indicate that the file is in the wrong format.</source>
          <target state="translated">例如，傳回值為 1，指出所需的檔案不存在，，值為 2，表示檔案是格式錯誤。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.Exit(System.Int32)">
          <source>For a list of exit codes used by the Windows operating system, see <bpt id="p1">[</bpt>System Error Codes<ept id="p1">](http://msdn.microsoft.com/library/ms681381.aspx)</ept> in the Windows documentation.</source>
          <target state="translated">如需 Windows 作業系統所使用的結束代碼的清單，請參閱<bpt id="p1">[</bpt>系統錯誤碼<ept id="p1">](http://msdn.microsoft.com/library/ms681381.aspx)</ept>Windows 文件中。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.Exit(System.Int32)">
          <source>Calling the <ph id="ph1">&lt;xref:System.Environment.Exit%2A&gt;</ph> method differs from using your programming language's <ph id="ph2">`return`</ph> statement in the following ways:</source>
          <target state="translated">呼叫<ph id="ph1">&lt;xref:System.Environment.Exit%2A&gt;</ph>方法與使用您的程式語言<ph id="ph2">`return`</ph>陳述式如下：</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.Exit(System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Environment.Exit%2A&gt;</ph> always terminates an application.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Environment.Exit%2A&gt;</ph> 一定會終止應用程式。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.Exit(System.Int32)">
          <source>Using the <ph id="ph1">`return`</ph> statement may terminate an application only if it is used in the application entry point, such as in the <ph id="ph2">`Main`</ph> method.</source>
          <target state="translated">使用<ph id="ph1">`return`</ph>陳述式可能會結束應用程式，只有當它用於在應用程式的進入點，例如<ph id="ph2">`Main`</ph>方法。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.Exit(System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Environment.Exit%2A&gt;</ph> terminates an application immediately, even if other threads are running.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Environment.Exit%2A&gt;</ph> 立即結束應用程式，即使其他執行緒正在執行。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.Exit(System.Int32)">
          <source>If the <ph id="ph1">`return`</ph> statement is called in the application entry point, it causes an application to terminate only after all foreground threads have terminated.</source>
          <target state="translated">如果<ph id="ph1">`return`</ph>呼叫陳述式中的應用程式進入點，它會使應用程式終止所有前景執行緒已經都終止之後，才。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.Exit(System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Environment.Exit%2A&gt;</ph> requires the caller to have permission to call unmanaged code.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Environment.Exit%2A&gt;</ph> 呼叫者必須具備權限呼叫 unmanaged 程式碼。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.Exit(System.Int32)">
          <source>The <ph id="ph1">`return`</ph> statement does not.</source>
          <target state="translated"><ph id="ph1">`return`</ph>陳述式並不會。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.Exit(System.Int32)">
          <source>If <ph id="ph1">&lt;xref:System.Environment.Exit%2A&gt;</ph> is called from a <ph id="ph2">`try`</ph> or <ph id="ph3">`catch`</ph> block, the code in any <ph id="ph4">`finally`</ph> block does not execute.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Environment.Exit%2A&gt;</ph>從呼叫<ph id="ph2">`try`</ph>或<ph id="ph3">`catch`</ph>封鎖，請在任何程式碼<ph id="ph4">`finally`</ph>區塊不會執行。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.Exit(System.Int32)">
          <source>If the <ph id="ph1">`return`</ph> statement is used, the code in the <ph id="ph2">`finally`</ph> block does execute.</source>
          <target state="translated">如果<ph id="ph1">`return`</ph>陳述式使用時中的程式碼<ph id="ph2">`finally`</ph>區塊並執行。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.Exit(System.Int32)">
          <source>If <ph id="ph1">&lt;xref:System.Environment.Exit%2A&gt;</ph> is called when code in a <bpt id="p1">[</bpt>constrained execution region<ept id="p1">](~/docs/framework/performance/constrained-execution-regions.md)</ept> (CER) is running, the CER will not complete execution.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Environment.Exit%2A&gt;</ph>時，會呼叫中的程式碼<bpt id="p1">[</bpt>限制的執行區域<ept id="p1">](~/docs/framework/performance/constrained-execution-regions.md)</ept>(CER) 正在執行，CER 將不會完成執行。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.Exit(System.Int32)">
          <source>If the <ph id="ph1">`return`</ph> statement is used, the CER completes execution.</source>
          <target state="translated">如果<ph id="ph1">`return`</ph>陳述式，則 CER 完成執行。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Environment.Exit(System.Int32)">
          <source>The caller does not have sufficient security permission to perform this function.</source>
          <target state="translated">呼叫端沒有足夠的安全性權限執行這項功能。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.Exit(System.Int32)">
          <source>for the ability to call unmanaged code.</source>
          <target state="translated">提供呼叫 unmanaged 程式碼的能力。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.Exit(System.Int32)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="P:System.Environment.ExitCode">
          <source>Gets or sets the exit code of the process.</source>
          <target state="translated">取得或設定處理程序的結束代碼。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.ExitCode">
          <source>A 32-bit signed integer containing the exit code.</source>
          <target state="translated">含有結束代碼的 32 位元帶正負號的整數 (Signed Integer)。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.ExitCode">
          <source>The default value is 0 (zero), which indicates that the process completed successfully.</source>
          <target state="translated">預設值為 0 (零)，表示處理程序順利完成。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.ExitCode">
          <source>If the <ph id="ph1">`Main`</ph> method returns <ph id="ph2">`void`</ph>, you can use this property to set the exit code that will be returned to the calling environment.</source>
          <target state="translated">如果<ph id="ph1">`Main`</ph>方法會傳回<ph id="ph2">`void`</ph>，您可以使用這個屬性來設定將會傳回給呼叫的環境的結束代碼。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.ExitCode">
          <source>If <ph id="ph1">`Main`</ph> does not return <ph id="ph2">`void`</ph>, this property is ignored.</source>
          <target state="translated">如果<ph id="ph1">`Main`</ph>不會傳回<ph id="ph2">`void`</ph>，會忽略這個屬性。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.ExitCode">
          <source>The initial value of this property is zero.</source>
          <target state="translated">這個屬性的初始值為零。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.ExitCode">
          <source>The <ph id="ph1">&lt;xref:System.Environment.ExitCode%2A&gt;</ph> property is a signed 32-bit integer.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Environment.ExitCode%2A&gt;</ph>屬性是帶正負號的 32 位元整數。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.ExitCode">
          <source>To prevent the property from returning a negative exit code, you should not use values greater than or equal to 0x80000000.</source>
          <target state="translated">若要防止屬性傳回非負數的結束代碼，您不應該使用值大於或等於 0x80000000。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.ExitCode">
          <source>Use a non-zero number to indicate an error.</source>
          <target state="translated">使用非零值表示錯誤。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.ExitCode">
          <source>In your application, you can define your own error codes in an enumeration, and return the appropriate error code based on the scenario.</source>
          <target state="translated">應用程式中，您可以列舉型別，定義您自己的錯誤代碼，並傳回適當的錯誤程式碼為基礎。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.ExitCode">
          <source>For example, return a value of 1 to indicate that the required file is not present and a value of 2 to indicate that the file is in the wrong format.</source>
          <target state="translated">例如，傳回值為 1，指出所需的檔案不存在，值為 2，表示檔案是格式錯誤。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.ExitCode">
          <source>For a list of exit codes used by the Windows operating system, see <bpt id="p1">[</bpt>System Error Codes<ept id="p1">](http://msdn.microsoft.com/library/ms681381\(v=vs.85\))</ept> in the Windows documentation.</source>
          <target state="translated">如需 Windows 作業系統所使用的結束代碼的清單，請參閱<bpt id="p1">[</bpt>系統錯誤碼<ept id="p1">](http://msdn.microsoft.com/library/ms681381\(v=vs.85\))</ept>Windows 文件中。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.ExitCode">
          <source>The following is a simple app named Double.exe that doubles an integer value passed to it as a command-line argument.</source>
          <target state="translated">以下是名為加倍整數值做為命令列引數傳遞給它的 Double.exe 簡單的應用程式。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.ExitCode">
          <source>The value assigns error codes to the <ph id="ph1">&lt;xref:System.Environment.ExitCode%2A&gt;</ph> property to indicate error conditions.</source>
          <target state="translated">值會指派至錯誤代碼<ph id="ph1">&lt;xref:System.Environment.ExitCode%2A&gt;</ph>屬性來指出錯誤情況。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.ExitCode">
          <source>Note that you must add a reference to the System.Numerics.dll assembly to successfully compile the example.</source>
          <target state="translated">請注意，您必須新增若要成功編譯範例 System.Numerics.dll 組件的參考。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.ExitCode">
          <source>The example can then be invoked from a batch file such as the following, which makes its error codes accessible by using the <ph id="ph1">`ERRORLEVEL`</ph> command.</source>
          <target state="translated">此範例可以再叫用批次檔中，如下所示，可藉由使用的可存取其錯誤碼<ph id="ph1">`ERRORLEVEL`</ph>命令。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.ExitCode">
          <source>The following shows some sample output produced by invoking the batch file.</source>
          <target state="translated">以下顯示某些產生叫用的批次檔的範例輸出。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.ExitCode">
          <source>Note that code for Double.exe is identical in function to the following example, except that the former defines an entry point named <ph id="ph1">`Main`</ph> that has no return value, whereas this example defines an entry point named <ph id="ph2">`Main`</ph> that returns an integer.</source>
          <target state="translated">Double.exe 是與下列範例中，函式相同，不同之處在於前者會定義名為進入點，請注意該程式碼<ph id="ph1">`Main`</ph>，具有沒有傳回值，而這個範例會定義名為的進入點<ph id="ph2">`Main`</ph>，傳回一個整數。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Environment.ExpandEnvironmentVariables(System.String)">
          <source>A string containing the names of zero or more environment variables.</source>
          <target state="translated">含有零或多個環境變數名稱的字串。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Environment.ExpandEnvironmentVariables(System.String)">
          <source>Each environment variable is quoted with the percent sign character (%).</source>
          <target state="translated">每個環境變數會以百分比符號字元 (%) 括住。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Environment.ExpandEnvironmentVariables(System.String)">
          <source>Replaces the name of each environment variable embedded in the specified string with the string equivalent of the value of the variable, then returns the resulting string.</source>
          <target state="translated">用變數值的等值字串來取代內嵌於指定字串內的每個環境變數名稱，然後傳回結果字串。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Environment.ExpandEnvironmentVariables(System.String)">
          <source>A string with each environment variable replaced by its value.</source>
          <target state="translated">由字串值取代每個環境變數的字串。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.ExpandEnvironmentVariables(System.String)">
          <source>COM interop is used to retrieve the environment variables from the operating system.</source>
          <target state="translated">COM interop 用來擷取作業系統的環境變數。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.ExpandEnvironmentVariables(System.String)">
          <source>If the environment variables cannot be retrieved due to a COM error, the HRESULT that explains the cause of the failure is used to generate one of several possible exceptions; that is, the exception depends on the HRESULT.</source>
          <target state="translated">如果無法擷取環境變數，因為 COM 錯誤，說明失敗的原因的 HRESULT 用以產生其中幾個可能的例外狀況。也就是說，例外狀況的 HRESULT 而定。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.ExpandEnvironmentVariables(System.String)">
          <source>For more information about how the HRESULT is processed, see the Remarks section of the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">如需有關 HRESULT 的處理方式的詳細資訊，請參閱的 &lt; 備註 &gt; 一節<ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.ExpandEnvironmentVariables(System.String)">
          <source>Replacement only occurs for environment variables that are set.</source>
          <target state="translated">設定環境變數只會取代發生。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.ExpandEnvironmentVariables(System.String)">
          <source>For example, suppose <ph id="ph1">`name`</ph> is "MyENV = %MyENV%".</source>
          <target state="translated">例如，假設<ph id="ph1">`name`</ph>是"MyENV = %myenv%"。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.ExpandEnvironmentVariables(System.String)">
          <source>If the environment variable, MyENV, is set to 42, this method returns "MyENV = 42".</source>
          <target state="translated">如果設定的環境變數，MyENV，是為 42，則這個方法會傳回"MyENV = 42"。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.ExpandEnvironmentVariables(System.String)">
          <source>If MyENV is not set, no change occurs; this method returns "MyENV = %MyENV%".</source>
          <target state="translated">如果未設定 MyENV，不會發生變更。這個方法會傳回"MyENV = %myenv%"。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.ExpandEnvironmentVariables(System.String)">
          <source>The size of the return value is limited to 32K.</source>
          <target state="translated">傳回值的大小僅限於 32k。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.ExpandEnvironmentVariables(System.String)">
          <source>The following example shows how to obtain the system drive and system root variables.</source>
          <target state="translated">下列範例會示範如何取得系統磁碟機和系統根變數。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Environment.ExpandEnvironmentVariables(System.String)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.ExpandEnvironmentVariables(System.String)">
          <source>for the ability to access the environment variables in <ph id="ph1">&lt;paramref name="name" /&gt;</ph>.</source>
          <target state="translated">若要存取的環境變數中的功能<ph id="ph1">&lt;paramref name="name" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.ExpandEnvironmentVariables(System.String)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="T:System.Environment">
          <source>Immediately terminates a process after writing a message to the Windows Application event log, and then includes the message and optional exception information in error reporting to Microsoft.</source>
          <target state="translated">將訊息寫入 Windows 應用程式事件記錄檔後立即終止處理程序，然後在向 Microsoft 回報錯誤時，包含該訊息並選擇性包含例外狀況資訊。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Environment.FailFast(System.String)">
          <source>A message that explains why the process was terminated, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if no explanation is provided.</source>
          <target state="translated">解釋處理程序結束原因的訊息；如果未提供任何解釋，則為 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Environment.FailFast(System.String)">
          <source>Immediately terminates a process after writing a message to the Windows Application event log, and then includes the message in error reporting to Microsoft.</source>
          <target state="translated">將訊息寫入 Windows 應用程式事件記錄檔後立即終止處理程序，然後在向 Microsoft 回報錯誤時包含該訊息。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.FailFast(System.String)">
          <source>This method terminates a process without running any active <ph id="ph1">`try`</ph><ph id="ph2">/</ph><ph id="ph3">`finally`</ph> blocks or finalizers.</source>
          <target state="translated">這個方法會結束而不執行任何使用中的處理程序<ph id="ph1">`try`</ph> <ph id="ph2">/</ph> <ph id="ph3">`finally`</ph>區塊或完成項。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.FailFast(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Environment.FailFast%2A&gt;</ph> method writes the <ph id="ph2">`message`</ph> string to the Windows Application event log, creates a dump of your application, and then terminates the current process.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Environment.FailFast%2A&gt;</ph>方法寫入<ph id="ph2">`message`</ph>Windows 應用程式事件記錄檔的字串會建立您的應用程式的傾印，然後會終止目前的處理序。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.FailFast(System.String)">
          <source>The <ph id="ph1">`message`</ph> string is also included in error reporting to Microsoft.</source>
          <target state="translated"><ph id="ph1">`message`</ph>字串也會包含在向 Microsoft 回報錯誤。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.FailFast(System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Environment.FailFast%2A&gt;</ph> method instead of the <ph id="ph2">&lt;xref:System.Environment.Exit%2A&gt;</ph> method to terminate your application if the state of your application is damaged beyond repair, and executing your application's <ph id="ph3">`try`</ph><ph id="ph4">/</ph><ph id="ph5">`finally`</ph> blocks and finalizers will corrupt program resources.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Environment.FailFast%2A&gt;</ph>方法，而非<ph id="ph2">&lt;xref:System.Environment.Exit%2A&gt;</ph>方法，以結束您的應用程式，如果您的應用程式的狀態已損毀修復，以及執行您的應用程式<ph id="ph3">`try`</ph> <ph id="ph4">/</ph> <ph id="ph5">`finally`</ph>區塊與完成項可能會損毀程式資源。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.FailFast(System.String)">
          <source>Information is reported to Microsoft by using Windows Error Reporting.</source>
          <target state="translated">使用 Windows 錯誤報告給 Microsoft 報告資訊。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.FailFast(System.String)">
          <source>For more information, see <bpt id="p1">[</bpt>Windows Error Reporting: Getting Started<ept id="p1">](http://msdn.microsoft.com/library/windows/hardware/dn641144.aspx)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>Windows 錯誤報告： 開始使用<ept id="p1">](http://msdn.microsoft.com/library/windows/hardware/dn641144.aspx)</ept>。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.FailFast(System.String)">
          <source>The following example writes a log entry to the Windows Application event log and terminates the current process.</source>
          <target state="translated">下列範例會寫入 Windows 應用程式事件記錄檔中的記錄項目，並終止目前的處理程序。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.FailFast(System.String)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">需要完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.FailFast(System.String)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">這個成員無法供部分信任或安全性透明程式碼。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Environment.FailFast(System.String,System.Exception)">
          <source>A message that explains why the process was terminated, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if no explanation is provided.</source>
          <target state="translated">解釋處理程序結束原因的訊息；如果未提供任何解釋，則為 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Environment.FailFast(System.String,System.Exception)">
          <source>An exception that represents the error that caused the termination.</source>
          <target state="translated">表示造成終止之錯誤的例外狀況。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Environment.FailFast(System.String,System.Exception)">
          <source>This is typically the exception in a <ph id="ph1">&lt;see langword="catch" /&gt;</ph> block.</source>
          <target state="translated">這通常是 <ph id="ph1">&lt;see langword="catch" /&gt;</ph> 區塊中的例外狀況。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Environment.FailFast(System.String,System.Exception)">
          <source>Immediately terminates a process after writing a message to the Windows Application event log, and then includes the message and exception information in error reporting to Microsoft.</source>
          <target state="translated">將訊息寫入 Windows 應用程式事件記錄檔後立即終止處理程序，然後在向 Microsoft 回報錯誤時，包含該訊息和例外狀況資訊。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.FailFast(System.String,System.Exception)">
          <source>This method terminates the process without running any active <ph id="ph1">`try`</ph><ph id="ph2">/</ph><ph id="ph3">`finally`</ph> blocks or finalizers.</source>
          <target state="translated">這個方法會結束而不執行任何使用中的程序<ph id="ph1">`try`</ph> <ph id="ph2">/</ph> <ph id="ph3">`finally`</ph>區塊或完成項。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.FailFast(System.String,System.Exception)">
          <source>The <ph id="ph1">&lt;xref:System.Environment.FailFast%2A&gt;</ph> method writes the <ph id="ph2">`message`</ph> string to the Windows Application event log, creates a dump of your application, and then terminates the current process.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Environment.FailFast%2A&gt;</ph>方法寫入<ph id="ph2">`message`</ph>Windows 應用程式事件記錄檔的字串會建立您的應用程式的傾印，然後會終止目前的處理序。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.FailFast(System.String,System.Exception)">
          <source>Information is reported to Microsoft by using Windows Error Reporting.</source>
          <target state="translated">使用 Windows 錯誤報告給 Microsoft 報告資訊。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.FailFast(System.String,System.Exception)">
          <source>For more information, see <bpt id="p1">[</bpt>Windows Error Reporting: Getting Started<ept id="p1">](http://msdn.microsoft.com/library/windows/hardware/dn641144.aspx)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>Windows 錯誤報告： 開始使用<ept id="p1">](http://msdn.microsoft.com/library/windows/hardware/dn641144.aspx)</ept>。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.FailFast(System.String,System.Exception)">
          <source>Error reporting to Microsoft includes <ph id="ph1">`message`</ph> and <ph id="ph2">`exception`</ph> information, which provides details used to classify the error.</source>
          <target state="translated">向 Microsoft 回報錯誤包括<ph id="ph1">`message`</ph>和<ph id="ph2">`exception`</ph>提供用來分類錯誤的詳細資料的資訊。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.FailFast(System.String,System.Exception)">
          <source>Although <ph id="ph1">`exception`</ph> is not handled because the process is terminated, the contextual information that raised the exception is still obtained.</source>
          <target state="translated">雖然<ph id="ph1">`exception`</ph>是不會處理因為處理序終止，引發例外狀況的內容資訊仍取得。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.FailFast(System.String,System.Exception)">
          <source>If <ph id="ph1">`exception`</ph> is <ph id="ph2">`null`</ph>, or if <ph id="ph3">`exception`</ph> is not thrown, this method operates the same as the <ph id="ph4">&lt;xref:System.Environment.FailFast%28System.String%29&gt;</ph> method overload.</source>
          <target state="translated">如果<ph id="ph1">`exception`</ph>是<ph id="ph2">`null`</ph>，或如果<ph id="ph3">`exception`</ph>是此方法不會擲回操作與相同<ph id="ph4">&lt;xref:System.Environment.FailFast%28System.String%29&gt;</ph>方法多載。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.FailFast(System.String,System.Exception)">
          <source>Use the <ph id="ph1">&lt;xref:System.Environment.FailFast%2A&gt;</ph> method instead of the <ph id="ph2">&lt;xref:System.Environment.Exit%2A&gt;</ph> method to terminate your application if the state of your application is damaged beyond repair, and executing your application's <ph id="ph3">`try`</ph><ph id="ph4">/</ph><ph id="ph5">`finally`</ph> blocks and finalizers will corrupt program resources.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Environment.FailFast%2A&gt;</ph>方法，而非<ph id="ph2">&lt;xref:System.Environment.Exit%2A&gt;</ph>方法，以結束您的應用程式，如果您的應用程式的狀態已損毀修復，以及執行您的應用程式<ph id="ph3">`try`</ph> <ph id="ph4">/</ph> <ph id="ph5">`finally`</ph>區塊與完成項可能會損毀程式資源。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.FailFast(System.String,System.Exception)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">需要完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.FailFast(System.String,System.Exception)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">這個成員無法供部分信任或安全性透明程式碼。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Environment.GetCommandLineArgs">
          <source>Returns a string array containing the command-line arguments for the current process.</source>
          <target state="translated">傳回字串陣列，包含目前處理程序的命令列引數。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Environment.GetCommandLineArgs">
          <source>An array of string where each element contains a command-line argument.</source>
          <target state="translated">字串的陣列，其中的每個元素都包含命令列引數。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Environment.GetCommandLineArgs">
          <source>The first element is the executable file name, and the following zero or more elements contain the remaining command-line arguments.</source>
          <target state="translated">第一個元素是可執行檔名稱，後面的零或多個元素包含其餘的命令列引數。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetCommandLineArgs">
          <source>The first element in the array contains the file name of the executing program.</source>
          <target state="translated">陣列中的第一個項目包含了執行中程式的檔案名稱。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetCommandLineArgs">
          <source>If the file name is not available, the first element is equal to <ph id="ph1">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">如果無法使用的檔案名稱，第一個項目是否等於<ph id="ph1">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetCommandLineArgs">
          <source>The remaining elements contain any additional tokens entered on the command line.</source>
          <target state="translated">其餘的項目包含命令列上輸入任何其他語彙基元。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetCommandLineArgs">
          <source>The program file name can, but is not required to, include path information.</source>
          <target state="translated">程式檔案名稱，但不是需要，包含路徑資訊。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetCommandLineArgs">
          <source>Command line arguments are delimited by spaces.</source>
          <target state="translated">命令列引數是以空格分隔。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetCommandLineArgs">
          <source>You can use double quotation marks (") to include spaces within an argument.</source>
          <target state="translated">您可以使用雙引號 （"） 將空格包含在引數。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetCommandLineArgs">
          <source>The single quotation mark ('), however, does not provide this functionality.</source>
          <target state="translated">單引號 （'），不過，不提供此功能。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetCommandLineArgs">
          <source>If a double quotation mark follows two or an even number of backslashes, each proceeding backslash pair is replaced with one backslash and the double quotation mark is removed.</source>
          <target state="translated">如果雙引號後面兩個或反斜線為偶數，每個進行反斜線組會取代一個反斜線，並移除雙引號。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetCommandLineArgs">
          <source>If a double quotation mark follows an odd number of backslashes, including just one, each preceding pair is replaced with one backslash and the remaining backslash is removed; however, in this case the double quotation mark is not removed.</source>
          <target state="translated">如果雙引號後面反斜線，包括只有一個為奇數每一對取代一個反斜線，並移除剩餘的反斜線。不過，在此情況下雙引號不會移除。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetCommandLineArgs">
          <source>The following table shows how command line arguments can be delimited, and assumes <ph id="ph1">`MyApp`</ph> as the current executing application.</source>
          <target state="translated">下表顯示如何命令列引數可以是分隔，並假設<ph id="ph1">`MyApp`</ph>為目前執行中應用程式。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetCommandLineArgs">
          <source>Input at the command line</source>
          <target state="translated">在命令列輸入</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetCommandLineArgs">
          <source>Resulting command line arguments</source>
          <target state="translated">產生的命令列引數</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetCommandLineArgs">
          <source>To obtain the command line as a single string, use the <ph id="ph1">&lt;xref:System.Environment.CommandLine%2A&gt;</ph> property.</source>
          <target state="translated">若要取得命令列以單一字串，請使用<ph id="ph1">&lt;xref:System.Environment.CommandLine%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetCommandLineArgs">
          <source>The following example displays the application's command line arguments.</source>
          <target state="translated">下列範例會顯示應用程式的命令列引數。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Environment.GetCommandLineArgs">
          <source>The system does not support command-line arguments.</source>
          <target state="translated">系統不支援命令列引數。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetCommandLineArgs">
          <source>for read access to the PATH environment variable.</source>
          <target state="translated">PATH 環境變數的讀取權限。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetCommandLineArgs">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="T:System.Environment">
          <source>Retrieves the value of an environment variable.</source>
          <target state="translated">擷取環境變數的值。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Environment.GetEnvironmentVariable(System.String)">
          <source>The name of the environment variable.</source>
          <target state="translated">環境變數的名稱。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Environment.GetEnvironmentVariable(System.String)">
          <source>Retrieves the value of an environment variable from the current process.</source>
          <target state="translated">從目前的處理程序中擷取環境變數的值。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Environment.GetEnvironmentVariable(System.String)">
          <source>The value of the environment variable specified by <ph id="ph1">&lt;paramref name="variable" /&gt;</ph>, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if the environment variable is not found.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="variable" /&gt;</ph> 指定的環境變數的值；如果找不到環境變數，則為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetEnvironmentVariable(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Environment.GetEnvironmentVariable%28System.String%29&gt;</ph> method retrieves an environment variable from the environment block of the current process only.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Environment.GetEnvironmentVariable%28System.String%29&gt;</ph>方法會從目前的處理序的環境區塊來擷取環境變數。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetEnvironmentVariable(System.String)">
          <source>It is equivalent to calling the <ph id="ph1">&lt;xref:System.Environment.GetEnvironmentVariable%28System.String%2CSystem.EnvironmentVariableTarget%29&gt;</ph> method with a <ph id="ph2">`target`</ph> value of <ph id="ph3">&lt;xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">它相當於呼叫<ph id="ph1">&lt;xref:System.Environment.GetEnvironmentVariable%28System.String%2CSystem.EnvironmentVariableTarget%29&gt;</ph>方法<ph id="ph2">`target`</ph>值<ph id="ph3">&lt;xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetEnvironmentVariable(System.String)">
          <source>The environment block of the current process includes the following environment variables:</source>
          <target state="translated">目前的處理序的環境區塊包含下列環境變數：</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetEnvironmentVariable(System.String)">
          <source>All per-machine environment variables that are defined at the time the process is created, along with their values.</source>
          <target state="translated">所有個別電腦會在建立程序，以及它們的值所定義的環境變數。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetEnvironmentVariable(System.String)">
          <source>All per-user environment variables that are defined at the time the process is created, along with their values.</source>
          <target state="translated">所有當時所定義的每個使用者環境變數建立處理序，以及它們的值。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetEnvironmentVariable(System.String)">
          <source>Any variables added to the process block while the process is running by calling either the <ph id="ph1">&lt;xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%29&gt;</ph> method or the <ph id="ph2">&lt;xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%2CSystem.EnvironmentVariableTarget%29&gt;</ph> method with a <ph id="ph3">`target`</ph> value of <ph id="ph4">&lt;xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">執行此程序時，呼叫的程序區塊加入的任何變數<ph id="ph1">&lt;xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%29&gt;</ph>方法或<ph id="ph2">&lt;xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%2CSystem.EnvironmentVariableTarget%29&gt;</ph>方法<ph id="ph3">`target`</ph>值<ph id="ph4">&lt;xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetEnvironmentVariable(System.String)">
          <source>If environment variables are created after the process has started, you can use this method to retrieve only those variables that were created by calling the <ph id="ph1">&lt;xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%29&gt;</ph> method or the <ph id="ph2">&lt;xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%2CSystem.EnvironmentVariableTarget%29&gt;</ph> method with a <ph id="ph3">`target`</ph> value of .<ph id="ph4">&lt;xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">如果環境變數會建立處理程序啟動之後，您可以使用這個方法來擷取所建立的呼叫這些變數<ph id="ph1">&lt;xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%29&gt;</ph>方法或<ph id="ph2">&lt;xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%2CSystem.EnvironmentVariableTarget%29&gt;</ph>方法<ph id="ph3">`target`</ph>的值。<ph id="ph4">&lt;xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetEnvironmentVariable(System.String)">
          <source>To retrieve all environment variables along with their values, call the <ph id="ph1">&lt;xref:System.Environment.GetEnvironmentVariables%2A&gt;</ph> method.</source>
          <target state="translated">若要擷取所有環境變數與其值，呼叫<ph id="ph1">&lt;xref:System.Environment.GetEnvironmentVariables%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetEnvironmentVariable(System.String)">
          <source>Environment variable names are not case-sensitive.</source>
          <target state="translated">環境變數名稱不區分大小寫。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetEnvironmentVariable(System.String)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Environment.GetEnvironmentVariable%2A&gt;</ph> method to retrieve the <ph id="ph2">`windir`</ph> environment variable, which contains the path of the Windows directory.</source>
          <target state="translated">下列範例會使用<ph id="ph1">&lt;xref:System.Environment.GetEnvironmentVariable%2A&gt;</ph>方法來擷取<ph id="ph2">`windir`</ph>環境變數，其中包含 Windows 目錄的路徑。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetEnvironmentVariable(System.String)">
          <source>The following example attempts to retrieve the value of an environment variable named <ph id="ph1">`Test1`</ph> from the process environment block.</source>
          <target state="translated">下列範例會嘗試擷取名為環境變數的值<ph id="ph1">`Test1`</ph>從處理序的環境區塊。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetEnvironmentVariable(System.String)">
          <source>If the variable doesn't exist, the example creates its and retrieves its value.</source>
          <target state="translated">如果變數不存在，此範例會建立其與擷取其值。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetEnvironmentVariable(System.String)">
          <source>The example displays the value of the variable.</source>
          <target state="translated">此範例會顯示變數的值。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetEnvironmentVariable(System.String)">
          <source>If the example created the variable, it also calls the <ph id="ph1">&lt;xref:System.Environment.GetEnvironmentVariables%28System.EnvironmentVariableTarget%29&gt;</ph> method with each member of the <ph id="ph2">&lt;xref:System.EnvironmentVariableTarget&gt;</ph> enumeration to establish that the variable can be retrieved only from the current process environment block.</source>
          <target state="translated">如果範例已建立變數，它也會呼叫<ph id="ph1">&lt;xref:System.Environment.GetEnvironmentVariables%28System.EnvironmentVariableTarget%29&gt;</ph>方法的每個成員<ph id="ph2">&lt;xref:System.EnvironmentVariableTarget&gt;</ph>列舉型別來建立可以擷取只會從目前的處理程序的環境區塊的變數。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetEnvironmentVariable(System.String)">
          <source>Finally, if the example created the variable, it deletes it.</source>
          <target state="translated">最後，如果範例已建立變數，就會刪除它。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Environment.GetEnvironmentVariable(System.String)">
          <source><ph id="ph1">&lt;paramref name="variable" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="variable" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Environment.GetEnvironmentVariable(System.String)">
          <source>The caller does not have the required permission to perform this operation.</source>
          <target state="translated">呼叫端沒有執行這項作業的必要權限。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetEnvironmentVariable(System.String)">
          <source>for the ability to read the value of <ph id="ph1">&lt;paramref name="variable" /&gt;</ph>.</source>
          <target state="translated">能夠讀取的值<ph id="ph1">&lt;paramref name="variable" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetEnvironmentVariable(System.String)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Environment.GetEnvironmentVariable(System.String,System.EnvironmentVariableTarget)">
          <source>The name of an environment variable.</source>
          <target state="translated">環境變數的名稱。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Environment.GetEnvironmentVariable(System.String,System.EnvironmentVariableTarget)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.EnvironmentVariableTarget" /&gt;</ph> values.</source>
          <target state="translated">其中一個 <ph id="ph1">&lt;see cref="T:System.EnvironmentVariableTarget" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Environment.GetEnvironmentVariable(System.String,System.EnvironmentVariableTarget)">
          <source>Retrieves the value of an environment variable from the current process or from the Windows operating system registry key for the current user or local machine.</source>
          <target state="translated">從目前的處理程序或是目前使用者或本機電腦的 Windows 作業系統登錄機碼中，擷取環境變數的值。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Environment.GetEnvironmentVariable(System.String,System.EnvironmentVariableTarget)">
          <source>The value of the environment variable specified by the <ph id="ph1">&lt;paramref name="variable" /&gt;</ph> and <ph id="ph2">&lt;paramref name="target" /&gt;</ph> parameters, or <ph id="ph3">&lt;see langword="null" /&gt;</ph> if the environment variable is not found.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="variable" /&gt;</ph> 和 <ph id="ph2">&lt;paramref name="target" /&gt;</ph> 參數指定之環境變數的值；如果找不到環境變數，則為 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetEnvironmentVariable(System.String,System.EnvironmentVariableTarget)">
          <source>The <ph id="ph1">`target`</ph> parameter specifies whether the environment variable is retrieved from the current process or from the Windows operating system registry key for the current user or local machine.</source>
          <target state="translated"><ph id="ph1">`target`</ph>參數會指定是否要在目前的處理序或從目前的使用者或本機電腦的 Windows 作業系統登錄機碼，擷取環境變數。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetEnvironmentVariable(System.String,System.EnvironmentVariableTarget)">
          <source>All per-user and per-machine environment variables are automatically copied into the environment block of the current process.</source>
          <target state="translated">所有的個別使用者和每台機器的環境變數會自動複製到目前的處理序的環境區塊。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetEnvironmentVariable(System.String,System.EnvironmentVariableTarget)">
          <source>However, environment variables added only to the environment block of the current process  persist only for the duration of the process.</source>
          <target state="translated">不過，環境變數只能加入至目前的處理序的環境區塊保存程序的期間。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetEnvironmentVariable(System.String,System.EnvironmentVariableTarget)">
          <source>To retrieve all environment variables along with their values, call the <ph id="ph1">&lt;xref:System.Environment.GetEnvironmentVariables%2A&gt;</ph> method.</source>
          <target state="translated">若要擷取所有環境變數與其值，呼叫<ph id="ph1">&lt;xref:System.Environment.GetEnvironmentVariables%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetEnvironmentVariable(System.String,System.EnvironmentVariableTarget)">
          <source>Environment variable names are not case-sensitive.</source>
          <target state="translated">環境變數名稱不區分大小寫。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetEnvironmentVariable(System.String,System.EnvironmentVariableTarget)">
          <source>The following example creates environment variables for the Process, User, and Machine targets, checks whether the operating system registry contains the User and Machine environment variables, then deletes the environment variables.</source>
          <target state="translated">下列範例會建立處理程序、 使用者和電腦目標的環境變數，會檢查作業系統登錄是否包含使用者和電腦的環境變數，然後刪除環境變數。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Environment.GetEnvironmentVariable(System.String,System.EnvironmentVariableTarget)">
          <source><ph id="ph1">&lt;paramref name="variable" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="variable" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Environment.GetEnvironmentVariable(System.String,System.EnvironmentVariableTarget)">
          <source><ph id="ph1">&lt;paramref name="target" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.EnvironmentVariableTarget" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="target" /&gt;</ph> 不是有效的 <ph id="ph2">&lt;see cref="T:System.EnvironmentVariableTarget" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Environment.GetEnvironmentVariable(System.String,System.EnvironmentVariableTarget)">
          <source>The caller does not have the required permission to perform this operation.</source>
          <target state="translated">呼叫端沒有執行這項作業的必要權限。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetEnvironmentVariable(System.String,System.EnvironmentVariableTarget)">
          <source>for the ability to read the value of <ph id="ph1">&lt;paramref name="variable" /&gt;</ph> if <ph id="ph2">&lt;paramref name="target" /&gt;</ph> is <ph id="ph3">&lt;see cref="F:System.EnvironmentVariableTarget.Process" /&gt;</ph> (Associated enumeration: <ph id="ph4">&lt;see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /&gt;</ph>),</source>
          <target state="translated">能夠讀取的值<ph id="ph1">&lt;paramref name="variable" /&gt;</ph>如果<ph id="ph2">&lt;paramref name="target" /&gt;</ph>是<ph id="ph3">&lt;see cref="F:System.EnvironmentVariableTarget.Process" /&gt;</ph>(相關聯的列舉型別： <ph id="ph4">&lt;see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /&gt;</ph>)，</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetEnvironmentVariable(System.String,System.EnvironmentVariableTarget)">
          <source>or</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetEnvironmentVariable(System.String,System.EnvironmentVariableTarget)">
          <source>for full access to environment variables if <ph id="ph1">&lt;paramref name="target" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.EnvironmentVariableTarget.User" /&gt;</ph> or <ph id="ph3">&lt;see cref="F:System.EnvironmentVariableTarget.Machine" /&gt;</ph> (Associated enumeration: <ph id="ph4">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph>).</source>
          <target state="translated">環境變數的完整存取權如果<ph id="ph1">&lt;paramref name="target" /&gt;</ph>是<ph id="ph2">&lt;see cref="F:System.EnvironmentVariableTarget.User" /&gt;</ph>或<ph id="ph3">&lt;see cref="F:System.EnvironmentVariableTarget.Machine" /&gt;</ph>(相關聯的列舉型別： <ph id="ph4">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="T:System.Environment">
          <source>Retrieves all environment variable names and their values.</source>
          <target state="translated">擷取所有環境變數名稱及它們的值。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Environment.GetEnvironmentVariables">
          <source>Retrieves all environment variable names and their values from the current process.</source>
          <target state="translated">從目前的處理程序中擷取所有環境變數名稱及它們的值。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Environment.GetEnvironmentVariables">
          <source>A dictionary that contains all environment variable names and their values; otherwise, an empty dictionary if no environment variables are found.</source>
          <target state="translated">包含所有環境變數名稱及其值的字典；如果找不到環境變數，則為空的字典。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetEnvironmentVariables">
          <source>The names and values for the environment variables are stored as key-value pairs in the returned <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph>.</source>
          <target state="translated">名稱和環境變數的值會儲存在傳回的索引鍵-值組為<ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetEnvironmentVariables">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Environment.GetEnvironmentVariables%2A&gt;</ph> method.</source>
          <target state="translated">下列範例會示範<ph id="ph1">&lt;xref:System.Environment.GetEnvironmentVariables%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Environment.GetEnvironmentVariables">
          <source>The caller does not have the required permission to perform this operation.</source>
          <target state="translated">呼叫端沒有執行這項作業的必要權限。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Environment.GetEnvironmentVariables">
          <source>The buffer is out of memory.</source>
          <target state="translated">緩衝區記憶體不足。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetEnvironmentVariables">
          <source>for the ability to read the names and values of environment variables.</source>
          <target state="translated">要讀取的名稱和環境變數值的功能。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetEnvironmentVariables">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Environment.GetEnvironmentVariables(System.EnvironmentVariableTarget)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.EnvironmentVariableTarget" /&gt;</ph> values.</source>
          <target state="translated">其中一個 <ph id="ph1">&lt;see cref="T:System.EnvironmentVariableTarget" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Environment.GetEnvironmentVariables(System.EnvironmentVariableTarget)">
          <source>Retrieves all environment variable names and their values from the current process, or from the Windows operating system registry key for the current user or local machine.</source>
          <target state="translated">從目前的處理程序或是目前使用者或本機電腦的 Windows 作業系統登錄機碼中，擷取所有環境變數名稱和它們的值。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Environment.GetEnvironmentVariables(System.EnvironmentVariableTarget)">
          <source>A dictionary that contains all environment variable names and their values from the source specified by the <ph id="ph1">&lt;paramref name="target" /&gt;</ph> parameter; otherwise, an empty dictionary if no environment variables are found.</source>
          <target state="translated">包含 <ph id="ph1">&lt;paramref name="target" /&gt;</ph> 參數指定之來源中所有環境變數名稱及其值的字典；如果找不到環境變數，則為空的字典。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetEnvironmentVariables(System.EnvironmentVariableTarget)">
          <source>The <ph id="ph1">`target`</ph> parameter specifies whether the source is the current process, the registry key for the current user, or the registry key for the local machine.</source>
          <target state="translated"><ph id="ph1">`target`</ph>參數會指定來源是否在目前處理序、 目前使用者的登錄機碼或本機電腦的登錄機碼。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetEnvironmentVariables(System.EnvironmentVariableTarget)">
          <source>The names and values of the environment variables are stored as key/value pairs in the returned <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> object.</source>
          <target state="translated">名稱和環境變數的值會儲存在傳回的索引鍵/值組為<ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetEnvironmentVariables(System.EnvironmentVariableTarget)">
          <source>The following example creates environment variables for the Process, User, and Machine targets, checks whether the operating system registry contains the User and Machine environment variables, then deletes the environment variables.</source>
          <target state="translated">下列範例會建立處理程序、 使用者和電腦目標的環境變數，會檢查作業系統登錄是否包含使用者和電腦的環境變數，然後刪除環境變數。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Environment.GetEnvironmentVariables(System.EnvironmentVariableTarget)">
          <source>The caller does not have the required permission to perform this operation for the specified value of <ph id="ph1">&lt;paramref name="target" /&gt;</ph>.</source>
          <target state="translated">對於 <ph id="ph1">&lt;paramref name="target" /&gt;</ph> 的指定之值，呼叫端並不具有執行這個作業的必要使用權限。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Environment.GetEnvironmentVariables(System.EnvironmentVariableTarget)">
          <source><ph id="ph1">&lt;paramref name="target" /&gt;</ph> contains an illegal value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="target" /&gt;</ph> 包含不合法的值。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetEnvironmentVariables(System.EnvironmentVariableTarget)">
          <source>for the ability to read the names and values of environment variables if <ph id="ph1">&lt;paramref name="target" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.EnvironmentVariableTarget.Process" /&gt;</ph> (Associated enumeration: <ph id="ph3">&lt;see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /&gt;</ph>),</source>
          <target state="translated">可將讀取的名稱和環境變數的值，如果功能<ph id="ph1">&lt;paramref name="target" /&gt;</ph>是<ph id="ph2">&lt;see cref="F:System.EnvironmentVariableTarget.Process" /&gt;</ph>(相關聯的列舉型別： <ph id="ph3">&lt;see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /&gt;</ph>)，</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetEnvironmentVariables(System.EnvironmentVariableTarget)">
          <source>or</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetEnvironmentVariables(System.EnvironmentVariableTarget)">
          <source>for full access to environment variables if <ph id="ph1">&lt;paramref name="target" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.EnvironmentVariableTarget.User" /&gt;</ph> or <ph id="ph3">&lt;see cref="F:System.EnvironmentVariableTarget.Machine" /&gt;</ph> (Associated enumeration: <ph id="ph4">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph>).</source>
          <target state="translated">環境變數的完整存取權如果<ph id="ph1">&lt;paramref name="target" /&gt;</ph>是<ph id="ph2">&lt;see cref="F:System.EnvironmentVariableTarget.User" /&gt;</ph>或<ph id="ph3">&lt;see cref="F:System.EnvironmentVariableTarget.Machine" /&gt;</ph>(相關聯的列舉型別： <ph id="ph4">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="T:System.Environment">
          <source>Gets the path to the system special folder that is identified by the specified enumeration.</source>
          <target state="translated">取得由指定之列舉識別的系統特殊資料夾的路徑。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Environment.GetFolderPath(System.Environment.SpecialFolder)">
          <source>An enumerated constant that identifies a system special folder.</source>
          <target state="translated">列舉常數，識別系統特殊資料夾。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Environment.GetFolderPath(System.Environment.SpecialFolder)">
          <source>Gets the path to the system special folder that is identified by the specified enumeration.</source>
          <target state="translated">取得由指定之列舉識別的系統特殊資料夾的路徑。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Environment.GetFolderPath(System.Environment.SpecialFolder)">
          <source>The path to the specified system special folder, if that folder physically exists on your computer; otherwise, an empty string ("").</source>
          <target state="translated">如果所指定的系統特殊資料夾實際存在您的電腦中，則為該資料夾的路徑，否則為空字串 ("")。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Environment.GetFolderPath(System.Environment.SpecialFolder)">
          <source>A folder will not physically exist if the operating system did not create it, the existing folder was deleted, or the folder is a virtual directory, such as My Computer, which does not correspond to a physical path.</source>
          <target state="translated">如果作業系統沒有建立資料夾、現有資料夾被刪除或資料夾是沒有對應到實體路徑的虛擬目錄 (例如 [我的電腦])，則資料夾不會實際存在。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetFolderPath(System.Environment.SpecialFolder)">
          <source>This method retrieves the path to a system special folder, such as Program Files, Programs, System, or Startup, which can be used to access common information.</source>
          <target state="translated">這個方法會擷取系統特殊資料夾，例如程式檔案、 程式、 系統或啟動時，可以用來存取通用資訊的路徑。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetFolderPath(System.Environment.SpecialFolder)">
          <source>Special folders are set by default by the system, or explicitly by the user, when installing a version of Windows.</source>
          <target state="translated">特殊資料夾依預設會設定系統，或由使用者明確安裝的 Windows 版本時。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetFolderPath(System.Environment.SpecialFolder)">
          <source>The <ph id="ph1">`folder`</ph> parameter designates the special folder to retrieve and must be one of the values in the <ph id="ph2">&lt;xref:System.Environment.SpecialFolder&gt;</ph> enumeration; any other value throws an exception.</source>
          <target state="translated"><ph id="ph1">`folder`</ph>參數指定要擷取的特殊資料夾，且必須是其中一個值在<ph id="ph2">&lt;xref:System.Environment.SpecialFolder&gt;</ph>列舉型別，則為任何其他值會擲回的例外狀況。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetFolderPath(System.Environment.SpecialFolder)">
          <source>For more information about special folders, see the <bpt id="p1">[</bpt>CSIDL<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=116664)</ept> values topic.</source>
          <target state="translated">如需特殊資料夾的詳細資訊，請參閱<bpt id="p1">[</bpt>CSIDL<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=116664)</ept>值主題。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetFolderPath(System.Environment.SpecialFolder)">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Environment.GetFolderPath%2A&gt;</ph> method to return and display the path associated with the <ph id="ph2">`folder`</ph> parameter.</source>
          <target state="translated">下列範例示範如何使用<ph id="ph1">&lt;xref:System.Environment.GetFolderPath%2A&gt;</ph>方法來傳回並顯示相關聯的路徑<ph id="ph2">`folder`</ph>參數。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Environment.GetFolderPath(System.Environment.SpecialFolder)">
          <source><ph id="ph1">&lt;paramref name="folder" /&gt;</ph> is not a member of <ph id="ph2">&lt;see cref="T:System.Environment.SpecialFolder" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="folder" /&gt;</ph> 不是 <ph id="ph2">&lt;see cref="T:System.Environment.SpecialFolder" /&gt;</ph> 的成員。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Environment.GetFolderPath(System.Environment.SpecialFolder)">
          <source>The current platform is not supported.</source>
          <target state="translated">不支援目前的平台。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetFolderPath(System.Environment.SpecialFolder)">
          <source>for access to the information in the path itself.</source>
          <target state="translated">用於存取本身的路徑中的資訊。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetFolderPath(System.Environment.SpecialFolder)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Environment.GetFolderPath(System.Environment.SpecialFolder,System.Environment.SpecialFolderOption)">
          <source>An enumerated constant that identifies a system special folder.</source>
          <target state="translated">列舉常數，識別系統特殊資料夾。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Environment.GetFolderPath(System.Environment.SpecialFolder,System.Environment.SpecialFolderOption)">
          <source>Specifies options to use for accessing a special folder.</source>
          <target state="translated">指定用於存取特殊資料夾的選項。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Environment.GetFolderPath(System.Environment.SpecialFolder,System.Environment.SpecialFolderOption)">
          <source>Gets the path to the system special folder that is identified by the specified enumeration, and uses a specified option for accessing special folders.</source>
          <target state="translated">取得由指定之列舉所識別之系統特殊資料夾的路徑，並使用指定的選項來存取特殊資料夾。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Environment.GetFolderPath(System.Environment.SpecialFolder,System.Environment.SpecialFolderOption)">
          <source>The path to the specified system special folder, if that folder physically exists on your computer; otherwise, an empty string ("").</source>
          <target state="translated">如果所指定的系統特殊資料夾實際存在您的電腦中，則為該資料夾的路徑，否則為空字串 ("")。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Environment.GetFolderPath(System.Environment.SpecialFolder,System.Environment.SpecialFolderOption)">
          <source>A folder will not physically exist if the operating system did not create it, the existing folder was deleted, or the folder is a virtual directory, such as My Computer, which does not correspond to a physical path.</source>
          <target state="translated">如果作業系統沒有建立資料夾、現有資料夾被刪除或資料夾是沒有對應到實體路徑的虛擬目錄 (例如 [我的電腦])，則資料夾不會實際存在。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetFolderPath(System.Environment.SpecialFolder,System.Environment.SpecialFolderOption)">
          <source>This method retrieves the path to a system special folder, such as Program Files, Programs, System, or Startup, which can be used to access common information.</source>
          <target state="translated">這個方法會擷取系統特殊資料夾，例如程式檔案、 程式、 系統或啟動時，可以用來存取通用資訊的路徑。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetFolderPath(System.Environment.SpecialFolder,System.Environment.SpecialFolderOption)">
          <source>Special folders are set by default by the system, or explicitly by the user, when installing a version of Windows.</source>
          <target state="translated">特殊資料夾依預設會設定系統，或由使用者明確安裝的 Windows 版本時。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetFolderPath(System.Environment.SpecialFolder,System.Environment.SpecialFolderOption)">
          <source>The <ph id="ph1">`folder`</ph> parameter designates the special folder to retrieve and must be one of the values in the <ph id="ph2">&lt;xref:System.Environment.SpecialFolder&gt;</ph> enumeration; any other value throws an exception.</source>
          <target state="translated"><ph id="ph1">`folder`</ph>參數指定要擷取的特殊資料夾，且必須是其中一個值在<ph id="ph2">&lt;xref:System.Environment.SpecialFolder&gt;</ph>列舉型別，則為任何其他值會擲回的例外狀況。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetFolderPath(System.Environment.SpecialFolder,System.Environment.SpecialFolderOption)">
          <source>For more information about special folders, see the <bpt id="p1">[</bpt>CSIDL<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=116664)</ept> values topic.</source>
          <target state="translated">如需特殊資料夾的詳細資訊，請參閱<bpt id="p1">[</bpt>CSIDL<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=116664)</ept>值主題。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Environment.GetFolderPath(System.Environment.SpecialFolder,System.Environment.SpecialFolderOption)">
          <source><ph id="ph1">&lt;paramref name="folder" /&gt;</ph> is not a member of <ph id="ph2">&lt;see cref="T:System.Environment.SpecialFolder" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;paramref name="folder" /&gt;</ph> 不是 <ph id="ph2">&lt;see cref="T:System.Environment.SpecialFolder" /&gt;</ph> 的成員</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetFolderPath(System.Environment.SpecialFolder,System.Environment.SpecialFolderOption)">
          <source>for access to the information in the path itself.</source>
          <target state="translated">用於存取本身的路徑中的資訊。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetFolderPath(System.Environment.SpecialFolder,System.Environment.SpecialFolderOption)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Environment.GetLogicalDrives">
          <source>Returns an array of string containing the names of the logical drives on the current computer.</source>
          <target state="translated">傳回包含目前電腦上邏輯磁碟名稱的字串陣列。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Environment.GetLogicalDrives">
          <source>An array of strings where each element contains the name of a logical drive.</source>
          <target state="translated">字串的陣列，其中的每個元素都包含邏輯磁碟的名稱。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Environment.GetLogicalDrives">
          <source>For example, if the computer's hard drive is the first logical drive, the first element returned is "C:<ph id="ph1">\\</ph>".</source>
          <target state="translated">例如，如果電腦的硬碟是第一部邏輯磁碟，傳回的第一個項目就會是 "C:<ph id="ph1">\\</ph>"。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetLogicalDrives">
          <source>The following example shows how to display the logical drives of the current computer using the <ph id="ph1">&lt;xref:System.Environment.GetLogicalDrives%2A&gt;</ph> method.</source>
          <target state="translated">下列範例示範如何顯示目前的電腦使用的邏輯磁碟機<ph id="ph1">&lt;xref:System.Environment.GetLogicalDrives%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Environment.GetLogicalDrives">
          <source>An I/O error occurs.</source>
          <target state="translated">發生 I/O 錯誤。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Environment.GetLogicalDrives">
          <source>The caller does not have the required permissions.</source>
          <target state="translated">呼叫端沒有必要的權限。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetLogicalDrives">
          <source>for full access to the resource protected by this permission.</source>
          <target state="translated">此權限所保護的資源的完整存取權。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetLogicalDrives">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="P:System.Environment.HasShutdownStarted">
          <source>Gets a value that indicates whether the current application domain is being unloaded or the common language runtime (CLR) is shutting down.</source>
          <target state="translated">取得值，這個值表示正在卸載目前的應用程式定義域，或是正在關閉通用語言執行平台 (CLR)。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.HasShutdownStarted">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current application domain is being unloaded or the CLR is shutting down; otherwise, <ph id="ph2">&lt;see langword="false." /&gt;</ph></source>
          <target state="translated">如果目前的應用程式定義域正在卸載或 CLR 正在關閉，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否則為 <ph id="ph2">&lt;see langword="false." /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.HasShutdownStarted">
          <source>When the CLR unloads an application domain, it runs the finalizers on all objects that have a finalizer method in that application domain.</source>
          <target state="translated">當 CLR 卸載應用程式定義域時，它會有完成項方法，該應用程式定義域中的所有物件上執行完成項。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.HasShutdownStarted">
          <source>When the CLR shuts down, it starts the finalizer thread on all objects that have a finalizer method.</source>
          <target state="translated">CLR 關閉時，其會啟動完成項執行緒上完成項方法的所有物件。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.HasShutdownStarted">
          <source>The <ph id="ph1">&lt;xref:System.Environment.HasShutdownStarted%2A&gt;</ph> property returns <ph id="ph2">`true`</ph> only after the finalizer thread has been started.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Environment.HasShutdownStarted%2A&gt;</ph>屬性會傳回<ph id="ph2">`true`</ph>只完成項執行緒已經啟動。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.HasShutdownStarted">
          <source>When the property returns <ph id="ph1">`true`</ph>, you can determine whether an application domain is being unloaded or the CLR itself is shutting down by calling the <ph id="ph2">&lt;xref:System.AppDomain.IsFinalizingForUnload%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">當屬性傳回<ph id="ph1">`true`</ph>，您可以決定應用程式定義域正在卸載或 CLR 本身關閉藉由呼叫<ph id="ph2">&lt;xref:System.AppDomain.IsFinalizingForUnload%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.HasShutdownStarted">
          <source>This method returns <ph id="ph1">`true`</ph> if finalizers are called because the application domain is unloading or <ph id="ph2">`false`</ph> if the CLR is shutting down.</source>
          <target state="translated">這個方法會傳回<ph id="ph1">`true`</ph>因為應用程式定義域正在卸載，如果呼叫完成項或<ph id="ph2">`false`</ph>如果 CLR 正在關閉。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.HasShutdownStarted">
          <source>The <ph id="ph1">&lt;xref:System.Environment.HasShutdownStarted%2A&gt;</ph> property returns <ph id="ph2">`false`</ph> if the finalizer thread has not been started.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Environment.HasShutdownStarted%2A&gt;</ph>屬性會傳回<ph id="ph2">`false`</ph>完成項執行緒尚未啟動。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.HasShutdownStarted">
          <source>By using this property, you can determine whether to access static variables in your finalization code.</source>
          <target state="translated">您可以藉由使用這個屬性，判斷是否要存取您的最終處理程式碼中的靜態變數。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.HasShutdownStarted">
          <source>If either an application domain or the CLR is shutting down, you cannot reliably access any object that has a finalization method and that is referenced by a static field.</source>
          <target state="translated">如果應用程式定義域或 CLR 正在關閉，您就無法可靠地存取任何具有最終處理方法，且靜態欄位所參考的物件。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.HasShutdownStarted">
          <source>This is because these objects may have already been finalized.</source>
          <target state="translated">這是因為這些物件可能已完成。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="P:System.Environment.Is64BitOperatingSystem">
          <source>Determines whether the current operating system is a 64-bit operating system.</source>
          <target state="translated">判斷目前作業系統是否為 64 位元作業系統。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.Is64BitOperatingSystem">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the operating system is 64-bit; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果作業系統是 64 位元則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="P:System.Environment.Is64BitProcess">
          <source>Determines whether the current process is a 64-bit process.</source>
          <target state="translated">判斷目前處理程序是否為 64 位元處理程序。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.Is64BitProcess">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the process is 64-bit; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果處理程序是 64 位元則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="P:System.Environment.MachineName">
          <source>Gets the NetBIOS name of this local computer.</source>
          <target state="translated">取得這個本機電腦的 NetBIOS 名稱。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.MachineName">
          <source>A string containing the name of this computer.</source>
          <target state="translated">含有這個電腦名稱的字串。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.MachineName">
          <source>The name of this computer is established at system startup when the name is read from the registry.</source>
          <target state="translated">此電腦的名稱建立在系統啟動時的名稱會從登錄中讀取。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.MachineName">
          <source>If this computer is a node in a cluster, the name of the node is returned.</source>
          <target state="translated">如果此電腦是叢集中的節點，則會傳回節點的名稱。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.MachineName">
          <source>The following example displays the name of the computer that runs the code example.</source>
          <target state="translated">下列範例會顯示執行程式碼範例的電腦名稱。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.MachineName">
          <source>(The machine name is omitted from the example output for security reasons.)</source>
          <target state="translated">（基於安全性理由，範例輸出中會省略電腦名稱）。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="P:System.Environment.MachineName">
          <source>The name of this computer cannot be obtained.</source>
          <target state="translated">無法取得這個電腦的名稱。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.MachineName">
          <source>for read access to the COMPUTERNAME environment variable.</source>
          <target state="translated">COMPUTERNAME 環境變數的讀取權限。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.MachineName">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="P:System.Environment.NewLine">
          <source>Gets the newline string defined for this environment.</source>
          <target state="translated">取得為這個環境定義的新行字串 (Newline String)。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.NewLine">
          <source>A string containing "\r\n" for non-Unix platforms, or a string containing "\n" for Unix platforms.</source>
          <target state="translated">如果是非 Unix 平台，則為包含 "\r\n" 的字串；如果是 Unix 平台，則為包含 "\n" 的字串。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.NewLine">
          <source>The property value of <ph id="ph1">&lt;xref:System.Environment.NewLine%2A&gt;</ph> is a constant customized specifically for the current platform and implementation of the .NET Framework.</source>
          <target state="translated">屬性值的<ph id="ph1">&lt;xref:System.Environment.NewLine%2A&gt;</ph>是特別針對目前的平台和.NET framework 實作自訂常數。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.NewLine">
          <source>For more information about the escape characters in the property value, see <bpt id="p1">[</bpt>Character Escapes<ept id="p1">](~/docs/standard/base-types/character-escapes-in-regular-expressions.md)</ept>.</source>
          <target state="translated">如需有關屬性值的逸出字元的詳細資訊，請參閱<bpt id="p1">[</bpt>逸出字元<ept id="p1">](~/docs/standard/base-types/character-escapes-in-regular-expressions.md)</ept>。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.NewLine">
          <source>The functionality provided by <ph id="ph1">&lt;xref:System.Environment.NewLine%2A&gt;</ph> is often what is meant by the terms newline, line feed, line break, carriage return, CRLF, and end of line.</source>
          <target state="translated">所提供的功能<ph id="ph1">&lt;xref:System.Environment.NewLine%2A&gt;</ph>通常是代表什麼意思條款新行字元、 換行字元、 換行、 歸位字元、 CRLF、 和行尾。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.NewLine">
          <source><ph id="ph1">&lt;xref:System.Environment.NewLine%2A&gt;</ph> can be used in conjunction with language-specific newline support such as the escape characters '\r' and '\n' in Microsoft C# and C/C++, or <ph id="ph2">`vbCrLf`</ph> in Microsoft Visual Basic.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Environment.NewLine%2A&gt;</ph> 可用於搭配逸出字元 '\r' 和 '\n' 在 Microsoft C# 和 C/c + + 等語言特有的新行字元支援或<ph id="ph2">`vbCrLf`</ph>在 Microsoft Visual Basic。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.NewLine">
          <source><ph id="ph1">&lt;xref:System.Environment.NewLine%2A&gt;</ph> is automatically appended to text processed by the <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph3">&lt;xref:System.Text.StringBuilder.AppendLine%2A?displayProperty=nameWithType&gt;</ph> methods.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Environment.NewLine%2A&gt;</ph> 會自動附加至文字處理<ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph>和<ph id="ph3">&lt;xref:System.Text.StringBuilder.AppendLine%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.NewLine">
          <source>The following example displays three lines separated by newlines.</source>
          <target state="translated">下列範例會顯示三行以換行分隔。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="P:System.Environment.OSVersion">
          <source>Gets an <ph id="ph1">&lt;see cref="T:System.OperatingSystem" /&gt;</ph> object that contains the current platform identifier and version number.</source>
          <target state="translated">取得含有目前平台識別項和版本號碼的 <ph id="ph1">&lt;see cref="T:System.OperatingSystem" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.OSVersion">
          <source>An object that contains the platform identifier and version number.</source>
          <target state="translated">包含平台識別項和版本號碼的物件。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.OSVersion">
          <source>Starting with Windows 8, the  <ph id="ph1">&lt;xref:System.Environment.OSVersion%2A&gt;</ph> property returns the same major and minor version numbers for all Windows platforms.</source>
          <target state="translated">從 Windows 8 開始<ph id="ph1">&lt;xref:System.Environment.OSVersion%2A&gt;</ph>屬性會傳回所有 Windows 平台的相同主要和次要版本號碼。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.OSVersion">
          <source>Therefore, we do not recommend that you retrieve the value of this property to determine the operating system version.</source>
          <target state="translated">因此，我們不建議您擷取這個屬性來判斷作業系統版本的值。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.OSVersion">
          <source>Typically, the <ph id="ph1">&lt;xref:System.Environment.OSVersion%2A&gt;</ph> property is used to ensure that an app is running on some base version of an operating system in which a particular feature was introduced.</source>
          <target state="translated">一般而言，<ph id="ph1">&lt;xref:System.Environment.OSVersion%2A&gt;</ph>屬性用來確保應用程式某些基底版本引進特定功能的作業系統上執行。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.OSVersion">
          <source>When this is the case, you should perform a version check by testing whether the current operating system version returned by the <ph id="ph1">&lt;xref:System.Environment.OSVersion%2A&gt;</ph> property is the same as, or greater than, the base operating system version.</source>
          <target state="translated">這種情況時，您應該執行版本檢查，藉由測試所傳回目前的作業系統版本是否<ph id="ph1">&lt;xref:System.Environment.OSVersion%2A&gt;</ph>屬性是相同，或大於基礎作業系統版本。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.OSVersion">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Version&gt;</ph> class topic.</source>
          <target state="translated">如需詳細資訊，請參閱<ph id="ph1">&lt;xref:System.Version&gt;</ph>類別主題。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.OSVersion">
          <source>Through Windows 8, the <ph id="ph1">&lt;xref:System.Environment.OSVersion%2A&gt;</ph> property returns the version reported by the Windows <bpt id="p1">[</bpt>GetVersionEx<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms724451\(v=vs.85\).aspx)</ept> function.</source>
          <target state="translated">透過 Windows 8<ph id="ph1">&lt;xref:System.Environment.OSVersion%2A&gt;</ph>屬性會傳回 Windows 所報告的版本<bpt id="p1">[</bpt>GetVersionEx<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms724451\(v=vs.85\).aspx)</ept>函式。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.OSVersion">
          <source>For a list of Windows desktop operating system versions and their corresponding version numbers, see <bpt id="p1">[</bpt>Operating System Version<ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ms724832.aspx)</ept> in the Windows Dev Center.</source>
          <target state="translated">如需 Windows 桌面作業系統版本和其對應的版本號碼的清單，請參閱<bpt id="p1">[</bpt>Operating System Version<ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ms724832.aspx)</ept> Windows 開發人員中心。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.OSVersion">
          <source>The <ph id="ph1">&lt;xref:System.Environment.OSVersion%2A&gt;</ph> property reports the same version number (6.2.0.0) for both <ph id="ph2">[!INCLUDE[win8](~/includes/win8-md.md)]</ph> and <ph id="ph3">[!INCLUDE[win81](~/includes/win81-md.md)]</ph> and the same major and minor version number for Windows 10.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Environment.OSVersion%2A&gt;</ph>屬性會報告相同的版本號碼 (6.2.0.0) 兩者<ph id="ph2">[!INCLUDE[win8](~/includes/win8-md.md)]</ph>和<ph id="ph3">[!INCLUDE[win81](~/includes/win81-md.md)]</ph>和 Windows 10 的相同主要和次要版本號碼。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.OSVersion">
          <source>In some cases, the <ph id="ph1">&lt;xref:System.Environment.OSVersion%2A&gt;</ph> property may not return the operating system version that matches the version specified for the Windows Program Compatibility mode feature.</source>
          <target state="translated">在某些情況下，<ph id="ph1">&lt;xref:System.Environment.OSVersion%2A&gt;</ph>屬性可能不會傳回符合指定的 Windows 程式相容性模式功能版本的作業系統版本。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.OSVersion">
          <source>The following example displays the platform identifier and version number of the computer that runs the code example.</source>
          <target state="translated">下列範例顯示的平台識別項和版本執行的程式碼範例的電腦數目。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="P:System.Environment.OSVersion">
          <source>This property was unable to obtain the system version.</source>
          <target state="translated">這個屬性過去無法取得系統版本。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="P:System.Environment.OSVersion">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="P:System.Environment.OSVersion">
          <source>The obtained platform identifier is not a member of <ph id="ph1">&lt;see cref="T:System.PlatformID" /&gt;</ph></source>
          <target state="translated">取得的平台識別碼不是 <ph id="ph1">&lt;see cref="T:System.PlatformID" /&gt;</ph> 的成員。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="P:System.Environment.ProcessorCount">
          <source>Gets the number of processors on the current machine.</source>
          <target state="translated">取得目前電腦上的處理器數目。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.ProcessorCount">
          <source>The 32-bit signed integer that specifies the number of processors on the current machine.</source>
          <target state="translated">32 位元帶正負號的整數，可指定目前電腦上的處理器數目。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.ProcessorCount">
          <source>There is no default.</source>
          <target state="translated">沒有預設值。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.ProcessorCount">
          <source>If the current machine contains multiple processor groups, this property returns the number of logical processors that are available for use by the common language runtime (CLR).</source>
          <target state="translated">如果目前電腦包含多個處理器群組，則這個屬性會傳回可供 Common Language Runtime (CLR) 使用的邏輯處理器數目。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.ProcessorCount">
          <source>For more information about processor groups and logical processors, see <bpt id="p1">[</bpt>Processor Groups<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd405503.aspx)</ept>.</source>
          <target state="translated">如需處理器群組與邏輯處理器的詳細資訊，請參閱<bpt id="p1">[</bpt>處理器群組<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd405503.aspx)</ept>。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.ProcessorCount">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Environment.ProcessorCount%2A&gt;</ph> property.</source>
          <target state="translated">下列範例會示範<ph id="ph1">&lt;xref:System.Environment.ProcessorCount%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="T:System.Environment">
          <source>Creates, modifies, or deletes an environment variable.</source>
          <target state="translated">建立、修改或刪除環境變數。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String)">
          <source>The name of an environment variable.</source>
          <target state="translated">環境變數的名稱。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String)">
          <source>A value to assign to <bpt id="p1">&lt;c&gt;</bpt>variable<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">要指派給 <bpt id="p1">&lt;c&gt;</bpt>variable<ept id="p1">&lt;/c&gt;</ept> 的值。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String)">
          <source>Creates, modifies, or deletes an environment variable stored in the current process.</source>
          <target state="translated">建立、修改或刪除儲存在目前處理程序中的環境變數。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String)">
          <source>Calling this method is equivalent to calling the <ph id="ph1">&lt;xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%2CSystem.EnvironmentVariableTarget%29&gt;</ph> overload with a value of <ph id="ph2">&lt;xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType&gt;</ph> for the <ph id="ph3">`target`</ph> argument.</source>
          <target state="translated">呼叫這個方法相當於呼叫<ph id="ph1">&lt;xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%2CSystem.EnvironmentVariableTarget%29&gt;</ph>值是多載<ph id="ph2">&lt;xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType&gt;</ph>如<ph id="ph3">`target`</ph>引數。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String)">
          <source>If the <ph id="ph1">`value`</ph> argument is not empty (see the discussion of deleting an environment variable later in this section for the definition of an empty value) and the environment variable named by the <ph id="ph2">`variable`</ph> parameter does not exist, the environment variable is created and assigned the contents of <ph id="ph3">`value`</ph>.</source>
          <target state="translated">如果<ph id="ph1">`value`</ph>引數不是空白 （請參閱刪除環境變數在定義的值是空的本節稍後的討論） 和命名的環境變數<ph id="ph2">`variable`</ph>參數不存在，環境建立並指派的內容變數<ph id="ph3">`value`</ph>。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String)">
          <source>If it does exist, its value is modified.</source>
          <target state="translated">如果檔案存在，則會修改它的值。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String)">
          <source>Because the environment variable is defined in the environment block of the current process only, it does not persist after the process has ended.</source>
          <target state="translated">環境變數在目前的處理序的環境區塊中定義的因為它不會保存之後處理程序已結束。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String)">
          <source>If <ph id="ph1">`variable`</ph> contains a non-initial hexadecimal zero character, the characters before the zero character are considered the environment variable name and all subsequent characters are ignored.</source>
          <target state="translated">如果<ph id="ph1">`variable`</ph>包含非初始十六進位零字元之前的零個字元會被視為環境變數名稱和所有後續的字元會被忽略, 的字元。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String)">
          <source>If <ph id="ph1">`value`</ph> contains a non-initial hexadecimal zero character, the characters before the zero character are assigned to the environment variable and all subsequent characters are ignored.</source>
          <target state="translated">如果<ph id="ph1">`value`</ph>包含非初始十六進位零字元之前有零個字元指派給環境變數，而所有後續的字元會被忽略, 的字元。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String)">
          <source>If <ph id="ph1">`value`</ph> is empty and the environment variable named by <ph id="ph2">`variable`</ph> exists, the environment variable is deleted.</source>
          <target state="translated">如果<ph id="ph1">`value`</ph>是空白且命名的環境變數<ph id="ph2">`variable`</ph>存在，會刪除環境變數。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String)">
          <source>If <ph id="ph1">`variable`</ph> does not exist, no error occurs even though the operation cannot be performed.</source>
          <target state="translated">如果<ph id="ph1">`variable`</ph>不存在，就會發生任何錯誤即使無法執行此作業。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String)">
          <source><ph id="ph1">`value`</ph> is considered empty under any of the following conditions:</source>
          <target state="translated"><ph id="ph1">`value`</ph> 即會視為空白任何下列情況：</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String)">
          <source>It is <ph id="ph1">`null`</ph>.</source>
          <target state="translated">它是<ph id="ph1">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String)">
          <source>It is <ph id="ph1">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">它是<ph id="ph1">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String)">
          <source>It consists of a single character whose value is U+0000.</source>
          <target state="translated">它只包含單一字元，其值是 U + 0000。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String)">
          <source>The following example tests whether an environment variable named <ph id="ph1">`APPDOMAIN`</ph> exists in the current process.</source>
          <target state="translated">下列範例會測試名為的環境變數是否<ph id="ph1">`APPDOMAIN`</ph>存在於目前的處理序。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String)">
          <source>If it does not, it creates it and sets its value to "True".</source>
          <target state="translated">如果沒有，它就會建立並設定其值為"True"。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String)">
          <source>If the value of the <ph id="ph1">`APPDOMAIN`</ph> environment variable is "True", it calls the <ph id="ph2">`Message.Display`</ph> method in a new application domain.</source>
          <target state="translated">如果值<ph id="ph1">`APPDOMAIN`</ph>環境變數為"True"時，它會呼叫<ph id="ph2">`Message.Display`</ph>新的應用程式定義域中的方法。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String)">
          <source>Otherwise, it executes the <ph id="ph1">`Message.Display`</ph> method in the current application domain.</source>
          <target state="translated">否則，它會執行<ph id="ph1">`Message.Display`</ph>目前的應用程式定義域中的方法。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String)">
          <source>If you run the example for the first time, the message "Executing in domain Domain2" displays to the console.</source>
          <target state="translated">如果您第一次執行範例，訊息 「 Domain2 網域中的執行中 」 會顯示到主控台。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String)">
          <source>If you set the environment variable from the command line by using the command:</source>
          <target state="translated">如果您使用命令，從命令列設定環境變數：</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String)">
          <source>the example displays the message "Executing in domain <bpt id="p1">*</bpt>exeName<ept id="p1">*</ept>.exe", where <bpt id="p2">*</bpt>exeName<ept id="p2">*</ept> is the name of the executable.</source>
          <target state="translated">此範例會顯示訊息 「 定義域中執行<bpt id="p1">*</bpt>exeName<ept id="p1">*</ept>.exe"，其中<bpt id="p2">*</bpt>exeName<ept id="p2">*</ept>是可執行檔的名稱。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String)">
          <source>The following example attempts to retrieve the value of an environment variable named <ph id="ph1">`Test1`</ph> from the process environment block.</source>
          <target state="translated">下列範例會嘗試擷取名為環境變數的值<ph id="ph1">`Test1`</ph>從處理序的環境區塊。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String)">
          <source>If the variable doesn't exist, the example creates the variable and retrieves its value.</source>
          <target state="translated">如果變數不存在，此範例會建立的變數，並擷取其值。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String)">
          <source>The example displays the value of the variable.</source>
          <target state="translated">此範例會顯示變數的值。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String)">
          <source>If the example created the variable, it also calls the <ph id="ph1">&lt;xref:System.Environment.GetEnvironmentVariables%28System.EnvironmentVariableTarget%29&gt;</ph> method with each member of the <ph id="ph2">&lt;xref:System.EnvironmentVariableTarget&gt;</ph> enumeration to establish that the variable can be retrieved only from the current process environment block.</source>
          <target state="translated">如果範例已建立變數，它也會呼叫<ph id="ph1">&lt;xref:System.Environment.GetEnvironmentVariables%28System.EnvironmentVariableTarget%29&gt;</ph>方法的每個成員<ph id="ph2">&lt;xref:System.EnvironmentVariableTarget&gt;</ph>列舉型別來建立可以擷取只會從目前的處理程序的環境區塊的變數。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String)">
          <source>Finally, if the example created the variable, it deletes it.</source>
          <target state="translated">最後，如果範例已建立變數，就會刪除它。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="variable" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="variable" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="variable" /&gt;</ph> contains a zero-length string, an initial hexadecimal zero character (0x00), or an equal sign ("=").</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="variable" /&gt;</ph> 包含長度為零的字串、初始十六進位零字元 (0x00) 或等號 ("=")。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String)">
          <source>The length of <ph id="ph1">&lt;paramref name="variable" /&gt;</ph> or <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is greater than or equal to 32,767 characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="variable" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="value" /&gt;</ph> 的長度大於或等於 32,767 個字元。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String)">
          <source>An error occurred during the execution of this operation.</source>
          <target state="translated">執行這項作業期間發生錯誤。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String)">
          <source>The caller does not have the required permission to perform this operation.</source>
          <target state="translated">呼叫端沒有執行這項作業的必要權限。</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String)">
          <source>for full access to environment variables.</source>
          <target state="translated">環境變數的完整存取權。</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)">
          <source>The name of an environment variable.</source>
          <target state="translated">環境變數的名稱。</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)">
          <source>A value to assign to <bpt id="p1">&lt;c&gt;</bpt>variable<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">要指派給 <bpt id="p1">&lt;c&gt;</bpt>variable<ept id="p1">&lt;/c&gt;</ept> 的值。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)">
          <source>One of the enumeration values that specifies the location of the environment variable.</source>
          <target state="translated">其中一個列舉值，指定環境變數的位置。</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)">
          <source>Creates, modifies, or deletes an environment variable stored in the current process or in the Windows operating system registry key reserved for the current user or local machine.</source>
          <target state="translated">建立、修改或刪除儲存在目前的處理程序中，或是儲存在保留給目前使用者或本機電腦的 Windows 作業系統登錄機碼中的環境變數。</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)">
          <source>The <ph id="ph1">&lt;xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%2CSystem.EnvironmentVariableTarget%29&gt;</ph> method lets you define an environment variable that is available to all processes that run on a machine (the <ph id="ph2">&lt;xref:System.EnvironmentVariableTarget.Machine?displayProperty=nameWithType&gt;</ph> value), to all processes run by a user (the <ph id="ph3">&lt;xref:System.EnvironmentVariableTarget.User?displayProperty=nameWithType&gt;</ph> value), or to the current process (the <ph id="ph4">&lt;xref:System.EnvironmentVariableTarget.Process&gt;</ph> value).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%2CSystem.EnvironmentVariableTarget%29&gt;</ph>方法可讓您定義環境變數所提供的機器上執行的所有處理程序 (<ph id="ph2">&lt;xref:System.EnvironmentVariableTarget.Machine?displayProperty=nameWithType&gt;</ph>值)，由使用者所執行的所有處理程序 (<ph id="ph3">&lt;xref:System.EnvironmentVariableTarget.User?displayProperty=nameWithType&gt;</ph>值)，或目前的處理序 (<ph id="ph4">&lt;xref:System.EnvironmentVariableTarget.Process&gt;</ph>值)。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)">
          <source>Per-machine and per-user environment variables are copied into the environment block of the current process.</source>
          <target state="translated">每部電腦和每個使用者環境變數會複製到目前的處理序的環境區塊。</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)">
          <source>However, environment variables that are unique to the current process environment block persist only until the process ends.</source>
          <target state="translated">不過，對目前處理序的環境區塊都是唯一的環境變數會保存在程序結束後才。</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)">
          <source>If the <ph id="ph1">`value`</ph> argument is not empty (see the discussion of deleting an environment variable later in this section for the definition of an empty value) and the environment variable named by the <ph id="ph2">`variable`</ph> parameter does not exist, the environment variable is created and assigned the contents of <ph id="ph3">`value`</ph>.</source>
          <target state="translated">如果<ph id="ph1">`value`</ph>引數不是空白 （請參閱刪除環境變數在定義的值是空的本節稍後的討論） 和命名的環境變數<ph id="ph2">`variable`</ph>參數不存在，環境建立並指派的內容變數<ph id="ph3">`value`</ph>。</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)">
          <source>If it does exist, its value is modified.</source>
          <target state="translated">如果檔案存在，則會修改它的值。</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)">
          <source>If <ph id="ph1">`variable`</ph> contains a non-initial hexadecimal zero character, the characters before the zero character are considered the environment variable name and all subsequent characters are ignored.</source>
          <target state="translated">如果<ph id="ph1">`variable`</ph>包含非初始十六進位零字元之前的零個字元會被視為環境變數名稱和所有後續的字元會被忽略, 的字元。</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)">
          <source>If <ph id="ph1">`value`</ph> contains a non-initial hexadecimal zero character, the characters before the zero character are assigned to the environment variable and all subsequent characters are ignored.</source>
          <target state="translated">如果<ph id="ph1">`value`</ph>包含非初始十六進位零字元之前有零個字元指派給環境變數，而所有後續的字元會被忽略, 的字元。</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)">
          <source>If <ph id="ph1">`value`</ph> is empty and the environment variable named by <ph id="ph2">`variable`</ph> exists, the environment variable is deleted.</source>
          <target state="translated">如果<ph id="ph1">`value`</ph>是空白且命名的環境變數<ph id="ph2">`variable`</ph>存在，會刪除環境變數。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)">
          <source><ph id="ph1">`value`</ph> is considered empty under any of the following conditions:</source>
          <target state="translated"><ph id="ph1">`value`</ph> 即會視為空白任何下列情況：</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)">
          <source>It is <ph id="ph1">`null`</ph>.</source>
          <target state="translated">它是<ph id="ph1">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)">
          <source>It is <ph id="ph1">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">它是<ph id="ph1">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)">
          <source>It consists of a single character whose value is U+0000.</source>
          <target state="translated">它只包含單一字元，其值是 U + 0000。</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)">
          <source>If <ph id="ph1">`variable`</ph> does not exist, no error occurs although the operation cannot be performed.</source>
          <target state="translated">如果<ph id="ph1">`variable`</ph>不存在，就會發生任何錯誤雖然無法執行此作業。</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)">
          <source>Be careful when <ph id="ph1">`target`</ph> is <ph id="ph2">&lt;xref:System.EnvironmentVariableTarget.Machine&gt;</ph>, because you can accidentally delete an environment variable that affects your entire local machine, not just the current process or user.</source>
          <target state="translated">時請小心<ph id="ph1">`target`</ph>是<ph id="ph2">&lt;xref:System.EnvironmentVariableTarget.Machine&gt;</ph>，因為您可以不小心刪除環境變數會影響整個本機電腦，不只是目前的處理序或使用者。</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)">
          <source>If <ph id="ph1">`target`</ph> is <ph id="ph2">&lt;xref:System.EnvironmentVariableTarget.User&gt;</ph>, the environment variable is stored in the HKEY_CURRENT_USER\Environment key of the local computer's registry.</source>
          <target state="translated">如果<ph id="ph1">`target`</ph>是<ph id="ph2">&lt;xref:System.EnvironmentVariableTarget.User&gt;</ph>，HKEY_CURRENT_USER\Environment 機碼的本機電腦的登錄中儲存環境變數。</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)">
          <source>It is also copied to instances of File Explorer that are running as the current user.</source>
          <target state="translated">它也會複製到 [檔案總管] 以目前使用者的身分執行的執行個體。</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)">
          <source>The environment variable is then inherited by any new processes that the user launches from File Explorer.</source>
          <target state="translated">環境變數接著會由使用者從 [檔案總管] 啟動任何新處理序繼承。</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)">
          <source>Similarly, if <ph id="ph1">`target`</ph> is <ph id="ph2">&lt;xref:System.EnvironmentVariableTarget.Machine?displayProperty=nameWithType&gt;</ph>, the environment variable is stored in the HKEY_LOCAL_MACHINE\SYSTEM\ControlSet001\Control\Session Manager\Environment key of the local computer's registry.</source>
          <target state="translated">同樣地，如果<ph id="ph1">`target`</ph>是<ph id="ph2">&lt;xref:System.EnvironmentVariableTarget.Machine?displayProperty=nameWithType&gt;</ph>，環境變數會儲存在本機電腦的登錄 HKEY_LOCAL_MACHINE\SYSTEM\ControlSet001\Control\Session Manager\Environment 索引鍵。</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)">
          <source>It is also copied to all instances of File Explorer.</source>
          <target state="translated">它也會複製到 [檔案總管] 中的所有執行個體。</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)">
          <source>The environment variable is then inherited by any new processes that are launched from File Explorer.</source>
          <target state="translated">然後從檔案總管 啟動任何新處理序繼承的環境變數。</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)">
          <source>If <ph id="ph1">`target`</ph> is <ph id="ph2">&lt;xref:System.EnvironmentVariableTarget.User&gt;</ph> or <ph id="ph3">&lt;xref:System.EnvironmentVariableTarget.Machine&gt;</ph>, other applications are notified of the set operation by a Windows <ph id="ph4">`WM_SETTINGCHANGE`</ph> message.</source>
          <target state="translated">如果<ph id="ph1">`target`</ph>是<ph id="ph2">&lt;xref:System.EnvironmentVariableTarget.User&gt;</ph>或<ph id="ph3">&lt;xref:System.EnvironmentVariableTarget.Machine&gt;</ph>，其他應用程式都會收到通知，設定作業的 Windows<ph id="ph4">`WM_SETTINGCHANGE`</ph>訊息。</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)">
          <source>If <ph id="ph1">`target`</ph> is <ph id="ph2">&lt;xref:System.EnvironmentVariableTarget.User?displayProperty=nameWithType&gt;</ph> or <ph id="ph3">&lt;xref:System.EnvironmentVariableTarget.Machine?displayProperty=nameWithType&gt;</ph>, we recommend that the length of <ph id="ph4">`value`</ph> be less than 2048 characters.</source>
          <target state="translated">如果<ph id="ph1">`target`</ph>是<ph id="ph2">&lt;xref:System.EnvironmentVariableTarget.User?displayProperty=nameWithType&gt;</ph>或<ph id="ph3">&lt;xref:System.EnvironmentVariableTarget.Machine?displayProperty=nameWithType&gt;</ph>，我們建議的長度<ph id="ph4">`value`</ph>小於 2048年個字元。</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)">
          <source>The following example creates environment variables for the <ph id="ph1">&lt;xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.EnvironmentVariableTarget.User?displayProperty=nameWithType&gt;</ph>, and <ph id="ph3">&lt;xref:System.EnvironmentVariableTarget.Machine&gt;</ph> targets, checks whether the operating system registry contains the user and machine environment variables, then deletes the environment variables.</source>
          <target state="translated">下列範例會建立環境變數<ph id="ph1">&lt;xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType&gt;</ph>， <ph id="ph2">&lt;xref:System.EnvironmentVariableTarget.User?displayProperty=nameWithType&gt;</ph>，和<ph id="ph3">&lt;xref:System.EnvironmentVariableTarget.Machine&gt;</ph>為目標時，會檢查作業系統登錄是否包含使用者和電腦的環境變數，然後刪除環境變數。</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)">
          <source><ph id="ph1">&lt;paramref name="variable" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="variable" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)">
          <source><ph id="ph1">&lt;paramref name="variable" /&gt;</ph> contains a zero-length string, an initial hexadecimal zero character (0x00), or an equal sign ("=").</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="variable" /&gt;</ph> 包含長度為零的字串、初始十六進位零字元 (0x00) 或等號 ("=")。</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)">
          <source>The length of <ph id="ph1">&lt;paramref name="variable" /&gt;</ph> is greater than or equal to 32,767 characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="variable" /&gt;</ph> 的長度大於或等於 32,767 個字元。</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)">
          <source><ph id="ph1">&lt;paramref name="target" /&gt;</ph> is not a member of the <ph id="ph2">&lt;see cref="T:System.EnvironmentVariableTarget" /&gt;</ph> enumeration.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="target" /&gt;</ph> 不是 <ph id="ph2">&lt;see cref="T:System.EnvironmentVariableTarget" /&gt;</ph> 列舉型別的成員。</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)">
          <source><ph id="ph1">&lt;paramref name="target" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.EnvironmentVariableTarget.Machine" /&gt;</ph> or <ph id="ph3">&lt;see cref="F:System.EnvironmentVariableTarget.User" /&gt;</ph>, and the length of <ph id="ph4">&lt;paramref name="variable" /&gt;</ph> is greater than or equal to 255.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="target" /&gt;</ph> 為 <ph id="ph2">&lt;see cref="F:System.EnvironmentVariableTarget.Machine" /&gt;</ph> 或 <ph id="ph3">&lt;see cref="F:System.EnvironmentVariableTarget.User" /&gt;</ph>，且 <ph id="ph4">&lt;paramref name="variable" /&gt;</ph> 的長度大於或等於 255。</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)">
          <source><ph id="ph1">&lt;paramref name="target" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.EnvironmentVariableTarget.Process" /&gt;</ph> and the length of <ph id="ph3">&lt;paramref name="value" /&gt;</ph> is greater than or equal to 32,767 characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="target" /&gt;</ph> 為 <ph id="ph2">&lt;see cref="F:System.EnvironmentVariableTarget.Process" /&gt;</ph>，且 <ph id="ph3">&lt;paramref name="value" /&gt;</ph> 的長度大於或等於 32,767 個字元。</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)">
          <source>An error occurred during the execution of this operation.</source>
          <target state="translated">執行這項作業期間發生錯誤。</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)">
          <source>The caller does not have the required permission to perform this operation.</source>
          <target state="translated">呼叫端沒有執行這項作業的必要權限。</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)">
          <source>for full access to environment variables.</source>
          <target state="translated">環境變數的完整存取權。</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" uid="P:System.Environment.StackTrace">
          <source>Gets current stack trace information.</source>
          <target state="translated">取得目前的堆疊追蹤資訊。</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.StackTrace">
          <source>A string containing stack trace information.</source>
          <target state="translated">含有堆疊追蹤資訊的字串。</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.StackTrace">
          <source>This value can be <ph id="ph1">&lt;see cref="F:System.String.Empty" /&gt;</ph>.</source>
          <target state="translated">這個值可以是 <ph id="ph1">&lt;see cref="F:System.String.Empty" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.StackTrace">
          <source>The <ph id="ph1">&lt;xref:System.Environment.StackTrace%2A&gt;</ph> property lists method calls in reverse chronological order, that is, the most recent method call is described first, and one line of stack trace information is listed for each method call on the stack.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Environment.StackTrace%2A&gt;</ph>屬性會列出依反向時間順序的方法呼叫，也就是最新的方法呼叫會首先，描述和一行的堆疊追蹤資訊會列出每個方法呼叫堆疊上。</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.StackTrace">
          <source>However, the <ph id="ph1">&lt;xref:System.Environment.StackTrace%2A&gt;</ph> property might not report as many method calls as expected due to code transformations that occur during optimization.</source>
          <target state="translated">不過，<ph id="ph1">&lt;xref:System.Environment.StackTrace%2A&gt;</ph>屬性可能不會報告為多個方法呼叫發生在最佳化期間發生的程式碼轉換。</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.StackTrace">
          <source>For a hierarchical view of the stack trace information by class, use the <ph id="ph1">&lt;xref:System.Diagnostics.StackTrace&gt;</ph> class.</source>
          <target state="translated">對於由類別的堆疊追蹤資訊的階層式檢視，請使用<ph id="ph1">&lt;xref:System.Diagnostics.StackTrace&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.StackTrace">
          <source>The <ph id="ph1">&lt;xref:System.Environment.StackTrace%2A&gt;</ph> property formats the stack trace information for each method call as follows:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Environment.StackTrace%2A&gt;</ph>屬性格式化每個方法呼叫的堆疊追蹤資訊，如下所示：</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.StackTrace">
          <source>"at <ph id="ph1">`FullClassName`</ph>.<ph id="ph2">`MethodName`</ph>(<ph id="ph3">`MethodParams`</ph>) in <ph id="ph4">`FileName`</ph> :line <ph id="ph5">`LineNumber`</ph> "</source>
          <target state="translated">「 在<ph id="ph1">`FullClassName`</ph>。<ph id="ph2">`MethodName`</ph>(<ph id="ph3">`MethodParams`</ph>) 中<ph id="ph4">`FileName`</ph>： 列<ph id="ph5">`LineNumber`</ph>"</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.StackTrace">
          <source>The literal "at" is preceded by three spaces, and the entire substring starting with "in" is omitted if debug symbols are not available.</source>
          <target state="translated">常值"at"會加上三個空格，以及如果無法使用的偵錯符號，則會忽略整個開頭為"in"的子字串。</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.StackTrace">
          <source>The placeholders, <ph id="ph1">`FullClassName`</ph>, <ph id="ph2">`MethodName`</ph>, <ph id="ph3">`MethodParams`</ph>, <ph id="ph4">`FileName`</ph>, and <ph id="ph5">`LineNumber`</ph>, are replaced by actual values, and are defined as follows:</source>
          <target state="translated">此預留位置， <ph id="ph1">`FullClassName`</ph>， <ph id="ph2">`MethodName`</ph>， <ph id="ph3">`MethodParams`</ph>， <ph id="ph4">`FileName`</ph>，和<ph id="ph5">`LineNumber`</ph>、 以實際的值取代和定義方式如下：</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.StackTrace">
          <source>FullClassName</source>
          <target state="translated">FullClassName</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.StackTrace">
          <source>The full name of the class, including the namespace.</source>
          <target state="translated">類別，包括命名空間的完整名稱。</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.StackTrace">
          <source>The name of the method.</source>
          <target state="translated">方法的名稱。</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.StackTrace">
          <source>The list of parameter type/name pairs.</source>
          <target state="translated">參數類型/名稱組的清單。</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.StackTrace">
          <source>Each pair is separated by a comma (",").</source>
          <target state="translated">每一組以逗號分隔 （"，"）。</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.StackTrace">
          <source>This information is omitted if <ph id="ph1">`MethodName`</ph> takes no parameters.</source>
          <target state="translated">如果，則會忽略這項資訊<ph id="ph1">`MethodName`</ph>不採用任何參數。</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.StackTrace">
          <source>The name of the source file where the <ph id="ph1">`MethodName`</ph> method is declared.</source>
          <target state="translated">檔案的來源名稱<ph id="ph1">`MethodName`</ph>方法宣告。</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.StackTrace">
          <source>This information is omitted if debug symbols are not available.</source>
          <target state="translated">如果無法使用的偵錯符號，則會忽略這項資訊。</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.StackTrace">
          <source>The number of the line in <ph id="ph1">`FileName`</ph> that contains the source code from <ph id="ph2">`MethodName`</ph> for the instruction that is on the call stack.</source>
          <target state="translated">在行號<ph id="ph1">`FileName`</ph>，其中包含從原始程式碼<ph id="ph2">`MethodName`</ph>呼叫堆疊上的指示。</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.StackTrace">
          <source>This information is omitted if debug symbols are not available.</source>
          <target state="translated">如果無法使用的偵錯符號，則會忽略這項資訊。</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.StackTrace">
          <source>The <ph id="ph1">&lt;xref:System.Environment.NewLine%2A?displayProperty=nameWithType&gt;</ph> string terminates each line of the stack trace.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Environment.NewLine%2A?displayProperty=nameWithType&gt;</ph>字串終止堆疊追蹤的每一行。</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.StackTrace">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Environment.StackTrace%2A&gt;</ph> property.</source>
          <target state="translated">下列範例會示範<ph id="ph1">&lt;xref:System.Environment.StackTrace%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.StackTrace">
          <source>for full access to the resource protected by the permission.</source>
          <target state="translated">權限所保護的資源的完整存取權。</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.StackTrace">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" uid="P:System.Environment.SystemDirectory">
          <source>Gets the fully qualified path of the system directory.</source>
          <target state="translated">取得系統目錄的完整路徑。</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.SystemDirectory">
          <source>A string containing a directory path.</source>
          <target state="translated">含有目錄路徑的字串。</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.SystemDirectory">
          <source>An example of the value returned is the string "C:\WinNT\System32".</source>
          <target state="translated">傳回值的範例是"C:\WinNT\System32"的字串。</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.SystemDirectory">
          <source>The following example displays the system directory of the computer that runs the code example.</source>
          <target state="translated">下列範例會顯示執行程式碼範例的電腦的系統目錄。</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.SystemDirectory">
          <source>(The system directory is omitted from the example output for security reasons.)</source>
          <target state="translated">（系統目錄，基於安全性考量的範例輸出中省略）。</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.SystemDirectory">
          <source>for access to the information in the path itself.</source>
          <target state="translated">用於存取本身的路徑中的資訊。</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.SystemDirectory">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" uid="P:System.Environment.SystemPageSize">
          <source>Gets the number of bytes in the operating system's memory page.</source>
          <target state="translated">取得作業系統記憶體分頁中的位元組數目。</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.SystemPageSize">
          <source>The number of bytes in the system memory page.</source>
          <target state="translated">系統記憶體分頁中的位元組數目。</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.SystemPageSize">
          <source>This information can be useful when determining whether to use the <ph id="ph1">&lt;xref:System.IO.MemoryMappedFiles.MemoryMappedFileOptions.DelayAllocatePages?displayProperty=nameWithType&gt;</ph> option when you work with memory-mapped files.</source>
          <target state="translated">這項資訊很有用，決定是否要使用<ph id="ph1">&lt;xref:System.IO.MemoryMappedFiles.MemoryMappedFileOptions.DelayAllocatePages?displayProperty=nameWithType&gt;</ph>選項，當您使用記憶體對應檔。</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.SystemPageSize">
          <source>In Windows, this value is the <ph id="ph1">`dwPageSize`</ph> member in the <ph id="ph2">`SYSTEM_INFO`</ph> structure.</source>
          <target state="translated">在 Windows 中，這個值是<ph id="ph1">`dwPageSize`</ph>中的成員<ph id="ph2">`SYSTEM_INFO`</ph>結構。</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.SystemPageSize">
          <source>for access to system and user environment variables.</source>
          <target state="translated">用於存取系統和使用者環境變數。</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.SystemPageSize">
          <source>Associated exception:</source>
          <target state="translated">相關聯的例外狀況：</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" uid="P:System.Environment.TickCount">
          <source>Gets the number of milliseconds elapsed since the system started.</source>
          <target state="translated">取得系統啟動後經過的毫秒數。</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.TickCount">
          <source>A 32-bit signed integer containing the amount of time in milliseconds that has passed since the last time the computer was started.</source>
          <target state="translated">32 位元帶正負號的整數，包含自上一次電腦啟動後所經過的毫秒時間量。</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.TickCount">
          <source>The value of this property is derived from the system timer and is stored as a 32-bit signed integer.</source>
          <target state="translated">這個屬性的值衍生自系統計時器，而且會儲存為 32 位元帶正負號的整數。</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.TickCount">
          <source>Note that, because it is derived from the system timer, the resolution of the <ph id="ph1">&lt;xref:System.Environment.TickCount%2A&gt;</ph> property is limited to the resolution of the system timer, which is typically in the range of 10 to 16 milliseconds.</source>
          <target state="translated">請注意，因為它衍生自系統計時器，解析<ph id="ph1">&lt;xref:System.Environment.TickCount%2A&gt;</ph>屬性僅限於系統計時器，通常是在 10 到 16 毫秒為單位的範圍內的解析度。</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.TickCount">
          <source>Because the value of the <ph id="ph1">&lt;xref:System.Environment.TickCount%2A&gt;</ph> property value is a 32-bit signed integer, if the system runs continuously, <ph id="ph2">&lt;xref:System.Environment.TickCount%2A&gt;</ph> will increment from zero to <ph id="ph3">&lt;xref:System.Int32.MaxValue?displayProperty=nameWithType&gt;</ph> for approximately 24.9 days, then jump to <ph id="ph4">&lt;xref:System.Int32.MinValue?displayProperty=nameWithType&gt;</ph>, which is a negative number, then increment back to zero during the next 24.9 days.</source>
          <target state="translated">因為值<ph id="ph1">&lt;xref:System.Environment.TickCount%2A&gt;</ph>屬性值會是 32 位元帶正負號的整數，如果系統會連續執行，<ph id="ph2">&lt;xref:System.Environment.TickCount%2A&gt;</ph>會增加應用程式從零到<ph id="ph3">&lt;xref:System.Int32.MaxValue?displayProperty=nameWithType&gt;</ph>大約 24.9 天，然後跳到<ph id="ph4">&lt;xref:System.Int32.MinValue?displayProperty=nameWithType&gt;</ph>，這是負數，然後遞增回下一個 24.9 指定天數內的零。</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.TickCount">
          <source>You can work around this issue by calling the Windows <bpt id="p1">[</bpt>GetTickCount<ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ms724408.aspx)</ept> function, which resets to zero after approximately 49.7 days, or by calling the <bpt id="p2">[</bpt>GetTickCount64<ept id="p2">](https://msdn.microsoft.com/library/windows/desktop/ms724411.aspx)</ept> function.</source>
          <target state="translated">您可以暫時解決此問題，經由呼叫 Windows <bpt id="p1">[</bpt>GetTickCount<ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ms724408.aspx)</ept>函式，會重設為零，或藉由呼叫之後大約隔 49.7 天才<bpt id="p2">[</bpt>GetTickCount64<ept id="p2">](https://msdn.microsoft.com/library/windows/desktop/ms724411.aspx)</ept>函式。</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.TickCount">
          <source><ph id="ph1">&lt;xref:System.Environment.TickCount%2A&gt;</ph> is different from the <ph id="ph2">&lt;xref:System.DateTime.Ticks%2A?displayProperty=nameWithType&gt;</ph> property, which is the number of 100-nanosecond intervals that have elapsed since 1/1/0001, 12:00am.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Environment.TickCount%2A&gt;</ph> 不同於<ph id="ph2">&lt;xref:System.DateTime.Ticks%2A?displayProperty=nameWithType&gt;</ph>屬性，這是 1/1/0001，上午 12:00 起已經過的 100 奈秒間隔數。</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.TickCount">
          <source>Use the <ph id="ph1">&lt;xref:System.DateTime.Now%2A?displayProperty=nameWithType&gt;</ph> property to obtain the current local date and time on this computer.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.DateTime.Now%2A?displayProperty=nameWithType&gt;</ph>屬性，以取得目前的本地日期和時間，在此電腦上的。</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.TickCount">
          <source>The following example demonstrates how to retrieve the positive range of values returned by the <ph id="ph1">&lt;xref:System.Environment.TickCount%2A&gt;</ph> property.</source>
          <target state="translated">下列範例示範如何擷取傳回值的正數範圍<ph id="ph1">&lt;xref:System.Environment.TickCount%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.TickCount">
          <source>The <ph id="ph1">&lt;xref:System.Environment.TickCount%2A&gt;</ph> property cycles between <ph id="ph2">&lt;xref:System.Int32.MinValue?displayProperty=nameWithType&gt;</ph>, which is a negative number, and <ph id="ph3">&lt;xref:System.Int32.MaxValue?displayProperty=nameWithType&gt;</ph> once every 49.8 days.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Environment.TickCount%2A&gt;</ph>屬性之間的循環<ph id="ph2">&lt;xref:System.Int32.MinValue?displayProperty=nameWithType&gt;</ph>，這是負數，和<ph id="ph3">&lt;xref:System.Int32.MaxValue?displayProperty=nameWithType&gt;</ph>每 49.8 天。</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.TickCount">
          <source>This code sample removes the sign bit to yield a nonnegative number that cycles between zero and <ph id="ph1">&lt;xref:System.Int32.MaxValue&gt;</ph> once every 24.9 days.</source>
          <target state="translated">此程式碼範例會移除以產生零之間循環的非負數數字的正負號位元和<ph id="ph1">&lt;xref:System.Int32.MaxValue&gt;</ph>每 24.9 天。</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" uid="P:System.Environment.UserDomainName">
          <source>Gets the network domain name associated with the current user.</source>
          <target state="translated">取得與目前使用者相關聯的網路網域名稱。</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.UserDomainName">
          <source>The network domain name associated with the current user.</source>
          <target state="translated">與目前使用者相關聯的網路網域名稱。</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.UserDomainName">
          <source>The domain account credentials for a user are formatted as the user's domain name, the '<ph id="ph1">\\</ph>' character, and user name.</source>
          <target state="translated">使用者的網域帳戶認證會格式化為使用者的網域名稱，'<ph id="ph1">\\</ph>' 字元，而且使用者名稱。</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.UserDomainName">
          <source>Use the <ph id="ph1">&lt;xref:System.Environment.UserDomainName%2A&gt;</ph> property to obtain the user's domain name without the user name, and the <ph id="ph2">&lt;xref:System.Environment.UserName%2A&gt;</ph> property to obtain the user name without the domain name.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Environment.UserDomainName%2A&gt;</ph>屬性，以取得使用者的網域名稱，不含使用者名稱，而<ph id="ph2">&lt;xref:System.Environment.UserName%2A&gt;</ph>屬性，以取得不含網域名稱的使用者名稱。</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.UserDomainName">
          <source>For example, if a user's domain name and user name are CORPORATENETWORK\john, the <ph id="ph1">&lt;xref:System.Environment.UserDomainName%2A&gt;</ph> property returns "CORPORATENETWORK".</source>
          <target state="translated">例如，如果使用者的網域名稱和使用者名稱是 CORPORATENETWORK\john，<ph id="ph1">&lt;xref:System.Environment.UserDomainName%2A&gt;</ph>屬性會傳回"CORPORATENETWORK"。</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.UserDomainName">
          <source>The <ph id="ph1">&lt;xref:System.Environment.UserDomainName%2A&gt;</ph> property first attempts to get the domain name component of the Windows account name for the current user.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Environment.UserDomainName%2A&gt;</ph>屬性第一次嘗試取得目前使用者的 Windows 帳戶名稱的網域名稱元件。</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.UserDomainName">
          <source>If that attempt fails, this property attempts to get the domain name associated with the user name provided by the <ph id="ph1">&lt;xref:System.Environment.UserName%2A&gt;</ph> property.</source>
          <target state="translated">如果該嘗試失敗時，這個屬性會嘗試取得與所提供的使用者名稱相關聯的網域名稱<ph id="ph1">&lt;xref:System.Environment.UserName%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.UserDomainName">
          <source>If that attempt fails because the host computer is not joined to a domain, then the host computer name is returned.</source>
          <target state="translated">如果該嘗試失敗，因為主機電腦未加入網域，則會傳回主機電腦的名稱。</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" uid="P:System.Environment.UserDomainName">
          <source>The operating system does not support retrieving the network domain name.</source>
          <target state="translated">作業系統不支援擷取網路網域名稱。</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" uid="P:System.Environment.UserDomainName">
          <source>The network domain name cannot be retrieved.</source>
          <target state="translated">無法擷取網路網域名稱。</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.UserDomainName">
          <source>for read access to the USERDOMAIN environment variable.</source>
          <target state="translated">USERDOMAIN 環境變數的讀取權限。</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.UserDomainName">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" uid="P:System.Environment.UserInteractive">
          <source>Gets a value indicating whether the current process is running in user interactive mode.</source>
          <target state="translated">取得數值，指示目前的處理程序是否正執行於使用者互動模式中。</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.UserInteractive">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current process is running in user interactive mode; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果目前處理序正執行於使用者互動模式中，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.UserInteractive">
          <source>The <ph id="ph1">&lt;xref:System.Environment.UserInteractive%2A&gt;</ph> property reports <ph id="ph2">`false`</ph> for a Windows process or a service like IIS that runs without a user interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Environment.UserInteractive%2A&gt;</ph>屬性報告<ph id="ph2">`false`</ph>Windows 處理序或如 IIS 沒有使用者介面中執行的服務。</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.UserInteractive">
          <source>If this property is <ph id="ph1">`false`</ph>, do not display modal dialogs or message boxes because there is no graphical user interface for the user to interact with.</source>
          <target state="translated">如果這個屬性是<ph id="ph1">`false`</ph>，不會顯示強制回應對話方塊或訊息方塊，因為沒有使用者互動的圖形化使用者介面。</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.UserInteractive">
          <source>The following example displays whether the current process is running in user interactive mode.</source>
          <target state="translated">下列範例會顯示是否目前的處理序正在執行使用者互動模式中。</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" uid="P:System.Environment.UserName">
          <source>Gets the user name of the person who is currently logged on to the Windows operating system.</source>
          <target state="translated">取得目前登入 Windows 作業系統之人員的使用者名稱。</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.UserName">
          <source>The user name of the person who is logged on to Windows.</source>
          <target state="translated">登入 Windows 之人員的使用者名稱。</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.UserName">
          <source>You can use the <ph id="ph1">&lt;xref:System.Environment.UserName%2A&gt;</ph> property to identify the user on the current thread, to the system and application for security or access purposes.</source>
          <target state="translated">您可以使用<ph id="ph1">&lt;xref:System.Environment.UserName%2A&gt;</ph>屬性來識別目前的執行緒，可基於安全性或存取應用程式與系統上的使用者。</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.UserName">
          <source>It can also be used to customize a particular application for each user.</source>
          <target state="translated">也可用以自訂特定應用程式的每個使用者。</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.UserName">
          <source>The <ph id="ph1">&lt;xref:System.Environment.UserName%2A&gt;</ph> property wraps a call to the Windows <bpt id="p1">[</bpt>GetUserName<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms724432.aspx)</ept> function.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Environment.UserName%2A&gt;</ph>屬性會包裝 Windows 呼叫<bpt id="p1">[</bpt>GetUserName<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms724432.aspx)</ept>函式。</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.UserName">
          <source>The domain account credentials for a user are formatted as the user's domain name, the '<ph id="ph1">\\</ph>' character, and user name.</source>
          <target state="translated">使用者的網域帳戶認證會格式化為使用者的網域名稱，'<ph id="ph1">\\</ph>' 字元，而且使用者名稱。</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.UserName">
          <source>Use the <ph id="ph1">&lt;xref:System.Environment.UserDomainName%2A&gt;</ph> property to obtain the user's domain name and the <ph id="ph2">&lt;xref:System.Environment.UserName%2A&gt;</ph> property to obtain the user name.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Environment.UserDomainName%2A&gt;</ph>屬性，以取得使用者的網域名稱和<ph id="ph2">&lt;xref:System.Environment.UserName%2A&gt;</ph>屬性，以取得使用者名稱。</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.UserName">
          <source>If an ASP.NET application runs in a development environment, the <ph id="ph1">&lt;xref:System.Environment.UserName%2A&gt;</ph> property returns the name of the current user.</source>
          <target state="translated">如果在開發環境中，執行 ASP.NET 應用程式<ph id="ph1">&lt;xref:System.Environment.UserName%2A&gt;</ph>屬性會傳回目前使用者的名稱。</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.UserName">
          <source>In a published ASP.NET application, this property returns the name of the application pool account (such as Default AppPool).</source>
          <target state="translated">在已發行的 ASP.NET 應用程式，這個屬性會傳回應用程式集區帳戶 （例如預設應用程式集區） 的名稱。</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.UserName">
          <source>The following example displays the user name of the person who started the current thread.</source>
          <target state="translated">下列範例會顯示啟動目前的執行緒之人員的使用者名稱。</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.UserName">
          <source>for read access to the USERNAME environment variable.</source>
          <target state="translated">針對使用者名稱的環境變數的讀取權限。</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.UserName">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" uid="P:System.Environment.Version">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object that describes the major, minor, build, and revision numbers of the common language runtime.</source>
          <target state="translated">取得描述通用語言執行平台的主要、次要、組建 (Build) 和修訂編號的 <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.Version">
          <source>An object that displays the version of the common language runtime.</source>
          <target state="translated">顯示 Common Language Runtime 版本的物件。</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.Version">
          <source>For the .NET Framework Versions 4, 4.5, 4.5.1, and 4.5.2, the <ph id="ph1">&lt;xref:System.Environment.Version%2A?displayProperty=nameWithType&gt;</ph> property returns a <ph id="ph2">&lt;xref:System.Version&gt;</ph> object whose string representation has the form <ph id="ph3">`4.0.30319.xxxxx`</ph>.</source>
          <target state="translated">針對 .NET Framework 4、4.5、4.5.1 和 4.5.2 版，<ph id="ph1">&lt;xref:System.Environment.Version%2A?displayProperty=nameWithType&gt;</ph> 屬性會傳回 <ph id="ph2">&lt;xref:System.Version&gt;</ph> 物件，其字串表示的格式為 <ph id="ph3">`4.0.30319.xxxxx`</ph>。</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.Version">
          <source>For the .NET Framework 4.6 and later versions, it has the form <ph id="ph1">`4.0.30319.42000`</ph>.</source>
          <target state="translated">在.NET Framework 4.6 和更新版本，它有表單<ph id="ph1">`4.0.30319.42000`</ph>。</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.Version">
          <source>For the <ph id="ph1">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph> and later, we do not recommend using the <ph id="ph2">&lt;xref:System.Environment.Version%2A&gt;</ph> property to detect the version of the runtime; instead, you can determine the version of the common language runtime by querying the registry.</source>
          <target state="translated">如<ph id="ph1">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>和更新版本中，我們不建議使用<ph id="ph2">&lt;xref:System.Environment.Version%2A&gt;</ph>無法偵測到的執行階段則版本屬性相反地，您可以藉由查詢登錄判斷 common language runtime 的版本。</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.Version">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Determine Which .NET Framework Versions Are Installed<ept id="p1">](~/docs/framework/migration-guide/how-to-determine-which-versions-are-installed.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>How to： 判斷安裝的.NET Framework 版本是<ept id="p1">](~/docs/framework/migration-guide/how-to-determine-which-versions-are-installed.md)</ept>。</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.Version">
          <source>For more information about the version of the common language runtime that is installed with each version of the .NET Framework, see <bpt id="p1">[</bpt>Versions and Dependencies<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</source>
          <target state="translated">如需安裝.NET Framework 的每個版本的 common language runtime 版本的詳細資訊，請參閱<bpt id="p1">[</bpt>版本和相依性<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>。</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.Version">
          <source>The following example displays the version of the common language runtime.</source>
          <target state="translated">下列範例顯示 common language runtime 的版本。</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.Version">
          <source>(The version is omitted from the example output for security reasons.)</source>
          <target state="translated">（基於安全性理由，範例輸出中會省略版本）。</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" uid="P:System.Environment.WorkingSet">
          <source>Gets the amount of physical memory mapped to the process context.</source>
          <target state="translated">取得對應至處理程序內容的實體記憶體數量。</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.WorkingSet">
          <source>A 64-bit signed integer containing the number of bytes of physical memory mapped to the process context.</source>
          <target state="translated">64 位元帶正負號的整數，包含對應至處理程序內容的實體記憶體位元組數目。</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.WorkingSet">
          <source>The following example displays the size of the working set of the computer that runs the code example.</source>
          <target state="translated">下列範例會顯示執行程式碼範例的電腦的工作集大小。</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.WorkingSet">
          <source>for full access to the resource protected by this permission.</source>
          <target state="translated">此權限所保護的資源的完整存取權。</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.WorkingSet">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>