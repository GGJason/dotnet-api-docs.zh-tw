<Type Name="AttributeUsageAttribute" FullName="System.AttributeUsageAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5aa8a678ded4e630cc838a54492c69dd7bbb5739" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36433317" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class AttributeUsageAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit AttributeUsageAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.AttributeUsageAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AttributeUsageAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class AttributeUsageAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type AttributeUsageAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class, Inherited=true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="06cc3-101">指定另一個屬性類別的使用方式。</span>
      <span class="sxs-lookup">
        <span data-stu-id="06cc3-101">Specifies the usage of another attribute class.</span>
      </span>
      <span data-ttu-id="06cc3-102">這個類別無法被繼承。</span>
      <span class="sxs-lookup">
        <span data-stu-id="06cc3-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06cc3-103">在您要定義您自己的屬性類別，您可以控制它會使用所放置的方式<xref:System.AttributeUsageAttribute>屬性類別上。</span><span class="sxs-lookup"><span data-stu-id="06cc3-103">When you are defining your own attribute class, you can control the manner in which it is used by placing an <xref:System.AttributeUsageAttribute> on your attribute class.</span></span> <span data-ttu-id="06cc3-104">指定的屬性類別必須衍生自<xref:System.Attribute>，直接或間接。</span><span class="sxs-lookup"><span data-stu-id="06cc3-104">The indicated attribute class must derive from <xref:System.Attribute>, either directly or indirectly.</span></span>  
  
 <span data-ttu-id="06cc3-105">屬性的類別有位置和具名參數。</span><span class="sxs-lookup"><span data-stu-id="06cc3-105">Attribute classes have positional and named parameters.</span></span> <span data-ttu-id="06cc3-106">每個公用屬性類別的建構函式會定義該類別的位置參數的有效順序。</span><span class="sxs-lookup"><span data-stu-id="06cc3-106">Each public constructor for an attribute class defines a valid sequence of positional parameters for that class.</span></span> <span data-ttu-id="06cc3-107">具名的參數定義的非靜態、 公用和讀寫的欄位或屬性類別的屬性。</span><span class="sxs-lookup"><span data-stu-id="06cc3-107">Named parameters are defined by the non-static, public, and read-write fields or properties of the attribute class.</span></span>  
  
 <span data-ttu-id="06cc3-108">三個屬性的<xref:System.AttributeUsageAttribute>吺藉由定義下列參數：</span><span class="sxs-lookup"><span data-stu-id="06cc3-108">The three properties of <xref:System.AttributeUsageAttribute> are set by defining the following parameters:</span></span>  
  
-   <xref:System.AttributeUsageAttribute.ValidOn%2A>  
  
 <span data-ttu-id="06cc3-109">此位置參數會指定可以置於所指出的屬性的程式項目。</span><span class="sxs-lookup"><span data-stu-id="06cc3-109">This positional parameter specifies the program elements that the indicated attribute can be placed on.</span></span> <span data-ttu-id="06cc3-110">所有可能的項目將屬性放在一組會列在<xref:System.AttributeTargets>列舉型別。</span><span class="sxs-lookup"><span data-stu-id="06cc3-110">The set of all possible elements that you can place an attribute on is listed in the <xref:System.AttributeTargets> enumeration.</span></span> <span data-ttu-id="06cc3-111">您可以結合數個<xref:System.AttributeTargets>值使用的位元 OR 運算，以取得有效的程式元素的所需的組合。</span><span class="sxs-lookup"><span data-stu-id="06cc3-111">You can combine several <xref:System.AttributeTargets> values using a bitwise OR operation to get the desired combination of valid program elements.</span></span>  
  
-   <xref:System.AttributeUsageAttribute.AllowMultiple%2A>  
  
 <span data-ttu-id="06cc3-112">此具名的參數會指定所指出的屬性是否可以多次指定的程式項目指定。</span><span class="sxs-lookup"><span data-stu-id="06cc3-112">This named parameter specifies whether the indicated attribute can be specified more than once for a given program element.</span></span>  
  
-   <xref:System.AttributeUsageAttribute.Inherited%2A>  
  
 <span data-ttu-id="06cc3-113">此具名的參數會指定所指出的屬性是否可以繼承的衍生的類別並覆寫的成員。</span><span class="sxs-lookup"><span data-stu-id="06cc3-113">This named parameter specifies whether the indicated attribute can be inherited by derived classes and overriding members.</span></span>  
  
 <span data-ttu-id="06cc3-114">如需屬性用法的詳細資訊，請參閱<xref:System.Attribute>和[屬性](~/docs/standard/attributes/index.md)。</span><span class="sxs-lookup"><span data-stu-id="06cc3-114">For more information about using attributes, see <xref:System.Attribute> and [Attributes](~/docs/standard/attributes/index.md).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Attribute" />
    <altmember cref="T:System.AttributeTargets" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AttributeUsageAttribute (AttributeTargets validOn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.AttributeTargets validOn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AttributeUsageAttribute.#ctor(System.AttributeTargets)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (validOn As AttributeTargets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AttributeUsageAttribute(AttributeTargets validOn);" />
      <MemberSignature Language="F#" Value="new AttributeUsageAttribute : AttributeTargets -&gt; AttributeUsageAttribute" Usage="new System.AttributeUsageAttribute validOn" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="validOn" Type="System.AttributeTargets" />
      </Parameters>
      <Docs>
        <param name="validOn">
          <span data-ttu-id="06cc3-115">使用位元的 OR 運算所結合的數值集，用來指示那個程式項目有效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06cc3-115">The set of values combined using a bitwise OR operation to indicate which program elements are valid.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="06cc3-116">使用指定的 <see cref="T:System.AttributeUsageAttribute" /> 清單、<see cref="T:System.AttributeTargets" /> 值和 <see cref="P:System.AttributeUsageAttribute.AllowMultiple" /> 值，初始化 <see cref="P:System.AttributeUsageAttribute.Inherited" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06cc3-116">Initializes a new instance of the <see cref="T:System.AttributeUsageAttribute" /> class with the specified list of <see cref="T:System.AttributeTargets" />, the <see cref="P:System.AttributeUsageAttribute.AllowMultiple" /> value, and the <see cref="P:System.AttributeUsageAttribute.Inherited" /> value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06cc3-117">您可以結合數個<xref:System.AttributeTargets>值使用的位元 OR 運算，以取得有效的程式元素的所需的組合。</span><span class="sxs-lookup"><span data-stu-id="06cc3-117">You can combine several <xref:System.AttributeTargets> values using a bitwise OR operation to get the desired combination of valid program elements.</span></span>  
  
 <span data-ttu-id="06cc3-118">如需預設屬性值，請參閱<xref:System.AttributeUsageAttribute.ValidOn%2A>， <xref:System.AttributeUsageAttribute.AllowMultiple%2A>，和<xref:System.AttributeUsageAttribute.Inherited%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="06cc3-118">For default property values, see the <xref:System.AttributeUsageAttribute.ValidOn%2A>, <xref:System.AttributeUsageAttribute.AllowMultiple%2A>, and <xref:System.AttributeUsageAttribute.Inherited%2A> properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06cc3-119">DispId 屬性定義說明如何使用位元 OR 運算結合數個<xref:System.AttributeTargets>值。</span><span class="sxs-lookup"><span data-stu-id="06cc3-119">The definition of the DispId attribute illustrates the use of a bitwise OR operation to combine several <xref:System.AttributeTargets> values.</span></span>  
  
 [!code-cpp[Classic AttributeUsageAttribute.AttributeUsageAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic AttributeUsageAttribute.AttributeUsageAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic AttributeUsageAttribute.AttributeUsageAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic AttributeUsageAttribute.AttributeUsageAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic AttributeUsageAttribute.AttributeUsageAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic AttributeUsageAttribute.AttributeUsageAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.AttributeTargets" />
      </Docs>
    </Member>
    <Member MemberName="AllowMultiple">
      <MemberSignature Language="C#" Value="public bool AllowMultiple { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowMultiple" />
      <MemberSignature Language="DocId" Value="P:System.AttributeUsageAttribute.AllowMultiple" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowMultiple As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowMultiple { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowMultiple : bool with get, set" Usage="System.AttributeUsageAttribute.AllowMultiple" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="06cc3-120">取得或設定布林值 (Boolean)，指出所指定屬性的幾個執行個體能否指定給單一程式項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06cc3-120">Gets or sets a Boolean value indicating whether more than one instance of the indicated attribute can be specified for a single program element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="06cc3-121">如果允許指定一個以上的執行個體，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06cc3-121">
              <see langword="true" /> if more than one instance is allowed to be specified; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="06cc3-122">預設值為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06cc3-122">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06cc3-123">指定的程式項目一次以上的屬性稱為多次使用屬性。</span><span class="sxs-lookup"><span data-stu-id="06cc3-123">An attribute that can be specified more than once for a program element is called a multi-use attribute.</span></span> <span data-ttu-id="06cc3-124">您可以一次指定的屬性稱為單次用途屬性。</span><span class="sxs-lookup"><span data-stu-id="06cc3-124">An attribute that can be specified only once is called a single-use attribute.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName="Inherited">
      <MemberSignature Language="C#" Value="public bool Inherited { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Inherited" />
      <MemberSignature Language="DocId" Value="P:System.AttributeUsageAttribute.Inherited" />
      <MemberSignature Language="VB.NET" Value="Public Property Inherited As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Inherited { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Inherited : bool with get, set" Usage="System.AttributeUsageAttribute.Inherited" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="06cc3-125">取得或設定 <see cref="T:System.Boolean" /> 值，判斷指示的屬性是否由衍伸類別繼承並覆寫成員。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06cc3-125">Gets or sets a <see cref="T:System.Boolean" /> value that determines whether the indicated attribute is inherited by derived classes and overriding members.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="06cc3-126">如果屬性可以由衍伸類別繼承並覆寫成員，則為 <see langword="true" />；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06cc3-126">
              <see langword="true" /> if the attribute can be inherited by derived classes and overriding members; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="06cc3-127">預設值為 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06cc3-127">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06cc3-128"><xref:System.AttributeUsageAttribute.Inherited%2A>屬性會決定：</span><span class="sxs-lookup"><span data-stu-id="06cc3-128">The <xref:System.AttributeUsageAttribute.Inherited%2A> property determines:</span></span>  
  
-   <span data-ttu-id="06cc3-129">類別是否衍生自基底類別加上的屬性<xref:System.AttributeUsageAttribute>屬性會套用該屬性的繼承。</span><span class="sxs-lookup"><span data-stu-id="06cc3-129">Whether classes derived from a base class tagged with the attribute to which the <xref:System.AttributeUsageAttribute> attribute is applied inherit that attribute.</span></span>  
  
-   <span data-ttu-id="06cc3-130">是否方法的衍生類別覆寫基底類別方法加上的屬性<xref:System.AttributeUsageAttribute>屬性會套用該屬性的繼承。</span><span class="sxs-lookup"><span data-stu-id="06cc3-130">Whether methods of derived classes that override a base class method tagged with the attribute to which the <xref:System.AttributeUsageAttribute> attribute is applied inherit that attribute.</span></span>  <span data-ttu-id="06cc3-131">（如果類別繼承的基底類別成員，它也會繼承任何套用至該成員的屬性。）</span><span class="sxs-lookup"><span data-stu-id="06cc3-131">(If a class inherits a base class member, it also inherits any attributes applied to that member.)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06cc3-132">下列範例說明的屬性之間的差異<xref:System.AttributeUsageAttribute>屬性附帶<xref:System.AttributeUsageAttribute.Inherited%2A>屬性值為`true`套用，另一個要<xref:System.AttributeUsageAttribute>屬性附帶<xref:System.AttributeUsageAttribute.Inherited%2A>屬性值`false`套用。</span><span class="sxs-lookup"><span data-stu-id="06cc3-132">The following example illustrates the difference between an attribute to which an <xref:System.AttributeUsageAttribute> attribute with an <xref:System.AttributeUsageAttribute.Inherited%2A> property value of `true` is applied and one to which  <xref:System.AttributeUsageAttribute> attribute with an <xref:System.AttributeUsageAttribute.Inherited%2A> property value of `false` is applied .</span></span> <span data-ttu-id="06cc3-133">此範例會定義兩個屬性，`InheritedAttribute`和`NotInheritedAttribute`。</span><span class="sxs-lookup"><span data-stu-id="06cc3-133">The example defines two attributes, `InheritedAttribute` and `NotInheritedAttribute`.</span></span> <span data-ttu-id="06cc3-134">這兩個屬性可以套用至類別和方法。</span><span class="sxs-lookup"><span data-stu-id="06cc3-134">Both attributes can apply to classes and methods.</span></span> <span data-ttu-id="06cc3-135">因為<xref:System.AttributeUsageAttribute.Inherited%2A>屬性<xref:System.AttributeUsageAttribute>屬性套用至`InheritedAttribute`是`true`，衍生類別繼承的成員的衍生類別覆寫基底類別方法。</span><span class="sxs-lookup"><span data-stu-id="06cc3-135">Because the <xref:System.AttributeUsageAttribute.Inherited%2A> property of the <xref:System.AttributeUsageAttribute> attribute applied to `InheritedAttribute` is `true`, it is inherited by derived classes and the members of derived classes that override the base class method.</span></span>  <span data-ttu-id="06cc3-136">相反地，因為<xref:System.AttributeUsageAttribute.Inherited%2A>屬性<xref:System.AttributeUsageAttribute>屬性套用至`NotInheritedAttribute`是`false`，它不會由衍生類別繼承的成員的衍生類別覆寫基底類別方法。</span><span class="sxs-lookup"><span data-stu-id="06cc3-136">On the other hand, because the <xref:System.AttributeUsageAttribute.Inherited%2A> property of the <xref:System.AttributeUsageAttribute> attribute applied to `NotInheritedAttribute` is `false`, it is not inherited by derived classes and the members of derived classes that override the base class method.</span></span>  
  
 [!code-csharp[System.AttributeUsageAttribute.Inherited#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.AttributeUsageAttribute.Inherited/cs/Inherited1.cs#1)]
 [!code-vb[System.AttributeUsageAttribute.Inherited#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.AttributeUsageAttribute.Inherited/vb/Inherited1.vb#1)]  
  
 <span data-ttu-id="06cc3-137">然後此範例會定義兩個基底類別。</span><span class="sxs-lookup"><span data-stu-id="06cc3-137">The example then defines two  base classes.</span></span> <span data-ttu-id="06cc3-138">首先， `BaseA`，具有單一方法`MethodA`。</span><span class="sxs-lookup"><span data-stu-id="06cc3-138">The first, `BaseA`, has a single method, `MethodA`.</span></span>  <span data-ttu-id="06cc3-139">第二個， `BaseB`，具有單一方法`MethodB`。</span><span class="sxs-lookup"><span data-stu-id="06cc3-139">The second, `BaseB`, has a single method, `MethodB`.</span></span> <span data-ttu-id="06cc3-140">`BaseA` 和`MethodA`都會加上`InheritedAttribute`屬性，以及`BaseB`和`MethodB`都會加上`NotInheritedAttribute`屬性。</span><span class="sxs-lookup"><span data-stu-id="06cc3-140">`BaseA` and `MethodA` are tagged with the `InheritedAttribute` attribute, and `BaseB` and `MethodB` are tagged with the `NotInheritedAttribute` attribute.</span></span> <span data-ttu-id="06cc3-141">`DerivedA` 繼承自`BaseA`和覆寫其`MethodA`方法。</span><span class="sxs-lookup"><span data-stu-id="06cc3-141">`DerivedA` inherits from `BaseA` and overrides its `MethodA` method.</span></span> <span data-ttu-id="06cc3-142">`DerivedB` 繼承自`BaseB`和覆寫其`MethodB`方法。</span><span class="sxs-lookup"><span data-stu-id="06cc3-142">`DerivedB` inherits from `BaseB` and overrides its `MethodB` method.</span></span>  
  
 [!code-csharp[System.AttributeUsageAttribute.Inherited#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.AttributeUsageAttribute.Inherited/cs/Inherited1.cs#2)]
 [!code-vb[System.AttributeUsageAttribute.Inherited#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.AttributeUsageAttribute.Inherited/vb/Inherited1.vb#2)]  
  
 <span data-ttu-id="06cc3-143">做為範例所示，從輸出`DerivedA`和`DerivedA.MethodA`繼承`InheritedAttribute`屬性，但`DerivedB`和`DerivedB.MethodB`不會繼承`NotInheritedAttribute`屬性。</span><span class="sxs-lookup"><span data-stu-id="06cc3-143">As the output from the example shows, `DerivedA` and `DerivedA.MethodA` inherit the `InheritedAttribute` attribute, but `DerivedB` and `DerivedB.MethodB` do not inherit the `NotInheritedAttribute` attribute.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName="ValidOn">
      <MemberSignature Language="C#" Value="public AttributeTargets ValidOn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.AttributeTargets ValidOn" />
      <MemberSignature Language="DocId" Value="P:System.AttributeUsageAttribute.ValidOn" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValidOn As AttributeTargets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property AttributeTargets ValidOn { AttributeTargets get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidOn : AttributeTargets" Usage="System.AttributeUsageAttribute.ValidOn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AttributeTargets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="06cc3-144">取得一組數值，辨識哪些程式項目可套用所指定的屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06cc3-144">Gets a set of values identifying which program elements that the indicated attribute can be applied to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="06cc3-145">一個或多個 <see cref="T:System.AttributeTargets" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06cc3-145">One or several <see cref="T:System.AttributeTargets" /> values.</span>
          </span>
          <span data-ttu-id="06cc3-146">預設值為 <see langword="All" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06cc3-146">The default is <see langword="All" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.AttributeTargets" />
      </Docs>
    </Member>
  </Members>
</Type>