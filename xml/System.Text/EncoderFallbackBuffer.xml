<Type Name="EncoderFallbackBuffer" FullName="System.Text.EncoderFallbackBuffer">
  <TypeSignature Language="C#" Value="public abstract class EncoderFallbackBuffer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit EncoderFallbackBuffer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Text.EncoderFallbackBuffer" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class EncoderFallbackBuffer" />
  <TypeSignature Language="C++ CLI" Value="public ref class EncoderFallbackBuffer abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="5fd78-101">提供緩衝區，允許後援處理常式在無法編碼輸入字元時，將替代字串傳回至編碼器。</span><span class="sxs-lookup"><span data-stu-id="5fd78-101">Provides a buffer that allows a fallback handler to return an alternate string to an encoder when it cannot encode an input character.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5fd78-102">編碼方式定義的 Unicode 字元編碼的位元組序列之間的對應。</span><span class="sxs-lookup"><span data-stu-id="5fd78-102">An encoding defines a mapping between a Unicode character and an encoded sequence of bytes.</span></span> <span data-ttu-id="5fd78-103">如果未定義對應特定字元，編碼作業，它會將輸入的字元轉換成輸出位元組序列，將會失敗。</span><span class="sxs-lookup"><span data-stu-id="5fd78-103">An encoding operation, which converts an input character to an output byte sequence, fails if no mapping is defined for a particular character.</span></span>  
  
 <span data-ttu-id="5fd78-104">.NET Framework 會提供失敗處理機制，稱為後援，如果無法執行轉換。</span><span class="sxs-lookup"><span data-stu-id="5fd78-104">The .NET Framework provides a failure handling mechanism, called a fallback, if a conversion cannot be performed.</span></span> <span data-ttu-id="5fd78-105">所有的編碼器後援處理常式必須實作下列各項：</span><span class="sxs-lookup"><span data-stu-id="5fd78-105">All encoder fallback handlers must implement the following:</span></span>  
  
-   <span data-ttu-id="5fd78-106">編碼器後援，表示由類別衍生自<xref:System.Text.EncoderFallback>類別。</span><span class="sxs-lookup"><span data-stu-id="5fd78-106">An encoder fallback, which is represented by a class derived from the <xref:System.Text.EncoderFallback> class.</span></span>  
  
-   <span data-ttu-id="5fd78-107">編碼器後援緩衝區，衍生的類型由<xref:System.Text.EncoderFallbackBuffer>類別可以傳回字串的轉換作業。</span><span class="sxs-lookup"><span data-stu-id="5fd78-107">An encoder fallback buffer, which is represented by a type derived from the <xref:System.Text.EncoderFallbackBuffer> class that can return a string to the conversion operation.</span></span>  
  
 <span data-ttu-id="5fd78-108">後援可以使用三種策略來處理轉換失敗：</span><span class="sxs-lookup"><span data-stu-id="5fd78-108">Fallbacks can use three strategies to handle conversion failures:</span></span>  
  
-   <span data-ttu-id="5fd78-109">自動調整的對應。</span><span class="sxs-lookup"><span data-stu-id="5fd78-109">Best-fit mapping.</span></span> <span data-ttu-id="5fd78-110">編碼器後援緩衝區可以傳回字串，表示輸入字元的近似值。</span><span class="sxs-lookup"><span data-stu-id="5fd78-110">The encoder fallback buffer can return a string that represents a close approximation to the input character.</span></span> <span data-ttu-id="5fd78-111">.NET Framework 並未提供最適合的公用<xref:System.Text.EncoderFallbackBuffer>實作。</span><span class="sxs-lookup"><span data-stu-id="5fd78-111">The .NET Framework does not provide a public best-fit <xref:System.Text.EncoderFallbackBuffer> implementation.</span></span>  
  
-   <span data-ttu-id="5fd78-112">取代。</span><span class="sxs-lookup"><span data-stu-id="5fd78-112">Replacement.</span></span> <span data-ttu-id="5fd78-113">編碼器後援緩衝區可以傳回的字串，例如問號 (「？ 」)，指出無法編碼的字元。</span><span class="sxs-lookup"><span data-stu-id="5fd78-113">The encoder fallback buffer can return a string, such as a question mark ("?"), that indicates that a character could not be encoded.</span></span> <span data-ttu-id="5fd78-114">在.NET Framework 中，<xref:System.Text.EncoderReplacementFallback>和<xref:System.Text.EncoderReplacementFallbackBuffer>類別提供公用取代後援緩衝區實作。</span><span class="sxs-lookup"><span data-stu-id="5fd78-114">In the .NET Framework, the <xref:System.Text.EncoderReplacementFallback> and <xref:System.Text.EncoderReplacementFallbackBuffer> classes provide a public replacement fallback buffer implementation.</span></span> <span data-ttu-id="5fd78-115">建構函式<xref:System.Text.EncoderReplacementFallback>類別可讓您定義的取代字串。</span><span class="sxs-lookup"><span data-stu-id="5fd78-115">The constructor of the <xref:System.Text.EncoderReplacementFallback> class enables you to define the replacement string.</span></span>  
  
-   <span data-ttu-id="5fd78-116">例外狀況。</span><span class="sxs-lookup"><span data-stu-id="5fd78-116">Exception.</span></span> <span data-ttu-id="5fd78-117"><xref:System.Text.EncoderFallbackBuffer>實作會擲回的例外狀況，指出無法編碼字元，並終止編碼作業。</span><span class="sxs-lookup"><span data-stu-id="5fd78-117">The <xref:System.Text.EncoderFallbackBuffer> implementation throws an exception, which indicates that a character cannot be encoded, and terminates the encoding operation.</span></span> <span data-ttu-id="5fd78-118">在此情況下，後援處理常式必須提供<xref:System.Text.EncoderFallbackBuffer>實作中，雖然它不會傳回至編碼器的字串。</span><span class="sxs-lookup"><span data-stu-id="5fd78-118">In this case, the fallback handler must provide an <xref:System.Text.EncoderFallbackBuffer> implementation, although it does not return a string to the encoder.</span></span> <span data-ttu-id="5fd78-119">在.NET Framework 中，<xref:System.Text.EncoderExceptionFallback>和<xref:System.Text.EncoderExceptionFallbackBuffer>類別提供的公用例外狀況後援實作會擲回<xref:System.Text.EncoderFallbackException>無法編碼字元時。</span><span class="sxs-lookup"><span data-stu-id="5fd78-119">In the .NET Framework, the <xref:System.Text.EncoderExceptionFallback> and <xref:System.Text.EncoderExceptionFallbackBuffer> classes provide a public exception fallback implementation that throws an <xref:System.Text.EncoderFallbackException> when a character cannot be encoded.</span></span>  
  
 <span data-ttu-id="5fd78-120">在緩衝區<xref:System.Text.EncoderFallbackBuffer>實作代表整個字串傳回至編碼器的回應中的編碼器後援。</span><span class="sxs-lookup"><span data-stu-id="5fd78-120">The buffer in an <xref:System.Text.EncoderFallbackBuffer> implementation represents the entire string to be returned to the encoder in response to an encoder fallback.</span></span> <span data-ttu-id="5fd78-121">一般而言，實作也包含狀態資訊，例如若要返回的編碼器，以及剩餘的字元數傳回的下一個字元索引。</span><span class="sxs-lookup"><span data-stu-id="5fd78-121">Generally, implementations also include state information, such as the index of the next character to return to the encoder and the number of remaining characters to be returned.</span></span> <span data-ttu-id="5fd78-122">因為<xref:System.Text.EncoderFallbackBuffer>是抽象類別，它需要在衍生的類別以實作至少下列成員：</span><span class="sxs-lookup"><span data-stu-id="5fd78-122">Because <xref:System.Text.EncoderFallbackBuffer> is an abstract class, it requires derived classes to implement the following members at a minimum:</span></span>  
  
-   <span data-ttu-id="5fd78-123">多載<xref:System.Text.EncoderFallbackBuffer.Fallback%2A>編碼器無法編碼字元時所呼叫的方法。</span><span class="sxs-lookup"><span data-stu-id="5fd78-123">The overloaded <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> method, which is called by the encoder when it cannot encode a character.</span></span> <span data-ttu-id="5fd78-124">編碼器會將兩項資訊傳遞給後援緩衝區實作： 的字元或無法編碼的 surrogate 字組與輸入中字元的索引。</span><span class="sxs-lookup"><span data-stu-id="5fd78-124">The encoder passes two pieces of information to the fallback buffer implementation: the character or surrogate pair that could not be encoded and the index of the character in the input.</span></span> <span data-ttu-id="5fd78-125">編碼器後援例外狀況處理常式，在此方法中擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="5fd78-125">In an encoder fallback exception handler, the exception is thrown in this method.</span></span> <span data-ttu-id="5fd78-126">否則，方法會傳回`true`提供後援，或`false`如果不存在。</span><span class="sxs-lookup"><span data-stu-id="5fd78-126">Otherwise, the method returns `true` if it provides a fallback, or `false` if it does not.</span></span>  
  
-   <span data-ttu-id="5fd78-127"><xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A>方法，會重複呼叫 encoder 如果<xref:System.Text.EncoderFallbackBuffer.Fallback%2A>方法會傳回`true`。</span><span class="sxs-lookup"><span data-stu-id="5fd78-127">The <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> method, which is called repeatedly by the encoder if the <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> method returns `true`.</span></span> <span data-ttu-id="5fd78-128">在後續呼叫中，此處理常式應該會傳回在其緩衝區中的每個字元。</span><span class="sxs-lookup"><span data-stu-id="5fd78-128">In successive calls, the handler should return each character in its buffer.</span></span> <span data-ttu-id="5fd78-129">當它傳回的所有字元時，則會傳回 U + 0000。</span><span class="sxs-lookup"><span data-stu-id="5fd78-129">When it has returned all characters, it should return U+0000.</span></span> <span data-ttu-id="5fd78-130">例外狀況處理常式會一律傳回 U + 0000。</span><span class="sxs-lookup"><span data-stu-id="5fd78-130">An exception handler always returns U+0000.</span></span>  
  
-   <span data-ttu-id="5fd78-131"><xref:System.Text.EncoderFallbackBuffer.MovePrevious%2A>方法，它會嘗試將指標移至緩衝區中的前一個位置，並指出移動是否成功。</span><span class="sxs-lookup"><span data-stu-id="5fd78-131">The <xref:System.Text.EncoderFallbackBuffer.MovePrevious%2A> method, which tries to move the pointer to the previous position in the buffer and indicates whether the move was successful.</span></span> <span data-ttu-id="5fd78-132">例外狀況處理常式會一律傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="5fd78-132">An exception handler always returns `false`.</span></span>  
  
-   <span data-ttu-id="5fd78-133"><xref:System.Text.EncoderFallbackBuffer.Remaining%2A>屬性，指出要傳回至編碼器的剩餘字元數。</span><span class="sxs-lookup"><span data-stu-id="5fd78-133">The <xref:System.Text.EncoderFallbackBuffer.Remaining%2A> property, which indicates the number of remaining characters to be returned to the encoder.</span></span> <span data-ttu-id="5fd78-134">例外狀況後援處理常式一律會傳回零。</span><span class="sxs-lookup"><span data-stu-id="5fd78-134">An exception fallback handler always returns zero.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.EncoderFallback" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EncoderFallbackBuffer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EncoderFallbackBuffer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5fd78-135">初始化 <see cref="T:System.Text.EncoderFallbackBuffer" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="5fd78-135">Initializes a new instance of the <see cref="T:System.Text.EncoderFallbackBuffer" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Fallback">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5fd78-136">指示在無法為原始輸入編碼時，是否可以使用替代字串，或者是否應該忽略原始輸入。</span><span class="sxs-lookup"><span data-stu-id="5fd78-136">Indicates whether a substitute string is available when the original input cannot be encoded, or whether the original input should be ignored.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Fallback">
      <MemberSignature Language="C#" Value="public abstract bool Fallback (char charUnknown, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Fallback(char charUnknown, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.Fallback(System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Fallback (charUnknown As Char, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Fallback(char charUnknown, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charUnknown" Type="System.Char" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charUnknown"><span data-ttu-id="5fd78-137">輸入字元。</span><span class="sxs-lookup"><span data-stu-id="5fd78-137">An input character.</span></span></param>
        <param name="index"><span data-ttu-id="5fd78-138">輸入緩衝區中字元的索引位置。</span><span class="sxs-lookup"><span data-stu-id="5fd78-138">The index position of the character in the input buffer.</span></span></param>
        <summary><span data-ttu-id="5fd78-139">在衍生類別中覆寫時，預備後援緩衝區來處理指定的輸入字元。</span><span class="sxs-lookup"><span data-stu-id="5fd78-139">When overridden in a derived class, prepares the fallback buffer to handle the specified input character.</span></span></summary>
        <returns>
          <span data-ttu-id="5fd78-140">如果後援緩衝區可以處理 <paramref name="charUnknown" />，則為 <see langword="true" />；如果後援緩衝區會忽略 <paramref name="charUnknown" />，則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5fd78-140"><see langword="true" /> if the fallback buffer can process <paramref name="charUnknown" />; <see langword="false" /> if the fallback buffer ignores <paramref name="charUnknown" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5fd78-141"><xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType>和<xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType>方法呼叫<xref:System.Text.DecoderFallbackBuffer.Fallback%28System.Byte%5B%5D%2CSystem.Int32%29>如果遇到未知的輸入的字元無法編碼。</span><span class="sxs-lookup"><span data-stu-id="5fd78-141">The <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> and <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> methods call <xref:System.Text.DecoderFallbackBuffer.Fallback%28System.Byte%5B%5D%2CSystem.Int32%29> if they encounter an unknown input character that cannot be encoded.</span></span> <span data-ttu-id="5fd78-142">傳回值為`true`指出後援緩衝區可以處理輸入的字元，就會導致呼叫的方法呼叫<xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A>方法，以取得每個後援緩衝區的字元。</span><span class="sxs-lookup"><span data-stu-id="5fd78-142">A return value of `true` indicates that the fallback buffer can process the input character, which causes the calling method to call the <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> method to obtain each character of the fallback buffer.</span></span> <span data-ttu-id="5fd78-143">因為它不會處理個別字元，<xref:System.Text.EncoderFallbackBuffer.Fallback%2A>例外狀況後援處理常式中的方法會擲回的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="5fd78-143">Because it does not process individual characters, the <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> method in an exception fallback handler throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Fallback">
      <MemberSignature Language="C#" Value="public abstract bool Fallback (char charUnknownHigh, char charUnknownLow, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Fallback(char charUnknownHigh, char charUnknownLow, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Fallback (charUnknownHigh As Char, charUnknownLow As Char, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Fallback(char charUnknownHigh, char charUnknownLow, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charUnknownHigh" Type="System.Char" />
        <Parameter Name="charUnknownLow" Type="System.Char" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charUnknownHigh"><span data-ttu-id="5fd78-144">輸入字組的高 Surrogate。</span><span class="sxs-lookup"><span data-stu-id="5fd78-144">The high surrogate of the input pair.</span></span></param>
        <param name="charUnknownLow"><span data-ttu-id="5fd78-145">輸入字組的低 Surrogate。</span><span class="sxs-lookup"><span data-stu-id="5fd78-145">The low surrogate of the input pair.</span></span></param>
        <param name="index"><span data-ttu-id="5fd78-146">輸入緩衝區中 Surrogate 字組的索引位置。</span><span class="sxs-lookup"><span data-stu-id="5fd78-146">The index position of the surrogate pair in the input buffer.</span></span></param>
        <summary><span data-ttu-id="5fd78-147">在衍生類別中覆寫時，預備後援緩衝區來處理指定的 Surrogate 字組。</span><span class="sxs-lookup"><span data-stu-id="5fd78-147">When overridden in a derived class, prepares the fallback buffer to handle the specified surrogate pair.</span></span></summary>
        <returns>
          <span data-ttu-id="5fd78-148">如果後援緩衝區可以處理 <paramref name="charUnknownHigh" /> 和 <paramref name="charUnknownLow" /> 則為 <see langword="true" />，如果後援緩衝區會忽略 Surrogate 字組則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5fd78-148"><see langword="true" /> if the fallback buffer can process <paramref name="charUnknownHigh" /> and <paramref name="charUnknownLow" />; <see langword="false" /> if the fallback buffer ignores the surrogate pair.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5fd78-149"><xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType>和<xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType>方法呼叫<xref:System.Text.EncoderFallbackBuffer.Fallback%28System.Char%2CSystem.Char%2CSystem.Int32%29>如果遇到其輸入中的 surrogate 字組。</span><span class="sxs-lookup"><span data-stu-id="5fd78-149">The <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> and <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> methods call <xref:System.Text.EncoderFallbackBuffer.Fallback%28System.Char%2CSystem.Char%2CSystem.Int32%29> if they encounter a surrogate pair in their input.</span></span> <span data-ttu-id="5fd78-150">傳回值為`true`指出後援緩衝區可以處理 surrogate 字組，這會呼叫的方法呼叫<xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A>方法，以取得每個後援緩衝區的字元。</span><span class="sxs-lookup"><span data-stu-id="5fd78-150">A return value of `true` indicates that the fallback buffer can process the surrogate pair, which causes the calling method to call the <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> method to obtain each character of the fallback buffer.</span></span>  <span data-ttu-id="5fd78-151">因為它不會處理個別字元，<xref:System.Text.EncoderFallbackBuffer.Fallback%2A>例外狀況後援處理常式中的方法會擲回的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="5fd78-151">Because it does not process individual characters, the <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> method in an exception fallback handler throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNextChar">
      <MemberSignature Language="C#" Value="public abstract char GetNextChar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance char GetNextChar() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.GetNextChar" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetNextChar () As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract char GetNextChar();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5fd78-152">在衍生類別中覆寫時，擷取後援緩衝區中的下一個字元。</span><span class="sxs-lookup"><span data-stu-id="5fd78-152">When overridden in a derived class, retrieves the next character in the fallback buffer.</span></span></summary>
        <returns><span data-ttu-id="5fd78-153">後援緩衝區中的下一個字元。</span><span class="sxs-lookup"><span data-stu-id="5fd78-153">The next character in the fallback buffer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5fd78-154">編碼作業呼叫<xref:System.Text.EncoderFallbackBuffer.Fallback%2A>如果作業遇到未知的字元或 surrogate 字組，在輸入中的方法。</span><span class="sxs-lookup"><span data-stu-id="5fd78-154">An encoding operation calls the <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> method if the operation encounters an unknown character or surrogate pair in the input.</span></span> <span data-ttu-id="5fd78-155">例如，如果是取代後援，如果是<xref:System.Text.EncoderFallbackBuffer.Fallback%2A>方法會傳回`true`，替代字串存在，可以編碼而不是未知的輸入。</span><span class="sxs-lookup"><span data-stu-id="5fd78-155">For example, in the case of a replacement fallback, if the <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> method returns `true`, a substitute string exists that can be encoded instead of the unknown input.</span></span> <span data-ttu-id="5fd78-156">編碼作業呼叫<xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A>方法重複，並取得一次的替代字串的一個字元。</span><span class="sxs-lookup"><span data-stu-id="5fd78-156">The encoding operation calls the <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> method repeatedly and obtains the substitute string one character at a time.</span></span> <span data-ttu-id="5fd78-157">當編碼器後援緩衝區中的所有字元都傳回<xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A>方法應傳回 U + 0000。</span><span class="sxs-lookup"><span data-stu-id="5fd78-157">When all characters in the fallback buffer have been returned to the encoder, the <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> method should return U+0000.</span></span>  
  
 <span data-ttu-id="5fd78-158">例外狀況後援處理常式，如<xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A>方法應傳回 U + 0000。</span><span class="sxs-lookup"><span data-stu-id="5fd78-158">For an exception fallback handler, the <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> method should return U+0000.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MovePrevious">
      <MemberSignature Language="C#" Value="public abstract bool MovePrevious ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MovePrevious() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.MovePrevious" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function MovePrevious () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool MovePrevious();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5fd78-159">在衍生類別中覆寫時，會使 <see cref="M:System.Text.EncoderFallbackBuffer.GetNextChar" /> 方法的下一個呼叫存取在目前字元位置之前的資料緩衝區字元位置。</span><span class="sxs-lookup"><span data-stu-id="5fd78-159">When overridden in a derived class, causes the next call to the <see cref="M:System.Text.EncoderFallbackBuffer.GetNextChar" /> method to access the data buffer character position that is prior to the current character position.</span></span></summary>
        <returns>
          <span data-ttu-id="5fd78-160">如果 <see cref="M:System.Text.EncoderFallbackBuffer.MovePrevious" /> 作業成功，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5fd78-160"><see langword="true" /> if the <see cref="M:System.Text.EncoderFallbackBuffer.MovePrevious" /> operation was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5fd78-161">例外狀況後援處理常式應該傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="5fd78-161">An exception fallback handler should return `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remaining">
      <MemberSignature Language="C#" Value="public abstract int Remaining { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Remaining" />
      <MemberSignature Language="DocId" Value="P:System.Text.EncoderFallbackBuffer.Remaining" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Remaining As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int Remaining { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5fd78-162">在衍生類別中覆寫時，於目前的 <see cref="T:System.Text.EncoderFallbackBuffer" /> 物件中取得仍要處理的字元數。</span><span class="sxs-lookup"><span data-stu-id="5fd78-162">When overridden in a derived class, gets the number of characters in the current <see cref="T:System.Text.EncoderFallbackBuffer" /> object that remain to be processed.</span></span></summary>
        <value><span data-ttu-id="5fd78-163">目前的後援緩衝區中尚未處理的字元數。</span><span class="sxs-lookup"><span data-stu-id="5fd78-163">The number of characters in the current fallback buffer that have not yet been processed.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5fd78-164"><xref:System.Text.EncoderFallbackBuffer.Fallback%2A>方法會傳回`true`如果<xref:System.Text.EncoderFallbackBuffer.Remaining%2A>是非零值。</span><span class="sxs-lookup"><span data-stu-id="5fd78-164">The <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> method returns `true` if <xref:System.Text.EncoderFallbackBuffer.Remaining%2A> is a nonzero value.</span></span>  
  
 <span data-ttu-id="5fd78-165">例外狀況後援處理常式，如<xref:System.Text.DecoderFallbackBuffer.Remaining%2A>方法應傳回零。</span><span class="sxs-lookup"><span data-stu-id="5fd78-165">For an exception fallback handler, the <xref:System.Text.DecoderFallbackBuffer.Remaining%2A> method should return zero.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public virtual void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5fd78-166">初始化與後援緩衝區有關的所有資料和狀態資訊。</span><span class="sxs-lookup"><span data-stu-id="5fd78-166">Initializes all data and state information pertaining to this fallback buffer.</span></span></summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="5fd78-167">在呼叫<see cref="M:System.Text.EncoderFallbackBuffer.Reset" />方法，<see cref="P:System.Text.EncoderFallbackBuffer.Remaining" />屬性應該會傳回 0，<see cref="M:System.Text.EncoderFallbackBuffer.GetNextChar" />方法應傳回 U + 0000，而<see cref="M:System.Text.EncoderFallbackBuffer.MovePrevious" />方法應傳回<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5fd78-167">After calling the <see cref="M:System.Text.EncoderFallbackBuffer.Reset" /> method, the <see cref="P:System.Text.EncoderFallbackBuffer.Remaining" /> property should return 0, the <see cref="M:System.Text.EncoderFallbackBuffer.GetNextChar" /> method should return U+0000, and the <see cref="M:System.Text.EncoderFallbackBuffer.MovePrevious" /> method should return <see langword="false" />.</span></span></para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>