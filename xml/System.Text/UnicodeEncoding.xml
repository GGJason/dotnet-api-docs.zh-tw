<Type Name="UnicodeEncoding" FullName="System.Text.UnicodeEncoding">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d1aa85b04a5602e384614a8d429b6d22f3d9ee9e" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52253153" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class UnicodeEncoding : System.Text.Encoding" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit UnicodeEncoding extends System.Text.Encoding" />
  <TypeSignature Language="DocId" Value="T:System.Text.UnicodeEncoding" />
  <TypeSignature Language="VB.NET" Value="Public Class UnicodeEncoding&#xA;Inherits Encoding" />
  <TypeSignature Language="C++ CLI" Value="public ref class UnicodeEncoding : System::Text::Encoding" />
  <TypeSignature Language="F#" Value="type UnicodeEncoding = class&#xA;    inherit Encoding" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Text.Encoding</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="4a3fb-101">代表 Unicode 字元的 UTF-16 編碼方式。</span>
      <span class="sxs-lookup">
        <span data-stu-id="4a3fb-101">Represents a UTF-16 encoding of Unicode characters.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a3fb-102">編碼是將一組 Unicode 字元轉換成位元組序列的處理程序。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-102">Encoding is the process of transforming a set of Unicode characters into a sequence of bytes.</span></span> <span data-ttu-id="4a3fb-103">解碼則是將編碼的位元組序列轉換成一組 Unicode 字元的程序。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-103">Decoding is the process of transforming a sequence of encoded bytes into a set of Unicode characters.</span></span>  
  
 <span data-ttu-id="4a3fb-104">[Unicode 標準](https://go.microsoft.com/fwlink/?linkid=37123)給每個支援的指令碼中的每個字元的字碼指標 （數字）。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-104">The [Unicode Standard](https://go.microsoft.com/fwlink/?linkid=37123) assigns a code point (a number) to each character in every supported script.</span></span> <span data-ttu-id="4a3fb-105">Unicode 轉換格式 (UTF) 是要編碼字碼指標的方法。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-105">A Unicode Transformation Format (UTF) is a way to encode that code point.</span></span> <span data-ttu-id="4a3fb-106">[Unicode 標準](https://go.microsoft.com/fwlink/?linkid=37123)會使用下列 UTFs:</span><span class="sxs-lookup"><span data-stu-id="4a3fb-106">The [Unicode Standard](https://go.microsoft.com/fwlink/?linkid=37123) uses the following UTFs:</span></span>  
  
-   <span data-ttu-id="4a3fb-107">Utf-8，用來將每個字碼指標表示成一連串的一到四個位元組。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-107">UTF-8, which represents each code point as a sequence of one to four bytes.</span></span>  
  
-   <span data-ttu-id="4a3fb-108">Utf-16，用來將每個字碼指標表示成一連串的一到兩個 16 位元整數。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-108">UTF-16, which represents each code point as a sequence of one to two 16-bit integers.</span></span>  
  
-   <span data-ttu-id="4a3fb-109">UTF-32，用來將每個字碼指標表示成 32 位元整數。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-109">UTF-32, which represents each code point as a 32-bit integer.</span></span>  
  
 <span data-ttu-id="4a3fb-110">如需有關 UTFs 和所支援其他編碼<xref:System.Text>，請參閱 < [.NET Framework 中的字元編碼](~/docs/standard/base-types/character-encoding.md)。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-110">For more information about the UTFs and other encodings supported by <xref:System.Text>, see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md).</span></span>  
  
 <span data-ttu-id="4a3fb-111"><xref:System.Text.UnicodeEncoding>類別代表以 utf-16 編碼方式。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-111">The <xref:System.Text.UnicodeEncoding> class represents a UTF-16 encoding.</span></span> <span data-ttu-id="4a3fb-112">編碼器可以使用任何位元組由大到小位元組順序 (最大顯著性位元組第一次) 或小小的位元組由小到大位元組順序 (最小顯著性位元組第一次)。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-112">The encoder can use either big endian byte order (most significant byte first) or little endian byte order (least significant byte first).</span></span> <span data-ttu-id="4a3fb-113">例如，（字碼指標 u+0041） 序列化為 Latin Capital Letter 如下 （以十六進位方式）：</span><span class="sxs-lookup"><span data-stu-id="4a3fb-113">For example, the Latin Capital Letter A (code point U+0041) is serialized as follows (in hexadecimal):</span></span>  
  
-   <span data-ttu-id="4a3fb-114">由大到小的位元組順序： 00 00 00 41</span><span class="sxs-lookup"><span data-stu-id="4a3fb-114">Big endian byte order: 00 00 00 41</span></span>  
  
-   <span data-ttu-id="4a3fb-115">一些位元組由小到大位元組順序： 41 00 00 00</span><span class="sxs-lookup"><span data-stu-id="4a3fb-115">Little endian byte order: 41 00 00 00</span></span>  
  
 <span data-ttu-id="4a3fb-116">它會儲存 Unicode 字元，使用特定的平台的原生的位元順序通常更有效率。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-116">It is generally more efficient to store Unicode characters using the native byte order of a particular platform.</span></span> <span data-ttu-id="4a3fb-117">比方說，最好使用位元組由小到大的位元組順序少位元組由小到大的平台，例如 Intel 的電腦上。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-117">For example, it is better to use the little endian byte order on little endian platforms, such as Intel computers.</span></span> <span data-ttu-id="4a3fb-118"><xref:System.Text.UnicodeEncoding>類別會對應到 Windows 字碼頁 1200 （少位元組由小到大位元組順序） 和 1201 （位元組由大到小位元組順序）。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-118">The <xref:System.Text.UnicodeEncoding> class corresponds to the Windows code pages 1200 (little endian byte order) and 1201 (big endian byte order).</span></span> <span data-ttu-id="4a3fb-119">您可以藉由呼叫來判斷 「 位元組序 」 的特定架構<xref:System.BitConverter.IsLittleEndian?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-119">You can determine the "endianness" of a particular architecture by calling the <xref:System.BitConverter.IsLittleEndian?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="4a3fb-120">（選擇性）<xref:System.Text.UnicodeEncoding>物件所提供的位元組順序標記 (BOM)，也就是可以加在編碼程序所產生的位元組序列的位元組陣列。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-120">Optionally, the <xref:System.Text.UnicodeEncoding> object provides a byte order mark (BOM), which is an array of bytes that can be prefixed to the sequence of bytes resulting from the encoding process.</span></span> <span data-ttu-id="4a3fb-121">如果前序編碼包含位元組順序標記 (BOM)，它可以協助判斷位元組順序的轉換格式或 UTF 解碼器。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-121">If the preamble contains a byte order mark (BOM), it helps the decoder determine the byte order and the transformation format or UTF.</span></span>  
  
 <span data-ttu-id="4a3fb-122">如果<xref:System.Text.UnicodeEncoding>執行個體已設定為提供 BOM，您可以呼叫來擷取<xref:System.Text.UnicodeEncoding.GetPreamble%2A>方法; 否則方法會傳回空陣列。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-122">If the <xref:System.Text.UnicodeEncoding> instance is configured to provide a BOM, you can retrieve it by calling the <xref:System.Text.UnicodeEncoding.GetPreamble%2A> method; otherwise, the method returns an empty array.</span></span> <span data-ttu-id="4a3fb-123">請注意，即使<xref:System.Text.UnicodeEncoding>BOM 支援使用者設定物件，您必須將編碼的位元組資料流，視需要; 開頭 BOM 編碼方式的<xref:System.Text.UnicodeEncoding>類別沒有這麼做會自動。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-123">Note that, even if a <xref:System.Text.UnicodeEncoding> object is configured for BOM support, you must include the BOM at the beginning of the encoded byte stream as appropriate; the encoding methods of the <xref:System.Text.UnicodeEncoding> class do not do this automatically.</span></span>  
  
 <span data-ttu-id="4a3fb-124">若要啟用錯誤偵測，並讓更安全的類別執行個體，您應該執行個體化<xref:System.Text.UnicodeEncoding>藉由呼叫物件<xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29>建構函式，並設定其`throwOnInvalidBytes`引數`true`。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-124">To enable error detection and to make the class instance more secure, you should instantiate a <xref:System.Text.UnicodeEncoding> object by calling the <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> constructor and setting its `throwOnInvalidBytes` argument to `true`.</span></span> <span data-ttu-id="4a3fb-125">使用錯誤偵測會偵測到無效的字元或位元組序列的方法會擲回<xref:System.ArgumentException>。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-125">With error detection, a method that detects an invalid sequence of characters or bytes throws a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="4a3fb-126">錯誤偵測，會擲回任何例外狀況，而不正確的順序通常會遭到忽略。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-126">Without error detection, no exception is thrown, and the invalid sequence is generally ignored.</span></span>  
  
 <span data-ttu-id="4a3fb-127">您可以具現化<xref:System.Text.UnicodeEncoding>數種方式，根據是否要給它提供位元組順序標記 (BOM)，是否要位元組由大到小或由小到大的編碼方式，以及是否要啟用錯誤偵測的物件。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-127">You can instantiate a <xref:System.Text.UnicodeEncoding> object in a number of ways, depending on whether you want to it to provide a byte order mark (BOM), whether you want big-endian or little-endian encoding, and whether you want to enable error detection.</span></span> <span data-ttu-id="4a3fb-128">下表列出<xref:System.Text.UnicodeEncoding>建構函式與<xref:System.Text.Encoding>屬性會傳回<xref:System.Text.UnicodeEncoding>物件。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-128">The following table lists the <xref:System.Text.UnicodeEncoding> constructors and the <xref:System.Text.Encoding> properties that return a <xref:System.Text.UnicodeEncoding> object.</span></span>  
  
|<span data-ttu-id="4a3fb-129">成員</span><span class="sxs-lookup"><span data-stu-id="4a3fb-129">Member</span></span>|<span data-ttu-id="4a3fb-130">位元組序</span><span class="sxs-lookup"><span data-stu-id="4a3fb-130">Endianness</span></span>|<span data-ttu-id="4a3fb-131">BOM</span><span class="sxs-lookup"><span data-stu-id="4a3fb-131">BOM</span></span>|<span data-ttu-id="4a3fb-132">錯誤偵測</span><span class="sxs-lookup"><span data-stu-id="4a3fb-132">Error detection</span></span>|  
|------------|----------------|---------|---------------------|  
|<xref:System.Text.Encoding.BigEndianUnicode%2A>|<span data-ttu-id="4a3fb-133">Big endian</span><span class="sxs-lookup"><span data-stu-id="4a3fb-133">Big-endian</span></span>|<span data-ttu-id="4a3fb-134">[是]</span><span class="sxs-lookup"><span data-stu-id="4a3fb-134">Yes</span></span>|<span data-ttu-id="4a3fb-135">無 （取代後援）</span><span class="sxs-lookup"><span data-stu-id="4a3fb-135">No (Replacement fallback)</span></span>|  
|<xref:System.Text.Encoding.Unicode%2A?displayProperty=nameWithType>|<span data-ttu-id="4a3fb-136">位元組由小到大</span><span class="sxs-lookup"><span data-stu-id="4a3fb-136">Little-endian</span></span>|<span data-ttu-id="4a3fb-137">[是]</span><span class="sxs-lookup"><span data-stu-id="4a3fb-137">Yes</span></span>|<span data-ttu-id="4a3fb-138">無 （取代後援）</span><span class="sxs-lookup"><span data-stu-id="4a3fb-138">No (Replacement fallback)</span></span>|  
|<xref:System.Text.UnicodeEncoding.%23ctor?displayProperty=nameWithType>|<span data-ttu-id="4a3fb-139">位元組由小到大</span><span class="sxs-lookup"><span data-stu-id="4a3fb-139">Little-endian</span></span>|<span data-ttu-id="4a3fb-140">[是]</span><span class="sxs-lookup"><span data-stu-id="4a3fb-140">Yes</span></span>|<span data-ttu-id="4a3fb-141">無 （取代後援）</span><span class="sxs-lookup"><span data-stu-id="4a3fb-141">No (Replacement fallback)</span></span>|  
|<xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%29>|<span data-ttu-id="4a3fb-142">可設定</span><span class="sxs-lookup"><span data-stu-id="4a3fb-142">Configurable</span></span>|<span data-ttu-id="4a3fb-143">可設定</span><span class="sxs-lookup"><span data-stu-id="4a3fb-143">Configurable</span></span>|<span data-ttu-id="4a3fb-144">無 （取代後援）</span><span class="sxs-lookup"><span data-stu-id="4a3fb-144">No (Replacement fallback)</span></span>|  
|<xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType>|<span data-ttu-id="4a3fb-145">可設定</span><span class="sxs-lookup"><span data-stu-id="4a3fb-145">Configurable</span></span>|<span data-ttu-id="4a3fb-146">可設定</span><span class="sxs-lookup"><span data-stu-id="4a3fb-146">Configurable</span></span>|<span data-ttu-id="4a3fb-147">可設定</span><span class="sxs-lookup"><span data-stu-id="4a3fb-147">Configurable</span></span>|  
  
 <span data-ttu-id="4a3fb-148"><xref:System.Text.UnicodeEncoding.GetByteCount%2A>方法會判斷多少個位元組會導致一組 Unicode 字元的編碼方式和<xref:System.Text.UnicodeEncoding.GetBytes%2A>方法會執行實際的編碼方式。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-148">The <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method determines how many bytes result in encoding a set of Unicode characters, and the <xref:System.Text.UnicodeEncoding.GetBytes%2A> method performs the actual encoding.</span></span>  
  
 <span data-ttu-id="4a3fb-149">同樣地，<xref:System.Text.UnicodeEncoding.GetCharCount%2A>方法會判斷字元數會導致解碼的位元組序列，而<xref:System.Text.UnicodeEncoding.GetChars%2A>和<xref:System.Text.UnicodeEncoding.GetString%2A>方法會執行實際的解碼。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-149">Likewise, the <xref:System.Text.UnicodeEncoding.GetCharCount%2A> method determines how many characters result in decoding a sequence of bytes, and the <xref:System.Text.UnicodeEncoding.GetChars%2A> and <xref:System.Text.UnicodeEncoding.GetString%2A> methods perform the actual decoding.</span></span>  
  
 <span data-ttu-id="4a3fb-150">針對編碼器或解碼器能夠儲存狀態資訊編碼或解碼資料跨越多個區塊 （例如 1 百萬個字元的編碼中段 100,000 個字元的字串） 時，請使用<xref:System.Text.UnicodeEncoding.GetEncoder%2A>和<xref:System.Text.UnicodeEncoding.GetDecoder%2A>屬性，分別。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-150">For an encoder or decoder that is able to save state information when encoding or decoding data that spans multiple blocks (such as string of 1 million characters that is encoded in 100,000-character segments), use the <xref:System.Text.UnicodeEncoding.GetEncoder%2A> and <xref:System.Text.UnicodeEncoding.GetDecoder%2A> properties, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a3fb-151">下列範例示範如何使用 Unicode 字元的字串編碼成位元組陣列<xref:System.Text.UnicodeEncoding>物件。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-151">The following example demonstrates how to encode a string of Unicode characters into a byte array by using a <xref:System.Text.UnicodeEncoding> object.</span></span> <span data-ttu-id="4a3fb-152">位元組陣列解碼為字串，以示範不遺失資料。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-152">The byte array is decoded into a string to demonstrate that there is no loss of data.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding Example/CPP/snippet.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding Example/CS/snippet.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding Example/VB/snippet.vb#1)]  
  
 <span data-ttu-id="4a3fb-153">下列範例會使用相同的字串與上一個，不同之處在於它將編碼的位元組寫入檔案，並使用位元組順序標記 (BOM) 的位元組資料流的前置詞。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-153">The following example uses the same string as the previous one, except that it writes the encoded bytes to a file and prefixes the byte stream with a byte order mark (BOM).</span></span> <span data-ttu-id="4a3fb-154">它接著會讀取檔案兩個不同的方式： 為文字檔，使用<xref:System.IO.StreamReader>物件，並當作二進位檔案。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-154">It then reads the file in two different ways: as a text file by using a <xref:System.IO.StreamReader> object; and as a binary file.</span></span> <span data-ttu-id="4a3fb-155">如您所預期，沒有新讀取字串包含 BOM。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-155">As you would expect, neither newly-read string includes the BOM.</span></span>  
  
 [!code-csharp[System.Text.UnicodeEncoding Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding Example/CS/bom1.cs#2)]
 [!code-vb[System.Text.UnicodeEncoding Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding Example/VB/bom1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.Encoding" />
    <altmember cref="T:System.Text.Encoder" />
    <altmember cref="T:System.Text.Decoder" />
    <altmember cref="T:System.Text.UTF32Encoding" />
    <altmember cref="T:System.Text.UTF8Encoding" />
    <altmember cref="T:System.Text.UTF7Encoding" />
    <altmember cref="T:System.Text.ASCIIEncoding" />
    <altmember cref="T:System.Globalization.UnicodeCategory" />
    <altmember cref="T:System.Globalization.CharUnicodeInfo" />
    <related type="Article" href="~/docs/standard/base-types/character-encoding.md">
      <span data-ttu-id="4a3fb-156">了解編碼</span>
      <span class="sxs-lookup">
        <span data-stu-id="4a3fb-156">Understanding Encodings</span>
      </span>
    </related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4a3fb-157">初始化 <see cref="T:System.Text.UnicodeEncoding" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-157">Initializes a new instance of the <see cref="T:System.Text.UnicodeEncoding" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UnicodeEncoding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UnicodeEncoding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4a3fb-158">初始化 <see cref="T:System.Text.UnicodeEncoding" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-158">Initializes a new instance of the <see cref="T:System.Text.UnicodeEncoding" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a3fb-159">這個建構函式會建立使用小的位元組由小到大位元組順序，提供 Unicode 位元組順序標記，而當偵測到無效的編碼方式時，不會擲回例外狀況的執行個體。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-159">This constructor creates an instance that uses the little endian byte order, provides a Unicode byte order mark, and does not throw an exception when an invalid encoding is detected.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4a3fb-160">基於安全性理由，您應該啟用錯誤偵測，藉由呼叫<xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29>建構函式，並設定其`throwOnInvalidBytes`引數`true`。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-160">For security reasons, you should enable error detection by calling the <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> constructor and setting its `throwOnInvalidBytes` argument to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a3fb-161">下列範例示範如何建立新<xref:System.Text.UnicodeEncoding>執行個體，並顯示名稱的編碼方式。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-161">The following example demonstrates how to create a new <xref:System.Text.UnicodeEncoding> instance and display the name of the encoding.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.ctor Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.ctor Example/CPP/ctor.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.ctor Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.ctor Example/CS/ctor.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.ctor Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.ctor Example/VB/ctor.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UnicodeEncoding (bool bigEndian, bool byteOrderMark);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool bigEndian, bool byteOrderMark) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.#ctor(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (bigEndian As Boolean, byteOrderMark As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UnicodeEncoding(bool bigEndian, bool byteOrderMark);" />
      <MemberSignature Language="F#" Value="new System.Text.UnicodeEncoding : bool * bool -&gt; System.Text.UnicodeEncoding" Usage="new System.Text.UnicodeEncoding (bigEndian, byteOrderMark)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="bigEndian" Type="System.Boolean" />
        <Parameter Name="byteOrderMark" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="bigEndian">
          <span data-ttu-id="4a3fb-162">
            <see langword="true" /> 表示要使用位元組由大到小的位元組順序 (最大顯著性位元組在前)，<see langword="false" /> 表示要使用位元組由小到大的位元組順序 (最小顯著性位元組在前)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-162">
              <see langword="true" /> to use the big endian byte order (most significant byte first), or <see langword="false" /> to use the little endian byte order (least significant byte first).</span>
          </span>
        </param>
        <param name="byteOrderMark">
          <span data-ttu-id="4a3fb-163">
            <see langword="true" /> 指定 <see cref="M:System.Text.UnicodeEncoding.GetPreamble" /> 方法會傳回 Unicode 位元組順序標記；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-163">
              <see langword="true" /> to specify that the <see cref="M:System.Text.UnicodeEncoding.GetPreamble" /> method returns a Unicode byte order mark; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a3fb-164">初始化 <see cref="T:System.Text.UnicodeEncoding" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-164">Initializes a new instance of the <see cref="T:System.Text.UnicodeEncoding" /> class.</span>
          </span>
          <span data-ttu-id="4a3fb-165">參數會指定是否使用位元組由大到小的位元組順序，以及 <see cref="M:System.Text.UnicodeEncoding.GetPreamble" /> 方法是否傳回 Unicode 位元組順序標記。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-165">Parameters specify whether to use the big endian byte order and whether the <see cref="M:System.Text.UnicodeEncoding.GetPreamble" /> method returns a Unicode byte order mark.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a3fb-166">這個建構函式建立時偵測到無效的編碼方式時，不會擲回例外狀況的執行個體。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-166">This constructor creates an instance that does not throw an exception when an invalid encoding is detected.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4a3fb-167">基於安全性理由，您應該啟用錯誤偵測，藉由呼叫<xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29>建構函式，並設定其`throwOnInvalidBytes`引數`true`。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-167">For security reasons, you should enable error detection by calling the <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> constructor and setting its `throwOnInvalidBytes` argument to `true`.</span></span>  
  
 <span data-ttu-id="4a3fb-168">`byteOrderMark`參數可控制的操作<xref:System.Text.UnicodeEncoding.GetPreamble%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-168">The `byteOrderMark` parameter controls the operation of the <xref:System.Text.UnicodeEncoding.GetPreamble%2A> method.</span></span> <span data-ttu-id="4a3fb-169">如果`true`，方法會傳回位元組陣列，包含 Unicode 位元組順序標記 (BOM) 格式為 utf-16。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-169">If `true`, the method returns a byte array containing the Unicode byte order mark (BOM) in UTF-16 format.</span></span>  <span data-ttu-id="4a3fb-170">如果`false`，它會傳回長度為零的位元組陣列。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-170">If `false`, it returns a zero-length byte array.</span></span> <span data-ttu-id="4a3fb-171">不過，設定`byteOrderMark`要`true`不會造成<xref:System.Text.UnicodeEncoding.GetBytes%2A>為位元組陣列的開頭 BOM 的前置詞的方法也不會引起<xref:System.Text.UnicodeEncoding.GetByteCount%2A>方法，以納入中的位元組計數 BOM 的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-171">However, setting `byteOrderMark` to `true` does not cause the <xref:System.Text.UnicodeEncoding.GetBytes%2A> method to prefix the BOM at the beginning of the byte array, nor does it cause the <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method to include the number of bytes in the BOM in the byte count.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a3fb-172">下列範例示範如何建立新<xref:System.Text.UnicodeEncoding>指定是否支援小到小或大到小的位元組順序的執行個體和 Unicode 位元組順序標記。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-172">The following example demonstrates how to create a new <xref:System.Text.UnicodeEncoding> instance specifying whether to support little endian or big endian byte ordering and the Unicode byte order mark.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.ctor2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.ctor2 Example/CPP/ctor-boolean-boolean.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.ctor2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.ctor2 Example/CS/ctor-boolean-boolean.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.ctor2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.ctor2 Example/VB/ctor-boolean-boolean.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.UnicodeEncoding.GetPreamble" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UnicodeEncoding (bool bigEndian, bool byteOrderMark, bool throwOnInvalidBytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool bigEndian, bool byteOrderMark, bool throwOnInvalidBytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.#ctor(System.Boolean,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (bigEndian As Boolean, byteOrderMark As Boolean, throwOnInvalidBytes As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UnicodeEncoding(bool bigEndian, bool byteOrderMark, bool throwOnInvalidBytes);" />
      <MemberSignature Language="F#" Value="new System.Text.UnicodeEncoding : bool * bool * bool -&gt; System.Text.UnicodeEncoding" Usage="new System.Text.UnicodeEncoding (bigEndian, byteOrderMark, throwOnInvalidBytes)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="bigEndian" Type="System.Boolean" />
        <Parameter Name="byteOrderMark" Type="System.Boolean" />
        <Parameter Name="throwOnInvalidBytes" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="bigEndian">
          <span data-ttu-id="4a3fb-173">
            <see langword="true" /> 表示要使用位元組由大到小的位元組順序 (最大顯著性位元組在前)，<see langword="false" /> 表示要使用位元組由小到大的位元組順序 (最小顯著性位元組在前)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-173">
              <see langword="true" /> to use the big endian byte order (most significant byte first); <see langword="false" /> to use the little endian byte order (least significant byte first).</span>
          </span>
        </param>
        <param name="byteOrderMark">
          <span data-ttu-id="4a3fb-174">
            <see langword="true" /> 指定 <see cref="M:System.Text.UnicodeEncoding.GetPreamble" /> 方法會傳回 Unicode 位元組順序標記；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-174">
              <see langword="true" /> to specify that the <see cref="M:System.Text.UnicodeEncoding.GetPreamble" /> method returns a Unicode byte order mark; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="throwOnInvalidBytes">
          <span data-ttu-id="4a3fb-175">
            <see langword="true" />，可指定在偵測到無效的編碼方式時應擲回一個例外狀況，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-175">
              <see langword="true" /> to specify that an exception should be thrown when an invalid encoding is detected; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a3fb-176">初始化 <see cref="T:System.Text.UnicodeEncoding" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-176">Initializes a new instance of the <see cref="T:System.Text.UnicodeEncoding" /> class.</span>
          </span>
          <span data-ttu-id="4a3fb-177">參數會指定是否使用位元組由大到小的位元組順序、是否提供 Unicode 位元組順序標記，以及是否在偵測到無效的編碼方式時擲回例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-177">Parameters specify whether to use the big endian byte order, whether to provide a Unicode byte order mark, and whether to throw an exception when an invalid encoding is detected.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a3fb-178">`byteOrderMark`參數可控制的操作<xref:System.Text.UnicodeEncoding.GetPreamble%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-178">The `byteOrderMark` parameter controls the operation of the <xref:System.Text.UnicodeEncoding.GetPreamble%2A> method.</span></span> <span data-ttu-id="4a3fb-179">如果`true`，方法會傳回位元組陣列，包含 Unicode 位元組順序標記 (BOM) 格式為 utf-16。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-179">If `true`, the method returns a byte array containing the Unicode byte order mark (BOM) in UTF-16 format.</span></span>  <span data-ttu-id="4a3fb-180">如果`false`，它會傳回長度為零的位元組陣列。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-180">If `false`, it returns a zero-length byte array.</span></span> <span data-ttu-id="4a3fb-181">不過，設定`byteOrderMark`要`true`不會造成<xref:System.Text.UnicodeEncoding.GetBytes%2A>為位元組陣列的開頭 BOM 的前置詞的方法也不會引起<xref:System.Text.UnicodeEncoding.GetByteCount%2A>方法，以納入中的位元組計數 BOM 的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-181">However, setting `byteOrderMark` to `true` does not cause the <xref:System.Text.UnicodeEncoding.GetBytes%2A> method to prefix the BOM at the beginning of the byte array, nor does it cause the <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method to include the number of bytes in the BOM in the byte count.</span></span>  
  
 <span data-ttu-id="4a3fb-182">如果`throwOnInvalidBytes`參數是`true`，偵測到無效的位元組序列的方法會擲回<xref:System.ArgumentException?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-182">If the `throwOnInvalidBytes` parameter is `true`, a method that detects an invalid byte sequence throws <xref:System.ArgumentException?displayProperty=nameWithType>.</span></span> <span data-ttu-id="4a3fb-183">否則，方法不會擲回例外狀況，並忽略無效的序列。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-183">Otherwise, the method does not throw an exception, and the invalid sequence is ignored.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4a3fb-184">基於安全性理由，建議您的應用程式使用這個建構函式建立的執行個體<xref:System.Text.UnicodeEncoding>類別，並藉由設定開啟錯誤偵測`throwOnInvalidBytes`至`true`。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-184">For security reasons, your applications are recommended to use this constructor to create an instance of the <xref:System.Text.UnicodeEncoding> class and turn on error detection by setting `throwOnInvalidBytes` to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a3fb-185">下列範例示範的行為<xref:System.Text.UnicodeEncoding>，啟用錯誤偵測，而不需要。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-185">The following example demonstrates the behavior of <xref:System.Text.UnicodeEncoding>, both with error detection enabled and without.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.ErrorDetection#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.ErrorDetection/CPP/errordetection.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.ErrorDetection#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.ErrorDetection/CS/errordetection.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.ErrorDetection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.ErrorDetection/VB/errordetection.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.UnicodeEncoding.GetPreamble" />
      </Docs>
    </Member>
    <Member MemberName="CharSize">
      <MemberSignature Language="C#" Value="public const int CharSize = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 CharSize = (2)" />
      <MemberSignature Language="DocId" Value="F:System.Text.UnicodeEncoding.CharSize" />
      <MemberSignature Language="VB.NET" Value="Public Const CharSize As Integer  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: int CharSize = 2;" />
      <MemberSignature Language="F#" Value="val mutable CharSize : int" Usage="System.Text.UnicodeEncoding.CharSize" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4a3fb-186">代表 Unicode 字元大小 (以位元組為單位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-186">Represents the Unicode character size in bytes.</span>
          </span>
          <span data-ttu-id="4a3fb-187">這個欄位是常數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-187">This field is a constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a3fb-188">這個欄位的值是 32 位元帶正負號的常數，值為 2。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-188">The value of this field is a 32-bit signed constant with a value of 2.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a3fb-189">下列範例示範如何傳回的值<xref:System.Text.UnicodeEncoding.CharSize>並加以顯示。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-189">The following example demonstrates how to return the value of <xref:System.Text.UnicodeEncoding.CharSize> and display it.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.CharSize Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.CharSize Example/CPP/charsize.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.CharSize Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.CharSize Example/CS/charsize.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.CharSize Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.CharSize Example/VB/charsize.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="unicodeEncoding.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a3fb-190">要與目前物件比較的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-190">The object to compare with the current object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a3fb-191">判斷指定的 <see cref="T:System.Object" /> 是否等於目前的 <see cref="T:System.Text.UnicodeEncoding" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-191">Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Text.UnicodeEncoding" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a3fb-192">如果 <paramref name="value" /> 是 <see cref="T:System.Text.UnicodeEncoding" /> 的執行個體，並且等於目前的物件，則為 <see langword="true" />；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-192">
              <see langword="true" /> if <paramref name="value" /> is an instance of <see cref="T:System.Text.UnicodeEncoding" /> and is equal to the current object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a3fb-193">兩個<xref:System.Text.UnicodeEncoding>物件是否視為相等，如果所有下列條件成立：</span><span class="sxs-lookup"><span data-stu-id="4a3fb-193">Two <xref:System.Text.UnicodeEncoding> objects are considered equal if all of the following conditions are true:</span></span>  
  
-   <span data-ttu-id="4a3fb-194">這兩個物件都使用相同的位元組順序 （由小到大或 big endian）。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-194">Both objects use the same byte order (little-endian or big-endian).</span></span>  
  
-   <span data-ttu-id="4a3fb-195">這兩個物件提供位元組順序標記，或兩者都不這麼做。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-195">Both objects provide the byte order mark, or both do not.</span></span>  
  
-   <span data-ttu-id="4a3fb-196">這兩個物件都使用相同的編碼器後援。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-196">Both objects use the same encoder fallback.</span></span>  
  
-   <span data-ttu-id="4a3fb-197">這兩個物件都使用相同的解碼器後援。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-197">Both objects use the same decoder fallback.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a3fb-198">下列範例示範如何使用<xref:System.Text.UnicodeEncoding.Equals%2A>方法來測試是否目前<xref:System.Text.UnicodeEncoding>物件是否等於其他<xref:System.Text.UnicodeEncoding>物件。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-198">The following example demonstrates how to use the <xref:System.Text.UnicodeEncoding.Equals%2A> method to test whether the current <xref:System.Text.UnicodeEncoding> object is equal to a different <xref:System.Text.UnicodeEncoding> object.</span></span> <span data-ttu-id="4a3fb-199">五個<xref:System.Text.UnicodeEncoding>物件會建立相較之下，及比較的結果會顯示。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-199">Five <xref:System.Text.UnicodeEncoding> objects are created and compared, and the results of the comparisons are displayed.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.ctor2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.ctor2 Example/CPP/ctor-boolean-boolean.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.ctor2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.ctor2 Example/CS/ctor-boolean-boolean.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.ctor2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.ctor2 Example/VB/ctor-boolean-boolean.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.UnicodeEncoding.#ctor" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetByteCount">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4a3fb-200">計算將一組字元編碼所產生的位元組數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-200">Calculates the number of bytes produced by encoding a set of characters.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public override int GetByteCount (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetByteCount(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetByteCount(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetByteCount (s As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetByteCount(System::String ^ s);" />
      <MemberSignature Language="F#" Value="override this.GetByteCount : string -&gt; int" Usage="unicodeEncoding.GetByteCount s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="4a3fb-201">字串，包含要編碼的一組字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-201">The string that contains the set of characters to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a3fb-202">計算將指定字串中的字元編碼所產生的位元組數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-202">Calculates the number of bytes produced by encoding the characters in the specified string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a3fb-203">編碼指定字元所產生的位元組數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-203">The number of bytes produced by encoding the specified characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a3fb-204">若要計算所需的確切的陣列大小<xref:System.Text.UnicodeEncoding.GetBytes%2A>若要儲存產生的位元組，請呼叫<xref:System.Text.UnicodeEncoding.GetByteCount%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-204">To calculate the exact array size required by <xref:System.Text.UnicodeEncoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="4a3fb-205">若要計算最大陣列大小，請呼叫<xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-205">To calculate the maximum array size, you call the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="4a3fb-206"><xref:System.Text.UnicodeEncoding.GetByteCount%2A>方法通常會配置較少的記憶體，而<xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A>方法通常執行速度更快。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-206">The <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="4a3fb-207">使用錯誤偵測的無效的序列會造成此方法會擲回<xref:System.ArgumentException>。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-207">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="4a3fb-208">錯誤偵測無效的序列會被忽略，而不會擲回任何例外狀況。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-208">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4a3fb-209">若要確保儲存為檔案或資料流時將編碼的位元組會正確解碼，您可以前置詞與前序編碼的位元組資料流。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-209">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="4a3fb-210">位元組資料流的開頭插入前序編碼 (例如在一連串的位元組寫入檔案的開頭) 是開發人員的責任，並在前序編碼的位元組數目不會反映在所傳回的值<xref:System.Text.UnicodeEncoding.GetByteCount%28System.String%29>方法。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-210">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility, and the number of bytes in the preamble is not reflected in the value returned by the <xref:System.Text.UnicodeEncoding.GetByteCount%28System.String%29> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a3fb-211">下列範例會呼叫<xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A>和<xref:System.Text.UnicodeEncoding.GetByteCount%28System.String%29>方法來計算最大值與實際所需格式的字串編碼的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-211">The following example calls the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> and <xref:System.Text.UnicodeEncoding.GetByteCount%28System.String%29> methods to calculate the maximum and actual number of bytes required to encode a string.</span></span> <span data-ttu-id="4a3fb-212">它也會顯示實際儲存位元組順序標記的位元組資料流所需的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-212">It also displays the actual number of bytes required to store a byte stream with a byte order mark.</span></span>  
  
 [!code-csharp[System.Text.UnicodeEncoding.GetByteCount#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.unicodeencoding.getbytecount/cs/getbytecount1.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.GetByteCount#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.unicodeencoding.getbytecount/vb/getbytecount1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4a3fb-213">
            <paramref name="s" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-213">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4a3fb-214">所產生的位元組數目大於可用整數傳回的數目上限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-214">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4a3fb-215">已啟用錯誤偵測，而 <paramref name="s" /> 包含無效的字元序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-215">Error detection is enabled, and <paramref name="s" /> contains an invalid sequence of characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="4a3fb-216">發生後援 (如需更完整的說明，請參閱 [.NET Framework 中的字元編碼方式](~/docs/standard/base-types/character-encoding.md))</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-216">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span>
          </span>
          <span data-ttu-id="4a3fb-217">-和-</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-217">-and-</span>
          </span>
          <span data-ttu-id="4a3fb-218">
            <see cref="P:System.Text.Encoding.EncoderFallback" /> 設定為 <see cref="T:System.Text.EncoderExceptionFallback" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-218">
              <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UnicodeEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public override int GetByteCount (char* chars, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetByteCount(char* chars, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetByteCount(System.Char*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetByteCount(char* chars, int count);" />
      <MemberSignature Language="F#" Value="override this.GetByteCount : nativeptr&lt;char&gt; * int -&gt; int" Usage="unicodeEncoding.GetByteCount (chars, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char*" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars">
          <span data-ttu-id="4a3fb-219">要編碼的第一個字元指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-219">A pointer to the first character to encode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="4a3fb-220">要編碼的字元數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-220">The number of characters to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a3fb-221">計算將起始於指定字元指標的一組字元編碼所產生的位元組數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-221">Calculates the number of bytes produced by encoding a set of characters starting at the specified character pointer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a3fb-222">編碼指定字元所產生的位元組數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-222">The number of bytes produced by encoding the specified characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a3fb-223">若要計算確切的陣列大小<xref:System.Text.UnicodeEncoding.GetBytes%2A>需要在您呼叫儲存產生的位元組，<xref:System.Text.UnicodeEncoding.GetByteCount%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-223">To calculate the exact array size that <xref:System.Text.UnicodeEncoding.GetBytes%2A> requires to store the resulting bytes, you call the <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="4a3fb-224">若要計算最大陣列大小，請呼叫<xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-224">To calculate the maximum array size, you call the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="4a3fb-225"><xref:System.Text.UnicodeEncoding.GetByteCount%2A>方法通常會配置較少的記憶體，而<xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A>方法通常執行速度更快。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-225">The <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="4a3fb-226">使用錯誤偵測的無效的序列會造成此方法會擲回<xref:System.ArgumentException>。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-226">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="4a3fb-227">錯誤偵測無效的序列會被忽略，而不會擲回任何例外狀況。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-227">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4a3fb-228">若要確保儲存為檔案或資料流時將編碼的位元組會正確解碼，您可以前置詞與前序編碼的位元組資料流。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-228">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="4a3fb-229">位元組資料流的開頭插入前序編碼 (例如在一連串的位元組寫入檔案的開頭) 是開發人員的責任，並在前序編碼的位元組數目不會反映在所傳回的值<xref:System.Text.UTF8Encoding.GetByteCount%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-229">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility, and the number of bytes in the preamble is not reflected in the value returned by the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4a3fb-230">
            <paramref name="chars" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-230">
              <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4a3fb-231">
            <paramref name="count" /> 小於零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-231">
              <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="4a3fb-232">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-232">-or-</span>
          </span>
          <span data-ttu-id="4a3fb-233">所產生的位元組數目大於可用整數傳回的數目上限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-233">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4a3fb-234">已啟用錯誤偵測，而 <paramref name="chars" /> 包含無效的字元序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-234">Error detection is enabled and <paramref name="chars" /> contains an invalid sequence of characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="4a3fb-235">發生後援 (如需更完整的說明，請參閱 [.NET Framework 中的字元編碼方式](~/docs/standard/base-types/character-encoding.md))</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-235">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span>
          </span>
          <span data-ttu-id="4a3fb-236">-和-</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-236">-and-</span>
          </span>
          <span data-ttu-id="4a3fb-237">
            <see cref="P:System.Text.Encoding.EncoderFallback" /> 設定為 <see cref="T:System.Text.EncoderExceptionFallback" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-237">
              <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="4a3fb-238">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-238">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="4a3fb-239">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-239">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Text.UnicodeEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public override int GetByteCount (char[] chars, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetByteCount(char[] chars, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetByteCount (chars As Char(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetByteCount(cli::array &lt;char&gt; ^ chars, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.GetByteCount : char[] * int * int -&gt; int" Usage="unicodeEncoding.GetByteCount (chars, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars">
          <span data-ttu-id="4a3fb-240">包含要解碼之一組字元的字元陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-240">The character array containing the set of characters to encode.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="4a3fb-241">要編碼的第一個字元索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-241">The index of the first character to encode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="4a3fb-242">要編碼的字元數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-242">The number of characters to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a3fb-243">計算將指定字元陣列中的一組字元編碼所產生的位元組數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-243">Calculates the number of bytes produced by encoding a set of characters from the specified character array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a3fb-244">編碼指定字元所產生的位元組數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-244">The number of bytes produced by encoding the specified characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a3fb-245">若要計算所需的確切的陣列大小<xref:System.Text.UnicodeEncoding.GetBytes%2A>來儲存產生的位元組，應用程式會使用<xref:System.Text.UnicodeEncoding.GetByteCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-245">To calculate the exact array size required by <xref:System.Text.UnicodeEncoding.GetBytes%2A> to store the resulting bytes, the application uses <xref:System.Text.UnicodeEncoding.GetByteCount%2A>.</span></span> <span data-ttu-id="4a3fb-246">若要計算最大陣列大小，請呼叫<xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-246">To calculate the maximum array size, you call the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="4a3fb-247"><xref:System.Text.UnicodeEncoding.GetByteCount%2A>方法通常會配置較少的記憶體，而<xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A>方法通常執行速度更快。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-247">The <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="4a3fb-248">啟用錯誤偵測，無效的序列會造成此方法會擲回<xref:System.ArgumentException>。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-248">With error detection enabled, an invalid sequence causes this method to throw an <xref:System.ArgumentException>.</span></span> <span data-ttu-id="4a3fb-249">錯誤偵測無效的序列會被忽略，而不會擲回任何例外狀況。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-249">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="4a3fb-250">若要確保儲存為檔案或資料流時將編碼的位元組會正確解碼，您可以前置詞與前序編碼的位元組資料流。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-250">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="4a3fb-251">位元組資料流的開頭插入前序編碼 (例如在一連串的位元組寫入檔案的開頭) 是開發人員的責任，並在前序編碼的位元組數目不會反映在所傳回的值<xref:System.Text.UnicodeEncoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29>方法。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-251">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility, and the number of bytes in the preamble Is not reflected in the value returned by the <xref:System.Text.UnicodeEncoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a3fb-252">下列範例會填入陣列拉丁大寫字母和小寫字元和呼叫<xref:System.Text.UnicodeEncoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29>方法，以判斷拉丁文小寫的字元編碼所需的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-252">The following example populates an array with a Latin uppercase and lowercase characters and calls the <xref:System.Text.UnicodeEncoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method to determine the number of bytes needed to encode the Latin lowercase characters.</span></span> <span data-ttu-id="4a3fb-253">然後，它會顯示這項資訊，以及加入位元組順序標記時所需的位元組總數。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-253">It then displays this information along with the total number of bytes needed if a byte order mark is added.</span></span> <span data-ttu-id="4a3fb-254">它會使用所傳回的值比較此數字<xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A>方法，即表示拉丁文小寫的字元編碼所需的位元組數目上限。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-254">It compares this number with the value returned by the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method, which indicates maximum number of bytes needed to encode the Latin lowercase characters.</span></span> <span data-ttu-id="4a3fb-255">下列範例會填入希臘文和斯拉夫字元和呼叫所組成的陣列<xref:System.Text.UnicodeEncoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29>方法，以判斷斯拉夫字元編碼所需的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-255">The following example populates an array with a combination of Greek and Cyrillic characters and calls the <xref:System.Text.UnicodeEncoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method to determine the number of bytes needed to encode the Cyrillic characters.</span></span> <span data-ttu-id="4a3fb-256">然後，它會顯示這項資訊，以及加入位元組順序標記時所需的位元組總數。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-256">It then displays this information along with the total number of bytes needed if a byte order mark is added.</span></span> <span data-ttu-id="4a3fb-257">它會使用所傳回的值比較此數字<xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A>方法，即表示斯拉夫字元編碼所需的位元組數目上限。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-257">It compares this number with the value returned by the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method, which indicates maximum number of bytes needed to encode the Cyrillic characters.</span></span>  
  
 [!code-csharp[System.Text.UnicodeEncoding.GetByteCount#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.unicodeencoding.getbytecount/cs/getbytecount2.cs#2)]
 [!code-vb[System.Text.UnicodeEncoding.GetByteCount#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.unicodeencoding.getbytecount/vb/getbytecount2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4a3fb-258">
            <paramref name="chars" /> 是 <see langword="null" /> (<see langword="Nothing" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-258">
              <paramref name="chars" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4a3fb-259">
            <paramref name="index" /> 或 <paramref name="count" /> 小於零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-259">
              <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="4a3fb-260">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-260">-or-</span>
          </span>
          <span data-ttu-id="4a3fb-261">
            <paramref name="index" /> 與 <paramref name="count" /> 不代表 <paramref name="chars" /> 中有效的範圍。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-261">
              <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="chars" />.</span>
          </span>
          <span data-ttu-id="4a3fb-262">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-262">-or-</span>
          </span>
          <span data-ttu-id="4a3fb-263">所產生的位元組數目大於可用整數傳回的數目上限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-263">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4a3fb-264">已啟用錯誤偵測，而 <paramref name="chars" /> 包含無效的字元序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-264">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="4a3fb-265">發生後援 (如需更完整的說明，請參閱 [.NET Framework 中的字元編碼方式](~/docs/standard/base-types/character-encoding.md))</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-265">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span>
          </span>
          <span data-ttu-id="4a3fb-266">-和-</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-266">-and-</span>
          </span>
          <span data-ttu-id="4a3fb-267">
            <see cref="P:System.Text.Encoding.EncoderFallback" /> 設定為 <see cref="T:System.Text.EncoderExceptionFallback" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-267">
              <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UnicodeEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetEncoder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetBytes">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4a3fb-268">將一組字元編碼成位元組序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-268">Encodes a set of characters into a sequence of bytes.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override byte[] GetBytes (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] GetBytes(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetBytes(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (s As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ GetBytes(System::String ^ s);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : string -&gt; byte[]" Usage="unicodeEncoding.GetBytes s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override int GetBytes (char* chars, int charCount, byte* bytes, int byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetBytes(char* chars, int32 charCount, unsigned int8* bytes, int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetBytes(char* chars, int charCount, System::Byte* bytes, int byteCount);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : nativeptr&lt;char&gt; * int * nativeptr&lt;byte&gt; * int -&gt; int" Usage="unicodeEncoding.GetBytes (chars, charCount, bytes, byteCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char*" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="byteCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars">
          <span data-ttu-id="4a3fb-269">要編碼的第一個字元指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-269">A pointer to the first character to encode.</span>
          </span>
        </param>
        <param name="charCount">
          <span data-ttu-id="4a3fb-270">要編碼的字元數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-270">The number of characters to encode.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="4a3fb-271">開始寫入結果位元組序列的位置指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-271">A pointer to the location at which to start writing the resulting sequence of bytes.</span>
          </span>
        </param>
        <param name="byteCount">
          <span data-ttu-id="4a3fb-272">寫入的最大位元組數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-272">The maximum number of bytes to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a3fb-273">將起始於指定字元指標的一組字元編碼成位元組序列；儲存該位元組序列時，係以指定的位元組指標為起始點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-273">Encodes a set of characters starting at the specified character pointer into a sequence of bytes that are stored starting at the specified byte pointer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a3fb-274">
            <paramref name="bytes" /> 參數所指示位置上寫入的實際位元組數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-274">The actual number of bytes written at the location indicated by the <paramref name="bytes" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a3fb-275">若要計算確切的陣列大小<xref:System.Text.UnicodeEncoding.GetBytes%2A>需要在您呼叫儲存產生的位元組，<xref:System.Text.UnicodeEncoding.GetByteCount%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-275">To calculate the exact array size that <xref:System.Text.UnicodeEncoding.GetBytes%2A> requires to store the resulting bytes, you call the <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="4a3fb-276">若要計算最大陣列大小，請呼叫<xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-276">To calculate the maximum array size, you call the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="4a3fb-277"><xref:System.Text.UnicodeEncoding.GetByteCount%2A>方法通常會配置較少的記憶體，而<xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A>方法通常執行速度更快。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-277">The <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="4a3fb-278">使用錯誤偵測的無效的序列會造成此方法會擲回<xref:System.ArgumentException>。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-278">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="4a3fb-279">錯誤偵測無效的序列會被忽略，而不會擲回任何例外狀況。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-279">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="4a3fb-280">要轉換，例如，從資料流讀取資料的資料可能僅適用於循序區塊。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-280">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="4a3fb-281">在此情況下，或應用程式的資料量很大，它必須分割成較小的區塊時，應該使用<xref:System.Text.Decoder>或<xref:System.Text.Encoder>所提供的物件<xref:System.Text.UnicodeEncoding.GetDecoder%2A>或<xref:System.Text.UnicodeEncoding.GetEncoder%2A>方法，分別。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-281">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> object provided by the <xref:System.Text.UnicodeEncoding.GetDecoder%2A> or the <xref:System.Text.UnicodeEncoding.GetEncoder%2A> method, respectively.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4a3fb-282">若要確保儲存為檔案或資料流時將編碼的位元組會正確解碼，您可以前置詞與前序編碼的位元組資料流。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-282">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="4a3fb-283">位元組資料流的開頭插入前序編碼 (例如一系列的位元組寫入檔案的開頭) 是開發人員的責任。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-283">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility.</span></span> <span data-ttu-id="4a3fb-284"><xref:System.Text.UnicodeEncoding.GetBytes%2A>方法不會不在前面加上前序編碼的位元組序列的開頭。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-284">The <xref:System.Text.UnicodeEncoding.GetBytes%2A> method does not prepend a preamble to the beginning of a sequence of encoded bytes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4a3fb-285">
            <paramref name="chars" /> 是 <see langword="null" /> (<see langword="Nothing" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-285">
              <paramref name="chars" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          </span>
          <span data-ttu-id="4a3fb-286">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-286">-or-</span>
          </span>
          <span data-ttu-id="4a3fb-287">
            <paramref name="bytes" /> 是 <see langword="null" /> (<see langword="Nothing" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-287">
              <paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4a3fb-288">
            <paramref name="charCount" /> 或 <paramref name="byteCount" /> 小於零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-288">
              <paramref name="charCount" /> or <paramref name="byteCount" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4a3fb-289">已啟用錯誤偵測，而 <paramref name="chars" /> 包含無效的字元序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-289">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span>
          </span>
          <span data-ttu-id="4a3fb-290">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-290">-or-</span>
          </span>
          <span data-ttu-id="4a3fb-291">
            <paramref name="byteCount" /> 小於結果位元組數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-291">
              <paramref name="byteCount" /> is less than the resulting number of bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="4a3fb-292">發生後援 (如需更完整的說明，請參閱 [.NET Framework 中的字元編碼方式](~/docs/standard/base-types/character-encoding.md))</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-292">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span>
          </span>
          <span data-ttu-id="4a3fb-293">-和-</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-293">-and-</span>
          </span>
          <span data-ttu-id="4a3fb-294">
            <see cref="P:System.Text.Encoding.EncoderFallback" /> 設定為 <see cref="T:System.Text.EncoderExceptionFallback" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-294">
              <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="4a3fb-295">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-295">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="4a3fb-296">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-296">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Text.UnicodeEncoding.GetEncoder" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override int GetBytes (char[] chars, int charIndex, int charCount, byte[] bytes, int byteIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetBytes(char[] chars, int32 charIndex, int32 charCount, unsigned int8[] bytes, int32 byteIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (chars As Char(), charIndex As Integer, charCount As Integer, bytes As Byte(), byteIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetBytes(cli::array &lt;char&gt; ^ chars, int charIndex, int charCount, cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : char[] * int * int * byte[] * int -&gt; int" Usage="unicodeEncoding.GetBytes (chars, charIndex, charCount, bytes, byteIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars">
          <span data-ttu-id="4a3fb-297">包含要解碼之一組字元的字元陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-297">The character array containing the set of characters to encode.</span>
          </span>
        </param>
        <param name="charIndex">
          <span data-ttu-id="4a3fb-298">要編碼的第一個字元索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-298">The index of the first character to encode.</span>
          </span>
        </param>
        <param name="charCount">
          <span data-ttu-id="4a3fb-299">要編碼的字元數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-299">The number of characters to encode.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="4a3fb-300">要包含結果位元組序列的位元組陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-300">The byte array to contain the resulting sequence of bytes.</span>
          </span>
        </param>
        <param name="byteIndex">
          <span data-ttu-id="4a3fb-301">要開始寫入結果位元組序列的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-301">The index at which to start writing the resulting sequence of bytes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a3fb-302">將指定字元陣列中的一組字元編碼成指定的位元組陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-302">Encodes a set of characters from the specified character array into the specified byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a3fb-303">寫入 <paramref name="bytes" /> 的實際位元組數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-303">The actual number of bytes written into <paramref name="bytes" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a3fb-304">若要計算所需的確切的陣列大小<xref:System.Text.UnicodeEncoding.GetBytes%2A>若要儲存產生的位元組，請呼叫<xref:System.Text.UnicodeEncoding.GetByteCount%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-304">To calculate the exact array size required by <xref:System.Text.UnicodeEncoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="4a3fb-305">若要計算最大陣列大小，請呼叫<xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-305">To calculate the maximum array size, you call the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="4a3fb-306"><xref:System.Text.UnicodeEncoding.GetByteCount%2A>方法通常會配置較少的記憶體，而<xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A>方法通常執行速度更快。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-306">The <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="4a3fb-307">使用錯誤偵測的無效的序列會造成此方法會擲回<xref:System.ArgumentException>。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-307">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="4a3fb-308">錯誤偵測無效的序列會被忽略，而不會擲回任何例外狀況。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-308">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="4a3fb-309">要轉換，例如，從資料流讀取資料的資料可能僅適用於循序區塊。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-309">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="4a3fb-310">在此情況下，或如果資料量太大，它必須分割成較小的區塊，應該使用應用程式<xref:System.Text.Decoder>或<xref:System.Text.Encoder>所提供<xref:System.Text.UnicodeEncoding.GetDecoder%2A>方法或<xref:System.Text.UnicodeEncoding.GetEncoder%2A>方法，分別。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-310">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UnicodeEncoding.GetDecoder%2A> method or the <xref:System.Text.UnicodeEncoding.GetEncoder%2A> method, respectively.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4a3fb-311">若要確保儲存為檔案或資料流時將編碼的位元組會正確解碼，您可以前置詞與前序編碼的位元組資料流。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-311">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="4a3fb-312">位元組資料流的開頭插入前序編碼 (例如一系列的位元組寫入檔案的開頭) 是開發人員的責任。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-312">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility.</span></span> <span data-ttu-id="4a3fb-313"><xref:System.Text.UnicodeEncoding.GetBytes%2A>方法不會不在前面加上前序編碼的位元組序列的開頭。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-313">The <xref:System.Text.UnicodeEncoding.GetBytes%2A> method does not prepend a preamble to the beginning of a sequence of encoded bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a3fb-314">下列範例示範如何使用<xref:System.Text.UnicodeEncoding.GetBytes%2A>方法來編碼的字元範圍<xref:System.String>並將編碼的位元組儲存在位元組陣列中的項目範圍。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-314">The following example demonstrates how to use the <xref:System.Text.UnicodeEncoding.GetBytes%2A> method to encode a range of characters from a <xref:System.String> and store the encoded bytes in a range of elements in a byte array.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.GetBytes3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetBytes3 Example/CPP/getbytes-string-int32-int32-byte[]-int32.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.GetBytes3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetBytes3 Example/CS/getbytes-string-int32-int32-byte[]-int32.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.GetBytes3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetBytes3 Example/VB/getbytes-string-int32-int32-byte[]-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4a3fb-315">
            <paramref name="chars" /> 是 <see langword="null" /> (<see langword="Nothing" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-315">
              <paramref name="chars" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          </span>
          <span data-ttu-id="4a3fb-316">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-316">-or-</span>
          </span>
          <span data-ttu-id="4a3fb-317">
            <paramref name="bytes" /> 是 <see langword="null" /> (<see langword="Nothing" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-317">
              <paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4a3fb-318">
            <paramref name="charIndex" />、<paramref name="charCount" /> 或 <paramref name="byteIndex" /> 小於零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-318">
              <paramref name="charIndex" /> or <paramref name="charCount" /> or <paramref name="byteIndex" /> is less than zero.</span>
          </span>
          <span data-ttu-id="4a3fb-319">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-319">-or-</span>
          </span>
          <span data-ttu-id="4a3fb-320">
            <paramref name="charIndex" /> 與 <paramref name="charCount" /> 不代表 <paramref name="chars" /> 中有效的範圍。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-320">
              <paramref name="charIndex" /> and <paramref name="charCount" /> do not denote a valid range in <paramref name="chars" />.</span>
          </span>
          <span data-ttu-id="4a3fb-321">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-321">-or-</span>
          </span>
          <span data-ttu-id="4a3fb-322">
            <paramref name="byteIndex" /> 在 <paramref name="bytes" /> 中不是有效的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-322">
              <paramref name="byteIndex" /> is not a valid index in <paramref name="bytes" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4a3fb-323">已啟用錯誤偵測，而 <paramref name="chars" /> 包含無效的字元序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-323">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span>
          </span>
          <span data-ttu-id="4a3fb-324">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-324">-or-</span>
          </span>
          <span data-ttu-id="4a3fb-325">從 <paramref name="bytes" /> 到陣列結尾處，<paramref name="byteIndex" /> 沒有足夠的容量容納結果位元組。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-325">
              <paramref name="bytes" /> does not have enough capacity from <paramref name="byteIndex" /> to the end of the array to accommodate the resulting bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="4a3fb-326">發生後援 (如需更完整的說明，請參閱 [.NET Framework 中的字元編碼方式](~/docs/standard/base-types/character-encoding.md))</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-326">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span>
          </span>
          <span data-ttu-id="4a3fb-327">-和-</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-327">-and-</span>
          </span>
          <span data-ttu-id="4a3fb-328">
            <see cref="P:System.Text.Encoding.EncoderFallback" /> 設定為 <see cref="T:System.Text.EncoderExceptionFallback" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-328">
              <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UnicodeEncoding.GetEncoder" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override int GetBytes (string s, int charIndex, int charCount, byte[] bytes, int byteIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetBytes(string s, int32 charIndex, int32 charCount, unsigned int8[] bytes, int32 byteIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (s As String, charIndex As Integer, charCount As Integer, bytes As Byte(), byteIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetBytes(System::String ^ s, int charIndex, int charCount, cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : string * int * int * byte[] * int -&gt; int" Usage="unicodeEncoding.GetBytes (s, charIndex, charCount, bytes, byteIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="4a3fb-329">字串，包含要編碼的一組字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-329">The string containing the set of characters to encode.</span>
          </span>
        </param>
        <param name="charIndex">
          <span data-ttu-id="4a3fb-330">要編碼的第一個字元索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-330">The index of the first character to encode.</span>
          </span>
        </param>
        <param name="charCount">
          <span data-ttu-id="4a3fb-331">要編碼的字元數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-331">The number of characters to encode.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="4a3fb-332">要包含結果位元組序列的位元組陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-332">The byte array to contain the resulting sequence of bytes.</span>
          </span>
        </param>
        <param name="byteIndex">
          <span data-ttu-id="4a3fb-333">要開始寫入結果位元組序列的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-333">The index at which to start writing the resulting sequence of bytes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a3fb-334">將指定 <see cref="T:System.String" /> 中的一組字元編碼成指定的位元組陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-334">Encodes a set of characters from the specified <see cref="T:System.String" /> into the specified byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a3fb-335">寫入 <paramref name="bytes" /> 的實際位元組數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-335">The actual number of bytes written into <paramref name="bytes" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a3fb-336">若要計算所需的確切的陣列大小<xref:System.Text.UnicodeEncoding.GetBytes%2A>若要儲存產生的位元組，請呼叫<xref:System.Text.UnicodeEncoding.GetByteCount%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-336">To calculate the exact array size required by <xref:System.Text.UnicodeEncoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="4a3fb-337">若要計算最大陣列大小，請呼叫<xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-337">To calculate the maximum array size, you call the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="4a3fb-338"><xref:System.Text.UnicodeEncoding.GetByteCount%2A>方法通常會配置較少的記憶體，而<xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A>方法通常執行速度更快。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-338">The <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="4a3fb-339">使用錯誤偵測的無效的序列會造成此方法會擲回<xref:System.ArgumentException>。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-339">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="4a3fb-340">錯誤偵測無效的序列會被忽略，而不會擲回任何例外狀況。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-340">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="4a3fb-341">要轉換，例如，從資料流讀取資料的資料可能僅適用於循序區塊。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-341">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="4a3fb-342">在此情況下，或如果資料量太大，它必須分割成較小的區塊，應該使用應用程式<xref:System.Text.Decoder>或<xref:System.Text.Encoder>所提供<xref:System.Text.UnicodeEncoding.GetDecoder%2A>方法或<xref:System.Text.UnicodeEncoding.GetEncoder%2A>方法，分別。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-342">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UnicodeEncoding.GetDecoder%2A> method or the <xref:System.Text.UnicodeEncoding.GetEncoder%2A> method, respectively.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4a3fb-343">若要確保儲存為檔案或資料流時將編碼的位元組會正確解碼，您可以前置詞與前序編碼的位元組資料流。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-343">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="4a3fb-344">位元組資料流的開頭插入前序編碼 (例如一系列的位元組寫入檔案的開頭) 是開發人員的責任。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-344">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility.</span></span> <span data-ttu-id="4a3fb-345"><xref:System.Text.UnicodeEncoding.GetBytes%2A>方法不會不在前面加上前序編碼的位元組序列的開頭。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-345">The <xref:System.Text.UnicodeEncoding.GetBytes%2A> method does not prepend a preamble to the beginning of a sequence of encoded bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a3fb-346">下列範例示範如何編碼的 Unicode 字元陣列中的項目範圍，並將編碼的位元組儲存在位元組陣列中的項目範圍。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-346">The following example demonstrates how to encode a range of elements from a Unicode character array and store the encoded bytes in a range of elements in a byte array.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.GetBytes1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetBytes1 Example/CPP/getbytes-char[]-int32-int32-byte[]-int32.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.GetBytes1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetBytes1 Example/CS/getbytes-char[]-int32-int32-byte[]-int32.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.GetBytes1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetBytes1 Example/VB/getbytes-char[]-int32-int32-byte[]-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4a3fb-347">
            <paramref name="s" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-347">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4a3fb-348">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-348">-or-</span>
          </span>
          <span data-ttu-id="4a3fb-349">
            <paramref name="bytes" /> 是 <see langword="null" /> (<see langword="Nothing" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-349">
              <paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4a3fb-350">
            <paramref name="charIndex" />、<paramref name="charCount" /> 或 <paramref name="byteIndex" /> 小於零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-350">
              <paramref name="charIndex" /> or <paramref name="charCount" /> or <paramref name="byteIndex" /> is less than zero.</span>
          </span>
          <span data-ttu-id="4a3fb-351">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-351">-or-</span>
          </span>
          <span data-ttu-id="4a3fb-352">
            <paramref name="charIndex" /> 與 <paramref name="charCount" /> 不代表 <paramref name="chars" /> 中有效的範圍。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-352">
              <paramref name="charIndex" /> and <paramref name="charCount" /> do not denote a valid range in <paramref name="chars" />.</span>
          </span>
          <span data-ttu-id="4a3fb-353">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-353">-or-</span>
          </span>
          <span data-ttu-id="4a3fb-354">
            <paramref name="byteIndex" /> 在 <paramref name="bytes" /> 中不是有效的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-354">
              <paramref name="byteIndex" /> is not a valid index in <paramref name="bytes" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4a3fb-355">已啟用錯誤偵測，而 <paramref name="s" /> 包含無效的字元序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-355">Error detection is enabled, and <paramref name="s" /> contains an invalid sequence of characters.</span>
          </span>
          <span data-ttu-id="4a3fb-356">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-356">-or-</span>
          </span>
          <span data-ttu-id="4a3fb-357">從 <paramref name="bytes" /> 到陣列結尾處，<paramref name="byteIndex" /> 沒有足夠的容量容納結果位元組。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-357">
              <paramref name="bytes" /> does not have enough capacity from <paramref name="byteIndex" /> to the end of the array to accommodate the resulting bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="4a3fb-358">發生後援 (如需更完整的說明，請參閱 [.NET Framework 中的字元編碼方式](~/docs/standard/base-types/character-encoding.md))</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-358">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span>
          </span>
          <span data-ttu-id="4a3fb-359">-和-</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-359">-and-</span>
          </span>
          <span data-ttu-id="4a3fb-360">
            <see cref="P:System.Text.Encoding.EncoderFallback" /> 設定為 <see cref="T:System.Text.EncoderExceptionFallback" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-360">
              <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UnicodeEncoding.GetEncoder" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCharCount">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4a3fb-361">計算將位元組序列解碼所產生的字元數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-361">Calculates the number of characters produced by decoding a sequence of bytes.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public override int GetCharCount (byte* bytes, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetCharCount(unsigned int8* bytes, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetCharCount(System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetCharCount(System::Byte* bytes, int count);" />
      <MemberSignature Language="F#" Value="override this.GetCharCount : nativeptr&lt;byte&gt; * int -&gt; int" Usage="unicodeEncoding.GetCharCount (bytes, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="4a3fb-362">要解碼的第一個位元組指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-362">A pointer to the first byte to decode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="4a3fb-363">要解碼的位元組數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-363">The number of bytes to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a3fb-364">計算將起始於指定位元組指標的位元組序列解碼所產生的字元數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-364">Calculates the number of characters produced by decoding a sequence of bytes starting at the specified byte pointer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a3fb-365">解碼指定位元組序列所產生的字元數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-365">The number of characters produced by decoding the specified sequence of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a3fb-366">若要計算確切的陣列大小<xref:System.Text.UnicodeEncoding.GetChars%2A>來儲存產生的字元，而應用程式會使用需要<xref:System.Text.UnicodeEncoding.GetCharCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-366">To calculate the exact array size that <xref:System.Text.UnicodeEncoding.GetChars%2A> requires to store the resulting characters, the application uses <xref:System.Text.UnicodeEncoding.GetCharCount%2A>.</span></span> <span data-ttu-id="4a3fb-367">若要計算最大陣列大小，應用程式應該使用<xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-367">To calculate the maximum array size, the application should use <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>.</span></span> <span data-ttu-id="4a3fb-368"><xref:System.Text.UnicodeEncoding.GetCharCount%2A>方法通常會配置較少的記憶體，而<xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>方法通常執行速度更快。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-368">The <xref:System.Text.UnicodeEncoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="4a3fb-369">使用錯誤偵測的無效的序列會造成此方法會擲回<xref:System.ArgumentException>。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-369">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="4a3fb-370">錯誤偵測無效的序列會被忽略，而不會擲回任何例外狀況。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-370">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4a3fb-371">
            <paramref name="bytes" /> 是 <see langword="null" /> (<see langword="Nothing" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-371">
              <paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4a3fb-372">
            <paramref name="count" /> 小於零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-372">
              <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="4a3fb-373">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-373">-or-</span>
          </span>
          <span data-ttu-id="4a3fb-374">所產生的位元組數目大於可用整數傳回的數目上限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-374">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4a3fb-375">已啟用錯誤偵測，而且 <paramref name="bytes" /> 包含無效的位元組序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-375">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="4a3fb-376">發生後援 (如需更完整的說明，請參閱 [.NET Framework 中的字元編碼方式](~/docs/standard/base-types/character-encoding.md))</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-376">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span>
          </span>
          <span data-ttu-id="4a3fb-377">-和-</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-377">-and-</span>
          </span>
          <span data-ttu-id="4a3fb-378">
            <see cref="P:System.Text.Encoding.DecoderFallback" /> 設定為 <see cref="T:System.Text.DecoderExceptionFallback" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-378">
              <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="4a3fb-379">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-379">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="4a3fb-380">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-380">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="Overload:System.Text.UnicodeEncoding.GetChars" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetDecoder" />
      </Docs>
    </Member>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public override int GetCharCount (byte[] bytes, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetCharCount(unsigned int8[] bytes, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCharCount (bytes As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetCharCount(cli::array &lt;System::Byte&gt; ^ bytes, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.GetCharCount : byte[] * int * int -&gt; int" Usage="unicodeEncoding.GetCharCount (bytes, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="4a3fb-381">包含要解碼之位元組序列的位元組陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-381">The byte array containing the sequence of bytes to decode.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="4a3fb-382">要解碼的第一個位元組索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-382">The index of the first byte to decode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="4a3fb-383">要解碼的位元組數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-383">The number of bytes to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a3fb-384">計算將指定位元組陣列中的位元組序列解碼所產生的字元數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-384">Calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a3fb-385">解碼指定位元組序列所產生的字元數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-385">The number of characters produced by decoding the specified sequence of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a3fb-386">若要計算所需的確切的陣列大小<xref:System.Text.UnicodeEncoding.GetChars%2A>來儲存產生的字元，應用程式會使用<xref:System.Text.UnicodeEncoding.GetCharCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-386">To calculate the exact array size required by <xref:System.Text.UnicodeEncoding.GetChars%2A> to store the resulting characters, the application uses <xref:System.Text.UnicodeEncoding.GetCharCount%2A>.</span></span> <span data-ttu-id="4a3fb-387">若要計算最大陣列大小，應用程式應該使用<xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-387">To calculate the maximum array size, the application should use <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>.</span></span> <span data-ttu-id="4a3fb-388"><xref:System.Text.UnicodeEncoding.GetCharCount%2A>方法通常會配置較少的記憶體，而<xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>方法通常執行速度更快。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-388">The <xref:System.Text.UnicodeEncoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="4a3fb-389">使用錯誤偵測的無效的序列會造成此方法會擲回<xref:System.ArgumentException>。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-389">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="4a3fb-390">錯誤偵測無效的序列會被忽略，而不會擲回任何例外狀況。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-390">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a3fb-391">下列範例示範如何使用<xref:System.Text.UnicodeEncoding.GetCharCount%2A>解碼位元組陣列，使用的項目範圍所產生的方法，以傳回的字元數<xref:System.Text.UnicodeEncoding>。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-391">The following example demonstrates how to use the <xref:System.Text.UnicodeEncoding.GetCharCount%2A> method to return the number of characters produced by decoding a range of elements in a byte array using <xref:System.Text.UnicodeEncoding>.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.GetCharCount Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetCharCount Example/CPP/getcharcount-byte[]-int32-int32.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.GetCharCount Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetCharCount Example/CS/getcharcount-byte[]-int32-int32.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.GetCharCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetCharCount Example/VB/getcharcount-byte[]-int32-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4a3fb-392">
            <paramref name="bytes" /> 是 <see langword="null" /> (<see langword="Nothing" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-392">
              <paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4a3fb-393">
            <paramref name="index" /> 或 <paramref name="count" /> 小於零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-393">
              <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="4a3fb-394">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-394">-or-</span>
          </span>
          <span data-ttu-id="4a3fb-395">
            <paramref name="index" /> 與 <paramref name="count" /> 不代表 <paramref name="bytes" /> 中有效的範圍。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-395">
              <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span>
          </span>
          <span data-ttu-id="4a3fb-396">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-396">-or-</span>
          </span>
          <span data-ttu-id="4a3fb-397">所產生的位元組數目大於可用整數傳回的數目上限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-397">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4a3fb-398">已啟用錯誤偵測，而且 <paramref name="bytes" /> 包含無效的位元組序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-398">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="4a3fb-399">發生後援 (如需更完整的說明，請參閱 [.NET Framework 中的字元編碼方式](~/docs/standard/base-types/character-encoding.md))</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-399">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span>
          </span>
          <span data-ttu-id="4a3fb-400">-和-</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-400">-and-</span>
          </span>
          <span data-ttu-id="4a3fb-401">
            <see cref="P:System.Text.Encoding.DecoderFallback" /> 設定為 <see cref="T:System.Text.DecoderExceptionFallback" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-401">
              <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Text.UnicodeEncoding.GetChars" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetDecoder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetChars">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4a3fb-402">將位元組序列解碼成一組字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-402">Decodes a sequence of bytes into a set of characters.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override int GetChars (byte* bytes, int byteCount, char* chars, int charCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetChars(unsigned int8* bytes, int32 byteCount, char* chars, int32 charCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetChars(System::Byte* bytes, int byteCount, char* chars, int charCount);" />
      <MemberSignature Language="F#" Value="override this.GetChars : nativeptr&lt;byte&gt; * int * nativeptr&lt;char&gt; * int -&gt; int" Usage="unicodeEncoding.GetChars (bytes, byteCount, chars, charCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="byteCount" Type="System.Int32" />
        <Parameter Name="chars" Type="System.Char*" />
        <Parameter Name="charCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="4a3fb-403">要解碼的第一個位元組指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-403">A pointer to the first byte to decode.</span>
          </span>
        </param>
        <param name="byteCount">
          <span data-ttu-id="4a3fb-404">要解碼的位元組數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-404">The number of bytes to decode.</span>
          </span>
        </param>
        <param name="chars">
          <span data-ttu-id="4a3fb-405">開始寫入產生的一組字元之位置指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-405">A pointer to the location at which to start writing the resulting set of characters.</span>
          </span>
        </param>
        <param name="charCount">
          <span data-ttu-id="4a3fb-406">要寫入的最大字元數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-406">The maximum number of characters to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a3fb-407">將起始於指定位元組指標的位元組序列解碼成一組字元；儲存該組字元時，係以指定的字元指標為起始點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-407">Decodes a sequence of bytes starting at the specified byte pointer into a set of characters that are stored starting at the specified character pointer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a3fb-408">
            <paramref name="chars" /> 參數所指示位置上寫入的實際字元數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-408">The actual number of characters written at the location indicated by the <paramref name="chars" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a3fb-409">若要計算確切的陣列大小<xref:System.Text.UnicodeEncoding.GetChars%2A>來儲存產生的字元，而應用程式會使用需要<xref:System.Text.UnicodeEncoding.GetCharCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-409">To calculate the exact array size that <xref:System.Text.UnicodeEncoding.GetChars%2A> requires to store the resulting characters, the application uses <xref:System.Text.UnicodeEncoding.GetCharCount%2A>.</span></span> <span data-ttu-id="4a3fb-410">若要計算最大陣列大小，應用程式應該使用<xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-410">To calculate the maximum array size, the application should use <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>.</span></span> <span data-ttu-id="4a3fb-411"><xref:System.Text.UnicodeEncoding.GetCharCount%2A>方法通常會配置較少的記憶體，而<xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>方法通常執行速度更快。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-411">The <xref:System.Text.UnicodeEncoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="4a3fb-412">使用錯誤偵測的無效的序列會造成此方法會擲回<xref:System.ArgumentException>。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-412">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="4a3fb-413">錯誤偵測無效的序列會被忽略，而不會擲回任何例外狀況。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-413">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="4a3fb-414">如果要解碼的位元組範圍包含位元組順序標記 (BOM)，而非 BOM 感知型別的方法所傳回的位元組陣列，這個方法所傳回的字元陣列中包含的字元 U + FFFE。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-414">If the range of bytes to be decoded includes the byte order mark (BOM) and the byte array was returned by a method of a non-BOM aware type, the character U+FFFE is included in the character array returned by this method.</span></span> <span data-ttu-id="4a3fb-415">您可以呼叫來移除<xref:System.String.TrimStart%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-415">You can remove it by calling the <xref:System.String.TrimStart%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="4a3fb-416">要轉換，例如，從資料流讀取資料的資料可能僅適用於循序區塊。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-416">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="4a3fb-417">在此情況下，或應用程式的資料量很大，它必須分割成較小的區塊時，應該使用<xref:System.Text.Decoder>或<xref:System.Text.Encoder>所提供的物件<xref:System.Text.UnicodeEncoding.GetDecoder%2A>或<xref:System.Text.UnicodeEncoding.GetEncoder%2A>方法，分別。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-417">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> object provided by the <xref:System.Text.UnicodeEncoding.GetDecoder%2A> or the <xref:System.Text.UnicodeEncoding.GetEncoder%2A> method, respectively.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4a3fb-418">
            <paramref name="bytes" /> 是 <see langword="null" /> (<see langword="Nothing" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-418">
              <paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          </span>
          <span data-ttu-id="4a3fb-419">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-419">-or-</span>
          </span>
          <span data-ttu-id="4a3fb-420">
            <paramref name="chars" /> 是 <see langword="null" /> (<see langword="Nothing" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-420">
              <paramref name="chars" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4a3fb-421">
            <paramref name="byteCount" /> 或 <paramref name="charCount" /> 小於零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-421">
              <paramref name="byteCount" /> or <paramref name="charCount" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4a3fb-422">已啟用錯誤偵測，而且 <paramref name="bytes" /> 包含無效的位元組序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-422">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span>
          </span>
          <span data-ttu-id="4a3fb-423">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-423">-or-</span>
          </span>
          <span data-ttu-id="4a3fb-424">
            <paramref name="charCount" /> 小於結果字元數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-424">
              <paramref name="charCount" /> is less than the resulting number of characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="4a3fb-425">發生後援 (如需更完整的說明，請參閱 [.NET Framework 中的字元編碼方式](~/docs/standard/base-types/character-encoding.md))</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-425">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span>
          </span>
          <span data-ttu-id="4a3fb-426">-和-</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-426">-and-</span>
          </span>
          <span data-ttu-id="4a3fb-427">
            <see cref="P:System.Text.Encoding.DecoderFallback" /> 設定為 <see cref="T:System.Text.DecoderExceptionFallback" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-427">
              <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="4a3fb-428">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-428">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="4a3fb-429">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-429">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Text.UnicodeEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetDecoder" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetString(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override int GetChars (byte[] bytes, int byteIndex, int byteCount, char[] chars, int charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetChars(unsigned int8[] bytes, int32 byteIndex, int32 byteCount, char[] chars, int32 charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChars (bytes As Byte(), byteIndex As Integer, byteCount As Integer, chars As Char(), charIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetChars(cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex, int byteCount, cli::array &lt;char&gt; ^ chars, int charIndex);" />
      <MemberSignature Language="F#" Value="override this.GetChars : byte[] * int * int * char[] * int -&gt; int" Usage="unicodeEncoding.GetChars (bytes, byteIndex, byteCount, chars, charIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
        <Parameter Name="byteCount" Type="System.Int32" />
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="charIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="4a3fb-430">包含要解碼之位元組序列的位元組陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-430">The byte array containing the sequence of bytes to decode.</span>
          </span>
        </param>
        <param name="byteIndex">
          <span data-ttu-id="4a3fb-431">要解碼的第一個位元組索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-431">The index of the first byte to decode.</span>
          </span>
        </param>
        <param name="byteCount">
          <span data-ttu-id="4a3fb-432">要解碼的位元組數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-432">The number of bytes to decode.</span>
          </span>
        </param>
        <param name="chars">
          <span data-ttu-id="4a3fb-433">包含產生的一組字元之字元陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-433">The character array to contain the resulting set of characters.</span>
          </span>
        </param>
        <param name="charIndex">
          <span data-ttu-id="4a3fb-434">要開始寫入產生的一組字元之索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-434">The index at which to start writing the resulting set of characters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a3fb-435">將指定位元組陣列中的位元組序列解碼成指定的字元陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-435">Decodes a sequence of bytes from the specified byte array into the specified character array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a3fb-436">寫入 <paramref name="chars" /> 的實際字元數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-436">The actual number of characters written into <paramref name="chars" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a3fb-437">若要計算所需的確切的陣列大小<xref:System.Text.UnicodeEncoding.GetChars%2A>來儲存產生的字元，應用程式會使用<xref:System.Text.UnicodeEncoding.GetCharCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-437">To calculate the exact array size required by <xref:System.Text.UnicodeEncoding.GetChars%2A> to store the resulting characters, the application uses <xref:System.Text.UnicodeEncoding.GetCharCount%2A>.</span></span> <span data-ttu-id="4a3fb-438">若要計算最大陣列大小，應用程式應該使用<xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-438">To calculate the maximum array size, the application should use <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>.</span></span> <span data-ttu-id="4a3fb-439"><xref:System.Text.UnicodeEncoding.GetCharCount%2A>方法通常會配置較少的記憶體，而<xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>方法通常執行速度更快。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-439">The <xref:System.Text.UnicodeEncoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="4a3fb-440">使用錯誤偵測的無效的序列會造成此方法會擲回<xref:System.ArgumentException>。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-440">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="4a3fb-441">錯誤偵測無效的序列會被忽略，而不會擲回任何例外狀況。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-441">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="4a3fb-442">如果要解碼的位元組範圍包含位元組順序標記 (BOM)，而非 BOM 感知型別的方法所傳回的位元組陣列，這個方法所傳回的字元陣列中包含的字元 U + FFFE。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-442">If the range of bytes to be decoded includes the byte order mark (BOM) and the byte array was returned by a method of a non-BOM aware type, the character U+FFFE is included in the character array returned by this method.</span></span> <span data-ttu-id="4a3fb-443">您可以呼叫來移除<xref:System.String.TrimStart%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-443">You can remove it by calling the <xref:System.String.TrimStart%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="4a3fb-444">要轉換，例如，從資料流讀取資料的資料可能僅適用於循序區塊。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-444">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="4a3fb-445">在此情況下，或如果資料量太大，它必須分割成較小的區塊，應該使用應用程式<xref:System.Text.Decoder>或<xref:System.Text.Encoder>所提供<xref:System.Text.UnicodeEncoding.GetDecoder%2A>方法或<xref:System.Text.UnicodeEncoding.GetEncoder%2A>方法，分別。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-445">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UnicodeEncoding.GetDecoder%2A> method or the <xref:System.Text.UnicodeEncoding.GetEncoder%2A> method, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a3fb-446">下列範例示範如何使用<xref:System.Text.UnicodeEncoding.GetChars%2A>方法來解碼位元組陣列中的項目範圍，並將結果儲存在字元陣列。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-446">The following example demonstrates how to use the <xref:System.Text.UnicodeEncoding.GetChars%2A> method to decode a range of elements in a byte array and store the result in a character array.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.GetChars Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetChars Example/CPP/getchars-byte[]-int32-int32-char[]-int32.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.GetChars Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetChars Example/CS/getchars-byte[]-int32-int32-char[]-int32.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.GetChars Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetChars Example/VB/getchars-byte[]-int32-int32-char[]-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4a3fb-447">
            <paramref name="bytes" /> 是 <see langword="null" /> (<see langword="Nothing" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-447">
              <paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          </span>
          <span data-ttu-id="4a3fb-448">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-448">-or-</span>
          </span>
          <span data-ttu-id="4a3fb-449">
            <paramref name="chars" /> 是 <see langword="null" /> (<see langword="Nothing" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-449">
              <paramref name="chars" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4a3fb-450">
            <paramref name="byteIndex" />、<paramref name="byteCount" /> 或 <paramref name="charIndex" /> 小於零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-450">
              <paramref name="byteIndex" /> or <paramref name="byteCount" /> or <paramref name="charIndex" /> is less than zero.</span>
          </span>
          <span data-ttu-id="4a3fb-451">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-451">-or-</span>
          </span>
          <span data-ttu-id="4a3fb-452">
            <paramref name="byteindex" /> 與 <paramref name="byteCount" /> 不代表 <paramref name="bytes" /> 中有效的範圍。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-452">
              <paramref name="byteindex" /> and <paramref name="byteCount" /> do not denote a valid range in <paramref name="bytes" />.</span>
          </span>
          <span data-ttu-id="4a3fb-453">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-453">-or-</span>
          </span>
          <span data-ttu-id="4a3fb-454">
            <paramref name="charIndex" /> 在 <paramref name="chars" /> 中不是有效的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-454">
              <paramref name="charIndex" /> is not a valid index in <paramref name="chars" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4a3fb-455">已啟用錯誤偵測，而且 <paramref name="bytes" /> 包含無效的位元組序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-455">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span>
          </span>
          <span data-ttu-id="4a3fb-456">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-456">-or-</span>
          </span>
          <span data-ttu-id="4a3fb-457">從 <paramref name="chars" /> 到陣列結尾處，<paramref name="charIndex" /> 沒有足夠的容量容納結果字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-457">
              <paramref name="chars" /> does not have enough capacity from <paramref name="charIndex" /> to the end of the array to accommodate the resulting characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="4a3fb-458">發生後援 (如需更完整的說明，請參閱 [.NET Framework 中的字元編碼方式](~/docs/standard/base-types/character-encoding.md))</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-458">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span>
          </span>
          <span data-ttu-id="4a3fb-459">-和-</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-459">-and-</span>
          </span>
          <span data-ttu-id="4a3fb-460">
            <see cref="P:System.Text.Encoding.DecoderFallback" /> 設定為 <see cref="T:System.Text.DecoderExceptionFallback" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-460">
              <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UnicodeEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetDecoder" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetString(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetDecoder">
      <MemberSignature Language="C#" Value="public override System.Text.Decoder GetDecoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Text.Decoder GetDecoder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetDecoder" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDecoder () As Decoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Text::Decoder ^ GetDecoder();" />
      <MemberSignature Language="F#" Value="override this.GetDecoder : unit -&gt; System.Text.Decoder" Usage="unicodeEncoding.GetDecoder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Decoder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4a3fb-461">取得可以將以 UTF-16 編碼的位元組序列轉換成 Unicode 字元序列的解碼器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-461">Obtains a decoder that converts a UTF-16 encoded sequence of bytes into a sequence of Unicode characters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a3fb-462">
            <see cref="T:System.Text.Decoder" />，可以將以 UTF-16 編碼的位元組序列轉換成 Unicode 字元序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-462">A <see cref="T:System.Text.Decoder" /> that converts a UTF-16 encoded sequence of bytes into a sequence of Unicode characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a3fb-463"><xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType>方法會將序列的位元組的區塊轉換成循序區塊中的字元，以類似的方式<xref:System.Text.UnicodeEncoding.GetChars%2A>。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-463">The <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> method converts sequential blocks of bytes into sequential blocks of characters, in a manner similar to the <xref:System.Text.UnicodeEncoding.GetChars%2A>.</span></span> <span data-ttu-id="4a3fb-464">不過，<xref:System.Text.Decoder>維護呼叫，因此它可以正確解碼位元組序列跨越區塊之間的狀態資訊。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-464">However, a <xref:System.Text.Decoder> maintains state information between calls so it can correctly decode byte sequences that span blocks.</span></span> <span data-ttu-id="4a3fb-465"><xref:System.Text.Decoder>也會保留尾端位元組的資料區塊的結尾，並在下一步 的解碼作業中使用尾端位元組。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-465">The <xref:System.Text.Decoder> also preserves trailing bytes at the end of data blocks and uses the trailing bytes in the next decoding operation.</span></span> <span data-ttu-id="4a3fb-466">因此，<xref:System.Text.UnicodeEncoding.GetDecoder%2A>和<xref:System.Text.UnicodeEncoding.GetEncoder%2A>適合用於網路傳輸和檔案作業，因為這些作業經常要處理的資料，而不是完整的資料流區塊。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-466">Therefore, <xref:System.Text.UnicodeEncoding.GetDecoder%2A> and <xref:System.Text.UnicodeEncoding.GetEncoder%2A> are useful for network transmission and file operations, because those operations often deal with blocks of data instead of a complete data stream.</span></span>  
  
 <span data-ttu-id="4a3fb-467">如果已啟用錯誤偵測，亦即`throwOnInvalidBytes`建構函式的參數設定為`true`中, 也已啟用錯誤偵測<xref:System.Text.Decoder>這個方法所傳回。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-467">If error detection is enabled, that is, the `throwOnInvalidBytes` parameter of the constructor is set to `true`, error detection is also enabled in the <xref:System.Text.Decoder> returned by this method.</span></span> <span data-ttu-id="4a3fb-468">如果已啟用錯誤偵測且遇到無效的序列，解碼器的狀態會是未定義，且必須停止處理。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-468">If error detection is enabled and an invalid sequence is encountered, the state of the decoder is undefined and processing must stop.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a3fb-469">下列範例會使用編碼器和解碼器將字串編碼成位元組陣列，並再將位元組解碼為字元陣列。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-469">The following example uses an encoder and a decoder to encode a string into an array of bytes, and then decode the bytes into an array of characters.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.EncDec#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.EncDec/CPP/encdec.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.EncDec#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.EncDec/CS/encdec.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.EncDec#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.EncDec/VB/encdec.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Decoder" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetString(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetEncoder" />
        <related type="Article" href="~/docs/standard/base-types/character-encoding.md">
          <span data-ttu-id="4a3fb-470">了解編碼</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-470">Understanding Encodings</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="GetEncoder">
      <MemberSignature Language="C#" Value="public override System.Text.Encoder GetEncoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Text.Encoder GetEncoder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetEncoder" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEncoder () As Encoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Text::Encoder ^ GetEncoder();" />
      <MemberSignature Language="F#" Value="override this.GetEncoder : unit -&gt; System.Text.Encoder" Usage="unicodeEncoding.GetEncoder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4a3fb-471">取得可以將 Unicode 字元序列轉換成以 UTF-16 編碼的位元組序列的編碼器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-471">Obtains an encoder that converts a sequence of Unicode characters into a UTF-16 encoded sequence of bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a3fb-472">
            <see cref="T:System.Text.Encoder" /> 物件，可以將 Unicode 字元序列轉換成以 UTF-16 編碼的位元組序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-472">A <see cref="T:System.Text.Encoder" /> object that converts a sequence of Unicode characters into a UTF-16 encoded sequence of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a3fb-473"><xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType>方法會將字元的循序區塊轉換成以類似的方式中的位元組序列的區塊<xref:System.Text.UnicodeEncoding.GetBytes%2A>這個類別的方法。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-473">The <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method converts sequential blocks of characters into sequential blocks of bytes in a manner similar to the <xref:System.Text.UnicodeEncoding.GetBytes%2A> method of this class.</span></span> <span data-ttu-id="4a3fb-474">不過，<xref:System.Text.Encoder>物件會維護呼叫之間的狀態資訊，以便它可以正確編碼跨越區塊的字元序列。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-474">However, a <xref:System.Text.Encoder> object maintains state information between calls so that it can correctly encode character sequences that span blocks.</span></span> <span data-ttu-id="4a3fb-475"><xref:System.Text.Encoder>物件也會保留在資料區塊結尾的後置字元，並在下一步 的編碼作業中使用尾端的字元。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-475">The <xref:System.Text.Encoder> object also preserves trailing characters at the end of data blocks and uses the trailing characters in the next encoding operation.</span></span> <span data-ttu-id="4a3fb-476">比方說，資料區塊可能會以無對應的高 surrogate，結尾，而且下一個資料區塊可能會比對的低 surrogate。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-476">For example, a data block might end with an unmatched high surrogate, and the matching low surrogate might be in the next data block.</span></span> <span data-ttu-id="4a3fb-477">因此，<xref:System.Text.UnicodeEncoding.GetDecoder%2A>和<xref:System.Text.UnicodeEncoding.GetEncoder%2A>適合用於網路傳輸和檔案作業，因為這些作業經常要處理的資料，而不是完整的資料流區塊。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-477">Therefore, <xref:System.Text.UnicodeEncoding.GetDecoder%2A> and <xref:System.Text.UnicodeEncoding.GetEncoder%2A> are useful for network transmission and file operations, because those operations often deal with blocks of data instead of a complete data stream.</span></span>  
  
 <span data-ttu-id="4a3fb-478">如果已啟用錯誤偵測，亦即`throwOnInvalidBytes`建構函式的參數設定為`true`中, 也已啟用錯誤偵測<xref:System.Text.Encoder>這個方法所傳回的物件。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-478">If error detection is enabled, that is, the `throwOnInvalidBytes` parameter of the constructor is set to `true`, error detection is also enabled in the <xref:System.Text.Encoder> object returned by this method.</span></span> <span data-ttu-id="4a3fb-479">如果已啟用錯誤偵測且遇到無效的序列，編碼器的狀態會是未定義，且必須停止處理。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-479">If error detection is enabled and an invalid sequence is encountered, the state of the encoder is undefined and processing must stop.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a3fb-480">下列範例會使用編碼器和解碼器將字串編碼成位元組陣列，並再將位元組解碼為字元陣列。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-480">The following example uses an encoder and a decoder to encode a string into an array of bytes, and then decode the bytes into an array of characters.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.EncDec#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.EncDec/CPP/encdec.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.EncDec#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.EncDec/CS/encdec.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.EncDec#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.EncDec/VB/encdec.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Encoder" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetDecoder" />
        <related type="Article" href="~/docs/standard/base-types/character-encoding.md">
          <span data-ttu-id="4a3fb-481">了解編碼</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-481">Understanding Encodings</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="unicodeEncoding.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4a3fb-482">傳回目前執行個體的雜湊碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-482">Returns the hash code for the current instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a3fb-483">目前 <see cref="T:System.Text.UnicodeEncoding" /> 物件的雜湊碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-483">The hash code for the current <see cref="T:System.Text.UnicodeEncoding" /> object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="GetMaxByteCount">
      <MemberSignature Language="C#" Value="public override int GetMaxByteCount (int charCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMaxByteCount(int32 charCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetMaxByteCount(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMaxByteCount (charCount As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMaxByteCount(int charCount);" />
      <MemberSignature Language="F#" Value="override this.GetMaxByteCount : int -&gt; int" Usage="unicodeEncoding.GetMaxByteCount charCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charCount">
          <span data-ttu-id="4a3fb-484">要編碼的字元數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-484">The number of characters to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a3fb-485">計算將指定數目的字元編碼所產生的最大位元組數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-485">Calculates the maximum number of bytes produced by encoding the specified number of characters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a3fb-486">編碼指定字元數所產生的最大位元組數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-486">The maximum number of bytes produced by encoding the specified number of characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a3fb-487">若要計算所需的確切的陣列大小<xref:System.Text.UnicodeEncoding.GetBytes%2A>來儲存產生的位元組，應用程式會使用<xref:System.Text.UnicodeEncoding.GetByteCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-487">To calculate the exact array size required by <xref:System.Text.UnicodeEncoding.GetBytes%2A> to store the resulting bytes, the application uses <xref:System.Text.UnicodeEncoding.GetByteCount%2A>.</span></span> <span data-ttu-id="4a3fb-488">若要計算最大陣列大小，應用程式應該使用<xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-488">To calculate the maximum array size, the application should use <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A>.</span></span> <span data-ttu-id="4a3fb-489"><xref:System.Text.UnicodeEncoding.GetByteCount%2A>方法通常會配置較少的記憶體，而<xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A>方法通常執行速度更快。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-489">The <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="4a3fb-490"><xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> 擷取最壞情況的數目，包括目前所選最壞的情況<xref:System.Text.EncoderFallback>。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-490"><xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> retrieves a worst-case number, including the worst case for the currently selected <xref:System.Text.EncoderFallback>.</span></span> <span data-ttu-id="4a3fb-491">如果後援會選擇使用可能很大的字串、<xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A>可以傳回較大的值。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-491">If a fallback is chosen with a potentially large string, <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> can return large values.</span></span>  
  
 <span data-ttu-id="4a3fb-492">在大部分情況下，這個方法會擷取對小型字串合理的數字。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-492">In most cases, this method retrieves reasonable numbers for small strings.</span></span> <span data-ttu-id="4a3fb-493">針對大型的字串，您可能選擇使用極大的緩衝區，少數的情況下，更合理的緩衝區已超出攔截錯誤。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-493">For large strings, you might have to choose between using very large buffers and catching errors in the rare case that a more reasonable buffer is exceeded.</span></span> <span data-ttu-id="4a3fb-494">您也可以在不同的方法使用，請考慮<xref:System.Text.UnicodeEncoding.GetByteCount%2A>或<xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-494">You might also want to consider a different approach using <xref:System.Text.UnicodeEncoding.GetByteCount%2A> or <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="4a3fb-495"><xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> 沒有任何關聯<xref:System.Text.UnicodeEncoding.GetChars%2A>。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-495"><xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> has no relation to <xref:System.Text.UnicodeEncoding.GetChars%2A>.</span></span> <span data-ttu-id="4a3fb-496">如果您的應用程式需要類似的函式，以搭配<xref:System.Text.UnicodeEncoding.GetChars%2A>，它應該使用<xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-496">If your application needs a similar function to use with <xref:System.Text.UnicodeEncoding.GetChars%2A>, it should use <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4a3fb-497">`GetMaxByteCount(N)` 不一定是相同的值`N* GetMaxByteCount(1)`。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-497">`GetMaxByteCount(N)` is not necessarily the same value as `N* GetMaxByteCount(1)`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a3fb-498">下列範例示範如何使用<xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A>方法傳回的編碼指定的字元數所需的位元組數目上限。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-498">The following example demonstrates how to use the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method to return the maximum number of bytes required to encode a specified number of characters.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.GetMaxByteCount Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetMaxByteCount Example/CPP/getmaxbytecount-int32.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.GetMaxByteCount Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetMaxByteCount Example/CS/getmaxbytecount-int32.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.GetMaxByteCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetMaxByteCount Example/VB/getmaxbytecount-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4a3fb-499">
            <paramref name="charCount" /> 小於零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-499">
              <paramref name="charCount" /> is less than zero.</span>
          </span>
          <span data-ttu-id="4a3fb-500">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-500">-or-</span>
          </span>
          <span data-ttu-id="4a3fb-501">所產生的位元組數目大於可用整數傳回的數目上限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-501">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="4a3fb-502">發生後援 (如需更完整的說明，請參閱 [.NET Framework 中的字元編碼方式](~/docs/standard/base-types/character-encoding.md))</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-502">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span>
          </span>
          <span data-ttu-id="4a3fb-503">-和-</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-503">-and-</span>
          </span>
          <span data-ttu-id="4a3fb-504">
            <see cref="P:System.Text.Encoding.EncoderFallback" /> 設定為 <see cref="T:System.Text.EncoderExceptionFallback" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-504">
              <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UnicodeEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetMaxCharCount">
      <MemberSignature Language="C#" Value="public override int GetMaxCharCount (int byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMaxCharCount(int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetMaxCharCount(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMaxCharCount (byteCount As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMaxCharCount(int byteCount);" />
      <MemberSignature Language="F#" Value="override this.GetMaxCharCount : int -&gt; int" Usage="unicodeEncoding.GetMaxCharCount byteCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="byteCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="byteCount">
          <span data-ttu-id="4a3fb-505">要解碼的位元組數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-505">The number of bytes to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a3fb-506">計算將指定數目的位元組解碼所產生的最大字元數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-506">Calculates the maximum number of characters produced by decoding the specified number of bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a3fb-507">解碼指定位元組數所產生的最大字元數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-507">The maximum number of characters produced by decoding the specified number of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a3fb-508">若要計算所需的確切的陣列大小<xref:System.Text.UnicodeEncoding.GetChars%2A>來儲存產生的字元，應用程式會使用<xref:System.Text.UnicodeEncoding.GetCharCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-508">To calculate the exact array size required by <xref:System.Text.UnicodeEncoding.GetChars%2A> to store the resulting characters, the application uses <xref:System.Text.UnicodeEncoding.GetCharCount%2A>.</span></span> <span data-ttu-id="4a3fb-509">若要計算最大陣列大小，應用程式應該使用<xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-509">To calculate the maximum array size, the application should use <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>.</span></span> <span data-ttu-id="4a3fb-510"><xref:System.Text.UnicodeEncoding.GetCharCount%2A>方法通常會配置較少的記憶體，而<xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>方法通常執行速度更快。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-510">The <xref:System.Text.UnicodeEncoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="4a3fb-511"><xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> 擷取最壞情況的數目，包括目前所選最壞的情況<xref:System.Text.DecoderFallback>。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-511"><xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> retrieves a worst-case number, including the worst case for the currently selected <xref:System.Text.DecoderFallback>.</span></span> <span data-ttu-id="4a3fb-512">如果後援會選擇使用可能很大的字串、<xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>擷取較大的值。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-512">If a fallback is chosen with a potentially large string, <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> retrieves large values.</span></span>  
  
 <span data-ttu-id="4a3fb-513">在大部分情況下，這個方法會擷取對小型字串合理的數字。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-513">In most cases, this method retrieves reasonable numbers for small strings.</span></span> <span data-ttu-id="4a3fb-514">針對大型的字串，您可能選擇使用極大的緩衝區，少數的情況下，更合理的緩衝區已超出攔截錯誤。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-514">For large strings, you might have to choose between using very large buffers and catching errors in the rare case that a more reasonable buffer is exceeded.</span></span> <span data-ttu-id="4a3fb-515">您也可以在不同的方法使用，請考慮<xref:System.Text.UnicodeEncoding.GetCharCount%2A>或<xref:System.Text.Decoder.Convert%2A>。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-515">You might also want to consider a different approach using <xref:System.Text.UnicodeEncoding.GetCharCount%2A> or <xref:System.Text.Decoder.Convert%2A>.</span></span>  
  
 <span data-ttu-id="4a3fb-516"><xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> 沒有任何關聯<xref:System.Text.UnicodeEncoding.GetBytes%2A>。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-516"><xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> has no relation to <xref:System.Text.UnicodeEncoding.GetBytes%2A>.</span></span> <span data-ttu-id="4a3fb-517">如果您的應用程式需要類似的函式，以搭配<xref:System.Text.UnicodeEncoding.GetBytes%2A>，它應該使用<xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-517">If your application needs a similar function to use with <xref:System.Text.UnicodeEncoding.GetBytes%2A>, it should use <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4a3fb-518">`GetMaxCharCount(N)` 不一定是相同的值`N* GetMaxCharCount(1)`。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-518">`GetMaxCharCount(N)` is not necessarily the same value as `N* GetMaxCharCount(1)`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a3fb-519">下列範例示範如何使用<xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>解碼指定的位元組數所產生的方法，以傳回的字元數上限。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-519">The following example demonstrates how to use the <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> method to return the maximum number of characters produced by decoding a specified number of bytes.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.GetMaxCharCount Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetMaxCharCount Example/CPP/getmaxcharcount-int32.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.GetMaxCharCount Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetMaxCharCount Example/CS/getmaxcharcount-int32.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.GetMaxCharCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetMaxCharCount Example/VB/getmaxcharcount-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4a3fb-520">
            <paramref name="byteCount" /> 小於零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-520">
              <paramref name="byteCount" /> is less than zero.</span>
          </span>
          <span data-ttu-id="4a3fb-521">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-521">-or-</span>
          </span>
          <span data-ttu-id="4a3fb-522">所產生的位元組數目大於可用整數傳回的數目上限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-522">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="4a3fb-523">發生後援 (如需更完整的說明，請參閱 [.NET Framework 中的字元編碼方式](~/docs/standard/base-types/character-encoding.md))</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-523">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span>
          </span>
          <span data-ttu-id="4a3fb-524">-和-</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-524">-and-</span>
          </span>
          <span data-ttu-id="4a3fb-525">
            <see cref="P:System.Text.Encoding.DecoderFallback" /> 設定為 <see cref="T:System.Text.DecoderExceptionFallback" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-525">
              <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UnicodeEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetString(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetDecoder" />
      </Docs>
    </Member>
    <Member MemberName="GetPreamble">
      <MemberSignature Language="C#" Value="public override byte[] GetPreamble ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] GetPreamble() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetPreamble" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetPreamble () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ GetPreamble();" />
      <MemberSignature Language="F#" Value="override this.GetPreamble : unit -&gt; byte[]" Usage="unicodeEncoding.GetPreamble " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4a3fb-526">如果這個執行個體的建構函式要求位元組順序標記，則會傳回以 UTF-16 格式編碼的 Unicode 位元組順序標記。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-526">Returns a Unicode byte order mark encoded in UTF-16 format, if the constructor for this instance requests a byte order mark.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a3fb-527">如果設定 <see cref="T:System.Text.UnicodeEncoding" /> 物件提供編碼方式，則為包含 Unicode 位元組順序標記的位元組陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-527">A byte array containing the Unicode byte order mark, if the <see cref="T:System.Text.UnicodeEncoding" /> object is configured to supply one.</span>
          </span>
          <span data-ttu-id="4a3fb-528">否則，這個方法會傳回長度為零的位元組陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-528">Otherwise, this method returns a zero-length byte array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a3fb-529"><xref:System.Text.UnicodeEncoding>物件可以提供前序編碼，也就是可以加在編碼程序所產生的位元組序列的位元組陣列。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-529">The <xref:System.Text.UnicodeEncoding> object can provide a preamble, which is a byte array that can be prefixed to the sequence of bytes resulting from the encoding process.</span></span> <span data-ttu-id="4a3fb-530">引用編碼的位元組序列的位元組順序標記 （字碼元素 U + FEFF） 有助於判斷位元組順序的轉換格式或 UTF 解碼器。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-530">Prefacing a sequence of encoded bytes with a byte order mark (code point U+FEFF) helps the decoder determine the byte order and the transformation format or UTF.</span></span> <span data-ttu-id="4a3fb-531">Unicode 位元組順序標記 (BOM) （以十六進位方式） 的序列化，如下所示：</span><span class="sxs-lookup"><span data-stu-id="4a3fb-531">The Unicode byte order mark (BOM) is serialized as follows (in hexadecimal):</span></span>  
  
-   <span data-ttu-id="4a3fb-532">由大到小的位元組順序： FE FF</span><span class="sxs-lookup"><span data-stu-id="4a3fb-532">Big endian byte order: FE FF</span></span>  
  
-   <span data-ttu-id="4a3fb-533">一些位元組由小到大位元組順序： FF FE</span><span class="sxs-lookup"><span data-stu-id="4a3fb-533">Little endian byte order: FF FE</span></span>  
  
 <span data-ttu-id="4a3fb-534">您可以具現化<xref:System.Text.UnicodeEncoding>物件，其<xref:System.Text.UnicodeEncoding.GetPreamble%2A>方法會傳回有效的 BOM 如下：</span><span class="sxs-lookup"><span data-stu-id="4a3fb-534">You can instantiate a <xref:System.Text.UnicodeEncoding> object whose <xref:System.Text.UnicodeEncoding.GetPreamble%2A> method returns a valid BOM in the following ways:</span></span>  
  
-   <span data-ttu-id="4a3fb-535">藉由擷取<xref:System.Text.UnicodeEncoding>所傳回的物件<xref:System.Text.Encoding.Unicode%2A?displayProperty=nameWithType>或<xref:System.Text.Encoding.BigEndianUnicode%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-535">By retrieving the <xref:System.Text.UnicodeEncoding> object returned by the <xref:System.Text.Encoding.Unicode%2A?displayProperty=nameWithType> or <xref:System.Text.Encoding.BigEndianUnicode%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="4a3fb-536">藉由呼叫無參數<xref:System.Text.UnicodeEncoding.%23ctor>建構函式來具現化<xref:System.Text.UnicodeEncoding>物件。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-536">By calling the parameterless <xref:System.Text.UnicodeEncoding.%23ctor> constructor to instantiate a <xref:System.Text.UnicodeEncoding> object.</span></span>  
  
-   <span data-ttu-id="4a3fb-537">藉由提供`true`的值`byteOrderMark`引數<xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%29>或<xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29>建構函式。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-537">By supplying `true` as the value of the `byteOrderMark` argument to the <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%29> or <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> constructors.</span></span>  
  
 <span data-ttu-id="4a3fb-538">我們建議使用 BOM，因為它提供幾乎已遺失參照為其編碼，例如未標記或標記不當的檔案編碼方式的特定識別 web 資料或儲存時企業的隨機文字檔案沒有國際考量。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-538">We recommended that you use the BOM, since it provides nearly certain identification of an encoding for files that otherwise have lost a reference to their encoding, such as untagged or improperly tagged web data or random text files stored when a business did not have international concerns.</span></span> <span data-ttu-id="4a3fb-539">如果資料一致的方式適當地標記，就能避免通常使用者的問題。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-539">Often user problems might be avoided if data is consistently and properly tagged.</span></span>  
  
 <span data-ttu-id="4a3fb-540">提供編碼類型的標準，BOM 是多餘的。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-540">For standards that provide an encoding type, a BOM is somewhat redundant.</span></span> <span data-ttu-id="4a3fb-541">不過，它可以用來傳送正確的編碼方式標頭的伺服器。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-541">However, it can be used to help a server send the correct encoding header.</span></span> <span data-ttu-id="4a3fb-542">或者，它可用來當做後援萬一編碼遺失時。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-542">Alternatively, it can be used as a fallback in case the encoding is otherwise lost.</span></span>  
  
 <span data-ttu-id="4a3fb-543">有一些缺點，若要使用 BOM。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-543">There are some disadvantages to using a BOM.</span></span> <span data-ttu-id="4a3fb-544">比方說，了解如何限制使用 BOM 的資料庫欄位可以是很困難。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-544">For example, knowing how to limit the database fields that use a BOM can be difficult.</span></span> <span data-ttu-id="4a3fb-545">串連的檔案可以也會是問題，比方說，當檔案會合併，例如某種程度的不必要的字元可以得到中間的資料。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-545">Concatenation of files can be a problem also, for example, when files are merged in such a way that an unnecessary character can end up in the middle of data.</span></span> <span data-ttu-id="4a3fb-546">儘管幾個缺點，不過，BOM 是強烈建議使用。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-546">In spite of the few disadvantages, however, the use of a BOM is highly recommended.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="4a3fb-547">若要確保正確解碼的編碼的位元組，您應該前置詞與前序編碼的位元組資料流的開頭。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-547">To ensure that the encoded bytes are decoded properly, you should prefix the beginning of a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="4a3fb-548">請注意，<xref:System.Text.UnicodeEncoding.GetBytes%2A>方法不會不在前面加上 BOM 編碼的位元組序列; 開發人員的責任提供適當的位元組資料流的開頭 BOM。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-548">Note that the <xref:System.Text.UnicodeEncoding.GetBytes%2A> method does not prepend a BOM to a sequence of encoded bytes; supplying a BOM at the beginning of an appropriate byte stream is the developer's responsibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a3fb-549">下列範例示範如何使用<xref:System.Text.UnicodeEncoding.GetPreamble%2A>方法來擷取 big endian 或小小的位元組由小到大位元組順序的執行個體中的 Unicode 位元組順序標示<xref:System.Text.UnicodeEncoding>。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-549">The following example demonstrates how to use the <xref:System.Text.UnicodeEncoding.GetPreamble%2A> method to retrieve the Unicode byte order mark in big endian or little endian byte order for an instance of a <xref:System.Text.UnicodeEncoding>.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.GetPreamble Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetPreamble Example/CPP/getpreamble-.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.GetPreamble Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetPreamble Example/CS/getpreamble-.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.GetPreamble Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetPreamble Example/VB/getpreamble-.vb#1)]  
  
 <span data-ttu-id="4a3fb-550">下列範例具現化兩個<xref:System.Text.UnicodeEncoding>BOM，且第二個，而其執行的第一個不提供的物件。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-550">The following example instantiates two <xref:System.Text.UnicodeEncoding> objects, the first of which does not provide a BOM, and the second of which does.</span></span> <span data-ttu-id="4a3fb-551">然後它會呼叫<xref:System.Text.UnicodeEncoding.GetPreamble%2A>方法來寫入檔案中的 BOM 之前撰寫的 Unicode 編碼的字串。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-551">It then calls the <xref:System.Text.UnicodeEncoding.GetPreamble%2A> method to write the BOM to a file before writing a Unicode-encoded string.</span></span> <span data-ttu-id="4a3fb-552">如主控台輸出範例所示，從第二個編碼器會將位元組儲存的檔案會有三個的多個位元組，比第一個。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-552">As the console output from the example shows, the file that saves the bytes from the second encoder has three more bytes than the first.</span></span>  
  
 [!code-csharp[System.Text.UnicodeEncoding.GetPreamble#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Text.UnicodeEncoding.GetPreamble/cs/GetPreamble1.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.GetPreamble#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Text.UnicodeEncoding.GetPreamble/vb/GetPreamble1.vb#1)]  
  
 <span data-ttu-id="4a3fb-553">您也可以藉由比較檔案`fc`命令主控台視窗中，或者您可以檢查包含十六進位檢視模式的文字編輯器中的檔案。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-553">You can also compare the files by using the `fc` command in a console window, or you can inspect the files in a text editor that includes a Hex View mode.</span></span> <span data-ttu-id="4a3fb-554">請注意，當支援 utf-16 編碼的編輯器中開啟檔案，BOM 會不會顯示。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-554">Note that when the file is opened in an editor that supports UTF-16 encoding, the BOM is not displayed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public override string GetString (byte[] bytes, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetString(unsigned int8[] bytes, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetString(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetString (bytes As Byte(), index As Integer, count As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetString(cli::array &lt;System::Byte&gt; ^ bytes, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.GetString : byte[] * int * int -&gt; string" Usage="unicodeEncoding.GetString (bytes, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="4a3fb-555">包含要解碼之位元組序列的位元組陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-555">The byte array containing the sequence of bytes to decode.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="4a3fb-556">要解碼的第一個位元組索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-556">The index of the first byte to decode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="4a3fb-557">要解碼的位元組數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-557">The number of bytes to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a3fb-558">將位元組陣列中的某一段位元組範圍解碼成字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-558">Decodes a range of bytes from a byte array into a string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a3fb-559">
            <see cref="T:System.String" /> 物件，包含將指定之位元組序列解碼的結果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-559">A <see cref="T:System.String" /> object containing the results of decoding the specified sequence of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a3fb-560">使用錯誤偵測的無效的序列會造成此方法會擲回<xref:System.ArgumentException>。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-560">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="4a3fb-561">錯誤偵測無效的序列會被忽略，而不會擲回任何例外狀況。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-561">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="4a3fb-562">如果要解碼的位元組範圍包含位元組順序標記 (BOM)，而非 BOM 感知型別的方法所傳回的位元組陣列，這個方法所傳回的字元陣列中包含的字元 U + FFFE。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-562">If the range of bytes to be decoded includes the byte order mark (BOM) and the byte array was returned by a method of a non-BOM aware type, the character U+FFFE is included in the character array returned by this method.</span></span> <span data-ttu-id="4a3fb-563">您可以呼叫來移除<xref:System.String.TrimStart%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-563">You can remove it by calling the <xref:System.String.TrimStart%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="4a3fb-564">要轉換，例如，從資料流讀取資料的資料可能僅適用於循序區塊。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-564">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="4a3fb-565">在此情況下，或應用程式的資料量很大，它必須分割成較小的區塊時，應該使用<xref:System.Text.Decoder>或<xref:System.Text.Encoder>所提供的物件<xref:System.Text.UnicodeEncoding.GetDecoder%2A>或<xref:System.Text.UnicodeEncoding.GetEncoder%2A>方法，分別。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-565">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> object provided by the <xref:System.Text.UnicodeEncoding.GetDecoder%2A> or the <xref:System.Text.UnicodeEncoding.GetEncoder%2A> method, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a3fb-566">下列範例會藉由呼叫初始化陣列<xref:System.Text.UnicodeEncoding.GetByteCount%2A>方法，以判斷完全多少個位元組所需編碼的字串，然後再將位元組順序標記 (BOM) 的大小。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-566">The following example initializes an array by calling the <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method to determine exactly how many bytes are required for an encoded string and then adding the size of the byte order mark (BOM).</span></span> <span data-ttu-id="4a3fb-567">此範例接著會呼叫<xref:System.Text.UnicodeEncoding.GetPreamble%2A>方法，可儲存至的陣列，然後再呼叫 BOM<xref:System.Text.Encoding.GetBytes%2A>儲存編碼的位元組陣列的方法。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-567">The example then calls the <xref:System.Text.UnicodeEncoding.GetPreamble%2A> method to store the BOM to the array before calling the <xref:System.Text.Encoding.GetBytes%2A> method to store the encoded bytes to the array.</span></span> <span data-ttu-id="4a3fb-568">此範例接著會呼叫<xref:System.Text.UnicodeEncoding.GetString%2A>方法來解碼的字串。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-568">The example then calls the <xref:System.Text.UnicodeEncoding.GetString%2A> method to decode the string.</span></span>  
  
 [!code-csharp[System.Text.UTF8Encoding.GetString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.utf8encoding.getstring/cs/getstring1.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.utf8encoding.getstring/vb/getstring1.vb#1)]  
  
 <span data-ttu-id="4a3fb-569">請注意，在此情況下已解碼的字串不同於原始的字串，因為其開頭為 U + FFFD 的 16 位元的位元組順序標記。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-569">Note that in this case the decoded string differs from the original string, since it begins with a 16-bit byte order mark U+FFFD.</span></span> <span data-ttu-id="4a3fb-570">這表示兩個字串將會比較結果不相等，而且，如果字串為輸出，BOM 會顯示為取代字元"？"。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-570">This means that the two strings will compare as unequal, and that if the string is output, the BOM will be displayed as the replacement character "?".</span></span> <span data-ttu-id="4a3fb-571">若要移除的字串開頭 BOM，您可以呼叫<xref:System.String.TrimStart%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="4a3fb-571">To remove the BOM at the beginning of the string, you can call the <xref:System.String.TrimStart%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4a3fb-572">
            <paramref name="bytes" /> 是 <see langword="null" /> (<see langword="Nothing" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-572">
              <paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4a3fb-573">
            <paramref name="index" /> 或 <paramref name="count" /> 小於零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-573">
              <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="4a3fb-574">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-574">-or-</span>
          </span>
          <span data-ttu-id="4a3fb-575">
            <paramref name="index" /> 和 <paramref name="count" /> 不代表 <paramref name="bytes" /> 中有效的範圍。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-575">
              <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4a3fb-576">已啟用錯誤偵測，而且 <paramref name="bytes" /> 包含無效的位元組序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-576">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="4a3fb-577">發生後援 (如需更完整的說明，請參閱 [.NET Framework 中的字元編碼方式](~/docs/standard/base-types/character-encoding.md))</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-577">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span>
          </span>
          <span data-ttu-id="4a3fb-578">-和-</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-578">-and-</span>
          </span>
          <span data-ttu-id="4a3fb-579">
            <see cref="P:System.Text.Encoding.DecoderFallback" /> 設定為 <see cref="T:System.Text.DecoderExceptionFallback" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3fb-579">
              <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UnicodeEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetDecoder" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetMaxCharCount(System.Int32)" />
      </Docs>
    </Member>
  </Members>
</Type>