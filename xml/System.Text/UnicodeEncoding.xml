<Type Name="UnicodeEncoding" FullName="System.Text.UnicodeEncoding">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="37bb8ffd133cbb1ddd3c3fdd2f593086d39584aa" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class UnicodeEncoding : System.Text.Encoding" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit UnicodeEncoding extends System.Text.Encoding" />
  <TypeSignature Language="DocId" Value="T:System.Text.UnicodeEncoding" />
  <TypeSignature Language="VB.NET" Value="Public Class UnicodeEncoding&#xA;Inherits Encoding" />
  <TypeSignature Language="C++ CLI" Value="public ref class UnicodeEncoding : System::Text::Encoding" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Text.Encoding</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="4dd73-101">代表 Unicode 字元的 UTF-16 編碼方式。</span>
      <span class="sxs-lookup">
        <span data-stu-id="4dd73-101">Represents a UTF-16 encoding of Unicode characters.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4dd73-102">編碼是將一組 Unicode 字元轉換成位元組序列的處理程序。</span><span class="sxs-lookup"><span data-stu-id="4dd73-102">Encoding is the process of transforming a set of Unicode characters into a sequence of bytes.</span></span> <span data-ttu-id="4dd73-103">解碼則是將編碼的位元組序列轉換成一組 Unicode 字元的程序。</span><span class="sxs-lookup"><span data-stu-id="4dd73-103">Decoding is the process of transforming a sequence of encoded bytes into a set of Unicode characters.</span></span>  
  
 <span data-ttu-id="4dd73-104">[Unicode 標準](http://go.microsoft.com/fwlink/?linkid=37123)指派每個受支援字集中的每個字元的字碼指標 （數字）。</span><span class="sxs-lookup"><span data-stu-id="4dd73-104">The [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123) assigns a code point (a number) to each character in every supported script.</span></span> <span data-ttu-id="4dd73-105">Unicode 轉換格式 (UTF-8) 是要編碼的字碼指標的方法。</span><span class="sxs-lookup"><span data-stu-id="4dd73-105">A Unicode Transformation Format (UTF) is a way to encode that code point.</span></span> <span data-ttu-id="4dd73-106">[Unicode 標準](http://go.microsoft.com/fwlink/?linkid=37123)會使用下列 UTFs:</span><span class="sxs-lookup"><span data-stu-id="4dd73-106">The [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123) uses the following UTFs:</span></span>  
  
-   <span data-ttu-id="4dd73-107">Utf-8，以一到四個位元組的序列表示每個字碼指標。</span><span class="sxs-lookup"><span data-stu-id="4dd73-107">UTF-8, which represents each code point as a sequence of one to four bytes.</span></span>  
  
-   <span data-ttu-id="4dd73-108">Utf-16，做為一到兩個 16 位元整數的序列表示每個字碼指標。</span><span class="sxs-lookup"><span data-stu-id="4dd73-108">UTF-16, which represents each code point as a sequence of one to two 16-bit integers.</span></span>  
  
-   <span data-ttu-id="4dd73-109">Utf-32，將每個字碼指標表示成 32 位元整數。</span><span class="sxs-lookup"><span data-stu-id="4dd73-109">UTF-32, which represents each code point as a 32-bit integer.</span></span>  
  
 <span data-ttu-id="4dd73-110">如需有關 UTFs 和其他支援的編碼<xref:System.Text>，請參閱[字元編碼方式在.NET Framework](~/docs/standard/base-types/character-encoding.md)。</span><span class="sxs-lookup"><span data-stu-id="4dd73-110">For more information about the UTFs and other encodings supported by <xref:System.Text>, see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md).</span></span>  
  
 <span data-ttu-id="4dd73-111"><xref:System.Text.UnicodeEncoding>類別代表的 utf-16 編碼方式。</span><span class="sxs-lookup"><span data-stu-id="4dd73-111">The <xref:System.Text.UnicodeEncoding> class represents a UTF-16 encoding.</span></span> <span data-ttu-id="4dd73-112">編碼器可以使用任何大到小的位元組順序 (最大顯著性位元組第一個) 或很少位元組由小到大位元組順序 (最小顯著性位元組第一個)。</span><span class="sxs-lookup"><span data-stu-id="4dd73-112">The encoder can use either big endian byte order (most significant byte first) or little endian byte order (least significant byte first).</span></span> <span data-ttu-id="4dd73-113">例如，英文大寫字母 （字碼指標 U + 0041） 序列化如下 （以十六進位方式）：</span><span class="sxs-lookup"><span data-stu-id="4dd73-113">For example, the Latin Capital Letter A (code point U+0041) is serialized as follows (in hexadecimal):</span></span>  
  
-   <span data-ttu-id="4dd73-114">Big 位元組由小到大位元組順序： 00 00 00 41</span><span class="sxs-lookup"><span data-stu-id="4dd73-114">Big endian byte order: 00 00 00 41</span></span>  
  
-   <span data-ttu-id="4dd73-115">很少位元組由小到大位元組順序： 41 00 00 00</span><span class="sxs-lookup"><span data-stu-id="4dd73-115">Little endian byte order: 41 00 00 00</span></span>  
  
 <span data-ttu-id="4dd73-116">它會儲存在特定平台的原生的位元組順序的 Unicode 字元通常更有效率。</span><span class="sxs-lookup"><span data-stu-id="4dd73-116">It is generally more efficient to store Unicode characters using the native byte order of a particular platform.</span></span> <span data-ttu-id="4dd73-117">例如，最好使用位元組由小到大位元組順序少位元組由小到大的平台，例如 Intel 電腦上。</span><span class="sxs-lookup"><span data-stu-id="4dd73-117">For example, it is better to use the little endian byte order on little endian platforms, such as Intel computers.</span></span> <span data-ttu-id="4dd73-118"><xref:System.Text.UnicodeEncoding>類別會對應到 Windows 字碼頁 1200 （少位元組由小到大位元組順序） 和 1201 （大到小的位元組順序）。</span><span class="sxs-lookup"><span data-stu-id="4dd73-118">The <xref:System.Text.UnicodeEncoding> class corresponds to the Windows code pages 1200 (little endian byte order) and 1201 (big endian byte order).</span></span> <span data-ttu-id="4dd73-119">您可以判斷特定架構 」 endianness 電腦 」，藉由呼叫<xref:System.BitConverter.IsLittleEndian?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="4dd73-119">You can determine the "endianness" of a particular architecture by calling the <xref:System.BitConverter.IsLittleEndian?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="4dd73-120">（選擇性）<xref:System.Text.UnicodeEncoding>物件所提供的位元組順序標記 (BOM)，也就是可以加在編碼程序所產生的位元組序列的位元組陣列。</span><span class="sxs-lookup"><span data-stu-id="4dd73-120">Optionally, the <xref:System.Text.UnicodeEncoding> object provides a byte order mark (BOM), which is an array of bytes that can be prefixed to the sequence of bytes resulting from the encoding process.</span></span> <span data-ttu-id="4dd73-121">如果前序編碼包含位元組順序標示 (BOM)，它可以協助判斷位元組順序的轉換格式或 UTF-8 解碼器。</span><span class="sxs-lookup"><span data-stu-id="4dd73-121">If the preamble contains a byte order mark (BOM), it helps the decoder determine the byte order and the transformation format or UTF.</span></span>  
  
 <span data-ttu-id="4dd73-122">如果<xref:System.Text.UnicodeEncoding>執行個體已設定為提供 BOM，您可以呼叫來擷取<xref:System.Text.UnicodeEncoding.GetPreamble%2A>方法; 否則方法會傳回空陣列。</span><span class="sxs-lookup"><span data-stu-id="4dd73-122">If the <xref:System.Text.UnicodeEncoding> instance is configured to provide a BOM, you can retrieve it by calling the <xref:System.Text.UnicodeEncoding.GetPreamble%2A> method; otherwise, the method returns an empty array.</span></span> <span data-ttu-id="4dd73-123">請注意，即使<xref:System.Text.UnicodeEncoding>BOM 支援的設定物件，您必須包含適當; 編碼的位元組資料流的開頭 BOM 編碼方式的<xref:System.Text.UnicodeEncoding>類別不這麼做會自動。</span><span class="sxs-lookup"><span data-stu-id="4dd73-123">Note that, even if a <xref:System.Text.UnicodeEncoding> object is configured for BOM support, you must include the BOM at the beginning of the encoded byte stream as appropriate; the encoding methods of the <xref:System.Text.UnicodeEncoding> class do not do this automatically.</span></span>  
  
 <span data-ttu-id="4dd73-124">若要啟用錯誤偵測，並讓類別執行個體更安全，您應該執行個體化<xref:System.Text.UnicodeEncoding>藉由呼叫物件<xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29>建構函式，並設定其`throwOnInvalidBytes`引數`true`。</span><span class="sxs-lookup"><span data-stu-id="4dd73-124">To enable error detection and to make the class instance more secure, you should instantiate a <xref:System.Text.UnicodeEncoding> object by calling the <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> constructor and setting its `throwOnInvalidBytes` argument to `true`.</span></span> <span data-ttu-id="4dd73-125">使用錯誤偵測，偵測到無效的字元或位元組序列的方法會擲回<xref:System.ArgumentException>。</span><span class="sxs-lookup"><span data-stu-id="4dd73-125">With error detection, a method that detects an invalid sequence of characters or bytes throws a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="4dd73-126">錯誤偵測，擲回任何例外狀況，而不正確的順序通常會遭到忽略。</span><span class="sxs-lookup"><span data-stu-id="4dd73-126">Without error detection, no exception is thrown, and the invalid sequence is generally ignored.</span></span>  
  
 <span data-ttu-id="4dd73-127">您可以具現化<xref:System.Text.UnicodeEncoding>數種方式，根據是否要它提供位元組順序標示 (BOM)、 是否要位元組由大到小或由小到大的編碼方式，以及是否要啟用錯誤偵測的物件。</span><span class="sxs-lookup"><span data-stu-id="4dd73-127">You can instantiate a <xref:System.Text.UnicodeEncoding> object in a number of ways, depending on whether you want to it to provide a byte order mark (BOM), whether you want big-endian or little-endian encoding, and whether you want to enable error detection.</span></span> <span data-ttu-id="4dd73-128">下表列出<xref:System.Text.UnicodeEncoding>建構函式和<xref:System.Text.Encoding>屬性會傳回<xref:System.Text.UnicodeEncoding>物件。</span><span class="sxs-lookup"><span data-stu-id="4dd73-128">The following table lists the <xref:System.Text.UnicodeEncoding> constructors and the <xref:System.Text.Encoding> properties that return a <xref:System.Text.UnicodeEncoding> object.</span></span>  
  
|<span data-ttu-id="4dd73-129">成員</span><span class="sxs-lookup"><span data-stu-id="4dd73-129">Member</span></span>|<span data-ttu-id="4dd73-130">位元組序</span><span class="sxs-lookup"><span data-stu-id="4dd73-130">Endianness</span></span>|<span data-ttu-id="4dd73-131">BOM</span><span class="sxs-lookup"><span data-stu-id="4dd73-131">BOM</span></span>|<span data-ttu-id="4dd73-132">錯誤偵測</span><span class="sxs-lookup"><span data-stu-id="4dd73-132">Error detection</span></span>|  
|------------|----------------|---------|---------------------|  
|<xref:System.Text.Encoding.BigEndianUnicode%2A>|<span data-ttu-id="4dd73-133">Big endian</span><span class="sxs-lookup"><span data-stu-id="4dd73-133">Big-endian</span></span>|<span data-ttu-id="4dd73-134">[是]</span><span class="sxs-lookup"><span data-stu-id="4dd73-134">Yes</span></span>|<span data-ttu-id="4dd73-135">無 （取代後援）</span><span class="sxs-lookup"><span data-stu-id="4dd73-135">No (Replacement fallback)</span></span>|  
|<xref:System.Text.Encoding.Unicode%2A?displayProperty=nameWithType>|<span data-ttu-id="4dd73-136">由小到大</span><span class="sxs-lookup"><span data-stu-id="4dd73-136">Little-endian</span></span>|<span data-ttu-id="4dd73-137">[是]</span><span class="sxs-lookup"><span data-stu-id="4dd73-137">Yes</span></span>|<span data-ttu-id="4dd73-138">無 （取代後援）</span><span class="sxs-lookup"><span data-stu-id="4dd73-138">No (Replacement fallback)</span></span>|  
|<xref:System.Text.UnicodeEncoding.%23ctor?displayProperty=nameWithType>|<span data-ttu-id="4dd73-139">由小到大</span><span class="sxs-lookup"><span data-stu-id="4dd73-139">Little-endian</span></span>|<span data-ttu-id="4dd73-140">[是]</span><span class="sxs-lookup"><span data-stu-id="4dd73-140">Yes</span></span>|<span data-ttu-id="4dd73-141">無 （取代後援）</span><span class="sxs-lookup"><span data-stu-id="4dd73-141">No (Replacement fallback)</span></span>|  
|<xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%29>|<span data-ttu-id="4dd73-142">可設定</span><span class="sxs-lookup"><span data-stu-id="4dd73-142">Configurable</span></span>|<span data-ttu-id="4dd73-143">可設定</span><span class="sxs-lookup"><span data-stu-id="4dd73-143">Configurable</span></span>|<span data-ttu-id="4dd73-144">無 （取代後援）</span><span class="sxs-lookup"><span data-stu-id="4dd73-144">No (Replacement fallback)</span></span>|  
|<xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType>|<span data-ttu-id="4dd73-145">可設定</span><span class="sxs-lookup"><span data-stu-id="4dd73-145">Configurable</span></span>|<span data-ttu-id="4dd73-146">可設定</span><span class="sxs-lookup"><span data-stu-id="4dd73-146">Configurable</span></span>|<span data-ttu-id="4dd73-147">可設定</span><span class="sxs-lookup"><span data-stu-id="4dd73-147">Configurable</span></span>|  
  
 <span data-ttu-id="4dd73-148"><xref:System.Text.UnicodeEncoding.GetByteCount%2A>方法會判斷多少個位元組會導致一組 Unicode 字元編碼和<xref:System.Text.UnicodeEncoding.GetBytes%2A>方法會執行實際的編碼方式。</span><span class="sxs-lookup"><span data-stu-id="4dd73-148">The <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method determines how many bytes result in encoding a set of Unicode characters, and the <xref:System.Text.UnicodeEncoding.GetBytes%2A> method performs the actual encoding.</span></span>  
  
 <span data-ttu-id="4dd73-149">同樣地，<xref:System.Text.UnicodeEncoding.GetCharCount%2A>方法會判斷多少個字元產生的位元組序列解碼和<xref:System.Text.UnicodeEncoding.GetChars%2A>和<xref:System.Text.UnicodeEncoding.GetString%2A>方法會執行實際的解碼。</span><span class="sxs-lookup"><span data-stu-id="4dd73-149">Likewise, the <xref:System.Text.UnicodeEncoding.GetCharCount%2A> method determines how many characters result in decoding a sequence of bytes, and the <xref:System.Text.UnicodeEncoding.GetChars%2A> and <xref:System.Text.UnicodeEncoding.GetString%2A> methods perform the actual decoding.</span></span>  
  
 <span data-ttu-id="4dd73-150">針對編碼器或解碼器能夠儲存狀態資訊編碼或解碼跨越多個區塊 （例如 1 百萬個字元的編碼段 100,000 個字元的字串） 的資料時，請使用<xref:System.Text.UnicodeEncoding.GetEncoder%2A>和<xref:System.Text.UnicodeEncoding.GetDecoder%2A>屬性，分別。</span><span class="sxs-lookup"><span data-stu-id="4dd73-150">For an encoder or decoder that is able to save state information when encoding or decoding data that spans multiple blocks (such as string of 1 million characters that is encoded in 100,000-character segments), use the <xref:System.Text.UnicodeEncoding.GetEncoder%2A> and <xref:System.Text.UnicodeEncoding.GetDecoder%2A> properties, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4dd73-151">下列範例示範如何使用 Unicode 字元的字串編碼成位元組陣列<xref:System.Text.UnicodeEncoding>物件。</span><span class="sxs-lookup"><span data-stu-id="4dd73-151">The following example demonstrates how to encode a string of Unicode characters into a byte array by using a <xref:System.Text.UnicodeEncoding> object.</span></span> <span data-ttu-id="4dd73-152">位元組陣列解碼成字串，以示範不沒有遺失任何資料。</span><span class="sxs-lookup"><span data-stu-id="4dd73-152">The byte array is decoded into a string to demonstrate that there is no loss of data.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding Example/CPP/snippet.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding Example/CS/snippet.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding Example/VB/snippet.vb#1)]  
  
 <span data-ttu-id="4dd73-153">下列範例會使用相同的字串與上一個，不同之處在於它將編碼的位元組寫入檔案，並做為前置詞位元組資料流的位元組順序標示 (BOM)。</span><span class="sxs-lookup"><span data-stu-id="4dd73-153">The following example uses the same string as the previous one, except that it writes the encoded bytes to a file and prefixes the byte stream with a byte order mark (BOM).</span></span> <span data-ttu-id="4dd73-154">然後在兩個不同的方式讀取檔案： 為文字檔，使用<xref:System.IO.StreamReader>物件; 而二進位檔案。</span><span class="sxs-lookup"><span data-stu-id="4dd73-154">It then reads the file in two different ways: as a text file by using a <xref:System.IO.StreamReader> object; and as a binary file.</span></span> <span data-ttu-id="4dd73-155">如您所預期，兩種情況下 BOM 隨附於讀取新的字串。</span><span class="sxs-lookup"><span data-stu-id="4dd73-155">As you would expect, in neither case is the BOM included in the newly read string.</span></span>  
  
 [!code-csharp[System.Text.UnicodeEncoding Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding Example/CS/bom1.cs#2)]
 [!code-vb[System.Text.UnicodeEncoding Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding Example/VB/bom1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.Encoding" />
    <altmember cref="T:System.Text.Encoder" />
    <altmember cref="T:System.Text.Decoder" />
    <altmember cref="T:System.Text.UTF32Encoding" />
    <altmember cref="T:System.Text.UTF8Encoding" />
    <altmember cref="T:System.Text.UTF7Encoding" />
    <altmember cref="T:System.Text.ASCIIEncoding" />
    <altmember cref="T:System.Globalization.UnicodeCategory" />
    <altmember cref="T:System.Globalization.CharUnicodeInfo" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4dd73-156">初始化 <see cref="T:System.Text.UnicodeEncoding" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-156">Initializes a new instance of the <see cref="T:System.Text.UnicodeEncoding" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UnicodeEncoding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UnicodeEncoding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4dd73-157">初始化 <see cref="T:System.Text.UnicodeEncoding" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-157">Initializes a new instance of the <see cref="T:System.Text.UnicodeEncoding" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4dd73-158">這個建構函式會建立可使用小的位元組由小到大位元組順序、 提供 Unicode 位元組順序標記，以及偵測到無效的編碼方式時，不會擲回例外狀況執行個體。</span><span class="sxs-lookup"><span data-stu-id="4dd73-158">This constructor creates an instance that uses the little endian byte order, provides a Unicode byte order mark, and does not throw an exception when an invalid encoding is detected.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4dd73-159">基於安全性理由，您應該啟用錯誤偵測，藉由呼叫<xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29>建構函式，並設定其`throwOnInvalidBytes`引數`true`。</span><span class="sxs-lookup"><span data-stu-id="4dd73-159">For security reasons, you should enable error detection by calling the <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> constructor and setting its `throwOnInvalidBytes` argument to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4dd73-160">下列範例示範如何建立新<xref:System.Text.UnicodeEncoding>執行個體，並顯示名稱的編碼方式。</span><span class="sxs-lookup"><span data-stu-id="4dd73-160">The following example demonstrates how to create a new <xref:System.Text.UnicodeEncoding> instance and display the name of the encoding.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.ctor Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.ctor Example/CPP/ctor.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.ctor Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.ctor Example/CS/ctor.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.ctor Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.ctor Example/VB/ctor.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UnicodeEncoding (bool bigEndian, bool byteOrderMark);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool bigEndian, bool byteOrderMark) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.#ctor(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (bigEndian As Boolean, byteOrderMark As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UnicodeEncoding(bool bigEndian, bool byteOrderMark);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="bigEndian" Type="System.Boolean" />
        <Parameter Name="byteOrderMark" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="bigEndian">
          <span data-ttu-id="4dd73-161">
            <see langword="true" /> 表示要使用位元組由大到小的位元組順序 (最大顯著性位元組在前)，<see langword="false" /> 表示要使用位元組由小到大的位元組順序 (最小顯著性位元組在前)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-161">
              <see langword="true" /> to use the big endian byte order (most significant byte first), or <see langword="false" /> to use the little endian byte order (least significant byte first).</span>
          </span>
        </param>
        <param name="byteOrderMark">
          <span data-ttu-id="4dd73-162">
            <see langword="true" /> 指定 <see cref="M:System.Text.UnicodeEncoding.GetPreamble" /> 方法會傳回 Unicode 位元組順序標記；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-162">
              <see langword="true" /> to specify that the <see cref="M:System.Text.UnicodeEncoding.GetPreamble" /> method returns a Unicode byte order mark; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4dd73-163">初始化 <see cref="T:System.Text.UnicodeEncoding" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-163">Initializes a new instance of the <see cref="T:System.Text.UnicodeEncoding" /> class.</span>
          </span>
          <span data-ttu-id="4dd73-164">參數會指定是否使用位元組由大到小的位元組順序，以及 <see cref="M:System.Text.UnicodeEncoding.GetPreamble" /> 方法是否傳回 Unicode 位元組順序標記。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-164">Parameters specify whether to use the big endian byte order and whether the <see cref="M:System.Text.UnicodeEncoding.GetPreamble" /> method returns a Unicode byte order mark.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4dd73-165">這個建構函式會建立執行個體偵測到無效的編碼方式時，不會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="4dd73-165">This constructor creates an instance that does not throw an exception when an invalid encoding is detected.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4dd73-166">基於安全性理由，您應該啟用錯誤偵測，藉由呼叫<xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29>建構函式，並設定其`throwOnInvalidBytes`引數`true`。</span><span class="sxs-lookup"><span data-stu-id="4dd73-166">For security reasons, you should enable error detection by calling the <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> constructor and setting its `throwOnInvalidBytes` argument to `true`.</span></span>  
  
 <span data-ttu-id="4dd73-167">`byteOrderMark`參數控制的操作<xref:System.Text.UnicodeEncoding.GetPreamble%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="4dd73-167">The `byteOrderMark` parameter controls the operation of the <xref:System.Text.UnicodeEncoding.GetPreamble%2A> method.</span></span> <span data-ttu-id="4dd73-168">如果`true`，方法會傳回包含 Unicode 位元組順序標記 (BOM) 以 utf-16 格式的位元組陣列。</span><span class="sxs-lookup"><span data-stu-id="4dd73-168">If `true`, the method returns a byte array containing the Unicode byte order mark (BOM) in UTF-16 format.</span></span>  <span data-ttu-id="4dd73-169">如果`false`，它會傳回零長度的位元組陣列。</span><span class="sxs-lookup"><span data-stu-id="4dd73-169">If `false`, it returns a zero-length byte array.</span></span> <span data-ttu-id="4dd73-170">不過，設定`byteOrderMark`至`true`不會造成<xref:System.Text.UnicodeEncoding.GetBytes%2A>BOM 的位元組陣列開頭的前置詞的方法也不會引起<xref:System.Text.UnicodeEncoding.GetByteCount%2A>方法，以包含 BOM 的位元組計數中的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="4dd73-170">However, setting `byteOrderMark` to `true` does not cause the <xref:System.Text.UnicodeEncoding.GetBytes%2A> method to prefix the BOM at the beginning of the byte array, nor does it cause the <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method to include the number of bytes in the BOM in the byte count.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4dd73-171">下列範例示範如何建立新<xref:System.Text.UnicodeEncoding>指定是否支援小到小或大到小的位元組順序的執行個體和 Unicode 位元組順序標記。</span><span class="sxs-lookup"><span data-stu-id="4dd73-171">The following example demonstrates how to create a new <xref:System.Text.UnicodeEncoding> instance specifying whether to support little endian or big endian byte ordering and the Unicode byte order mark.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.ctor2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.ctor2 Example/CPP/ctor-boolean-boolean.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.ctor2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.ctor2 Example/CS/ctor-boolean-boolean.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.ctor2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.ctor2 Example/VB/ctor-boolean-boolean.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.UnicodeEncoding.GetPreamble" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UnicodeEncoding (bool bigEndian, bool byteOrderMark, bool throwOnInvalidBytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool bigEndian, bool byteOrderMark, bool throwOnInvalidBytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.#ctor(System.Boolean,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (bigEndian As Boolean, byteOrderMark As Boolean, throwOnInvalidBytes As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UnicodeEncoding(bool bigEndian, bool byteOrderMark, bool throwOnInvalidBytes);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="bigEndian" Type="System.Boolean" />
        <Parameter Name="byteOrderMark" Type="System.Boolean" />
        <Parameter Name="throwOnInvalidBytes" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="bigEndian">
          <span data-ttu-id="4dd73-172">
            <see langword="true" /> 表示要使用位元組由大到小的位元組順序 (最大顯著性位元組在前)，<see langword="false" /> 表示要使用位元組由小到大的位元組順序 (最小顯著性位元組在前)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-172">
              <see langword="true" /> to use the big endian byte order (most significant byte first); <see langword="false" /> to use the little endian byte order (least significant byte first).</span>
          </span>
        </param>
        <param name="byteOrderMark">
          <span data-ttu-id="4dd73-173">
            <see langword="true" /> 指定 <see cref="M:System.Text.UnicodeEncoding.GetPreamble" /> 方法會傳回 Unicode 位元組順序標記；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-173">
              <see langword="true" /> to specify that the <see cref="M:System.Text.UnicodeEncoding.GetPreamble" /> method returns a Unicode byte order mark; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="throwOnInvalidBytes">
          <span data-ttu-id="4dd73-174">
            <see langword="true" />，可指定在偵測到無效的編碼方式時應擲回一個例外狀況，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-174">
              <see langword="true" /> to specify that an exception should be thrown when an invalid encoding is detected; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4dd73-175">初始化 <see cref="T:System.Text.UnicodeEncoding" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-175">Initializes a new instance of the <see cref="T:System.Text.UnicodeEncoding" /> class.</span>
          </span>
          <span data-ttu-id="4dd73-176">參數會指定是否使用位元組由大到小的位元組順序、是否提供 Unicode 位元組順序標記，以及是否在偵測到無效的編碼方式時擲回例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-176">Parameters specify whether to use the big endian byte order, whether to provide a Unicode byte order mark, and whether to throw an exception when an invalid encoding is detected.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4dd73-177">`byteOrderMark`參數控制的操作<xref:System.Text.UnicodeEncoding.GetPreamble%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="4dd73-177">The `byteOrderMark` parameter controls the operation of the <xref:System.Text.UnicodeEncoding.GetPreamble%2A> method.</span></span> <span data-ttu-id="4dd73-178">如果`true`，方法會傳回包含 Unicode 位元組順序標記 (BOM) 以 utf-16 格式的位元組陣列。</span><span class="sxs-lookup"><span data-stu-id="4dd73-178">If `true`, the method returns a byte array containing the Unicode byte order mark (BOM) in UTF-16 format.</span></span>  <span data-ttu-id="4dd73-179">如果`false`，它會傳回零長度的位元組陣列。</span><span class="sxs-lookup"><span data-stu-id="4dd73-179">If `false`, it returns a zero-length byte array.</span></span> <span data-ttu-id="4dd73-180">不過，設定`byteOrderMark`至`true`不會造成<xref:System.Text.UnicodeEncoding.GetBytes%2A>BOM 的位元組陣列開頭的前置詞的方法也不會引起<xref:System.Text.UnicodeEncoding.GetByteCount%2A>方法，以包含 BOM 的位元組計數中的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="4dd73-180">However, setting `byteOrderMark` to `true` does not cause the <xref:System.Text.UnicodeEncoding.GetBytes%2A> method to prefix the BOM at the beginning of the byte array, nor does it cause the <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method to include the number of bytes in the BOM in the byte count.</span></span>  
  
 <span data-ttu-id="4dd73-181">如果`throwOnInvalidBytes`參數是`true`，偵測到無效的位元組順序的方法會擲回<xref:System.ArgumentException?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="4dd73-181">If the `throwOnInvalidBytes` parameter is `true`, a method that detects an invalid byte sequence throws <xref:System.ArgumentException?displayProperty=nameWithType>.</span></span> <span data-ttu-id="4dd73-182">否則，此方法不會擲回例外狀況，並忽略無效的序列。</span><span class="sxs-lookup"><span data-stu-id="4dd73-182">Otherwise, the method does not throw an exception, and the invalid sequence is ignored.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4dd73-183">基於安全性理由，建議您的應用程式使用這個建構函式建立的執行個體<xref:System.Text.UnicodeEncoding>類別，並藉由設定開啟錯誤偵測`throwOnInvalidBytes`至`true`。</span><span class="sxs-lookup"><span data-stu-id="4dd73-183">For security reasons, your applications are recommended to use this constructor to create an instance of the <xref:System.Text.UnicodeEncoding> class and turn on error detection by setting `throwOnInvalidBytes` to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4dd73-184">下列範例示範的行為<xref:System.Text.UnicodeEncoding>，已啟用錯誤偵測和不含。</span><span class="sxs-lookup"><span data-stu-id="4dd73-184">The following example demonstrates the behavior of <xref:System.Text.UnicodeEncoding>, both with error detection enabled and without.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.ErrorDetection#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.ErrorDetection/CPP/errordetection.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.ErrorDetection#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.ErrorDetection/CS/errordetection.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.ErrorDetection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.ErrorDetection/VB/errordetection.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.UnicodeEncoding.GetPreamble" />
      </Docs>
    </Member>
    <Member MemberName="CharSize">
      <MemberSignature Language="C#" Value="public const int CharSize = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 CharSize = (2)" />
      <MemberSignature Language="DocId" Value="F:System.Text.UnicodeEncoding.CharSize" />
      <MemberSignature Language="VB.NET" Value="Public Const CharSize As Integer  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: int CharSize = 2;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4dd73-185">代表 Unicode 字元大小 (以位元組為單位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-185">Represents the Unicode character size in bytes.</span>
          </span>
          <span data-ttu-id="4dd73-186">這個欄位是常數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-186">This field is a constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4dd73-187">這個欄位的值是 32 位元帶正負號的常數，其值為 2。</span><span class="sxs-lookup"><span data-stu-id="4dd73-187">The value of this field is a 32-bit signed constant with a value of 2.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4dd73-188">下列範例示範如何傳回的值<xref:System.Text.UnicodeEncoding.CharSize>並將其顯示。</span><span class="sxs-lookup"><span data-stu-id="4dd73-188">The following example demonstrates how to return the value of <xref:System.Text.UnicodeEncoding.CharSize> and display it.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.CharSize Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.CharSize Example/CPP/charsize.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.CharSize Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.CharSize Example/CS/charsize.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.CharSize Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.CharSize Example/VB/charsize.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4dd73-189">要與目前物件比較的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-189">The object to compare with the current object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4dd73-190">判斷指定的 <see cref="T:System.Object" /> 是否等於目前的 <see cref="T:System.Text.UnicodeEncoding" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-190">Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Text.UnicodeEncoding" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4dd73-191">如果 <paramref name="value" /> 是 <see cref="T:System.Text.UnicodeEncoding" /> 的執行個體，並且等於目前的物件，則為 <see langword="true" />；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-191">
              <see langword="true" /> if <paramref name="value" /> is an instance of <see cref="T:System.Text.UnicodeEncoding" /> and is equal to the current object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4dd73-192">兩個<xref:System.Text.UnicodeEncoding>物件是否視為相等，如果所有下列條件成立：</span><span class="sxs-lookup"><span data-stu-id="4dd73-192">Two <xref:System.Text.UnicodeEncoding> objects are considered equal if all of the following conditions are true:</span></span>  
  
-   <span data-ttu-id="4dd73-193">這兩個物件都使用相同的位元組順序 （由小到大或位元組由大到小）。</span><span class="sxs-lookup"><span data-stu-id="4dd73-193">Both objects use the same byte order (little-endian or big-endian).</span></span>  
  
-   <span data-ttu-id="4dd73-194">這兩個物件提供位元組順序標記，或兩者不相符。</span><span class="sxs-lookup"><span data-stu-id="4dd73-194">Both objects provide the byte order mark, or both do not.</span></span>  
  
-   <span data-ttu-id="4dd73-195">這兩個物件都使用相同的編碼器後援。</span><span class="sxs-lookup"><span data-stu-id="4dd73-195">Both objects use the same encoder fallback.</span></span>  
  
-   <span data-ttu-id="4dd73-196">這兩個物件都使用相同的解碼器後援。</span><span class="sxs-lookup"><span data-stu-id="4dd73-196">Both objects use the same decoder fallback.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4dd73-197">下列範例示範如何使用<xref:System.Text.UnicodeEncoding.Equals%2A>方法來測試是否目前<xref:System.Text.UnicodeEncoding>物件是否等於不同<xref:System.Text.UnicodeEncoding>物件。</span><span class="sxs-lookup"><span data-stu-id="4dd73-197">The following example demonstrates how to use the <xref:System.Text.UnicodeEncoding.Equals%2A> method to test whether the current <xref:System.Text.UnicodeEncoding> object is equal to a different <xref:System.Text.UnicodeEncoding> object.</span></span> <span data-ttu-id="4dd73-198">五個<xref:System.Text.UnicodeEncoding>和建立和相較之下，物件比較的結果會顯示。</span><span class="sxs-lookup"><span data-stu-id="4dd73-198">Five <xref:System.Text.UnicodeEncoding> objects are created and compared, and the results of the comparisons are displayed.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.ctor2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.ctor2 Example/CPP/ctor-boolean-boolean.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.ctor2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.ctor2 Example/CS/ctor-boolean-boolean.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.ctor2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.ctor2 Example/VB/ctor-boolean-boolean.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.UnicodeEncoding.#ctor" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetByteCount">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4dd73-199">計算將一組字元編碼所產生的位元組數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-199">Calculates the number of bytes produced by encoding a set of characters.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public override int GetByteCount (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetByteCount(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetByteCount(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetByteCount (s As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetByteCount(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="4dd73-200">字串，包含要編碼的一組字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-200">The string that contains the set of characters to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4dd73-201">計算將指定字串中的字元編碼所產生的位元組數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-201">Calculates the number of bytes produced by encoding the characters in the specified string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4dd73-202">編碼指定字元所產生的位元組數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-202">The number of bytes produced by encoding the specified characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4dd73-203">若要計算所需的精確陣列大小<xref:System.Text.UnicodeEncoding.GetBytes%2A>儲存產生的位元組，您呼叫<xref:System.Text.UnicodeEncoding.GetByteCount%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="4dd73-203">To calculate the exact array size required by <xref:System.Text.UnicodeEncoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="4dd73-204">若要計算的最大陣列大小，請呼叫<xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="4dd73-204">To calculate the maximum array size, you call the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="4dd73-205"><xref:System.Text.UnicodeEncoding.GetByteCount%2A>方法通常會配置較少的記憶體，而<xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A>方法通常執行速度更快。</span><span class="sxs-lookup"><span data-stu-id="4dd73-205">The <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="4dd73-206">錯誤偵測無效的序列造成此方法會擲回<xref:System.ArgumentException>。</span><span class="sxs-lookup"><span data-stu-id="4dd73-206">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="4dd73-207">錯誤偵測，會忽略無效的序列，而不擲回任何例外狀況。</span><span class="sxs-lookup"><span data-stu-id="4dd73-207">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4dd73-208">若要確保儲存為檔案或資料流時編碼的位元組會正確解碼，您可以前置詞與前序編碼的位元組資料流。</span><span class="sxs-lookup"><span data-stu-id="4dd73-208">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="4dd73-209">位元組資料流的開頭插入前序編碼 (例如一系列的位元組寫入檔案的開頭) 是開發人員的責任和中前序編碼的位元組數目不會反映在所傳回的值<xref:System.Text.UnicodeEncoding.GetByteCount%28System.String%29>方法。</span><span class="sxs-lookup"><span data-stu-id="4dd73-209">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility, and the number of bytes in the preamble is not reflected in the value returned by the <xref:System.Text.UnicodeEncoding.GetByteCount%28System.String%29> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4dd73-210">下列範例會呼叫<xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A>和<xref:System.Text.UnicodeEncoding.GetByteCount%28System.String%29>方法來計算最大值和實際的字串編碼所需的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="4dd73-210">The following example calls the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> and <xref:System.Text.UnicodeEncoding.GetByteCount%28System.String%29> methods to calculate the maximum and actual number of bytes required to encode a string.</span></span> <span data-ttu-id="4dd73-211">它也會顯示實際儲存的位元組順序標記的位元組資料流所需的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="4dd73-211">It also displays the actual number of bytes required to store a byte stream with a byte order mark.</span></span>  
  
 [!code-csharp[System.Text.UnicodeEncoding.GetByteCount#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.unicodeencoding.getbytecount/cs/getbytecount1.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.GetByteCount#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.unicodeencoding.getbytecount/vb/getbytecount1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4dd73-212">
            <paramref name="s" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-212">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4dd73-213">所產生的位元組數目大於可用整數傳回的數目上限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-213">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4dd73-214">已啟用錯誤偵測，而 <paramref name="s" /> 包含無效的字元序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-214">Error detection is enabled, and <paramref name="s" /> contains an invalid sequence of characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="4dd73-215">發生後援 (如需更完整的說明，請參閱 [.NET Framework 中的字元編碼方式](~/docs/standard/base-types/character-encoding.md))</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-215">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span>
          </span>
          <span data-ttu-id="4dd73-216">-和-</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-216">-and-</span>
          </span>
          <span data-ttu-id="4dd73-217">
            <see cref="P:System.Text.Encoding.EncoderFallback" /> 設定為 <see cref="T:System.Text.EncoderExceptionFallback" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-217">
              <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UnicodeEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public override int GetByteCount (char* chars, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetByteCount(char* chars, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetByteCount(System.Char*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetByteCount(char* chars, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char*" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars">
          <span data-ttu-id="4dd73-218">要編碼的第一個字元指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-218">A pointer to the first character to encode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="4dd73-219">要編碼的字元數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-219">The number of characters to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4dd73-220">計算將起始於指定字元指標的一組字元編碼所產生的位元組數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-220">Calculates the number of bytes produced by encoding a set of characters starting at the specified character pointer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4dd73-221">編碼指定字元所產生的位元組數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-221">The number of bytes produced by encoding the specified characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4dd73-222">若要計算確切的陣列大小的<xref:System.Text.UnicodeEncoding.GetBytes%2A>需要儲存產生的位元組，您呼叫<xref:System.Text.UnicodeEncoding.GetByteCount%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="4dd73-222">To calculate the exact array size that <xref:System.Text.UnicodeEncoding.GetBytes%2A> requires to store the resulting bytes, you call the <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="4dd73-223">若要計算的最大陣列大小，請呼叫<xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="4dd73-223">To calculate the maximum array size, you call the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="4dd73-224"><xref:System.Text.UnicodeEncoding.GetByteCount%2A>方法通常會配置較少的記憶體，而<xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A>方法通常執行速度更快。</span><span class="sxs-lookup"><span data-stu-id="4dd73-224">The <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="4dd73-225">錯誤偵測無效的序列造成此方法會擲回<xref:System.ArgumentException>。</span><span class="sxs-lookup"><span data-stu-id="4dd73-225">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="4dd73-226">錯誤偵測，會忽略無效的序列，而不擲回任何例外狀況。</span><span class="sxs-lookup"><span data-stu-id="4dd73-226">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4dd73-227">若要確保儲存為檔案或資料流時編碼的位元組會正確解碼，您可以前置詞與前序編碼的位元組資料流。</span><span class="sxs-lookup"><span data-stu-id="4dd73-227">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="4dd73-228">位元組資料流的開頭插入前序編碼 (例如一系列的位元組寫入檔案的開頭) 是開發人員的責任和中前序編碼的位元組數目不會反映在所傳回的值<xref:System.Text.UTF8Encoding.GetByteCount%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="4dd73-228">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility, and the number of bytes in the preamble is not reflected in the value returned by the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4dd73-229">
            <paramref name="chars" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-229">
              <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4dd73-230">
            <paramref name="count" /> 小於零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-230">
              <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="4dd73-231">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-231">-or-</span>
          </span>
          <span data-ttu-id="4dd73-232">所產生的位元組數目大於可用整數傳回的數目上限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-232">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4dd73-233">已啟用錯誤偵測，而 <paramref name="chars" /> 包含無效的字元序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-233">Error detection is enabled and <paramref name="chars" /> contains an invalid sequence of characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="4dd73-234">發生後援 (如需更完整的說明，請參閱 [.NET Framework 中的字元編碼方式](~/docs/standard/base-types/character-encoding.md))</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-234">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span>
          </span>
          <span data-ttu-id="4dd73-235">-和-</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-235">-and-</span>
          </span>
          <span data-ttu-id="4dd73-236">
            <see cref="P:System.Text.Encoding.EncoderFallback" /> 設定為 <see cref="T:System.Text.EncoderExceptionFallback" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-236">
              <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="4dd73-237">需要完全信任立即呼叫者。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-237">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="4dd73-238">這個成員無法供部分信任或安全性透明程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-238">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Text.UnicodeEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public override int GetByteCount (char[] chars, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetByteCount(char[] chars, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetByteCount (chars As Char(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetByteCount(cli::array &lt;char&gt; ^ chars, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars">
          <span data-ttu-id="4dd73-239">包含要解碼之一組字元的字元陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-239">The character array containing the set of characters to encode.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="4dd73-240">要編碼的第一個字元索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-240">The index of the first character to encode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="4dd73-241">要編碼的字元數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-241">The number of characters to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4dd73-242">計算將指定字元陣列中的一組字元編碼所產生的位元組數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-242">Calculates the number of bytes produced by encoding a set of characters from the specified character array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4dd73-243">編碼指定字元所產生的位元組數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-243">The number of bytes produced by encoding the specified characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4dd73-244">若要計算所需的精確陣列大小<xref:System.Text.UnicodeEncoding.GetBytes%2A>儲存產生的位元組，應用程式會使用<xref:System.Text.UnicodeEncoding.GetByteCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="4dd73-244">To calculate the exact array size required by <xref:System.Text.UnicodeEncoding.GetBytes%2A> to store the resulting bytes, the application uses <xref:System.Text.UnicodeEncoding.GetByteCount%2A>.</span></span> <span data-ttu-id="4dd73-245">若要計算的最大陣列大小，請呼叫<xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="4dd73-245">To calculate the maximum array size, you call the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="4dd73-246"><xref:System.Text.UnicodeEncoding.GetByteCount%2A>方法通常會配置較少的記憶體，而<xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A>方法通常執行速度更快。</span><span class="sxs-lookup"><span data-stu-id="4dd73-246">The <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="4dd73-247">已啟用錯誤偵測，無效的序列會使這個方法會擲回<xref:System.ArgumentException>。</span><span class="sxs-lookup"><span data-stu-id="4dd73-247">With error detection enabled, an invalid sequence causes this method to throw an <xref:System.ArgumentException>.</span></span> <span data-ttu-id="4dd73-248">錯誤偵測，會忽略無效的序列，而不擲回任何例外狀況。</span><span class="sxs-lookup"><span data-stu-id="4dd73-248">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="4dd73-249">若要確保儲存為檔案或資料流時編碼的位元組會正確解碼，您可以前置詞與前序編碼的位元組資料流。</span><span class="sxs-lookup"><span data-stu-id="4dd73-249">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="4dd73-250">位元組資料流的開頭插入前序編碼 (例如一系列的位元組寫入檔案的開頭) 是開發人員的責任和中前序編碼的位元組數目不會反映在所傳回的值<xref:System.Text.UnicodeEncoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29>方法。</span><span class="sxs-lookup"><span data-stu-id="4dd73-250">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility, and the number of bytes in the preamble Is not reflected in the value returned by the <xref:System.Text.UnicodeEncoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4dd73-251">下列範例會填入大寫英文的陣列和小寫字元與呼叫<xref:System.Text.UnicodeEncoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29>方法，以判斷拉丁小寫字元編碼所需的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="4dd73-251">The following example populates an array with a Latin uppercase and lowercase characters and calls the <xref:System.Text.UnicodeEncoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method to determine the number of bytes needed to encode the Latin lowercase characters.</span></span> <span data-ttu-id="4dd73-252">然後，它會顯示這項資訊，以及如果位元組順序標記就會加入所需的位元組總數。</span><span class="sxs-lookup"><span data-stu-id="4dd73-252">It then displays this information along with the total number of bytes needed if a byte order mark is added.</span></span> <span data-ttu-id="4dd73-253">它會比較所傳回的值與這個數字<xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A>方法，表示英文小寫字元編碼所需的位元組數目上限。</span><span class="sxs-lookup"><span data-stu-id="4dd73-253">It compares this number with the value returned by the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method, which indicates maximum number of bytes needed to encode the Latin lowercase characters.</span></span> <span data-ttu-id="4dd73-254">下列範例會填入陣列希臘文 （斯拉夫） 字元和呼叫的組合<xref:System.Text.UnicodeEncoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29>方法，以判斷斯拉夫字元編碼所需的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="4dd73-254">The following example populates an array with a combination of Greek and Cyrillic characters and calls the <xref:System.Text.UnicodeEncoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method to determine the number of bytes needed to encode the Cyrillic characters.</span></span> <span data-ttu-id="4dd73-255">然後，它會顯示這項資訊，以及如果位元組順序標記就會加入所需的位元組總數。</span><span class="sxs-lookup"><span data-stu-id="4dd73-255">It then displays this information along with the total number of bytes needed if a byte order mark is added.</span></span> <span data-ttu-id="4dd73-256">它會比較所傳回的值與這個數字<xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A>方法，指出斯拉夫字元編碼所需的位元組數目上限。</span><span class="sxs-lookup"><span data-stu-id="4dd73-256">It compares this number with the value returned by the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method, which indicates maximum number of bytes needed to encode the Cyrillic characters.</span></span>  
  
 [!code-csharp[System.Text.UnicodeEncoding.GetByteCount#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.unicodeencoding.getbytecount/cs/getbytecount2.cs#2)]
 [!code-vb[System.Text.UnicodeEncoding.GetByteCount#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.unicodeencoding.getbytecount/vb/getbytecount2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4dd73-257">
            <paramref name="chars" /> 是 <see langword="null" /> (<see langword="Nothing" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-257">
              <paramref name="chars" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4dd73-258">
            <paramref name="index" /> 或 <paramref name="count" /> 小於零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-258">
              <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="4dd73-259">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-259">-or-</span>
          </span>
          <span data-ttu-id="4dd73-260">
            <paramref name="index" /> 與 <paramref name="count" /> 不代表 <paramref name="chars" /> 中有效的範圍。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-260">
              <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="chars" />.</span>
          </span>
          <span data-ttu-id="4dd73-261">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-261">-or-</span>
          </span>
          <span data-ttu-id="4dd73-262">所產生的位元組數目大於可用整數傳回的數目上限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-262">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4dd73-263">已啟用錯誤偵測，而 <paramref name="chars" /> 包含無效的字元序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-263">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="4dd73-264">發生後援 (如需更完整的說明，請參閱 [.NET Framework 中的字元編碼方式](~/docs/standard/base-types/character-encoding.md))</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-264">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span>
          </span>
          <span data-ttu-id="4dd73-265">-和-</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-265">-and-</span>
          </span>
          <span data-ttu-id="4dd73-266">
            <see cref="P:System.Text.Encoding.EncoderFallback" /> 設定為 <see cref="T:System.Text.EncoderExceptionFallback" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-266">
              <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UnicodeEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetEncoder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetBytes">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4dd73-267">將一組字元編碼成位元組序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-267">Encodes a set of characters into a sequence of bytes.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override int GetBytes (char* chars, int charCount, byte* bytes, int byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetBytes(char* chars, int32 charCount, unsigned int8* bytes, int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetBytes(char* chars, int charCount, System::Byte* bytes, int byteCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char*" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="byteCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars">
          <span data-ttu-id="4dd73-268">要編碼的第一個字元指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-268">A pointer to the first character to encode.</span>
          </span>
        </param>
        <param name="charCount">
          <span data-ttu-id="4dd73-269">要編碼的字元數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-269">The number of characters to encode.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="4dd73-270">開始寫入結果位元組序列的位置指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-270">A pointer to the location at which to start writing the resulting sequence of bytes.</span>
          </span>
        </param>
        <param name="byteCount">
          <span data-ttu-id="4dd73-271">寫入的最大位元組數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-271">The maximum number of bytes to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4dd73-272">將起始於指定字元指標的一組字元編碼成位元組序列；儲存該位元組序列時，係以指定的位元組指標為起始點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-272">Encodes a set of characters starting at the specified character pointer into a sequence of bytes that are stored starting at the specified byte pointer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4dd73-273">
            <paramref name="bytes" /> 參數所指示位置上寫入的實際位元組數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-273">The actual number of bytes written at the location indicated by the <paramref name="bytes" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4dd73-274">若要計算確切的陣列大小的<xref:System.Text.UnicodeEncoding.GetBytes%2A>需要儲存產生的位元組，您呼叫<xref:System.Text.UnicodeEncoding.GetByteCount%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="4dd73-274">To calculate the exact array size that <xref:System.Text.UnicodeEncoding.GetBytes%2A> requires to store the resulting bytes, you call the <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="4dd73-275">若要計算的最大陣列大小，請呼叫<xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="4dd73-275">To calculate the maximum array size, you call the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="4dd73-276"><xref:System.Text.UnicodeEncoding.GetByteCount%2A>方法通常會配置較少的記憶體，而<xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A>方法通常執行速度更快。</span><span class="sxs-lookup"><span data-stu-id="4dd73-276">The <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="4dd73-277">錯誤偵測無效的序列造成此方法會擲回<xref:System.ArgumentException>。</span><span class="sxs-lookup"><span data-stu-id="4dd73-277">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="4dd73-278">錯誤偵測，會忽略無效的序列，而不擲回任何例外狀況。</span><span class="sxs-lookup"><span data-stu-id="4dd73-278">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="4dd73-279">要轉換，例如，從資料流讀取資料的資料可能只適用於連續區塊。</span><span class="sxs-lookup"><span data-stu-id="4dd73-279">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="4dd73-280">在此情況下，或應用程式的資料量大到需要分割成較小的區塊時，應該使用<xref:System.Text.Decoder>或<xref:System.Text.Encoder>所提供物件<xref:System.Text.UnicodeEncoding.GetDecoder%2A>或<xref:System.Text.UnicodeEncoding.GetEncoder%2A>方法，分別。</span><span class="sxs-lookup"><span data-stu-id="4dd73-280">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> object provided by the <xref:System.Text.UnicodeEncoding.GetDecoder%2A> or the <xref:System.Text.UnicodeEncoding.GetEncoder%2A> method, respectively.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4dd73-281">若要確保儲存為檔案或資料流時編碼的位元組會正確解碼，您可以前置詞與前序編碼的位元組資料流。</span><span class="sxs-lookup"><span data-stu-id="4dd73-281">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="4dd73-282">位元組資料流的開頭插入前序編碼 (例如一系列的位元組寫入檔案的開頭) 是開發人員的責任。</span><span class="sxs-lookup"><span data-stu-id="4dd73-282">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility.</span></span> <span data-ttu-id="4dd73-283"><xref:System.Text.UnicodeEncoding.GetBytes%2A>方法不會不在前面加上前序編碼的位元組序列的開頭。</span><span class="sxs-lookup"><span data-stu-id="4dd73-283">The <xref:System.Text.UnicodeEncoding.GetBytes%2A> method does not prepend a preamble to the beginning of a sequence of encoded bytes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4dd73-284">
            <paramref name="chars" /> 是 <see langword="null" /> (<see langword="Nothing" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-284">
              <paramref name="chars" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          </span>
          <span data-ttu-id="4dd73-285">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-285">-or-</span>
          </span>
          <span data-ttu-id="4dd73-286">
            <paramref name="bytes" /> 是 <see langword="null" /> (<see langword="Nothing" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-286">
              <paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4dd73-287">
            <paramref name="charCount" /> 或 <paramref name="byteCount" /> 小於零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-287">
              <paramref name="charCount" /> or <paramref name="byteCount" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4dd73-288">已啟用錯誤偵測，而 <paramref name="chars" /> 包含無效的字元序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-288">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span>
          </span>
          <span data-ttu-id="4dd73-289">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-289">-or-</span>
          </span>
          <span data-ttu-id="4dd73-290">
            <paramref name="byteCount" /> 小於結果位元組數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-290">
              <paramref name="byteCount" /> is less than the resulting number of bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="4dd73-291">發生後援 (如需更完整的說明，請參閱 [.NET Framework 中的字元編碼方式](~/docs/standard/base-types/character-encoding.md))</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-291">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span>
          </span>
          <span data-ttu-id="4dd73-292">-和-</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-292">-and-</span>
          </span>
          <span data-ttu-id="4dd73-293">
            <see cref="P:System.Text.Encoding.EncoderFallback" /> 設定為 <see cref="T:System.Text.EncoderExceptionFallback" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-293">
              <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="4dd73-294">需要完全信任立即呼叫者。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-294">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="4dd73-295">這個成員無法供部分信任或安全性透明程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-295">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Text.UnicodeEncoding.GetEncoder" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override int GetBytes (char[] chars, int charIndex, int charCount, byte[] bytes, int byteIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetBytes(char[] chars, int32 charIndex, int32 charCount, unsigned int8[] bytes, int32 byteIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (chars As Char(), charIndex As Integer, charCount As Integer, bytes As Byte(), byteIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetBytes(cli::array &lt;char&gt; ^ chars, int charIndex, int charCount, cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars">
          <span data-ttu-id="4dd73-296">包含要解碼之一組字元的字元陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-296">The character array containing the set of characters to encode.</span>
          </span>
        </param>
        <param name="charIndex">
          <span data-ttu-id="4dd73-297">要編碼的第一個字元索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-297">The index of the first character to encode.</span>
          </span>
        </param>
        <param name="charCount">
          <span data-ttu-id="4dd73-298">要編碼的字元數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-298">The number of characters to encode.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="4dd73-299">要包含結果位元組序列的位元組陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-299">The byte array to contain the resulting sequence of bytes.</span>
          </span>
        </param>
        <param name="byteIndex">
          <span data-ttu-id="4dd73-300">要開始寫入結果位元組序列的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-300">The index at which to start writing the resulting sequence of bytes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4dd73-301">將指定字元陣列中的一組字元編碼成指定的位元組陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-301">Encodes a set of characters from the specified character array into the specified byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4dd73-302">寫入 <paramref name="bytes" /> 的實際位元組數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-302">The actual number of bytes written into <paramref name="bytes" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4dd73-303">若要計算所需的精確陣列大小<xref:System.Text.UnicodeEncoding.GetBytes%2A>儲存產生的位元組，您呼叫<xref:System.Text.UnicodeEncoding.GetByteCount%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="4dd73-303">To calculate the exact array size required by <xref:System.Text.UnicodeEncoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="4dd73-304">若要計算的最大陣列大小，請呼叫<xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="4dd73-304">To calculate the maximum array size, you call the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="4dd73-305"><xref:System.Text.UnicodeEncoding.GetByteCount%2A>方法通常會配置較少的記憶體，而<xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A>方法通常執行速度更快。</span><span class="sxs-lookup"><span data-stu-id="4dd73-305">The <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="4dd73-306">錯誤偵測無效的序列造成此方法會擲回<xref:System.ArgumentException>。</span><span class="sxs-lookup"><span data-stu-id="4dd73-306">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="4dd73-307">錯誤偵測，會忽略無效的序列，而不擲回任何例外狀況。</span><span class="sxs-lookup"><span data-stu-id="4dd73-307">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="4dd73-308">要轉換，例如，從資料流讀取資料的資料可能只適用於連續區塊。</span><span class="sxs-lookup"><span data-stu-id="4dd73-308">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="4dd73-309">在此情況下，或應用程式的資料量大到需要分割成較小的區塊時，應該使用<xref:System.Text.Decoder>或<xref:System.Text.Encoder>提供<xref:System.Text.UnicodeEncoding.GetDecoder%2A>方法或<xref:System.Text.UnicodeEncoding.GetEncoder%2A>方法，分別。</span><span class="sxs-lookup"><span data-stu-id="4dd73-309">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UnicodeEncoding.GetDecoder%2A> method or the <xref:System.Text.UnicodeEncoding.GetEncoder%2A> method, respectively.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4dd73-310">若要確保儲存為檔案或資料流時編碼的位元組會正確解碼，您可以前置詞與前序編碼的位元組資料流。</span><span class="sxs-lookup"><span data-stu-id="4dd73-310">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="4dd73-311">位元組資料流的開頭插入前序編碼 (例如一系列的位元組寫入檔案的開頭) 是開發人員的責任。</span><span class="sxs-lookup"><span data-stu-id="4dd73-311">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility.</span></span> <span data-ttu-id="4dd73-312"><xref:System.Text.UnicodeEncoding.GetBytes%2A>方法不會不在前面加上前序編碼的位元組序列的開頭。</span><span class="sxs-lookup"><span data-stu-id="4dd73-312">The <xref:System.Text.UnicodeEncoding.GetBytes%2A> method does not prepend a preamble to the beginning of a sequence of encoded bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4dd73-313">下列範例示範如何使用<xref:System.Text.UnicodeEncoding.GetBytes%2A>方法，將編碼的字元範圍<xref:System.String>並將編碼的位元組儲存在位元組陣列中的項目範圍。</span><span class="sxs-lookup"><span data-stu-id="4dd73-313">The following example demonstrates how to use the <xref:System.Text.UnicodeEncoding.GetBytes%2A> method to encode a range of characters from a <xref:System.String> and store the encoded bytes in a range of elements in a byte array.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.GetBytes3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetBytes3 Example/CPP/getbytes-string-int32-int32-byte[]-int32.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.GetBytes3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetBytes3 Example/CS/getbytes-string-int32-int32-byte[]-int32.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.GetBytes3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetBytes3 Example/VB/getbytes-string-int32-int32-byte[]-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4dd73-314">
            <paramref name="chars" /> 是 <see langword="null" /> (<see langword="Nothing" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-314">
              <paramref name="chars" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          </span>
          <span data-ttu-id="4dd73-315">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-315">-or-</span>
          </span>
          <span data-ttu-id="4dd73-316">
            <paramref name="bytes" /> 是 <see langword="null" /> (<see langword="Nothing" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-316">
              <paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4dd73-317">
            <paramref name="charIndex" />、<paramref name="charCount" /> 或 <paramref name="byteIndex" /> 小於零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-317">
              <paramref name="charIndex" /> or <paramref name="charCount" /> or <paramref name="byteIndex" /> is less than zero.</span>
          </span>
          <span data-ttu-id="4dd73-318">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-318">-or-</span>
          </span>
          <span data-ttu-id="4dd73-319">
            <paramref name="charIndex" /> 與 <paramref name="charCount" /> 不代表 <paramref name="chars" /> 中有效的範圍。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-319">
              <paramref name="charIndex" /> and <paramref name="charCount" /> do not denote a valid range in <paramref name="chars" />.</span>
          </span>
          <span data-ttu-id="4dd73-320">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-320">-or-</span>
          </span>
          <span data-ttu-id="4dd73-321">
            <paramref name="byteIndex" /> 在 <paramref name="bytes" /> 中不是有效的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-321">
              <paramref name="byteIndex" /> is not a valid index in <paramref name="bytes" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4dd73-322">已啟用錯誤偵測，而 <paramref name="chars" /> 包含無效的字元序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-322">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span>
          </span>
          <span data-ttu-id="4dd73-323">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-323">-or-</span>
          </span>
          <span data-ttu-id="4dd73-324">從 <paramref name="bytes" /> 到陣列結尾處，<paramref name="byteIndex" /> 沒有足夠的容量容納結果位元組。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-324">
              <paramref name="bytes" /> does not have enough capacity from <paramref name="byteIndex" /> to the end of the array to accommodate the resulting bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="4dd73-325">發生後援 (如需更完整的說明，請參閱 [.NET Framework 中的字元編碼方式](~/docs/standard/base-types/character-encoding.md))</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-325">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span>
          </span>
          <span data-ttu-id="4dd73-326">-和-</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-326">-and-</span>
          </span>
          <span data-ttu-id="4dd73-327">
            <see cref="P:System.Text.Encoding.EncoderFallback" /> 設定為 <see cref="T:System.Text.EncoderExceptionFallback" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-327">
              <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UnicodeEncoding.GetEncoder" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override int GetBytes (string s, int charIndex, int charCount, byte[] bytes, int byteIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetBytes(string s, int32 charIndex, int32 charCount, unsigned int8[] bytes, int32 byteIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (s As String, charIndex As Integer, charCount As Integer, bytes As Byte(), byteIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetBytes(System::String ^ s, int charIndex, int charCount, cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="4dd73-328">字串，包含要編碼的一組字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-328">The string containing the set of characters to encode.</span>
          </span>
        </param>
        <param name="charIndex">
          <span data-ttu-id="4dd73-329">要編碼的第一個字元索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-329">The index of the first character to encode.</span>
          </span>
        </param>
        <param name="charCount">
          <span data-ttu-id="4dd73-330">要編碼的字元數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-330">The number of characters to encode.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="4dd73-331">要包含結果位元組序列的位元組陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-331">The byte array to contain the resulting sequence of bytes.</span>
          </span>
        </param>
        <param name="byteIndex">
          <span data-ttu-id="4dd73-332">要開始寫入結果位元組序列的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-332">The index at which to start writing the resulting sequence of bytes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4dd73-333">將指定 <see cref="T:System.String" /> 中的一組字元編碼成指定的位元組陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-333">Encodes a set of characters from the specified <see cref="T:System.String" /> into the specified byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4dd73-334">寫入 <paramref name="bytes" /> 的實際位元組數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-334">The actual number of bytes written into <paramref name="bytes" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4dd73-335">若要計算所需的精確陣列大小<xref:System.Text.UnicodeEncoding.GetBytes%2A>儲存產生的位元組，您呼叫<xref:System.Text.UnicodeEncoding.GetByteCount%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="4dd73-335">To calculate the exact array size required by <xref:System.Text.UnicodeEncoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="4dd73-336">若要計算的最大陣列大小，請呼叫<xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="4dd73-336">To calculate the maximum array size, you call the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="4dd73-337"><xref:System.Text.UnicodeEncoding.GetByteCount%2A>方法通常會配置較少的記憶體，而<xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A>方法通常執行速度更快。</span><span class="sxs-lookup"><span data-stu-id="4dd73-337">The <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="4dd73-338">錯誤偵測無效的序列造成此方法會擲回<xref:System.ArgumentException>。</span><span class="sxs-lookup"><span data-stu-id="4dd73-338">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="4dd73-339">錯誤偵測，會忽略無效的序列，而不擲回任何例外狀況。</span><span class="sxs-lookup"><span data-stu-id="4dd73-339">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="4dd73-340">要轉換，例如，從資料流讀取資料的資料可能只適用於連續區塊。</span><span class="sxs-lookup"><span data-stu-id="4dd73-340">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="4dd73-341">在此情況下，或應用程式的資料量大到需要分割成較小的區塊時，應該使用<xref:System.Text.Decoder>或<xref:System.Text.Encoder>提供<xref:System.Text.UnicodeEncoding.GetDecoder%2A>方法或<xref:System.Text.UnicodeEncoding.GetEncoder%2A>方法，分別。</span><span class="sxs-lookup"><span data-stu-id="4dd73-341">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UnicodeEncoding.GetDecoder%2A> method or the <xref:System.Text.UnicodeEncoding.GetEncoder%2A> method, respectively.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4dd73-342">若要確保儲存為檔案或資料流時編碼的位元組會正確解碼，您可以前置詞與前序編碼的位元組資料流。</span><span class="sxs-lookup"><span data-stu-id="4dd73-342">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="4dd73-343">位元組資料流的開頭插入前序編碼 (例如一系列的位元組寫入檔案的開頭) 是開發人員的責任。</span><span class="sxs-lookup"><span data-stu-id="4dd73-343">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility.</span></span> <span data-ttu-id="4dd73-344"><xref:System.Text.UnicodeEncoding.GetBytes%2A>方法不會不在前面加上前序編碼的位元組序列的開頭。</span><span class="sxs-lookup"><span data-stu-id="4dd73-344">The <xref:System.Text.UnicodeEncoding.GetBytes%2A> method does not prepend a preamble to the beginning of a sequence of encoded bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4dd73-345">下列範例會示範如何將編碼的 Unicode 字元陣列中的項目範圍，並將編碼的位元組儲存在位元組陣列中的項目範圍。</span><span class="sxs-lookup"><span data-stu-id="4dd73-345">The following example demonstrates how to encode a range of elements from a Unicode character array and store the encoded bytes in a range of elements in a byte array.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.GetBytes1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetBytes1 Example/CPP/getbytes-char[]-int32-int32-byte[]-int32.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.GetBytes1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetBytes1 Example/CS/getbytes-char[]-int32-int32-byte[]-int32.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.GetBytes1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetBytes1 Example/VB/getbytes-char[]-int32-int32-byte[]-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4dd73-346">
            <paramref name="s" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-346">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4dd73-347">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-347">-or-</span>
          </span>
          <span data-ttu-id="4dd73-348">
            <paramref name="bytes" /> 是 <see langword="null" /> (<see langword="Nothing" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-348">
              <paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4dd73-349">
            <paramref name="charIndex" />、<paramref name="charCount" /> 或 <paramref name="byteIndex" /> 小於零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-349">
              <paramref name="charIndex" /> or <paramref name="charCount" /> or <paramref name="byteIndex" /> is less than zero.</span>
          </span>
          <span data-ttu-id="4dd73-350">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-350">-or-</span>
          </span>
          <span data-ttu-id="4dd73-351">
            <paramref name="charIndex" /> 與 <paramref name="charCount" /> 不代表 <paramref name="chars" /> 中有效的範圍。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-351">
              <paramref name="charIndex" /> and <paramref name="charCount" /> do not denote a valid range in <paramref name="chars" />.</span>
          </span>
          <span data-ttu-id="4dd73-352">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-352">-or-</span>
          </span>
          <span data-ttu-id="4dd73-353">
            <paramref name="byteIndex" /> 在 <paramref name="bytes" /> 中不是有效的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-353">
              <paramref name="byteIndex" /> is not a valid index in <paramref name="bytes" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4dd73-354">已啟用錯誤偵測，而 <paramref name="s" /> 包含無效的字元序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-354">Error detection is enabled, and <paramref name="s" /> contains an invalid sequence of characters.</span>
          </span>
          <span data-ttu-id="4dd73-355">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-355">-or-</span>
          </span>
          <span data-ttu-id="4dd73-356">從 <paramref name="bytes" /> 到陣列結尾處，<paramref name="byteIndex" /> 沒有足夠的容量容納結果位元組。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-356">
              <paramref name="bytes" /> does not have enough capacity from <paramref name="byteIndex" /> to the end of the array to accommodate the resulting bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="4dd73-357">發生後援 (如需更完整的說明，請參閱 [.NET Framework 中的字元編碼方式](~/docs/standard/base-types/character-encoding.md))</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-357">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span>
          </span>
          <span data-ttu-id="4dd73-358">-和-</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-358">-and-</span>
          </span>
          <span data-ttu-id="4dd73-359">
            <see cref="P:System.Text.Encoding.EncoderFallback" /> 設定為 <see cref="T:System.Text.EncoderExceptionFallback" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-359">
              <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UnicodeEncoding.GetEncoder" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCharCount">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4dd73-360">計算將位元組序列解碼所產生的字元數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-360">Calculates the number of characters produced by decoding a sequence of bytes.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public override int GetCharCount (byte* bytes, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetCharCount(unsigned int8* bytes, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetCharCount(System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetCharCount(System::Byte* bytes, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="4dd73-361">要解碼的第一個位元組指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-361">A pointer to the first byte to decode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="4dd73-362">要解碼的位元組數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-362">The number of bytes to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4dd73-363">計算將起始於指定位元組指標的位元組序列解碼所產生的字元數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-363">Calculates the number of characters produced by decoding a sequence of bytes starting at the specified byte pointer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4dd73-364">解碼指定位元組序列所產生的字元數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-364">The number of characters produced by decoding the specified sequence of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4dd73-365">若要計算確切的陣列大小的<xref:System.Text.UnicodeEncoding.GetChars%2A>來儲存產生的字元，應用程式會使用需要<xref:System.Text.UnicodeEncoding.GetCharCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="4dd73-365">To calculate the exact array size that <xref:System.Text.UnicodeEncoding.GetChars%2A> requires to store the resulting characters, the application uses <xref:System.Text.UnicodeEncoding.GetCharCount%2A>.</span></span> <span data-ttu-id="4dd73-366">若要計算的最大陣列大小，應用程式應該使用<xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="4dd73-366">To calculate the maximum array size, the application should use <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>.</span></span> <span data-ttu-id="4dd73-367"><xref:System.Text.UnicodeEncoding.GetCharCount%2A>方法通常會配置較少的記憶體，而<xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>方法通常執行速度更快。</span><span class="sxs-lookup"><span data-stu-id="4dd73-367">The <xref:System.Text.UnicodeEncoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="4dd73-368">錯誤偵測無效的序列造成此方法會擲回<xref:System.ArgumentException>。</span><span class="sxs-lookup"><span data-stu-id="4dd73-368">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="4dd73-369">錯誤偵測，會忽略無效的序列，而不擲回任何例外狀況。</span><span class="sxs-lookup"><span data-stu-id="4dd73-369">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4dd73-370">
            <paramref name="bytes" /> 是 <see langword="null" /> (<see langword="Nothing" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-370">
              <paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4dd73-371">
            <paramref name="count" /> 小於零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-371">
              <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="4dd73-372">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-372">-or-</span>
          </span>
          <span data-ttu-id="4dd73-373">所產生的位元組數目大於可用整數傳回的數目上限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-373">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4dd73-374">已啟用錯誤偵測，而且 <paramref name="bytes" /> 包含無效的位元組序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-374">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="4dd73-375">發生後援 (如需更完整的說明，請參閱 [.NET Framework 中的字元編碼方式](~/docs/standard/base-types/character-encoding.md))</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-375">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span>
          </span>
          <span data-ttu-id="4dd73-376">-和-</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-376">-and-</span>
          </span>
          <span data-ttu-id="4dd73-377">
            <see cref="P:System.Text.Encoding.DecoderFallback" /> 設定為 <see cref="T:System.Text.DecoderExceptionFallback" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-377">
              <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="4dd73-378">需要完全信任立即呼叫者。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-378">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="4dd73-379">這個成員無法供部分信任或安全性透明程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-379">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="Overload:System.Text.UnicodeEncoding.GetChars" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetDecoder" />
      </Docs>
    </Member>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public override int GetCharCount (byte[] bytes, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetCharCount(unsigned int8[] bytes, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCharCount (bytes As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetCharCount(cli::array &lt;System::Byte&gt; ^ bytes, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="4dd73-380">包含要解碼之位元組序列的位元組陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-380">The byte array containing the sequence of bytes to decode.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="4dd73-381">要解碼的第一個位元組索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-381">The index of the first byte to decode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="4dd73-382">要解碼的位元組數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-382">The number of bytes to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4dd73-383">計算將指定位元組陣列中的位元組序列解碼所產生的字元數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-383">Calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4dd73-384">解碼指定位元組序列所產生的字元數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-384">The number of characters produced by decoding the specified sequence of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4dd73-385">若要計算所需的精確陣列大小<xref:System.Text.UnicodeEncoding.GetChars%2A>儲存產生的字元，應用程式會使用<xref:System.Text.UnicodeEncoding.GetCharCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="4dd73-385">To calculate the exact array size required by <xref:System.Text.UnicodeEncoding.GetChars%2A> to store the resulting characters, the application uses <xref:System.Text.UnicodeEncoding.GetCharCount%2A>.</span></span> <span data-ttu-id="4dd73-386">若要計算的最大陣列大小，應用程式應該使用<xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="4dd73-386">To calculate the maximum array size, the application should use <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>.</span></span> <span data-ttu-id="4dd73-387"><xref:System.Text.UnicodeEncoding.GetCharCount%2A>方法通常會配置較少的記憶體，而<xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>方法通常執行速度更快。</span><span class="sxs-lookup"><span data-stu-id="4dd73-387">The <xref:System.Text.UnicodeEncoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="4dd73-388">錯誤偵測無效的序列造成此方法會擲回<xref:System.ArgumentException>。</span><span class="sxs-lookup"><span data-stu-id="4dd73-388">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="4dd73-389">錯誤偵測，會忽略無效的序列，而不擲回任何例外狀況。</span><span class="sxs-lookup"><span data-stu-id="4dd73-389">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4dd73-390">下列範例示範如何使用<xref:System.Text.UnicodeEncoding.GetCharCount%2A>方法傳回的字元數解碼所產生的位元組陣列，使用中的項目範圍<xref:System.Text.UnicodeEncoding>。</span><span class="sxs-lookup"><span data-stu-id="4dd73-390">The following example demonstrates how to use the <xref:System.Text.UnicodeEncoding.GetCharCount%2A> method to return the number of characters produced by decoding a range of elements in a byte array using <xref:System.Text.UnicodeEncoding>.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.GetCharCount Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetCharCount Example/CPP/getcharcount-byte[]-int32-int32.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.GetCharCount Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetCharCount Example/CS/getcharcount-byte[]-int32-int32.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.GetCharCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetCharCount Example/VB/getcharcount-byte[]-int32-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4dd73-391">
            <paramref name="bytes" /> 是 <see langword="null" /> (<see langword="Nothing" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-391">
              <paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4dd73-392">
            <paramref name="index" /> 或 <paramref name="count" /> 小於零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-392">
              <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="4dd73-393">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-393">-or-</span>
          </span>
          <span data-ttu-id="4dd73-394">
            <paramref name="index" /> 與 <paramref name="count" /> 不代表 <paramref name="bytes" /> 中有效的範圍。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-394">
              <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span>
          </span>
          <span data-ttu-id="4dd73-395">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-395">-or-</span>
          </span>
          <span data-ttu-id="4dd73-396">所產生的位元組數目大於可用整數傳回的數目上限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-396">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4dd73-397">已啟用錯誤偵測，而且 <paramref name="bytes" /> 包含無效的位元組序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-397">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="4dd73-398">發生後援 (如需更完整的說明，請參閱 [.NET Framework 中的字元編碼方式](~/docs/standard/base-types/character-encoding.md))</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-398">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span>
          </span>
          <span data-ttu-id="4dd73-399">-和-</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-399">-and-</span>
          </span>
          <span data-ttu-id="4dd73-400">
            <see cref="P:System.Text.Encoding.DecoderFallback" /> 設定為 <see cref="T:System.Text.DecoderExceptionFallback" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-400">
              <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Text.UnicodeEncoding.GetChars" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetDecoder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetChars">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4dd73-401">將位元組序列解碼成一組字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-401">Decodes a sequence of bytes into a set of characters.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override int GetChars (byte* bytes, int byteCount, char* chars, int charCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetChars(unsigned int8* bytes, int32 byteCount, char* chars, int32 charCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetChars(System::Byte* bytes, int byteCount, char* chars, int charCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="byteCount" Type="System.Int32" />
        <Parameter Name="chars" Type="System.Char*" />
        <Parameter Name="charCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="4dd73-402">要解碼的第一個位元組指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-402">A pointer to the first byte to decode.</span>
          </span>
        </param>
        <param name="byteCount">
          <span data-ttu-id="4dd73-403">要解碼的位元組數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-403">The number of bytes to decode.</span>
          </span>
        </param>
        <param name="chars">
          <span data-ttu-id="4dd73-404">開始寫入產生的一組字元之位置指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-404">A pointer to the location at which to start writing the resulting set of characters.</span>
          </span>
        </param>
        <param name="charCount">
          <span data-ttu-id="4dd73-405">要寫入的最大字元數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-405">The maximum number of characters to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4dd73-406">將起始於指定位元組指標的位元組序列解碼成一組字元；儲存該組字元時，係以指定的字元指標為起始點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-406">Decodes a sequence of bytes starting at the specified byte pointer into a set of characters that are stored starting at the specified character pointer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4dd73-407">
            <paramref name="chars" /> 參數所指示位置上寫入的實際字元數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-407">The actual number of characters written at the location indicated by the <paramref name="chars" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4dd73-408">若要計算確切的陣列大小的<xref:System.Text.UnicodeEncoding.GetChars%2A>來儲存產生的字元，應用程式會使用需要<xref:System.Text.UnicodeEncoding.GetCharCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="4dd73-408">To calculate the exact array size that <xref:System.Text.UnicodeEncoding.GetChars%2A> requires to store the resulting characters, the application uses <xref:System.Text.UnicodeEncoding.GetCharCount%2A>.</span></span> <span data-ttu-id="4dd73-409">若要計算的最大陣列大小，應用程式應該使用<xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="4dd73-409">To calculate the maximum array size, the application should use <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>.</span></span> <span data-ttu-id="4dd73-410"><xref:System.Text.UnicodeEncoding.GetCharCount%2A>方法通常會配置較少的記憶體，而<xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>方法通常執行速度更快。</span><span class="sxs-lookup"><span data-stu-id="4dd73-410">The <xref:System.Text.UnicodeEncoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="4dd73-411">錯誤偵測無效的序列造成此方法會擲回<xref:System.ArgumentException>。</span><span class="sxs-lookup"><span data-stu-id="4dd73-411">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="4dd73-412">錯誤偵測，會忽略無效的序列，而不擲回任何例外狀況。</span><span class="sxs-lookup"><span data-stu-id="4dd73-412">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="4dd73-413">如果要解碼的位元組範圍包含位元組順序標示 (BOM)，而且非 BOM 感知型別之方法所傳回的位元組陣列，這個方法所傳回的字元陣列中包含字元 U + FFFE。</span><span class="sxs-lookup"><span data-stu-id="4dd73-413">If the range of bytes to be decoded includes the byte order mark (BOM) and the byte array was returned by a method of a non-BOM aware type, the character U+FFFE is included in the character array returned by this method.</span></span> <span data-ttu-id="4dd73-414">您可以移除它，藉由呼叫<xref:System.String.TrimStart%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="4dd73-414">You can remove it by calling the <xref:System.String.TrimStart%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="4dd73-415">要轉換，例如，從資料流讀取資料的資料可能只適用於連續區塊。</span><span class="sxs-lookup"><span data-stu-id="4dd73-415">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="4dd73-416">在此情況下，或應用程式的資料量大到需要分割成較小的區塊時，應該使用<xref:System.Text.Decoder>或<xref:System.Text.Encoder>所提供物件<xref:System.Text.UnicodeEncoding.GetDecoder%2A>或<xref:System.Text.UnicodeEncoding.GetEncoder%2A>方法，分別。</span><span class="sxs-lookup"><span data-stu-id="4dd73-416">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> object provided by the <xref:System.Text.UnicodeEncoding.GetDecoder%2A> or the <xref:System.Text.UnicodeEncoding.GetEncoder%2A> method, respectively.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4dd73-417">
            <paramref name="bytes" /> 是 <see langword="null" /> (<see langword="Nothing" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-417">
              <paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          </span>
          <span data-ttu-id="4dd73-418">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-418">-or-</span>
          </span>
          <span data-ttu-id="4dd73-419">
            <paramref name="chars" /> 是 <see langword="null" /> (<see langword="Nothing" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-419">
              <paramref name="chars" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4dd73-420">
            <paramref name="byteCount" /> 或 <paramref name="charCount" /> 小於零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-420">
              <paramref name="byteCount" /> or <paramref name="charCount" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4dd73-421">已啟用錯誤偵測，而且 <paramref name="bytes" /> 包含無效的位元組序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-421">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span>
          </span>
          <span data-ttu-id="4dd73-422">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-422">-or-</span>
          </span>
          <span data-ttu-id="4dd73-423">
            <paramref name="charCount" /> 小於結果字元數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-423">
              <paramref name="charCount" /> is less than the resulting number of characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="4dd73-424">發生後援 (如需更完整的說明，請參閱 [.NET Framework 中的字元編碼方式](~/docs/standard/base-types/character-encoding.md))</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-424">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span>
          </span>
          <span data-ttu-id="4dd73-425">-和-</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-425">-and-</span>
          </span>
          <span data-ttu-id="4dd73-426">
            <see cref="P:System.Text.Encoding.DecoderFallback" /> 設定為 <see cref="T:System.Text.DecoderExceptionFallback" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-426">
              <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="4dd73-427">需要完全信任立即呼叫者。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-427">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="4dd73-428">這個成員無法供部分信任或安全性透明程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-428">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Text.UnicodeEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetDecoder" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetString(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override int GetChars (byte[] bytes, int byteIndex, int byteCount, char[] chars, int charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetChars(unsigned int8[] bytes, int32 byteIndex, int32 byteCount, char[] chars, int32 charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChars (bytes As Byte(), byteIndex As Integer, byteCount As Integer, chars As Char(), charIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetChars(cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex, int byteCount, cli::array &lt;char&gt; ^ chars, int charIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
        <Parameter Name="byteCount" Type="System.Int32" />
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="charIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="4dd73-429">包含要解碼之位元組序列的位元組陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-429">The byte array containing the sequence of bytes to decode.</span>
          </span>
        </param>
        <param name="byteIndex">
          <span data-ttu-id="4dd73-430">要解碼的第一個位元組索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-430">The index of the first byte to decode.</span>
          </span>
        </param>
        <param name="byteCount">
          <span data-ttu-id="4dd73-431">要解碼的位元組數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-431">The number of bytes to decode.</span>
          </span>
        </param>
        <param name="chars">
          <span data-ttu-id="4dd73-432">包含產生的一組字元之字元陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-432">The character array to contain the resulting set of characters.</span>
          </span>
        </param>
        <param name="charIndex">
          <span data-ttu-id="4dd73-433">要開始寫入產生的一組字元之索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-433">The index at which to start writing the resulting set of characters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4dd73-434">將指定位元組陣列中的位元組序列解碼成指定的字元陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-434">Decodes a sequence of bytes from the specified byte array into the specified character array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4dd73-435">寫入 <paramref name="chars" /> 的實際字元數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-435">The actual number of characters written into <paramref name="chars" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4dd73-436">若要計算所需的精確陣列大小<xref:System.Text.UnicodeEncoding.GetChars%2A>儲存產生的字元，應用程式會使用<xref:System.Text.UnicodeEncoding.GetCharCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="4dd73-436">To calculate the exact array size required by <xref:System.Text.UnicodeEncoding.GetChars%2A> to store the resulting characters, the application uses <xref:System.Text.UnicodeEncoding.GetCharCount%2A>.</span></span> <span data-ttu-id="4dd73-437">若要計算的最大陣列大小，應用程式應該使用<xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="4dd73-437">To calculate the maximum array size, the application should use <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>.</span></span> <span data-ttu-id="4dd73-438"><xref:System.Text.UnicodeEncoding.GetCharCount%2A>方法通常會配置較少的記憶體，而<xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>方法通常執行速度更快。</span><span class="sxs-lookup"><span data-stu-id="4dd73-438">The <xref:System.Text.UnicodeEncoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="4dd73-439">錯誤偵測無效的序列造成此方法會擲回<xref:System.ArgumentException>。</span><span class="sxs-lookup"><span data-stu-id="4dd73-439">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="4dd73-440">錯誤偵測，會忽略無效的序列，而不擲回任何例外狀況。</span><span class="sxs-lookup"><span data-stu-id="4dd73-440">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="4dd73-441">如果要解碼的位元組範圍包含位元組順序標示 (BOM)，而且非 BOM 感知型別之方法所傳回的位元組陣列，這個方法所傳回的字元陣列中包含字元 U + FFFE。</span><span class="sxs-lookup"><span data-stu-id="4dd73-441">If the range of bytes to be decoded includes the byte order mark (BOM) and the byte array was returned by a method of a non-BOM aware type, the character U+FFFE is included in the character array returned by this method.</span></span> <span data-ttu-id="4dd73-442">您可以移除它，藉由呼叫<xref:System.String.TrimStart%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="4dd73-442">You can remove it by calling the <xref:System.String.TrimStart%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="4dd73-443">要轉換，例如，從資料流讀取資料的資料可能只適用於連續區塊。</span><span class="sxs-lookup"><span data-stu-id="4dd73-443">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="4dd73-444">在此情況下，或應用程式的資料量大到需要分割成較小的區塊時，應該使用<xref:System.Text.Decoder>或<xref:System.Text.Encoder>提供<xref:System.Text.UnicodeEncoding.GetDecoder%2A>方法或<xref:System.Text.UnicodeEncoding.GetEncoder%2A>方法，分別。</span><span class="sxs-lookup"><span data-stu-id="4dd73-444">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UnicodeEncoding.GetDecoder%2A> method or the <xref:System.Text.UnicodeEncoding.GetEncoder%2A> method, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4dd73-445">下列範例示範如何使用<xref:System.Text.UnicodeEncoding.GetChars%2A>方法來解碼的位元組陣列中的項目範圍，並將結果儲存在字元陣列。</span><span class="sxs-lookup"><span data-stu-id="4dd73-445">The following example demonstrates how to use the <xref:System.Text.UnicodeEncoding.GetChars%2A> method to decode a range of elements in a byte array and store the result in a character array.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.GetChars Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetChars Example/CPP/getchars-byte[]-int32-int32-char[]-int32.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.GetChars Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetChars Example/CS/getchars-byte[]-int32-int32-char[]-int32.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.GetChars Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetChars Example/VB/getchars-byte[]-int32-int32-char[]-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4dd73-446">
            <paramref name="bytes" /> 是 <see langword="null" /> (<see langword="Nothing" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-446">
              <paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          </span>
          <span data-ttu-id="4dd73-447">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-447">-or-</span>
          </span>
          <span data-ttu-id="4dd73-448">
            <paramref name="chars" /> 是 <see langword="null" /> (<see langword="Nothing" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-448">
              <paramref name="chars" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4dd73-449">
            <paramref name="byteIndex" />、<paramref name="byteCount" /> 或 <paramref name="charIndex" /> 小於零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-449">
              <paramref name="byteIndex" /> or <paramref name="byteCount" /> or <paramref name="charIndex" /> is less than zero.</span>
          </span>
          <span data-ttu-id="4dd73-450">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-450">-or-</span>
          </span>
          <span data-ttu-id="4dd73-451">
            <paramref name="byteindex" /> 與 <paramref name="byteCount" /> 不代表 <paramref name="bytes" /> 中有效的範圍。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-451">
              <paramref name="byteindex" /> and <paramref name="byteCount" /> do not denote a valid range in <paramref name="bytes" />.</span>
          </span>
          <span data-ttu-id="4dd73-452">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-452">-or-</span>
          </span>
          <span data-ttu-id="4dd73-453">
            <paramref name="charIndex" /> 在 <paramref name="chars" /> 中不是有效的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-453">
              <paramref name="charIndex" /> is not a valid index in <paramref name="chars" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4dd73-454">已啟用錯誤偵測，而且 <paramref name="bytes" /> 包含無效的位元組序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-454">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span>
          </span>
          <span data-ttu-id="4dd73-455">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-455">-or-</span>
          </span>
          <span data-ttu-id="4dd73-456">從 <paramref name="chars" /> 到陣列結尾處，<paramref name="charIndex" /> 沒有足夠的容量容納結果字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-456">
              <paramref name="chars" /> does not have enough capacity from <paramref name="charIndex" /> to the end of the array to accommodate the resulting characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="4dd73-457">發生後援 (如需更完整的說明，請參閱 [.NET Framework 中的字元編碼方式](~/docs/standard/base-types/character-encoding.md))</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-457">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span>
          </span>
          <span data-ttu-id="4dd73-458">-和-</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-458">-and-</span>
          </span>
          <span data-ttu-id="4dd73-459">
            <see cref="P:System.Text.Encoding.DecoderFallback" /> 設定為 <see cref="T:System.Text.DecoderExceptionFallback" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-459">
              <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UnicodeEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetDecoder" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetString(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetDecoder">
      <MemberSignature Language="C#" Value="public override System.Text.Decoder GetDecoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Text.Decoder GetDecoder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetDecoder" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDecoder () As Decoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Text::Decoder ^ GetDecoder();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Decoder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4dd73-460">取得可以將以 UTF-16 編碼的位元組序列轉換成 Unicode 字元序列的解碼器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-460">Obtains a decoder that converts a UTF-16 encoded sequence of bytes into a sequence of Unicode characters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4dd73-461">
            <see cref="T:System.Text.Decoder" />，可以將以 UTF-16 編碼的位元組序列轉換成 Unicode 字元序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-461">A <see cref="T:System.Text.Decoder" /> that converts a UTF-16 encoded sequence of bytes into a sequence of Unicode characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4dd73-462"><xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType>方法將序列的位元組區塊轉換成循序區塊中的字元，其方式類似<xref:System.Text.UnicodeEncoding.GetChars%2A>。</span><span class="sxs-lookup"><span data-stu-id="4dd73-462">The <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> method converts sequential blocks of bytes into sequential blocks of characters, in a manner similar to the <xref:System.Text.UnicodeEncoding.GetChars%2A>.</span></span> <span data-ttu-id="4dd73-463">不過，<xref:System.Text.Decoder>維護呼叫，因此它可以正確解碼位元組序列跨越區塊之間的狀態資訊。</span><span class="sxs-lookup"><span data-stu-id="4dd73-463">However, a <xref:System.Text.Decoder> maintains state information between calls so it can correctly decode byte sequences that span blocks.</span></span> <span data-ttu-id="4dd73-464"><xref:System.Text.Decoder>也會保留資料區塊的結尾的後隨位元組，並在下一步解碼作業中使用尾端位元組。</span><span class="sxs-lookup"><span data-stu-id="4dd73-464">The <xref:System.Text.Decoder> also preserves trailing bytes at the end of data blocks and uses the trailing bytes in the next decoding operation.</span></span> <span data-ttu-id="4dd73-465">因此，<xref:System.Text.UnicodeEncoding.GetDecoder%2A>和<xref:System.Text.UnicodeEncoding.GetEncoder%2A>進行網路傳輸，而檔案作業很實用是因為這些作業經常要處理而不是完整的資料流的資料區塊。</span><span class="sxs-lookup"><span data-stu-id="4dd73-465">Therefore, <xref:System.Text.UnicodeEncoding.GetDecoder%2A> and <xref:System.Text.UnicodeEncoding.GetEncoder%2A> are useful for network transmission and file operations, because those operations often deal with blocks of data instead of a complete data stream.</span></span>  
  
 <span data-ttu-id="4dd73-466">如果已啟用錯誤偵測，也就是`throwOnInvalidBytes`建構函式的參數設定為`true`中, 也已啟用錯誤偵測<xref:System.Text.Decoder>這個方法所傳回。</span><span class="sxs-lookup"><span data-stu-id="4dd73-466">If error detection is enabled, that is, the `throwOnInvalidBytes` parameter of the constructor is set to `true`, error detection is also enabled in the <xref:System.Text.Decoder> returned by this method.</span></span> <span data-ttu-id="4dd73-467">如果已啟用錯誤偵測，遇到無效的序列的解碼器狀態是未定義，且必須停止處理。</span><span class="sxs-lookup"><span data-stu-id="4dd73-467">If error detection is enabled and an invalid sequence is encountered, the state of the decoder is undefined and processing must stop.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4dd73-468">下列範例會使用編碼器和解碼器將字串編碼成位元組陣列，並再將位元組解碼成字元陣列。</span><span class="sxs-lookup"><span data-stu-id="4dd73-468">The following example uses an encoder and a decoder to encode a string into an array of bytes, and then decode the bytes into an array of characters.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.EncDec#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.EncDec/CPP/encdec.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.EncDec#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.EncDec/CS/encdec.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.EncDec#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.EncDec/VB/encdec.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Decoder" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetString(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetEncoder">
      <MemberSignature Language="C#" Value="public override System.Text.Encoder GetEncoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Text.Encoder GetEncoder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetEncoder" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEncoder () As Encoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Text::Encoder ^ GetEncoder();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4dd73-469">取得可以將 Unicode 字元序列轉換成以 UTF-16 編碼的位元組序列的編碼器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-469">Obtains an encoder that converts a sequence of Unicode characters into a UTF-16 encoded sequence of bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4dd73-470">
            <see cref="T:System.Text.Encoder" /> 物件，可以將 Unicode 字元序列轉換成以 UTF-16 編碼的位元組序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-470">A <see cref="T:System.Text.Encoder" /> object that converts a sequence of Unicode characters into a UTF-16 encoded sequence of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4dd73-471"><xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType>方法會將字元的循序區塊轉換成循序區塊的位元組的方式，類似於<xref:System.Text.UnicodeEncoding.GetBytes%2A>這個類別的方法。</span><span class="sxs-lookup"><span data-stu-id="4dd73-471">The <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method converts sequential blocks of characters into sequential blocks of bytes in a manner similar to the <xref:System.Text.UnicodeEncoding.GetBytes%2A> method of this class.</span></span> <span data-ttu-id="4dd73-472">不過，<xref:System.Text.Encoder>物件會維護狀態資訊之間的呼叫，讓它正確可以編碼跨越區塊的字元序列。</span><span class="sxs-lookup"><span data-stu-id="4dd73-472">However, a <xref:System.Text.Encoder> object maintains state information between calls so that it can correctly encode character sequences that span blocks.</span></span> <span data-ttu-id="4dd73-473"><xref:System.Text.Encoder>物件也會保留尾端字元的資料區塊的結尾，並在下一步的編碼作業中使用尾端字元。</span><span class="sxs-lookup"><span data-stu-id="4dd73-473">The <xref:System.Text.Encoder> object also preserves trailing characters at the end of data blocks and uses the trailing characters in the next encoding operation.</span></span> <span data-ttu-id="4dd73-474">例如，資料區塊可能會不相符的高 surrogate，以結束，而且比對的低 surrogate 可能在下一個資料區塊中。</span><span class="sxs-lookup"><span data-stu-id="4dd73-474">For example, a data block might end with an unmatched high surrogate, and the matching low surrogate might be in the next data block.</span></span> <span data-ttu-id="4dd73-475">因此，<xref:System.Text.UnicodeEncoding.GetDecoder%2A>和<xref:System.Text.UnicodeEncoding.GetEncoder%2A>進行網路傳輸，而檔案作業很實用是因為這些作業經常要處理而不是完整的資料流的資料區塊。</span><span class="sxs-lookup"><span data-stu-id="4dd73-475">Therefore, <xref:System.Text.UnicodeEncoding.GetDecoder%2A> and <xref:System.Text.UnicodeEncoding.GetEncoder%2A> are useful for network transmission and file operations, because those operations often deal with blocks of data instead of a complete data stream.</span></span>  
  
 <span data-ttu-id="4dd73-476">如果已啟用錯誤偵測，也就是`throwOnInvalidBytes`建構函式的參數設定為`true`中, 也已啟用錯誤偵測<xref:System.Text.Encoder>這個方法所傳回的物件。</span><span class="sxs-lookup"><span data-stu-id="4dd73-476">If error detection is enabled, that is, the `throwOnInvalidBytes` parameter of the constructor is set to `true`, error detection is also enabled in the <xref:System.Text.Encoder> object returned by this method.</span></span> <span data-ttu-id="4dd73-477">如果已啟用錯誤偵測，而且遇到無效的序列，編碼器狀態是未定義，且必須停止處理。</span><span class="sxs-lookup"><span data-stu-id="4dd73-477">If error detection is enabled and an invalid sequence is encountered, the state of the encoder is undefined and processing must stop.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4dd73-478">下列範例會使用編碼器和解碼器將字串編碼成位元組陣列，並再將位元組解碼成字元陣列。</span><span class="sxs-lookup"><span data-stu-id="4dd73-478">The following example uses an encoder and a decoder to encode a string into an array of bytes, and then decode the bytes into an array of characters.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.EncDec#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.EncDec/CPP/encdec.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.EncDec#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.EncDec/CS/encdec.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.EncDec#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.EncDec/VB/encdec.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Encoder" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetDecoder" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4dd73-479">傳回目前執行個體的雜湊碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-479">Returns the hash code for the current instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4dd73-480">目前 <see cref="T:System.Text.UnicodeEncoding" /> 物件的雜湊碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-480">The hash code for the current <see cref="T:System.Text.UnicodeEncoding" /> object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="GetMaxByteCount">
      <MemberSignature Language="C#" Value="public override int GetMaxByteCount (int charCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMaxByteCount(int32 charCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetMaxByteCount(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMaxByteCount (charCount As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMaxByteCount(int charCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charCount">
          <span data-ttu-id="4dd73-481">要編碼的字元數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-481">The number of characters to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4dd73-482">計算將指定數目的字元編碼所產生的最大位元組數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-482">Calculates the maximum number of bytes produced by encoding the specified number of characters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4dd73-483">編碼指定字元數所產生的最大位元組數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-483">The maximum number of bytes produced by encoding the specified number of characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4dd73-484">若要計算所需的精確陣列大小<xref:System.Text.UnicodeEncoding.GetBytes%2A>儲存產生的位元組，應用程式會使用<xref:System.Text.UnicodeEncoding.GetByteCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="4dd73-484">To calculate the exact array size required by <xref:System.Text.UnicodeEncoding.GetBytes%2A> to store the resulting bytes, the application uses <xref:System.Text.UnicodeEncoding.GetByteCount%2A>.</span></span> <span data-ttu-id="4dd73-485">若要計算的最大陣列大小，應用程式應該使用<xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="4dd73-485">To calculate the maximum array size, the application should use <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A>.</span></span> <span data-ttu-id="4dd73-486"><xref:System.Text.UnicodeEncoding.GetByteCount%2A>方法通常會配置較少的記憶體，而<xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A>方法通常執行速度更快。</span><span class="sxs-lookup"><span data-stu-id="4dd73-486">The <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="4dd73-487"><xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> 擷取最壞情況的數目，包括最壞的情況下，針對目前所選<xref:System.Text.EncoderFallback>。</span><span class="sxs-lookup"><span data-stu-id="4dd73-487"><xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> retrieves a worst-case number, including the worst case for the currently selected <xref:System.Text.EncoderFallback>.</span></span> <span data-ttu-id="4dd73-488">如果是可能的大型字串、 選擇後援<xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A>可以傳回較大的值。</span><span class="sxs-lookup"><span data-stu-id="4dd73-488">If a fallback is chosen with a potentially large string, <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> can return large values.</span></span>  
  
 <span data-ttu-id="4dd73-489">在大部分情況下，這個方法會擷取針對小型字串合理的數字。</span><span class="sxs-lookup"><span data-stu-id="4dd73-489">In most cases, this method retrieves reasonable numbers for small strings.</span></span> <span data-ttu-id="4dd73-490">大型字串，您可能選擇使用極大的緩衝區，在極少數的案例更合理地緩衝區超出攔截錯誤。</span><span class="sxs-lookup"><span data-stu-id="4dd73-490">For large strings, you might have to choose between using very large buffers and catching errors in the rare case that a more reasonable buffer is exceeded.</span></span> <span data-ttu-id="4dd73-491">您也可以考慮不同的方法，使用<xref:System.Text.UnicodeEncoding.GetByteCount%2A>或<xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="4dd73-491">You might also want to consider a different approach using <xref:System.Text.UnicodeEncoding.GetByteCount%2A> or <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="4dd73-492"><xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> 有沒有關係<xref:System.Text.UnicodeEncoding.GetChars%2A>。</span><span class="sxs-lookup"><span data-stu-id="4dd73-492"><xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> has no relation to <xref:System.Text.UnicodeEncoding.GetChars%2A>.</span></span> <span data-ttu-id="4dd73-493">如果您的應用程式需要類似的函數，以搭配<xref:System.Text.UnicodeEncoding.GetChars%2A>，應該使用<xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="4dd73-493">If your application needs a similar function to use with <xref:System.Text.UnicodeEncoding.GetChars%2A>, it should use <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4dd73-494">`GetMaxByteCount(N)` 不一定是相同的值`N* GetMaxByteCount(1)`。</span><span class="sxs-lookup"><span data-stu-id="4dd73-494">`GetMaxByteCount(N)` is not necessarily the same value as `N* GetMaxByteCount(1)`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4dd73-495">下列範例示範如何使用<xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A>方法傳回的編碼指定的字元數所需的位元組數目上限。</span><span class="sxs-lookup"><span data-stu-id="4dd73-495">The following example demonstrates how to use the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method to return the maximum number of bytes required to encode a specified number of characters.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.GetMaxByteCount Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetMaxByteCount Example/CPP/getmaxbytecount-int32.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.GetMaxByteCount Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetMaxByteCount Example/CS/getmaxbytecount-int32.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.GetMaxByteCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetMaxByteCount Example/VB/getmaxbytecount-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4dd73-496">
            <paramref name="charCount" /> 小於零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-496">
              <paramref name="charCount" /> is less than zero.</span>
          </span>
          <span data-ttu-id="4dd73-497">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-497">-or-</span>
          </span>
          <span data-ttu-id="4dd73-498">所產生的位元組數目大於可用整數傳回的數目上限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-498">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="4dd73-499">發生後援 (如需更完整的說明，請參閱 [.NET Framework 中的字元編碼方式](~/docs/standard/base-types/character-encoding.md))</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-499">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span>
          </span>
          <span data-ttu-id="4dd73-500">-和-</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-500">-and-</span>
          </span>
          <span data-ttu-id="4dd73-501">
            <see cref="P:System.Text.Encoding.EncoderFallback" /> 設定為 <see cref="T:System.Text.EncoderExceptionFallback" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-501">
              <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UnicodeEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetMaxCharCount">
      <MemberSignature Language="C#" Value="public override int GetMaxCharCount (int byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMaxCharCount(int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetMaxCharCount(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMaxCharCount (byteCount As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMaxCharCount(int byteCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="byteCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="byteCount">
          <span data-ttu-id="4dd73-502">要解碼的位元組數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-502">The number of bytes to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4dd73-503">計算將指定數目的位元組解碼所產生的最大字元數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-503">Calculates the maximum number of characters produced by decoding the specified number of bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4dd73-504">解碼指定位元組數所產生的最大字元數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-504">The maximum number of characters produced by decoding the specified number of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4dd73-505">若要計算所需的精確陣列大小<xref:System.Text.UnicodeEncoding.GetChars%2A>儲存產生的字元，應用程式會使用<xref:System.Text.UnicodeEncoding.GetCharCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="4dd73-505">To calculate the exact array size required by <xref:System.Text.UnicodeEncoding.GetChars%2A> to store the resulting characters, the application uses <xref:System.Text.UnicodeEncoding.GetCharCount%2A>.</span></span> <span data-ttu-id="4dd73-506">若要計算的最大陣列大小，應用程式應該使用<xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="4dd73-506">To calculate the maximum array size, the application should use <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>.</span></span> <span data-ttu-id="4dd73-507"><xref:System.Text.UnicodeEncoding.GetCharCount%2A>方法通常會配置較少的記憶體，而<xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>方法通常執行速度更快。</span><span class="sxs-lookup"><span data-stu-id="4dd73-507">The <xref:System.Text.UnicodeEncoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="4dd73-508"><xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> 擷取最壞情況的數目，包括最壞的情況下，針對目前所選<xref:System.Text.DecoderFallback>。</span><span class="sxs-lookup"><span data-stu-id="4dd73-508"><xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> retrieves a worst-case number, including the worst case for the currently selected <xref:System.Text.DecoderFallback>.</span></span> <span data-ttu-id="4dd73-509">如果是可能的大型字串、 選擇後援<xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>擷取較大的值。</span><span class="sxs-lookup"><span data-stu-id="4dd73-509">If a fallback is chosen with a potentially large string, <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> retrieves large values.</span></span>  
  
 <span data-ttu-id="4dd73-510">在大部分情況下，這個方法會擷取針對小型字串合理的數字。</span><span class="sxs-lookup"><span data-stu-id="4dd73-510">In most cases, this method retrieves reasonable numbers for small strings.</span></span> <span data-ttu-id="4dd73-511">大型字串，您可能選擇使用極大的緩衝區，在極少數的案例更合理地緩衝區超出攔截錯誤。</span><span class="sxs-lookup"><span data-stu-id="4dd73-511">For large strings, you might have to choose between using very large buffers and catching errors in the rare case that a more reasonable buffer is exceeded.</span></span> <span data-ttu-id="4dd73-512">您也可以考慮不同的方法，使用<xref:System.Text.UnicodeEncoding.GetCharCount%2A>或<xref:System.Text.Decoder.Convert%2A>。</span><span class="sxs-lookup"><span data-stu-id="4dd73-512">You might also want to consider a different approach using <xref:System.Text.UnicodeEncoding.GetCharCount%2A> or <xref:System.Text.Decoder.Convert%2A>.</span></span>  
  
 <span data-ttu-id="4dd73-513"><xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> 有沒有關係<xref:System.Text.UnicodeEncoding.GetBytes%2A>。</span><span class="sxs-lookup"><span data-stu-id="4dd73-513"><xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> has no relation to <xref:System.Text.UnicodeEncoding.GetBytes%2A>.</span></span> <span data-ttu-id="4dd73-514">如果您的應用程式需要類似的函數，以搭配<xref:System.Text.UnicodeEncoding.GetBytes%2A>，應該使用<xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="4dd73-514">If your application needs a similar function to use with <xref:System.Text.UnicodeEncoding.GetBytes%2A>, it should use <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4dd73-515">`GetMaxCharCount(N)` 不一定是相同的值`N* GetMaxCharCount(1)`。</span><span class="sxs-lookup"><span data-stu-id="4dd73-515">`GetMaxCharCount(N)` is not necessarily the same value as `N* GetMaxCharCount(1)`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4dd73-516">下列範例示範如何使用<xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>解碼指定的位元組數所產生的方法來傳回最大字元數。</span><span class="sxs-lookup"><span data-stu-id="4dd73-516">The following example demonstrates how to use the <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> method to return the maximum number of characters produced by decoding a specified number of bytes.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.GetMaxCharCount Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetMaxCharCount Example/CPP/getmaxcharcount-int32.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.GetMaxCharCount Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetMaxCharCount Example/CS/getmaxcharcount-int32.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.GetMaxCharCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetMaxCharCount Example/VB/getmaxcharcount-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4dd73-517">
            <paramref name="byteCount" /> 小於零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-517">
              <paramref name="byteCount" /> is less than zero.</span>
          </span>
          <span data-ttu-id="4dd73-518">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-518">-or-</span>
          </span>
          <span data-ttu-id="4dd73-519">所產生的位元組數目大於可用整數傳回的數目上限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-519">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="4dd73-520">發生後援 (如需更完整的說明，請參閱 [.NET Framework 中的字元編碼方式](~/docs/standard/base-types/character-encoding.md))</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-520">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span>
          </span>
          <span data-ttu-id="4dd73-521">-和-</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-521">-and-</span>
          </span>
          <span data-ttu-id="4dd73-522">
            <see cref="P:System.Text.Encoding.DecoderFallback" /> 設定為 <see cref="T:System.Text.DecoderExceptionFallback" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-522">
              <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UnicodeEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetString(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetDecoder" />
      </Docs>
    </Member>
    <Member MemberName="GetPreamble">
      <MemberSignature Language="C#" Value="public override byte[] GetPreamble ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] GetPreamble() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetPreamble" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetPreamble () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ GetPreamble();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4dd73-523">如果這個執行個體的建構函式要求位元組順序標記，則會傳回以 UTF-16 格式編碼的 Unicode 位元組順序標記。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-523">Returns a Unicode byte order mark encoded in UTF-16 format, if the constructor for this instance requests a byte order mark.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4dd73-524">如果設定 <see cref="T:System.Text.UnicodeEncoding" /> 物件提供編碼方式，則為包含 Unicode 位元組順序標記的位元組陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-524">A byte array containing the Unicode byte order mark, if the <see cref="T:System.Text.UnicodeEncoding" /> object is configured to supply one.</span>
          </span>
          <span data-ttu-id="4dd73-525">否則，這個方法會傳回長度為零的位元組陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-525">Otherwise, this method returns a zero-length byte array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4dd73-526"><xref:System.Text.UnicodeEncoding>物件可以提供前序編碼，也就是可以加在編碼程序所產生的位元組序列的位元組陣列。</span><span class="sxs-lookup"><span data-stu-id="4dd73-526">The <xref:System.Text.UnicodeEncoding> object can provide a preamble, which is a byte array that can be prefixed to the sequence of bytes resulting from the encoding process.</span></span> <span data-ttu-id="4dd73-527">引用編碼的位元組序列的位元組順序標示 （字碼指標 U + FEFF） 有助於判斷位元組順序的轉換格式或 UTF-8 解碼器。</span><span class="sxs-lookup"><span data-stu-id="4dd73-527">Prefacing a sequence of encoded bytes with a byte order mark (code point U+FEFF) helps the decoder determine the byte order and the transformation format or UTF.</span></span> <span data-ttu-id="4dd73-528">Unicode 位元組順序標記 (BOM) （以十六進位方式） 的序列化，如下所示：</span><span class="sxs-lookup"><span data-stu-id="4dd73-528">The Unicode byte order mark (BOM) is serialized as follows (in hexadecimal):</span></span>  
  
-   <span data-ttu-id="4dd73-529">Big 位元組由小到大位元組順序： FE FF</span><span class="sxs-lookup"><span data-stu-id="4dd73-529">Big endian byte order: FE FF</span></span>  
  
-   <span data-ttu-id="4dd73-530">很少位元組由小到大位元組順序： FF FE</span><span class="sxs-lookup"><span data-stu-id="4dd73-530">Little endian byte order: FF FE</span></span>  
  
 <span data-ttu-id="4dd73-531">您可以具現化<xref:System.Text.UnicodeEncoding>物件，其<xref:System.Text.UnicodeEncoding.GetPreamble%2A>方法會傳回有效的 BOM 以下列方式：</span><span class="sxs-lookup"><span data-stu-id="4dd73-531">You can instantiate a <xref:System.Text.UnicodeEncoding> object whose <xref:System.Text.UnicodeEncoding.GetPreamble%2A> method returns a valid BOM in the following ways:</span></span>  
  
-   <span data-ttu-id="4dd73-532">藉由擷取<xref:System.Text.UnicodeEncoding>所傳回物件<xref:System.Text.Encoding.Unicode%2A?displayProperty=nameWithType>或<xref:System.Text.Encoding.BigEndianUnicode%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="4dd73-532">By retrieving the <xref:System.Text.UnicodeEncoding> object returned by the <xref:System.Text.Encoding.Unicode%2A?displayProperty=nameWithType> or <xref:System.Text.Encoding.BigEndianUnicode%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="4dd73-533">藉由呼叫無參數<xref:System.Text.UnicodeEncoding.%23ctor>建構函式來具現化<xref:System.Text.UnicodeEncoding>物件。</span><span class="sxs-lookup"><span data-stu-id="4dd73-533">By calling the parameterless <xref:System.Text.UnicodeEncoding.%23ctor> constructor to instantiate a <xref:System.Text.UnicodeEncoding> object.</span></span>  
  
-   <span data-ttu-id="4dd73-534">藉由提供`true`做為值`byteOrderMark`引數<xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%29>或<xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29>建構函式。</span><span class="sxs-lookup"><span data-stu-id="4dd73-534">By supplying `true` as the value of the `byteOrderMark` argument to the <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%29> or <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> constructors.</span></span>  
  
 <span data-ttu-id="4dd73-535">我們建議 BOM，因為它提供幾乎已遺失參考其編碼方式，例如未標記或標記不當的檔案編碼方式的特定識別碼 web 資料或儲存時商務的隨機文字檔案沒有國際考量。</span><span class="sxs-lookup"><span data-stu-id="4dd73-535">We recommended that you use the BOM, since it provides nearly certain identification of an encoding for files that otherwise have lost a reference to their encoding, such as untagged or improperly tagged web data or random text files stored when a business did not have international concerns.</span></span> <span data-ttu-id="4dd73-536">如果資料一致的方式，以及已正確加上標記，就能避免通常使用者的問題。</span><span class="sxs-lookup"><span data-stu-id="4dd73-536">Often user problems might be avoided if data is consistently and properly tagged.</span></span>  
  
 <span data-ttu-id="4dd73-537">提供編碼類型的標準，BOM 是多餘的。</span><span class="sxs-lookup"><span data-stu-id="4dd73-537">For standards that provide an encoding type, a BOM is somewhat redundant.</span></span> <span data-ttu-id="4dd73-538">不過，它可以用來幫助伺服器傳送正確的編碼方式標頭。</span><span class="sxs-lookup"><span data-stu-id="4dd73-538">However, it can be used to help a server send the correct encoding header.</span></span> <span data-ttu-id="4dd73-539">或者，它可用來當做後援以防編碼遺失時。</span><span class="sxs-lookup"><span data-stu-id="4dd73-539">Alternatively, it can be used as a fallback in case the encoding is otherwise lost.</span></span>  
  
 <span data-ttu-id="4dd73-540">有一些缺點，以包含 BOM。</span><span class="sxs-lookup"><span data-stu-id="4dd73-540">There are some disadvantages to using a BOM.</span></span> <span data-ttu-id="4dd73-541">例如，了解如何限制使用 BOM 的資料庫欄位很難。</span><span class="sxs-lookup"><span data-stu-id="4dd73-541">For example, knowing how to limit the database fields that use a BOM can be difficult.</span></span> <span data-ttu-id="4dd73-542">串連的檔案可以也會是問題，比方說，例如合併檔案時不必要的字元可能會結束中間資料的方式。</span><span class="sxs-lookup"><span data-stu-id="4dd73-542">Concatenation of files can be a problem also, for example, when files are merged in such a way that an unnecessary character can end up in the middle of data.</span></span> <span data-ttu-id="4dd73-543">儘管有一些缺點，不過，BOM 使用建議。</span><span class="sxs-lookup"><span data-stu-id="4dd73-543">In spite of the few disadvantages, however, the use of a BOM is highly recommended.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="4dd73-544">若要確保正確解碼的編碼的位元組，您應該作為前置詞與前序編碼的位元組資料流的開頭。</span><span class="sxs-lookup"><span data-stu-id="4dd73-544">To ensure that the encoded bytes are decoded properly, you should prefix the beginning of a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="4dd73-545">請注意，<xref:System.Text.UnicodeEncoding.GetBytes%2A>方法不會不在前面加上 BOM 編碼的位元組序列; 開發人員必須負責提供適當的位元組資料流的開頭 BOM。</span><span class="sxs-lookup"><span data-stu-id="4dd73-545">Note that the <xref:System.Text.UnicodeEncoding.GetBytes%2A> method does not prepend a BOM to a sequence of encoded bytes; supplying a BOM at the beginning of an appropriate byte stream is the developer's responsibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4dd73-546">下列範例示範如何使用<xref:System.Text.UnicodeEncoding.GetPreamble%2A>方法來擷取 big endian 或很少位元組由小到大位元組順序的執行個體中的 Unicode 位元組順序標示<xref:System.Text.UnicodeEncoding>。</span><span class="sxs-lookup"><span data-stu-id="4dd73-546">The following example demonstrates how to use the <xref:System.Text.UnicodeEncoding.GetPreamble%2A> method to retrieve the Unicode byte order mark in big endian or little endian byte order for an instance of a <xref:System.Text.UnicodeEncoding>.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.GetPreamble Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetPreamble Example/CPP/getpreamble-.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.GetPreamble Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetPreamble Example/CS/getpreamble-.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.GetPreamble Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetPreamble Example/VB/getpreamble-.vb#1)]  
  
 <span data-ttu-id="4dd73-547">下列範例會呈現兩個<xref:System.Text.UnicodeEncoding>物件，其中第一個不提供 BOM，且第二個哪些不會。</span><span class="sxs-lookup"><span data-stu-id="4dd73-547">The following example instantiates two <xref:System.Text.UnicodeEncoding> objects, the first of which does not provide a BOM, and the second of which does.</span></span> <span data-ttu-id="4dd73-548">然後它會呼叫<xref:System.Text.UnicodeEncoding.GetPreamble%2A>方法，將 BOM 寫入之前的 Unicode 編碼的字串寫入檔案。</span><span class="sxs-lookup"><span data-stu-id="4dd73-548">It then calls the <xref:System.Text.UnicodeEncoding.GetPreamble%2A> method to write the BOM to a file before writing a Unicode-encoded string.</span></span> <span data-ttu-id="4dd73-549">如主控台輸出範例所示，從第二個編碼器會將位元組儲存的檔案有三個的多個位元組，比第一個。</span><span class="sxs-lookup"><span data-stu-id="4dd73-549">As the console output from the example shows, the file that saves the bytes from the second encoder has three more bytes than the first.</span></span>  
  
 [!code-csharp[System.Text.UnicodeEncoding.GetPreamble#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Text.UnicodeEncoding.GetPreamble/cs/GetPreamble1.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.GetPreamble#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Text.UnicodeEncoding.GetPreamble/vb/GetPreamble1.vb#1)]  
  
 <span data-ttu-id="4dd73-550">您也可以藉由比較檔案`fc`命令主控台視窗中，或者您可以檢查包含十六進位檢視模式的文字編輯器中的檔案。</span><span class="sxs-lookup"><span data-stu-id="4dd73-550">You can also compare the files by using the `fc` command in a console window, or you can inspect the files in a text editor that includes a Hex View mode.</span></span> <span data-ttu-id="4dd73-551">請注意，當支援 utf-16 編碼的編輯器中開啟檔案時，BOM 會不會顯示。</span><span class="sxs-lookup"><span data-stu-id="4dd73-551">Note that when the file is opened in an editor that supports UTF-16 encoding, the BOM is not displayed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public override string GetString (byte[] bytes, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetString(unsigned int8[] bytes, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetString(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetString (bytes As Byte(), index As Integer, count As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetString(cli::array &lt;System::Byte&gt; ^ bytes, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="4dd73-552">包含要解碼之位元組序列的位元組陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-552">The byte array containing the sequence of bytes to decode.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="4dd73-553">要解碼的第一個位元組索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-553">The index of the first byte to decode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="4dd73-554">要解碼的位元組數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-554">The number of bytes to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4dd73-555">將位元組陣列中的某一段位元組範圍解碼成字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-555">Decodes a range of bytes from a byte array into a string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4dd73-556">
            <see cref="T:System.String" /> 物件，包含將指定之位元組序列解碼的結果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-556">A <see cref="T:System.String" /> object containing the results of decoding the specified sequence of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4dd73-557">錯誤偵測無效的序列造成此方法會擲回<xref:System.ArgumentException>。</span><span class="sxs-lookup"><span data-stu-id="4dd73-557">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="4dd73-558">錯誤偵測，會忽略無效的序列，而不擲回任何例外狀況。</span><span class="sxs-lookup"><span data-stu-id="4dd73-558">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="4dd73-559">如果要解碼的位元組範圍包含位元組順序標示 (BOM)，而且非 BOM 感知型別之方法所傳回的位元組陣列，這個方法所傳回的字元陣列中包含字元 U + FFFE。</span><span class="sxs-lookup"><span data-stu-id="4dd73-559">If the range of bytes to be decoded includes the byte order mark (BOM) and the byte array was returned by a method of a non-BOM aware type, the character U+FFFE is included in the character array returned by this method.</span></span> <span data-ttu-id="4dd73-560">您可以移除它，藉由呼叫<xref:System.String.TrimStart%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="4dd73-560">You can remove it by calling the <xref:System.String.TrimStart%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="4dd73-561">要轉換，例如，從資料流讀取資料的資料可能只適用於連續區塊。</span><span class="sxs-lookup"><span data-stu-id="4dd73-561">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="4dd73-562">在此情況下，或應用程式的資料量大到需要分割成較小的區塊時，應該使用<xref:System.Text.Decoder>或<xref:System.Text.Encoder>所提供物件<xref:System.Text.UnicodeEncoding.GetDecoder%2A>或<xref:System.Text.UnicodeEncoding.GetEncoder%2A>方法，分別。</span><span class="sxs-lookup"><span data-stu-id="4dd73-562">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> object provided by the <xref:System.Text.UnicodeEncoding.GetDecoder%2A> or the <xref:System.Text.UnicodeEncoding.GetEncoder%2A> method, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4dd73-563">下列範例會藉由呼叫初始化陣列<xref:System.Text.UnicodeEncoding.GetByteCount%2A>方法，以判斷完全多少個位元組所需編碼的字串，然後再將位元組順序標示 (BOM) 的大小。</span><span class="sxs-lookup"><span data-stu-id="4dd73-563">The following example initializes an array by calling the <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method to determine exactly how many bytes are required for an encoded string and then adding the size of the byte order mark (BOM).</span></span> <span data-ttu-id="4dd73-564">此範例會接著呼叫<xref:System.Text.UnicodeEncoding.GetPreamble%2A>方法，可儲存到陣列之前先呼叫 BOM<xref:System.Text.Encoding.GetBytes%2A>儲存編碼的位元組陣列的方法。</span><span class="sxs-lookup"><span data-stu-id="4dd73-564">The example then calls the <xref:System.Text.UnicodeEncoding.GetPreamble%2A> method to store the BOM to the array before calling the <xref:System.Text.Encoding.GetBytes%2A> method to store the encoded bytes to the array.</span></span> <span data-ttu-id="4dd73-565">此範例會接著呼叫<xref:System.Text.UnicodeEncoding.GetString%2A>方法來解碼的字串。</span><span class="sxs-lookup"><span data-stu-id="4dd73-565">The example then calls the <xref:System.Text.UnicodeEncoding.GetString%2A> method to decode the string.</span></span>  
  
 [!code-csharp[System.Text.UTF8Encoding.GetString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.utf8encoding.getstring/cs/getstring1.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.utf8encoding.getstring/vb/getstring1.vb#1)]  
  
 <span data-ttu-id="4dd73-566">請注意，在此情況下已解碼的字串不同於原始的字串，因為它的開頭 U + FFFD 的 16 位元的位元組順序標記。</span><span class="sxs-lookup"><span data-stu-id="4dd73-566">Note that in this case the decoded string differs from the original string, since it begins with a 16-bit byte order mark U+FFFD.</span></span> <span data-ttu-id="4dd73-567">這表示兩個字串將會比較結果不相等，而且，如果字串為輸出，BOM 會顯示為 「 取代字元"？"。</span><span class="sxs-lookup"><span data-stu-id="4dd73-567">This means that the two strings will compare as unequal, and that if the string is output, the BOM will be displayed as the replacement character "?".</span></span> <span data-ttu-id="4dd73-568">若要移除的字串開頭 BOM，您可以呼叫<xref:System.String.TrimStart%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="4dd73-568">To remove the BOM at the beginning of the string, you can call the <xref:System.String.TrimStart%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4dd73-569">
            <paramref name="bytes" /> 是 <see langword="null" /> (<see langword="Nothing" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-569">
              <paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4dd73-570">
            <paramref name="index" /> 或 <paramref name="count" /> 小於零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-570">
              <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="4dd73-571">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-571">-or-</span>
          </span>
          <span data-ttu-id="4dd73-572">
            <paramref name="index" /> 和 <paramref name="count" /> 不代表 <paramref name="bytes" /> 中有效的範圍。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-572">
              <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4dd73-573">已啟用錯誤偵測，而且 <paramref name="bytes" /> 包含無效的位元組序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-573">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="4dd73-574">發生後援 (如需更完整的說明，請參閱 [.NET Framework 中的字元編碼方式](~/docs/standard/base-types/character-encoding.md))</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-574">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span>
          </span>
          <span data-ttu-id="4dd73-575">-和-</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-575">-and-</span>
          </span>
          <span data-ttu-id="4dd73-576">
            <see cref="P:System.Text.Encoding.DecoderFallback" /> 設定為 <see cref="T:System.Text.DecoderExceptionFallback" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd73-576">
              <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UnicodeEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetDecoder" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetMaxCharCount(System.Int32)" />
      </Docs>
    </Member>
  </Members>
</Type>