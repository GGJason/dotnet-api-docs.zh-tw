<Type Name="EncoderExceptionFallback" FullName="System.Text.EncoderExceptionFallback">
  <Metadata><Meta Name="ms.openlocfilehash" Value="68e7ebb41465cea2b93e8cc6bfc26de46f8b281e" /><Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="11/27/2018" /><Meta Name="ms.locfileid" Value="52361977" /></Metadata><TypeSignature Language="C#" Value="public sealed class EncoderExceptionFallback : System.Text.EncoderFallback" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit EncoderExceptionFallback extends System.Text.EncoderFallback" />
  <TypeSignature Language="DocId" Value="T:System.Text.EncoderExceptionFallback" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EncoderExceptionFallback&#xA;Inherits EncoderFallback" />
  <TypeSignature Language="C++ CLI" Value="public ref class EncoderExceptionFallback sealed : System::Text::EncoderFallback" />
  <TypeSignature Language="F#" Value="type EncoderExceptionFallback = class&#xA;    inherit EncoderFallback" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Text.EncoderFallback</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="c80fc-101">針對無法轉換為輸出位元組序列的輸入字元，提供失敗處理機制 (稱為後援)。</span><span class="sxs-lookup"><span data-stu-id="c80fc-101">Provides a failure-handling mechanism, called a fallback, for an input character that cannot be converted to an output byte sequence.</span></span> <span data-ttu-id="c80fc-102">如果輸入字元無法轉換成輸出位元組序列，後援會擲回例外狀況 。</span><span class="sxs-lookup"><span data-stu-id="c80fc-102">The fallback throws an exception if an input character cannot be converted to an output byte sequence.</span></span> <span data-ttu-id="c80fc-103">這個類別無法被繼承。</span><span class="sxs-lookup"><span data-stu-id="c80fc-103">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c80fc-104">編碼方式編碼的序列可以傳輸到實體媒體，例如磁碟，或透過通訊連結的位元組序列至對應的 Unicode 字元。</span><span class="sxs-lookup"><span data-stu-id="c80fc-104">An encoding maps a Unicode character to an encoded sequence of bytes, which can subsequently be transferred to a physical medium, such as a disk, or over a communications link.</span></span> <span data-ttu-id="c80fc-105">字元可以對應以各種方式，以及特定的編碼方式，由衍生自類型<xref:System.Text.Encoding>類別。</span><span class="sxs-lookup"><span data-stu-id="c80fc-105">Characters can be mapped in various ways, and a particular encoding is represented by a type derived from the <xref:System.Text.Encoding> class.</span></span> <span data-ttu-id="c80fc-106">具體來說，編碼型別的`GetBytes`方法會將編碼成位元組序列的字元和`GetChars`方法解碼為字元的位元組序列。</span><span class="sxs-lookup"><span data-stu-id="c80fc-106">Specifically, the encoding type's `GetBytes` method encodes a character to a byte sequence, and the `GetChars` method decodes a byte sequence to a character.</span></span>  
  
 <span data-ttu-id="c80fc-107">如果無法在該編碼所代表的輸入的字元，編碼作業可能會失敗。</span><span class="sxs-lookup"><span data-stu-id="c80fc-107">An encoding operation can fail if the input character cannot be represented by the encoding.</span></span> <span data-ttu-id="c80fc-108">比方說，<xref:System.Text.ASCIIEncoding>物件無法編碼的字元，會產生超出範圍 u+0000 到 U + 007F Unicode 字碼指標值。</span><span class="sxs-lookup"><span data-stu-id="c80fc-108">For example, a <xref:System.Text.ASCIIEncoding> object cannot encode a character that yields a Unicode code point value that is outside the range U+0000 to U+007F.</span></span>  
  
 <span data-ttu-id="c80fc-109">無法在其中執行的編碼或解碼的轉換的情況下，在.NET Framework 會提供稱為後援的失敗處理機制。</span><span class="sxs-lookup"><span data-stu-id="c80fc-109">In cases where an encoding or decoding conversion cannot be performed, the .NET Framework provides a failure-handling mechanism called a fallback.</span></span> <span data-ttu-id="c80fc-110">應用程式可以使用預先定義的.NET Framework 編碼器後援，或者它可以建立自訂編碼器後援衍生自<xref:System.Text.EncoderFallback>和<xref:System.Text.EncoderFallbackBuffer>類別。</span><span class="sxs-lookup"><span data-stu-id="c80fc-110">Your application can use the predefined .NET Framework encoder fallback, or it can create a custom encoder fallback derived from the <xref:System.Text.EncoderFallback> and <xref:System.Text.EncoderFallbackBuffer> classes.</span></span>  
  
 <span data-ttu-id="c80fc-111">.NET Framework 會提供兩個預先定義的類別可實作不同的後援策略，來處理編碼轉換失敗。</span><span class="sxs-lookup"><span data-stu-id="c80fc-111">The .NET Framework provides two predefined classes that implement different fallback strategies for handling encoding conversion failures.</span></span> <span data-ttu-id="c80fc-112"><xref:System.Text.EncoderReplacementFallback>類別會提供任何輸入無法轉換的字元字串。</span><span class="sxs-lookup"><span data-stu-id="c80fc-112">The <xref:System.Text.EncoderReplacementFallback> class substitutes a string provided for any input character that cannot be converted.</span></span> <span data-ttu-id="c80fc-113">替代字串編碼，來取代無效的字元，並接著將編碼作業會繼續將轉換輸入的其餘部分。</span><span class="sxs-lookup"><span data-stu-id="c80fc-113">The substitute string is encoded in place of the invalid character, and then the encoding operation continues converting the remainder of the input.</span></span> <span data-ttu-id="c80fc-114">相反地，<xref:System.Text.EncoderExceptionFallback>類別會擲回<xref:System.Text.EncoderFallbackException>時遇到無效的字元。</span><span class="sxs-lookup"><span data-stu-id="c80fc-114">In contrast, the <xref:System.Text.EncoderExceptionFallback> class throws a <xref:System.Text.EncoderFallbackException> when an invalid character is encountered.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c80fc-115">下列程式碼範例示範<xref:System.Text.EncoderExceptionFallback>和<xref:System.Text.EncoderFallbackException>類別。</span><span class="sxs-lookup"><span data-stu-id="c80fc-115">The following code example demonstrates the <xref:System.Text.EncoderExceptionFallback> and <xref:System.Text.EncoderFallbackException> classes.</span></span>  
  
 [!code-cpp[sys.txt.fallbackEncExc#1](~/samples/snippets/cpp/VS_Snippets_CLR/sys.txt.fallbackEncExc/cpp/fallEncExc.cpp#1)]
 [!code-csharp[sys.txt.fallbackEncExc#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.txt.fallbackEncExc/cs/fallEncExc.cs#1)]
 [!code-vb[sys.txt.fallbackEncExc#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.txt.fallbackEncExc/vb/fallEncExc.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/standard/base-types/character-encoding.md"><span data-ttu-id="c80fc-116">了解編碼</span><span class="sxs-lookup"><span data-stu-id="c80fc-116">Understanding Encodings</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncoderExceptionFallback ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderExceptionFallback.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncoderExceptionFallback();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c80fc-117">初始化 <see cref="T:System.Text.EncoderExceptionFallback" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="c80fc-117">Initializes a new instance of the <see cref="T:System.Text.EncoderExceptionFallback" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFallbackBuffer">
      <MemberSignature Language="C#" Value="public override System.Text.EncoderFallbackBuffer CreateFallbackBuffer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Text.EncoderFallbackBuffer CreateFallbackBuffer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderExceptionFallback.CreateFallbackBuffer" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateFallbackBuffer () As EncoderFallbackBuffer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Text::EncoderFallbackBuffer ^ CreateFallbackBuffer();" />
      <MemberSignature Language="F#" Value="override this.CreateFallbackBuffer : unit -&gt; System.Text.EncoderFallbackBuffer" Usage="encoderExceptionFallback.CreateFallbackBuffer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.EncoderFallbackBuffer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c80fc-118">傳回編碼器後援緩衝區，它會在無法將字元序列轉換成位元組序列時擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="c80fc-118">Returns an encoder fallback buffer that throws an exception if it cannot convert a character sequence to a byte sequence.</span></span></summary>
        <returns><span data-ttu-id="c80fc-119">在無法將字元序列編碼時擲回例外狀況的編碼器後援緩衝區。</span><span class="sxs-lookup"><span data-stu-id="c80fc-119">An encoder fallback buffer that throws an exception when it cannot encode a character sequence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c80fc-120">編碼器後援緩衝區負責接收及處理編碼器無法轉換成位元組序列的字元。</span><span class="sxs-lookup"><span data-stu-id="c80fc-120">An encoder fallback buffer is responsible for receiving and handling characters that an encoder cannot convert to a byte sequence.</span></span> <span data-ttu-id="c80fc-121">這個方法傳回的執行個體<xref:System.Text.EncoderExceptionFallbackBuffer>類別，這是子類別的<xref:System.Text.EncoderFallbackBuffer>類別。</span><span class="sxs-lookup"><span data-stu-id="c80fc-121">This method returns an instance of the <xref:System.Text.EncoderExceptionFallbackBuffer> class, which is a subclass of  the <xref:System.Text.EncoderFallbackBuffer> class.</span></span> <span data-ttu-id="c80fc-122"><xref:System.Text.EncoderExceptionFallbackBuffer>物件會擲回<xref:System.Text.EncoderFallbackException>例外狀況，每當字元傳遞至其<xref:System.Text.EncoderExceptionFallbackBuffer.Fallback%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="c80fc-122">An <xref:System.Text.EncoderExceptionFallbackBuffer> object throws an <xref:System.Text.EncoderFallbackException> exception whenever characters are passed to its <xref:System.Text.EncoderExceptionFallbackBuffer.Fallback%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderExceptionFallback.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="encoderExceptionFallback.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c80fc-123">衍生自 <see cref="T:System.Text.EncoderExceptionFallback" /> 類別的物件。</span><span class="sxs-lookup"><span data-stu-id="c80fc-123">An object that derives from the <see cref="T:System.Text.EncoderExceptionFallback" /> class.</span></span></param>
        <summary><span data-ttu-id="c80fc-124">指示目前的 <see cref="T:System.Text.EncoderExceptionFallback" /> 物件和指定的物件是否相等。</span><span class="sxs-lookup"><span data-stu-id="c80fc-124">Indicates whether the current <see cref="T:System.Text.EncoderExceptionFallback" /> object and a specified object are equal.</span></span></summary>
        <returns><span data-ttu-id="c80fc-125">如果 <paramref name="value" /> 不是 <see langword="true" /> (Visual Basic .NET 中的 <see langword="null" />)，且為 <see cref="T:System.Text.EncoderExceptionFallback" /> 物件，則為 <see langword="Nothing" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c80fc-125"><see langword="true" /> if <paramref name="value" /> is not <see langword="null" /> (<see langword="Nothing" /> in Visual Basic .NET) and is a <see cref="T:System.Text.EncoderExceptionFallback" /> object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderExceptionFallback.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="encoderExceptionFallback.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c80fc-126">擷取這個執行個體的雜湊碼。</span><span class="sxs-lookup"><span data-stu-id="c80fc-126">Retrieves the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="c80fc-127">傳回值永遠都是相同的任意值，且沒有特殊的意義。</span><span class="sxs-lookup"><span data-stu-id="c80fc-127">The return value is always the same arbitrary value, and has no special significance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c80fc-128">因為<xref:System.Text.EncoderExceptionFallback.GetHashCode%2A>方法一律會傳回相同的值，應用程式不應該使用此值來區別的一個執行個體<xref:System.Text.EncoderExceptionFallback>從另一個類別。</span><span class="sxs-lookup"><span data-stu-id="c80fc-128">Because the <xref:System.Text.EncoderExceptionFallback.GetHashCode%2A> method always returns the same value, the application should not use this value to distinguish one instance of the <xref:System.Text.EncoderExceptionFallback> class from another.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxCharCount">
      <MemberSignature Language="C#" Value="public override int MaxCharCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxCharCount" />
      <MemberSignature Language="DocId" Value="P:System.Text.EncoderExceptionFallback.MaxCharCount" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MaxCharCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MaxCharCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxCharCount : int" Usage="System.Text.EncoderExceptionFallback.MaxCharCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c80fc-129">取得這個執行個體可以傳回的最大字元數。</span><span class="sxs-lookup"><span data-stu-id="c80fc-129">Gets the maximum number of characters this instance can return.</span></span></summary>
        <value><span data-ttu-id="c80fc-130">傳回值永遠是零。</span><span class="sxs-lookup"><span data-stu-id="c80fc-130">The return value is always zero.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>