<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="StringBuilder.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-81070f4" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1e344e59-9d8e-481b-978a-09f2e01be86cbe19bdb3283edd18f1fefcc8e73a6e60f1c1de24.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">be19bdb3283edd18f1fefcc8e73a6e60f1c1de24</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f9e3295b6cc303a611a73a84c4b27f9da792ad0d</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/26/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Text.StringBuilder">
          <source>Represents a mutable string of characters.</source>
          <target state="translated">表示可變動的字元字串。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Text.StringBuilder">
          <source>This class cannot be inherited.</source>
          <target state="translated">這個類別無法被繼承。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>This class represents a string-like object whose value is a mutable sequence of characters.</source>
          <target state="translated">此類別代表其值是可變動的字元序列的類似字串的物件。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>In this section:</source>
          <target state="translated">本節內容：</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source><bpt id="p1">[</bpt>The String and StringBuilder types<ept id="p1">](#StringAndSB)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>String 和 StringBuilder 類型<ept id="p1">](#StringAndSB)</ept></target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source><bpt id="p1">[</bpt>How StringBuilder works<ept id="p1">](#HowWorks)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>StringBuilder 的運作方式<ept id="p1">](#HowWorks)</ept></target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source><bpt id="p1">[</bpt>Memory allocation<ept id="p1">](#Memory)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>記憶體配置<ept id="p1">](#Memory)</ept></target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source><bpt id="p1">[</bpt>Instantiating a StringBuilder object<ept id="p1">](#Instantiating)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>具現化 StringBuilder 物件<ept id="p1">](#Instantiating)</ept></target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source><bpt id="p1">[</bpt>Calling StringBuilder methods<ept id="p1">](#Calling)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>呼叫 StringBuilder 方法<ept id="p1">](#Calling)</ept></target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source><bpt id="p1">[</bpt>Performing StringBuilder operations<ept id="p1">](#Operations)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>執行 StringBuilder 作業<ept id="p1">](#Operations)</ept></target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source><bpt id="p1">[</bpt>Iterating StringBuilder characters<ept id="p1">](#Iterating)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>逐一查看 StringBuilder 字元<ept id="p1">](#Iterating)</ept></target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source><bpt id="p1">[</bpt>Adding text to a StringBuilder object<ept id="p1">](#Adding)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>將文字加入 StringBuilder 物件<ept id="p1">](#Adding)</ept></target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source><bpt id="p1">[</bpt>Deleting text from a StringBuilder object<ept id="p1">](#Deleting)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>刪除文字中的 StringBuilder 物件<ept id="p1">](#Deleting)</ept></target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source><bpt id="p1">[</bpt>Modifying the text in a StringBuilder object<ept id="p1">](#Modifying)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>修改 StringBuilder 物件中的文字<ept id="p1">](#Modifying)</ept></target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source><bpt id="p1">[</bpt>Searching the text in a StringBuilder object<ept id="p1">](#Searching)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>搜尋文字中的 StringBuilder 物件<ept id="p1">](#Searching)</ept></target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source><bpt id="p1">[</bpt>Converting the StringBuilder object to a string<ept id="p1">](#Converting)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>將 StringBuilder 物件轉換為字串<ept id="p1">](#Converting)</ept></target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The String and StringBuilder types</source>
          <target state="translated">String 和 StringBuilder 類型</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Although <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> and <ph id="ph2">&lt;xref:System.String&gt;</ph> both represent sequences of characters, they are implemented differently.</source>
          <target state="translated">雖然<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>和<ph id="ph2">&lt;xref:System.String&gt;</ph>兩者都代表序列的字元，它們的實作方式不同。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source><ph id="ph1">&lt;xref:System.String&gt;</ph> is an immutable type.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.String&gt;</ph> 是不可變的類型。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>That is, each operation that appears to modify a <ph id="ph1">&lt;xref:System.String&gt;</ph> object actually creates a new string.</source>
          <target state="translated">也就是說，每個作業修改出現<ph id="ph1">&lt;xref:System.String&gt;</ph>物件實際上會建立新的字串。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>For example, the call to the <ph id="ph1">&lt;xref:System.String.Concat%2A?displayProperty=nameWithType&gt;</ph> method in the following C# example appears to change the value of a string variable named <ph id="ph2">`value`</ph>.</source>
          <target state="translated">例如，若要呼叫<ph id="ph1">&lt;xref:System.String.Concat%2A?displayProperty=nameWithType&gt;</ph>方法，在下列 C# 範例中會出現名為的字串變數的值變更<ph id="ph2">`value`</ph>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>In fact, the <ph id="ph1">&lt;xref:System.String.Concat%2A&gt;</ph> method returns a <ph id="ph2">`value`</ph> object that has a different value and address from the <ph id="ph3">`value`</ph> object that was passed to the method.</source>
          <target state="translated">事實上，<ph id="ph1">&lt;xref:System.String.Concat%2A&gt;</ph>方法會傳回<ph id="ph2">`value`</ph>物件具有不同的值和從位址<ph id="ph3">`value`</ph>已傳遞給方法的物件。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Note that the example must be compiled using the <ph id="ph1">`/unsafe`</ph> compiler option.</source>
          <target state="translated">請注意，必須使用編譯範例<ph id="ph1">`/unsafe`</ph>編譯器選項。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>For routines that perform extensive string manipulation (such as apps that modify a string numerous times in a loop), modifying a string repeatedly can exact a significant performance penalty.</source>
          <target state="translated">適用於執行廣泛的字串操作 （例如修改字串多次在迴圈中的應用程式） 的常式，重複修改字串可以精確顯著的效能負面影響。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The alternative is to use <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>, which is a mutable string class.</source>
          <target state="translated">若要使用的替代方案是<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>，這是可變動字串類別。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Mutability means that once an instance of the class has been created, it can be modified by appending, removing, replacing, or inserting characters.</source>
          <target state="translated">可變動性表示，一旦建立類別的執行個體之後，您可以進行修改的新增、 移除、 取代或插入字元。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>A <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object maintains a buffer to accommodate expansions to the string.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>物件會維護一個緩衝區來容納擴充到字串。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>New data is appended to the buffer if room is available; otherwise, a new, larger buffer is allocated, data from the original buffer is copied to the new buffer, and the new data is then appended to the new buffer.</source>
          <target state="translated">將新資料附加至緩衝區的空間是否可用。否則，新、 較大的緩衝區配置、 從原始緩衝區的資料複製到新的緩衝區和新的資料則會附加至新的緩衝區。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Although the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> class generally offers better performance than the <ph id="ph2">&lt;xref:System.String&gt;</ph> class, you should not automatically replace <ph id="ph3">&lt;xref:System.String&gt;</ph> with <ph id="ph4">&lt;xref:System.Text.StringBuilder&gt;</ph> whenever you want to manipulate strings.</source>
          <target state="translated">雖然<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>類別通常會提供更佳的效能比<ph id="ph2">&lt;xref:System.String&gt;</ph>類別，您應該不會自動取代<ph id="ph3">&lt;xref:System.String&gt;</ph>與<ph id="ph4">&lt;xref:System.Text.StringBuilder&gt;</ph>每當您想要操作字串。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Performance depends on the size of the string, the amount of memory to be allocated for the new string, the system on which your app is executing, and the type of operation.</source>
          <target state="translated">效能取決於字串時，新的字串、 在其正在執行您的應用程式，系統和作業的類型配置的記憶體數量的大小。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>You should be prepared to test your app to determine whether <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> actually offers a significant performance improvement.</source>
          <target state="translated">您應該備妥要測試您的應用程式，以判斷是否<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>實際上提供了顯著的效能改進。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Consider using the <ph id="ph1">&lt;xref:System.String&gt;</ph> class under these conditions:</source>
          <target state="translated">請考慮使用<ph id="ph1">&lt;xref:System.String&gt;</ph>類別在這些情況下：</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>When the number of changes that your app will make to a string is small.</source>
          <target state="translated">當您的應用程式將會對字串的變更數目很小。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>In these cases, <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> might offer negligible or no performance improvement over <ph id="ph2">&lt;xref:System.String&gt;</ph>.</source>
          <target state="translated">在這些情況下，<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>可能不明顯的優惠或任何效能改進<ph id="ph2">&lt;xref:System.String&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>When you are performing a fixed number of concatenation operations, particularly with string literals.</source>
          <target state="translated">當您執行固定的數目的串連作業，特別是使用字串常值。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>In this case, the compiler might combine the concatenation operations into a single operation.</source>
          <target state="translated">在此情況下，編譯器可能會串連作業結合成單一作業。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>When you have to perform extensive search operations while you are building your string.</source>
          <target state="translated">當您有執行廣泛的搜尋作業，而您要建置您的字串。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> class lacks search methods such as <ph id="ph2">`IndexOf`</ph> or <ph id="ph3">`StartsWith`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>類別缺少這類搜尋方法<ph id="ph2">`IndexOf`</ph>或<ph id="ph3">`StartsWith`</ph>。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>You'll have to convert the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object to a <ph id="ph2">&lt;xref:System.String&gt;</ph> for these operations, and this can negate the performance benefit from using <ph id="ph3">&lt;xref:System.Text.StringBuilder&gt;</ph>.</source>
          <target state="translated">您必須轉換<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>物件<ph id="ph2">&lt;xref:System.String&gt;</ph>針對這些作業，而這可以變換正負號的效能優勢，從使用<ph id="ph3">&lt;xref:System.Text.StringBuilder&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>For more information, see the <bpt id="p1">[</bpt>Searching the text in a StringBuilder object<ept id="p1">](#Searching)</ept> section.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>StringBuilder 物件中搜尋文字<ept id="p1">](#Searching)</ept>&gt; 一節。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Consider using the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> class under these conditions:</source>
          <target state="translated">請考慮使用<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>類別在這些情況下：</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>When you expect your app to make an unknown number of changes to a string at design time (for example, when you are using a loop to concatenate a random number of strings that contain user input).</source>
          <target state="translated">當您預期您的應用程式對字串進行的變更數目不明，在設計階段 （例如，當您使用迴圈來串連字串，包含使用者輸入的隨機數字）。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>When you expect your app to make a significant number of changes to a string.</source>
          <target state="translated">當您預期您的應用程式對字串進行大量變更。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>How StringBuilder works</source>
          <target state="translated">StringBuilder 的運作方式</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Length%2A?displayProperty=nameWithType&gt;</ph> property indicates the number of characters the <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> object currently contains.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Length%2A?displayProperty=nameWithType&gt;</ph>屬性表示的字元數<ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph>目前包含的物件。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>If you add characters to the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object, its length increases until it equals the size of the <ph id="ph2">&lt;xref:System.Text.StringBuilder.Capacity%2A?displayProperty=nameWithType&gt;</ph> property, which defines the number of characters that the object can contain.</source>
          <target state="translated">如果您將加入字元<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>物件，其長度會增加，直到它等於大小<ph id="ph2">&lt;xref:System.Text.StringBuilder.Capacity%2A?displayProperty=nameWithType&gt;</ph>屬性，定義的物件可以包含的字元數。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>If the number of added characters causes the length of the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object to exceed its current capacity, new memory is allocated, the value of the <ph id="ph2">&lt;xref:System.Text.StringBuilder.Capacity%2A&gt;</ph> property is doubled, new characters are added to the <ph id="ph3">&lt;xref:System.Text.StringBuilder&gt;</ph> object, and its <ph id="ph4">&lt;xref:System.Text.StringBuilder.Length%2A&gt;</ph> property is adjusted.</source>
          <target state="translated">如果加入的字元數的長度<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>超出其目前的容量，新的記憶體物件配置的值<ph id="ph2">&lt;xref:System.Text.StringBuilder.Capacity%2A&gt;</ph>屬性就會加倍，新的字元會新增到<ph id="ph3">&lt;xref:System.Text.StringBuilder&gt;</ph>物件和其<ph id="ph4">&lt;xref:System.Text.StringBuilder.Length%2A&gt;</ph>調整屬性。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Additional memory for the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object is allocated dynamically until it reaches the value defined by the <ph id="ph2">&lt;xref:System.Text.StringBuilder.MaxCapacity%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">額外記憶體以進行<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>直到達到所定義的值以動態方式配置物件<ph id="ph2">&lt;xref:System.Text.StringBuilder.MaxCapacity%2A?displayProperty=nameWithType&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>When the maximum capacity is reached, no further memory can be allocated for the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object, and trying to add characters or expand it beyond its maximum capacity throws either an <ph id="ph2">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph> or an <ph id="ph3">&lt;xref:System.OutOfMemoryException&gt;</ph> exception.</source>
          <target state="translated">當達到最大容量時，沒有進一步的記憶體可獲配置的<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>物件，並嘗試新增的字元或超過最大容量會擲回其中<ph id="ph2">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph>或<ph id="ph3">&lt;xref:System.OutOfMemoryException&gt;</ph>例外狀況。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The following example illustrates how a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object allocates new memory and increases its capacity dynamically as the string assigned to the object expands.</source>
          <target state="translated">下列範例說明如何<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>物件配置新的記憶體，並指派給物件的字串展開時，動態地增加其容量。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The code creates a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object by calling its default (parameterless) constructor.</source>
          <target state="translated">程式碼會建立<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>藉由呼叫其預設 （無參數） 建構函式的物件。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The default capacity of this object is 16 characters, and its maximum capacity is more than 2 billion characters.</source>
          <target state="translated">此物件的預設容量是 16 個字元，而且最大容量為超過 2 億個字元。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Appending the string "This is a sentence."</source>
          <target state="translated">附加字串"This is 句子"。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>results in a new memory allocation because the string length (19 characters) exceeds the default capacity of the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object.</source>
          <target state="translated">產生新的記憶體配置，因為字串長度 （19 個字元） 超過的預設容量<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The capacity of the object doubles to 32 characters, the new string is added, and the length of the object now equals 19 characters.</source>
          <target state="translated">物件的容量加倍為 32 個字元、 加入新的字串，而且物件的長度現在等於 19 個字元。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The code then appends the string "This is an additional sentence."</source>
          <target state="translated">程式碼則會附加字串"This is 額外的句子"。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>to the value of the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object 11 times.</source>
          <target state="translated">值<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>物件 11 次。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Whenever the append operation causes the length of the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object to exceed its capacity, its existing capacity is doubled and the <ph id="ph2">&lt;xref:System.Text.StringBuilder.Append%2A&gt;</ph> operation succeeds.</source>
          <target state="translated">每當附加作業會導致長度<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>物件超過其容量，其現有的容量會增加一倍和<ph id="ph2">&lt;xref:System.Text.StringBuilder.Append%2A&gt;</ph>作業成功。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Memory allocation</source>
          <target state="translated">記憶體配置</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The default capacity of a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object is 16 characters, and its default maximum capacity is <ph id="ph2">&lt;xref:System.Int32.MaxValue?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">預設容量<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>物件是 16 個字元，而其預設的最大容量<ph id="ph2">&lt;xref:System.Int32.MaxValue?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>These default values are used if you call the <ph id="ph1">&lt;xref:System.Text.StringBuilder.%23ctor&gt;</ph> and <ph id="ph2">&lt;xref:System.Text.StringBuilder.%23ctor%28System.String%29&gt;</ph> constructors.</source>
          <target state="translated">如果您呼叫使用這些預設值<ph id="ph1">&lt;xref:System.Text.StringBuilder.%23ctor&gt;</ph>和<ph id="ph2">&lt;xref:System.Text.StringBuilder.%23ctor%28System.String%29&gt;</ph>建構函式。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>You can explicitly define the initial capacity of a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object in the following ways:</source>
          <target state="translated">您可以明確定義的初始容量<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>物件如下：</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>By calling any of the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> constructors that includes a <ph id="ph2">`capacity`</ph> parameter when you create the object.</source>
          <target state="translated">藉由呼叫的任何<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>建構函式，其中包含<ph id="ph2">`capacity`</ph>參數，當您建立的物件。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>By explicitly assigning a new value to the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Capacity%2A?displayProperty=nameWithType&gt;</ph> property to expand an existing <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> object.</source>
          <target state="translated">藉由明確地指派新值以<ph id="ph1">&lt;xref:System.Text.StringBuilder.Capacity%2A?displayProperty=nameWithType&gt;</ph>要展開的現有屬性<ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Note that the property throws an exception if the new capacity is less than the existing capacity or greater than the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object's maximum capacity.</source>
          <target state="translated">請注意，是否新的容量少於現存的容量或大於屬性擲回例外狀況<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>物件的最大容量。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>By calling the <ph id="ph1">&lt;xref:System.Text.StringBuilder.EnsureCapacity%2A?displayProperty=nameWithType&gt;</ph> method with the new capacity.</source>
          <target state="translated">藉由呼叫<ph id="ph1">&lt;xref:System.Text.StringBuilder.EnsureCapacity%2A?displayProperty=nameWithType&gt;</ph>方法與新的容量。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The new capacity must not be greater than the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object's maximum capacity.</source>
          <target state="translated">新的容量不得大於<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>物件的最大容量。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>However, unlike an assignment to the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Capacity%2A&gt;</ph> property, <ph id="ph2">&lt;xref:System.Text.StringBuilder.EnsureCapacity%2A&gt;</ph> does not throw an exception if the desired new capacity is less than the existing capacity; in this case, the method call has no effect.</source>
          <target state="translated">不過，與指派至不同<ph id="ph1">&lt;xref:System.Text.StringBuilder.Capacity%2A&gt;</ph>屬性，<ph id="ph2">&lt;xref:System.Text.StringBuilder.EnsureCapacity%2A&gt;</ph>如果，不會擲回例外狀況所需的新容量小於現有容量; 在此情況下，方法呼叫沒有任何作用。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>If the length of the string assigned to the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object in the constructor call exceeds either the default capacity or the specified capacity, the <ph id="ph2">&lt;xref:System.Text.StringBuilder.Capacity%2A&gt;</ph> property is set to the length of the string specified with the <ph id="ph3">`value`</ph> parameter.</source>
          <target state="translated">如果字串的長度會指派給<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>物件建構函式呼叫中的超過指定的容量，或是預設容量<ph id="ph2">&lt;xref:System.Text.StringBuilder.Capacity%2A&gt;</ph>屬性設定為與指定之字串的長度<ph id="ph3">`value`</ph>參數。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>You can explicitly define the maximum capacity of a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object by calling the <ph id="ph2">&lt;xref:System.Text.StringBuilder.%23ctor%28System.Int32%2CSystem.Int32%29&gt;</ph> constructor.</source>
          <target state="translated">您可以明確定義的最大容量<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>藉由呼叫物件<ph id="ph2">&lt;xref:System.Text.StringBuilder.%23ctor%28System.Int32%2CSystem.Int32%29&gt;</ph>建構函式。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>You can't change the maximum capacity by assigning a new value to the <ph id="ph1">&lt;xref:System.Text.StringBuilder.MaxCapacity%2A&gt;</ph> property, because it is read-only.</source>
          <target state="translated">您無法藉由指派新值以變更的最大容量<ph id="ph1">&lt;xref:System.Text.StringBuilder.MaxCapacity%2A&gt;</ph>屬性，因為它是唯讀的。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>As the previous section shows, whenever the existing capacity is inadequate, additional memory is allocated and the capacity of a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object doubles up to the value defined by the <ph id="ph2">&lt;xref:System.Text.StringBuilder.MaxCapacity%2A&gt;</ph> property.</source>
          <target state="translated">如上一節所顯示，只要現有的容量不足、 其他記憶體配置和容量<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>物件所定義之值以前的雙精度浮點數<ph id="ph2">&lt;xref:System.Text.StringBuilder.MaxCapacity%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>In general, the default capacity and maximum capacity are adequate for most apps.</source>
          <target state="translated">一般情況下的預設容量和最大容量是適合大部分的應用程式。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>You might consider setting these values under the following conditions:</source>
          <target state="translated">您可能考慮設定下列情況下的，這些值：</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>If the eventual size of the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object is likely to grow exceedingly large, typically in excess of several megabytes.</source>
          <target state="translated">如果最終大小<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>物件很可能會變得非常大，通常會超過幾 mb 為單位。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>In this case, there may be some performance benefit from setting the initial <ph id="ph1">&lt;xref:System.Text.StringBuilder.Capacity%2A&gt;</ph> property to a significantly high value to eliminate the need for too many memory reallocations.</source>
          <target state="translated">在此情況下，可能有一些效能優勢，設定初始<ph id="ph1">&lt;xref:System.Text.StringBuilder.Capacity%2A&gt;</ph>大幅高的值，如此便不需要太多的記憶體配置的屬性。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>If your app is running on a system with limited memory.</source>
          <target state="translated">如果記憶體有限的系統上執行您的應用程式。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>In this case, you may want to consider setting the <ph id="ph1">&lt;xref:System.Text.StringBuilder.MaxCapacity%2A&gt;</ph> property to less than <ph id="ph2">&lt;xref:System.Int32.MaxValue?displayProperty=nameWithType&gt;</ph> if your app is handling large strings that may cause it to execute in a memory-constrained environment.</source>
          <target state="translated">在此情況下，您可能想要考慮設定<ph id="ph1">&lt;xref:System.Text.StringBuilder.MaxCapacity%2A&gt;</ph>屬性小於<ph id="ph2">&lt;xref:System.Int32.MaxValue?displayProperty=nameWithType&gt;</ph>如果您的應用程式正在處理可能會造成記憶體限制的環境中執行的大型字串。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Instantiating a StringBuilder object</source>
          <target state="translated">具現化 StringBuilder 物件</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>You instantiate a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object by calling one of its six overloaded class constructors, which are listed in the following table.</source>
          <target state="translated">您具現化<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>藉由呼叫其六個多載的類別建構函式，如下表所列的其中一個物件。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Three of the constructors instantiate a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object whose value is an empty string, but set its <ph id="ph2">&lt;xref:System.Text.StringBuilder.Capacity%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Text.StringBuilder.MaxCapacity%2A&gt;</ph> values differently.</source>
          <target state="translated">三個建構函式具現化<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>物件，其值為空字串，但設定其<ph id="ph2">&lt;xref:System.Text.StringBuilder.Capacity%2A&gt;</ph>和<ph id="ph3">&lt;xref:System.Text.StringBuilder.MaxCapacity%2A&gt;</ph>不同值。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The remaining three constructors define a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object that has a specific string value and capacity.</source>
          <target state="translated">其餘的三個建構函式定義<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>具有特定的字串值和容量的物件。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Two of the three constructors use the default maximum capacity of <ph id="ph1">&lt;xref:System.Int32.MaxValue?displayProperty=nameWithType&gt;</ph>, whereas the third allows you to set the maximum capacity.</source>
          <target state="translated">兩個的三個建構函式使用的預設最大容量<ph id="ph1">&lt;xref:System.Int32.MaxValue?displayProperty=nameWithType&gt;</ph>，而第三個可讓您設定的最大容量。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Constructor</source>
          <target state="translated">建構函式</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>String value</source>
          <target state="translated">字串值</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Capacity</source>
          <target state="translated">容量</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Maximum capacity</source>
          <target state="translated">最大容量</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>16</source>
          <target state="translated">16</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Defined by the <ph id="ph1">`capacity`</ph> parameter</source>
          <target state="translated">它是由定義<ph id="ph1">`capacity`</ph>參數</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Defined by the <ph id="ph1">`capacity`</ph> parameter</source>
          <target state="translated">它是由定義<ph id="ph1">`capacity`</ph>參數</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Defined by the <ph id="ph1">`maxCapacity`</ph> parameter</source>
          <target state="translated">它是由定義<ph id="ph1">`maxCapacity`</ph>參數</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Defined by the <ph id="ph1">`value`</ph> parameter</source>
          <target state="translated">它是由定義<ph id="ph1">`value`</ph>參數</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>16 or <ph id="ph1">`value`</ph>.</source>
          <target state="translated">16 或<ph id="ph1">`value`</ph>。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source><ph id="ph1">&lt;xref:System.String.Length%2A&gt;</ph>, whichever is greater</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.String.Length%2A&gt;</ph>較長者為準</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Defined by the <ph id="ph1">`value`</ph> parameter</source>
          <target state="translated">它是由定義<ph id="ph1">`value`</ph>參數</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Defined by the <ph id="ph1">`capacity`</ph> parameter or <ph id="ph2">`value`</ph>.</source>
          <target state="translated">它是由定義<ph id="ph1">`capacity`</ph>參數或<ph id="ph2">`value`</ph>。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source><ph id="ph1">&lt;xref:System.String.Length%2A&gt;</ph>, whichever is greater.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.String.Length%2A&gt;</ph>較長者為準。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Defined by <ph id="ph1">`value`</ph>.</source>
          <target state="translated">它是由定義<ph id="ph1">`value`</ph>。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source><ph id="ph1">&lt;xref:System.String.Substring%2A&gt;</ph>(<ph id="ph2">`startIndex`</ph>, <ph id="ph3">`length`</ph>)</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.String.Substring%2A&gt;</ph>(<ph id="ph2">`startIndex`</ph>, <ph id="ph3">`length`</ph>)</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Defined by the <ph id="ph1">`capacity`</ph> parameter or <ph id="ph2">`value`</ph>.</source>
          <target state="translated">它是由定義<ph id="ph1">`capacity`</ph>參數或<ph id="ph2">`value`</ph>。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source><ph id="ph1">&lt;xref:System.String.Length%2A&gt;</ph>, whichever is greater.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.String.Length%2A&gt;</ph>較長者為準。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Defined by the <ph id="ph1">`maxCapacity`</ph> parameter</source>
          <target state="translated">它是由定義<ph id="ph1">`maxCapacity`</ph>參數</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The following example uses three of these constructor overloads to instantiate <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> objects.</source>
          <target state="translated">下列範例會使用三種這些建構函式多載來具現化<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Calling StringBuilder methods</source>
          <target state="translated">呼叫 StringBuilder 方法</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Most of the methods that modify the string in a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> instance return a reference to that same instance.</source>
          <target state="translated">修改中的字串之方法的大部分<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>執行個體傳回該相同的執行個體的參考。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>This enables you to call <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> methods in two ways:</source>
          <target state="translated">這可讓您呼叫<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>方法有兩種：</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>You can make individual method calls and ignore the return value, as the following example does.</source>
          <target state="translated">您可以呼叫個別的方法，並忽略傳回值，如下列範例會執行。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>You can make a series of method calls in a single statement.</source>
          <target state="translated">您可以在單一陳述式進行一系列的方法呼叫。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>This can be convenient if you want to write a single statement that chains successive operations.</source>
          <target state="translated">這可以是很方便，如果您想要撰寫鏈結連續作業的單一陳述式。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The following example consolidates three method calls from the previous example into a single line of code.</source>
          <target state="translated">下列範例會合併成單一行程式碼的前一個範例的三個方法呼叫。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Performing StringBuilder operations</source>
          <target state="translated">執行 StringBuilder 作業</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>You can use the methods of the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> class to iterate, add, delete, or modify characters in a <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> object.</source>
          <target state="translated">您可以使用的方法<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>類別來逐一查看、 新增、 刪除或修改中的字元<ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Iterating StringBuilder characters</source>
          <target state="translated">逐一查看 StringBuilder 字元</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>You can access the characters in a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object by using the <ph id="ph2">&lt;xref:System.Text.StringBuilder.Chars%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">您可以存取中的字元<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>物件使用<ph id="ph2">&lt;xref:System.Text.StringBuilder.Chars%2A?displayProperty=nameWithType&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>In C#, <ph id="ph1">&lt;xref:System.Text.StringBuilder.Chars%2A&gt;</ph> is an indexer; in Visual Basic, it is the default property of the <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> class.</source>
          <target state="translated">在 C# 中，<ph id="ph1">&lt;xref:System.Text.StringBuilder.Chars%2A&gt;</ph>是索引子; 它是在 Visual Basic 中的預設屬性<ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>This enables you to set or retrieve individual characters by using their index only, without explicitly referencing the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Chars%2A&gt;</ph> property.</source>
          <target state="translated">這可讓您設定或使用其索引，而不需要明確地參考來擷取個別字元<ph id="ph1">&lt;xref:System.Text.StringBuilder.Chars%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Characters in a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object begin at index 0 (zero) and continue to index <ph id="ph2">&lt;xref:System.Text.StringBuilder.Length%2A&gt;</ph> - 1.</source>
          <target state="translated">在字元<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>物件位於索引 0 （零） 開始，並繼續編製索引<ph id="ph2">&lt;xref:System.Text.StringBuilder.Length%2A&gt;</ph>-1。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The following example illustrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Chars%2A&gt;</ph> property.</source>
          <target state="translated">下列範例說明<ph id="ph1">&lt;xref:System.Text.StringBuilder.Chars%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>It appends ten random numbers to a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object, and then iterates each character.</source>
          <target state="translated">附加至 10 個隨機的數字<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>物件，並接著逐一查看每個字元。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>If the character's Unicode category is <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType&gt;</ph>, it decreases the number by 1 (or changes the number to 9 if its value is 0).</source>
          <target state="translated">如果是字元的 Unicode 分類<ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType&gt;</ph>，它會減 1 的數字 （或如果其值為 0 會變成 9 的數字）。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The example displays the contents of the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object both before and after the values of individual characters were changed.</source>
          <target state="translated">此範例會顯示的內容<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>物件兩者之前和之後個別字元的值已變更。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Adding text to a StringBuilder object</source>
          <target state="translated">將文字加入 StringBuilder 物件</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> class includes the following methods for expanding the contents of a <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> object:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>類別包含以下擴充內容的方法<ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph>物件：</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%2A&gt;</ph> method appends a string, a substring, a character array, a portion of a character array, a single character repeated multiple times, or the string representation of a primitive data type to a <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%2A&gt;</ph>方法會附加字串、 substring、 字元陣列、 部份字元陣列中，單一字元重複許多次，或字串表示的基本資料類型變更為<ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.AppendLine%2A&gt;</ph> method appends a line terminator or a string along with a line terminator to a <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.AppendLine%2A&gt;</ph>方法會將附加的行結束字元或行結束字元，寫入的字串沿著<ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph> method appends a  to a <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>方法會附加至<ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The string representations of objects included in the result string can reflect the formatting conventions of the current system culture or a specified culture.</source>
          <target state="translated">物件包含在結果字串的字串表示，可反映出目前的系統文化特性或指定的文化特性的格式設定慣例。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph> method inserts a string, a substring, multiple repetitions of a string, a character array, a portion of a character array, or the string representation of a primitive data type at a specified position in the <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph>方法插入的字串，子字串，將字串的多個重複項目中的指定位置處的字元陣列，部分字元陣列或基本資料的字串表示輸入<ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The position is defined by a zero-based index.</source>
          <target state="translated">以零為起始的索引所定義的位置。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendLine%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph> methods to expand the text of a <ph id="ph5">&lt;xref:System.Text.StringBuilder&gt;</ph> object.</source>
          <target state="translated">下列範例會使用<ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%2A&gt;</ph>， <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendLine%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>，和<ph id="ph4">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph>方法來展開文字<ph id="ph5">&lt;xref:System.Text.StringBuilder&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Deleting text from a StringBuilder object</source>
          <target state="translated">刪除文字中的 StringBuilder 物件</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> class includes methods that can reduce the size of the current <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>類別包括能夠減少目前大小的方法<ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph>執行個體。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Clear%2A&gt;</ph> method removes all characters and sets the <ph id="ph2">&lt;xref:System.Text.StringBuilder.Length%2A&gt;</ph> property to zero.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Clear%2A&gt;</ph>方法會移除所有字元，並設定<ph id="ph2">&lt;xref:System.Text.StringBuilder.Length%2A&gt;</ph>屬性為零。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Remove%2A&gt;</ph> method deletes a specified number of characters starting at a particular index position.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Remove%2A&gt;</ph>方法會刪除指定的特定的索引位置開始的字元數。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>In addition, you can remove characters from the end of a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object by setting its <ph id="ph2">&lt;xref:System.Text.StringBuilder.Length%2A&gt;</ph> property to a value that is less than the length of the current instance.</source>
          <target state="translated">此外，您可以移除字元結尾<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>物件藉由設定其<ph id="ph2">&lt;xref:System.Text.StringBuilder.Length%2A&gt;</ph>屬性設為小於目前的執行個體的長度的值。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The following example removes some of the text from a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object, displays its resulting capacity, maximum capacity, and length property values, and then calls the <ph id="ph2">&lt;xref:System.Text.StringBuilder.Clear%2A&gt;</ph> method to remove all the characters from the <ph id="ph3">&lt;xref:System.Text.StringBuilder&gt;</ph> object.</source>
          <target state="translated">下列範例會移除從文字的某些<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>物件，顯示其結果的容量、 最大的容量和長度屬性值，然後再撥打<ph id="ph2">&lt;xref:System.Text.StringBuilder.Clear%2A&gt;</ph>方法來移除所有的字元從<ph id="ph3">&lt;xref:System.Text.StringBuilder&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Modifying the text in a StringBuilder object</source>
          <target state="translated">修改 StringBuilder 物件中的文字</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Replace%2A?displayProperty=nameWithType&gt;</ph> method replaces all occurrences of a character or a string in the entire <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> object or in a particular character range.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Replace%2A?displayProperty=nameWithType&gt;</ph>方法會取代所有出現的字元或字串的整個<ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph>物件或在特定的字元範圍。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Replace%2A&gt;</ph> method to replace all exclamation points (!) with question marks (?) in the <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> object.</source>
          <target state="translated">下列範例會使用<ph id="ph1">&lt;xref:System.Text.StringBuilder.Replace%2A&gt;</ph>方法中，使用問號 （？） 取代所有驚嘆號 （！）<ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Searching the text in a StringBuilder object</source>
          <target state="translated">搜尋文字中的 StringBuilder 物件</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> class does not include methods similar to the <ph id="ph2">&lt;xref:System.String.Contains%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.String.IndexOf%2A?displayProperty=nameWithType&gt;</ph>, and <ph id="ph4">&lt;xref:System.String.StartsWith%2A?displayProperty=nameWithType&gt;</ph> methods provided by the <ph id="ph5">&lt;xref:System.String&gt;</ph> class, which allow you to search the object for a particular character or a substring.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>類別不包含方法類似於<ph id="ph2">&lt;xref:System.String.Contains%2A?displayProperty=nameWithType&gt;</ph>， <ph id="ph3">&lt;xref:System.String.IndexOf%2A?displayProperty=nameWithType&gt;</ph>，和<ph id="ph4">&lt;xref:System.String.StartsWith%2A?displayProperty=nameWithType&gt;</ph>所提供的方法<ph id="ph5">&lt;xref:System.String&gt;</ph>類別，可讓您搜尋特定字元或子字串的物件。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Determining the presence or starting character position of a substring requires that you search a <ph id="ph1">&lt;xref:System.String&gt;</ph> value by using either a string search method or a regular expression method.</source>
          <target state="translated">判斷是否存在，或開始之子字串的字元位置，都需要您搜尋<ph id="ph1">&lt;xref:System.String&gt;</ph>使用字串搜尋方法或規則運算式方法的值。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>There are four ways to implement such searches, as the following table shows.</source>
          <target state="translated">有四種方式來實作這類搜尋，如下表所示。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Technique</source>
          <target state="translated">技術</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Pros</source>
          <target state="translated">專業人員</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Cons</source>
          <target state="translated">缺點</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Search string values before adding them to the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object.</source>
          <target state="translated">搜尋字串值，然後再將它們加入至<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Useful for determining whether a substring exists.</source>
          <target state="translated">用於決定子字串是否存在。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Cannot be used when the index position of a substring is important.</source>
          <target state="translated">子字串的索引位置都很重要時，無法使用。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Call <ph id="ph1">&lt;xref:System.Text.StringBuilder.ToString%2A&gt;</ph> and search the returned <ph id="ph2">&lt;xref:System.String&gt;</ph> object.</source>
          <target state="translated">呼叫<ph id="ph1">&lt;xref:System.Text.StringBuilder.ToString%2A&gt;</ph>並搜尋傳回<ph id="ph2">&lt;xref:System.String&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Easy to use if you assign all the text to a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object, and then begin to modify it.</source>
          <target state="translated">不僅簡單易用，如果您指派到的所有文字<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>物件，然後再開始進行修改。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Cumbersome to repeatedly call <ph id="ph1">&lt;xref:System.Text.StringBuilder.ToString%2A&gt;</ph> if you must make modifications before all text is added to the <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> object.</source>
          <target state="translated">麻煩重複呼叫<ph id="ph1">&lt;xref:System.Text.StringBuilder.ToString%2A&gt;</ph>如果所有文字都加入至之前，您必須先修改<ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>You must remember to work from the end of the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object's text if you're making changes.</source>
          <target state="translated">從結尾工作時，您必須記得<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>物件的文字，如果您正在變更。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Use the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Chars%2A&gt;</ph> property to sequentially search a range of characters.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Text.StringBuilder.Chars%2A&gt;</ph>循序搜尋的字元範圍的屬性。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Useful if you're concerned with individual characters or a small substring.</source>
          <target state="translated">如果您所關心的個別字元或小型的子字串很有用。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Cumbersome if the number of characters to search is large or if the search logic is complex.</source>
          <target state="translated">如果要搜尋的字元數目很大，或搜尋邏輯相當複雜麻煩。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Results in very poor performance for objects that have grown very large through repeated method calls.</source>
          <target state="translated">結果很差的效能已經成長重複的方法呼叫透過非常大型的物件。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Convert the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object to a <ph id="ph2">&lt;xref:System.String&gt;</ph> object, and perform modifications on the <ph id="ph3">&lt;xref:System.String&gt;</ph> object.</source>
          <target state="translated">轉換<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>物件<ph id="ph2">&lt;xref:System.String&gt;</ph>物件，並在執行修改<ph id="ph3">&lt;xref:System.String&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Useful if the number of modifications is small.</source>
          <target state="translated">如果修改數目很小很有用。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Negates the performance benefit of the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> class if the number of modifications is large.</source>
          <target state="translated">變換正負號的效能優勢<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>類別如果修改的數目很大。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Let's examine these techniques in greater detail.</source>
          <target state="translated">讓我們來檢查這些更詳細的技術。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>If the goal of the search is to determine whether a particular substring exists (that is, if you aren't interested in the position of the substring), you can search strings before storing them in the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object.</source>
          <target state="translated">如果搜尋的目標是要判斷是否有特定的子字串存在 （也就是說，如果您不感興趣的子字串的位置），您可以再將它們儲存在搜尋字串<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The following example provides one possible implementation.</source>
          <target state="translated">下列範例提供一個可能的實作。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>It defines a <ph id="ph1">`StringBuilderFinder`</ph> class whose constructor is passed a reference to a <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> object and the substring to find in the string.</source>
          <target state="translated">它會定義<ph id="ph1">`StringBuilderFinder`</ph>類別的建構函式傳遞參考至<ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph>物件和要在字串中找到的子字串。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>In this case, the example tries to determine whether recorded temperatures are in Fahrenheit or Celsius, and adds the appropriate introductory text to the beginning of the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object.</source>
          <target state="translated">在此情況下，這個範例會判斷是否已錄製的溫度華氏或攝氏，並將適當的簡介文字的開頭加入<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>A random number generator is used to select an array that contains data in either degrees Celsius or degrees Fahrenheit.</source>
          <target state="translated">亂數產生器用來選取陣列，其中包含華氏或攝氏中的資料。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Call the <ph id="ph1">&lt;xref:System.Text.StringBuilder.ToString%2A?displayProperty=nameWithType&gt;</ph> method to convert the <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> object to a <ph id="ph3">&lt;xref:System.String&gt;</ph> object.</source>
          <target state="translated">呼叫<ph id="ph1">&lt;xref:System.Text.StringBuilder.ToString%2A?displayProperty=nameWithType&gt;</ph>方法，將轉換<ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph>物件<ph id="ph3">&lt;xref:System.String&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>You can search the string by using methods such as <ph id="ph1">&lt;xref:System.String.LastIndexOf%2A?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.String.StartsWith%2A?displayProperty=nameWithType&gt;</ph>, or you can use regular expressions and the <ph id="ph3">&lt;xref:System.Text.RegularExpressions.Regex&gt;</ph> class to search for patterns.</source>
          <target state="translated">您可以使用下列方法來搜尋字串<ph id="ph1">&lt;xref:System.String.LastIndexOf%2A?displayProperty=nameWithType&gt;</ph>或<ph id="ph2">&lt;xref:System.String.StartsWith%2A?displayProperty=nameWithType&gt;</ph>，或者您可以使用規則運算式和<ph id="ph3">&lt;xref:System.Text.RegularExpressions.Regex&gt;</ph>類別搜尋的模式。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Because both <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> and <ph id="ph2">&lt;xref:System.String&gt;</ph> objects use UTF-16 encoding to store characters, the index positions of characters, substrings, and regular expression matches are the same in both objects.</source>
          <target state="translated">因為同時<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>和<ph id="ph2">&lt;xref:System.String&gt;</ph>物件會使用 utf-16 編碼方式儲存字元，子字串，索引位置的字元和規則運算式相符項目中這兩個物件相同。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>This enables you to use <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> methods to make changes at the same position at which that text is found in the <ph id="ph2">&lt;xref:System.String&gt;</ph> object.</source>
          <target state="translated">這可讓您使用<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>方法，以變更該文字位於相同位置<ph id="ph2">&lt;xref:System.String&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>If you adopt this approach, you should work from the end of the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object to its beginning so that you don't have to repeatedly convert the <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> object to a string.</source>
          <target state="translated">如果您採用這種方法，您應該使用從結尾<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>物件，其開頭，所以您不需要重複轉換<ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph>物件的字串。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The following example illustrates this approach.</source>
          <target state="translated">下列範例將示範這個方法。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>It stores four occurrences of each letter of the English alphabet in a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object.</source>
          <target state="translated">它會儲存的英文字母中的每個字母的四個項目<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>It then converts the text to a <ph id="ph1">&lt;xref:System.String&gt;</ph> object and uses a regular expression to identify the starting position of each four-character sequence.</source>
          <target state="translated">然後將轉換的文字<ph id="ph1">&lt;xref:System.String&gt;</ph>物件，並使用規則運算式來識別每個四個字元序列的開始位置。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Finally, it adds an underscore before each four-character sequence except for the first sequence, and converts the first character of the sequence to uppercase.</source>
          <target state="translated">最後，它會將第一個序列中，除了每四個字元序列前面，底線，並將轉換成大寫序列的第一個字元。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Use the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Chars%2A?displayProperty=nameWithType&gt;</ph> property to sequentially search a range of characters in a <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> object.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Text.StringBuilder.Chars%2A?displayProperty=nameWithType&gt;</ph>屬性，來循序搜尋的字元範圍<ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>This approach may not be practical if the number of characters to be searched is large or the search logic is particularly complex.</source>
          <target state="translated">如果要搜尋的字元數目很大，或特別複雜的搜尋邏輯，這種方法可能不是實際。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>For the performance implications of character-by-character index-based access for very large, chunked <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> objects, see the documentation for the <ph id="ph2">&lt;xref:System.Text.StringBuilder.Chars%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">如需效能含意，逐字元索引式存取的大型、 chunked<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>物件，請參閱文件<ph id="ph2">&lt;xref:System.Text.StringBuilder.Chars%2A?displayProperty=nameWithType&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The following example is identical in functionality to the previous example but differs in implementation.</source>
          <target state="translated">下列範例與前一個範例的功能相同，不過在實作有所不同。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>It uses the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Chars%2A&gt;</ph> property to detect when a character value has changed, inserts an underscore at that position, and converts the first character in the new sequence to uppercase.</source>
          <target state="translated">它會使用<ph id="ph1">&lt;xref:System.Text.StringBuilder.Chars%2A&gt;</ph>屬性來偵測已變更的字元值，該位置插入底線，並將新的序列中的第一個字元轉換成大寫。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Store all the unmodified text in the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object, call the <ph id="ph2">&lt;xref:System.Text.StringBuilder.ToString%2A?displayProperty=nameWithType&gt;</ph> method to convert the <ph id="ph3">&lt;xref:System.Text.StringBuilder&gt;</ph> object to a <ph id="ph4">&lt;xref:System.String&gt;</ph> object, and perform the modifications on the <ph id="ph5">&lt;xref:System.String&gt;</ph> object.</source>
          <target state="translated">存放區中的所有未修改的文字<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>物件，呼叫<ph id="ph2">&lt;xref:System.Text.StringBuilder.ToString%2A?displayProperty=nameWithType&gt;</ph>方法，將轉換<ph id="ph3">&lt;xref:System.Text.StringBuilder&gt;</ph>物件<ph id="ph4">&lt;xref:System.String&gt;</ph>物件，以及執行上所做的修改<ph id="ph5">&lt;xref:System.String&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>You can use this approach if you have only a few modifications; otherwise, the cost of working with immutable strings may negate the performance benefits of using a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object.</source>
          <target state="translated">您可以使用這種方法，如果您有只有少數的修改。否則，使用不可變的字串的成本可能變換正負號的效能優點使用<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The following example is identical in functionality to the previous two examples but differs in implementation.</source>
          <target state="translated">下列範例與上述兩個範例的功能相同，不過在實作有所不同。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>It creates a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object, converts it to a <ph id="ph2">&lt;xref:System.String&gt;</ph> object, and then uses a regular expression to perform all remaining modifications on the string.</source>
          <target state="translated">它會建立<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>物件，轉換成<ph id="ph2">&lt;xref:System.String&gt;</ph>物件，並接著使用規則運算式字串上執行所有剩餘的修改。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.Replace%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.MatchEvaluator%29?displayProperty=nameWithType&gt;</ph> method uses a lambda expression to perform the replacement on each match.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.Replace%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.MatchEvaluator%29?displayProperty=nameWithType&gt;</ph>方法才能執行取代每個相符項目上使用 lambda 運算式。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Converting the StringBuilder object to a string</source>
          <target state="translated">將 StringBuilder 物件轉換為字串</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>You must convert the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object to a <ph id="ph2">&lt;xref:System.String&gt;</ph> object before you can pass the string represented by the <ph id="ph3">&lt;xref:System.Text.StringBuilder&gt;</ph> object to a method that has a <ph id="ph4">&lt;xref:System.String&gt;</ph> parameter or display it in the user interface.</source>
          <target state="translated">您必須先將 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 物件轉換成 <ph id="ph2">&lt;xref:System.String&gt;</ph> 物件，才能將 <ph id="ph3">&lt;xref:System.Text.StringBuilder&gt;</ph> 物件所代表的字串傳遞給具有 <ph id="ph4">&lt;xref:System.String&gt;</ph> 參數的方法，或在使用者介面中加以顯示。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>You perform this conversion by calling the <ph id="ph1">&lt;xref:System.Text.StringBuilder.ToString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">您執行這項轉換，藉由呼叫<ph id="ph1">&lt;xref:System.Text.StringBuilder.ToString%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>For an illustration, see the previous example, which calls the <ph id="ph1">&lt;xref:System.Text.StringBuilder.ToString%2A&gt;</ph> method to convert a <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> object to a string so that it can be passed to a regular expression method.</source>
          <target state="translated">如需圖例，請參閱上述的範例中，呼叫<ph id="ph1">&lt;xref:System.Text.StringBuilder.ToString%2A&gt;</ph>方法，將轉換<ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph>物件的字串，讓它可以傳遞至規則運算式方法。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The following example shows how to call many of the methods defined by the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> class.</source>
          <target state="translated">下列範例示範如何呼叫所定義之方法的許多<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated">在<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>和<ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>，當您具現化<ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>藉由呼叫物件<ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph>建構函式，長度和容量<ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>執行個體所能成長的值超出其<ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">這可能是特別是當您呼叫<ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph>和<ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph>附加小型字串的方法。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="T:System.Text.StringBuilder">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.#ctor">
          <source>The string value of this instance is set to <ph id="ph1">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>, and the capacity is set to the implementation-specific default capacity.</source>
          <target state="translated">這個執行個體的字串值設定為<ph id="ph1">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>，而且容量設定為實作特定的預設容量。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.#ctor">
          <source>The following example demonstrates how to call the <ph id="ph1">&lt;xref:System.Text.StringBuilder.%23ctor%2A&gt;</ph> constructor with no parameters.</source>
          <target state="translated">下列範例示範如何呼叫<ph id="ph1">&lt;xref:System.Text.StringBuilder.%23ctor%2A&gt;</ph>不含任何參數的建構函式。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.#ctor(System.Int32)">
          <source>The suggested starting size of this instance.</source>
          <target state="translated">這個執行個體建議的起始大小。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.#ctor(System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> class using the specified capacity.</source>
          <target state="translated">使用指定的容量來初始化 <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.#ctor(System.Int32)">
          <source>The <ph id="ph1">`capacity`</ph> parameter defines the maximum number of characters that can be stored in the memory allocated by the current instance.</source>
          <target state="translated"><ph id="ph1">`capacity`</ph>參數會定義可以儲存在目前的執行個體所配置的記憶體中的字元的數目上限。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.#ctor(System.Int32)">
          <source>Its value is assigned to the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Capacity%2A&gt;</ph> property.</source>
          <target state="translated">其值指派給<ph id="ph1">&lt;xref:System.Text.StringBuilder.Capacity%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.#ctor(System.Int32)">
          <source>If the number of characters to be stored in the current instance exceeds this <ph id="ph1">`capacity`</ph> value, the <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> object allocates additional memory to store them.</source>
          <target state="translated">若要儲存目前的執行個體中的字元數超過此<ph id="ph1">`capacity`</ph>值<ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph>物件配置額外的記憶體來儲存它們。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.#ctor(System.Int32)">
          <source>The string value of this instance is set to <ph id="ph1">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">這個執行個體的字串值設定為<ph id="ph1">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.#ctor(System.Int32)">
          <source>If <ph id="ph1">`capacity`</ph> is zero, the implementation-specific default capacity is used.</source>
          <target state="translated">如果<ph id="ph1">`capacity`</ph>是零，則使用實作專用的預設容量。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.#ctor(System.Int32)">
          <source>The following example demonstrates how to call the <ph id="ph1">&lt;xref:System.Text.StringBuilder.%23ctor%2A&gt;</ph> constructor with a specified capacity.</source>
          <target state="translated">下列範例示範如何呼叫<ph id="ph1">&lt;xref:System.Text.StringBuilder.%23ctor%2A&gt;</ph>建構函式具有指定的容量。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.#ctor(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> 小於零。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.#ctor(System.String)">
          <source>The string used to initialize the value of the instance.</source>
          <target state="translated">用來初始化執行個體值的字串。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.#ctor(System.String)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the new <ph id="ph2">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> will contain the empty string (that is, it contains <ph id="ph3">&lt;see cref="F:System.String.Empty" /&gt;</ph>).</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> 為 <ph id="ph1">&lt;see langword="null" /&gt;</ph>，新的 <ph id="ph2">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 將包含空字串 (即包含 <ph id="ph3">&lt;see cref="F:System.String.Empty" /&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> class using the specified string.</source>
          <target state="translated">以指定的字串初始化 <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.#ctor(System.String)">
          <source>If <ph id="ph1">`value`</ph> is <ph id="ph2">`null`</ph>, the new <ph id="ph3">&lt;xref:System.Text.StringBuilder&gt;</ph> will contain the empty string (that is, it contains <ph id="ph4">&lt;xref:System.String.Empty&gt;</ph>).</source>
          <target state="translated">如果 <ph id="ph1">`value`</ph> 為 <ph id="ph2">`null`</ph>，新的 <ph id="ph3">&lt;xref:System.Text.StringBuilder&gt;</ph> 將包含空字串 (即包含 <ph id="ph4">&lt;xref:System.String.Empty&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.#ctor(System.String)">
          <source>The following example demonstrates how to call the <ph id="ph1">&lt;xref:System.Text.StringBuilder.%23ctor%2A&gt;</ph> constructor with the specified string.</source>
          <target state="translated">下列範例示範如何呼叫<ph id="ph1">&lt;xref:System.Text.StringBuilder.%23ctor%2A&gt;</ph>建構函式，使用指定的字串。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)">
          <source>The suggested starting size of the <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 建議的起始大小。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)">
          <source>The maximum number of characters the current string can contain.</source>
          <target state="translated">目前字串可以包含的最大字元數。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> class that starts with a specified capacity and can grow to a specified maximum.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 類別的新執行個體，將從指定的容量開始並且可以增加至指定的最大值。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)">
          <source>The <ph id="ph1">`capacity`</ph> parameter defines the maximum number of characters that can be stored in the memory allocated by the current instance.</source>
          <target state="translated"><ph id="ph1">`capacity`</ph>參數會定義可以儲存在目前的執行個體所配置的記憶體中的字元的數目上限。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)">
          <source>Its value is assigned to the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Capacity%2A&gt;</ph> property.</source>
          <target state="translated">其值指派給<ph id="ph1">&lt;xref:System.Text.StringBuilder.Capacity%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)">
          <source>If the number of characters to be stored in the current instance exceeds this <ph id="ph1">`capacity`</ph> value, the <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> object allocates additional memory to store them.</source>
          <target state="translated">若要儲存目前的執行個體中的字元數超過此<ph id="ph1">`capacity`</ph>值<ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph>物件配置額外的記憶體來儲存它們。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)">
          <source>If <ph id="ph1">`capacity`</ph> is zero, the implementation-specific default capacity is used.</source>
          <target state="translated">如果<ph id="ph1">`capacity`</ph>是零，則使用實作專用的預設容量。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)">
          <source>The <ph id="ph1">`maxCapacity`</ph> property defines the maximum number of characters that the current instance can hold.</source>
          <target state="translated"><ph id="ph1">`maxCapacity`</ph>屬性定義的目前執行個體可以容納的字元數目上限。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)">
          <source>Its value is assigned to the <ph id="ph1">&lt;xref:System.Text.StringBuilder.MaxCapacity%2A&gt;</ph> property.</source>
          <target state="translated">其值指派給<ph id="ph1">&lt;xref:System.Text.StringBuilder.MaxCapacity%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)">
          <source>If the number of characters to be stored in the current instance exceeds this <ph id="ph1">`maxCapacity`</ph> value, the <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> object does not allocate additional memory, but instead throws an exception.</source>
          <target state="translated">若要儲存目前的執行個體中的字元數超過此<ph id="ph1">`maxCapacity`</ph>值<ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph>物件不會配置更多記憶體，但改為擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)">
          <source>The following example demonstrates how to call the <ph id="ph1">&lt;xref:System.Text.StringBuilder.%23ctor%2A&gt;</ph> constructor with a specified capacity and maximum capacity.</source>
          <target state="translated">下列範例示範如何呼叫<ph id="ph1">&lt;xref:System.Text.StringBuilder.%23ctor%2A&gt;</ph>建構函式具有指定的容量和最大容量。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="maxCapacity" /&gt;</ph> is less than one, <ph id="ph2">&lt;paramref name="capacity" /&gt;</ph> is less than zero, or <ph id="ph3">&lt;paramref name="capacity" /&gt;</ph> is greater than <ph id="ph4">&lt;paramref name="maxCapacity" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="maxCapacity" /&gt;</ph> 小於一、<ph id="ph2">&lt;paramref name="capacity" /&gt;</ph> 小於零或 <ph id="ph3">&lt;paramref name="capacity" /&gt;</ph> 大於 <ph id="ph4">&lt;paramref name="maxCapacity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated">在<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>和<ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>，當您具現化<ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>藉由呼叫物件<ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph>建構函式，長度和容量<ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>執行個體所能成長的值超出其<ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">這可能是特別是當您呼叫<ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph>和<ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph>附加小型字串的方法。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.#ctor(System.String,System.Int32)">
          <source>The string used to initialize the value of the instance.</source>
          <target state="translated">用來初始化執行個體值的字串。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.#ctor(System.String,System.Int32)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the new <ph id="ph2">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> will contain the empty string (that is, it contains <ph id="ph3">&lt;see cref="F:System.String.Empty" /&gt;</ph>).</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> 為 <ph id="ph1">&lt;see langword="null" /&gt;</ph>，新的 <ph id="ph2">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 將包含空字串 (即包含 <ph id="ph3">&lt;see cref="F:System.String.Empty" /&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.#ctor(System.String,System.Int32)">
          <source>The suggested starting size of the <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 建議的起始大小。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.#ctor(System.String,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> class using the specified string and capacity.</source>
          <target state="translated">使用指定的字串和容量，來初始化 <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.#ctor(System.String,System.Int32)">
          <source>The <ph id="ph1">`capacity`</ph> parameter defines the maximum number of characters that can be stored in the memory allocated by the current instance.</source>
          <target state="translated"><ph id="ph1">`capacity`</ph>參數會定義可以儲存在目前的執行個體所配置的記憶體中的字元的數目上限。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.#ctor(System.String,System.Int32)">
          <source>Its value is assigned to the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Capacity%2A&gt;</ph> property.</source>
          <target state="translated">其值指派給<ph id="ph1">&lt;xref:System.Text.StringBuilder.Capacity%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.#ctor(System.String,System.Int32)">
          <source>If the number of characters to be stored in the current instance exceeds this <ph id="ph1">`capacity`</ph> value, the <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> object allocates additional memory to store them.</source>
          <target state="translated">若要儲存目前的執行個體中的字元數超過此<ph id="ph1">`capacity`</ph>值<ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph>物件配置額外的記憶體來儲存它們。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.#ctor(System.String,System.Int32)">
          <source>If <ph id="ph1">`capacity`</ph> is zero, the implementation-specific default capacity is used.</source>
          <target state="translated">如果<ph id="ph1">`capacity`</ph>是零，則使用實作專用的預設容量。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.#ctor(System.String,System.Int32)">
          <source>The following example demonstrates how to call the <ph id="ph1">&lt;xref:System.Text.StringBuilder.%23ctor%2A&gt;</ph> constructor with an initial string and a specified capacity.</source>
          <target state="translated">下列範例示範如何呼叫<ph id="ph1">&lt;xref:System.Text.StringBuilder.%23ctor%2A&gt;</ph>建構函式的初始字串與指定的容量。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.#ctor(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> 小於零。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.#ctor(System.String,System.Int32,System.Int32,System.Int32)">
          <source>The string that contains the substring used to initialize the value of this instance.</source>
          <target state="translated">字串，包含用來初始化此執行個體值的子字串。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.#ctor(System.String,System.Int32,System.Int32,System.Int32)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the new <ph id="ph2">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> will contain the empty string (that is, it contains <ph id="ph3">&lt;see cref="F:System.String.Empty" /&gt;</ph>).</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> 為 <ph id="ph1">&lt;see langword="null" /&gt;</ph>，新的 <ph id="ph2">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 將包含空字串 (即包含 <ph id="ph3">&lt;see cref="F:System.String.Empty" /&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.#ctor(System.String,System.Int32,System.Int32,System.Int32)">
          <source>The position within <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> where the substring begins.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> 中子字串的開始位置。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.#ctor(System.String,System.Int32,System.Int32,System.Int32)">
          <source>The number of characters in the substring.</source>
          <target state="translated">子字串中的字元數。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.#ctor(System.String,System.Int32,System.Int32,System.Int32)">
          <source>The suggested starting size of the <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 建議的起始大小。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.#ctor(System.String,System.Int32,System.Int32,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> class from the specified substring and capacity.</source>
          <target state="translated">以指定的子字串和容量初始化 <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.#ctor(System.String,System.Int32,System.Int32,System.Int32)">
          <source>The <ph id="ph1">`capacity`</ph> parameter defines the maximum number of characters that can be stored in the memory allocated by the current instance.</source>
          <target state="translated"><ph id="ph1">`capacity`</ph>參數會定義可以儲存在目前的執行個體所配置的記憶體中的字元的數目上限。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.#ctor(System.String,System.Int32,System.Int32,System.Int32)">
          <source>Its value is assigned to the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Capacity%2A&gt;</ph> property.</source>
          <target state="translated">其值指派給<ph id="ph1">&lt;xref:System.Text.StringBuilder.Capacity%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.#ctor(System.String,System.Int32,System.Int32,System.Int32)">
          <source>If the number of characters to be stored in the current instance exceeds this <ph id="ph1">`capacity`</ph> value, the <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> object allocates additional memory to store them.</source>
          <target state="translated">若要儲存目前的執行個體中的字元數超過此<ph id="ph1">`capacity`</ph>值<ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph>物件配置額外的記憶體來儲存它們。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.#ctor(System.String,System.Int32,System.Int32,System.Int32)">
          <source>If <ph id="ph1">`capacity`</ph> is zero, the implementation-specific default capacity is used.</source>
          <target state="translated">如果<ph id="ph1">`capacity`</ph>是零，則使用實作專用的預設容量。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.#ctor(System.String,System.Int32,System.Int32,System.Int32)">
          <source>The following example demonstrates how to call the <ph id="ph1">&lt;xref:System.Text.StringBuilder.%23ctor%2A&gt;</ph> constructor with the specified string.</source>
          <target state="translated">下列範例示範如何呼叫<ph id="ph1">&lt;xref:System.Text.StringBuilder.%23ctor%2A&gt;</ph>建構函式，使用指定的字串。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.#ctor(System.String,System.Int32,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> 小於零。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.#ctor(System.String,System.Int32,System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.#ctor(System.String,System.Int32,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> plus <ph id="ph2">&lt;paramref name="length" /&gt;</ph> is not a position within <ph id="ph3">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> 加上 <ph id="ph2">&lt;paramref name="length" /&gt;</ph> 不是 <ph id="ph3">&lt;paramref name="value" /&gt;</ph> 內的位置。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="T:System.Text.StringBuilder">
          <source>Appends the string representation of a specified object to this instance.</source>
          <target state="translated">將指定物件的字串表示附加至這個執行個體。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Boolean)">
          <source>The Boolean value to append.</source>
          <target state="translated">要附加的布林值。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Boolean)">
          <source>Appends the string representation of a specified Boolean value to this instance.</source>
          <target state="translated">將指定的布林 (Boolean) 值之字串表示附加至這個執行個體。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Boolean)">
          <source>A reference to this instance after the append operation has completed.</source>
          <target state="translated">完成附加作業之後，這個執行個體的參考。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Boolean%29&gt;</ph> method modifies the existing instance of this class; it does not return a new class instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Boolean%29&gt;</ph>方法會修改現有的執行個體，這個類別，它不會傳回新的類別執行個體。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Boolean)">
          <source>Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object, as the following example illustrates.</source>
          <target state="translated">因為這個緣故，您可以呼叫方法或屬性上現有的參考，而且您沒有指派傳回值，<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>物件，如下列範例所示。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Boolean%29&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.Boolean.ToString?displayProperty=nameWithType&gt;</ph> method to get the string representation of <ph id="ph3">`value`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Boolean%29&gt;</ph>方法呼叫<ph id="ph2">&lt;xref:System.Boolean.ToString?displayProperty=nameWithType&gt;</ph>方法來取得的字串表示<ph id="ph3">`value`</ph>。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Boolean)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">視需要調整此執行個體的容量。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Boolean)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">加大此執行個體的值可能會超過 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Boolean)">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated">在<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>和<ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>，當您具現化<ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>藉由呼叫物件<ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph>建構函式，長度和容量<ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>執行個體所能成長的值超出其<ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Boolean)">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">這可能是特別是當您呼叫<ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph>和<ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph>附加小型字串的方法。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Byte)">
          <source>The value to append.</source>
          <target state="translated">要附加的值。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Byte)">
          <source>Appends the string representation of a specified 8-bit unsigned integer to this instance.</source>
          <target state="translated">將指定的 8 位元不帶正負號的整數之字串表示附加至這個執行個體。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Byte)">
          <source>A reference to this instance after the append operation has completed.</source>
          <target state="translated">完成附加作業之後，這個執行個體的參考。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Byte)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Byte%29&gt;</ph> method modifies the existing instance of this class; it does not return a new class instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Byte%29&gt;</ph>方法會修改現有的執行個體，這個類別，它不會傳回新的類別執行個體。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Byte)">
          <source>Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object, as the following example illustrates.</source>
          <target state="translated">因為這個緣故，您可以呼叫方法或屬性上現有的參考，而且您沒有指派傳回值，<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>物件，如下列範例所示。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Byte)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Byte%29&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.Byte.ToString%28System.IFormatProvider%29&gt;</ph> method to get the string representation of <ph id="ph3">`value`</ph> for the current culture.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Byte%29&gt;</ph>方法呼叫<ph id="ph2">&lt;xref:System.Byte.ToString%28System.IFormatProvider%29&gt;</ph>方法來取得的字串表示<ph id="ph3">`value`</ph>目前的文化特性。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Byte)">
          <source>To control the formatting of <ph id="ph1">`value`</ph>, call the <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph> method.</source>
          <target state="translated">若要控制格式設定的<ph id="ph1">`value`</ph>，呼叫<ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Byte)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">視需要調整此執行個體的容量。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Byte)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">加大此執行個體的值可能會超過 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Byte)">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated">在<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>和<ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>，當您具現化<ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>藉由呼叫物件<ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph>建構函式，長度和容量<ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>執行個體所能成長的值超出其<ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Byte)">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">這可能是特別是當您呼叫<ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph>和<ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph>附加小型字串的方法。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char)">
          <source>The UTF-16-encoded code unit to append.</source>
          <target state="translated">要附加的 UTF-16 編碼字碼單位。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char)">
          <source>Appends the string representation of a specified <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph> object to this instance.</source>
          <target state="translated">將指定 <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph> 物件的字串表示附加至這個執行個體。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char)">
          <source>A reference to this instance after the append operation has completed.</source>
          <target state="translated">完成附加作業之後，這個執行個體的參考。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Char)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Char%29&gt;</ph> method modifies the existing instance of this class; it does not return a new class instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Char%29&gt;</ph>方法會修改現有的執行個體，這個類別，它不會傳回新的類別執行個體。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Char)">
          <source>Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object, as the following example illustrates.</source>
          <target state="translated">因為這個緣故，您可以呼叫方法或屬性上現有的參考，而且您沒有指派傳回值，<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>物件，如下列範例所示。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Char)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">視需要調整此執行個體的容量。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">加大此執行個體的值可能會超過 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Char)">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated">在<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>和<ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>，當您具現化<ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>藉由呼叫物件<ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph>建構函式，長度和容量<ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>執行個體所能成長的值超出其<ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Char)">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">這可能是特別是當您呼叫<ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph>和<ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph>附加小型字串的方法。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char[])">
          <source>The array of characters to append.</source>
          <target state="translated">要附加的字元陣列。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char[])">
          <source>Appends the string representation of the Unicode characters in a specified array to this instance.</source>
          <target state="translated">將指定陣列中的 Unicode 字元的字串表示附加至這個執行個體。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char[])">
          <source>A reference to this instance after the append operation has completed.</source>
          <target state="translated">完成附加作業之後，這個執行個體的參考。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Char[])">
          <source>This method appends all the characters in the specified array to the current instance in the same order as they appear in <ph id="ph1">`value`</ph>.</source>
          <target state="translated">這個方法會附加到目前的執行個體相同的順序指定陣列中的所有字元濆婞剢謅<ph id="ph1">`value`</ph>。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Char[])">
          <source>If <ph id="ph1">`value`</ph> is <ph id="ph2">`null`</ph>, no changes are made.</source>
          <target state="translated">如果<ph id="ph1">`value`</ph>是<ph id="ph2">`null`</ph>，會進行任何變更。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Char[])">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Char%5B%5D%29&gt;</ph> method modifies the existing instance of this class; it does not return a new class instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Char%5B%5D%29&gt;</ph>方法會修改現有的執行個體，這個類別，它不會傳回新的類別執行個體。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Char[])">
          <source>Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object, as the following example illustrates.</source>
          <target state="translated">因為這個緣故，您可以呼叫方法或屬性上現有的參考，而且您沒有指派傳回值，<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>物件，如下列範例所示。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Char[])">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">視需要調整此執行個體的容量。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char[])">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">加大此執行個體的值可能會超過 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Char[])">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated">在<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>和<ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>，當您具現化<ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>藉由呼叫物件<ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph>建構函式，長度和容量<ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>執行個體所能成長的值超出其<ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Char[])">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">這可能是特別是當您呼叫<ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph>和<ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph>附加小型字串的方法。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Decimal)">
          <source>The value to append.</source>
          <target state="translated">要附加的值。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Decimal)">
          <source>Appends the string representation of a specified decimal number to this instance.</source>
          <target state="translated">將指定的小數位數之字串表示附加至這個執行個體。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Decimal)">
          <source>A reference to this instance after the append operation has completed.</source>
          <target state="translated">完成附加作業之後，這個執行個體的參考。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Decimal)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Decimal%29&gt;</ph> method modifies the existing instance of this class; it does not return a new class instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Decimal%29&gt;</ph>方法會修改現有的執行個體，這個類別，它不會傳回新的類別執行個體。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Decimal)">
          <source>Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object, as the following example illustrates.</source>
          <target state="translated">因為這個緣故，您可以呼叫方法或屬性上現有的參考，而且您沒有指派傳回值，<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>物件，如下列範例所示。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Decimal)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Decimal%29&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.Decimal.ToString%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> method to get the string representation of <ph id="ph3">`value`</ph> for the current culture.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Decimal%29&gt;</ph>方法呼叫<ph id="ph2">&lt;xref:System.Decimal.ToString%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph>方法來取得的字串表示<ph id="ph3">`value`</ph>目前的文化特性。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Decimal)">
          <source>To control the formatting of <ph id="ph1">`value`</ph>, call the <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph> method.</source>
          <target state="translated">若要控制格式設定的<ph id="ph1">`value`</ph>，呼叫<ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Decimal)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">視需要調整此執行個體的容量。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Decimal)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">加大此執行個體的值可能會超過 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Decimal)">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated">在<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>和<ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>，當您具現化<ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>藉由呼叫物件<ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph>建構函式，長度和容量<ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>執行個體所能成長的值超出其<ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Decimal)">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">這可能是特別是當您呼叫<ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph>和<ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph>附加小型字串的方法。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Double)">
          <source>The value to append.</source>
          <target state="translated">要附加的值。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Double)">
          <source>Appends the string representation of a specified double-precision floating-point number to this instance.</source>
          <target state="translated">將指定的雙精度浮點數之字串表示附加至這個執行個體。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Double)">
          <source>A reference to this instance after the append operation has completed.</source>
          <target state="translated">完成附加作業之後，這個執行個體的參考。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Double)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Double%29&gt;</ph> method modifies the existing instance of this class; it does not return a new class instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Double%29&gt;</ph>方法會修改現有的執行個體，這個類別，它不會傳回新的類別執行個體。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Double)">
          <source>Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object, as the following example illustrates.</source>
          <target state="translated">因為這個緣故，您可以呼叫方法或屬性上現有的參考，而且您沒有指派傳回值，<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>物件，如下列範例所示。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Double)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Double%29&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.Double.ToString%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> method to get the string representation of <ph id="ph3">`value`</ph> for the current culture.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Double%29&gt;</ph>方法呼叫<ph id="ph2">&lt;xref:System.Double.ToString%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph>方法來取得的字串表示<ph id="ph3">`value`</ph>目前的文化特性。</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Double)">
          <source>To control the formatting of <ph id="ph1">`value`</ph>, call the <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph> method.</source>
          <target state="translated">若要控制格式設定的<ph id="ph1">`value`</ph>，呼叫<ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Double)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">視需要調整此執行個體的容量。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Double)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">加大此執行個體的值可能會超過 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Double)">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated">在<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>和<ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>，當您具現化<ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>藉由呼叫物件<ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph>建構函式，長度和容量<ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>執行個體所能成長的值超出其<ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Double)">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">這可能是特別是當您呼叫<ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph>和<ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph>附加小型字串的方法。</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Int16)">
          <source>The value to append.</source>
          <target state="translated">要附加的值。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Int16)">
          <source>Appends the string representation of a specified 16-bit signed integer to this instance.</source>
          <target state="translated">將指定的 16 位元帶正負號的整數之字串表示附加至這個執行個體。</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Int16)">
          <source>A reference to this instance after the append operation has completed.</source>
          <target state="translated">完成附加作業之後，這個執行個體的參考。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Int16)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Int16%29&gt;</ph> method modifies the existing instance of this class; it does not return a new class instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Int16%29&gt;</ph>方法會修改現有的執行個體，這個類別，它不會傳回新的類別執行個體。</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Int16)">
          <source>Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object, as the following example illustrates.</source>
          <target state="translated">因為這個緣故，您可以呼叫方法或屬性上現有的參考，而且您沒有指派傳回值，<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>物件，如下列範例所示。</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Int16)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Int16%29&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.Int16.ToString%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> method to get the string representation of <ph id="ph3">`value`</ph> for the current culture.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Int16%29&gt;</ph>方法呼叫<ph id="ph2">&lt;xref:System.Int16.ToString%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph>方法來取得的字串表示<ph id="ph3">`value`</ph>目前的文化特性。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Int16)">
          <source>To control the formatting of <ph id="ph1">`value`</ph>, call the <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph> method.</source>
          <target state="translated">若要控制格式設定的<ph id="ph1">`value`</ph>，呼叫<ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Int16)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">視需要調整此執行個體的容量。</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Int16)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">加大此執行個體的值可能會超過 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Int16)">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated">在<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>和<ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>，當您具現化<ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>藉由呼叫物件<ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph>建構函式，長度和容量<ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>執行個體所能成長的值超出其<ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Int16)">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">這可能是特別是當您呼叫<ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph>和<ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph>附加小型字串的方法。</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Int32)">
          <source>The value to append.</source>
          <target state="translated">要附加的值。</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Int32)">
          <source>Appends the string representation of a specified 32-bit signed integer to this instance.</source>
          <target state="translated">將指定的 32 位元帶正負號的整數之字串表示附加至這個執行個體。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Int32)">
          <source>A reference to this instance after the append operation has completed.</source>
          <target state="translated">完成附加作業之後，這個執行個體的參考。</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Int32%29&gt;</ph> method modifies the existing instance of this class; it does not return a new class instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Int32%29&gt;</ph>方法會修改現有的執行個體，這個類別，它不會傳回新的類別執行個體。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Int32)">
          <source>Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object, as the following example illustrates.</source>
          <target state="translated">因為這個緣故，您可以呼叫方法或屬性上現有的參考，而且您沒有指派傳回值，<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>物件，如下列範例所示。</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Int32%29&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.Int32.ToString%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> method to get the string representation of <ph id="ph3">`value`</ph> for the current culture.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Int32%29&gt;</ph>方法呼叫<ph id="ph2">&lt;xref:System.Int32.ToString%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph>方法來取得的字串表示<ph id="ph3">`value`</ph>目前的文化特性。</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Int32)">
          <source>To control the formatting of <ph id="ph1">`value`</ph>, call the <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph> method.</source>
          <target state="translated">若要控制格式設定的<ph id="ph1">`value`</ph>，呼叫<ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Int32)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">視需要調整此執行個體的容量。</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Int32)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">加大此執行個體的值可能會超過 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Int32)">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated">在<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>和<ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>，當您具現化<ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>藉由呼叫物件<ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph>建構函式，長度和容量<ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>執行個體所能成長的值超出其<ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Int32)">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">這可能是特別是當您呼叫<ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph>和<ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph>附加小型字串的方法。</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Int64)">
          <source>The value to append.</source>
          <target state="translated">要附加的值。</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Int64)">
          <source>Appends the string representation of a specified 64-bit signed integer to this instance.</source>
          <target state="translated">將指定的 64 位元帶正負號的整數之字串表示附加至這個執行個體。</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Int64)">
          <source>A reference to this instance after the append operation has completed.</source>
          <target state="translated">完成附加作業之後，這個執行個體的參考。</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Int64)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Int64%29&gt;</ph> method modifies the existing instance of this class; it does not return a new class instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Int64%29&gt;</ph>方法會修改現有的執行個體，這個類別，它不會傳回新的類別執行個體。</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Int64)">
          <source>Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object, as the following example illustrates.</source>
          <target state="translated">因為這個緣故，您可以呼叫方法或屬性上現有的參考，而且您沒有指派傳回值，<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>物件，如下列範例所示。</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Int64)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Int64%29&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.Int64.ToString%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> to get the string representation of <ph id="ph3">`value`</ph> for the current culture.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Int64%29&gt;</ph>方法呼叫<ph id="ph2">&lt;xref:System.Int64.ToString%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph>取得的字串表示<ph id="ph3">`value`</ph>目前的文化特性。</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Int64)">
          <source>To control the formatting of <ph id="ph1">`value`</ph>, call the <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph> method.</source>
          <target state="translated">若要控制格式設定的<ph id="ph1">`value`</ph>，呼叫<ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Int64)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">視需要調整此執行個體的容量。</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Int64)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">加大此執行個體的值可能會超過 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Int64)">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated">在<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>和<ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>，當您具現化<ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>藉由呼叫物件<ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph>建構函式，長度和容量<ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>執行個體所能成長的值超出其<ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Int64)">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">這可能是特別是當您呼叫<ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph>和<ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph>附加小型字串的方法。</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Object)">
          <source>The object to append.</source>
          <target state="translated">要附加的物件。</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Object)">
          <source>Appends the string representation of a specified object to this instance.</source>
          <target state="translated">將指定物件的字串表示附加至這個執行個體。</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Object)">
          <source>A reference to this instance after the append operation has completed.</source>
          <target state="translated">完成附加作業之後，這個執行個體的參考。</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Object%29&gt;</ph> method modifies the existing instance of this class; it does not return a new class instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Object%29&gt;</ph>方法會修改現有的執行個體，這個類別，它不會傳回新的類別執行個體。</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Object)">
          <source>Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object, as the following example illustrates.</source>
          <target state="translated">因為這個緣故，您可以呼叫方法或屬性上現有的參考，而且您沒有指派傳回值，<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>物件，如下列範例所示。</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Object)">
          <source>It defines a <ph id="ph1">`Dog`</ph> class, creates a <ph id="ph2">`Dog`</ph> object, and makes three calls to the <ph id="ph3">&lt;xref:System.Text.StringBuilder.Append%2A&gt;</ph> method to create a string that contains the dog's name and breed.</source>
          <target state="translated">它會定義<ph id="ph1">`Dog`</ph>類別，建立<ph id="ph2">`Dog`</ph>物件和三個呼叫<ph id="ph3">&lt;xref:System.Text.StringBuilder.Append%2A&gt;</ph>方法來建立包含小狗的名稱和品種的字串。</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Object%29&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.Object.ToString%2A?displayProperty=nameWithType&gt;</ph> method to get the string representation of <ph id="ph3">`value`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Object%29&gt;</ph>方法呼叫<ph id="ph2">&lt;xref:System.Object.ToString%2A?displayProperty=nameWithType&gt;</ph>方法來取得的字串表示<ph id="ph3">`value`</ph>。</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Object)">
          <source>If <ph id="ph1">`value`</ph> is <ph id="ph2">`null`</ph>, no changes are made to the <ph id="ph3">&lt;xref:System.Text.StringBuilder&gt;</ph> object.</source>
          <target state="translated">如果<ph id="ph1">`value`</ph>是<ph id="ph2">`null`</ph>，不會變更以<ph id="ph3">&lt;xref:System.Text.StringBuilder&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Object)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">視需要調整此執行個體的容量。</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Object)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">加大此執行個體的值可能會超過 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Object)">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated">在<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>和<ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>，當您具現化<ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>藉由呼叫物件<ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph>建構函式，長度和容量<ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>執行個體所能成長的值超出其<ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Object)">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">這可能是特別是當您呼叫<ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph>和<ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph>附加小型字串的方法。</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.SByte)">
          <source>The value to append.</source>
          <target state="translated">要附加的值。</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.SByte)">
          <source>Appends the string representation of a specified 8-bit signed integer to this instance.</source>
          <target state="translated">將指定的 8 位元帶正負號的整數之字串表示附加至這個執行個體。</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.SByte)">
          <source>A reference to this instance after the append operation has completed.</source>
          <target state="translated">完成附加作業之後，這個執行個體的參考。</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.SByte)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.SByte%29&gt;</ph> method modifies the existing instance of this class; it does not return a new class instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.SByte%29&gt;</ph>方法會修改現有的執行個體，這個類別，它不會傳回新的類別執行個體。</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.SByte)">
          <source>Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object, as the following example illustrates.</source>
          <target state="translated">因為這個緣故，您可以呼叫方法或屬性上現有的參考，而且您沒有指派傳回值，<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>物件，如下列範例所示。</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.SByte)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.SByte%29&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.SByte.ToString%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> method  to get the string representation of <ph id="ph3">`value`</ph> for the current culture.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.SByte%29&gt;</ph>方法呼叫<ph id="ph2">&lt;xref:System.SByte.ToString%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph>方法來取得的字串表示<ph id="ph3">`value`</ph>目前的文化特性。</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.SByte)">
          <source>To control the formatting of <ph id="ph1">`value`</ph>, call the <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph> method.</source>
          <target state="translated">若要控制格式設定的<ph id="ph1">`value`</ph>，呼叫<ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.SByte)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">視需要調整此執行個體的容量。</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.SByte)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">加大此執行個體的值可能會超過 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.SByte)">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated">在<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>和<ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>，當您具現化<ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>藉由呼叫物件<ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph>建構函式，長度和容量<ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>執行個體所能成長的值超出其<ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.SByte)">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">這可能是特別是當您呼叫<ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph>和<ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph>附加小型字串的方法。</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Single)">
          <source>The value to append.</source>
          <target state="translated">要附加的值。</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Single)">
          <source>Appends the string representation of a specified single-precision floating-point number to this instance.</source>
          <target state="translated">將指定的單精確度浮點數之字串表示附加至這個執行個體。</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Single)">
          <source>A reference to this instance after the append operation has completed.</source>
          <target state="translated">完成附加作業之後，這個執行個體的參考。</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Single)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Single%29&gt;</ph> method modifies the existing instance of this class; it does not return a new class instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Single%29&gt;</ph>方法會修改現有的執行個體，這個類別，它不會傳回新的類別執行個體。</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Single)">
          <source>Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object, as the following example illustrates.</source>
          <target state="translated">因為這個緣故，您可以呼叫方法或屬性上現有的參考，而且您沒有指派傳回值，<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>物件，如下列範例所示。</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Single)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Single%29&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.Single.ToString%2A?displayProperty=nameWithType&gt;</ph> method to get the string representation of <ph id="ph3">`value`</ph> for the current culture.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Single%29&gt;</ph>方法呼叫<ph id="ph2">&lt;xref:System.Single.ToString%2A?displayProperty=nameWithType&gt;</ph>方法來取得的字串表示<ph id="ph3">`value`</ph>目前的文化特性。</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Single)">
          <source>To control the formatting of <ph id="ph1">`value`</ph>, call the <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph> method.</source>
          <target state="translated">若要控制格式設定的<ph id="ph1">`value`</ph>，呼叫<ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Single)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">視需要調整此執行個體的容量。</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Single)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">加大此執行個體的值可能會超過 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Single)">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated">在<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>和<ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>，當您具現化<ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>藉由呼叫物件<ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph>建構函式，長度和容量<ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>執行個體所能成長的值超出其<ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Single)">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">這可能是特別是當您呼叫<ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph>和<ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph>附加小型字串的方法。</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.String)">
          <source>The string to append.</source>
          <target state="translated">要附加的字串。</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.String)">
          <source>Appends a copy of the specified string to this instance.</source>
          <target state="translated">將指定字串的複本附加至這個執行個體。</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.String)">
          <source>A reference to this instance after the append operation has completed.</source>
          <target state="translated">完成附加作業之後，這個執行個體的參考。</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.String%29&gt;</ph> method modifies the existing instance of this class; it does not return a new class instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.String%29&gt;</ph>方法會修改現有的執行個體，這個類別，它不會傳回新的類別執行個體。</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.String)">
          <source>Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object, as the following example illustrates.</source>
          <target state="translated">因為這個緣故，您可以呼叫方法或屬性上現有的參考，而且您沒有指派傳回值，<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>物件，如下列範例所示。</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.String)">
          <source>If <ph id="ph1">`value`</ph> is <ph id="ph2">`null`</ph>, no changes are made.</source>
          <target state="translated">如果<ph id="ph1">`value`</ph>是<ph id="ph2">`null`</ph>，會進行任何變更。</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.String)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">視需要調整此執行個體的容量。</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.String)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">加大此執行個體的值可能會超過 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.String)">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated">在<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>和<ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>，當您具現化<ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>藉由呼叫物件<ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph>建構函式，長度和容量<ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>執行個體所能成長的值超出其<ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.String)">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">這可能是特別是當您呼叫<ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph>和<ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph>附加小型字串的方法。</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.UInt16)">
          <source>The value to append.</source>
          <target state="translated">要附加的值。</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.UInt16)">
          <source>Appends the string representation of a specified 16-bit unsigned integer to this instance.</source>
          <target state="translated">將指定的 16 位元不帶正負號的整數之字串表示附加至這個執行個體。</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.UInt16)">
          <source>A reference to this instance after the append operation has completed.</source>
          <target state="translated">完成附加作業之後，這個執行個體的參考。</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.UInt16)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.UInt16%29&gt;</ph> method modifies the existing instance of this class; it does not return a new class instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.UInt16%29&gt;</ph>方法會修改現有的執行個體，這個類別，它不會傳回新的類別執行個體。</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.UInt16)">
          <source>Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object, as the following example illustrates.</source>
          <target state="translated">因為這個緣故，您可以呼叫方法或屬性上現有的參考，而且您沒有指派傳回值，<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>物件，如下列範例所示。</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.UInt16)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.UInt16%29&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.UInt16.ToString%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> method to get the string representation of <ph id="ph3">`value`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.UInt16%29&gt;</ph>方法呼叫<ph id="ph2">&lt;xref:System.UInt16.ToString%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph>方法來取得的字串表示<ph id="ph3">`value`</ph>。</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.UInt16)">
          <source>To control the formatting of <ph id="ph1">`value`</ph>, call the <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph> method.</source>
          <target state="translated">若要控制格式設定的<ph id="ph1">`value`</ph>，呼叫<ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.UInt16)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">視需要調整此執行個體的容量。</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.UInt16)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">加大此執行個體的值可能會超過 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.UInt16)">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated">在<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>和<ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>，當您具現化<ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>藉由呼叫物件<ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph>建構函式，長度和容量<ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>執行個體所能成長的值超出其<ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.UInt16)">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">這可能是特別是當您呼叫<ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph>和<ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph>附加小型字串的方法。</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.UInt32)">
          <source>The value to append.</source>
          <target state="translated">要附加的值。</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.UInt32)">
          <source>Appends the string representation of a specified 32-bit unsigned integer to this instance.</source>
          <target state="translated">將指定的 32 位元不帶正負號的整數之字串表示附加至這個執行個體。</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.UInt32)">
          <source>A reference to this instance after the append operation has completed.</source>
          <target state="translated">完成附加作業之後，這個執行個體的參考。</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.UInt32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.UInt32%29&gt;</ph> method modifies the existing instance of this class; it does not return a new class instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.UInt32%29&gt;</ph>方法會修改現有的執行個體，這個類別，它不會傳回新的類別執行個體。</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.UInt32)">
          <source>Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object, as the following example illustrates.</source>
          <target state="translated">因為這個緣故，您可以呼叫方法或屬性上現有的參考，而且您沒有指派傳回值，<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>物件，如下列範例所示。</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.UInt32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.UInt32%29&gt;</ph> calls the <ph id="ph2">&lt;xref:System.UInt32.ToString%2A?displayProperty=nameWithType&gt;</ph> method to get the string representation of <ph id="ph3">`value`</ph> for the current culture.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.UInt32%29&gt;</ph>呼叫<ph id="ph2">&lt;xref:System.UInt32.ToString%2A?displayProperty=nameWithType&gt;</ph>方法來取得的字串表示<ph id="ph3">`value`</ph>目前的文化特性。</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.UInt32)">
          <source>To control the formatting of <ph id="ph1">`value`</ph>, call the <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph> method.</source>
          <target state="translated">若要控制格式設定的<ph id="ph1">`value`</ph>，呼叫<ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.UInt32)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">視需要調整此執行個體的容量。</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.UInt32)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">加大此執行個體的值可能會超過 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.UInt32)">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated">在<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>和<ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>，當您具現化<ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>藉由呼叫物件<ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph>建構函式，長度和容量<ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>執行個體所能成長的值超出其<ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.UInt32)">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">這可能是特別是當您呼叫<ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph>和<ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph>附加小型字串的方法。</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.UInt64)">
          <source>The value to append.</source>
          <target state="translated">要附加的值。</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.UInt64)">
          <source>Appends the string representation of a specified 64-bit unsigned integer to this instance.</source>
          <target state="translated">將指定的 64 位元不帶正負號的整數之字串表示附加至這個執行個體。</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.UInt64)">
          <source>A reference to this instance after the append operation has completed.</source>
          <target state="translated">完成附加作業之後，這個執行個體的參考。</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.UInt64)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.UInt64%29&gt;</ph> method modifies the existing instance of this class; it does not return a new class instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.UInt64%29&gt;</ph>方法會修改現有的執行個體，這個類別，它不會傳回新的類別執行個體。</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.UInt64)">
          <source>Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object, as the following example illustrates.</source>
          <target state="translated">因為這個緣故，您可以呼叫方法或屬性上現有的參考，而且您沒有指派傳回值，<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>物件，如下列範例所示。</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.UInt64)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.UInt64%29&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.UInt64.ToString%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> method to get the string representation of <ph id="ph3">`value`</ph> for the current culture.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.UInt64%29&gt;</ph>方法呼叫<ph id="ph2">&lt;xref:System.UInt64.ToString%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph>方法來取得的字串表示<ph id="ph3">`value`</ph>目前的文化特性。</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.UInt64)">
          <source>To control the formatting of <ph id="ph1">`value`</ph>, call the <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph> method.</source>
          <target state="translated">若要控制格式設定的<ph id="ph1">`value`</ph>，呼叫<ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.UInt64)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">視需要調整此執行個體的容量。</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.UInt64)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">加大此執行個體的值可能會超過 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.UInt64)">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated">在<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>和<ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>，當您具現化<ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>藉由呼叫物件<ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph>建構函式，長度和容量<ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>執行個體所能成長的值超出其<ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.UInt64)">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">這可能是特別是當您呼叫<ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph>和<ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph>附加小型字串的方法。</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char,System.Int32)">
          <source>The character to append.</source>
          <target state="translated">要附加的字元。</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char,System.Int32)">
          <source>The number of times to append <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">要附加 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> 的次數。</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char,System.Int32)">
          <source>Appends a specified number of copies of the string representation of a Unicode character to this instance.</source>
          <target state="translated">將 Unicode 字元其字串表示的指定複本數附加至這個執行個體。</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char,System.Int32)">
          <source>A reference to this instance after the append operation has completed.</source>
          <target state="translated">完成附加作業之後，這個執行個體的參考。</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Char,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Char%2CSystem.Int32%29&gt;</ph> method modifies the existing instance of this class; it does not return a new class instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Char%2CSystem.Int32%29&gt;</ph>方法會修改現有的執行個體，這個類別，它不會傳回新的類別執行個體。</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Char,System.Int32)">
          <source>Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object, as the following example illustrates.</source>
          <target state="translated">因為這個緣故，您可以呼叫方法或屬性上現有的參考，而且您沒有指派傳回值，<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>物件，如下列範例所示。</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Char,System.Int32)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">視需要調整此執行個體的容量。</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="repeatCount" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="repeatCount" /&gt;</ph> 小於零。</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char,System.Int32)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char,System.Int32)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">加大此執行個體的值可能會超過 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char,System.Int32)">
          <source>Out of memory.</source>
          <target state="translated">記憶體不足。</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Char,System.Int32)">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated">在<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>和<ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>，當您具現化<ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>藉由呼叫物件<ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph>建構函式，長度和容量<ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>執行個體所能成長的值超出其<ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Char,System.Int32)">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">這可能是特別是當您呼叫<ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph>和<ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph>附加小型字串的方法。</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char*,System.Int32)">
          <source>A pointer to an array of characters.</source>
          <target state="translated">字元陣列的指標。</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char*,System.Int32)">
          <source>The number of characters in the array.</source>
          <target state="translated">陣列中的字元數。</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char*,System.Int32)">
          <source>Appends an array of Unicode characters starting at a specified address to this instance.</source>
          <target state="translated">將指定位址開頭的 Unicode 字元陣列附加至這個執行個體。</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char*,System.Int32)">
          <source>A reference to this instance after the append operation has completed.</source>
          <target state="translated">完成附加作業之後，這個執行個體的參考。</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Char*,System.Int32)">
          <source>This method appends <ph id="ph1">`valueCount`</ph> characters starting at address <ph id="ph2">`value`</ph> to the current instance.</source>
          <target state="translated">這個方法會附加<ph id="ph1">`valueCount`</ph>位址開頭的字元<ph id="ph2">`value`</ph>到目前的執行個體。</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Char*,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Char%2A%2CSystem.Int32%29&gt;</ph> method modifies the existing instance of this class; it does not return a new class instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Char%2A%2CSystem.Int32%29&gt;</ph>方法會修改現有的執行個體，這個類別，它不會傳回新的類別執行個體。</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Char*,System.Int32)">
          <source>Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object.</source>
          <target state="translated">因為這個緣故，您可以呼叫方法或屬性上現有的參考，而且您沒有指派傳回值，<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Char*,System.Int32)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">視需要調整此執行個體的容量。</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char*,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="valueCount" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="valueCount" /&gt;</ph> 小於零。</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char*,System.Int32)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char*,System.Int32)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">加大此執行個體的值可能會超過 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char*,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is a null pointer.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 是 null 指標。</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Char*,System.Int32)">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated">在<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>和<ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>，當您具現化<ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>藉由呼叫物件<ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph>建構函式，長度和容量<ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>執行個體所能成長的值超出其<ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Char*,System.Int32)">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">這可能是特別是當您呼叫<ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph>和<ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph>附加小型字串的方法。</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32)">
          <source>A character array.</source>
          <target state="translated">字元陣列。</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32)">
          <source>The starting position in <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> 中的開始位置。</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32)">
          <source>The number of characters to append.</source>
          <target state="translated">要附加的字元數。</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32)">
          <source>Appends the string representation of a specified subarray of Unicode characters to this instance.</source>
          <target state="translated">將 Unicode 字元之指定子陣列的字串表示附加至這個執行個體。</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32)">
          <source>A reference to this instance after the append operation has completed.</source>
          <target state="translated">完成附加作業之後，這個執行個體的參考。</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32)">
          <source>This method appends the specified range of characters in <ph id="ph1">`value`</ph> to the current instance.</source>
          <target state="translated">這個方法會附加指定的範圍中的字元<ph id="ph1">`value`</ph>到目前的執行個體。</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32)">
          <source>If <ph id="ph1">`value`</ph> is <ph id="ph2">`null`</ph> and <ph id="ph3">`startIndex`</ph> and <ph id="ph4">`count`</ph> are both zero, no changes are made.</source>
          <target state="translated">如果<ph id="ph1">`value`</ph>是<ph id="ph2">`null`</ph>和<ph id="ph3">`startIndex`</ph>和<ph id="ph4">`count`</ph>都是零，而不變更。</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> method modifies the existing instance of this class; it does not return a new class instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29&gt;</ph>方法會修改現有的執行個體，這個類別，它不會傳回新的類別執行個體。</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32)">
          <source>Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object, as the following example illustrates.</source>
          <target state="translated">因為這個緣故，您可以呼叫方法或屬性上現有的參考，而且您沒有指派傳回值，<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>物件，如下列範例所示。</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">視需要調整此執行個體的容量。</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>, and <ph id="ph3">&lt;paramref name="startIndex" /&gt;</ph> and <ph id="ph4">&lt;paramref name="charCount" /&gt;</ph> are not zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 是 <ph id="ph2">&lt;see langword="null" /&gt;</ph>，而 <ph id="ph3">&lt;paramref name="startIndex" /&gt;</ph> 和 <ph id="ph4">&lt;paramref name="charCount" /&gt;</ph> 不是零。</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="charCount" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="charCount" /&gt;</ph> 小於零。</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> 小於零。</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;paramref name="charCount" /&gt;</ph> is greater than the length of <ph id="ph4">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;paramref name="charCount" /&gt;</ph> 大於 <ph id="ph4">&lt;paramref name="value" /&gt;</ph> 的長度。</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">加大此執行個體的值可能會超過 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32)">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated">在<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>和<ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>，當您具現化<ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>藉由呼叫物件<ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph>建構函式，長度和容量<ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>執行個體所能成長的值超出其<ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32)">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">這可能是特別是當您呼叫<ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph>和<ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph>附加小型字串的方法。</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32)">
          <source>The string that contains the substring to append.</source>
          <target state="translated">包含要附加之子字串的字串。</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32)">
          <source>The starting position of the substring within <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> 中子字串的開始位置。</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32)">
          <source>The number of characters in <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> to append.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> 中要附加的字元數。</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32)">
          <source>Appends a copy of a specified substring to this instance.</source>
          <target state="translated">將指定子字串的複本附加至這個執行個體。</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32)">
          <source>A reference to this instance after the append operation has completed.</source>
          <target state="translated">完成附加作業之後，這個執行個體的參考。</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32)">
          <source>This method appends the specified range of characters in <ph id="ph1">`value`</ph> to the current instance.</source>
          <target state="translated">這個方法會附加指定的範圍中的字元<ph id="ph1">`value`</ph>到目前的執行個體。</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32)">
          <source>If <ph id="ph1">`value`</ph> is <ph id="ph2">`null`</ph> and <ph id="ph3">`startIndex`</ph> and <ph id="ph4">`count`</ph> are both zero, no changes are made.</source>
          <target state="translated">如果<ph id="ph1">`value`</ph>是<ph id="ph2">`null`</ph>和<ph id="ph3">`startIndex`</ph>和<ph id="ph4">`count`</ph>都是零，而不變更。</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.String%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> method modifies the existing instance of this class; it does not return a new class instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.String%2CSystem.Int32%2CSystem.Int32%29&gt;</ph>方法會修改現有的執行個體，這個類別，它不會傳回新的類別執行個體。</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32)">
          <source>Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object, as the following example illustrates.</source>
          <target state="translated">因為這個緣故，您可以呼叫方法或屬性上現有的參考，而且您沒有指派傳回值，<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>物件，如下列範例所示。</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">視需要調整此執行個體的容量。</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>, and <ph id="ph3">&lt;paramref name="startIndex" /&gt;</ph> and <ph id="ph4">&lt;paramref name="count" /&gt;</ph> are not zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 是 <ph id="ph2">&lt;see langword="null" /&gt;</ph>，而 <ph id="ph3">&lt;paramref name="startIndex" /&gt;</ph> 和 <ph id="ph4">&lt;paramref name="count" /&gt;</ph> 不是零。</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="count" /&gt;</ph> less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph> 小於零</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> 小於零</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;paramref name="count" /&gt;</ph> is greater than the length of <ph id="ph4">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;paramref name="count" /&gt;</ph> 大於 <ph id="ph4">&lt;paramref name="value" /&gt;</ph> 的長度。</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">加大此執行個體的值可能會超過 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32)">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated">在<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>和<ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>，當您具現化<ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>藉由呼叫物件<ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph>建構函式，長度和容量<ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>執行個體所能成長的值超出其<ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32)">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">這可能是特別是當您呼叫<ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph>和<ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph>附加小型字串的方法。</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" uid="T:System.Text.StringBuilder">
          <source>Appends the string returned by processing a composite format string, which contains zero or more format items, to this instance.</source>
          <target state="translated">將處理複合格式字串所傳回的字串 (其中包含零或更多的格式項目) 附加至這個執行個體。</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" uid="T:System.Text.StringBuilder">
          <source>Each format item is replaced by the string representation of a corresponding object argument.</source>
          <target state="translated">每一個格式項目會由對應之物件引數的字串表示所取代。</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>A composite format string.</source>
          <target state="translated">複合格式字串。</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>An object to format.</source>
          <target state="translated">要格式化的物件。</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>Appends the string returned by processing a composite format string, which contains zero or more format items, to this instance.</source>
          <target state="translated">將處理複合格式字串所傳回的字串 (其中包含零或更多的格式項目) 附加至這個執行個體。</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>Each format item is replaced by the string representation of a single argument.</source>
          <target state="translated">每一個格式項目都會取代為單一引數的字串表示。</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>A reference to this instance with <ph id="ph1">&lt;paramref name="format" /&gt;</ph> appended.</source>
          <target state="translated">附加 <ph id="ph1">&lt;paramref name="format" /&gt;</ph> 的執行個體參考。</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>Each format item in <ph id="ph1">&lt;paramref name="format" /&gt;</ph> is replaced by the string representation of <ph id="ph2">&lt;paramref name="arg0" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> 中的每一個格式項目都會取代為 <ph id="ph2">&lt;paramref name="arg0" /&gt;</ph> 的字串表示。</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>This method uses the <bpt id="p1">[</bpt>composite formatting feature<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> of the .NET Framework to convert the value of an object to its text representation and embed that representation in the current <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object.</source>
          <target state="translated">這個方法會使用<bpt id="p1">[</bpt>複合格式功能<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>物件的值轉換成它的文字表示，並將該表示內嵌在目前的.NET framework<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>The <ph id="ph1">`format`</ph> parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items.</source>
          <target state="translated"><ph id="ph1">`format`</ph>參數是由零個或多個文字執行混合零或多個索引的預留位置，稱為格式項目。</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>The index of the format items must be 0, to correspond to <ph id="ph1">`arg0`</ph>, the single object in the parameter list of this method.</source>
          <target state="translated">格式項目的索引必須是 0，對應至<ph id="ph1">`arg0`</ph>，這個方法的參數清單中單一物件。</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>The formatting process replaces each format item with the string representation of <ph id="ph1">`arg0`</ph>.</source>
          <target state="translated">格式化的程序的字串表示，取代每個格式項目<ph id="ph1">`arg0`</ph>。</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>The syntax of a format item is as follows:</source>
          <target state="translated">格式項目的語法如下所示：</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>{<bpt id="p1">*</bpt>index<ept id="p1">*</ept>[,<bpt id="p2">*</bpt>length<ept id="p2">*</ept>][:<bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]}</source>
          <target state="translated">{<bpt id="p1">*</bpt>索引<ept id="p1">*</ept>[，<bpt id="p2">*</bpt>長度<ept id="p2">*</ept>] [:<bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]}</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>Elements in square brackets are optional.</source>
          <target state="translated">在方括號中的元素是選擇性的元素。</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>The following table describes each element.</source>
          <target state="translated">下表說明每個元素。</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>Element</source>
          <target state="translated">元素</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source><bpt id="p1">*</bpt>index<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>index<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>The zero-based position in the parameter list of the object to be formatted.</source>
          <target state="translated">參數清單中要格式化之物件的以零為起始位置。</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>If the object specified by <bpt id="p1">*</bpt>index<ept id="p1">*</ept> is <ph id="ph1">`null`</ph>, the format item is replaced by <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">如果所指定的物件<bpt id="p1">*</bpt>索引<ept id="p1">*</ept>是<ph id="ph1">`null`</ph>，格式項目都會取代<ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>If there is no parameter in the <bpt id="p1">*</bpt>index<ept id="p1">*</ept> position, a <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> is thrown.</source>
          <target state="translated">如果在沒有參數<bpt id="p1">*</bpt>索引<ept id="p1">*</ept>位置<ph id="ph1">&lt;xref:System.FormatException&gt;</ph>就會擲回。</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>,<bpt id="p1">*</bpt>length<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>長度<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>The minimum number of characters in the string representation of the parameter.</source>
          <target state="translated">在參數的字串表示的字元數目下限。</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>If positive, the parameter is right-aligned; if negative, it is left-aligned.</source>
          <target state="translated">如果是正數，參數是靠右對齊。如果是負數，它是靠左對齊。</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></source>
          <target state="translated">:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>A standard or custom format string that is supported by the parameter.</source>
          <target state="translated">標準或自訂格式字串所支援的參數。</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>For the standard and custom format strings used with date and time values, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</source>
          <target state="translated">搭配日期和時間值的標準和自訂格式字串，請參閱<bpt id="p1">[</bpt>標準日期和時間格式字串<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept>和<bpt id="p2">[</bpt>自訂日期和時間格式字串<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>。</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>For the standard and custom format strings used with numeric values, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">搭配數值使用標準和自訂格式字串，請參閱<bpt id="p1">[</bpt>標準數值格式字串<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>和<bpt id="p2">[</bpt>自訂數值格式字串<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>。</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>For the standard format strings used with enumerations, see <bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</source>
          <target state="translated">列舉型別搭配使用的標準格式字串，請參閱<bpt id="p1">[</bpt>列舉格式字串<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>。</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source><ph id="ph1">`arg0`</ph> represents the object to be formatted.</source>
          <target state="translated"><ph id="ph1">`arg0`</ph> 表示要格式化的物件。</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>Each format item in <ph id="ph1">`format`</ph> is replaced with the string representation of <ph id="ph2">`arg0`</ph>.</source>
          <target state="translated">中的每個格式項目<ph id="ph1">`format`</ph>會被取代的字串表示<ph id="ph2">`arg0`</ph>。</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>If the format item includes <ph id="ph1">`formatString`</ph> and <ph id="ph2">`arg0`</ph> implements the <ph id="ph3">&lt;xref:System.IFormattable&gt;</ph> interface, then <ph id="ph4">`arg0.ToString(formatString, null)`</ph> defines the formatting.</source>
          <target state="translated">如果格式項目包含<ph id="ph1">`formatString`</ph>和<ph id="ph2">`arg0`</ph>實作<ph id="ph3">&lt;xref:System.IFormattable&gt;</ph>介面，然後<ph id="ph4">`arg0.ToString(formatString, null)`</ph>定義的格式。</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>Otherwise, <ph id="ph1">`arg0.ToString()`</ph> defines the formatting.</source>
          <target state="translated">否則，<ph id="ph1">`arg0.ToString()`</ph>定義的格式。</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>If the string assigned to <ph id="ph1">`format`</ph> is "Thank you for your donation of {0:####} cans of food to our charitable organization."</source>
          <target state="translated">如果字串指派給<ph id="ph1">`format`</ph>是 「 感謝您捐贈 {0: # # #} 罐食物給本慈善組織。 」</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>and <ph id="ph1">`arg0`</ph> is an integer with the value 10, the return value will be "Thank you for your donation of 10 cans of food to our charitable organization."</source>
          <target state="translated">和<ph id="ph1">`arg0`</ph>是一個整數值為 10，傳回值將是 「 感謝您捐贈 10 罐食物給本慈善組織。 」</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph> method.</source>
          <target state="translated">下列範例會示範<ph id="ph1">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> 無效。</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>The index of a format item is less than 0 (zero), or greater than or equal to 1.</source>
          <target state="translated">格式項目的索引小於 0 (零) 或大於等於 1。</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>The length of the expanded string would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">展開後的字串長度會超過 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated">在<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>和<ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>，當您具現化<ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>藉由呼叫物件<ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph>建構函式，長度和容量<ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>執行個體所能成長的值超出其<ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">這可能是特別是當您呼叫<ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph>和<ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph>附加小型字串的方法。</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>A composite format string.</source>
          <target state="translated">複合格式字串。</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>An array of objects to format.</source>
          <target state="translated">要格式化的物件陣列。</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>Appends the string returned by processing a composite format string, which contains zero or more format items, to this instance.</source>
          <target state="translated">將處理複合格式字串所傳回的字串 (其中包含零或更多的格式項目) 附加至這個執行個體。</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>Each format item is replaced by the string representation of a corresponding argument in a parameter array.</source>
          <target state="translated">每一個格式項目會由參數陣列中對應之引數的字串表示所取代。</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>A reference to this instance with <ph id="ph1">&lt;paramref name="format" /&gt;</ph> appended.</source>
          <target state="translated">附加 <ph id="ph1">&lt;paramref name="format" /&gt;</ph> 的執行個體參考。</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>Each format item in <ph id="ph1">&lt;paramref name="format" /&gt;</ph> is replaced by the string representation of the corresponding object argument.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> 中的每一個格式項目會由對應之物件引數的字串表示所取代。</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>This method uses the <bpt id="p1">[</bpt>composite formatting feature<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> of the .NET Framework to convert the value of an object to its text representation and embed that representation in the current <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object.</source>
          <target state="translated">這個方法會使用<bpt id="p1">[</bpt>複合格式功能<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>物件的值轉換成它的文字表示，並將該表示內嵌在目前的.NET framework<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>The <ph id="ph1">`format`</ph> parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to objects in the parameter list of this method.</source>
          <target state="translated"><ph id="ph1">`format`</ph>參數是由零個或多個文字執行混合零或多個索引的預留位置，稱為格式項目，這個方法的參數清單中的物件相對應。</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>The formatting process replaces each format item with the string representation of the corresponding object.</source>
          <target state="translated">格式化的程序內對應物件的字串表示，取代每個格式項目。</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>The syntax of a format item is as follows:</source>
          <target state="translated">格式項目的語法如下所示：</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>{<bpt id="p1">*</bpt>index<ept id="p1">*</ept>[,<bpt id="p2">*</bpt>length<ept id="p2">*</ept>][:<bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]}</source>
          <target state="translated">{<bpt id="p1">*</bpt>索引<ept id="p1">*</ept>[，<bpt id="p2">*</bpt>長度<ept id="p2">*</ept>] [:<bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]}</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>Elements in square brackets are optional.</source>
          <target state="translated">在方括號中的元素是選擇性的元素。</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>The following table describes each element.</source>
          <target state="translated">下表說明每個元素。</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>Element</source>
          <target state="translated">元素</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source><bpt id="p1">*</bpt>index<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>index<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>The zero-based position in the parameter list of the object to be formatted.</source>
          <target state="translated">參數清單中要格式化之物件的以零為起始位置。</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>If the object specified by <bpt id="p1">*</bpt>index<ept id="p1">*</ept> is <ph id="ph1">`null`</ph>, the format item is replaced by <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">如果所指定的物件<bpt id="p1">*</bpt>索引<ept id="p1">*</ept>是<ph id="ph1">`null`</ph>，格式項目都會取代<ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>If there is no parameter in the <bpt id="p1">*</bpt>index<ept id="p1">*</ept> position, a <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> is thrown.</source>
          <target state="translated">如果在沒有參數<bpt id="p1">*</bpt>索引<ept id="p1">*</ept>位置<ph id="ph1">&lt;xref:System.FormatException&gt;</ph>就會擲回。</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>,<bpt id="p1">*</bpt>length<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>長度<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>The minimum number of characters in the string representation of the parameter.</source>
          <target state="translated">在參數的字串表示的字元數目下限。</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>If positive, the parameter is right-aligned; if negative, it is left-aligned.</source>
          <target state="translated">如果是正數，參數是靠右對齊。如果是負數，它是靠左對齊。</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></source>
          <target state="translated">:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>A standard or custom format string that is supported by the parameter.</source>
          <target state="translated">標準或自訂格式字串所支援的參數。</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>For the standard and custom format strings used with date and time values, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</source>
          <target state="translated">搭配日期和時間值的標準和自訂格式字串，請參閱<bpt id="p1">[</bpt>標準日期和時間格式字串<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept>和<bpt id="p2">[</bpt>自訂日期和時間格式字串<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>。</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>For the standard and custom format strings used with numeric values, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">搭配數值使用標準和自訂格式字串，請參閱<bpt id="p1">[</bpt>標準數值格式字串<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>和<bpt id="p2">[</bpt>自訂數值格式字串<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>。</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>For the standard format strings used with enumerations, see <bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</source>
          <target state="translated">列舉型別搭配使用的標準格式字串，請參閱<bpt id="p1">[</bpt>列舉格式字串<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>。</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source><ph id="ph1">`args`</ph> represents the objects to be formatted.</source>
          <target state="translated"><ph id="ph1">`args`</ph> 表示要格式化的物件。</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>Each format item in <ph id="ph1">`format`</ph> is replaced with the string representation of the corresponding object in <ph id="ph2">`args`</ph>.</source>
          <target state="translated">中的每個格式項目<ph id="ph1">`format`</ph>會取代中的對應物件的字串表示<ph id="ph2">`args`</ph>。</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>If the format item includes <ph id="ph1">`formatString`</ph> and the corresponding object in <ph id="ph2">`args`</ph> implements the <ph id="ph3">&lt;xref:System.IFormattable&gt;</ph> interface, then <ph id="ph4">`args[index].ToString(formatString, provider)`</ph> defines the formatting.</source>
          <target state="translated">如果格式項目包含<ph id="ph1">`formatString`</ph>內對應物件和<ph id="ph2">`args`</ph>實作<ph id="ph3">&lt;xref:System.IFormattable&gt;</ph>介面，然後<ph id="ph4">`args[index].ToString(formatString, provider)`</ph>定義的格式。</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>Otherwise, <ph id="ph1">`args[index].ToString()`</ph> defines the formatting.</source>
          <target state="translated">否則，<ph id="ph1">`args[index].ToString()`</ph>定義的格式。</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>If the string assigned to <ph id="ph1">`format`</ph> is "Thank you for your donation of {0:####} cans of food to our charitable organization."</source>
          <target state="translated">如果字串指派給<ph id="ph1">`format`</ph>是 「 感謝您捐贈 {0: # # #} 罐食物給本慈善組織。 」</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>and <ph id="ph1">`arg0`</ph> is an integer with the value 10, the return value will be "Thank you for your donation of 10 cans of food to our charitable organization."</source>
          <target state="translated">和<ph id="ph1">`arg0`</ph>是一個整數值為 10，傳回值將是 「 感謝您捐贈 10 罐食物給本慈善組織。 」</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph> method.</source>
          <target state="translated">下列範例會示範<ph id="ph1">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> or <ph id="ph2">&lt;paramref name="args" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="args" /&gt;</ph> 為 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> 無效。</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>The index of a format item is less than 0 (zero), or greater than or equal to the length of the <ph id="ph1">&lt;paramref name="args" /&gt;</ph> array.</source>
          <target state="translated">格式項目的索引小於 0 (零)，或者大於或等於 <ph id="ph1">&lt;paramref name="args" /&gt;</ph> 陣列的長度。</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>The length of the expanded string would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">展開後的字串長度會超過 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated">在<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>和<ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>，當您具現化<ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>藉由呼叫物件<ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph>建構函式，長度和容量<ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>執行個體所能成長的值超出其<ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">這可能是特別是當您呼叫<ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph>和<ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph>附加小型字串的方法。</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">物件，提供特定文化特性格式資訊。</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>A composite format string.</source>
          <target state="translated">複合格式字串。</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>The object to format.</source>
          <target state="translated">要格式化的物件。</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>Appends the string returned by processing a composite format string, which contains zero or more format items, to this instance.</source>
          <target state="translated">將處理複合格式字串所傳回的字串 (其中包含零或更多的格式項目) 附加至這個執行個體。</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>Each format item is replaced by the string representation of a single argument using a specified format provider.</source>
          <target state="translated">使用指定的格式提供者，將每個格式項目取代為單一引數的字串表示。</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>A reference to this instance after the append operation has completed.</source>
          <target state="translated">完成附加作業之後，這個執行個體的參考。</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>After the append operation, this instance contains any data that existed before the operation, suffixed by a copy of <ph id="ph1">&lt;paramref name="format" /&gt;</ph> in which any format specification is replaced by the string representation of <ph id="ph2">&lt;paramref name="arg0" /&gt;</ph>.</source>
          <target state="translated">在附加作業之後，這個執行個體會包含作業前已經存在的所有資料，並後置有 <ph id="ph1">&lt;paramref name="format" /&gt;</ph> 的複本，其中的任何格式規格都會由 <ph id="ph2">&lt;paramref name="arg0" /&gt;</ph> 的字串表示所取代。</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>This method uses the  <bpt id="p1">[</bpt>composite formatting feature<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> of the .NET Framework to convert the value of <ph id="ph1">`arg0`</ph> to its text representation and embed that representation in the current <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> object.</source>
          <target state="translated">這個方法會使用<bpt id="p1">[</bpt>複合格式功能<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>要轉換的值的.NET framework<ph id="ph1">`arg0`</ph>為它的文字表示並將該表示內嵌在目前<ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>The <ph id="ph1">`format`</ph> parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items.</source>
          <target state="translated"><ph id="ph1">`format`</ph>參數是由零個或多個文字執行混合零或多個索引的預留位置，稱為格式項目。</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>The index of each format item must be zero (0) since this method includes an argument list with a single argument.</source>
          <target state="translated">每個格式項目的索引必須是零 (0)，因為這個方法包含使用單一引數的引數清單。</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>The formatting process replaces each format item with the string representation of <ph id="ph1">`arg0`</ph>.</source>
          <target state="translated">格式化的程序的字串表示，取代每個格式項目<ph id="ph1">`arg0`</ph>。</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>The syntax of a format item is as follows:</source>
          <target state="translated">格式項目的語法如下所示：</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>{<bpt id="p1">*</bpt>index<ept id="p1">*</ept>[,<bpt id="p2">*</bpt>length<ept id="p2">*</ept>][:<bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]}</source>
          <target state="translated">{<bpt id="p1">*</bpt>索引<ept id="p1">*</ept>[，<bpt id="p2">*</bpt>長度<ept id="p2">*</ept>] [:<bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]}</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>Elements in square brackets are optional.</source>
          <target state="translated">在方括號中的元素是選擇性的元素。</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>The following table describes each element.</source>
          <target state="translated">下表說明每個元素。</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>Element</source>
          <target state="translated">元素</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source><bpt id="p1">*</bpt>index<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>index<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>The zero-based position in the parameter list of the object to be formatted.</source>
          <target state="translated">參數清單中要格式化之物件的以零為起始位置。</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>If the object specified by <bpt id="p1">*</bpt>index<ept id="p1">*</ept> is <ph id="ph1">`null`</ph>, the format item is replaced by <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">如果所指定的物件<bpt id="p1">*</bpt>索引<ept id="p1">*</ept>是<ph id="ph1">`null`</ph>，格式項目都會取代<ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>In this case, since the <ph id="ph1">&lt;xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%29&gt;</ph> method has a single argument in the argument list, the value of <bpt id="p1">*</bpt>index<ept id="p1">*</ept> must always be 0.</source>
          <target state="translated">在此情況下，因為<ph id="ph1">&lt;xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%29&gt;</ph>方法具有單一引數在引數清單中的值<bpt id="p1">*</bpt>索引<ept id="p1">*</ept>必須一律為 0。</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>If it is not, a <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> is thrown.</source>
          <target state="translated">如果不是，<ph id="ph1">&lt;xref:System.FormatException&gt;</ph>就會擲回。</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>,<bpt id="p1">*</bpt>length<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>長度<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>The minimum number of characters in the string representation of the parameter.</source>
          <target state="translated">在參數的字串表示的字元數目下限。</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>If positive, the parameter is right-aligned; if negative, it is left-aligned.</source>
          <target state="translated">如果是正數，參數是靠右對齊。如果是負數，它是靠左對齊。</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></source>
          <target state="translated">:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>A standard or custom format string that is supported by the parameter.</source>
          <target state="translated">標準或自訂格式字串所支援的參數。</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>For the standard and custom format strings used with date and time values, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</source>
          <target state="translated">搭配日期和時間值的標準和自訂格式字串，請參閱<bpt id="p1">[</bpt>標準日期和時間格式字串<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept>和<bpt id="p2">[</bpt>自訂日期和時間格式字串<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>。</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>For the standard and custom format strings used with numeric values, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">搭配數值使用標準和自訂格式字串，請參閱<bpt id="p1">[</bpt>標準數值格式字串<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>和<bpt id="p2">[</bpt>自訂數值格式字串<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>。</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>For the standard format strings used with enumerations, see <bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</source>
          <target state="translated">列舉型別搭配使用的標準格式字串，請參閱<bpt id="p1">[</bpt>列舉格式字串<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>。</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>The <ph id="ph1">`provider`</ph> parameter specifies an <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> implementation that can provide formatting information for the objects in <ph id="ph3">`args`</ph>.</source>
          <target state="translated"><ph id="ph1">`provider`</ph>參數會指定<ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph>可以提供格式設定資訊中的物件的實作<ph id="ph3">`args`</ph>。</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source><ph id="ph1">`provider`</ph> can be any of the following:</source>
          <target state="translated"><ph id="ph1">`provider`</ph> 可以是下列任何項目：</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that provides culture-specific formatting information.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph>物件，提供特定文化特性格式資訊。</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides culture-specific formatting information for <ph id="ph2">`arg0`</ph> if it is a numeric value.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>物件，提供特定文化特性格式資訊<ph id="ph2">`arg0`</ph>如果它是一個數值。</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object that provides culture-specific formatting information for <ph id="ph2">`arg0`</ph> if it is a date and time value.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph>物件，提供特定文化特性格式資訊<ph id="ph2">`arg0`</ph>是否為日期和時間值。</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>A custom <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> implementation that provides formatting information for <ph id="ph2">`arg0`</ph>.</source>
          <target state="translated">自訂<ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph>實作，提供格式設定資訊<ph id="ph2">`arg0`</ph>。</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>Typically, such an implementation also implements the <ph id="ph1">&lt;xref:System.ICustomFormatter&gt;</ph> interface.</source>
          <target state="translated">一般來說，這類實作也會實作<ph id="ph1">&lt;xref:System.ICustomFormatter&gt;</ph>介面。</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>If the <ph id="ph1">`provider`</ph> parameter is <ph id="ph2">`null`</ph>, formatting information is obtained from the current culture.</source>
          <target state="translated">如果<ph id="ph1">`provider`</ph>參數是<ph id="ph2">`null`</ph>、 格式設定資訊取自目前文化特性。</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source><ph id="ph1">`arg0`</ph> represents the object to be formatted.</source>
          <target state="translated"><ph id="ph1">`arg0`</ph> 表示要格式化的物件。</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>Each format item in <ph id="ph1">`format`</ph> is replaced with the string representation of <ph id="ph2">`arg0`</ph>.</source>
          <target state="translated">中的每個格式項目<ph id="ph1">`format`</ph>會被取代的字串表示<ph id="ph2">`arg0`</ph>。</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>If the format item includes <ph id="ph1">`formatString`</ph> and <ph id="ph2">`arg0`</ph> implements the <ph id="ph3">&lt;xref:System.IFormattable&gt;</ph> interface, then <ph id="ph4">`arg0.ToString(formatString, provider)`</ph> defines the formatting.</source>
          <target state="translated">如果格式項目包含<ph id="ph1">`formatString`</ph>和<ph id="ph2">`arg0`</ph>實作<ph id="ph3">&lt;xref:System.IFormattable&gt;</ph>介面，然後<ph id="ph4">`arg0.ToString(formatString, provider)`</ph>定義的格式。</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>Otherwise, <ph id="ph1">`arg0.ToString()`</ph> defines the formatting.</source>
          <target state="translated">否則，<ph id="ph1">`arg0.ToString()`</ph>定義的格式。</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>The following includes two calls to the <ph id="ph1">&lt;xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%29&gt;</ph> method.</source>
          <target state="translated">下列包含兩個呼叫<ph id="ph1">&lt;xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%29&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>Both use the formatting conventions of the English-Great Britain (en-GB) culture.</source>
          <target state="translated">同時使用英國英文 (en GB) 文化特性的格式設定慣例。</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>The first inserts the string representation of a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> value currency in a result string.</source>
          <target state="translated">第一個插入的字串表示<ph id="ph1">&lt;xref:System.Decimal&gt;</ph>值結果字串中的貨幣。</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>The second inserts a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> value in two places in a result string, the first including only the short date string and the second the short time string.</source>
          <target state="translated">第二個插入<ph id="ph1">&lt;xref:System.DateTime&gt;</ph>字串值在結果中的兩個位置，第一個包括僅簡短日期字串和第二個短時間字串。</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> 無效。</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>The index of a format item is less than 0 (zero), or greater than or equal to one (1).</source>
          <target state="translated">格式項目的索引小於 0 (零) 或大於等於 1。</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>The length of the expanded string would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">展開後的字串長度會超過 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated">在<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>和<ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>，當您具現化<ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>藉由呼叫物件<ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph>建構函式，長度和容量<ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>執行個體所能成長的值超出其<ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">這可能是特別是當您呼叫<ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph>和<ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph>附加小型字串的方法。</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">物件，提供特定文化特性格式資訊。</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>A composite format string.</source>
          <target state="translated">複合格式字串。</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>An array of objects to format.</source>
          <target state="translated">要格式化的物件陣列。</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>Appends the string returned by processing a composite format string, which contains zero or more format items, to this instance.</source>
          <target state="translated">將處理複合格式字串所傳回的字串 (其中包含零或更多的格式項目) 附加至這個執行個體。</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>Each format item is replaced by the string representation of a corresponding argument in a parameter array using a specified format provider.</source>
          <target state="translated">每一個格式項目會由參數陣列 (此參數陣列使用所指定的格式提供者) 中對應之物件引數的字串表示所取代。</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>A reference to this instance after the append operation has completed.</source>
          <target state="translated">完成附加作業之後，這個執行個體的參考。</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>After the append operation, this instance contains any data that existed before the operation, suffixed by a copy of <ph id="ph1">&lt;paramref name="format" /&gt;</ph> where any format specification is replaced by the string representation of the corresponding object argument.</source>
          <target state="translated">在附加作業之後，此執行個體會包含此作業之前已存在的所有資料，並後置有 <ph id="ph1">&lt;paramref name="format" /&gt;</ph> 的複本，其中的任何格式規格都會由對應物件引數的字串表示所取代。</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>This method uses the <bpt id="p1">[</bpt>composite formatting feature<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> of the .NET Framework to convert the value of an object to its text representation and embed that representation in the current <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object.</source>
          <target state="translated">這個方法會使用<bpt id="p1">[</bpt>複合格式功能<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>物件的值轉換成它的文字表示，並將該表示內嵌在目前的.NET framework<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>The <ph id="ph1">`format`</ph> parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to objects in the parameter list of this method.</source>
          <target state="translated"><ph id="ph1">`format`</ph>參數是由零個或多個文字執行混合零或多個索引的預留位置，稱為格式項目，這個方法的參數清單中的物件相對應。</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>The formatting process replaces each format item with the string representation of the corresponding object.</source>
          <target state="translated">格式化的程序內對應物件的字串表示，取代每個格式項目。</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>The syntax of a format item is as follows:</source>
          <target state="translated">格式項目的語法如下所示：</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>{<bpt id="p1">*</bpt>index<ept id="p1">*</ept>[,<bpt id="p2">*</bpt>length<ept id="p2">*</ept>][:<bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]}</source>
          <target state="translated">{<bpt id="p1">*</bpt>索引<ept id="p1">*</ept>[，<bpt id="p2">*</bpt>長度<ept id="p2">*</ept>] [:<bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]}</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>Elements in square brackets are optional.</source>
          <target state="translated">在方括號中的元素是選擇性的元素。</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>The following table describes each element.</source>
          <target state="translated">下表說明每個元素。</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>Element</source>
          <target state="translated">元素</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source><bpt id="p1">*</bpt>index<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>index<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>The zero-based position in the parameter list of the object to be formatted.</source>
          <target state="translated">參數清單中要格式化之物件的以零為起始位置。</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>If the object specified by <bpt id="p1">*</bpt>index<ept id="p1">*</ept> is <ph id="ph1">`null`</ph>, the format item is replaced by <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">如果所指定的物件<bpt id="p1">*</bpt>索引<ept id="p1">*</ept>是<ph id="ph1">`null`</ph>，格式項目都會取代<ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>If there is no parameter in the <bpt id="p1">*</bpt>index<ept id="p1">*</ept> position, a <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> is thrown.</source>
          <target state="translated">如果在沒有參數<bpt id="p1">*</bpt>索引<ept id="p1">*</ept>位置<ph id="ph1">&lt;xref:System.FormatException&gt;</ph>就會擲回。</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>,<bpt id="p1">*</bpt>length<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>長度<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>The minimum number of characters in the string representation of the parameter.</source>
          <target state="translated">在參數的字串表示的字元數目下限。</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>If positive, the parameter is right-aligned; if negative, it is left-aligned.</source>
          <target state="translated">如果是正數，參數是靠右對齊。如果是負數，它是靠左對齊。</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></source>
          <target state="translated">:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>A standard or custom format string that is supported by the parameter.</source>
          <target state="translated">標準或自訂格式字串所支援的參數。</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>For the standard and custom format strings used with date and time values, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</source>
          <target state="translated">搭配日期和時間值的標準和自訂格式字串，請參閱<bpt id="p1">[</bpt>標準日期和時間格式字串<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept>和<bpt id="p2">[</bpt>自訂日期和時間格式字串<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>。</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>For the standard and custom format strings used with numeric values, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">搭配數值使用標準和自訂格式字串，請參閱<bpt id="p1">[</bpt>標準數值格式字串<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>和<bpt id="p2">[</bpt>自訂數值格式字串<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>。</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>For the standard format strings used with enumerations, see <bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</source>
          <target state="translated">列舉型別搭配使用的標準格式字串，請參閱<bpt id="p1">[</bpt>列舉格式字串<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>。</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>The <ph id="ph1">`provider`</ph> parameter specifies an <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> implementation that can provide formatting information for the objects in <ph id="ph3">`args`</ph>.</source>
          <target state="translated"><ph id="ph1">`provider`</ph>參數會指定<ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph>可以提供格式設定資訊中的物件的實作<ph id="ph3">`args`</ph>。</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source><ph id="ph1">`provider`</ph> can be any of the following:</source>
          <target state="translated"><ph id="ph1">`provider`</ph> 可以是下列任何項目：</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that provides culture-specific formatting information.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph>物件，提供特定文化特性格式資訊。</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides culture-specific formatting information for numeric values in <ph id="ph2">`args`</ph>.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>物件，提供特定文化特性格式資訊的數值<ph id="ph2">`args`</ph>。</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object that provides culture-specific formatting information for date and time values in <ph id="ph2">`args`</ph>.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph>物件，提供特定文化特性格式資訊中的日期和時間值<ph id="ph2">`args`</ph>。</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>A custom <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> implementation that provides formatting information for one or more of the objects in <ph id="ph2">`args`</ph>.</source>
          <target state="translated">自訂<ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph>實作，提供一個或多個物件的格式資訊<ph id="ph2">`args`</ph>。</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>Typically, such an implementation also implements the <ph id="ph1">&lt;xref:System.ICustomFormatter&gt;</ph> interface.</source>
          <target state="translated">一般來說，這類實作也會實作<ph id="ph1">&lt;xref:System.ICustomFormatter&gt;</ph>介面。</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>The second example in the next section illustrates an <ph id="ph1">&lt;xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph> method call with a custom <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> implementation.</source>
          <target state="translated">下一節中的第二個範例說明<ph id="ph1">&lt;xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph>方法呼叫，以自訂<ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph>實作。</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>If the <ph id="ph1">`provider`</ph> parameter is <ph id="ph2">`null`</ph>, format provider information is obtained from the current culture.</source>
          <target state="translated">如果<ph id="ph1">`provider`</ph>參數是<ph id="ph2">`null`</ph>，格式提供者資訊取自目前文化特性。</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source><ph id="ph1">`args`</ph> represents the objects to be formatted.</source>
          <target state="translated"><ph id="ph1">`args`</ph> 表示要格式化的物件。</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>Each format item in <ph id="ph1">`format`</ph> is replaced with the string representation of the corresponding object in <ph id="ph2">`args`</ph>.</source>
          <target state="translated">中的每個格式項目<ph id="ph1">`format`</ph>會取代中的對應物件的字串表示<ph id="ph2">`args`</ph>。</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>If the format item includes <ph id="ph1">`formatString`</ph> and the corresponding object in <ph id="ph2">`args`</ph> implements the <ph id="ph3">&lt;xref:System.IFormattable&gt;</ph> interface, then <ph id="ph4">`args[index].ToString(formatString, provider)`</ph> defines the formatting.</source>
          <target state="translated">如果格式項目包含<ph id="ph1">`formatString`</ph>內對應物件和<ph id="ph2">`args`</ph>實作<ph id="ph3">&lt;xref:System.IFormattable&gt;</ph>介面，然後<ph id="ph4">`args[index].ToString(formatString, provider)`</ph>定義的格式。</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>Otherwise, <ph id="ph1">`args[index].ToString()`</ph> defines the formatting.</source>
          <target state="translated">否則，<ph id="ph1">`args[index].ToString()`</ph>定義的格式。</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph> method.</source>
          <target state="translated">下列範例會示範<ph id="ph1">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>The following example defines a custom <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> implementation named <ph id="ph2">`CustomerFormatter`</ph> that formats a 10-digit customer number with hyphens after the fourth and seventh digits.</source>
          <target state="translated">下列範例會定義自訂<ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph>實作名為<ph id="ph2">`CustomerFormatter`</ph>10 位數客戶編號，以連字號格式化之後的第四個和第七個位數。</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>It is passed to the <ph id="ph1">&lt;xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph> method to create a string that includes the formatted customer number and customer name.</source>
          <target state="translated">傳遞至<ph id="ph1">&lt;xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph>方法來建立包含格式化的客戶編號和客戶名稱的字串。</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> 無效。</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>The index of a format item is less than 0 (zero), or greater than or equal to the length of the <ph id="ph1">&lt;paramref name="args" /&gt;</ph> array.</source>
          <target state="translated">格式項目的索引小於 0 (零)，或者大於或等於 <ph id="ph1">&lt;paramref name="args" /&gt;</ph> 陣列的長度。</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>The length of the expanded string would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">展開後的字串長度會超過 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated">在<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>和<ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>，當您具現化<ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>藉由呼叫物件<ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph>建構函式，長度和容量<ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>執行個體所能成長的值超出其<ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">這可能是特別是當您呼叫<ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph>和<ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph>附加小型字串的方法。</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>A composite format string.</source>
          <target state="translated">複合格式字串。</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>The first object to format.</source>
          <target state="translated">要格式化的第一個物件。</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>The second object to format.</source>
          <target state="translated">要格式化的第二個物件。</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>Appends the string returned by processing a composite format string, which contains zero or more format items, to this instance.</source>
          <target state="translated">將處理複合格式字串所傳回的字串 (其中包含零或更多的格式項目) 附加至這個執行個體。</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>Each format item is replaced by the string representation of either of two arguments.</source>
          <target state="translated">每一個格式項目都會取代為兩個引數中任一個的字串表示。</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>A reference to this instance with <ph id="ph1">&lt;paramref name="format" /&gt;</ph> appended.</source>
          <target state="translated">附加 <ph id="ph1">&lt;paramref name="format" /&gt;</ph> 的執行個體參考。</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>Each format item in <ph id="ph1">&lt;paramref name="format" /&gt;</ph> is replaced by the string representation of the corresponding object argument.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> 中的每一個格式項目會由對應之物件引數的字串表示所取代。</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>This method uses the <bpt id="p1">[</bpt>composite formatting feature<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> of the .NET Framework to convert the value of an object to its text representation and embed that representation in the current <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object.</source>
          <target state="translated">這個方法會使用<bpt id="p1">[</bpt>複合格式功能<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>物件的值轉換成它的文字表示，並將該表示內嵌在目前的.NET framework<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>The <ph id="ph1">`format`</ph> parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to <ph id="ph2">`arg0`</ph> and <ph id="ph3">`arg1`</ph>, the two objects in the parameter list of this method.</source>
          <target state="translated"><ph id="ph1">`format`</ph>參數是由零個或多個文字執行混合零或多個索引的預留位置，稱為對應至格式項目<ph id="ph2">`arg0`</ph>和<ph id="ph3">`arg1`</ph>，這個方法的參數清單中的兩個物件。</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>The formatting process replaces each format item with the string representation of the corresponding object.</source>
          <target state="translated">格式化的程序內對應物件的字串表示，取代每個格式項目。</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>The syntax of a format item is as follows:</source>
          <target state="translated">格式項目的語法如下所示：</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>{<bpt id="p1">*</bpt>index<ept id="p1">*</ept>[,<bpt id="p2">*</bpt>length<ept id="p2">*</ept>][:<bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]}</source>
          <target state="translated">{<bpt id="p1">*</bpt>索引<ept id="p1">*</ept>[，<bpt id="p2">*</bpt>長度<ept id="p2">*</ept>] [:<bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]}</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>Elements in square brackets are optional.</source>
          <target state="translated">在方括號中的元素是選擇性的元素。</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>The following table describes each element.</source>
          <target state="translated">下表說明每個元素。</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>Element</source>
          <target state="translated">元素</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source><bpt id="p1">*</bpt>index<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>index<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>The zero-based position in the parameter list of the object to be formatted.</source>
          <target state="translated">參數清單中要格式化之物件的以零為起始位置。</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>If the object specified by <bpt id="p1">*</bpt>index<ept id="p1">*</ept> is <ph id="ph1">`null`</ph>, the format item is replaced by <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">如果所指定的物件<bpt id="p1">*</bpt>索引<ept id="p1">*</ept>是<ph id="ph1">`null`</ph>，格式項目都會取代<ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>If there is no parameter in the <bpt id="p1">*</bpt>index<ept id="p1">*</ept> position, a <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> is thrown.</source>
          <target state="translated">如果在沒有參數<bpt id="p1">*</bpt>索引<ept id="p1">*</ept>位置<ph id="ph1">&lt;xref:System.FormatException&gt;</ph>就會擲回。</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>,<bpt id="p1">*</bpt>length<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>長度<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>The minimum number of characters in the string representation of the parameter.</source>
          <target state="translated">在參數的字串表示的字元數目下限。</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>If positive, the parameter is right-aligned; if negative, it is left-aligned.</source>
          <target state="translated">如果是正數，參數是靠右對齊。如果是負數，它是靠左對齊。</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></source>
          <target state="translated">:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>A standard or custom format string that is supported by the parameter.</source>
          <target state="translated">標準或自訂格式字串所支援的參數。</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>For the standard and custom format strings used with date and time values, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</source>
          <target state="translated">搭配日期和時間值的標準和自訂格式字串，請參閱<bpt id="p1">[</bpt>標準日期和時間格式字串<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept>和<bpt id="p2">[</bpt>自訂日期和時間格式字串<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>。</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>For the standard and custom format strings used with numeric values, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">搭配數值使用標準和自訂格式字串，請參閱<bpt id="p1">[</bpt>標準數值格式字串<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>和<bpt id="p2">[</bpt>自訂數值格式字串<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>。</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>For the standard format strings used with enumerations, see <bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</source>
          <target state="translated">列舉型別搭配使用的標準格式字串，請參閱<bpt id="p1">[</bpt>列舉格式字串<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>。</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source><ph id="ph1">`arg0`</ph> and <ph id="ph2">`arg1`</ph> represent the objects to be formatted.</source>
          <target state="translated"><ph id="ph1">`arg0`</ph> 和<ph id="ph2">`arg1`</ph>代表要格式化的物件。</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>Each format item in <ph id="ph1">`format`</ph> is replaced with the string representation of either <ph id="ph2">`arg0`</ph> or <ph id="ph3">`arg1`</ph>.</source>
          <target state="translated">中的每個格式項目<ph id="ph1">`format`</ph>取代中的其中一個的字串表示法<ph id="ph2">`arg0`</ph>或<ph id="ph3">`arg1`</ph>。</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>If the format item includes <ph id="ph1">`formatString`</ph> and the corresponding object implements the <ph id="ph2">&lt;xref:System.IFormattable&gt;</ph> interface, then <ph id="ph3">`arg`</ph><bpt id="p1">*</bpt>x<ept id="p1">*</ept><ph id="ph4">`.ToString(formatString, provider)`</ph> defines the formatting, where <bpt id="p2">*</bpt>x<ept id="p2">*</ept> is the index of the argument.</source>
          <target state="translated">如果格式項目包含<ph id="ph1">`formatString`</ph>和對應的物件會實作<ph id="ph2">&lt;xref:System.IFormattable&gt;</ph>介面，然後<ph id="ph3">`arg`</ph> <bpt id="p1">*</bpt>x<ept id="p1">*</ept> <ph id="ph4">`.ToString(formatString, provider)`</ph>定義格式，其中<bpt id="p2">*</bpt>x<ept id="p2">*</ept>這是引數的索引。</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>Otherwise, <ph id="ph1">`arg`</ph><bpt id="p1">*</bpt>x<ept id="p1">*</ept><ph id="ph2">`.ToString()`</ph> defines the formatting.</source>
          <target state="translated">否則， <ph id="ph1">`arg`</ph> <bpt id="p1">*</bpt>x<ept id="p1">*</ept> <ph id="ph2">`.ToString()`</ph>定義的格式。</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>If the string assigned to <ph id="ph1">`format`</ph> is "Thank you for your donation of {0:####} cans of food to our charitable organization."</source>
          <target state="translated">如果字串指派給<ph id="ph1">`format`</ph>是 「 感謝您捐贈 {0: # # #} 罐食物給本慈善組織。 」</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>and <ph id="ph1">`arg0`</ph> is an integer with the value 10, the return value will be "Thank you for your donation of 10 cans of food to our charitable organization."</source>
          <target state="translated">和<ph id="ph1">`arg0`</ph>是一個整數值為 10，傳回值將是 「 感謝您捐贈 10 罐食物給本慈善組織。 」</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph> method.</source>
          <target state="translated">下列範例會示範<ph id="ph1">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> 無效。</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>The index of a format item is less than 0 (zero), or greater than or equal to 2.</source>
          <target state="translated">格式項目的索引小於 0 (零) 或大於等於 2。</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>The length of the expanded string would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">展開後的字串長度會超過 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated">在<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>和<ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>，當您具現化<ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>藉由呼叫物件<ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph>建構函式，長度和容量<ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>執行個體所能成長的值超出其<ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">這可能是特別是當您呼叫<ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph>和<ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph>附加小型字串的方法。</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">物件，提供特定文化特性格式資訊。</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>A composite format string.</source>
          <target state="translated">複合格式字串。</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>The first object to format.</source>
          <target state="translated">要格式化的第一個物件。</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>The second object to format.</source>
          <target state="translated">要格式化的第二個物件。</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>Appends the string returned by processing a composite format string, which contains zero or more format items, to this instance.</source>
          <target state="translated">將處理複合格式字串所傳回的字串 (其中包含零或更多的格式項目) 附加至這個執行個體。</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>Each format item is replaced by the string representation of either of two arguments using a specified format provider.</source>
          <target state="translated">使用指定的格式提供者，將每個格式項目取代為兩個引數中的其中一個字串表示。</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>A reference to this instance after the append operation has completed.</source>
          <target state="translated">完成附加作業之後，這個執行個體的參考。</target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>After the append operation, this instance contains any data that existed before the operation, suffixed by a copy of <ph id="ph1">&lt;paramref name="format" /&gt;</ph> where any format specification is replaced by the string representation of the corresponding object argument.</source>
          <target state="translated">在附加作業之後，此執行個體會包含此作業之前已存在的所有資料，並後置有 <ph id="ph1">&lt;paramref name="format" /&gt;</ph> 的複本，其中的任何格式規格都會由對應物件引數的字串表示所取代。</target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>This method uses the <bpt id="p1">[</bpt>composite formatting feature<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> of the .NET Framework to convert the value of an object to its text representation and embed that representation in the current <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object.</source>
          <target state="translated">這個方法會使用<bpt id="p1">[</bpt>複合格式功能<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>物件的值轉換成它的文字表示，並將該表示內嵌在目前的.NET framework<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>The <ph id="ph1">`format`</ph> parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to objects in the parameter list of this method.</source>
          <target state="translated"><ph id="ph1">`format`</ph>參數是由零個或多個文字執行混合零或多個索引的預留位置，稱為格式項目，這個方法的參數清單中的物件相對應。</target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>The formatting process replaces each format item with the string representation of the corresponding object.</source>
          <target state="translated">格式化的程序內對應物件的字串表示，取代每個格式項目。</target>       </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>The syntax of a format item is as follows:</source>
          <target state="translated">格式項目的語法如下所示：</target>       </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>{<bpt id="p1">*</bpt>index<ept id="p1">*</ept>[,<bpt id="p2">*</bpt>length<ept id="p2">*</ept>][:<bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]}</source>
          <target state="translated">{<bpt id="p1">*</bpt>索引<ept id="p1">*</ept>[，<bpt id="p2">*</bpt>長度<ept id="p2">*</ept>] [:<bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]}</target>       </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>Elements in square brackets are optional.</source>
          <target state="translated">在方括號中的元素是選擇性的元素。</target>       </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>The following table describes each element.</source>
          <target state="translated">下表說明每個元素。</target>       </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>Element</source>
          <target state="translated">元素</target>       </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source><bpt id="p1">*</bpt>index<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>index<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>The zero-based position in the parameter list of the object to be formatted.</source>
          <target state="translated">參數清單中要格式化之物件的以零為起始位置。</target>       </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>If the object specified by <bpt id="p1">*</bpt>index<ept id="p1">*</ept> is <ph id="ph1">`null`</ph>, the format item is replaced by <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">如果所指定的物件<bpt id="p1">*</bpt>索引<ept id="p1">*</ept>是<ph id="ph1">`null`</ph>，格式項目都會取代<ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>If there is no parameter in the <bpt id="p1">*</bpt>index<ept id="p1">*</ept> position, a <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> is thrown.</source>
          <target state="translated">如果在沒有參數<bpt id="p1">*</bpt>索引<ept id="p1">*</ept>位置<ph id="ph1">&lt;xref:System.FormatException&gt;</ph>就會擲回。</target>       </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>,<bpt id="p1">*</bpt>length<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>長度<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>The minimum number of characters in the string representation of the parameter.</source>
          <target state="translated">在參數的字串表示的字元數目下限。</target>       </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>If positive, the parameter is right-aligned; if negative, it is left-aligned.</source>
          <target state="translated">如果是正數，參數是靠右對齊。如果是負數，它是靠左對齊。</target>       </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></source>
          <target state="translated">:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>A standard or custom format string that is supported by the parameter.</source>
          <target state="translated">標準或自訂格式字串所支援的參數。</target>       </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>For the standard and custom format strings used with date and time values, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</source>
          <target state="translated">搭配日期和時間值的標準和自訂格式字串，請參閱<bpt id="p1">[</bpt>標準日期和時間格式字串<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept>和<bpt id="p2">[</bpt>自訂日期和時間格式字串<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>。</target>       </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>For the standard and custom format strings used with numeric values, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">搭配數值使用標準和自訂格式字串，請參閱<bpt id="p1">[</bpt>標準數值格式字串<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>和<bpt id="p2">[</bpt>自訂數值格式字串<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>。</target>       </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>For the standard format strings used with enumerations, see <bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</source>
          <target state="translated">列舉型別搭配使用的標準格式字串，請參閱<bpt id="p1">[</bpt>列舉格式字串<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>。</target>       </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>The <ph id="ph1">`provider`</ph> parameter specifies an <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> implementation that can provide formatting information for <ph id="ph3">`arg0`</ph> and <ph id="ph4">`arg1`</ph>.</source>
          <target state="translated"><ph id="ph1">`provider`</ph>參數會指定<ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph>可以提供格式設定資訊的實作<ph id="ph3">`arg0`</ph>和<ph id="ph4">`arg1`</ph>。</target>       </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source><ph id="ph1">`provider`</ph> can be any of the following:</source>
          <target state="translated"><ph id="ph1">`provider`</ph> 可以是下列任何項目：</target>       </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that provides culture-specific formatting information.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph>物件，提供特定文化特性格式資訊。</target>       </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides culture-specific formatting information for <ph id="ph2">`arg0`</ph> or <ph id="ph3">`arg1`</ph> if they are numeric values.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>物件，提供特定文化特性格式資訊<ph id="ph2">`arg0`</ph>或<ph id="ph3">`arg1`</ph>如果它們是數值。</target>       </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object that provides culture-specific formatting information for <ph id="ph2">`arg0`</ph> or <ph id="ph3">`arg1`</ph> if they are date and time values.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph>物件，提供特定文化特性格式資訊<ph id="ph2">`arg0`</ph>或<ph id="ph3">`arg1`</ph>如果它們是日期和時間值。</target>       </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>A custom <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> implementation that provides formatting information for <ph id="ph2">`arg0`</ph> and <ph id="ph3">`arg1`</ph>.</source>
          <target state="translated">自訂<ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph>實作，提供格式設定資訊<ph id="ph2">`arg0`</ph>和<ph id="ph3">`arg1`</ph>。</target>       </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>Typically, such an implementation also implements the <ph id="ph1">&lt;xref:System.ICustomFormatter&gt;</ph> interface.</source>
          <target state="translated">一般來說，這類實作也會實作<ph id="ph1">&lt;xref:System.ICustomFormatter&gt;</ph>介面。</target>       </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>If the <ph id="ph1">`provider`</ph> parameter is <ph id="ph2">`null`</ph>, format provider information is obtained from the current culture.</source>
          <target state="translated">如果<ph id="ph1">`provider`</ph>參數是<ph id="ph2">`null`</ph>，格式提供者資訊取自目前文化特性。</target>       </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source><ph id="ph1">`arg0`</ph> and <ph id="ph2">`arg1`</ph> represent the objects to be formatted.</source>
          <target state="translated"><ph id="ph1">`arg0`</ph> 和<ph id="ph2">`arg1`</ph>代表要格式化的物件。</target>       </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>Each format item in <ph id="ph1">`format`</ph> is replaced with the string representation of the object that has the corresponding index.</source>
          <target state="translated">中的每個格式項目<ph id="ph1">`format`</ph>取代具有對應的索引物件的字串表示法。</target>       </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>If the format item includes <ph id="ph1">`formatString`</ph> and the corresponding argument implements the <ph id="ph2">&lt;xref:System.IFormattable&gt;</ph> interface, then the argument's <ph id="ph3">`ToString(formatString, provider)`</ph> method defines the formatting.</source>
          <target state="translated">如果格式項目包含<ph id="ph1">`formatString`</ph>並實作對應的引數<ph id="ph2">&lt;xref:System.IFormattable&gt;</ph>介面，則該引數的<ph id="ph3">`ToString(formatString, provider)`</ph>方法定義的格式。</target>       </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>Otherwise, the argument's <ph id="ph1">`ToString()`</ph> method defines the formatting.</source>
          <target state="translated">否則，引數的<ph id="ph1">`ToString()`</ph>方法定義的格式。</target>       </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%2CSystem.Object%29&gt;</ph> method to display time and temperature data stored in a generic <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> object.</source>
          <target state="translated">下列範例會使用<ph id="ph1">&lt;xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%2CSystem.Object%29&gt;</ph>方法，以顯示儲存在一般時間和溫度資料<ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>Note that the format string has three format items, although there are only to objects to format.</source>
          <target state="translated">請注意在格式字串有三個格式項目，雖然有所只是為了要格式化的物件。</target>       </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>This is because the first object in the list (a date and time value) is used by two format items: The first format item displays the time, and the second displays the date.</source>
          <target state="translated">這是因為清單 （日期和時間值） 中的第一個物件由兩個格式項目： 第一個格式項目顯示，並且第二個顯示的日期。</target>       </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> 無效。</target>       </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>The index of a format item is less than 0 (zero), or greater than or equal to 2 (two).</source>
          <target state="translated">格式項目的索引小於 0 (零) 或大於等於 2 (二)。</target>       </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>The length of the expanded string would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">展開後的字串長度會超過 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated">在<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>和<ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>，當您具現化<ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>藉由呼叫物件<ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph>建構函式，長度和容量<ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>執行個體所能成長的值超出其<ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">這可能是特別是當您呼叫<ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph>和<ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph>附加小型字串的方法。</target>       </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>A composite format string.</source>
          <target state="translated">複合格式字串。</target>       </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>The first object to format.</source>
          <target state="translated">要格式化的第一個物件。</target>       </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>The second object to format.</source>
          <target state="translated">要格式化的第二個物件。</target>       </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>The third object to format.</source>
          <target state="translated">要格式化的第三個物件。</target>       </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>Appends the string returned by processing a composite format string, which contains zero or more format items, to this instance.</source>
          <target state="translated">將處理複合格式字串所傳回的字串 (其中包含零或更多的格式項目) 附加至這個執行個體。</target>       </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>Each format item is replaced by the string representation of either of three arguments.</source>
          <target state="translated">每一個格式項目都會取代為三個引數中任一個的字串表示。</target>       </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>A reference to this instance with <ph id="ph1">&lt;paramref name="format" /&gt;</ph> appended.</source>
          <target state="translated">附加 <ph id="ph1">&lt;paramref name="format" /&gt;</ph> 的執行個體參考。</target>       </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>Each format item in <ph id="ph1">&lt;paramref name="format" /&gt;</ph> is replaced by the string representation of the corresponding object argument.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> 中的每一個格式項目會由對應之物件引數的字串表示所取代。</target>       </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>This method uses the <bpt id="p1">[</bpt>composite formatting feature<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> of the .NET Framework to convert the value of an object to its text representation and embed that representation in the current <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object.</source>
          <target state="translated">這個方法會使用<bpt id="p1">[</bpt>複合格式功能<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>物件的值轉換成它的文字表示，並將該表示內嵌在目前的.NET framework<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>The <ph id="ph1">`format`</ph> parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to <ph id="ph2">`arg0`</ph> through <ph id="ph3">`arg2`</ph>, the objects in the parameter list of this method.</source>
          <target state="translated"><ph id="ph1">`format`</ph>參數是由零個或多個文字執行混合零或多個索引的預留位置，稱為對應至格式項目<ph id="ph2">`arg0`</ph>透過<ph id="ph3">`arg2`</ph>，這個方法的參數清單中的物件。</target>       </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>The formatting process replaces each format item with the string representation of the corresponding object.</source>
          <target state="translated">格式化的程序內對應物件的字串表示，取代每個格式項目。</target>       </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>The syntax of a format item is as follows:</source>
          <target state="translated">格式項目的語法如下所示：</target>       </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>{<bpt id="p1">*</bpt>index<ept id="p1">*</ept>[,<bpt id="p2">*</bpt>length<ept id="p2">*</ept>][:<bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]}</source>
          <target state="translated">{<bpt id="p1">*</bpt>索引<ept id="p1">*</ept>[，<bpt id="p2">*</bpt>長度<ept id="p2">*</ept>] [:<bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]}</target>       </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>Elements in square brackets are optional.</source>
          <target state="translated">在方括號中的元素是選擇性的元素。</target>       </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>The following table describes each element.</source>
          <target state="translated">下表說明每個元素。</target>       </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>Element</source>
          <target state="translated">元素</target>       </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source><bpt id="p1">*</bpt>index<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>index<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>The zero-based position in the parameter list of the object to be formatted.</source>
          <target state="translated">參數清單中要格式化之物件的以零為起始位置。</target>       </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>If the object specified by <bpt id="p1">*</bpt>index<ept id="p1">*</ept> is <ph id="ph1">`null`</ph>, the format item is replaced by <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">如果所指定的物件<bpt id="p1">*</bpt>索引<ept id="p1">*</ept>是<ph id="ph1">`null`</ph>，格式項目都會取代<ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>If there is no parameter in the <bpt id="p1">*</bpt>index<ept id="p1">*</ept> position, a <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> is thrown.</source>
          <target state="translated">如果在沒有參數<bpt id="p1">*</bpt>索引<ept id="p1">*</ept>位置<ph id="ph1">&lt;xref:System.FormatException&gt;</ph>就會擲回。</target>       </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>,<bpt id="p1">*</bpt>length<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>長度<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>The minimum number of characters in the string representation of the parameter.</source>
          <target state="translated">在參數的字串表示的字元數目下限。</target>       </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>If positive, the parameter is right-aligned; if negative, it is left-aligned.</source>
          <target state="translated">如果是正數，參數是靠右對齊。如果是負數，它是靠左對齊。</target>       </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></source>
          <target state="translated">:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>A standard or custom format string that is supported by the parameter.</source>
          <target state="translated">標準或自訂格式字串所支援的參數。</target>       </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>For the standard and custom format strings used with date and time values, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</source>
          <target state="translated">搭配日期和時間值的標準和自訂格式字串，請參閱<bpt id="p1">[</bpt>標準日期和時間格式字串<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept>和<bpt id="p2">[</bpt>自訂日期和時間格式字串<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>。</target>       </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>For the standard and custom format strings used with numeric values, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">搭配數值使用標準和自訂格式字串，請參閱<bpt id="p1">[</bpt>標準數值格式字串<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>和<bpt id="p2">[</bpt>自訂數值格式字串<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>。</target>       </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>For the standard format strings used with enumerations, see <bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</source>
          <target state="translated">列舉型別搭配使用的標準格式字串，請參閱<bpt id="p1">[</bpt>列舉格式字串<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>。</target>       </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source><ph id="ph1">`arg0`</ph>, <ph id="ph2">`arg1`</ph>, and <ph id="ph3">`arg2`</ph> represent the objects to be formatted.</source>
          <target state="translated"><ph id="ph1">`arg0`</ph><ph id="ph2">`arg1`</ph>，和<ph id="ph3">`arg2`</ph>代表要格式化的物件。</target>       </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>Each format item in <ph id="ph1">`format`</ph> is replaced with the string representation of either <ph id="ph2">`arg0`</ph>, <ph id="ph3">`arg1`</ph>, or <ph id="ph4">`arg2`</ph>, depending on the index of the format item.</source>
          <target state="translated">中的每個格式項目<ph id="ph1">`format`</ph>取代中的其中一個的字串表示法<ph id="ph2">`arg0`</ph>， <ph id="ph3">`arg1`</ph>，或<ph id="ph4">`arg2`</ph>，視使用的格式項目索引。</target>       </trans-unit>
        <trans-unit id="903" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>If the format item includes <ph id="ph1">`formatString`</ph> and the corresponding object in <ph id="ph2">`args`</ph> implements the <ph id="ph3">&lt;xref:System.IFormattable&gt;</ph> interface, then <ph id="ph4">`arg`</ph><bpt id="p1">*</bpt>x<ept id="p1">*</ept><ph id="ph5">`.ToString(formatString, null)`</ph> defines the formatting, where <bpt id="p2">*</bpt>x<ept id="p2">*</ept> is the index of the argument.</source>
          <target state="translated">如果格式項目包含<ph id="ph1">`formatString`</ph>內對應物件和<ph id="ph2">`args`</ph>實作<ph id="ph3">&lt;xref:System.IFormattable&gt;</ph>介面，然後<ph id="ph4">`arg`</ph> <bpt id="p1">*</bpt>x<ept id="p1">*</ept> <ph id="ph5">`.ToString(formatString, null)`</ph>定義格式，其中<bpt id="p2">*</bpt>x<ept id="p2">*</ept>引數的索引。</target>       </trans-unit>
        <trans-unit id="904" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>Otherwise, <ph id="ph1">`arg`</ph><bpt id="p1">*</bpt>x<ept id="p1">*</ept><ph id="ph2">`.ToString()`</ph> defines the formatting.</source>
          <target state="translated">否則， <ph id="ph1">`arg`</ph> <bpt id="p1">*</bpt>x<ept id="p1">*</ept> <ph id="ph2">`.ToString()`</ph>定義的格式。</target>       </trans-unit>
        <trans-unit id="905" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>If the string assigned to <ph id="ph1">`format`</ph> is "Thank you for your donation of {0:####} cans of food to our charitable organization."</source>
          <target state="translated">如果字串指派給<ph id="ph1">`format`</ph>是 「 感謝您捐贈 {0: # # #} 罐食物給本慈善組織。 」</target>       </trans-unit>
        <trans-unit id="906" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>and <ph id="ph1">`arg0`</ph> is an integer with the value 10, the return value will be "Thank you for your donation of 10 cans of food to our charitable organization."</source>
          <target state="translated">和<ph id="ph1">`arg0`</ph>是一個整數值為 10，傳回值將是 「 感謝您捐贈 10 罐食物給本慈善組織。 」</target>       </trans-unit>
        <trans-unit id="907" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph> method.</source>
          <target state="translated">下列範例會示範<ph id="ph1">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="908" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="909" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> 無效。</target>       </trans-unit>
        <trans-unit id="910" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="911" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>The index of a format item is less than 0 (zero), or greater than or equal to 3.</source>
          <target state="translated">格式項目的索引小於 0 (零) 或大於等於 3。</target>       </trans-unit>
        <trans-unit id="912" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>The length of the expanded string would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">展開後的字串長度會超過 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="913" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated">在<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>和<ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>，當您具現化<ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>藉由呼叫物件<ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph>建構函式，長度和容量<ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>執行個體所能成長的值超出其<ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="914" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">這可能是特別是當您呼叫<ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph>和<ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph>附加小型字串的方法。</target>       </trans-unit>
        <trans-unit id="915" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">物件，提供特定文化特性格式資訊。</target>       </trans-unit>
        <trans-unit id="916" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>A composite format string.</source>
          <target state="translated">複合格式字串。</target>       </trans-unit>
        <trans-unit id="917" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>The first object to format.</source>
          <target state="translated">要格式化的第一個物件。</target>       </trans-unit>
        <trans-unit id="918" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>The second object to format.</source>
          <target state="translated">要格式化的第二個物件。</target>       </trans-unit>
        <trans-unit id="919" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>The third object to format.</source>
          <target state="translated">要格式化的第三個物件。</target>       </trans-unit>
        <trans-unit id="920" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>Appends the string returned by processing a composite format string, which contains zero or more format items, to this instance.</source>
          <target state="translated">將處理複合格式字串所傳回的字串 (其中包含零或更多的格式項目) 附加至這個執行個體。</target>       </trans-unit>
        <trans-unit id="921" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>Each format item is replaced by the string representation of either of three arguments using a specified format provider.</source>
          <target state="translated">使用指定的格式提供者，將每個格式項目取代為三個引數中的其中一個字串表示。</target>       </trans-unit>
        <trans-unit id="922" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>A reference to this instance after the append operation has completed.</source>
          <target state="translated">完成附加作業之後，這個執行個體的參考。</target>       </trans-unit>
        <trans-unit id="923" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>After the append operation, this instance contains any data that existed before the operation, suffixed by a copy of <ph id="ph1">&lt;paramref name="format" /&gt;</ph> where any format specification is replaced by the string representation of the corresponding object argument.</source>
          <target state="translated">在附加作業之後，此執行個體會包含此作業之前已存在的所有資料，並後置有 <ph id="ph1">&lt;paramref name="format" /&gt;</ph> 的複本，其中的任何格式規格都會由對應物件引數的字串表示所取代。</target>       </trans-unit>
        <trans-unit id="924" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>This method uses the <bpt id="p1">[</bpt>composite formatting feature<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> of the .NET Framework to convert the value of an object to its text representation and embed that representation in the current <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object.</source>
          <target state="translated">這個方法會使用<bpt id="p1">[</bpt>複合格式功能<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>物件的值轉換成它的文字表示，並將該表示內嵌在目前的.NET framework<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="925" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>The <ph id="ph1">`format`</ph> parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to objects in the parameter list of this method.</source>
          <target state="translated"><ph id="ph1">`format`</ph>參數是由零個或多個文字執行混合零或多個索引的預留位置，稱為格式項目，這個方法的參數清單中的物件相對應。</target>       </trans-unit>
        <trans-unit id="926" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>The formatting process replaces each format item with the string representation of the corresponding object.</source>
          <target state="translated">格式化的程序內對應物件的字串表示，取代每個格式項目。</target>       </trans-unit>
        <trans-unit id="927" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>The syntax of a format item is as follows:</source>
          <target state="translated">格式項目的語法如下所示：</target>       </trans-unit>
        <trans-unit id="928" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>{<bpt id="p1">*</bpt>index<ept id="p1">*</ept>[,<bpt id="p2">*</bpt>length<ept id="p2">*</ept>][:<bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]}</source>
          <target state="translated">{<bpt id="p1">*</bpt>索引<ept id="p1">*</ept>[，<bpt id="p2">*</bpt>長度<ept id="p2">*</ept>] [:<bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]}</target>       </trans-unit>
        <trans-unit id="929" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>Elements in square brackets are optional.</source>
          <target state="translated">在方括號中的元素是選擇性的元素。</target>       </trans-unit>
        <trans-unit id="930" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>The following table describes each element.</source>
          <target state="translated">下表說明每個元素。</target>       </trans-unit>
        <trans-unit id="931" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>Element</source>
          <target state="translated">元素</target>       </trans-unit>
        <trans-unit id="932" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="933" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source><bpt id="p1">*</bpt>index<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>index<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="934" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>The zero-based position in the parameter list of the object to be formatted.</source>
          <target state="translated">參數清單中要格式化之物件的以零為起始位置。</target>       </trans-unit>
        <trans-unit id="935" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>If the object specified by <bpt id="p1">*</bpt>index<ept id="p1">*</ept> is <ph id="ph1">`null`</ph>, the format item is replaced by <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">如果所指定的物件<bpt id="p1">*</bpt>索引<ept id="p1">*</ept>是<ph id="ph1">`null`</ph>，格式項目都會取代<ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="936" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>If there is no parameter in the <bpt id="p1">*</bpt>index<ept id="p1">*</ept> position, a <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> is thrown.</source>
          <target state="translated">如果在沒有參數<bpt id="p1">*</bpt>索引<ept id="p1">*</ept>位置<ph id="ph1">&lt;xref:System.FormatException&gt;</ph>就會擲回。</target>       </trans-unit>
        <trans-unit id="937" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>,<bpt id="p1">*</bpt>length<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>長度<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="938" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>The minimum number of characters in the string representation of the parameter.</source>
          <target state="translated">在參數的字串表示的字元數目下限。</target>       </trans-unit>
        <trans-unit id="939" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>If positive, the parameter is right-aligned; if negative, it is left-aligned.</source>
          <target state="translated">如果是正數，參數是靠右對齊。如果是負數，它是靠左對齊。</target>       </trans-unit>
        <trans-unit id="940" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></source>
          <target state="translated">:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="941" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>A standard or custom format string that is supported by the parameter.</source>
          <target state="translated">標準或自訂格式字串所支援的參數。</target>       </trans-unit>
        <trans-unit id="942" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>For the standard and custom format strings used with date and time values, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</source>
          <target state="translated">搭配日期和時間值的標準和自訂格式字串，請參閱<bpt id="p1">[</bpt>標準日期和時間格式字串<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept>和<bpt id="p2">[</bpt>自訂日期和時間格式字串<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>。</target>       </trans-unit>
        <trans-unit id="943" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>For the standard and custom format strings used with numeric values, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">搭配數值使用標準和自訂格式字串，請參閱<bpt id="p1">[</bpt>標準數值格式字串<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>和<bpt id="p2">[</bpt>自訂數值格式字串<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>。</target>       </trans-unit>
        <trans-unit id="944" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>For the standard format strings used with enumerations, see <bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</source>
          <target state="translated">列舉型別搭配使用的標準格式字串，請參閱<bpt id="p1">[</bpt>列舉格式字串<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>。</target>       </trans-unit>
        <trans-unit id="945" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>The <ph id="ph1">`provider`</ph> parameter specifies an <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> implementation that can provide formatting information for <ph id="ph3">`arg0`</ph> and <ph id="ph4">`arg1`</ph>.</source>
          <target state="translated"><ph id="ph1">`provider`</ph>參數會指定<ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph>可以提供格式設定資訊的實作<ph id="ph3">`arg0`</ph>和<ph id="ph4">`arg1`</ph>。</target>       </trans-unit>
        <trans-unit id="946" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source><ph id="ph1">`provider`</ph> can be any of the following:</source>
          <target state="translated"><ph id="ph1">`provider`</ph> 可以是下列任何項目：</target>       </trans-unit>
        <trans-unit id="947" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that provides culture-specific formatting information.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph>物件，提供特定文化特性格式資訊。</target>       </trans-unit>
        <trans-unit id="948" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides culture-specific formatting information for <ph id="ph2">`arg0`</ph> or <ph id="ph3">`arg1`</ph> if they are numeric values.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>物件，提供特定文化特性格式資訊<ph id="ph2">`arg0`</ph>或<ph id="ph3">`arg1`</ph>如果它們是數值。</target>       </trans-unit>
        <trans-unit id="949" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object that provides culture-specific formatting information for <ph id="ph2">`arg0`</ph>, <ph id="ph3">`arg1`</ph>, or <ph id="ph4">`arg2`</ph> if they are date and time values.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph>物件，提供特定文化特性格式資訊<ph id="ph2">`arg0`</ph>， <ph id="ph3">`arg1`</ph>，或<ph id="ph4">`arg2`</ph>如果它們是日期和時間值。</target>       </trans-unit>
        <trans-unit id="950" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>A custom <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> implementation that provides formatting information for <ph id="ph2">`arg0`</ph>,  <ph id="ph3">`arg1`</ph>, and <ph id="ph4">`arg2`</ph>.</source>
          <target state="translated">自訂<ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph>實作，提供格式設定資訊<ph id="ph2">`arg0`</ph>， <ph id="ph3">`arg1`</ph>，和<ph id="ph4">`arg2`</ph>。</target>       </trans-unit>
        <trans-unit id="951" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>Typically, such an implementation also implements the <ph id="ph1">&lt;xref:System.ICustomFormatter&gt;</ph> interface.</source>
          <target state="translated">一般來說，這類實作也會實作<ph id="ph1">&lt;xref:System.ICustomFormatter&gt;</ph>介面。</target>       </trans-unit>
        <trans-unit id="952" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>If the <ph id="ph1">`provider`</ph> parameter is <ph id="ph2">`null`</ph>, format provider information is obtained from the current culture.</source>
          <target state="translated">如果<ph id="ph1">`provider`</ph>參數是<ph id="ph2">`null`</ph>，格式提供者資訊取自目前文化特性。</target>       </trans-unit>
        <trans-unit id="953" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source><ph id="ph1">`arg0`</ph>, <ph id="ph2">`arg1`</ph>, and <ph id="ph3">`arg2`</ph> represent the objects to be formatted.</source>
          <target state="translated"><ph id="ph1">`arg0`</ph><ph id="ph2">`arg1`</ph>，和<ph id="ph3">`arg2`</ph>代表要格式化的物件。</target>       </trans-unit>
        <trans-unit id="954" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>Each format item in <ph id="ph1">`format`</ph> is replaced with the string representation of the object that has the corresponding index.</source>
          <target state="translated">中的每個格式項目<ph id="ph1">`format`</ph>取代具有對應的索引物件的字串表示法。</target>       </trans-unit>
        <trans-unit id="955" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>If the format item includes <ph id="ph1">`formatString`</ph> and the corresponding argument implements the <ph id="ph2">&lt;xref:System.IFormattable&gt;</ph> interface, then the argument's <ph id="ph3">`ToString(formatString, provider)`</ph> method defines the formatting.</source>
          <target state="translated">如果格式項目包含<ph id="ph1">`formatString`</ph>並實作對應的引數<ph id="ph2">&lt;xref:System.IFormattable&gt;</ph>介面，則該引數的<ph id="ph3">`ToString(formatString, provider)`</ph>方法定義的格式。</target>       </trans-unit>
        <trans-unit id="956" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>Otherwise, the argument's <ph id="ph1">`ToString()`</ph> method defines the formatting.</source>
          <target state="translated">否則，引數的<ph id="ph1">`ToString()`</ph>方法定義的格式。</target>       </trans-unit>
        <trans-unit id="957" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%2CSystem.Object%2CSystem.Object%29&gt;</ph> method to illustrate the result of a Boolean <ph id="ph2">`And`</ph> operation with integer values.</source>
          <target state="translated">下列範例會使用<ph id="ph1">&lt;xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%2CSystem.Object%2CSystem.Object%29&gt;</ph>方法來說明的布林值結果<ph id="ph2">`And`</ph>整數值的作業。</target>       </trans-unit>
        <trans-unit id="958" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>Note that the format string includes six format items, but the method has only three items in its argument list, because each item is formatted in two different ways.</source>
          <target state="translated">請注意，格式字串包含六個格式項目，但是方法只有三個項目在其引數清單中，因為每個項目會以兩個不同的方式格式化。</target>       </trans-unit>
        <trans-unit id="959" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="960" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> 無效。</target>       </trans-unit>
        <trans-unit id="961" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="962" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>The index of a format item is less than 0 (zero), or greater than or equal to 3 (three).</source>
          <target state="translated">格式項目的索引小於 0 (零) 或大於等於 3 (三)。</target>       </trans-unit>
        <trans-unit id="963" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>The length of the expanded string would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">展開後的字串長度會超過 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="964" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated">在<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>和<ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>，當您具現化<ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>藉由呼叫物件<ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph>建構函式，長度和容量<ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>執行個體所能成長的值超出其<ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="965" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">這可能是特別是當您呼叫<ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph>和<ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph>附加小型字串的方法。</target>       </trans-unit>
        <trans-unit id="966" translate="yes" xml:space="preserve" uid="T:System.Text.StringBuilder">
          <source>Appends the default line terminator, or a copy of a specified string and the default line terminator, to the end of this instance.</source>
          <target state="translated">將預設行結束字元，或是指定字串的複本以及預設行結束字元，附加至這個執行個體的尾端。</target>       </trans-unit>
        <trans-unit id="967" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendLine">
          <source>Appends the default line terminator to the end of the current <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object.</source>
          <target state="translated">將預設行結束字元附加至目前 <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 物件的尾端。</target>       </trans-unit>
        <trans-unit id="968" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendLine">
          <source>A reference to this instance after the append operation has completed.</source>
          <target state="translated">完成附加作業之後，這個執行個體的參考。</target>       </trans-unit>
        <trans-unit id="969" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendLine">
          <source>The default line terminator is the current value of the <ph id="ph1">&lt;xref:System.Environment.NewLine%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">預設行結束字元是目前的值<ph id="ph1">&lt;xref:System.Environment.NewLine%2A?displayProperty=nameWithType&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="970" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendLine">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">視需要調整此執行個體的容量。</target>       </trans-unit>
        <trans-unit id="971" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendLine">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.AppendLine%2A&gt;</ph> method.</source>
          <target state="translated">下列範例會示範<ph id="ph1">&lt;xref:System.Text.StringBuilder.AppendLine%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="972" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendLine">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">加大此執行個體的值可能會超過 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="973" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendLine">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated">在<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>和<ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>，當您具現化<ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>藉由呼叫物件<ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph>建構函式，長度和容量<ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>執行個體所能成長的值超出其<ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="974" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendLine">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">這可能是特別是當您呼叫<ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph>和<ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph>附加小型字串的方法。</target>       </trans-unit>
        <trans-unit id="975" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendLine(System.String)">
          <source>The string to append.</source>
          <target state="translated">要附加的字串。</target>       </trans-unit>
        <trans-unit id="976" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendLine(System.String)">
          <source>Appends a copy of the specified string followed by the default line terminator to the end of the current <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object.</source>
          <target state="translated">將後面接著預設行結束字元的指定字串複本附加至目前的 <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 物件結尾。</target>       </trans-unit>
        <trans-unit id="977" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendLine(System.String)">
          <source>A reference to this instance after the append operation has completed.</source>
          <target state="translated">完成附加作業之後，這個執行個體的參考。</target>       </trans-unit>
        <trans-unit id="978" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendLine(System.String)">
          <source>The default line terminator is the current value of the <ph id="ph1">&lt;xref:System.Environment.NewLine%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">預設行結束字元是目前的值<ph id="ph1">&lt;xref:System.Environment.NewLine%2A?displayProperty=nameWithType&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="979" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendLine(System.String)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">視需要調整此執行個體的容量。</target>       </trans-unit>
        <trans-unit id="980" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendLine(System.String)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">加大此執行個體的值可能會超過 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="981" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendLine(System.String)">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated">在<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>和<ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>，當您具現化<ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>藉由呼叫物件<ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph>建構函式，長度和容量<ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>執行個體所能成長的值超出其<ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="982" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendLine(System.String)">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">這可能是特別是當您呼叫<ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph>和<ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph>附加小型字串的方法。</target>       </trans-unit>
        <trans-unit id="983" translate="yes" xml:space="preserve" uid="P:System.Text.StringBuilder.Capacity">
          <source>Gets or sets the maximum number of characters that can be contained in the memory allocated by the current instance.</source>
          <target state="translated">取得或設定由目前執行個體配置的記憶體可以包含的最大字元數。</target>       </trans-unit>
        <trans-unit id="984" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.StringBuilder.Capacity">
          <source>The maximum number of characters that can be contained in the memory allocated by the current instance.</source>
          <target state="translated">目前執行個體配置的記憶體可以包含的最大字元數。</target>       </trans-unit>
        <trans-unit id="985" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.StringBuilder.Capacity">
          <source>Its value can range from <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.Length" /&gt;</ph> to <ph id="ph2">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">其值的範圍可從 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.Length" /&gt;</ph> 到 <ph id="ph2">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="986" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.StringBuilder.Capacity">
          <source><ph id="ph1">&lt;xref:System.Text.StringBuilder.Capacity%2A&gt;</ph> does not affect the string value of the current instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Capacity%2A&gt;</ph> 不會影響目前的執行個體的字串值。</target>       </trans-unit>
        <trans-unit id="987" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.StringBuilder.Capacity">
          <source><ph id="ph1">&lt;xref:System.Text.StringBuilder.Capacity%2A&gt;</ph> can be decreased as long as it is not less than <ph id="ph2">&lt;xref:System.Text.StringBuilder.Length%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Capacity%2A&gt;</ph> 因為它不可以減少小於<ph id="ph2">&lt;xref:System.Text.StringBuilder.Length%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="988" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.StringBuilder.Capacity">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> dynamically allocates more space when required and increases <ph id="ph2">&lt;xref:System.Text.StringBuilder.Capacity%2A&gt;</ph> accordingly.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>動態配置時所需的更多空間，並增加<ph id="ph2">&lt;xref:System.Text.StringBuilder.Capacity%2A&gt;</ph>據此。</target>       </trans-unit>
        <trans-unit id="989" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.StringBuilder.Capacity">
          <source>For performance reasons, a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> might allocate more memory than needed.</source>
          <target state="translated">基於效能考量，<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>可能會配置比所需的更多記憶體。</target>       </trans-unit>
        <trans-unit id="990" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.StringBuilder.Capacity">
          <source>The amount of memory allocated is implementation-specific.</source>
          <target state="translated">配置數量是記憶體的依實作。</target>       </trans-unit>
        <trans-unit id="991" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.StringBuilder.Capacity">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Capacity%2A&gt;</ph> property.</source>
          <target state="translated">下列範例會示範<ph id="ph1">&lt;xref:System.Text.StringBuilder.Capacity%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="992" translate="yes" xml:space="preserve" uid="P:System.Text.StringBuilder.Capacity">
          <source>The value specified for a set operation is less than the current length of this instance.</source>
          <target state="translated">為設定作業指定的值小於這個執行個體的目前長度。</target>       </trans-unit>
        <trans-unit id="993" translate="yes" xml:space="preserve" uid="P:System.Text.StringBuilder.Capacity">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="994" translate="yes" xml:space="preserve" uid="P:System.Text.StringBuilder.Capacity">
          <source>The value specified for a set operation is greater than the maximum capacity.</source>
          <target state="translated">為設定作業指定的值大於最大容量。</target>       </trans-unit>
        <trans-unit id="995" translate="yes" xml:space="preserve" uid="P:System.Text.StringBuilder.Chars(System.Int32)">
          <source>The position of the character.</source>
          <target state="translated">字元的位置。</target>       </trans-unit>
        <trans-unit id="996" translate="yes" xml:space="preserve" uid="P:System.Text.StringBuilder.Chars(System.Int32)">
          <source>Gets or sets the character at the specified character position in this instance.</source>
          <target state="translated">取得或設定這個執行個體中指定字元位置的字元。</target>       </trans-unit>
        <trans-unit id="997" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.StringBuilder.Chars(System.Int32)">
          <source>The Unicode character at position <ph id="ph1">&lt;paramref name="index" /&gt;</ph>.</source>
          <target state="translated">位置 <ph id="ph1">&lt;paramref name="index" /&gt;</ph> 上的 Unicode 字元。</target>       </trans-unit>
        <trans-unit id="998" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.StringBuilder.Chars(System.Int32)">
          <source>The <ph id="ph1">`index`</ph> parameter is the position of a character within the <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`index`</ph>參數是內的字元位置<ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="999" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.StringBuilder.Chars(System.Int32)">
          <source>The first character in the string is at index 0.</source>
          <target state="translated">在字串中的第一個字元是在索引 0。</target>       </trans-unit>
        <trans-unit id="1000" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.StringBuilder.Chars(System.Int32)">
          <source>The length of a string is the number of characters it contains.</source>
          <target state="translated">字串的長度是它所包含的字元數目。</target>       </trans-unit>
        <trans-unit id="1001" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.StringBuilder.Chars(System.Int32)">
          <source>The last accessible character of a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> instance is at index <ph id="ph2">&lt;xref:System.Text.StringBuilder.Length%2A&gt;</ph> - 1.</source>
          <target state="translated">最後一個可存取字元<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>執行個體是在索引<ph id="ph2">&lt;xref:System.Text.StringBuilder.Length%2A&gt;</ph>-1。</target>       </trans-unit>
        <trans-unit id="1002" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.StringBuilder.Chars(System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Text.StringBuilder.Chars%2A&gt;</ph> is the default property of the <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Chars%2A&gt;</ph> 預設屬性<ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="1003" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.StringBuilder.Chars(System.Int32)">
          <source>In C#, it is an indexer.</source>
          <target state="translated">在 C# 中，它是索引子。</target>       </trans-unit>
        <trans-unit id="1004" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.StringBuilder.Chars(System.Int32)">
          <source>This means that individual characters can be retrieved from the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Chars%2A&gt;</ph> property as shown in the following example, which counts the number of alphabetic, white-space, and punctuation characters in a string.</source>
          <target state="translated">這表示可以擷取從的個別字元<ph id="ph1">&lt;xref:System.Text.StringBuilder.Chars%2A&gt;</ph>屬性中所示下列的範例中，計算的數目是英文字母，泛空白字元和標點符號字元在字串中的。</target>       </trans-unit>
        <trans-unit id="1005" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.StringBuilder.Chars(System.Int32)">
          <source>Performance and character-based indexing</source>
          <target state="translated">效能和以字元為基礎的索引</target>       </trans-unit>
        <trans-unit id="1006" translate="yes" xml:space="preserve" uid="P:System.Text.StringBuilder.Chars(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is outside the bounds of this instance while setting a character.</source>
          <target state="translated">設定字元時，<ph id="ph1">&lt;paramref name="index" /&gt;</ph> 超出這個執行個體的範圍。</target>       </trans-unit>
        <trans-unit id="1007" translate="yes" xml:space="preserve" uid="P:System.Text.StringBuilder.Chars(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is outside the bounds of this instance while getting a character.</source>
          <target state="translated">取得字元時，<ph id="ph1">&lt;paramref name="index" /&gt;</ph> 超出這個執行個體的範圍。</target>       </trans-unit>
        <trans-unit id="1008" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Clear">
          <source>Removes all characters from the current <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance.</source>
          <target state="translated">從目前的 <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 執行個體移除所有字元。</target>       </trans-unit>
        <trans-unit id="1009" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Clear">
          <source>An object whose <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.Length" /&gt;</ph> is 0 (zero).</source>
          <target state="translated">其 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.Length" /&gt;</ph> 為 0 (零) 的物件。</target>       </trans-unit>
        <trans-unit id="1010" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Clear">
          <source><ph id="ph1">&lt;xref:System.Text.StringBuilder.Clear%2A&gt;</ph> is a convenience method that is equivalent to setting the <ph id="ph2">&lt;xref:System.Text.StringBuilder.Length%2A&gt;</ph> property of the current instance to 0 (zero).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Clear%2A&gt;</ph> 是便利的方法相當於設定<ph id="ph2">&lt;xref:System.Text.StringBuilder.Length%2A&gt;</ph>屬性目前的執行個體設為 0 （零）。</target>       </trans-unit>
        <trans-unit id="1011" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Clear">
          <source>Calling the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Clear%2A&gt;</ph> method does not modify the current instance's <ph id="ph2">&lt;xref:System.Text.StringBuilder.Capacity%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Text.StringBuilder.MaxCapacity%2A&gt;</ph> property.</source>
          <target state="translated">呼叫<ph id="ph1">&lt;xref:System.Text.StringBuilder.Clear%2A&gt;</ph>方法不會修改目前的執行個體<ph id="ph2">&lt;xref:System.Text.StringBuilder.Capacity%2A&gt;</ph>或<ph id="ph3">&lt;xref:System.Text.StringBuilder.MaxCapacity%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="1012" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Clear">
          <source>The following example instantiates a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object with a string, calls the <ph id="ph2">&lt;xref:System.Text.StringBuilder.Clear%2A&gt;</ph> method, and then appends a new string.</source>
          <target state="translated">下列範例會具現化<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>物件與字串時，呼叫<ph id="ph2">&lt;xref:System.Text.StringBuilder.Clear%2A&gt;</ph>方法，這個方法，然後附加新的字串。</target>       </trans-unit>
        <trans-unit id="1013" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source>The starting position in this instance where characters will be copied from.</source>
          <target state="translated">此執行個體中的開始位置，為字元的複製來源。</target>       </trans-unit>
        <trans-unit id="1014" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source>The index is zero-based.</source>
          <target state="translated">索引以零為起始。</target>       </trans-unit>
        <trans-unit id="1015" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source>The array where characters will be copied.</source>
          <target state="translated">將複製其中字元的陣列。</target>       </trans-unit>
        <trans-unit id="1016" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source>The starting position in <bpt id="p1">&lt;c&gt;</bpt>destination<ept id="p1">&lt;/c&gt;</ept> where characters will be copied.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>destination<ept id="p1">&lt;/c&gt;</ept> 中開始複製字元的位置。</target>       </trans-unit>
        <trans-unit id="1017" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source>The index is zero-based.</source>
          <target state="translated">索引以零為起始。</target>       </trans-unit>
        <trans-unit id="1018" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source>The number of characters to be copied.</source>
          <target state="translated">要複製的字元數。</target>       </trans-unit>
        <trans-unit id="1019" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source>Copies the characters from a specified segment of this instance to a specified segment of a destination <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph> array.</source>
          <target state="translated">將此執行個體指定區段中的字元複製到目的端 <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph> 陣列的指定區段。</target>       </trans-unit>
        <trans-unit id="1020" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.CopyTo%2A&gt;</ph> method is intended to be used in the rare situation when you need to efficiently copy successive sections of a <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> object to an array.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.CopyTo%2A&gt;</ph>方法是使用在極少數的情況下，當您需要有效率地將複製的後續章節<ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph>物件陣列。</target>       </trans-unit>
        <trans-unit id="1021" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source>The array should be a fixed size, preallocated, reusable, and possibly globally accessible.</source>
          <target state="translated">陣列應該是固定的大小，預先配置、 可重複使用，且可能是全域存取。</target>       </trans-unit>
        <trans-unit id="1022" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source>For example, your application could populate a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object with a large number of characters then use the <ph id="ph2">&lt;xref:System.Text.StringBuilder.CopyTo%2A&gt;</ph> method to copy small, successive pieces of the <ph id="ph3">&lt;xref:System.Text.StringBuilder&gt;</ph> object to an array where the pieces are processed.</source>
          <target state="translated">比方說，您的應用程式無法填入<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>物件使用大量的字元，然後使用<ph id="ph2">&lt;xref:System.Text.StringBuilder.CopyTo%2A&gt;</ph>方法，以複製小型的後續部分<ph id="ph3">&lt;xref:System.Text.StringBuilder&gt;</ph>部分處理的所在陣列的物件。</target>       </trans-unit>
        <trans-unit id="1023" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source>When all the data in the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object is processed, the size of the <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> object is set to zero and the cycle is repeated.</source>
          <target state="translated">當中的所有資料<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>處理物件時，大小<ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph>物件設為零，並重複這個循環。</target>       </trans-unit>
        <trans-unit id="1024" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.CopyTo%2A&gt;</ph> method.</source>
          <target state="translated">下列範例會示範<ph id="ph1">&lt;xref:System.Text.StringBuilder.CopyTo%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="1025" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="destination" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="destination" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1026" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="sourceIndex" /&gt;</ph>, <ph id="ph2">&lt;paramref name="destinationIndex" /&gt;</ph>, or <ph id="ph3">&lt;paramref name="count" /&gt;</ph>, is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="sourceIndex" /&gt;</ph>、<ph id="ph2">&lt;paramref name="destinationIndex" /&gt;</ph> 或 <ph id="ph3">&lt;paramref name="count" /&gt;</ph> 小於零。</target>       </trans-unit>
        <trans-unit id="1027" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="1028" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="sourceIndex" /&gt;</ph> is greater than the length of this instance.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="sourceIndex" /&gt;</ph> 大於這個執行個體的長度。</target>       </trans-unit>
        <trans-unit id="1029" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="sourceIndex" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;paramref name="count" /&gt;</ph> is greater than the length of this instance.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="sourceIndex" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;paramref name="count" /&gt;</ph> 大於這個執行個體的長度。</target>       </trans-unit>
        <trans-unit id="1030" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="1031" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="destinationIndex" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;paramref name="count" /&gt;</ph> is greater than the length of <ph id="ph4">&lt;paramref name="destination" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="destinationIndex" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;paramref name="count" /&gt;</ph> 大於 <ph id="ph4">&lt;paramref name="destination" /&gt;</ph> 的長度。</target>       </trans-unit>
        <trans-unit id="1032" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.EnsureCapacity(System.Int32)">
          <source>The minimum capacity to ensure.</source>
          <target state="translated">要確定的最大容量。</target>       </trans-unit>
        <trans-unit id="1033" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.EnsureCapacity(System.Int32)">
          <source>Ensures that the capacity of this instance of <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> is at least the specified value.</source>
          <target state="translated">請確定這個 <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 執行個體的容量至少是某一指定的值。</target>       </trans-unit>
        <trans-unit id="1034" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.EnsureCapacity(System.Int32)">
          <source>The new capacity of this instance.</source>
          <target state="translated">這個執行個體的新容量。</target>       </trans-unit>
        <trans-unit id="1035" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.EnsureCapacity(System.Int32)">
          <source>If the current capacity is less than the <ph id="ph1">`capacity`</ph> parameter, memory for this instance is reallocated to hold at least <ph id="ph2">`capacity`</ph> number of characters; otherwise, no memory is changed.</source>
          <target state="translated">如果目前的容量小於<ph id="ph1">`capacity`</ph>參數，這個執行個體重新配置記憶體來保存至少<ph id="ph2">`capacity`</ph>個字元，否則會變更任何記憶體。</target>       </trans-unit>
        <trans-unit id="1036" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.EnsureCapacity(System.Int32)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.EnsureCapacity%2A&gt;</ph> method.</source>
          <target state="translated">下列範例會示範<ph id="ph1">&lt;xref:System.Text.StringBuilder.EnsureCapacity%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="1037" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.EnsureCapacity(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> 小於零。</target>       </trans-unit>
        <trans-unit id="1038" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.EnsureCapacity(System.Int32)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="1039" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.EnsureCapacity(System.Int32)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">加大此執行個體的值可能會超過 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1040" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Equals(System.Text.StringBuilder)">
          <source>An object to compare with this instance, or <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">與這個執行個體相比較的物件，或 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1041" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Equals(System.Text.StringBuilder)">
          <source>Returns a value indicating whether this instance is equal to a specified object.</source>
          <target state="translated">傳回值，指出這個執行個體 (Instance) 是否和指定的物件相等。</target>       </trans-unit>
        <trans-unit id="1042" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Equals(System.Text.StringBuilder)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this instance and <ph id="ph2">&lt;paramref name="sb" /&gt;</ph> have equal string, <ph id="ph3">&lt;see cref="P:System.Text.StringBuilder.Capacity" /&gt;</ph>, and <ph id="ph4">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> values; otherwise, <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果這個執行個體和 <ph id="ph2">&lt;paramref name="sb" /&gt;</ph> 具有相同的字串、<ph id="ph3">&lt;see cref="P:System.Text.StringBuilder.Capacity" /&gt;</ph> 和 <ph id="ph4">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> 值，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則是 <ph id="ph5">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1043" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Equals(System.Text.StringBuilder)">
          <source>The following code uses the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Equals%2A&gt;</ph> method to check whether two <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> objects are equal.</source>
          <target state="translated">下列程式碼會使用<ph id="ph1">&lt;xref:System.Text.StringBuilder.Equals%2A&gt;</ph>方法來檢查是否有兩個<ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph>物件是否相等。</target>       </trans-unit>
        <trans-unit id="1044" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Equals(System.Text.StringBuilder)">
          <source>The method is called repeatedly after small changes are made to each object, and the results are displayed to the console.</source>
          <target state="translated">對每個物件，進行小變更後，主控台會顯示結果，會重複呼叫的方法。</target>       </trans-unit>
        <trans-unit id="1045" translate="yes" xml:space="preserve" uid="T:System.Text.StringBuilder">
          <source>Inserts the string representation of a specified object into this instance at a specified character position.</source>
          <target state="translated">在指定的字元位置上將指定物件的字串表示插入這個執行個體。</target>       </trans-unit>
        <trans-unit id="1046" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Boolean)">
          <source>The position in this instance where insertion begins.</source>
          <target state="translated">這個執行個體中開始插入的位置。</target>       </trans-unit>
        <trans-unit id="1047" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Boolean)">
          <source>The value to insert.</source>
          <target state="translated">要插入的值。</target>       </trans-unit>
        <trans-unit id="1048" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Boolean)">
          <source>Inserts the string representation of a Boolean value into this instance at the specified character position.</source>
          <target state="translated">在指定的字元位置上將 Boolean 值的字串表示插入這個執行個體。</target>       </trans-unit>
        <trans-unit id="1049" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Boolean)">
          <source>A reference to this instance after the insert operation has completed.</source>
          <target state="translated">完成插入作業之後，這個執行個體的參考。</target>       </trans-unit>
        <trans-unit id="1050" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Boolean.ToString%2A?displayProperty=nameWithType&gt;</ph> is used to get a string representation of <ph id="ph2">`value`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Boolean.ToString%2A?displayProperty=nameWithType&gt;</ph> 用來取得的字串表示法<ph id="ph2">`value`</ph>。</target>       </trans-unit>
        <trans-unit id="1051" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Boolean)">
          <source>Existing characters are shifted to make room for the new text.</source>
          <target state="translated">若要騰出空間給新的文字移動現有的字元。</target>       </trans-unit>
        <trans-unit id="1052" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Boolean)">
          <source>The capacity is adjusted as needed.</source>
          <target state="translated">視需要調整容量。</target>       </trans-unit>
        <trans-unit id="1053" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Boolean)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph> method.</source>
          <target state="translated">下列範例會示範<ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="1054" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero or greater than the length of this instance.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 小於零或大於此執行個體的長度。</target>       </trans-unit>
        <trans-unit id="1055" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Boolean)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">加大此執行個體的值可能會超過 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1056" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Boolean)">
          <source>In the <ph id="ph1">[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]</ph> and earlier versions, calls to this method threw an <ph id="ph2">&lt;see cref="T:System.ArgumentOutOfRangeException" /&gt;</ph> if inserting <ph id="ph3">&lt;paramref name="value" /&gt;</ph> would cause the object's total length to exceed <ph id="ph4">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">在<ph id="ph1">[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]</ph>和舊版中，呼叫這個方法擲回<ph id="ph2">&lt;see cref="T:System.ArgumentOutOfRangeException" /&gt;</ph>如果插入<ph id="ph3">&lt;paramref name="value" /&gt;</ph>會導致物件的總長度超過<ph id="ph4">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1057" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Boolean)">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, the method throws an <ph id="ph2">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph>.</source>
          <target state="translated">從開始<ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>，方法會擲回<ph id="ph2">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1058" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Byte)">
          <source>The position in this instance where insertion begins.</source>
          <target state="translated">這個執行個體中開始插入的位置。</target>       </trans-unit>
        <trans-unit id="1059" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Byte)">
          <source>The value to insert.</source>
          <target state="translated">要插入的值。</target>       </trans-unit>
        <trans-unit id="1060" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Byte)">
          <source>Inserts the string representation of a specified 8-bit unsigned integer into this instance at the specified character position.</source>
          <target state="translated">在指定的字元位置上將指定的 8 位元不帶正負號的整數之字串表示插入這個執行個體。</target>       </trans-unit>
        <trans-unit id="1061" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Byte)">
          <source>A reference to this instance after the insert operation has completed.</source>
          <target state="translated">完成插入作業之後，這個執行個體的參考。</target>       </trans-unit>
        <trans-unit id="1062" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Byte)">
          <source><ph id="ph1">&lt;xref:System.Byte.ToString%2A?displayProperty=nameWithType&gt;</ph> is used to get a string representation of <ph id="ph2">`value`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Byte.ToString%2A?displayProperty=nameWithType&gt;</ph> 用來取得的字串表示法<ph id="ph2">`value`</ph>。</target>       </trans-unit>
        <trans-unit id="1063" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Byte)">
          <source>Existing characters are shifted to make room for the new text.</source>
          <target state="translated">若要騰出空間給新的文字移動現有的字元。</target>       </trans-unit>
        <trans-unit id="1064" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Byte)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">視需要調整此執行個體的容量。</target>       </trans-unit>
        <trans-unit id="1065" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Byte)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph> method.</source>
          <target state="translated">下列範例會示範<ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="1066" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Byte)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero or greater than the length of this instance.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 小於零或大於此執行個體的長度。</target>       </trans-unit>
        <trans-unit id="1067" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Byte)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">加大此執行個體的值可能會超過 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1068" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Byte)">
          <source>In the <ph id="ph1">[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]</ph> and earlier versions, calls to this method threw an <ph id="ph2">&lt;see cref="T:System.ArgumentOutOfRangeException" /&gt;</ph> if inserting <ph id="ph3">&lt;paramref name="value" /&gt;</ph> would cause the object's total length to exceed <ph id="ph4">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">在<ph id="ph1">[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]</ph>和舊版中，呼叫這個方法擲回<ph id="ph2">&lt;see cref="T:System.ArgumentOutOfRangeException" /&gt;</ph>如果插入<ph id="ph3">&lt;paramref name="value" /&gt;</ph>會導致物件的總長度超過<ph id="ph4">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1069" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Byte)">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, the method throws an <ph id="ph2">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph>.</source>
          <target state="translated">從開始<ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>，方法會擲回<ph id="ph2">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1070" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char)">
          <source>The position in this instance where insertion begins.</source>
          <target state="translated">這個執行個體中開始插入的位置。</target>       </trans-unit>
        <trans-unit id="1071" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char)">
          <source>The value to insert.</source>
          <target state="translated">要插入的值。</target>       </trans-unit>
        <trans-unit id="1072" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char)">
          <source>Inserts the string representation of a specified Unicode character into this instance at the specified character position.</source>
          <target state="translated">在指定的字元位置上將指定的 Unicode 字元之字串表示插入這個執行個體。</target>       </trans-unit>
        <trans-unit id="1073" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char)">
          <source>A reference to this instance after the insert operation has completed.</source>
          <target state="translated">完成插入作業之後，這個執行個體的參考。</target>       </trans-unit>
        <trans-unit id="1074" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char)">
          <source><ph id="ph1">&lt;xref:System.Char.ToString%2A?displayProperty=nameWithType&gt;</ph> is used to get a string representation of <ph id="ph2">`value`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Char.ToString%2A?displayProperty=nameWithType&gt;</ph> 用來取得的字串表示法<ph id="ph2">`value`</ph>。</target>       </trans-unit>
        <trans-unit id="1075" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char)">
          <source>Existing characters are shifted to make room for the new text.</source>
          <target state="translated">若要騰出空間給新的文字移動現有的字元。</target>       </trans-unit>
        <trans-unit id="1076" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">視需要調整此執行個體的容量。</target>       </trans-unit>
        <trans-unit id="1077" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph> method.</source>
          <target state="translated">下列範例會示範<ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="1078" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero or greater than the length of this instance.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 小於零或大於此執行個體的長度。</target>       </trans-unit>
        <trans-unit id="1079" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="1080" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">加大此執行個體的值可能會超過 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1081" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[])">
          <source>The position in this instance where insertion begins.</source>
          <target state="translated">這個執行個體中開始插入的位置。</target>       </trans-unit>
        <trans-unit id="1082" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[])">
          <source>The character array to insert.</source>
          <target state="translated">要插入的字元陣列。</target>       </trans-unit>
        <trans-unit id="1083" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[])">
          <source>Inserts the string representation of a specified array of Unicode characters into this instance at the specified character position.</source>
          <target state="translated">在指定的字元位置上將指定的 Unicode 字元陣列之字串表示插入這個執行個體。</target>       </trans-unit>
        <trans-unit id="1084" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[])">
          <source>A reference to this instance after the insert operation has completed.</source>
          <target state="translated">完成插入作業之後，這個執行個體的參考。</target>       </trans-unit>
        <trans-unit id="1085" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[])">
          <source>Existing characters are shifted to make room for the new text.</source>
          <target state="translated">若要騰出空間給新的文字移動現有的字元。</target>       </trans-unit>
        <trans-unit id="1086" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[])">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">視需要調整此執行個體的容量。</target>       </trans-unit>
        <trans-unit id="1087" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[])">
          <source>If <ph id="ph1">`value`</ph> is <ph id="ph2">`null`</ph>, the <ph id="ph3">&lt;xref:System.Text.StringBuilder&gt;</ph> is not changed.</source>
          <target state="translated">如果<ph id="ph1">`value`</ph>是<ph id="ph2">`null`</ph>、<ph id="ph3">&lt;xref:System.Text.StringBuilder&gt;</ph>則不會變更。</target>       </trans-unit>
        <trans-unit id="1088" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[])">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph> method.</source>
          <target state="translated">下列範例會示範<ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="1089" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[])">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero or greater than the length of this instance.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 小於零或大於此執行個體的長度。</target>       </trans-unit>
        <trans-unit id="1090" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[])">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="1091" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[])">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">加大此執行個體的值可能會超過 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1092" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Decimal)">
          <source>The position in this instance where insertion begins.</source>
          <target state="translated">這個執行個體中開始插入的位置。</target>       </trans-unit>
        <trans-unit id="1093" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Decimal)">
          <source>The value to insert.</source>
          <target state="translated">要插入的值。</target>       </trans-unit>
        <trans-unit id="1094" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Decimal)">
          <source>Inserts the string representation of a decimal number into this instance at the specified character position.</source>
          <target state="translated">在指定的字元位置上將小數位數的字串表示插入這個執行個體。</target>       </trans-unit>
        <trans-unit id="1095" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Decimal)">
          <source>A reference to this instance after the insert operation has completed.</source>
          <target state="translated">完成插入作業之後，這個執行個體的參考。</target>       </trans-unit>
        <trans-unit id="1096" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Decimal)">
          <source><ph id="ph1">&lt;xref:System.Decimal.ToString%2A?displayProperty=nameWithType&gt;</ph> is used to get a string representation of <ph id="ph2">`value`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Decimal.ToString%2A?displayProperty=nameWithType&gt;</ph> 用來取得的字串表示法<ph id="ph2">`value`</ph>。</target>       </trans-unit>
        <trans-unit id="1097" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Decimal)">
          <source>Existing characters are shifted to make room for the new text.</source>
          <target state="translated">若要騰出空間給新的文字移動現有的字元。</target>       </trans-unit>
        <trans-unit id="1098" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Decimal)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">視需要調整此執行個體的容量。</target>       </trans-unit>
        <trans-unit id="1099" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Decimal)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph> method.</source>
          <target state="translated">下列範例會示範<ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="1100" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Decimal)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero or greater than the length of this instance.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 小於零或大於此執行個體的長度。</target>       </trans-unit>
        <trans-unit id="1101" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Decimal)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">加大此執行個體的值可能會超過 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1102" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Decimal)">
          <source>In the <ph id="ph1">[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]</ph> and earlier versions, calls to this method threw an <ph id="ph2">&lt;see cref="T:System.ArgumentOutOfRangeException" /&gt;</ph> if inserting <ph id="ph3">&lt;paramref name="value" /&gt;</ph> would cause the object's total length to exceed <ph id="ph4">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">在<ph id="ph1">[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]</ph>和舊版中，呼叫這個方法擲回<ph id="ph2">&lt;see cref="T:System.ArgumentOutOfRangeException" /&gt;</ph>如果插入<ph id="ph3">&lt;paramref name="value" /&gt;</ph>會導致物件的總長度超過<ph id="ph4">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1103" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Decimal)">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, the method throws an <ph id="ph2">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph>.</source>
          <target state="translated">從開始<ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>，方法會擲回<ph id="ph2">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1104" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Double)">
          <source>The position in this instance where insertion begins.</source>
          <target state="translated">這個執行個體中開始插入的位置。</target>       </trans-unit>
        <trans-unit id="1105" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Double)">
          <source>The value to insert.</source>
          <target state="translated">要插入的值。</target>       </trans-unit>
        <trans-unit id="1106" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Double)">
          <source>Inserts the string representation of a double-precision floating-point number into this instance at the specified character position.</source>
          <target state="translated">在指定的字元位置上將雙精度浮點數的字串表示插入這個執行個體。</target>       </trans-unit>
        <trans-unit id="1107" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Double)">
          <source>A reference to this instance after the insert operation has completed.</source>
          <target state="translated">完成插入作業之後，這個執行個體的參考。</target>       </trans-unit>
        <trans-unit id="1108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Double)">
          <source><ph id="ph1">&lt;xref:System.Double.ToString%2A?displayProperty=nameWithType&gt;</ph> is used to get a string representation of <ph id="ph2">`value`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Double.ToString%2A?displayProperty=nameWithType&gt;</ph> 用來取得的字串表示法<ph id="ph2">`value`</ph>。</target>       </trans-unit>
        <trans-unit id="1109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Double)">
          <source>Existing characters are shifted to make room for the new text.</source>
          <target state="translated">若要騰出空間給新的文字移動現有的字元。</target>       </trans-unit>
        <trans-unit id="1110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Double)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">視需要調整此執行個體的容量。</target>       </trans-unit>
        <trans-unit id="1111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Double)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph> method.</source>
          <target state="translated">下列範例會示範<ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="1112" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Double)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero or greater than the length of this instance.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 小於零或大於此執行個體的長度。</target>       </trans-unit>
        <trans-unit id="1113" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Double)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">加大此執行個體的值可能會超過 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Double)">
          <source>In the <ph id="ph1">[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]</ph> and earlier versions, calls to this method threw an <ph id="ph2">&lt;see cref="T:System.ArgumentOutOfRangeException" /&gt;</ph> if inserting <ph id="ph3">&lt;paramref name="value" /&gt;</ph> would cause the object's total length to exceed <ph id="ph4">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">在<ph id="ph1">[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]</ph>和舊版中，呼叫這個方法擲回<ph id="ph2">&lt;see cref="T:System.ArgumentOutOfRangeException" /&gt;</ph>如果插入<ph id="ph3">&lt;paramref name="value" /&gt;</ph>會導致物件的總長度超過<ph id="ph4">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Double)">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, the method throws an <ph id="ph2">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph>.</source>
          <target state="translated">從開始<ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>，方法會擲回<ph id="ph2">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1116" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int16)">
          <source>The position in this instance where insertion begins.</source>
          <target state="translated">這個執行個體中開始插入的位置。</target>       </trans-unit>
        <trans-unit id="1117" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int16)">
          <source>The value to insert.</source>
          <target state="translated">要插入的值。</target>       </trans-unit>
        <trans-unit id="1118" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int16)">
          <source>Inserts the string representation of a specified 16-bit signed integer into this instance at the specified character position.</source>
          <target state="translated">在指定的字元位置，將所指定帶正負號之 16 位元整數的字串表示插入這個執行個體。</target>       </trans-unit>
        <trans-unit id="1119" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int16)">
          <source>A reference to this instance after the insert operation has completed.</source>
          <target state="translated">完成插入作業之後，這個執行個體的參考。</target>       </trans-unit>
        <trans-unit id="1120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int16)">
          <source><ph id="ph1">&lt;xref:System.Int16.ToString%2A?displayProperty=nameWithType&gt;</ph> is used to get a string representation of <ph id="ph2">`value`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Int16.ToString%2A?displayProperty=nameWithType&gt;</ph> 用來取得的字串表示法<ph id="ph2">`value`</ph>。</target>       </trans-unit>
        <trans-unit id="1121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int16)">
          <source>Existing characters are shifted to make room for the new text.</source>
          <target state="translated">若要騰出空間給新的文字移動現有的字元。</target>       </trans-unit>
        <trans-unit id="1122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int16)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">視需要調整此執行個體的容量。</target>       </trans-unit>
        <trans-unit id="1123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int16)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph> method.</source>
          <target state="translated">下列範例會示範<ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="1124" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int16)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero or greater than the length of this instance.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 小於零或大於此執行個體的長度。</target>       </trans-unit>
        <trans-unit id="1125" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int16)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">加大此執行個體的值可能會超過 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int16)">
          <source>In the <ph id="ph1">[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]</ph> and earlier versions, calls to this method threw an <ph id="ph2">&lt;see cref="T:System.ArgumentOutOfRangeException" /&gt;</ph> if inserting <ph id="ph3">&lt;paramref name="value" /&gt;</ph> would cause the object's total length to exceed <ph id="ph4">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">在<ph id="ph1">[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]</ph>和舊版中，呼叫這個方法擲回<ph id="ph2">&lt;see cref="T:System.ArgumentOutOfRangeException" /&gt;</ph>如果插入<ph id="ph3">&lt;paramref name="value" /&gt;</ph>會導致物件的總長度超過<ph id="ph4">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int16)">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, the method throws an <ph id="ph2">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph>.</source>
          <target state="translated">從開始<ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>，方法會擲回<ph id="ph2">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1128" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int32)">
          <source>The position in this instance where insertion begins.</source>
          <target state="translated">這個執行個體中開始插入的位置。</target>       </trans-unit>
        <trans-unit id="1129" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int32)">
          <source>The value to insert.</source>
          <target state="translated">要插入的值。</target>       </trans-unit>
        <trans-unit id="1130" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int32)">
          <source>Inserts the string representation of a specified 32-bit signed integer into this instance at the specified character position.</source>
          <target state="translated">在指定的字元位置，將所指定帶正負號之 32 位元整數的字串表示插入這個執行個體。</target>       </trans-unit>
        <trans-unit id="1131" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int32)">
          <source>A reference to this instance after the insert operation has completed.</source>
          <target state="translated">完成插入作業之後，這個執行個體的參考。</target>       </trans-unit>
        <trans-unit id="1132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Int32.ToString%2A?displayProperty=nameWithType&gt;</ph> is used to get a string representation of <ph id="ph2">`value`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Int32.ToString%2A?displayProperty=nameWithType&gt;</ph> 用來取得的字串表示法<ph id="ph2">`value`</ph>。</target>       </trans-unit>
        <trans-unit id="1133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int32)">
          <source>Existing characters are shifted to make room for the new text.</source>
          <target state="translated">若要騰出空間給新的文字移動現有的字元。</target>       </trans-unit>
        <trans-unit id="1134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int32)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">視需要調整此執行個體的容量。</target>       </trans-unit>
        <trans-unit id="1135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int32)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph> method.</source>
          <target state="translated">下列範例會示範<ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="1136" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero or greater than the length of this instance.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 小於零或大於此執行個體的長度。</target>       </trans-unit>
        <trans-unit id="1137" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int32)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">加大此執行個體的值可能會超過 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int32)">
          <source>In the <ph id="ph1">[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]</ph> and earlier versions, calls to this method threw an <ph id="ph2">&lt;see cref="T:System.ArgumentOutOfRangeException" /&gt;</ph> if inserting <ph id="ph3">&lt;paramref name="value" /&gt;</ph> would cause the object's total length to exceed <ph id="ph4">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">在<ph id="ph1">[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]</ph>和舊版中，呼叫這個方法擲回<ph id="ph2">&lt;see cref="T:System.ArgumentOutOfRangeException" /&gt;</ph>如果插入<ph id="ph3">&lt;paramref name="value" /&gt;</ph>會導致物件的總長度超過<ph id="ph4">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int32)">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, the method throws an <ph id="ph2">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph>.</source>
          <target state="translated">從開始<ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>，方法會擲回<ph id="ph2">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1140" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int64)">
          <source>The position in this instance where insertion begins.</source>
          <target state="translated">這個執行個體中開始插入的位置。</target>       </trans-unit>
        <trans-unit id="1141" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int64)">
          <source>The value to insert.</source>
          <target state="translated">要插入的值。</target>       </trans-unit>
        <trans-unit id="1142" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int64)">
          <source>Inserts the string representation of a 64-bit signed integer into this instance at the specified character position.</source>
          <target state="translated">在指定的字元位置上將指定的 64 位元帶正負號的整數之字串表示插入這個執行個體。</target>       </trans-unit>
        <trans-unit id="1143" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int64)">
          <source>A reference to this instance after the insert operation has completed.</source>
          <target state="translated">完成插入作業之後，這個執行個體的參考。</target>       </trans-unit>
        <trans-unit id="1144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int64)">
          <source><ph id="ph1">&lt;xref:System.Int64.ToString%2A?displayProperty=nameWithType&gt;</ph> is used to get a string representation of <ph id="ph2">`value`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Int64.ToString%2A?displayProperty=nameWithType&gt;</ph> 用來取得的字串表示法<ph id="ph2">`value`</ph>。</target>       </trans-unit>
        <trans-unit id="1145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int64)">
          <source>Existing characters are shifted to make room for the new text.</source>
          <target state="translated">若要騰出空間給新的文字移動現有的字元。</target>       </trans-unit>
        <trans-unit id="1146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int64)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">視需要調整此執行個體的容量。</target>       </trans-unit>
        <trans-unit id="1147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int64)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph> method.</source>
          <target state="translated">下列範例會示範<ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="1148" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int64)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero or greater than the length of this instance.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 小於零或大於此執行個體的長度。</target>       </trans-unit>
        <trans-unit id="1149" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int64)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">加大此執行個體的值可能會超過 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int64)">
          <source>In the <ph id="ph1">[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]</ph> and earlier versions, calls to this method threw an <ph id="ph2">&lt;see cref="T:System.ArgumentOutOfRangeException" /&gt;</ph> if inserting <ph id="ph3">&lt;paramref name="value" /&gt;</ph> would cause the object's total length to exceed <ph id="ph4">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">在<ph id="ph1">[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]</ph>和舊版中，呼叫這個方法擲回<ph id="ph2">&lt;see cref="T:System.ArgumentOutOfRangeException" /&gt;</ph>如果插入<ph id="ph3">&lt;paramref name="value" /&gt;</ph>會導致物件的總長度超過<ph id="ph4">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int64)">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, the method throws an <ph id="ph2">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph>.</source>
          <target state="translated">從開始<ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>，方法會擲回<ph id="ph2">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1152" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Object)">
          <source>The position in this instance where insertion begins.</source>
          <target state="translated">這個執行個體中開始插入的位置。</target>       </trans-unit>
        <trans-unit id="1153" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Object)">
          <source>The object to insert, or <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">要插入的物件或 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1154" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Object)">
          <source>Inserts the string representation of an object into this instance at the specified character position.</source>
          <target state="translated">在指定的字元位置上將物件的字串表示插入這個執行個體。</target>       </trans-unit>
        <trans-unit id="1155" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Object)">
          <source>A reference to this instance after the insert operation has completed.</source>
          <target state="translated">完成插入作業之後，這個執行個體的參考。</target>       </trans-unit>
        <trans-unit id="1156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Object)">
          <source><ph id="ph1">&lt;xref:System.Object.ToString%2A?displayProperty=nameWithType&gt;</ph> is used to get a string representation of <ph id="ph2">`value`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.ToString%2A?displayProperty=nameWithType&gt;</ph> 用來取得的字串表示法<ph id="ph2">`value`</ph>。</target>       </trans-unit>
        <trans-unit id="1157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Object)">
          <source>Existing characters are shifted to make room for the new text.</source>
          <target state="translated">若要騰出空間給新的文字移動現有的字元。</target>       </trans-unit>
        <trans-unit id="1158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Object)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">視需要調整此執行個體的容量。</target>       </trans-unit>
        <trans-unit id="1159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Object)">
          <source>If <ph id="ph1">`value`</ph> is <ph id="ph2">`null`</ph>, the value of this instance is unchanged.</source>
          <target state="translated">如果<ph id="ph1">`value`</ph>是<ph id="ph2">`null`</ph>，這個執行個體的值不變。</target>       </trans-unit>
        <trans-unit id="1160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Object)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph> method.</source>
          <target state="translated">下列範例會示範<ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="1161" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Object)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero or greater than the length of this instance.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 小於零或大於此執行個體的長度。</target>       </trans-unit>
        <trans-unit id="1162" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Object)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">加大此執行個體的值可能會超過 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Object)">
          <source>In the <ph id="ph1">[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]</ph> and earlier versions, calls to this method threw an <ph id="ph2">&lt;see cref="T:System.ArgumentOutOfRangeException" /&gt;</ph> if inserting <ph id="ph3">&lt;paramref name="value" /&gt;</ph> would cause the object's total length to exceed <ph id="ph4">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">在<ph id="ph1">[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]</ph>和舊版中，呼叫這個方法擲回<ph id="ph2">&lt;see cref="T:System.ArgumentOutOfRangeException" /&gt;</ph>如果插入<ph id="ph3">&lt;paramref name="value" /&gt;</ph>會導致物件的總長度超過<ph id="ph4">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Object)">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, the method throws an <ph id="ph2">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph>.</source>
          <target state="translated">從開始<ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>，方法會擲回<ph id="ph2">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1165" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.SByte)">
          <source>The position in this instance where insertion begins.</source>
          <target state="translated">這個執行個體中開始插入的位置。</target>       </trans-unit>
        <trans-unit id="1166" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.SByte)">
          <source>The value to insert.</source>
          <target state="translated">要插入的值。</target>       </trans-unit>
        <trans-unit id="1167" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.SByte)">
          <source>Inserts the string representation of a specified 8-bit signed integer into this instance at the specified character position.</source>
          <target state="translated">在指定的字元位置，將所指定帶正負號之 8 位元整數的字串表示插入這個執行個體。</target>       </trans-unit>
        <trans-unit id="1168" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.SByte)">
          <source>A reference to this instance after the insert operation has completed.</source>
          <target state="translated">完成插入作業之後，這個執行個體的參考。</target>       </trans-unit>
        <trans-unit id="1169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.SByte)">
          <source><ph id="ph1">&lt;xref:System.SByte.ToString%2A?displayProperty=nameWithType&gt;</ph> is used to get a string representation of <ph id="ph2">`value`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.SByte.ToString%2A?displayProperty=nameWithType&gt;</ph> 用來取得的字串表示法<ph id="ph2">`value`</ph>。</target>       </trans-unit>
        <trans-unit id="1170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.SByte)">
          <source>Existing characters are shifted to make room for the new text.</source>
          <target state="translated">若要騰出空間給新的文字移動現有的字元。</target>       </trans-unit>
        <trans-unit id="1171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.SByte)">
          <source>The capacity is adjusted as needed.</source>
          <target state="translated">視需要調整容量。</target>       </trans-unit>
        <trans-unit id="1172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.SByte)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph> method.</source>
          <target state="translated">下列範例會示範<ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="1173" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.SByte)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero or greater than the length of this instance.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 小於零或大於此執行個體的長度。</target>       </trans-unit>
        <trans-unit id="1174" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.SByte)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">加大此執行個體的值可能會超過 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.SByte)">
          <source>In the <ph id="ph1">[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]</ph> and earlier versions, calls to this method threw an <ph id="ph2">&lt;see cref="T:System.ArgumentOutOfRangeException" /&gt;</ph> if inserting <ph id="ph3">&lt;paramref name="value" /&gt;</ph> would cause the object's total length to exceed <ph id="ph4">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">在<ph id="ph1">[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]</ph>和舊版中，呼叫這個方法擲回<ph id="ph2">&lt;see cref="T:System.ArgumentOutOfRangeException" /&gt;</ph>如果插入<ph id="ph3">&lt;paramref name="value" /&gt;</ph>會導致物件的總長度超過<ph id="ph4">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.SByte)">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, the method throws an <ph id="ph2">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph>.</source>
          <target state="translated">從開始<ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>，方法會擲回<ph id="ph2">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1177" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Single)">
          <source>The position in this instance where insertion begins.</source>
          <target state="translated">這個執行個體中開始插入的位置。</target>       </trans-unit>
        <trans-unit id="1178" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Single)">
          <source>The value to insert.</source>
          <target state="translated">要插入的值。</target>       </trans-unit>
        <trans-unit id="1179" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Single)">
          <source>Inserts the string representation of a single-precision floating point number into this instance at the specified character position.</source>
          <target state="translated">在指定的字元位置上將單精確度浮點數的字串表示插入這個執行個體。</target>       </trans-unit>
        <trans-unit id="1180" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Single)">
          <source>A reference to this instance after the insert operation has completed.</source>
          <target state="translated">完成插入作業之後，這個執行個體的參考。</target>       </trans-unit>
        <trans-unit id="1181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Single)">
          <source><ph id="ph1">&lt;xref:System.Single.ToString%2A?displayProperty=nameWithType&gt;</ph> is used to get a string representation of <ph id="ph2">`value`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Single.ToString%2A?displayProperty=nameWithType&gt;</ph> 用來取得的字串表示法<ph id="ph2">`value`</ph>。</target>       </trans-unit>
        <trans-unit id="1182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Single)">
          <source>Existing characters are shifted to make room for the new text.</source>
          <target state="translated">若要騰出空間給新的文字移動現有的字元。</target>       </trans-unit>
        <trans-unit id="1183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Single)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">視需要調整此執行個體的容量。</target>       </trans-unit>
        <trans-unit id="1184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Single)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph> method.</source>
          <target state="translated">下列範例會示範<ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="1185" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Single)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero or greater than the length of this instance.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 小於零或大於此執行個體的長度。</target>       </trans-unit>
        <trans-unit id="1186" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Single)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">加大此執行個體的值可能會超過 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Single)">
          <source>In the <ph id="ph1">[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]</ph> and earlier versions, calls to this method threw an <ph id="ph2">&lt;see cref="T:System.ArgumentOutOfRangeException" /&gt;</ph> if inserting <ph id="ph3">&lt;paramref name="value" /&gt;</ph> would cause the object's total length to exceed <ph id="ph4">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">在<ph id="ph1">[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]</ph>和舊版中，呼叫這個方法擲回<ph id="ph2">&lt;see cref="T:System.ArgumentOutOfRangeException" /&gt;</ph>如果插入<ph id="ph3">&lt;paramref name="value" /&gt;</ph>會導致物件的總長度超過<ph id="ph4">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Single)">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, the method throws an <ph id="ph2">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph>.</source>
          <target state="translated">從開始<ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>，方法會擲回<ph id="ph2">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1189" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.String)">
          <source>The position in this instance where insertion begins.</source>
          <target state="translated">這個執行個體中開始插入的位置。</target>       </trans-unit>
        <trans-unit id="1190" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.String)">
          <source>The string to insert.</source>
          <target state="translated">要插入的字串。</target>       </trans-unit>
        <trans-unit id="1191" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.String)">
          <source>Inserts a string into this instance at the specified character position.</source>
          <target state="translated">在指定的字元位置上將字串插入這個執行個體。</target>       </trans-unit>
        <trans-unit id="1192" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.String)">
          <source>A reference to this instance after the insert operation has completed.</source>
          <target state="translated">完成插入作業之後，這個執行個體的參考。</target>       </trans-unit>
        <trans-unit id="1193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.String)">
          <source>Existing characters are shifted to make room for the new text.</source>
          <target state="translated">若要騰出空間給新的文字移動現有的字元。</target>       </trans-unit>
        <trans-unit id="1194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.String)">
          <source>The capacity is adjusted as needed.</source>
          <target state="translated">視需要調整容量。</target>       </trans-unit>
        <trans-unit id="1195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.String)">
          <source>This instance of <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> is not changed if <ph id="ph2">`value`</ph> is <ph id="ph3">`null`</ph>, or <ph id="ph4">`value`</ph> is not <ph id="ph5">`null`</ph> but its length is zero.</source>
          <target state="translated">這個執行個體<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>則不會變更，如果<ph id="ph2">`value`</ph>是<ph id="ph3">`null`</ph>，或<ph id="ph4">`value`</ph>不<ph id="ph5">`null`</ph>但其長度為零。</target>       </trans-unit>
        <trans-unit id="1196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.String)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph> method.</source>
          <target state="translated">下列範例會示範<ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="1197" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.String)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero or greater than the current length of this instance.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 小於零或大於這個執行個體目前的長度。</target>       </trans-unit>
        <trans-unit id="1198" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.String)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="1199" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.String)">
          <source>The current length of this <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object plus the length of <ph id="ph2">&lt;paramref name="value" /&gt;</ph> exceeds <ph id="ph3">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">此 <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 物件的目前長度加上 <ph id="ph2">&lt;paramref name="value" /&gt;</ph> 的長度超過了 <ph id="ph3">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1200" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt16)">
          <source>The position in this instance where insertion begins.</source>
          <target state="translated">這個執行個體中開始插入的位置。</target>       </trans-unit>
        <trans-unit id="1201" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt16)">
          <source>The value to insert.</source>
          <target state="translated">要插入的值。</target>       </trans-unit>
        <trans-unit id="1202" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt16)">
          <source>Inserts the string representation of a 16-bit unsigned integer into this instance at the specified character position.</source>
          <target state="translated">在指定的字元位置，將所指定不帶正負號的 16 位元整數之字串表示插入這個執行個體。</target>       </trans-unit>
        <trans-unit id="1203" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt16)">
          <source>A reference to this instance after the insert operation has completed.</source>
          <target state="translated">完成插入作業之後，這個執行個體的參考。</target>       </trans-unit>
        <trans-unit id="1204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt16)">
          <source><ph id="ph1">&lt;xref:System.UInt16.ToString%2A?displayProperty=nameWithType&gt;</ph> is used to get a string representation of <ph id="ph2">`value`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.UInt16.ToString%2A?displayProperty=nameWithType&gt;</ph> 用來取得的字串表示法<ph id="ph2">`value`</ph>。</target>       </trans-unit>
        <trans-unit id="1205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt16)">
          <source>Existing characters are shifted to make room for the new text.</source>
          <target state="translated">若要騰出空間給新的文字移動現有的字元。</target>       </trans-unit>
        <trans-unit id="1206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt16)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">視需要調整此執行個體的容量。</target>       </trans-unit>
        <trans-unit id="1207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt16)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph> method.</source>
          <target state="translated">下列範例會示範<ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="1208" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt16)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero or greater than the length of this instance.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 小於零或大於此執行個體的長度。</target>       </trans-unit>
        <trans-unit id="1209" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt16)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">加大此執行個體的值可能會超過 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt16)">
          <source>In the <ph id="ph1">[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]</ph> and earlier versions, calls to this method threw an <ph id="ph2">&lt;see cref="T:System.ArgumentOutOfRangeException" /&gt;</ph> if inserting <ph id="ph3">&lt;paramref name="value" /&gt;</ph> would cause the object's total length to exceed <ph id="ph4">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">在<ph id="ph1">[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]</ph>和舊版中，呼叫這個方法擲回<ph id="ph2">&lt;see cref="T:System.ArgumentOutOfRangeException" /&gt;</ph>如果插入<ph id="ph3">&lt;paramref name="value" /&gt;</ph>會導致物件的總長度超過<ph id="ph4">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt16)">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, the method throws an <ph id="ph2">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph>.</source>
          <target state="translated">從開始<ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>，方法會擲回<ph id="ph2">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1212" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt32)">
          <source>The position in this instance where insertion begins.</source>
          <target state="translated">這個執行個體中開始插入的位置。</target>       </trans-unit>
        <trans-unit id="1213" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt32)">
          <source>The value to insert.</source>
          <target state="translated">要插入的值。</target>       </trans-unit>
        <trans-unit id="1214" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt32)">
          <source>Inserts the string representation of a 32-bit unsigned integer into this instance at the specified character position.</source>
          <target state="translated">在指定的字元位置，將所指定不帶正負號的 32 位元整數之字串表示插入這個執行個體。</target>       </trans-unit>
        <trans-unit id="1215" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt32)">
          <source>A reference to this instance after the insert operation has completed.</source>
          <target state="translated">完成插入作業之後，這個執行個體的參考。</target>       </trans-unit>
        <trans-unit id="1216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt32)">
          <source><ph id="ph1">&lt;xref:System.UInt32.ToString%2A?displayProperty=nameWithType&gt;</ph> is used to get a string representation of <ph id="ph2">`value`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.UInt32.ToString%2A?displayProperty=nameWithType&gt;</ph> 用來取得的字串表示法<ph id="ph2">`value`</ph>。</target>       </trans-unit>
        <trans-unit id="1217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt32)">
          <source>Existing characters are shifted to make room for the new text.</source>
          <target state="translated">若要騰出空間給新的文字移動現有的字元。</target>       </trans-unit>
        <trans-unit id="1218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt32)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">視需要調整此執行個體的容量。</target>       </trans-unit>
        <trans-unit id="1219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt32)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph> method.</source>
          <target state="translated">下列範例會示範<ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="1220" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero or greater than the length of this instance.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 小於零或大於此執行個體的長度。</target>       </trans-unit>
        <trans-unit id="1221" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt32)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">加大此執行個體的值可能會超過 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt32)">
          <source>In the <ph id="ph1">[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]</ph> and earlier versions, calls to this method threw an <ph id="ph2">&lt;see cref="T:System.ArgumentOutOfRangeException" /&gt;</ph> if inserting <ph id="ph3">&lt;paramref name="value" /&gt;</ph> would cause the object's total length to exceed <ph id="ph4">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">在<ph id="ph1">[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]</ph>和舊版中，呼叫這個方法擲回<ph id="ph2">&lt;see cref="T:System.ArgumentOutOfRangeException" /&gt;</ph>如果插入<ph id="ph3">&lt;paramref name="value" /&gt;</ph>會導致物件的總長度超過<ph id="ph4">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt32)">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, the method throws an <ph id="ph2">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph>.</source>
          <target state="translated">從開始<ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>，方法會擲回<ph id="ph2">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1224" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt64)">
          <source>The position in this instance where insertion begins.</source>
          <target state="translated">這個執行個體中開始插入的位置。</target>       </trans-unit>
        <trans-unit id="1225" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt64)">
          <source>The value to insert.</source>
          <target state="translated">要插入的值。</target>       </trans-unit>
        <trans-unit id="1226" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt64)">
          <source>Inserts the string representation of a 64-bit unsigned integer into this instance at the specified character position.</source>
          <target state="translated">在指定的字元位置，將所指定不帶正負號的 64 位元整數之字串表示插入這個執行個體。</target>       </trans-unit>
        <trans-unit id="1227" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt64)">
          <source>A reference to this instance after the insert operation has completed.</source>
          <target state="translated">完成插入作業之後，這個執行個體的參考。</target>       </trans-unit>
        <trans-unit id="1228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt64)">
          <source><ph id="ph1">&lt;xref:System.UInt64.ToString%2A?displayProperty=nameWithType&gt;</ph> is used to get a string representation of <ph id="ph2">`value`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.UInt64.ToString%2A?displayProperty=nameWithType&gt;</ph> 用來取得的字串表示法<ph id="ph2">`value`</ph>。</target>       </trans-unit>
        <trans-unit id="1229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt64)">
          <source>Existing characters are shifted to make room for the new text.</source>
          <target state="translated">若要騰出空間給新的文字移動現有的字元。</target>       </trans-unit>
        <trans-unit id="1230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt64)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">視需要調整此執行個體的容量。</target>       </trans-unit>
        <trans-unit id="1231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt64)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph> method.</source>
          <target state="translated">下列範例會示範<ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="1232" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt64)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero or greater than the length of this instance.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 小於零或大於此執行個體的長度。</target>       </trans-unit>
        <trans-unit id="1233" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt64)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">加大此執行個體的值可能會超過 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt64)">
          <source>In the <ph id="ph1">[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]</ph> and earlier versions, calls to this method threw an <ph id="ph2">&lt;see cref="T:System.ArgumentOutOfRangeException" /&gt;</ph> if inserting <ph id="ph3">&lt;paramref name="value" /&gt;</ph> would cause the object's total length to exceed <ph id="ph4">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">在<ph id="ph1">[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]</ph>和舊版中，呼叫這個方法擲回<ph id="ph2">&lt;see cref="T:System.ArgumentOutOfRangeException" /&gt;</ph>如果插入<ph id="ph3">&lt;paramref name="value" /&gt;</ph>會導致物件的總長度超過<ph id="ph4">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt64)">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, the method throws an <ph id="ph2">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph>.</source>
          <target state="translated">從開始<ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>，方法會擲回<ph id="ph2">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1236" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.String,System.Int32)">
          <source>The position in this instance where insertion begins.</source>
          <target state="translated">這個執行個體中開始插入的位置。</target>       </trans-unit>
        <trans-unit id="1237" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.String,System.Int32)">
          <source>The string to insert.</source>
          <target state="translated">要插入的字串。</target>       </trans-unit>
        <trans-unit id="1238" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.String,System.Int32)">
          <source>The number of times to insert <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">要插入 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> 的次數。</target>       </trans-unit>
        <trans-unit id="1239" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.String,System.Int32)">
          <source>Inserts one or more copies of a specified string into this instance at the specified character position.</source>
          <target state="translated">在指定的字元位置上將指定字串的一或多個複本插入這個執行個體。</target>       </trans-unit>
        <trans-unit id="1240" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.String,System.Int32)">
          <source>A reference to this instance after insertion has completed.</source>
          <target state="translated">插入作業完成後，這個執行個體的參考。</target>       </trans-unit>
        <trans-unit id="1241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.String,System.Int32)">
          <source>Existing characters are shifted to make room for the new text.</source>
          <target state="translated">若要騰出空間給新的文字移動現有的字元。</target>       </trans-unit>
        <trans-unit id="1242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.String,System.Int32)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">視需要調整此執行個體的容量。</target>       </trans-unit>
        <trans-unit id="1243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.String,System.Int32)">
          <source>This <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object is not changed if <ph id="ph2">`value`</ph> is <ph id="ph3">`null`</ph>, <ph id="ph4">`value`</ph> is not <ph id="ph5">`null`</ph> but its length is zero, or <ph id="ph6">`count`</ph> is zero.</source>
          <target state="translated">這<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>物件不會變更如果<ph id="ph2">`value`</ph>是<ph id="ph3">`null`</ph>，<ph id="ph4">`value`</ph>不<ph id="ph5">`null`</ph>但其長度為零，或<ph id="ph6">`count`</ph>為零。</target>       </trans-unit>
        <trans-unit id="1244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.String,System.Int32)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph> method.</source>
          <target state="translated">下列範例會示範<ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="1245" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero or greater than the current length of this instance.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 小於零或大於這個執行個體目前的長度。</target>       </trans-unit>
        <trans-unit id="1246" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.String,System.Int32)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="1247" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph> 小於零。</target>       </trans-unit>
        <trans-unit id="1248" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.String,System.Int32)">
          <source>The current length of this <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object plus the length of <ph id="ph2">&lt;paramref name="value" /&gt;</ph> times <ph id="ph3">&lt;paramref name="count" /&gt;</ph> exceeds <ph id="ph4">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">此 <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 物件的目前長度加上 <ph id="ph2">&lt;paramref name="value" /&gt;</ph> 乘以 <ph id="ph3">&lt;paramref name="count" /&gt;</ph> 的長度超過了 <ph id="ph4">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1249" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source>The position in this instance where insertion begins.</source>
          <target state="translated">這個執行個體中開始插入的位置。</target>       </trans-unit>
        <trans-unit id="1250" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source>A character array.</source>
          <target state="translated">字元陣列。</target>       </trans-unit>
        <trans-unit id="1251" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source>The starting index within <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> 內的起始索引。</target>       </trans-unit>
        <trans-unit id="1252" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source>The number of characters to insert.</source>
          <target state="translated">要插入的字元數。</target>       </trans-unit>
        <trans-unit id="1253" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source>Inserts the string representation of a specified subarray of Unicode characters into this instance at the specified character position.</source>
          <target state="translated">在指定的字元位置上將 Unicode 字元之指定子陣列的字串表示插入這個執行個體。</target>       </trans-unit>
        <trans-unit id="1254" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source>A reference to this instance after the insert operation has completed.</source>
          <target state="translated">完成插入作業之後，這個執行個體的參考。</target>       </trans-unit>
        <trans-unit id="1255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source>Existing characters are shifted to make room for the new text.</source>
          <target state="translated">若要騰出空間給新的文字移動現有的字元。</target>       </trans-unit>
        <trans-unit id="1256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">視需要調整此執行個體的容量。</target>       </trans-unit>
        <trans-unit id="1257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph> method.</source>
          <target state="translated">下列範例會示範<ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="1258" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>, and <ph id="ph3">&lt;paramref name="startIndex" /&gt;</ph> and <ph id="ph4">&lt;paramref name="charCount" /&gt;</ph> are not zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 是 <ph id="ph2">&lt;see langword="null" /&gt;</ph>，而 <ph id="ph3">&lt;paramref name="startIndex" /&gt;</ph> 和 <ph id="ph4">&lt;paramref name="charCount" /&gt;</ph> 不是零。</target>       </trans-unit>
        <trans-unit id="1259" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph>, <ph id="ph2">&lt;paramref name="startIndex" /&gt;</ph>, or <ph id="ph3">&lt;paramref name="charCount" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph>、<ph id="ph2">&lt;paramref name="startIndex" /&gt;</ph> 或 <ph id="ph3">&lt;paramref name="charCount" /&gt;</ph> 小於零。</target>       </trans-unit>
        <trans-unit id="1260" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="1261" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is greater than the length of this instance.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 大於這個執行個體的長度。</target>       </trans-unit>
        <trans-unit id="1262" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="1263" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> plus <ph id="ph2">&lt;paramref name="charCount" /&gt;</ph> is not a position within <ph id="ph3">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> 加上 <ph id="ph2">&lt;paramref name="charCount" /&gt;</ph> 不是 <ph id="ph3">&lt;paramref name="value" /&gt;</ph> 內的位置。</target>       </trans-unit>
        <trans-unit id="1264" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="1265" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">加大此執行個體的值可能會超過 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1266" translate="yes" xml:space="preserve" uid="P:System.Text.StringBuilder.Length">
          <source>Gets or sets the length of the current <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object.</source>
          <target state="translated">取得或設定目前 <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 物件的長度。</target>       </trans-unit>
        <trans-unit id="1267" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.StringBuilder.Length">
          <source>The length of this instance.</source>
          <target state="translated">這個執行個體的長度。</target>       </trans-unit>
        <trans-unit id="1268" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.StringBuilder.Length">
          <source>The length of a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object is defined by its number of <ph id="ph2">&lt;xref:System.Char&gt;</ph> objects.</source>
          <target state="translated">長度<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>物件由其數目所定義<ph id="ph2">&lt;xref:System.Char&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="1269" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.StringBuilder.Length">
          <source>Like the <ph id="ph1">&lt;xref:System.String.Length%2A?displayProperty=nameWithType&gt;</ph> property, the <ph id="ph2">&lt;xref:System.Text.StringBuilder.Length%2A&gt;</ph> property indicates the length of the current string object.</source>
          <target state="translated">像<ph id="ph1">&lt;xref:System.String.Length%2A?displayProperty=nameWithType&gt;</ph>屬性，<ph id="ph2">&lt;xref:System.Text.StringBuilder.Length%2A&gt;</ph>屬性會指出目前 string 物件的長度。</target>       </trans-unit>
        <trans-unit id="1270" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.StringBuilder.Length">
          <source>Unlike the <ph id="ph1">&lt;xref:System.String.Length%2A?displayProperty=nameWithType&gt;</ph> property, which is read-only, the <ph id="ph2">&lt;xref:System.Text.StringBuilder.Length%2A&gt;</ph> property allows you to modify the length of the string stored to the <ph id="ph3">&lt;xref:System.Text.StringBuilder&gt;</ph> object.</source>
          <target state="translated">不同於<ph id="ph1">&lt;xref:System.String.Length%2A?displayProperty=nameWithType&gt;</ph>屬性，這是唯讀，<ph id="ph2">&lt;xref:System.Text.StringBuilder.Length%2A&gt;</ph>屬性可讓您修改儲存到字串的長度<ph id="ph3">&lt;xref:System.Text.StringBuilder&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="1271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.StringBuilder.Length">
          <source>If the specified length is less than the current length, the current <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object is truncated to the specified length.</source>
          <target state="translated">如果指定的長度小於目前的長度，目前<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>物件會被截斷成指定的長度。</target>       </trans-unit>
        <trans-unit id="1272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.StringBuilder.Length">
          <source>If the specified length is greater than the current length, the end of the string value of the current <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object is padded with the Unicode NULL character (U+0000).</source>
          <target state="translated">如果指定的長度大於目前長度，也就是目前的字串值的結尾<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>物件會以 Unicode NULL 字元填補 (U + 0000)。</target>       </trans-unit>
        <trans-unit id="1273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.StringBuilder.Length">
          <source>If the specified length is greater than the current capacity, <ph id="ph1">&lt;xref:System.Text.StringBuilder.Capacity%2A&gt;</ph> increases so that it is greater than or equal to the specified length.</source>
          <target state="translated">如果指定的長度大於目前的容量，<ph id="ph1">&lt;xref:System.Text.StringBuilder.Capacity%2A&gt;</ph>使其大於或等於指定的長度會增加。</target>       </trans-unit>
        <trans-unit id="1274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.StringBuilder.Length">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Length%2A&gt;</ph> property.</source>
          <target state="translated">下列範例會示範<ph id="ph1">&lt;xref:System.Text.StringBuilder.Length%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="1275" translate="yes" xml:space="preserve" uid="P:System.Text.StringBuilder.Length">
          <source>The value specified for a set operation is less than zero or greater than <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">設定作業指定的值小於零或大於 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1276" translate="yes" xml:space="preserve" uid="P:System.Text.StringBuilder.MaxCapacity">
          <source>Gets the maximum capacity of this instance.</source>
          <target state="translated">取得這個執行個體的最大容量。</target>       </trans-unit>
        <trans-unit id="1277" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.StringBuilder.MaxCapacity">
          <source>The maximum number of characters this instance can hold.</source>
          <target state="translated">這個執行個體可以容納的最大字元數。</target>       </trans-unit>
        <trans-unit id="1278" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.StringBuilder.MaxCapacity">
          <source>The maximum capacity for this implementation is <ph id="ph1">&lt;xref:System.Int32.MaxValue?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">此實作的最大容量<ph id="ph1">&lt;xref:System.Int32.MaxValue?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.StringBuilder.MaxCapacity">
          <source>However, this value is implementation-specific and might be different in other or later implementations.</source>
          <target state="translated">不過，這個值是依實作，而且可能會在其他或更新版本的實作不同。</target>       </trans-unit>
        <trans-unit id="1280" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.StringBuilder.MaxCapacity">
          <source>You can explicitly set the maximum capacity of a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object by calling the <ph id="ph2">&lt;xref:System.Text.StringBuilder.%23ctor%28System.Int32%2CSystem.Int32%29&gt;</ph> constructor.</source>
          <target state="translated">您可以明確設定的最大容量<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>藉由呼叫物件<ph id="ph2">&lt;xref:System.Text.StringBuilder.%23ctor%28System.Int32%2CSystem.Int32%29&gt;</ph>建構函式。</target>       </trans-unit>
        <trans-unit id="1281" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.StringBuilder.MaxCapacity">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;xref:System.Text.StringBuilder&gt;</ph> object by calling the <ph id="ph4">&lt;xref:System.Text.StringBuilder.%23ctor%28System.Int32%2CSystem.Int32%29&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;xref:System.Text.StringBuilder&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;xref:System.Text.StringBuilder.MaxCapacity%2A&gt;</ph> property.</source>
          <target state="translated">在<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>和<ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>，當您具現化<ph id="ph3">&lt;xref:System.Text.StringBuilder&gt;</ph>藉由呼叫物件<ph id="ph4">&lt;xref:System.Text.StringBuilder.%23ctor%28System.Int32%2CSystem.Int32%29&gt;</ph>建構函式，長度和容量<ph id="ph5">&lt;xref:System.Text.StringBuilder&gt;</ph>執行個體所能成長的值超出其<ph id="ph6">&lt;xref:System.Text.StringBuilder.MaxCapacity%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="1282" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.StringBuilder.MaxCapacity">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph> methods to append small strings.</source>
          <target state="translated">這可能是特別是當您呼叫<ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>附加小型字串的方法。</target>       </trans-unit>
        <trans-unit id="1283" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Remove(System.Int32,System.Int32)">
          <source>The number of characters to remove.</source>
          <target state="translated">要移除的字元數。</target>       </trans-unit>
        <trans-unit id="1284" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Remove(System.Int32,System.Int32)">
          <source>Removes the specified range of characters from this instance.</source>
          <target state="translated">從這個執行個體移除指定的字元範圍。</target>       </trans-unit>
        <trans-unit id="1285" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Remove(System.Int32,System.Int32)">
          <source>A reference to this instance after the excise operation has completed.</source>
          <target state="translated">移除作業完成後，這個執行個體的參考。</target>       </trans-unit>
        <trans-unit id="1286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Remove(System.Int32,System.Int32)">
          <source>The current method removes the specified range of characters from the current instance.</source>
          <target state="translated">目前的方法會將指定的字元範圍移除目前的執行個體。</target>       </trans-unit>
        <trans-unit id="1287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Remove(System.Int32,System.Int32)">
          <source>The characters at (<ph id="ph1">`startIndex`</ph><ph id="ph2"> + </ph><ph id="ph3">`length`</ph>) are moved to <ph id="ph4">`startIndex`</ph>, and the string value of the current instance is shortened by <ph id="ph5">`length`</ph>.</source>
          <target state="translated">在字元 (<ph id="ph1">`startIndex`</ph><ph id="ph2"> + </ph><ph id="ph3">`length`</ph>) 移至<ph id="ph4">`startIndex`</ph>，和目前的執行個體的字串值會縮短由<ph id="ph5">`length`</ph>。</target>       </trans-unit>
        <trans-unit id="1288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Remove(System.Int32,System.Int32)">
          <source>The capacity of the current instance is unaffected.</source>
          <target state="translated">不會影響目前的執行個體的容量。</target>       </trans-unit>
        <trans-unit id="1289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Remove(System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Remove%2A&gt;</ph> method modifies the value of the current <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> instance and returns that instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Remove%2A&gt;</ph>方法修改目前的值<ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph>執行個體，並傳回該執行個體。</target>       </trans-unit>
        <trans-unit id="1290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Remove(System.Int32,System.Int32)">
          <source>It does not create and return a new <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object.</source>
          <target state="translated">它不會建立並傳回新的<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="1291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Remove(System.Int32,System.Int32)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Remove%2A&gt;</ph> method.</source>
          <target state="translated">下列範例會示範<ph id="ph1">&lt;xref:System.Text.StringBuilder.Remove%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="1292" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Remove(System.Int32,System.Int32)">
          <source>If <ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> or <ph id="ph2">&lt;paramref name="length" /&gt;</ph> is less than zero, or <ph id="ph3">&lt;paramref name="startIndex" /&gt;</ph><ph id="ph4"> + </ph><ph id="ph5">&lt;paramref name="length" /&gt;</ph> is greater than the length of this instance.</source>
          <target state="translated">如果 <ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="length" /&gt;</ph> 小於零，或 <ph id="ph3">&lt;paramref name="startIndex" /&gt;</ph><ph id="ph4"> + </ph><ph id="ph5">&lt;paramref name="length" /&gt;</ph> 大於這個執行個體的長度。</target>       </trans-unit>
        <trans-unit id="1293" translate="yes" xml:space="preserve" uid="T:System.Text.StringBuilder">
          <source>Replaces all occurrences of a specified character or string in this instance with another specified character or string.</source>
          <target state="translated">以另一個指定的字元或字串，取代這個執行個體中指定的字元或字串的所有項目。</target>       </trans-unit>
        <trans-unit id="1294" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.Char,System.Char)">
          <source>The character to replace.</source>
          <target state="translated">要取代的字元。</target>       </trans-unit>
        <trans-unit id="1295" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.Char,System.Char)">
          <source>The character that replaces <bpt id="p1">&lt;c&gt;</bpt>oldChar<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">取代 <bpt id="p1">&lt;c&gt;</bpt>oldChar<ept id="p1">&lt;/c&gt;</ept> 的字元。</target>       </trans-unit>
        <trans-unit id="1296" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.Char,System.Char)">
          <source>Replaces all occurrences of a specified character in this instance with another specified character.</source>
          <target state="translated">以另一個指定的字元，取代這個執行個體中指定字元的所有項目。</target>       </trans-unit>
        <trans-unit id="1297" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.Char,System.Char)">
          <source>A reference to this instance with <ph id="ph1">&lt;paramref name="oldChar" /&gt;</ph> replaced by <ph id="ph2">&lt;paramref name="newChar" /&gt;</ph>.</source>
          <target state="translated">其 <ph id="ph1">&lt;paramref name="oldChar" /&gt;</ph> 已由 <ph id="ph2">&lt;paramref name="newChar" /&gt;</ph> 取代的執行個體參考。</target>       </trans-unit>
        <trans-unit id="1298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Replace(System.Char,System.Char)">
          <source>This method performs an ordinal, case-sensitive comparison to identify occurrences of <ph id="ph1">`oldChar`</ph> in the current instance.</source>
          <target state="translated">這個方法會執行序數、 區分大小寫的比較，來識別出現<ph id="ph1">`oldChar`</ph>中目前的執行個體。</target>       </trans-unit>
        <trans-unit id="1299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Replace(System.Char,System.Char)">
          <source>The size of the current <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> instance is unchanged after the replacement.</source>
          <target state="translated">目前的大小<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>更換之後，執行個體是不變。</target>       </trans-unit>
        <trans-unit id="1300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Replace(System.Char,System.Char)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Replace%2A&gt;</ph> method.</source>
          <target state="translated">下列範例會示範<ph id="ph1">&lt;xref:System.Text.StringBuilder.Replace%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="1301" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.String,System.String)">
          <source>The string to replace.</source>
          <target state="translated">要取代的字串。</target>       </trans-unit>
        <trans-unit id="1302" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.String,System.String)">
          <source>The string that replaces <bpt id="p1">&lt;c&gt;</bpt>oldValue<ept id="p1">&lt;/c&gt;</ept>, or <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">取代 <bpt id="p1">&lt;c&gt;</bpt>oldValue<ept id="p1">&lt;/c&gt;</ept> 的字串或 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1303" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.String,System.String)">
          <source>Replaces all occurrences of a specified string in this instance with another specified string.</source>
          <target state="translated">將這個執行個體中所有出現的指定字串取代為另一個指定字串。</target>       </trans-unit>
        <trans-unit id="1304" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.String,System.String)">
          <source>A reference to this instance with all instances of <ph id="ph1">&lt;paramref name="oldValue" /&gt;</ph> replaced by <ph id="ph2">&lt;paramref name="newValue" /&gt;</ph>.</source>
          <target state="translated">這個執行個體的參考，但 <ph id="ph1">&lt;paramref name="oldValue" /&gt;</ph> 的所有執行個體遭取代成 <ph id="ph2">&lt;paramref name="newValue" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Replace(System.String,System.String)">
          <source>This method performs an ordinal, case-sensitive comparison to identify occurrences of <ph id="ph1">`oldValue`</ph> in the current instance.</source>
          <target state="translated">這個方法會執行序數、 區分大小寫的比較，來識別出現<ph id="ph1">`oldValue`</ph>中目前的執行個體。</target>       </trans-unit>
        <trans-unit id="1306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Replace(System.String,System.String)">
          <source>If <ph id="ph1">`newValue`</ph> is <ph id="ph2">`null`</ph> or <ph id="ph3">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>, all occurrences of <ph id="ph4">`oldValue`</ph> are removed.</source>
          <target state="translated">如果<ph id="ph1">`newValue`</ph>是<ph id="ph2">`null`</ph>或<ph id="ph3">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>的所有項目<ph id="ph4">`oldValue`</ph>會移除。</target>       </trans-unit>
        <trans-unit id="1307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Replace(System.String,System.String)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Replace%2A&gt;</ph> method.</source>
          <target state="translated">下列範例會示範<ph id="ph1">&lt;xref:System.Text.StringBuilder.Replace%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="1308" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="oldValue" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="oldValue" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1309" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.String,System.String)">
          <source>The length of <ph id="ph1">&lt;paramref name="oldValue" /&gt;</ph> is zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="oldValue" /&gt;</ph> 的長度為零。</target>       </trans-unit>
        <trans-unit id="1310" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.String,System.String)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">加大此執行個體的值可能會超過 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1311" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.Char,System.Char,System.Int32,System.Int32)">
          <source>The character to replace.</source>
          <target state="translated">要取代的字元。</target>       </trans-unit>
        <trans-unit id="1312" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.Char,System.Char,System.Int32,System.Int32)">
          <source>The character that replaces <bpt id="p1">&lt;c&gt;</bpt>oldChar<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">取代 <bpt id="p1">&lt;c&gt;</bpt>oldChar<ept id="p1">&lt;/c&gt;</ept> 的字元。</target>       </trans-unit>
        <trans-unit id="1313" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.Char,System.Char,System.Int32,System.Int32)">
          <source>The position in this instance where the substring begins.</source>
          <target state="translated">這個執行個體中子字串開始的位置。</target>       </trans-unit>
        <trans-unit id="1314" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.Char,System.Char,System.Int32,System.Int32)">
          <source>The length of the substring.</source>
          <target state="translated">子字串的長度。</target>       </trans-unit>
        <trans-unit id="1315" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.Char,System.Char,System.Int32,System.Int32)">
          <source>Replaces, within a substring of this instance, all occurrences of a specified character with another specified character.</source>
          <target state="translated">將這個執行個體的子字串內所有出現的指定字元，取代為另一個指定的字元。</target>       </trans-unit>
        <trans-unit id="1316" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.Char,System.Char,System.Int32,System.Int32)">
          <source>A reference to this instance with <ph id="ph1">&lt;paramref name="oldChar" /&gt;</ph> replaced by <ph id="ph2">&lt;paramref name="newChar" /&gt;</ph> in the range from <ph id="ph3">&lt;paramref name="startIndex" /&gt;</ph> to <ph id="ph4">&lt;paramref name="startIndex" /&gt;</ph><ph id="ph5"> + </ph><ph id="ph6">&lt;paramref name="count" /&gt;</ph> -1.</source>
          <target state="translated">參考這個執行個體，但 <ph id="ph1">&lt;paramref name="oldChar" /&gt;</ph> 換成 <ph id="ph2">&lt;paramref name="newChar" /&gt;</ph>，範圍是 <ph id="ph3">&lt;paramref name="startIndex" /&gt;</ph> 到 <ph id="ph4">&lt;paramref name="startIndex" /&gt;</ph><ph id="ph5"> + </ph><ph id="ph6">&lt;paramref name="count" /&gt;</ph> -1。</target>       </trans-unit>
        <trans-unit id="1317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Replace(System.Char,System.Char,System.Int32,System.Int32)">
          <source>This method performs an ordinal, case-sensitive comparison to identify occurrences of <ph id="ph1">`oldChar`</ph> in the current instance.</source>
          <target state="translated">這個方法會執行序數、 區分大小寫的比較，來識別出現<ph id="ph1">`oldChar`</ph>中目前的執行個體。</target>       </trans-unit>
        <trans-unit id="1318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Replace(System.Char,System.Char,System.Int32,System.Int32)">
          <source>The size of the current <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object is unchanged after the replacement.</source>
          <target state="translated">目前的大小<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>物件在更換之後並未變更。</target>       </trans-unit>
        <trans-unit id="1319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Replace(System.Char,System.Char,System.Int32,System.Int32)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Replace%2A&gt;</ph> method.</source>
          <target state="translated">下列範例會示範<ph id="ph1">&lt;xref:System.Text.StringBuilder.Replace%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="1320" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.Char,System.Char,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;paramref name="count" /&gt;</ph> is greater than the length of the value of this instance.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;paramref name="count" /&gt;</ph> 大於這個執行個體值的長度。</target>       </trans-unit>
        <trans-unit id="1321" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.Char,System.Char,System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="1322" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.Char,System.Char,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="count" /&gt;</ph> 小於零。</target>       </trans-unit>
        <trans-unit id="1323" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.String,System.String,System.Int32,System.Int32)">
          <source>The string to replace.</source>
          <target state="translated">要取代的字串。</target>       </trans-unit>
        <trans-unit id="1324" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.String,System.String,System.Int32,System.Int32)">
          <source>The string that replaces <bpt id="p1">&lt;c&gt;</bpt>oldValue<ept id="p1">&lt;/c&gt;</ept>, or <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">取代 <bpt id="p1">&lt;c&gt;</bpt>oldValue<ept id="p1">&lt;/c&gt;</ept> 的字串或 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1325" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.String,System.String,System.Int32,System.Int32)">
          <source>The position in this instance where the substring begins.</source>
          <target state="translated">這個執行個體中子字串開始的位置。</target>       </trans-unit>
        <trans-unit id="1326" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.String,System.String,System.Int32,System.Int32)">
          <source>The length of the substring.</source>
          <target state="translated">子字串的長度。</target>       </trans-unit>
        <trans-unit id="1327" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.String,System.String,System.Int32,System.Int32)">
          <source>Replaces, within a substring of this instance, all occurrences of a specified string with another specified string.</source>
          <target state="translated">將這個執行個體的子字串內所有出現的指定字串，取代為另一個指定的字串。</target>       </trans-unit>
        <trans-unit id="1328" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.String,System.String,System.Int32,System.Int32)">
          <source>A reference to this instance with all instances of <ph id="ph1">&lt;paramref name="oldValue" /&gt;</ph> replaced by <ph id="ph2">&lt;paramref name="newValue" /&gt;</ph> in the range from <ph id="ph3">&lt;paramref name="startIndex" /&gt;</ph> to <ph id="ph4">&lt;paramref name="startIndex" /&gt;</ph><ph id="ph5"> + </ph><ph id="ph6">&lt;paramref name="count" /&gt;</ph> - 1.</source>
          <target state="translated">參考這個執行個體，但 <ph id="ph1">&lt;paramref name="oldValue" /&gt;</ph> 的所有執行個體換成 <ph id="ph2">&lt;paramref name="newValue" /&gt;</ph>，範圍是 <ph id="ph3">&lt;paramref name="startIndex" /&gt;</ph> 到 <ph id="ph4">&lt;paramref name="startIndex" /&gt;</ph><ph id="ph5"> + </ph><ph id="ph6">&lt;paramref name="count" /&gt;</ph> - 1。</target>       </trans-unit>
        <trans-unit id="1329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Replace(System.String,System.String,System.Int32,System.Int32)">
          <source>This method performs an ordinal, case-sensitive comparison to identify occurrences of <ph id="ph1">`oldValue`</ph> in the specified substring.</source>
          <target state="translated">這個方法會執行序數、 區分大小寫的比較，來識別出現<ph id="ph1">`oldValue`</ph>中指定的子字串。</target>       </trans-unit>
        <trans-unit id="1330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Replace(System.String,System.String,System.Int32,System.Int32)">
          <source>If <ph id="ph1">`newValue`</ph> is <ph id="ph2">`null`</ph> or <ph id="ph3">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>, all occurrences of <ph id="ph4">`oldValue`</ph> are removed.</source>
          <target state="translated">如果<ph id="ph1">`newValue`</ph>是<ph id="ph2">`null`</ph>或<ph id="ph3">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>的所有項目<ph id="ph4">`oldValue`</ph>會移除。</target>       </trans-unit>
        <trans-unit id="1331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Replace(System.String,System.String,System.Int32,System.Int32)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Replace%2A&gt;</ph> method.</source>
          <target state="translated">下列範例會示範<ph id="ph1">&lt;xref:System.Text.StringBuilder.Replace%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="1332" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.String,System.String,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="oldValue" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="oldValue" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1333" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.String,System.String,System.Int32,System.Int32)">
          <source>The length of <ph id="ph1">&lt;paramref name="oldValue" /&gt;</ph> is zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="oldValue" /&gt;</ph> 的長度為零。</target>       </trans-unit>
        <trans-unit id="1334" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.String,System.String,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="count" /&gt;</ph> 小於零。</target>       </trans-unit>
        <trans-unit id="1335" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.String,System.String,System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="1336" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.String,System.String,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> plus <ph id="ph2">&lt;paramref name="count" /&gt;</ph> indicates a character position not within this instance.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> 加上 <ph id="ph2">&lt;paramref name="count" /&gt;</ph> 表示不在這個執行個體中的字元位置。</target>       </trans-unit>
        <trans-unit id="1337" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.String,System.String,System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="1338" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.String,System.String,System.Int32,System.Int32)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">加大此執行個體的值可能會超過 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1339" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The object to populate with serialization information.</source>
          <target state="translated">要使用序列化資訊來填入的物件。</target>       </trans-unit>
        <trans-unit id="1340" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The place to store and retrieve serialized data.</source>
          <target state="translated">要儲存並擷取序列化資料的位置。</target>       </trans-unit>
        <trans-unit id="1341" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Reserved for future use.</source>
          <target state="translated">保留供未來使用。</target>       </trans-unit>
        <trans-unit id="1342" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Populates a <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> object with the data necessary to deserialize the current <ph id="ph2">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object.</source>
          <target state="translated">將還原序列化目前 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> 物件所需的資料填入 (Populate) <ph id="ph2">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="1343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">`context`</ph> parameter is reserved for future use and does not participate in this operation.</source>
          <target state="translated"><ph id="ph1">`context`</ph>參數已保留供未來使用，並不會參與這項作業。</target>       </trans-unit>
        <trans-unit id="1344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationInfo.AddValue%28System.String%2CSystem.Object%2CSystem.Type%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">如需詳細資訊，請參閱 <ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationInfo.AddValue%28System.String%2CSystem.Object%2CSystem.Type%29?displayProperty=nameWithType&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="1345" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source><ph id="ph1">&lt;paramref name="info" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="info" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">需要完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="1347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">這個成員無法供部分信任或安全性透明程式碼。</target>       </trans-unit>
        <trans-unit id="1348" translate="yes" xml:space="preserve" uid="T:System.Text.StringBuilder">
          <source>Converts the value of a <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>.</source>
          <target state="translated">將 <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 的值轉換為 <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1349" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.ToString">
          <source>Converts the value of this instance to a <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>.</source>
          <target state="translated">將這個執行個體的值轉換為 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1350" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.ToString">
          <source>A string whose value is the same as this instance.</source>
          <target state="translated">其值和這個執行個體相同的字串。</target>       </trans-unit>
        <trans-unit id="1351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.ToString">
          <source>You must call the <ph id="ph1">&lt;xref:System.Text.StringBuilder.ToString%2A&gt;</ph> method to convert the <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> object to a <ph id="ph3">&lt;xref:System.String&gt;</ph> object before you can pass the string represented by the <ph id="ph4">&lt;xref:System.Text.StringBuilder&gt;</ph> object to a method that has a <ph id="ph5">&lt;xref:System.String&gt;</ph> parameter or display it in the user interface.</source>
          <target state="translated">您必須呼叫<ph id="ph1">&lt;xref:System.Text.StringBuilder.ToString%2A&gt;</ph>方法，將轉換<ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph>物件<ph id="ph3">&lt;xref:System.String&gt;</ph>物件之前，您可以傳遞所代表的字串<ph id="ph4">&lt;xref:System.Text.StringBuilder&gt;</ph>方法，該方法的物件<ph id="ph5">&lt;xref:System.String&gt;</ph>參數或將它顯示在使用者介面。</target>       </trans-unit>
        <trans-unit id="1352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.ToString">
          <source>The following example demonstrates calling the <ph id="ph1">&lt;xref:System.Text.StringBuilder.ToString%2A&gt;</ph> method.</source>
          <target state="translated">下列程式碼範例示範如何呼叫 <ph id="ph1">&lt;xref:System.Text.StringBuilder.ToString%2A&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="1353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.ToString">
          <source>This example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> class.</source>
          <target state="translated">這個範例是針對所提供之較大範例的一部分<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="1354" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.ToString(System.Int32,System.Int32)">
          <source>The starting position of the substring in this instance.</source>
          <target state="translated">這個執行個體中的子字串開始位置。</target>       </trans-unit>
        <trans-unit id="1355" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.ToString(System.Int32,System.Int32)">
          <source>The length of the substring.</source>
          <target state="translated">子字串的長度。</target>       </trans-unit>
        <trans-unit id="1356" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.ToString(System.Int32,System.Int32)">
          <source>Converts the value of a substring of this instance to a <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>.</source>
          <target state="translated">將這個執行個體的子字串值轉換為 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1357" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.ToString(System.Int32,System.Int32)">
          <source>A string whose value is the same as the specified substring of this instance.</source>
          <target state="translated">字串，此字串值與這個執行個體的指定子字串值相同。</target>       </trans-unit>
        <trans-unit id="1358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.ToString(System.Int32,System.Int32)">
          <source>You must call the <ph id="ph1">&lt;xref:System.Text.StringBuilder.ToString%2A&gt;</ph> method to convert the <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> object to a <ph id="ph3">&lt;xref:System.String&gt;</ph> object before you can pass the string represented by the <ph id="ph4">&lt;xref:System.Text.StringBuilder&gt;</ph> object to a method that has a <ph id="ph5">&lt;xref:System.String&gt;</ph> parameter or display it in the user interface.</source>
          <target state="translated">您必須呼叫<ph id="ph1">&lt;xref:System.Text.StringBuilder.ToString%2A&gt;</ph>方法，將轉換<ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph>物件<ph id="ph3">&lt;xref:System.String&gt;</ph>物件之前，您可以傳遞所代表的字串<ph id="ph4">&lt;xref:System.Text.StringBuilder&gt;</ph>方法，該方法的物件<ph id="ph5">&lt;xref:System.String&gt;</ph>參數或將它顯示在使用者介面。</target>       </trans-unit>
        <trans-unit id="1359" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.ToString(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> or <ph id="ph2">&lt;paramref name="length" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="length" /&gt;</ph> 小於零。</target>       </trans-unit>
        <trans-unit id="1360" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.ToString(System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="1361" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.ToString(System.Int32,System.Int32)">
          <source>The sum of <ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> and <ph id="ph2">&lt;paramref name="length" /&gt;</ph> is greater than the length of the current instance.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> 和 <ph id="ph2">&lt;paramref name="length" /&gt;</ph> 的總和大於目前執行個體的長度。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>