<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="EncodingProvider.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5213b813ec5e5a38a3816aedc55e2d6e2e5a7636c.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">213b813ec5e5a38a3816aedc55e2d6e2e5a7636c</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Text.EncodingProvider">
          <source>Provides the base class for an encoding provider, which supplies encodings that are unavailable on a particular platform.</source>
          <target state="translated">提供編碼提供者的基底類別，這個提供者提供特定平台無法使用的編碼方式。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>An encoding provider supplies encodings that are not otherwise available on a particular target platform.</source>
          <target state="translated">其編碼提供者提供就無法在特定目標平台上使用的編碼方式。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>The .NET Framework on the Windows desktop supports a large number of character encodings and code pages.</source>
          <target state="translated">在 Windows 桌面上的.NET Framework 支援大量的字元編碼方式和字碼頁。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>You can get a complete list of encodings available in the .NET Framework on the Windows desktop by calling the <ph id="ph1">&lt;xref:System.Text.Encoding.GetEncodings%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">您可以在 Windows 桌面上取得.NET Framework 中可用的編碼方式的完整清單，藉由呼叫<ph id="ph1">&lt;xref:System.Text.Encoding.GetEncodings%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>.NET Core, on the other hand, by default supports only the following encodings:</source>
          <target state="translated">.NET core 相反地，根據預設支援下列編碼方式：</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>ASCII (code page 20127), which is returned by the <ph id="ph1">&lt;xref:System.Text.Encoding.ASCII%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">ASCII （字碼頁為 20127），由<ph id="ph1">&lt;xref:System.Text.Encoding.ASCII%2A?displayProperty=nameWithType&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>ISO-8859-1 (code page 28591).</source>
          <target state="translated">ISO 8859-1 （字碼頁 28591）。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>UTF-7 (code page 65000), which is returned by the <ph id="ph1">&lt;xref:System.Text.Encoding.UTF7%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Utf-7 （字碼頁為 65000），傳回<ph id="ph1">&lt;xref:System.Text.Encoding.UTF7%2A?displayProperty=nameWithType&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>UTF-8 (code page 65001), which is returned by the <ph id="ph1">&lt;xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Utf-8 （字碼頁 65001），傳回<ph id="ph1">&lt;xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>UTF-16 and UTF-16LE (code page 1200), which is returned by the <ph id="ph1">&lt;xref:System.Text.Encoding.Unicode%2A&gt;</ph> property.</source>
          <target state="translated">Utf-16 和 UTF-16LE （字碼頁為 1200年），傳回<ph id="ph1">&lt;xref:System.Text.Encoding.Unicode%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>UTF-16BE (code page 1201), which is instantiated by calling the <ph id="ph1">&lt;xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType&gt;</ph> constructor with a <ph id="ph3">`bigEndian`</ph> value of <ph id="ph4">`true`</ph>.</source>
          <target state="translated">UTF-16BE （字碼頁為 1201年），這藉由呼叫具現化<ph id="ph1">&lt;xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType&gt;</ph>或<ph id="ph2">&lt;xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType&gt;</ph>具有建構函式<ph id="ph3">`bigEndian`</ph>值<ph id="ph4">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>UTF-32 and UTF-32LE (code page 12000), which is returned by the <ph id="ph1">&lt;xref:System.Text.Encoding.UTF32%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Utf-32 和 UTF-32LE （字碼頁為 12000），傳回<ph id="ph1">&lt;xref:System.Text.Encoding.UTF32%2A?displayProperty=nameWithType&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>UTF-32BE (code page 12001), which is instantiated by calling an <ph id="ph1">&lt;xref:System.Text.UTF32Encoding&gt;</ph> constructor that has a <ph id="ph2">`bigEndian`</ph> parameter and providing a value of <ph id="ph3">`true`</ph> in the method call.</source>
          <target state="translated">UTF-32BE （字碼頁 12001），這藉由呼叫具現化<ph id="ph1">&lt;xref:System.Text.UTF32Encoding&gt;</ph>建構函式<ph id="ph2">`bigEndian`</ph>參數，並提供值<ph id="ph3">`true`</ph>方法呼叫中。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>Starting with the .NET Framework 4.6, <ph id="ph1">&lt;xref:System.Text.EncodingProvider&gt;</ph> is the base class that makes otherwise unavailable encodings available to the .NET Framework.</source>
          <target state="translated">從.NET Framework 4.6 開始<ph id="ph1">&lt;xref:System.Text.EncodingProvider&gt;</ph>讓無法使用的基底類別的.NET framework 可用編碼。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>This involves the following steps:</source>
          <target state="translated">這包含下列步驟：</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>Define a subclass of <ph id="ph1">&lt;xref:System.Text.EncodingProvider&gt;</ph> that overrides the two abstract <ph id="ph2">&lt;xref:System.Text.EncodingProvider.GetEncoding%2A&gt;</ph> overloads, <ph id="ph3">&lt;xref:System.Text.EncodingProvider.GetEncoding%28System.Int32%29&gt;</ph> and <ph id="ph4">&lt;xref:System.Text.EncodingProvider.GetEncoding%28System.String%29&gt;</ph>.</source>
          <target state="translated">定義的子類別<ph id="ph1">&lt;xref:System.Text.EncodingProvider&gt;</ph>會覆寫兩個抽象<ph id="ph2">&lt;xref:System.Text.EncodingProvider.GetEncoding%2A&gt;</ph>多載，<ph id="ph3">&lt;xref:System.Text.EncodingProvider.GetEncoding%28System.Int32%29&gt;</ph>和<ph id="ph4">&lt;xref:System.Text.EncodingProvider.GetEncoding%28System.String%29&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>These overloads return the otherwise unsupported encoding by code page identifier and by name.</source>
          <target state="translated">這些多載會傳回在其他不支援的編碼方式字碼頁識別項和名稱。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>Note that you can also choose to return a default encoding if the <ph id="ph1">&lt;xref:System.Text.EncodingProvider.GetEncoding%28System.Int32%29&gt;</ph> method is called with an argument of 0.</source>
          <target state="translated">請注意，您也可以選擇傳回編碼預設<ph id="ph1">&lt;xref:System.Text.EncodingProvider.GetEncoding%28System.Int32%29&gt;</ph>方法呼叫的引數為 0。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>Optionally, you can override the virtual <ph id="ph1">&lt;xref:System.Text.EncodingProvider.GetEncoding%28System.Int32%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29&gt;</ph> and <ph id="ph2">&lt;xref:System.Text.EncodingProvider.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29&gt;</ph> methods.</source>
          <target state="translated">（選擇性） 您可以覆寫虛擬<ph id="ph1">&lt;xref:System.Text.EncodingProvider.GetEncoding%28System.Int32%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29&gt;</ph>和<ph id="ph2">&lt;xref:System.Text.EncodingProvider.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>In most cases, this is not necessary, since the base class provides a default implementation.</source>
          <target state="translated">在大部分情況下，這並非必要，因為基底類別提供的預設實作。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>Pass the <ph id="ph1">&lt;xref:System.Text.EncodingProvider&gt;</ph> instance to the <ph id="ph2">&lt;xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=nameWithType&gt;</ph> method to make the encodings supplied by the <ph id="ph3">&lt;xref:System.Text.EncodingProvider&gt;</ph> object available to the common language runtime.</source>
          <target state="translated">傳遞<ph id="ph1">&lt;xref:System.Text.EncodingProvider&gt;</ph>執行個體<ph id="ph2">&lt;xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=nameWithType&gt;</ph>方法所提供的編碼方式<ph id="ph3">&lt;xref:System.Text.EncodingProvider&gt;</ph>common language runtime 提供的物件。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>Call an <ph id="ph1">&lt;xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType&gt;</ph> overload to retrieve the encoding.</source>
          <target state="translated">呼叫<ph id="ph1">&lt;xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType&gt;</ph>多載來擷取的編碼方式。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>The <ph id="ph1">&lt;xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType&gt;</ph> method will call the corresponding <ph id="ph2">&lt;xref:System.Text.EncodingProvider.GetEncoding%2A?displayProperty=nameWithType&gt;</ph> to determine whether it can supply the requested encoding.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType&gt;</ph>方法會呼叫對應<ph id="ph2">&lt;xref:System.Text.EncodingProvider.GetEncoding%2A?displayProperty=nameWithType&gt;</ph>來判斷是否可以提供要求之編碼方式。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>The .NET Framework Class Library provides one static property, <ph id="ph1">&lt;xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=nameWithType&gt;</ph>, that returns an <ph id="ph2">&lt;xref:System.Text.EncodingProvider&gt;</ph> object that makes the full set of encodings available on the desktop .NET Framework Class Library available to <ph id="ph3">[!INCLUDE[net_core](~/includes/net-core-md.md)]</ph> applications.</source>
          <target state="translated">.NET Framework 類別庫會提供一個靜態屬性， <ph id="ph1">&lt;xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=nameWithType&gt;</ph>，傳回<ph id="ph2">&lt;xref:System.Text.EncodingProvider&gt;</ph>物件可產生一組完整的編碼方式在桌面的.NET Framework 類別庫可<ph id="ph3">[!INCLUDE[net_core](~/includes/net-core-md.md)]</ph>應用程式。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>In addition, you can derive from the <ph id="ph1">&lt;xref:System.Text.EncodingProvider&gt;</ph> class to make your own encodings available.</source>
          <target state="translated">此外，您可以從衍生<ph id="ph1">&lt;xref:System.Text.EncodingProvider&gt;</ph>類別，以提供您自己的編碼方式。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Text.EncodingProvider" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Text.EncodingProvider" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="T:System.Text.EncodingProvider">
          <source>Returns an encoding.</source>
          <target state="translated">傳回編碼方式。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32)">
          <source>The code page identifier of the requested encoding.</source>
          <target state="translated">要求之編碼方式的字碼頁識別項。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32)">
          <source>Returns the encoding associated with the specified code page identifier.</source>
          <target state="translated">傳回與指定字碼頁識別項相關聯的編碼方式。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32)">
          <source>The encoding that is associated with the specified code page, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.Text.EncodingProvider" /&gt;</ph> cannot return a valid encoding that corresponds to <ph id="ph3">&lt;paramref name="codepage" /&gt;</ph>.</source>
          <target state="translated">與指定字碼頁相關聯的編碼方式，或者，如果 <ph id="ph2">&lt;see cref="T:System.Text.EncodingProvider" /&gt;</ph> 無法傳回對應於 <ph id="ph3">&lt;paramref name="codepage" /&gt;</ph> 的有效編碼方式，則為 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32)">
          <source>Notes to inheritors</source>
          <target state="translated">繼承者注意事項</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32)">
          <source>You override the <bpt id="p1">[</bpt>GetEncoding(Int32)<ept id="p1">](&lt;xref:System.Text.EncodingProvider.GetEncoding(System.Int32)&gt;)</ept> method to return the encoding or encodings supported by your <ph id="ph1">&lt;xref:System.Text.EncodingProvider&gt;</ph> subclass.</source>
          <target state="translated">您覆寫<bpt id="p1">[</bpt>GetEncoding(Int32)<ept id="p1">](&lt;xref:System.Text.EncodingProvider.GetEncoding(System.Int32)&gt;)</ept>方法傳回的編碼方式或所支援的編碼程式<ph id="ph1">&lt;xref:System.Text.EncodingProvider&gt;</ph>子類別。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32)">
          <source>When user code attempts to retrieve an encoding by calling the <bpt id="p1">[</bpt>GetEncoding(Int32)<ept id="p1">](&lt;xref:System.Text.EncodingProvider.GetEncoding(System.Int32)&gt;)</ept> method, the method passes the <ph id="ph1">`codepage`</ph> identifier to every registered encoding provider until one returns a valid encoding.</source>
          <target state="translated">當使用者程式碼嘗試擷取的編碼方式，藉由呼叫<bpt id="p1">[</bpt>GetEncoding(Int32)<ept id="p1">](&lt;xref:System.Text.EncodingProvider.GetEncoding(System.Int32)&gt;)</ept>方法，此方法會傳遞<ph id="ph1">`codepage`</ph>識別碼給每個已註冊編碼的提供者直到其中一個傳回的有效編碼方式。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32)">
          <source>If none returns a valid encoding, the <bpt id="p1">[</bpt>GetEncoding(Int32)<ept id="p1">](&lt;xref:System.Text.EncodingProvider.GetEncoding(System.Int32)&gt;)</ept> method attempts to retrieve a cached encoding whose code page identifier is <ph id="ph1">`codepage`</ph>.</source>
          <target state="translated">如果沒有傳回有效的編碼， <bpt id="p1">[</bpt>GetEncoding(Int32)<ept id="p1">](&lt;xref:System.Text.EncodingProvider.GetEncoding(System.Int32)&gt;)</ept>方法嘗試擷取快取的編碼方式，其字碼頁識別項是<ph id="ph1">`codepage`</ph>。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32)">
          <source>Because of this, if <ph id="ph1">`codepage`</ph> is not the code page identifier of an encoding that you support, the method should return <ph id="ph2">`null`</ph>; it should never throw an exception.</source>
          <target state="translated">因為這個緣故，如果<ph id="ph1">`codepage`</ph>不是字碼頁識別項的編碼方式的支援，這個方法應傳回<ph id="ph2">`null`</ph>; 它應該絕不會擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32)">
          <source>Note that you can also choose to return a default code page if the value of the <ph id="ph1">`codepage`</ph> argument is 0.</source>
          <target state="translated">請注意，您也可以選擇傳回預設字碼頁，如果值<ph id="ph1">`codepage`</ph>引數為 0。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32)">
          <source>Notes to callers</source>
          <target state="translated">呼叫者注意事項</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32)">
          <source>This method is called by the <bpt id="p1">[</bpt>Encoding.GetEncoding(Int32)<ept id="p1">](&lt;xref:System.Text.Encoding.GetEncoding(System.Int32)&gt;)</ept> method.</source>
          <target state="translated">這個方法會呼叫<bpt id="p1">[</bpt>Encoding.GetEncoding(Int32)<ept id="p1">](&lt;xref:System.Text.Encoding.GetEncoding(System.Int32)&gt;)</ept>方法。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32)">
          <source>You should not call it directly from user code.</source>
          <target state="translated">您不應該呼叫它，直接從使用者程式碼。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32)">
          <source>You override the <ph id="ph1">&lt;see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32)" /&gt;</ph> method to return the encoding or encodings supported by your <ph id="ph2">&lt;see cref="T:System.Text.EncodingProvider" /&gt;</ph> subclass.</source>
          <target state="translated">您覆寫<ph id="ph1">&lt;see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32)" /&gt;</ph>方法傳回的編碼方式或所支援的編碼程式<ph id="ph2">&lt;see cref="T:System.Text.EncodingProvider" /&gt;</ph>子類別。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32)">
          <source>When user code attempts to retrieve an encoding by calling the <ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /&gt;</ph> method, the method passes the <ph id="ph2">&lt;paramref name="codepage" /&gt;</ph> identifier to every registered encoding provider until one returns a valid encoding.</source>
          <target state="translated">當使用者程式碼嘗試擷取的編碼方式，藉由呼叫<ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /&gt;</ph>方法，此方法會傳遞<ph id="ph2">&lt;paramref name="codepage" /&gt;</ph>識別碼給每個已註冊編碼的提供者直到其中一個傳回的有效編碼方式。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32)">
          <source>If none returns a valid encoding, the <ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /&gt;</ph> method attempts to retrieve a cached encoding whose code page identifier is <ph id="ph2">&lt;paramref name="codepage" /&gt;</ph>.</source>
          <target state="translated">如果沒有傳回有效的編碼，<ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /&gt;</ph>方法嘗試擷取快取的編碼方式，其字碼頁識別項是<ph id="ph2">&lt;paramref name="codepage" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32)">
          <source>Because of this, if <ph id="ph1">&lt;paramref name="codepage" /&gt;</ph> is not the code page identifier of an encoding that you support, the method should return <ph id="ph2">&lt;see langword="null" /&gt;</ph>; it should never throw an exception.</source>
          <target state="translated">因為這個緣故，如果<ph id="ph1">&lt;paramref name="codepage" /&gt;</ph>不是字碼頁識別項的編碼方式的支援，這個方法應傳回<ph id="ph2">&lt;see langword="null" /&gt;</ph>; 它應該絕不會擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32)">
          <source>This method is called by the <ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /&gt;</ph> method.</source>
          <target state="translated">這個方法會呼叫<ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32)">
          <source>You should not call it directly from user code.</source>
          <target state="translated">您不應該呼叫它，直接從使用者程式碼。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>The name of the requested encoding.</source>
          <target state="translated">要求之編碼方式的名稱。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>Returns the encoding with the specified name.</source>
          <target state="translated">傳回具有指定名稱的編碼方式。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>The encoding that is associated with the specified name, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.Text.EncodingProvider" /&gt;</ph> cannot return a valid encoding that corresponds to <ph id="ph3">&lt;paramref name="name" /&gt;</ph>.</source>
          <target state="translated">與指定名稱相關聯的編碼方式，或者，如果 <ph id="ph2">&lt;see cref="T:System.Text.EncodingProvider" /&gt;</ph> 無法傳回對應於 <ph id="ph3">&lt;paramref name="name" /&gt;</ph> 的有效編碼方式，則為 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>Notes to inheritors</source>
          <target state="translated">繼承者注意事項</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>You override the <bpt id="p1">[</bpt>GetEncoding(String)<ept id="p1">](&lt;xref:System.Text.EncodingProvider.GetEncoding(System.String)&gt;)</ept> method to return the encoding or encodings supported by your <ph id="ph1">&lt;xref:System.Text.EncodingProvider&gt;</ph> subclass.</source>
          <target state="translated">您覆寫<bpt id="p1">[</bpt>GetEncoding(String)<ept id="p1">](&lt;xref:System.Text.EncodingProvider.GetEncoding(System.String)&gt;)</ept>方法傳回的編碼方式或所支援的編碼程式<ph id="ph1">&lt;xref:System.Text.EncodingProvider&gt;</ph>子類別。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>When user code attempts to retrieve an encoding by calling the <bpt id="p1">[</bpt>GetEncoding(String)<ept id="p1">](&lt;xref:System.Text.EncodingProvider.GetEncoding(System.String)&gt;)</ept> method, the method passes the <ph id="ph1">`name`</ph> argument to every registered encoding provider until one returns a valid encoding.</source>
          <target state="translated">當使用者程式碼嘗試擷取的編碼方式，藉由呼叫<bpt id="p1">[</bpt>GetEncoding(String)<ept id="p1">](&lt;xref:System.Text.EncodingProvider.GetEncoding(System.String)&gt;)</ept>方法，此方法會傳遞<ph id="ph1">`name`</ph>每個已註冊編碼的提供者直到其中一個傳回的有效編碼方式的引數。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>If none returns a valid encoding, the <bpt id="p1">[</bpt>GetEncoding(String)<ept id="p1">](&lt;xref:System.Text.EncodingProvider.GetEncoding(System.String)&gt;)</ept> method attempts to retrieve a cached encoding whose name is <ph id="ph1">`name`</ph>.</source>
          <target state="translated">如果沒有傳回有效的編碼， <bpt id="p1">[</bpt>GetEncoding(String)<ept id="p1">](&lt;xref:System.Text.EncodingProvider.GetEncoding(System.String)&gt;)</ept>方法嘗試擷取快取的編碼方式，其名稱是<ph id="ph1">`name`</ph>。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>Because of this, if <ph id="ph1">`name`</ph> is not the name of an encoding that you support, the method should return <ph id="ph2">`null`</ph>.</source>
          <target state="translated">因為這個緣故，如果<ph id="ph1">`name`</ph>不支援，這個方法應傳回的編碼名稱<ph id="ph2">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>The only case in which the method should throw an exception is if <ph id="ph1">`name`</ph> is <ph id="ph2">`null`</ph>.</source>
          <target state="translated">中的方法應該擲回例外狀況的唯一情況是如果<ph id="ph1">`name`</ph>是<ph id="ph2">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>Notes to callers</source>
          <target state="translated">呼叫者注意事項</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>This method is called by the <bpt id="p1">[</bpt>Encoding.GetEncoding(String)<ept id="p1">](&lt;xref:System.Text.Encoding.GetEncoding(System.String)&gt;)</ept> method.</source>
          <target state="translated">這個方法會呼叫<bpt id="p1">[</bpt>Encoding.GetEncoding(String)<ept id="p1">](&lt;xref:System.Text.Encoding.GetEncoding(System.String)&gt;)</ept>方法。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>You should not call it directly from user code.</source>
          <target state="translated">您不應該呼叫它，直接從使用者程式碼。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>You override the <ph id="ph1">&lt;see cref="M:System.Text.EncodingProvider.GetEncoding(System.String)" /&gt;</ph> method to return the encoding or encodings supported by your <ph id="ph2">&lt;see cref="T:System.Text.EncodingProvider" /&gt;</ph> subclass.</source>
          <target state="translated">您覆寫<ph id="ph1">&lt;see cref="M:System.Text.EncodingProvider.GetEncoding(System.String)" /&gt;</ph>方法傳回的編碼方式或所支援的編碼程式<ph id="ph2">&lt;see cref="T:System.Text.EncodingProvider" /&gt;</ph>子類別。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>When user code attempts to retrieve an encoding by calling the <ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.String)" /&gt;</ph> method, the method passes the <ph id="ph2">&lt;paramref name="name" /&gt;</ph> argument to every registered encoding provider until one returns a valid encoding.</source>
          <target state="translated">當使用者程式碼嘗試擷取的編碼方式，藉由呼叫<ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.String)" /&gt;</ph>方法，此方法會傳遞<ph id="ph2">&lt;paramref name="name" /&gt;</ph>每個已註冊編碼的提供者直到其中一個傳回的有效編碼方式的引數。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>If none returns a valid encoding, the <ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.String)" /&gt;</ph> method attempts to retrieve a cached encoding whose name is <ph id="ph2">&lt;paramref name="name" /&gt;</ph>.</source>
          <target state="translated">如果沒有傳回有效的編碼，<ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.String)" /&gt;</ph>方法嘗試擷取快取的編碼方式，其名稱是<ph id="ph2">&lt;paramref name="name" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>Because of this, if <ph id="ph1">&lt;paramref name="name" /&gt;</ph> is not the name of an encoding that you support, the method should return <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">因為這個緣故，如果<ph id="ph1">&lt;paramref name="name" /&gt;</ph>不支援，這個方法應傳回的編碼名稱<ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>The only case in which the method should throw an exception is if <ph id="ph1">&lt;paramref name="name" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">中的方法應該擲回例外狀況的唯一情況是如果<ph id="ph1">&lt;paramref name="name" /&gt;</ph>是<ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>This method is called by the <ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.String)" /&gt;</ph> method.</source>
          <target state="translated">這個方法會呼叫<ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.String)" /&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>You should not call it directly from user code.</source>
          <target state="translated">您不應該呼叫它，直接從使用者程式碼。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>The code page identifier of the requested encoding.</source>
          <target state="translated">要求之編碼方式的字碼頁識別項。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>An object that provides an error-handling procedure when a character cannot be encoded with this encoding.</source>
          <target state="translated">物件，在無法以這個編碼方式將字元編碼時提供錯誤處理程序。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>An object that provides an error-handling procedure when a byte sequence cannot be decoded with this encoding.</source>
          <target state="translated">物件，在無法以這個編碼方式將位元組序列解碼時提供錯誤處理程序。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>Returns the encoding associated with the specified code page identifier.</source>
          <target state="translated">傳回與指定字碼頁識別項相關聯的編碼方式。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>Parameters specify an error handler for characters that cannot be encoded and byte sequences that cannot be decoded.</source>
          <target state="translated">參數會針對無法編碼的字元以及無法解碼的位元組序列指定錯誤處理常式。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>The encoding that is associated with the specified code page, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.Text.EncodingProvider" /&gt;</ph> cannot return a valid encoding that corresponds to <ph id="ph3">&lt;paramref name="codepage" /&gt;</ph>.</source>
          <target state="translated">與指定字碼頁相關聯的編碼方式，或者，如果 <ph id="ph2">&lt;see cref="T:System.Text.EncodingProvider" /&gt;</ph> 無法傳回對應於 <ph id="ph3">&lt;paramref name="codepage" /&gt;</ph> 的有效編碼方式，則為 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>The <ph id="ph1">`encoderFallback`</ph> and <ph id="ph2">`decoderFallback`</ph> parameters are objects that define the fallback strategy used in the event that an encoder cannot convert a character to a sequence of bytes or a decoder cannot convert a sequence of bytes to a character.</source>
          <target state="translated"><ph id="ph1">`encoderFallback`</ph>和<ph id="ph2">`decoderFallback`</ph>參數是物件，定義所使用的編碼器無法將字元轉換成位元組序列，或解碼器無法將位元組序列轉換為字元的後援策略。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>The .NET Framework provides the following fallback mechanisms:</source>
          <target state="translated">.NET Framework 提供下列後援機制：</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>Exception fallback.</source>
          <target state="translated">例外狀況後援。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>If the <ph id="ph1">`encoderFallback`</ph> argument is an instance of <ph id="ph2">&lt;xref:System.Text.EncoderExceptionFallback&gt;</ph>, or the <ph id="ph3">`decoderExceptionFallback`</ph> argument is an instance of <ph id="ph4">&lt;xref:System.Text.DecoderExceptionFallback&gt;</ph>, the encoding method throws an exception if characters cannot be encoded, and the decoding method throws an exception if a byte sequence cannot be decoded.</source>
          <target state="translated">如果<ph id="ph1">`encoderFallback`</ph>引數是的執行個體<ph id="ph2">&lt;xref:System.Text.EncoderExceptionFallback&gt;</ph>，或<ph id="ph3">`decoderExceptionFallback`</ph>引數是的執行個體<ph id="ph4">&lt;xref:System.Text.DecoderExceptionFallback&gt;</ph>，如果無法編碼的字元，而且如果位元組解碼方法擲回例外狀況的編碼方法擲回例外狀況無法解碼順序。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>Replacement fallback.</source>
          <target state="translated">取代後援。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>If the <ph id="ph1">`encoderFallback`</ph> argument is an instance of <ph id="ph2">&lt;xref:System.Text.EncoderReplacementFallback&gt;</ph>, or the <ph id="ph3">`decoderExceptionFallback`</ph> argument is an instance of <ph id="ph4">&lt;xref:System.Text.DecoderReplacementFallback&gt;</ph>, the encoding and decoding methods substitute a replacement string for characters that cannot be encoded and byte sequences cannot be decoded.</source>
          <target state="translated">如果<ph id="ph1">`encoderFallback`</ph>引數是的執行個體<ph id="ph2">&lt;xref:System.Text.EncoderReplacementFallback&gt;</ph>，或<ph id="ph3">`decoderExceptionFallback`</ph>引數是的執行個體<ph id="ph4">&lt;xref:System.Text.DecoderReplacementFallback&gt;</ph>、 編碼和解碼方法取代無法編碼的字元取代字串和位元組序列不可為解碼。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>If you instantiated the replacement fallback object by calling the default constructor, the replacement character is a "?".</source>
          <target state="translated">如果您透過具現化取代後援物件呼叫預設建構函式，取代字元是"？"。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>If you call the <ph id="ph1">&lt;xref:System.Text.EncoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Text.DecoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType&gt;</ph> constructor, you can specify the replacement string.</source>
          <target state="translated">如果您呼叫<ph id="ph1">&lt;xref:System.Text.EncoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType&gt;</ph>或<ph id="ph2">&lt;xref:System.Text.DecoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType&gt;</ph>建構函式，您可以指定取代字串。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>Best-fit fallback.</source>
          <target state="translated">自動調整的後援。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>You can derive from the <ph id="ph1">&lt;xref:System.Text.EncoderFallback&gt;</ph> or <ph id="ph2">&lt;xref:System.Text.DecoderFallback&gt;</ph> class to implement a best-fit replacement mechanism.</source>
          <target state="translated">您可以從衍生<ph id="ph1">&lt;xref:System.Text.EncoderFallback&gt;</ph>或<ph id="ph2">&lt;xref:System.Text.DecoderFallback&gt;</ph>類別來實作自動調整的取代機制。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>Because calls to this method use your implementation of the <ph id="ph1">&lt;see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32)" /&gt;</ph> method, you do not have to override it.</source>
          <target state="translated">因為呼叫此方法會使用您實作<ph id="ph1">&lt;see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32)" /&gt;</ph>方法，您不必覆寫它。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>When user code attempts to retrieve an encoding by calling the <ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" /&gt;</ph> method, the method passes the <ph id="ph2">&lt;paramref name="codepage" /&gt;</ph> identifier to every registered encoding provider until one returns a valid encoding.</source>
          <target state="translated">當使用者程式碼嘗試擷取的編碼方式，藉由呼叫<ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" /&gt;</ph>方法，此方法會傳遞<ph id="ph2">&lt;paramref name="codepage" /&gt;</ph>識別碼給每個已註冊編碼的提供者直到其中一個傳回的有效編碼方式。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>If none returns a valid encoding, the <ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /&gt;</ph> method attempts to retrieve a cached encoding whose code page identifier is <ph id="ph2">&lt;paramref name="codepage" /&gt;</ph>.</source>
          <target state="translated">如果沒有傳回有效的編碼，<ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /&gt;</ph>方法嘗試擷取快取的編碼方式，其字碼頁識別項是<ph id="ph2">&lt;paramref name="codepage" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>Because of this, if you do choose to override the <ph id="ph1">&lt;see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" /&gt;</ph> method, your override should return <ph id="ph2">&lt;see langword="null" /&gt;</ph> if <ph id="ph3">&lt;paramref name="codepage" /&gt;</ph> is not the code page identifier of an encoding that you support; it should never throw an exception.</source>
          <target state="translated">因為這個緣故，如果您選擇要覆寫<ph id="ph1">&lt;see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" /&gt;</ph>方法，您的覆寫應傳回<ph id="ph2">&lt;see langword="null" /&gt;</ph>如果<ph id="ph3">&lt;paramref name="codepage" /&gt;</ph>的編碼方式的字碼頁識別項不是，您的支援，它應該絕不會擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>This method is called by the <ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" /&gt;</ph> method.</source>
          <target state="translated">這個方法會呼叫<ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" /&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>You should not call it directly from user code.</source>
          <target state="translated">您不應該呼叫它，直接從使用者程式碼。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>The name of the preferred encoding.</source>
          <target state="translated">慣用的編碼方式名稱。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>An object that provides an error-handling procedure when a character cannot be encoded with this encoding.</source>
          <target state="translated">物件，在無法以這個編碼方式將字元編碼時提供錯誤處理程序。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>An object that provides an error-handling procedure when a byte sequence cannot be decoded with the current encoding.</source>
          <target state="translated">物件，該物件會在無法以目前編碼方式將位元組序列解碼時提供錯誤處理程序。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>Returns the encoding associated with the specified name.</source>
          <target state="translated">傳回與指定名稱關聯的編碼方式。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>Parameters specify an error handler for characters that cannot be encoded and byte sequences that cannot be decoded.</source>
          <target state="translated">參數會針對無法編碼的字元以及無法解碼的位元組序列指定錯誤處理常式。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>The encoding that is associated with the specified name, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.Text.EncodingProvider" /&gt;</ph> cannot return a valid encoding that corresponds to <ph id="ph3">&lt;paramref name="name" /&gt;</ph>.</source>
          <target state="translated">與指定名稱相關聯的編碼方式，或者，如果 <ph id="ph2">&lt;see cref="T:System.Text.EncodingProvider" /&gt;</ph> 無法傳回對應於 <ph id="ph3">&lt;paramref name="name" /&gt;</ph> 的有效編碼方式，則為 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>The <ph id="ph1">`encoderFallback`</ph> and <ph id="ph2">`decoderFallback`</ph> parameters are objects that define the fallback strategy used in the event that an encoder cannot convert a character to a sequence of bytes or a decoder cannot convert a sequence of bytes to a character.</source>
          <target state="translated"><ph id="ph1">`encoderFallback`</ph>和<ph id="ph2">`decoderFallback`</ph>參數是物件，定義所使用的編碼器無法將字元轉換成位元組序列，或解碼器無法將位元組序列轉換為字元的後援策略。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>The .NET Framework provides the following fallback mechanisms:</source>
          <target state="translated">.NET Framework 提供下列後援機制：</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>Exception fallback.</source>
          <target state="translated">例外狀況後援。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>If the <ph id="ph1">`encoderFallback`</ph> argument is an instance of <ph id="ph2">&lt;xref:System.Text.EncoderExceptionFallback&gt;</ph>, or the <ph id="ph3">`decoderExceptionFallback`</ph> argument is an instance of <ph id="ph4">&lt;xref:System.Text.DecoderExceptionFallback&gt;</ph>, the encoding method throws an exception if characters cannot be encoded, and the decoding method throws an exception if a byte sequence cannot be decoded.</source>
          <target state="translated">如果<ph id="ph1">`encoderFallback`</ph>引數是的執行個體<ph id="ph2">&lt;xref:System.Text.EncoderExceptionFallback&gt;</ph>，或<ph id="ph3">`decoderExceptionFallback`</ph>引數是的執行個體<ph id="ph4">&lt;xref:System.Text.DecoderExceptionFallback&gt;</ph>，如果無法編碼的字元，而且如果位元組解碼方法擲回例外狀況的編碼方法擲回例外狀況無法解碼順序。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>Replacement fallback.</source>
          <target state="translated">取代後援。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>If the <ph id="ph1">`encoderFallback`</ph> argument is an instance of <ph id="ph2">&lt;xref:System.Text.EncoderReplacementFallback&gt;</ph>, or the <ph id="ph3">`decoderExceptionFallback`</ph> argument is an instance of <ph id="ph4">&lt;xref:System.Text.DecoderReplacementFallback&gt;</ph>, the encoding and decoding methods substitute a replacement string for characters that cannot be encoded and byte sequences cannot be decoded.</source>
          <target state="translated">如果<ph id="ph1">`encoderFallback`</ph>引數是的執行個體<ph id="ph2">&lt;xref:System.Text.EncoderReplacementFallback&gt;</ph>，或<ph id="ph3">`decoderExceptionFallback`</ph>引數是的執行個體<ph id="ph4">&lt;xref:System.Text.DecoderReplacementFallback&gt;</ph>、 編碼和解碼方法取代無法編碼的字元取代字串和位元組序列不可為解碼。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>If you instantiated the replacement fallback object by calling the default constructor, the replacement character is a "?".</source>
          <target state="translated">如果您透過具現化取代後援物件呼叫預設建構函式，取代字元是"？"。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>If you call the <ph id="ph1">&lt;xref:System.Text.EncoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Text.DecoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType&gt;</ph> constructor, you can specify the replacement string.</source>
          <target state="translated">如果您呼叫<ph id="ph1">&lt;xref:System.Text.EncoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType&gt;</ph>或<ph id="ph2">&lt;xref:System.Text.DecoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType&gt;</ph>建構函式，您可以指定取代字串。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>Best-fit fallback.</source>
          <target state="translated">自動調整的後援。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>You can derive from the <ph id="ph1">&lt;xref:System.Text.EncoderFallback&gt;</ph> or <ph id="ph2">&lt;xref:System.Text.DecoderFallback&gt;</ph> class to implement a best-fit replacement mechanism.</source>
          <target state="translated">您可以從衍生<ph id="ph1">&lt;xref:System.Text.EncoderFallback&gt;</ph>或<ph id="ph2">&lt;xref:System.Text.DecoderFallback&gt;</ph>類別來實作自動調整的取代機制。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>Because calls to this method use your implementation of the <ph id="ph1">&lt;see cref="M:System.Text.EncodingProvider.GetEncoding(System.String)" /&gt;</ph> method, you do not have to override it.</source>
          <target state="translated">因為呼叫此方法會使用您實作<ph id="ph1">&lt;see cref="M:System.Text.EncodingProvider.GetEncoding(System.String)" /&gt;</ph>方法，您不必覆寫它。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>When user code attempts to retrieve an encoding by calling the <ph id="ph1">&lt;see cref="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)" /&gt;</ph> method, the method passes the <ph id="ph2">&lt;paramref name="codepage" /&gt;</ph> identifier to every registered encoding provider until one returns a valid encoding.</source>
          <target state="translated">當使用者程式碼嘗試擷取的編碼方式，藉由呼叫<ph id="ph1">&lt;see cref="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)" /&gt;</ph>方法，此方法會傳遞<ph id="ph2">&lt;paramref name="codepage" /&gt;</ph>識別碼給每個已註冊編碼的提供者直到其中一個傳回的有效編碼方式。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>If none returns a valid encoding, the <ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /&gt;</ph> method attempts to retrieve a cached encoding whose code page identifier is <ph id="ph2">&lt;paramref name="codepage" /&gt;</ph>.</source>
          <target state="translated">如果沒有傳回有效的編碼，<ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /&gt;</ph>方法嘗試擷取快取的編碼方式，其字碼頁識別項是<ph id="ph2">&lt;paramref name="codepage" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>Because of this, if you do choose to override the <ph id="ph1">&lt;see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" /&gt;</ph> method, your override should return <ph id="ph2">&lt;see langword="null" /&gt;</ph> if <ph id="ph3">&lt;paramref name="codepage" /&gt;</ph> is not the code page identifier of an encoding that you support; it should never throw an exception.</source>
          <target state="translated">因為這個緣故，如果您選擇要覆寫<ph id="ph1">&lt;see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" /&gt;</ph>方法，您的覆寫應傳回<ph id="ph2">&lt;see langword="null" /&gt;</ph>如果<ph id="ph3">&lt;paramref name="codepage" /&gt;</ph>的編碼方式的字碼頁識別項不是，您的支援，它應該絕不會擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>This method is called by the <ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)" /&gt;</ph> method.</source>
          <target state="translated">這個方法會呼叫<ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)" /&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>You should not call it directly from user code.</source>
          <target state="translated">您不應該呼叫它，直接從使用者程式碼。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>