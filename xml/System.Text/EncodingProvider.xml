<Type Name="EncodingProvider" FullName="System.Text.EncodingProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3dd8164857fc0ee882ea5619b0174b55570de658" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36407720" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class EncodingProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit EncodingProvider extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Text.EncodingProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class EncodingProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class EncodingProvider abstract" />
  <TypeSignature Language="F#" Value="type EncodingProvider = class" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="29ddc-101">提供編碼提供者的基底類別，這個提供者提供特定平台無法使用的編碼方式。</span>
      <span class="sxs-lookup">
        <span data-stu-id="29ddc-101">Provides the base class for an encoding provider, which supplies encodings that are unavailable on a particular platform.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29ddc-102">其編碼提供者提供就無法在特定目標平台上使用的編碼方式。</span><span class="sxs-lookup"><span data-stu-id="29ddc-102">An encoding provider supplies encodings that are not otherwise available on a particular target platform.</span></span>  
  
 <span data-ttu-id="29ddc-103">在 Windows 桌面上的.NET Framework 支援大量的字元編碼方式和字碼頁。</span><span class="sxs-lookup"><span data-stu-id="29ddc-103">The .NET Framework on the Windows desktop supports a large number of character encodings and code pages.</span></span> <span data-ttu-id="29ddc-104">您可以在 Windows 桌面上取得.NET Framework 中可用的編碼方式的完整清單，藉由呼叫<xref:System.Text.Encoding.GetEncodings%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="29ddc-104">You can get a complete list of encodings available in the .NET Framework on the Windows desktop by calling the <xref:System.Text.Encoding.GetEncodings%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="29ddc-105">.NET core 相反地，根據預設支援下列編碼方式：</span><span class="sxs-lookup"><span data-stu-id="29ddc-105">.NET Core, on the other hand, by default supports only the following encodings:</span></span>  
  
-   <span data-ttu-id="29ddc-106">ASCII （字碼頁為 20127），由<xref:System.Text.Encoding.ASCII%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="29ddc-106">ASCII (code page 20127), which is returned by the <xref:System.Text.Encoding.ASCII%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="29ddc-107">ISO 8859-1 （字碼頁 28591）。</span><span class="sxs-lookup"><span data-stu-id="29ddc-107">ISO-8859-1 (code page 28591).</span></span>  
  
-   <span data-ttu-id="29ddc-108">Utf-7 （字碼頁為 65000），傳回<xref:System.Text.Encoding.UTF7%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="29ddc-108">UTF-7 (code page 65000), which is returned by the <xref:System.Text.Encoding.UTF7%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="29ddc-109">Utf-8 （字碼頁 65001），傳回<xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="29ddc-109">UTF-8 (code page 65001), which is returned by the <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="29ddc-110">Utf-16 和 UTF-16LE （字碼頁為 1200年），傳回<xref:System.Text.Encoding.Unicode%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="29ddc-110">UTF-16 and UTF-16LE (code page 1200), which is returned by the <xref:System.Text.Encoding.Unicode%2A> property.</span></span>  
  
-   <span data-ttu-id="29ddc-111">UTF-16BE （字碼頁為 1201年），這藉由呼叫具現化<xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType>或<xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType>具有建構函式`bigEndian`值`true`。</span><span class="sxs-lookup"><span data-stu-id="29ddc-111">UTF-16BE (code page 1201), which is instantiated by calling the <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType> or <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType> constructor with a `bigEndian` value of `true`.</span></span>  
  
-   <span data-ttu-id="29ddc-112">Utf-32 和 UTF-32LE （字碼頁為 12000），傳回<xref:System.Text.Encoding.UTF32%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="29ddc-112">UTF-32 and UTF-32LE (code page 12000), which is returned by the <xref:System.Text.Encoding.UTF32%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="29ddc-113">UTF-32BE （字碼頁 12001），這藉由呼叫具現化<xref:System.Text.UTF32Encoding>建構函式`bigEndian`參數，並提供值`true`方法呼叫中。</span><span class="sxs-lookup"><span data-stu-id="29ddc-113">UTF-32BE (code page 12001), which is instantiated by calling an <xref:System.Text.UTF32Encoding> constructor that has a `bigEndian` parameter and providing a value of `true` in the method call.</span></span>  
  
 <span data-ttu-id="29ddc-114">從.NET Framework 4.6 開始<xref:System.Text.EncodingProvider>讓無法使用的基底類別的.NET framework 可用編碼。</span><span class="sxs-lookup"><span data-stu-id="29ddc-114">Starting with the .NET Framework 4.6, <xref:System.Text.EncodingProvider> is the base class that makes otherwise unavailable encodings available to the .NET Framework.</span></span> <span data-ttu-id="29ddc-115">這包含下列步驟：</span><span class="sxs-lookup"><span data-stu-id="29ddc-115">This involves the following steps:</span></span>  
  
1.  <span data-ttu-id="29ddc-116">定義的子類別<xref:System.Text.EncodingProvider>會覆寫兩個抽象<xref:System.Text.EncodingProvider.GetEncoding%2A>多載，<xref:System.Text.EncodingProvider.GetEncoding%28System.Int32%29>和<xref:System.Text.EncodingProvider.GetEncoding%28System.String%29>。</span><span class="sxs-lookup"><span data-stu-id="29ddc-116">Define a subclass of <xref:System.Text.EncodingProvider> that overrides the two abstract <xref:System.Text.EncodingProvider.GetEncoding%2A> overloads, <xref:System.Text.EncodingProvider.GetEncoding%28System.Int32%29> and <xref:System.Text.EncodingProvider.GetEncoding%28System.String%29>.</span></span> <span data-ttu-id="29ddc-117">這些多載會傳回在其他不支援的編碼方式字碼頁識別項和名稱。</span><span class="sxs-lookup"><span data-stu-id="29ddc-117">These overloads return the otherwise unsupported encoding by code page identifier and by name.</span></span> <span data-ttu-id="29ddc-118">請注意，您也可以選擇傳回編碼預設<xref:System.Text.EncodingProvider.GetEncoding%28System.Int32%29>方法呼叫的引數為 0。</span><span class="sxs-lookup"><span data-stu-id="29ddc-118">Note that you can also choose to return a default encoding if the <xref:System.Text.EncodingProvider.GetEncoding%28System.Int32%29> method is called with an argument of 0.</span></span>  
  
2.  <span data-ttu-id="29ddc-119">（選擇性） 您可以覆寫虛擬<xref:System.Text.EncodingProvider.GetEncoding%28System.Int32%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29>和<xref:System.Text.EncodingProvider.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29>方法。</span><span class="sxs-lookup"><span data-stu-id="29ddc-119">Optionally, you can override the virtual <xref:System.Text.EncodingProvider.GetEncoding%28System.Int32%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29> and <xref:System.Text.EncodingProvider.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29> methods.</span></span> <span data-ttu-id="29ddc-120">在大部分情況下，這並非必要，因為基底類別提供的預設實作。</span><span class="sxs-lookup"><span data-stu-id="29ddc-120">In most cases, this is not necessary, since the base class provides a default implementation.</span></span>  
  
3.  <span data-ttu-id="29ddc-121">傳遞<xref:System.Text.EncodingProvider>執行個體<xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=nameWithType>方法所提供的編碼方式<xref:System.Text.EncodingProvider>common language runtime 提供的物件。</span><span class="sxs-lookup"><span data-stu-id="29ddc-121">Pass the <xref:System.Text.EncodingProvider> instance to the <xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=nameWithType> method to make the encodings supplied by the <xref:System.Text.EncodingProvider> object available to the common language runtime.</span></span>  
  
4.  <span data-ttu-id="29ddc-122">呼叫<xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType>多載來擷取的編碼方式。</span><span class="sxs-lookup"><span data-stu-id="29ddc-122">Call an <xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType> overload to retrieve the encoding.</span></span> <span data-ttu-id="29ddc-123"><xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType>方法會呼叫對應<xref:System.Text.EncodingProvider.GetEncoding%2A?displayProperty=nameWithType>來判斷是否可以提供要求之編碼方式。</span><span class="sxs-lookup"><span data-stu-id="29ddc-123">The <xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType> method will call the corresponding <xref:System.Text.EncodingProvider.GetEncoding%2A?displayProperty=nameWithType> to determine whether it can supply the requested encoding.</span></span>  
  
 <span data-ttu-id="29ddc-124">.NET Framework 類別庫會提供一個靜態屬性， <xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=nameWithType>，傳回<xref:System.Text.EncodingProvider>物件可產生一組完整的編碼方式在桌面的.NET Framework 類別庫可[!INCLUDE[net_core](~/includes/net-core-md.md)]應用程式。</span><span class="sxs-lookup"><span data-stu-id="29ddc-124">The .NET Framework Class Library provides one static property, <xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=nameWithType>, that returns an <xref:System.Text.EncodingProvider> object that makes the full set of encodings available on the desktop .NET Framework Class Library available to [!INCLUDE[net_core](~/includes/net-core-md.md)] applications.</span></span> <span data-ttu-id="29ddc-125">此外，您可以從衍生<xref:System.Text.EncodingProvider>類別，以提供您自己的編碼方式。</span><span class="sxs-lookup"><span data-stu-id="29ddc-125">In addition, you can derive from the <xref:System.Text.EncodingProvider> class to make your own encodings available.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Text.Encoding.GetEncoding(System.String)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncodingProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncodingProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncodingProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="29ddc-126">初始化 <see cref="T:System.Text.EncodingProvider" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29ddc-126">Initializes a new instance of the <see cref="T:System.Text.EncodingProvider" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEncoding">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="29ddc-127">傳回編碼方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29ddc-127">Returns an encoding.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEncoding">
      <MemberSignature Language="C#" Value="public abstract System.Text.Encoding GetEncoding (int codepage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Text.Encoding GetEncoding(int32 codepage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncodingProvider.GetEncoding(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetEncoding (codepage As Integer) As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Text::Encoding ^ GetEncoding(int codepage);" />
      <MemberSignature Language="F#" Value="abstract member GetEncoding : int -&gt; System.Text.Encoding" Usage="encodingProvider.GetEncoding codepage" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codepage" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codepage">
          <span data-ttu-id="29ddc-128">要求之編碼方式的字碼頁識別項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29ddc-128">The code page identifier of the requested encoding.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29ddc-129">傳回與指定字碼頁識別項相關聯的編碼方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29ddc-129">Returns the encoding associated with the specified code page identifier.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="29ddc-130">與指定字碼頁相關聯的編碼方式，或者，如果 <see cref="T:System.Text.EncodingProvider" /> 無法傳回對應於 <paramref name="codepage" /> 的有效編碼方式，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29ddc-130">The encoding that is associated with the specified code page, or <see langword="null" /> if this <see cref="T:System.Text.EncodingProvider" /> cannot return a valid encoding that corresponds to <paramref name="codepage" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[ 

## Remarks

### <a name="notes-to-inheritors"></a><span data-ttu-id="29ddc-131">繼承者注意事項</span><span class="sxs-lookup"><span data-stu-id="29ddc-131">Notes to inheritors</span></span>

<span data-ttu-id="29ddc-132">您覆寫[GetEncoding(Int32)](<xref:System.Text.EncodingProvider.GetEncoding(System.Int32)>)方法傳回的編碼方式或所支援的編碼程式<xref:System.Text.EncodingProvider>子類別。</span><span class="sxs-lookup"><span data-stu-id="29ddc-132">You override the [GetEncoding(Int32)](<xref:System.Text.EncodingProvider.GetEncoding(System.Int32)>) method to return the encoding or encodings supported by your <xref:System.Text.EncodingProvider> subclass.</span></span> <span data-ttu-id="29ddc-133">當使用者程式碼嘗試擷取的編碼方式，藉由呼叫[GetEncoding(Int32)](<xref:System.Text.EncodingProvider.GetEncoding(System.Int32)>)方法，此方法會傳遞`codepage`識別碼給每個已註冊編碼的提供者直到其中一個傳回的有效編碼方式。</span><span class="sxs-lookup"><span data-stu-id="29ddc-133">When user code attempts to retrieve an encoding by calling the [GetEncoding(Int32)](<xref:System.Text.EncodingProvider.GetEncoding(System.Int32)>) method, the method passes the `codepage` identifier to every registered encoding provider until one returns a valid encoding.</span></span> <span data-ttu-id="29ddc-134">如果沒有傳回有效的編碼， [GetEncoding(Int32)](<xref:System.Text.EncodingProvider.GetEncoding(System.Int32)>)方法嘗試擷取快取的編碼方式，其字碼頁識別項是`codepage`。</span><span class="sxs-lookup"><span data-stu-id="29ddc-134">If none returns a valid encoding, the [GetEncoding(Int32)](<xref:System.Text.EncodingProvider.GetEncoding(System.Int32)>) method attempts to retrieve a cached encoding whose code page identifier is `codepage`.</span></span> <span data-ttu-id="29ddc-135">因為這個緣故，如果`codepage`不是字碼頁識別項的編碼方式的支援，這個方法應傳回`null`; 它應該絕不會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="29ddc-135">Because of this, if `codepage` is not the code page identifier of an encoding that you support, the method should return `null`; it should never throw an exception.</span></span>
        
<span data-ttu-id="29ddc-136">請注意，您也可以選擇傳回預設字碼頁，如果值`codepage`引數為 0。</span><span class="sxs-lookup"><span data-stu-id="29ddc-136">Note that you can also choose to return a default code page if the value of the `codepage` argument is 0.</span></span>

## <a name="notes-to-callers"></a><span data-ttu-id="29ddc-137">呼叫者注意事項</span><span class="sxs-lookup"><span data-stu-id="29ddc-137">Notes to callers</span></span>
        
<span data-ttu-id="29ddc-138">這個方法會呼叫[Encoding.GetEncoding(Int32)](<xref:System.Text.Encoding.GetEncoding(System.Int32)>)方法。</span><span class="sxs-lookup"><span data-stu-id="29ddc-138">This method is called by the [Encoding.GetEncoding(Int32)](<xref:System.Text.Encoding.GetEncoding(System.Int32)>) method.</span></span> <span data-ttu-id="29ddc-139">您不應該呼叫它，直接從使用者程式碼。</span><span class="sxs-lookup"><span data-stu-id="29ddc-139">You should not call it directly from user code.</span></span>

        ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="29ddc-140">
            <para>您覆寫<see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32)" />方法傳回的編碼方式或所支援的編碼程式<see cref="T:System.Text.EncodingProvider" />子類別。當使用者程式碼嘗試擷取的編碼方式，藉由呼叫<see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" />方法，此方法會傳遞<paramref name="codepage" />識別碼給每個已註冊編碼的提供者直到其中一個傳回的有效編碼方式。如果沒有傳回有效的編碼，<see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" />方法嘗試擷取快取的編碼方式，其字碼頁識別項是<paramref name="codepage" />。因為這個緣故，如果<paramref name="codepage" />不是字碼頁識別項的編碼方式的支援，這個方法應傳回<see langword="null" />; 它應該絕不會擲回例外狀況。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="29ddc-140">
              <para>You override the <see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32)" /> method to return the encoding or encodings supported by your <see cref="T:System.Text.EncodingProvider" /> subclass. When user code attempts to retrieve an encoding by calling the <see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /> method, the method passes the <paramref name="codepage" /> identifier to every registered encoding provider until one returns a valid encoding. If none returns a valid encoding, the <see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /> method attempts to retrieve a cached encoding whose code page identifier is <paramref name="codepage" />. Because of this, if <paramref name="codepage" /> is not the code page identifier of an encoding that you support, the method should return <see langword="null" />; it should never throw an exception.</para>
            </span>
          </span>
        </block>
        <block subset="none" type="usage">
          <span data-ttu-id="29ddc-141">
            <para>這個方法會呼叫<see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" />方法。您不應該呼叫它，直接從使用者程式碼。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="29ddc-141">
              <para>This method is called by the <see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /> method. You should not call it directly from user code.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Text.Encoding.GetEncoding(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetEncoding">
      <MemberSignature Language="C#" Value="public abstract System.Text.Encoding GetEncoding (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Text.Encoding GetEncoding(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncodingProvider.GetEncoding(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetEncoding (name As String) As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Text::Encoding ^ GetEncoding(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetEncoding : string -&gt; System.Text.Encoding" Usage="encodingProvider.GetEncoding name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="29ddc-142">要求之編碼方式的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29ddc-142">The name of the requested encoding.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29ddc-143">傳回具有指定名稱的編碼方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29ddc-143">Returns the encoding with the specified name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="29ddc-144">與指定名稱相關聯的編碼方式，或者，如果 <see cref="T:System.Text.EncodingProvider" /> 無法傳回對應於 <paramref name="name" /> 的有效編碼方式，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29ddc-144">The encoding that is associated with the specified name, or <see langword="null" /> if this <see cref="T:System.Text.EncodingProvider" /> cannot return a valid encoding that corresponds to <paramref name="name" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[ 
      
## <a name="notes-to-inheritors"></a><span data-ttu-id="29ddc-145">繼承者注意事項</span><span class="sxs-lookup"><span data-stu-id="29ddc-145">Notes to inheritors</span></span> 
                  
<span data-ttu-id="29ddc-146">您覆寫[GetEncoding(String)](<xref:System.Text.EncodingProvider.GetEncoding(System.String)>)方法傳回的編碼方式或所支援的編碼程式<xref:System.Text.EncodingProvider>子類別。</span><span class="sxs-lookup"><span data-stu-id="29ddc-146">You override the [GetEncoding(String)](<xref:System.Text.EncodingProvider.GetEncoding(System.String)>) method to return the encoding or encodings supported by your <xref:System.Text.EncodingProvider> subclass.</span></span> <span data-ttu-id="29ddc-147">當使用者程式碼嘗試擷取的編碼方式，藉由呼叫[GetEncoding(String)](<xref:System.Text.EncodingProvider.GetEncoding(System.String)>)方法，此方法會傳遞`name`每個已註冊編碼的提供者直到其中一個傳回的有效編碼方式的引數。</span><span class="sxs-lookup"><span data-stu-id="29ddc-147">When user code attempts to retrieve an encoding by calling the [GetEncoding(String)](<xref:System.Text.EncodingProvider.GetEncoding(System.String)>) method, the method passes the `name` argument to every registered encoding provider until one returns a valid encoding.</span></span> <span data-ttu-id="29ddc-148">如果沒有傳回有效的編碼， [GetEncoding(String)](<xref:System.Text.EncodingProvider.GetEncoding(System.String)>)方法嘗試擷取快取的編碼方式，其名稱是`name`。</span><span class="sxs-lookup"><span data-stu-id="29ddc-148">If none returns a valid encoding, the [GetEncoding(String)](<xref:System.Text.EncodingProvider.GetEncoding(System.String)>) method attempts to retrieve a cached encoding whose name is `name`.</span></span> <span data-ttu-id="29ddc-149">因為這個緣故，如果`name`不支援，這個方法應傳回的編碼名稱`null`。</span><span class="sxs-lookup"><span data-stu-id="29ddc-149">Because of this, if `name` is not the name of an encoding that you support, the method should return `null`.</span></span> <span data-ttu-id="29ddc-150">中的方法應該擲回例外狀況的唯一情況是如果`name`是`null`。</span><span class="sxs-lookup"><span data-stu-id="29ddc-150">The only case in which the method should throw an exception is if `name` is `null`.</span></span>

## <a name="notes-to-callers"></a><span data-ttu-id="29ddc-151">呼叫者注意事項</span><span class="sxs-lookup"><span data-stu-id="29ddc-151">Notes to callers</span></span>

<span data-ttu-id="29ddc-152">這個方法會呼叫[Encoding.GetEncoding(String)](<xref:System.Text.Encoding.GetEncoding(System.String)>)方法。</span><span class="sxs-lookup"><span data-stu-id="29ddc-152">This method is called by the [Encoding.GetEncoding(String)](<xref:System.Text.Encoding.GetEncoding(System.String)>) method.</span></span> <span data-ttu-id="29ddc-153">您不應該呼叫它，直接從使用者程式碼。</span><span class="sxs-lookup"><span data-stu-id="29ddc-153">You should not call it directly from user code.</span></span>
        ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="29ddc-154">
            <para>您覆寫<see cref="M:System.Text.EncodingProvider.GetEncoding(System.String)" />方法傳回的編碼方式或所支援的編碼程式<see cref="T:System.Text.EncodingProvider" />子類別。當使用者程式碼嘗試擷取的編碼方式，藉由呼叫<see cref="M:System.Text.Encoding.GetEncoding(System.String)" />方法，此方法會傳遞<paramref name="name" />每個已註冊編碼的提供者直到其中一個傳回的有效編碼方式的引數。如果沒有傳回有效的編碼，<see cref="M:System.Text.Encoding.GetEncoding(System.String)" />方法嘗試擷取快取的編碼方式，其名稱是<paramref name="name" />。因為這個緣故，如果<paramref name="name" />不支援，這個方法應傳回的編碼名稱<see langword="null" />。中的方法應該擲回例外狀況的唯一情況是如果<paramref name="name" />是<see langword="null" />。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="29ddc-154">
              <para>You override the <see cref="M:System.Text.EncodingProvider.GetEncoding(System.String)" /> method to return the encoding or encodings supported by your <see cref="T:System.Text.EncodingProvider" /> subclass. When user code attempts to retrieve an encoding by calling the <see cref="M:System.Text.Encoding.GetEncoding(System.String)" /> method, the method passes the <paramref name="name" /> argument to every registered encoding provider until one returns a valid encoding. If none returns a valid encoding, the <see cref="M:System.Text.Encoding.GetEncoding(System.String)" /> method attempts to retrieve a cached encoding whose name is <paramref name="name" />. Because of this, if <paramref name="name" /> is not the name of an encoding that you support, the method should return <see langword="null" />. The only case in which the method should throw an exception is if <paramref name="name" /> is <see langword="null" />.</para>
            </span>
          </span>
        </block>
        <block subset="none" type="usage">
          <span data-ttu-id="29ddc-155">
            <para>這個方法會呼叫<see cref="M:System.Text.Encoding.GetEncoding(System.String)" />方法。您不應該呼叫它，直接從使用者程式碼。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="29ddc-155">
              <para>This method is called by the <see cref="M:System.Text.Encoding.GetEncoding(System.String)" /> method. You should not call it directly from user code.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Text.Encoding.GetEncoding(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetEncoding">
      <MemberSignature Language="C#" Value="public virtual System.Text.Encoding GetEncoding (int codepage, System.Text.EncoderFallback encoderFallback, System.Text.DecoderFallback decoderFallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Text.Encoding GetEncoding(int32 codepage, class System.Text.EncoderFallback encoderFallback, class System.Text.DecoderFallback decoderFallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Text::Encoding ^ GetEncoding(int codepage, System::Text::EncoderFallback ^ encoderFallback, System::Text::DecoderFallback ^ decoderFallback);" />
      <MemberSignature Language="F#" Value="abstract member GetEncoding : int * System.Text.EncoderFallback * System.Text.DecoderFallback -&gt; System.Text.Encoding&#xA;override this.GetEncoding : int * System.Text.EncoderFallback * System.Text.DecoderFallback -&gt; System.Text.Encoding" Usage="encodingProvider.GetEncoding (codepage, encoderFallback, decoderFallback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codepage" Type="System.Int32" />
        <Parameter Name="encoderFallback" Type="System.Text.EncoderFallback" />
        <Parameter Name="decoderFallback" Type="System.Text.DecoderFallback" />
      </Parameters>
      <Docs>
        <param name="codepage">
          <span data-ttu-id="29ddc-156">要求之編碼方式的字碼頁識別項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29ddc-156">The code page identifier of the requested encoding.</span>
          </span>
        </param>
        <param name="encoderFallback">
          <span data-ttu-id="29ddc-157">物件，在無法以這個編碼方式將字元編碼時提供錯誤處理程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29ddc-157">An object that provides an error-handling procedure when a character cannot be encoded with this encoding.</span>
          </span>
        </param>
        <param name="decoderFallback">
          <span data-ttu-id="29ddc-158">物件，在無法以這個編碼方式將位元組序列解碼時提供錯誤處理程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29ddc-158">An object that provides an error-handling procedure when a byte sequence cannot be decoded with this encoding.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29ddc-159">傳回與指定字碼頁識別項相關聯的編碼方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29ddc-159">Returns the encoding associated with the specified code page identifier.</span>
          </span>
          <span data-ttu-id="29ddc-160">參數會針對無法編碼的字元以及無法解碼的位元組序列指定錯誤處理常式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29ddc-160">Parameters specify an error handler for characters that cannot be encoded and byte sequences that cannot be decoded.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="29ddc-161">與指定字碼頁相關聯的編碼方式，或者，如果 <see cref="T:System.Text.EncodingProvider" /> 無法傳回對應於 <paramref name="codepage" /> 的有效編碼方式，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29ddc-161">The encoding that is associated with the specified code page, or <see langword="null" /> if this <see cref="T:System.Text.EncodingProvider" /> cannot return a valid encoding that corresponds to <paramref name="codepage" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29ddc-162">`encoderFallback`和`decoderFallback`參數是物件，定義所使用的編碼器無法將字元轉換成位元組序列，或解碼器無法將位元組序列轉換為字元的後援策略。</span><span class="sxs-lookup"><span data-stu-id="29ddc-162">The `encoderFallback` and `decoderFallback` parameters are objects that define the fallback strategy used in the event that an encoder cannot convert a character to a sequence of bytes or a decoder cannot convert a sequence of bytes to a character.</span></span> <span data-ttu-id="29ddc-163">.NET Framework 提供下列後援機制：</span><span class="sxs-lookup"><span data-stu-id="29ddc-163">The .NET Framework provides the following fallback mechanisms:</span></span>  
  
-   <span data-ttu-id="29ddc-164">例外狀況後援。</span><span class="sxs-lookup"><span data-stu-id="29ddc-164">Exception fallback.</span></span> <span data-ttu-id="29ddc-165">如果`encoderFallback`引數是的執行個體<xref:System.Text.EncoderExceptionFallback>，或`decoderExceptionFallback`引數是的執行個體<xref:System.Text.DecoderExceptionFallback>，如果無法編碼的字元，而且如果位元組解碼方法擲回例外狀況的編碼方法擲回例外狀況無法解碼順序。</span><span class="sxs-lookup"><span data-stu-id="29ddc-165">If the `encoderFallback` argument is an instance of <xref:System.Text.EncoderExceptionFallback>, or the `decoderExceptionFallback` argument is an instance of <xref:System.Text.DecoderExceptionFallback>, the encoding method throws an exception if characters cannot be encoded, and the decoding method throws an exception if a byte sequence cannot be decoded.</span></span>  
  
-   <span data-ttu-id="29ddc-166">取代後援。</span><span class="sxs-lookup"><span data-stu-id="29ddc-166">Replacement fallback.</span></span> <span data-ttu-id="29ddc-167">如果`encoderFallback`引數是的執行個體<xref:System.Text.EncoderReplacementFallback>，或`decoderExceptionFallback`引數是的執行個體<xref:System.Text.DecoderReplacementFallback>、 編碼和解碼方法取代無法編碼的字元取代字串和位元組序列不可為解碼。</span><span class="sxs-lookup"><span data-stu-id="29ddc-167">If the `encoderFallback` argument is an instance of <xref:System.Text.EncoderReplacementFallback>, or the `decoderExceptionFallback` argument is an instance of <xref:System.Text.DecoderReplacementFallback>, the encoding and decoding methods substitute a replacement string for characters that cannot be encoded and byte sequences cannot be decoded.</span></span> <span data-ttu-id="29ddc-168">如果您透過具現化取代後援物件呼叫預設建構函式，取代字元是"？"。</span><span class="sxs-lookup"><span data-stu-id="29ddc-168">If you instantiated the replacement fallback object by calling the default constructor, the replacement character is a "?".</span></span> <span data-ttu-id="29ddc-169">如果您呼叫<xref:System.Text.EncoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType>或<xref:System.Text.DecoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType>建構函式，您可以指定取代字串。</span><span class="sxs-lookup"><span data-stu-id="29ddc-169">If you call the <xref:System.Text.EncoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType> or <xref:System.Text.DecoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType> constructor, you can specify the replacement string.</span></span>  
  
-   <span data-ttu-id="29ddc-170">自動調整的後援。</span><span class="sxs-lookup"><span data-stu-id="29ddc-170">Best-fit fallback.</span></span> <span data-ttu-id="29ddc-171">您可以從衍生<xref:System.Text.EncoderFallback>或<xref:System.Text.DecoderFallback>類別來實作自動調整的取代機制。</span><span class="sxs-lookup"><span data-stu-id="29ddc-171">You can derive from the <xref:System.Text.EncoderFallback> or <xref:System.Text.DecoderFallback> class to implement a best-fit replacement mechanism.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="29ddc-172">
            <para>因為呼叫此方法會使用您實作<see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32)" />方法，您不必覆寫它。當使用者程式碼嘗試擷取的編碼方式，藉由呼叫<see cref="M:System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" />方法，此方法會傳遞<paramref name="codepage" />識別碼給每個已註冊編碼的提供者直到其中一個傳回的有效編碼方式。如果沒有傳回有效的編碼，<see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" />方法嘗試擷取快取的編碼方式，其字碼頁識別項是<paramref name="codepage" />。因為這個緣故，如果您選擇要覆寫<see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" />方法，您的覆寫應傳回<see langword="null" />如果<paramref name="codepage" />的編碼方式的字碼頁識別項不是，您的支援，它應該絕不會擲回例外狀況。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="29ddc-172">
              <para>Because calls to this method use your implementation of the <see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32)" /> method, you do not have to override it. When user code attempts to retrieve an encoding by calling the <see cref="M:System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" /> method, the method passes the <paramref name="codepage" /> identifier to every registered encoding provider until one returns a valid encoding. If none returns a valid encoding, the <see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /> method attempts to retrieve a cached encoding whose code page identifier is <paramref name="codepage" />. Because of this, if you do choose to override the <see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" /> method, your override should return <see langword="null" /> if <paramref name="codepage" /> is not the code page identifier of an encoding that you support; it should never throw an exception.</para>
            </span>
          </span>
        </block>
        <block subset="none" type="usage">
          <span data-ttu-id="29ddc-173">
            <para>這個方法會呼叫<see cref="M:System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" />方法。您不應該呼叫它，直接從使用者程式碼。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="29ddc-173">
              <para>This method is called by the <see cref="M:System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" /> method. You should not call it directly from user code.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" />
      </Docs>
    </Member>
    <Member MemberName="GetEncoding">
      <MemberSignature Language="C#" Value="public virtual System.Text.Encoding GetEncoding (string name, System.Text.EncoderFallback encoderFallback, System.Text.DecoderFallback decoderFallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Text.Encoding GetEncoding(string name, class System.Text.EncoderFallback encoderFallback, class System.Text.DecoderFallback decoderFallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Text::Encoding ^ GetEncoding(System::String ^ name, System::Text::EncoderFallback ^ encoderFallback, System::Text::DecoderFallback ^ decoderFallback);" />
      <MemberSignature Language="F#" Value="abstract member GetEncoding : string * System.Text.EncoderFallback * System.Text.DecoderFallback -&gt; System.Text.Encoding&#xA;override this.GetEncoding : string * System.Text.EncoderFallback * System.Text.DecoderFallback -&gt; System.Text.Encoding" Usage="encodingProvider.GetEncoding (name, encoderFallback, decoderFallback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="encoderFallback" Type="System.Text.EncoderFallback" />
        <Parameter Name="decoderFallback" Type="System.Text.DecoderFallback" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="29ddc-174">慣用的編碼方式名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29ddc-174">The name of the preferred encoding.</span>
          </span>
        </param>
        <param name="encoderFallback">
          <span data-ttu-id="29ddc-175">物件，在無法以這個編碼方式將字元編碼時提供錯誤處理程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29ddc-175">An object that provides an error-handling procedure when a character cannot be encoded with this encoding.</span>
          </span>
        </param>
        <param name="decoderFallback">
          <span data-ttu-id="29ddc-176">物件，該物件會在無法以目前編碼方式將位元組序列解碼時提供錯誤處理程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29ddc-176">An object that provides an error-handling procedure when a byte sequence cannot be decoded with the current encoding.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29ddc-177">傳回與指定名稱關聯的編碼方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29ddc-177">Returns the encoding associated with the specified name.</span>
          </span>
          <span data-ttu-id="29ddc-178">參數會針對無法編碼的字元以及無法解碼的位元組序列指定錯誤處理常式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29ddc-178">Parameters specify an error handler for characters that cannot be encoded and byte sequences that cannot be decoded.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="29ddc-179">與指定名稱相關聯的編碼方式，或者，如果 <see cref="T:System.Text.EncodingProvider" /> 無法傳回對應於 <paramref name="name" /> 的有效編碼方式，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29ddc-179">The encoding that is associated with the specified name, or <see langword="null" /> if this <see cref="T:System.Text.EncodingProvider" /> cannot return a valid encoding that corresponds to <paramref name="name" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29ddc-180">`encoderFallback`和`decoderFallback`參數是物件，定義所使用的編碼器無法將字元轉換成位元組序列，或解碼器無法將位元組序列轉換為字元的後援策略。</span><span class="sxs-lookup"><span data-stu-id="29ddc-180">The `encoderFallback` and `decoderFallback` parameters are objects that define the fallback strategy used in the event that an encoder cannot convert a character to a sequence of bytes or a decoder cannot convert a sequence of bytes to a character.</span></span> <span data-ttu-id="29ddc-181">.NET Framework 提供下列後援機制：</span><span class="sxs-lookup"><span data-stu-id="29ddc-181">The .NET Framework provides the following fallback mechanisms:</span></span>  
  
-   <span data-ttu-id="29ddc-182">例外狀況後援。</span><span class="sxs-lookup"><span data-stu-id="29ddc-182">Exception fallback.</span></span> <span data-ttu-id="29ddc-183">如果`encoderFallback`引數是的執行個體<xref:System.Text.EncoderExceptionFallback>，或`decoderExceptionFallback`引數是的執行個體<xref:System.Text.DecoderExceptionFallback>，如果無法編碼的字元，而且如果位元組解碼方法擲回例外狀況的編碼方法擲回例外狀況無法解碼順序。</span><span class="sxs-lookup"><span data-stu-id="29ddc-183">If the `encoderFallback` argument is an instance of <xref:System.Text.EncoderExceptionFallback>, or the `decoderExceptionFallback` argument is an instance of <xref:System.Text.DecoderExceptionFallback>, the encoding method throws an exception if characters cannot be encoded, and the decoding method throws an exception if a byte sequence cannot be decoded.</span></span>  
  
-   <span data-ttu-id="29ddc-184">取代後援。</span><span class="sxs-lookup"><span data-stu-id="29ddc-184">Replacement fallback.</span></span> <span data-ttu-id="29ddc-185">如果`encoderFallback`引數是的執行個體<xref:System.Text.EncoderReplacementFallback>，或`decoderExceptionFallback`引數是的執行個體<xref:System.Text.DecoderReplacementFallback>、 編碼和解碼方法取代無法編碼的字元取代字串和位元組序列不可為解碼。</span><span class="sxs-lookup"><span data-stu-id="29ddc-185">If the `encoderFallback` argument is an instance of <xref:System.Text.EncoderReplacementFallback>, or the `decoderExceptionFallback` argument is an instance of <xref:System.Text.DecoderReplacementFallback>, the encoding and decoding methods substitute a replacement string for characters that cannot be encoded and byte sequences cannot be decoded.</span></span> <span data-ttu-id="29ddc-186">如果您透過具現化取代後援物件呼叫預設建構函式，取代字元是"？"。</span><span class="sxs-lookup"><span data-stu-id="29ddc-186">If you instantiated the replacement fallback object by calling the default constructor, the replacement character is a "?".</span></span> <span data-ttu-id="29ddc-187">如果您呼叫<xref:System.Text.EncoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType>或<xref:System.Text.DecoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType>建構函式，您可以指定取代字串。</span><span class="sxs-lookup"><span data-stu-id="29ddc-187">If you call the <xref:System.Text.EncoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType> or <xref:System.Text.DecoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType> constructor, you can specify the replacement string.</span></span>  
  
-   <span data-ttu-id="29ddc-188">自動調整的後援。</span><span class="sxs-lookup"><span data-stu-id="29ddc-188">Best-fit fallback.</span></span> <span data-ttu-id="29ddc-189">您可以從衍生<xref:System.Text.EncoderFallback>或<xref:System.Text.DecoderFallback>類別來實作自動調整的取代機制。</span><span class="sxs-lookup"><span data-stu-id="29ddc-189">You can derive from the <xref:System.Text.EncoderFallback> or <xref:System.Text.DecoderFallback> class to implement a best-fit replacement mechanism.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="29ddc-190">
            <para>因為呼叫此方法會使用您實作<see cref="M:System.Text.EncodingProvider.GetEncoding(System.String)" />方法，您不必覆寫它。當使用者程式碼嘗試擷取的編碼方式，藉由呼叫<see cref="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)" />方法，此方法會傳遞<paramref name="codepage" />識別碼給每個已註冊編碼的提供者直到其中一個傳回的有效編碼方式。如果沒有傳回有效的編碼，<see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" />方法嘗試擷取快取的編碼方式，其字碼頁識別項是<paramref name="codepage" />。因為這個緣故，如果您選擇要覆寫<see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" />方法，您的覆寫應傳回<see langword="null" />如果<paramref name="codepage" />的編碼方式的字碼頁識別項不是，您的支援，它應該絕不會擲回例外狀況。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="29ddc-190">
              <para>Because calls to this method use your implementation of the <see cref="M:System.Text.EncodingProvider.GetEncoding(System.String)" /> method, you do not have to override it. When user code attempts to retrieve an encoding by calling the <see cref="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)" /> method, the method passes the <paramref name="codepage" /> identifier to every registered encoding provider until one returns a valid encoding. If none returns a valid encoding, the <see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /> method attempts to retrieve a cached encoding whose code page identifier is <paramref name="codepage" />. Because of this, if you do choose to override the <see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" /> method, your override should return <see langword="null" /> if <paramref name="codepage" /> is not the code page identifier of an encoding that you support; it should never throw an exception.</para>
            </span>
          </span>
        </block>
        <block subset="none" type="usage">
          <span data-ttu-id="29ddc-191">
            <para>這個方法會呼叫<see cref="M:System.Text.Encoding.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)" />方法。您不應該呼叫它，直接從使用者程式碼。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="29ddc-191">
              <para>This method is called by the <see cref="M:System.Text.Encoding.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)" /> method. You should not call it directly from user code.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Text.Encoding.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)" />
      </Docs>
    </Member>
  </Members>
</Type>