<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="UTF8Encoding.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5c200a67bc75e1bfe3c6bbe71ec68fec34b1455fc.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c200a67bc75e1bfe3c6bbe71ec68fec34b1455fc</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Text.UTF8Encoding">
          <source>Represents a UTF-8 encoding of Unicode characters.</source>
          <target state="translated">代表 Unicode 字元的 UTF-8 編碼方式。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF8Encoding">
          <source>Encoding is the process of transforming a set of Unicode characters into a sequence of bytes.</source>
          <target state="translated">編碼是將一組 Unicode 字元轉換成位元組序列的處理程序。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF8Encoding">
          <source>Decoding is the process of transforming a sequence of encoded bytes into a set of Unicode characters.</source>
          <target state="translated">解碼則是將編碼的位元組序列轉換成一組 Unicode 字元的程序。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF8Encoding">
          <source>UTF-8 is a Unicode encoding that represents each code point as a sequence of one to four bytes.</source>
          <target state="translated">Utf-8 是 Unicode 編碼，以一到四個位元組的序列表示每個字碼指標。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF8Encoding">
          <source>Unlike the UTF-16 and UTF-32 encodings, the UTF-8 encoding does not require "endianness"; the encoding scheme is the same regardless of whether the processor is big-endian or little-endian.</source>
          <target state="translated">不同於 utf-16 和 utf-32 編碼方式 utf-8 編碼不需要"endianness 」 的電腦;編碼配置是不論處理器是位元組由大到小或由小到大相同。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF8Encoding">
          <source><ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph> corresponds to the Windows code page 65001.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph> 對應至 Windows 字碼頁 65001。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF8Encoding">
          <source>For more information about the UTFs and other encodings supported by <ph id="ph1">&lt;xref:System.Text&gt;</ph>, see <bpt id="p1">[</bpt>Character Encoding in the .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept>.</source>
          <target state="translated">如需有關 UTFs 和其他支援的編碼<ph id="ph1">&lt;xref:System.Text&gt;</ph>，請參閱<bpt id="p1">[</bpt>字元編碼方式在.NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept>。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF8Encoding">
          <source>You can instantiate a <ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph> object in a number of ways, depending on whether you want to it to provide a byte order mark (BOM) and whether you want to enable error detection.</source>
          <target state="translated">您可以具現化<ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph>數種方式，根據是否要它提供位元組順序標示 (BOM)，以及是否要啟用錯誤偵測的物件。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF8Encoding">
          <source>The following table lists the constructors and the <ph id="ph1">&lt;xref:System.Text.Encoding&gt;</ph> property that return a <ph id="ph2">&lt;xref:System.Text.UTF8Encoding&gt;</ph> object.</source>
          <target state="translated">下表列出建構函式和<ph id="ph1">&lt;xref:System.Text.Encoding&gt;</ph>屬性會傳回<ph id="ph2">&lt;xref:System.Text.UTF8Encoding&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF8Encoding">
          <source>Member</source>
          <target state="translated">成員</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF8Encoding">
          <source>BOM</source>
          <target state="translated">BOM</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF8Encoding">
          <source>Error detection</source>
          <target state="translated">錯誤偵測</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF8Encoding">
          <source>Yes</source>
          <target state="translated">[是]</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF8Encoding">
          <source>No (Replacement fallback)</source>
          <target state="translated">無 （取代後援）</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF8Encoding">
          <source>No</source>
          <target state="translated">否</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF8Encoding">
          <source>No (Replacement fallback)</source>
          <target state="translated">無 （取代後援）</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF8Encoding">
          <source>Configurable</source>
          <target state="translated">可設定</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF8Encoding">
          <source>No (Replacement fallback)</source>
          <target state="translated">無 （取代後援）</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF8Encoding">
          <source>Configurable</source>
          <target state="translated">可設定</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF8Encoding">
          <source>Configurable</source>
          <target state="translated">可設定</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF8Encoding">
          <source>The <ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetByteCount%2A&gt;</ph> method determines how many bytes result in encoding a set of Unicode characters, and the <ph id="ph2">&lt;xref:System.Text.UTF8Encoding.GetBytes%2A&gt;</ph> method performs the actual encoding.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetByteCount%2A&gt;</ph>方法會判斷多少個位元組會導致一組 Unicode 字元編碼和<ph id="ph2">&lt;xref:System.Text.UTF8Encoding.GetBytes%2A&gt;</ph>方法會執行實際的編碼方式。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF8Encoding">
          <source>Likewise, the <ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetCharCount%2A&gt;</ph> method determines how many characters result in decoding a sequence of bytes, and the <ph id="ph2">&lt;xref:System.Text.UTF8Encoding.GetChars%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Text.UTF8Encoding.GetString%2A&gt;</ph> methods perform the actual decoding.</source>
          <target state="translated">同樣地，<ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetCharCount%2A&gt;</ph>方法會判斷多少個字元產生的位元組序列解碼和<ph id="ph2">&lt;xref:System.Text.UTF8Encoding.GetChars%2A&gt;</ph>和<ph id="ph3">&lt;xref:System.Text.UTF8Encoding.GetString%2A&gt;</ph>方法會執行實際的解碼。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF8Encoding">
          <source>For an encoder or decoder that is able to save state information when encoding or decoding data that spans multiple blocks (such as string of 1 million characters that is encoded in 100,000-character segments), use the <ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetEncoder%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Text.UTF8Encoding.GetDecoder%2A&gt;</ph> properties, respectively.</source>
          <target state="translated">針對編碼器或解碼器能夠儲存狀態資訊編碼或解碼跨越多個區塊 （例如 1 百萬個字元的編碼段 100,000 個字元的字串） 的資料時，請使用<ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetEncoder%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Text.UTF8Encoding.GetDecoder%2A&gt;</ph>屬性，分別。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF8Encoding">
          <source>Optionally, the <ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph> object provides a byte order mark (BOM), which is an array of bytes that can be prefixed to the beginning of the byte stream that results from the encoding process.</source>
          <target state="translated">（選擇性）<ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph>物件所提供的位元組順序標記 (BOM)，也就是可以加在編碼程序產生的位元組資料流開頭的位元組陣列。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF8Encoding">
          <source>If a UTF-8 encoded byte stream is prefaced with a byte order mark (BOM), it helps the decoder determine the byte order and the transformation format or UTF.</source>
          <target state="translated">如果 utf-8 編碼的位元組資料流開頭處的位元組順序標示 (BOM)，將有助於判斷位元組順序的轉換格式或 UTF-8 解碼器。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF8Encoding">
          <source>Note, however, that the Unicode Standard neither requires nor recommends a BOM in UTF-8 encoded streams.</source>
          <target state="translated">不過請注意，Unicode 標準都不需要也不建議將 bom 傳 utf-8 編碼資料流。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF8Encoding">
          <source>For more information on byte order and the byte order mark, see The Unicode Standard at the <bpt id="p1">[</bpt>Unicode home page<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=37123)</ept>.</source>
          <target state="translated">如需有關位元組順序和位元組順序標記的詳細資訊，請參閱 Unicode 標準<bpt id="p1">[</bpt>Unicode 首頁<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=37123)</ept>。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF8Encoding">
          <source>If the encoder is configured to provide a BOM, you can retrieve it by calling the <ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetPreamble%2A&gt;</ph> method; otherwise, the method returns an empty array.</source>
          <target state="translated">如果編碼器設定為提供 BOM，可以擷取由呼叫<ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetPreamble%2A&gt;</ph>方法; 否則方法會傳回空陣列。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF8Encoding">
          <source>Note that, even if a <ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph> object is configured for BOM support, you must include the BOM at the beginning of the encoded byte stream as appropriate; the encoding methods of the <ph id="ph2">&lt;xref:System.Text.UTF8Encoding&gt;</ph> class do not do this automatically.</source>
          <target state="translated">請注意，即使<ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph>BOM 支援的設定物件，您必須包含適當; 編碼的位元組資料流的開頭 BOM 編碼方式的<ph id="ph2">&lt;xref:System.Text.UTF8Encoding&gt;</ph>類別不這麼做會自動。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF8Encoding">
          <source>To enable error detection and to make the class instance more secure, you should call the <ph id="ph1">&lt;xref:System.Text.UTF8Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%29&gt;</ph> constructor and set the <ph id="ph2">`throwOnInvalidBytes`</ph> parameter to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">若要啟用錯誤偵測，並讓類別執行個體更安全，您應該呼叫<ph id="ph1">&lt;xref:System.Text.UTF8Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%29&gt;</ph>建構函式和集合<ph id="ph2">`throwOnInvalidBytes`</ph>參數<ph id="ph3">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF8Encoding">
          <source>With error detection enabled, a method that detects an invalid sequence of characters or bytes throws an <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph> exception.</source>
          <target state="translated">已啟用錯誤偵測，偵測到無效的字元或位元組序列的方法會擲回<ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph>例外狀況。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF8Encoding">
          <source>Without error detection, no exception is thrown, and the invalid sequence is generally ignored.</source>
          <target state="translated">錯誤偵測，擲回任何例外狀況，而不正確的順序通常會遭到忽略。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF8Encoding">
          <source>The state of a UTF-8 encoded object is not preserved if the object is serialized and deserialized using different .NET Framework versions.</source>
          <target state="translated">如果物件序列化和還原序列化使用不同的.NET Framework 版本，不會保留 utf-8 編碼物件的狀態。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF8Encoding">
          <source>The following example uses a <ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph> object to encode a string of Unicode characters and store them in a byte array.</source>
          <target state="translated">下列範例會使用<ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph>編碼的 Unicode 字元字串，並將它們儲存在位元組陣列中的物件。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF8Encoding">
          <source>The Unicode string includes two characters, Pi (U+03A0) and Sigma (U+03A3), that are outside the ASCII character range.</source>
          <target state="translated">Unicode 字串包含兩個字元，Pi (U + 03A0) 和標準差 (U + 03A3)，ASCII 字元範圍以外。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF8Encoding">
          <source>When the encoded byte array is decoded back to a string, the Pi and Sigma characters are still present.</source>
          <target state="translated">編碼的位元組陣列解碼回字串，Pi 和標準差字元時仍會出現。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF8Encoding">
          <source>The following example uses the same string as the previous example, except that it writes the encoded bytes to a file and prefixes the byte stream with a byte order mark (BOM).</source>
          <target state="translated">下列範例會使用相同的字串與前一個範例中，不同之處在於它將編碼的位元組寫入檔案，並做為前置詞位元組資料流的位元組順序標示 (BOM)。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF8Encoding">
          <source>It then reads the file in two different ways: as a text file by using a <ph id="ph1">&lt;xref:System.IO.StreamReader&gt;</ph> object; and as a binary file.</source>
          <target state="translated">然後在兩個不同的方式讀取檔案： 為文字檔，使用<ph id="ph1">&lt;xref:System.IO.StreamReader&gt;</ph>物件; 而二進位檔案。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF8Encoding">
          <source>As you would expect, in neither case is the BOM included in the newly read string.</source>
          <target state="translated">如您所預期，兩種情況下 BOM 隨附於讀取新的字串。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="T:System.Text.UTF8Encoding">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Text.UTF8Encoding" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Text.UTF8Encoding" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Text.UTF8Encoding" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Text.UTF8Encoding" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.#ctor">
          <source>This constructor creates an instance that does not provide a Unicode byte order mark and does not throw an exception when an invalid encoding is detected.</source>
          <target state="translated">這個建構函式會建立執行個體，不會提供 Unicode 位元組順序標記，而且不會擲回例外狀況時偵測到無效的編碼方式。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.#ctor">
          <source>For security reasons, we recommend that you enable error detection by calling a constructor with a <ph id="ph1">`throwOnInvalidBytes`</ph> parameter and setting its value to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">基於安全性理由，建議您啟用錯誤偵測，藉由呼叫的建構函式<ph id="ph1">`throwOnInvalidBytes`</ph>參數，並將其值設定為<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.#ctor">
          <source>The following example creates a new <ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph> instance and displays its name.</source>
          <target state="translated">下列範例會建立新<ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph>執行個體，並顯示其名稱。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.#ctor(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to specify that the <ph id="ph2">&lt;see cref="M:System.Text.UTF8Encoding.GetPreamble" /&gt;</ph> method returns a Unicode byte order mark; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 指定 <ph id="ph2">&lt;see cref="M:System.Text.UTF8Encoding.GetPreamble" /&gt;</ph> 方法會傳回 Unicode 位元組順序標記；否則為 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.#ctor(System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Text.UTF8Encoding" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Text.UTF8Encoding" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.#ctor(System.Boolean)">
          <source>A parameter specifies whether to provide a Unicode byte order mark.</source>
          <target state="translated">參數會指定是否提供 Unicode 位元組順序標記。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.#ctor(System.Boolean)">
          <source>This constructor creates an instance that does not throw an exception when an invalid encoding is detected.</source>
          <target state="translated">這個建構函式會建立執行個體偵測到無效的編碼方式時，不會擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.#ctor(System.Boolean)">
          <source>For security reasons, you should enable error detection by calling a constructor that includes a <ph id="ph1">`throwOnInvalidBytes`</ph> parameter and setting its value to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">基於安全性理由，您應該藉由呼叫的建構函式，其中包含啟用錯誤偵測<ph id="ph1">`throwOnInvalidBytes`</ph>參數，並將其值設定為<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.#ctor(System.Boolean)">
          <source>The <ph id="ph1">`encoderShouldEmitUTF8Identifier`</ph> parameter controls the operation of the <ph id="ph2">&lt;xref:System.Text.UTF8Encoding.GetPreamble%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">`encoderShouldEmitUTF8Identifier`</ph>參數控制的操作<ph id="ph2">&lt;xref:System.Text.UTF8Encoding.GetPreamble%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.#ctor(System.Boolean)">
          <source>If <ph id="ph1">`true`</ph>, the method returns a byte array containing the Unicode byte order mark (BOM) in UTF-8 format.</source>
          <target state="translated">如果<ph id="ph1">`true`</ph>，方法會傳回位元組陣列，包含 Unicode 位元組順序標記 (BOM) 以 utf-8 格式。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.#ctor(System.Boolean)">
          <source>If <ph id="ph1">`false`</ph>, it returns a zero-length byte array.</source>
          <target state="translated">如果<ph id="ph1">`false`</ph>，它會傳回零長度的位元組陣列。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.#ctor(System.Boolean)">
          <source>However, setting <ph id="ph1">`encoderShouldEmitUTF8Identifier`</ph> to <ph id="ph2">`true`</ph> does not cause the <ph id="ph3">&lt;xref:System.Text.UTF8Encoding.GetBytes%2A&gt;</ph> method to prefix the BOM at the beginning of the byte array, nor does it cause the <ph id="ph4">&lt;xref:System.Text.UTF8Encoding.GetByteCount%2A&gt;</ph> method to include the number of bytes in the BOM in the byte count.</source>
          <target state="translated">不過，設定<ph id="ph1">`encoderShouldEmitUTF8Identifier`</ph>至<ph id="ph2">`true`</ph>不會造成<ph id="ph3">&lt;xref:System.Text.UTF8Encoding.GetBytes%2A&gt;</ph>BOM 的位元組陣列開頭的前置詞的方法也不會引起<ph id="ph4">&lt;xref:System.Text.UTF8Encoding.GetByteCount%2A&gt;</ph>方法，以包含 BOM 的位元組計數中的位元組數目。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.#ctor(System.Boolean)">
          <source>The following example creates a new <ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph> instance and specifies that a Unicode byte order mark prefix should be emitted by the <ph id="ph2">&lt;xref:System.Text.UTF8Encoding.GetPreamble%2A&gt;</ph> method.</source>
          <target state="translated">下列範例會建立新<ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph>執行個體和指定的 Unicode 位元組順序標記前置詞應該發出<ph id="ph2">&lt;xref:System.Text.UTF8Encoding.GetPreamble%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.#ctor(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetPreamble%2A&gt;</ph> method then returns the Unicode byte order mark prefix.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetPreamble%2A&gt;</ph>方法接著會傳回 Unicode 位元組順序標記前置詞。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.#ctor(System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to specify that the <ph id="ph2">&lt;see cref="M:System.Text.UTF8Encoding.GetPreamble" /&gt;</ph> method should return a Unicode byte order mark; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 指定 <ph id="ph2">&lt;see cref="M:System.Text.UTF8Encoding.GetPreamble" /&gt;</ph> 方法應傳回 Unicode 位元組順序標記；否則為 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.#ctor(System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to throw an exception when an invalid encoding is detected; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 表示在偵測到無效的編碼方式時擲回例外狀況；否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.#ctor(System.Boolean,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Text.UTF8Encoding" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Text.UTF8Encoding" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.#ctor(System.Boolean,System.Boolean)">
          <source>Parameters specify whether to provide a Unicode byte order mark and whether to throw an exception when an invalid encoding is detected.</source>
          <target state="translated">參數會指定是否提供 Unicode 位元組順序標記，以及是否在偵測到無效的編碼方式時擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.#ctor(System.Boolean,System.Boolean)">
          <source>The <ph id="ph1">`encoderShouldEmitUTF8Identifier`</ph> parameter controls the operation of the <ph id="ph2">&lt;xref:System.Text.UTF8Encoding.GetPreamble%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">`encoderShouldEmitUTF8Identifier`</ph>參數控制的操作<ph id="ph2">&lt;xref:System.Text.UTF8Encoding.GetPreamble%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.#ctor(System.Boolean,System.Boolean)">
          <source>If <ph id="ph1">`true`</ph>, the method returns a byte array containing the Unicode byte order mark (BOM) in UTF-8 format.</source>
          <target state="translated">如果<ph id="ph1">`true`</ph>，方法會傳回位元組陣列，包含 Unicode 位元組順序標記 (BOM) 以 utf-8 格式。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.#ctor(System.Boolean,System.Boolean)">
          <source>If <ph id="ph1">`false`</ph>, it returns a zero-length byte array.</source>
          <target state="translated">如果<ph id="ph1">`false`</ph>，它會傳回零長度的位元組陣列。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.#ctor(System.Boolean,System.Boolean)">
          <source>However, setting <ph id="ph1">`encoderShouldEmitUTF8Identifier`</ph> to <ph id="ph2">`true`</ph> does not cause the <ph id="ph3">&lt;xref:System.Text.UTF8Encoding.GetBytes%2A&gt;</ph> method to prefix the BOM at the beginning of the byte array, nor does it cause the <ph id="ph4">&lt;xref:System.Text.UTF8Encoding.GetByteCount%2A&gt;</ph> method to include the number of bytes in the BOM in the byte count.</source>
          <target state="translated">不過，設定<ph id="ph1">`encoderShouldEmitUTF8Identifier`</ph>至<ph id="ph2">`true`</ph>不會造成<ph id="ph3">&lt;xref:System.Text.UTF8Encoding.GetBytes%2A&gt;</ph>BOM 的位元組陣列開頭的前置詞的方法也不會引起<ph id="ph4">&lt;xref:System.Text.UTF8Encoding.GetByteCount%2A&gt;</ph>方法，以包含 BOM 的位元組計數中的位元組數目。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.#ctor(System.Boolean,System.Boolean)">
          <source>If <ph id="ph1">`throwOnInvalidBytes`</ph> is <ph id="ph2">`true`</ph>, a method that detects an invalid byte sequence throws an <ph id="ph3">&lt;xref:System.ArgumentException?displayProperty=nameWithType&gt;</ph> exception.</source>
          <target state="translated">如果<ph id="ph1">`throwOnInvalidBytes`</ph>是<ph id="ph2">`true`</ph>，偵測到無效的位元組順序的方法會擲回<ph id="ph3">&lt;xref:System.ArgumentException?displayProperty=nameWithType&gt;</ph>例外狀況。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.#ctor(System.Boolean,System.Boolean)">
          <source>Otherwise, the method does not throw an exception, and the invalid sequence is ignored.</source>
          <target state="translated">否則，此方法不會擲回例外狀況，並忽略無效的序列。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.#ctor(System.Boolean,System.Boolean)">
          <source>For security reasons, you should enable error detection by calling a constructor that includes a <ph id="ph1">`throwOnInvalidBytes`</ph> parameter and setting that parameter to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">基於安全性理由，您應該藉由呼叫的建構函式，其中包含啟用錯誤偵測<ph id="ph1">`throwOnInvalidBytes`</ph>參數，並將該參數設定為<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.#ctor(System.Boolean,System.Boolean)">
          <source>The following example creates a new <ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph> instance, specifying that the <ph id="ph2">&lt;xref:System.Text.UTF8Encoding.GetPreamble%2A&gt;</ph> method should not emit a Unicode byte order mark prefix, and an exception should be thrown when an invalid encoding is detected.</source>
          <target state="translated">下列範例會建立新<ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph>執行個體，指定<ph id="ph2">&lt;xref:System.Text.UTF8Encoding.GetPreamble%2A&gt;</ph>方法應該不會發出的 Unicode 位元組順序標記前置詞，並偵測到無效的編碼方式時，應該擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.#ctor(System.Boolean,System.Boolean)">
          <source>The behavior of this constructor is compared to the default <ph id="ph1">&lt;xref:System.Text.UTF8Encoding.%23ctor&gt;</ph> constructor, which does not throw an exception when an invalid encoding is detected.</source>
          <target state="translated">這個建構函式的行為會與預設<ph id="ph1">&lt;xref:System.Text.UTF8Encoding.%23ctor&gt;</ph>建構函式，不會擲回例外狀況時偵測到無效的編碼方式。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.#ctor(System.Boolean,System.Boolean)">
          <source>The two <ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph> instances encode a character array that contains two high surrogates (U+D801 and U+D802) in a row, which is an invalid character sequence; a high surrogate should always be followed by a low surrogate.</source>
          <target state="translated">這兩個<ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph>執行個體中的資料列，這是無效的字元序列編碼的字元陣列，其中包含兩個高 surrogate （U + D801 和 U + D802），則為高 surrogate 應該後面一律必須接著為低 surrogate。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.Equals(System.Object)">
          <source>The object to compare with the current instance.</source>
          <target state="translated">要與目前執行個體比較的物件。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.Equals(System.Object)">
          <source>Determines whether the specified object is equal to the current <ph id="ph1">&lt;see cref="T:System.Text.UTF8Encoding" /&gt;</ph> object.</source>
          <target state="translated">判斷指定的物件是否等於目前的 <ph id="ph1">&lt;see cref="T:System.Text.UTF8Encoding" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is an instance of <ph id="ph3">&lt;see cref="T:System.Text.UTF8Encoding" /&gt;</ph> and is equal to the current object; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="value" /&gt;</ph> 是 <ph id="ph3">&lt;see cref="T:System.Text.UTF8Encoding" /&gt;</ph> 的執行個體，並且等於目前的物件，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否則為 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.Equals(System.Object)">
          <source>Two <ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph> objects are considered equal if all of the following conditions are true:</source>
          <target state="translated">兩個<ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph>物件是否視為相等，如果所有下列條件成立：</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.Equals(System.Object)">
          <source>Both objects provide the byte order mark, or both do not.</source>
          <target state="translated">這兩個物件提供位元組順序標記，或兩者不相符。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.Equals(System.Object)">
          <source>Both objects use the same encoder fallback.</source>
          <target state="translated">這兩個物件都使用相同的編碼器後援。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.Equals(System.Object)">
          <source>Both objects use the same decoder fallback.</source>
          <target state="translated">這兩個物件都使用相同的解碼器後援。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.Equals(System.Object)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Text.UTF8Encoding.Equals%2A&gt;</ph> method to test whether the current <ph id="ph2">&lt;xref:System.Text.UTF8Encoding&gt;</ph> object is equal to a different <ph id="ph3">&lt;xref:System.Text.UTF8Encoding&gt;</ph> object.</source>
          <target state="translated">下列範例會使用<ph id="ph1">&lt;xref:System.Text.UTF8Encoding.Equals%2A&gt;</ph>方法來測試是否目前<ph id="ph2">&lt;xref:System.Text.UTF8Encoding&gt;</ph>物件是否等於不同<ph id="ph3">&lt;xref:System.Text.UTF8Encoding&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.Equals(System.Object)">
          <source>Four <ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph> objects are created and compared and the results of the comparisons are displayed.</source>
          <target state="translated">四個<ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph>和建立和比較物件比較的結果會顯示。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="T:System.Text.UTF8Encoding">
          <source>Calculates the number of bytes produced by encoding a set of characters.</source>
          <target state="translated">計算將一組字元編碼所產生的位元組數目。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetByteCount(System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the set of characters to encode.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>，包含要編碼的一組字元。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetByteCount(System.String)">
          <source>Calculates the number of bytes produced by encoding the characters in the specified <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>.</source>
          <target state="translated">計算將指定 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> 中的字元編碼所產生的位元組數目。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetByteCount(System.String)">
          <source>The number of bytes produced by encoding the specified characters.</source>
          <target state="translated">編碼指定字元所產生的位元組數。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetByteCount(System.String)">
          <source>To calculate the exact array size required by <ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetBytes%2A&gt;</ph> to store the resulting bytes, you call the <ph id="ph2">&lt;xref:System.Text.UTF8Encoding.GetByteCount%2A&gt;</ph> method.</source>
          <target state="translated">若要計算所需的精確陣列大小<ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetBytes%2A&gt;</ph>儲存產生的位元組，您呼叫<ph id="ph2">&lt;xref:System.Text.UTF8Encoding.GetByteCount%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetByteCount(System.String)">
          <source>To calculate the maximum array size, you call the <ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetMaxByteCount%2A&gt;</ph> method.</source>
          <target state="translated">若要計算的最大陣列大小，請呼叫<ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetMaxByteCount%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetByteCount(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetByteCount%2A&gt;</ph> method generally allocates less memory, while the <ph id="ph2">&lt;xref:System.Text.UTF8Encoding.GetMaxByteCount%2A&gt;</ph> method generally executes faster.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetByteCount%2A&gt;</ph>方法通常會配置較少的記憶體，而<ph id="ph2">&lt;xref:System.Text.UTF8Encoding.GetMaxByteCount%2A&gt;</ph>方法通常執行速度更快。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetByteCount(System.String)">
          <source>With error detection, an invalid sequence causes this method to throw an <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph> exception.</source>
          <target state="translated">錯誤偵測無效的序列造成此方法會擲回<ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph>例外狀況。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetByteCount(System.String)">
          <source>Without error detection, invalid sequences are ignored, and no exception is thrown.</source>
          <target state="translated">錯誤偵測，會忽略無效的序列，而不擲回任何例外狀況。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetByteCount(System.String)">
          <source>To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</source>
          <target state="translated">若要確保儲存為檔案或資料流時編碼的位元組會正確解碼，您可以前置詞與前序編碼的位元組資料流。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetByteCount(System.String)">
          <source>Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility, and the number of bytes in the preamble is not reflected in the value returned by the <ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetByteCount%2A&gt;</ph> method.</source>
          <target state="translated">位元組資料流的開頭插入前序編碼 (例如一系列的位元組寫入檔案的開頭) 是開發人員的責任和中前序編碼的位元組數目不會反映在所傳回的值<ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetByteCount%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetByteCount(System.String)">
          <source>The following example calls the <ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetMaxByteCount%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Text.UTF8Encoding.GetByteCount%28System.String%29&gt;</ph> methods to calculate the maximum and actual number of bytes required to encode a string.</source>
          <target state="translated">下列範例會呼叫<ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetMaxByteCount%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Text.UTF8Encoding.GetByteCount%28System.String%29&gt;</ph>方法來計算最大值和實際的字串編碼所需的位元組數目。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetByteCount(System.String)">
          <source>It also displays the actual number of bytes required to store a byte stream with a byte order mark.</source>
          <target state="translated">它也會顯示實際儲存的位元組順序標記的位元組資料流所需的位元組數目。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetByteCount(System.String)">
          <source><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetByteCount(System.String)">
          <source>The resulting number of bytes is greater than the maximum number that can be returned as an integer.</source>
          <target state="translated">所產生的位元組數目大於可用整數傳回的數目上限。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetByteCount(System.String)">
          <source>Error detection is enabled, and <ph id="ph1">&lt;paramref name="chars" /&gt;</ph> contains an invalid sequence of characters.</source>
          <target state="translated">已啟用錯誤偵測，而 <ph id="ph1">&lt;paramref name="chars" /&gt;</ph> 包含無效的字元序列。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetByteCount(System.String)">
          <source>A fallback occurred (see <bpt id="p1">[</bpt>Character Encoding in the .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> for complete explanation)</source>
          <target state="translated">發生後援 (如需完整說明，請參閱 <bpt id="p1">[</bpt>.NET Framework 中的字元編碼<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept>)</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetByteCount(System.String)">
          <source>-and-</source>
          <target state="translated">-和-</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetByteCount(System.String)">
          <source><ph id="ph1">&lt;see cref="P:System.Text.Encoding.EncoderFallback" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Text.Encoding.EncoderFallback" /&gt;</ph> 設定為 <ph id="ph2">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetByteCount(System.Char*,System.Int32)">
          <source>A pointer to the first character to encode.</source>
          <target state="translated">要編碼的第一個字元指標。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetByteCount(System.Char*,System.Int32)">
          <source>The number of characters to encode.</source>
          <target state="translated">要編碼的字元數。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetByteCount(System.Char*,System.Int32)">
          <source>Calculates the number of bytes produced by encoding a set of characters starting at the specified character pointer.</source>
          <target state="translated">計算將起始於指定字元指標的一組字元編碼所產生的位元組數目。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetByteCount(System.Char*,System.Int32)">
          <source>The number of bytes produced by encoding the specified characters.</source>
          <target state="translated">編碼指定字元所產生的位元組數。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetByteCount(System.Char*,System.Int32)">
          <source>To calculate the exact array size required by the <ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetBytes%2A&gt;</ph> method to store the resulting bytes, you call the <ph id="ph2">&lt;xref:System.Text.UTF8Encoding.GetByteCount%2A&gt;</ph> method.</source>
          <target state="translated">若要計算所需的精確陣列大小<ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetBytes%2A&gt;</ph>方法來儲存產生的位元組，您呼叫<ph id="ph2">&lt;xref:System.Text.UTF8Encoding.GetByteCount%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetByteCount(System.Char*,System.Int32)">
          <source>To calculate the maximum array size, you call the <ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetMaxByteCount%2A&gt;</ph> method.</source>
          <target state="translated">若要計算的最大陣列大小，請呼叫<ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetMaxByteCount%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetByteCount(System.Char*,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetByteCount%2A&gt;</ph> method generally allocates less memory, while the <ph id="ph2">&lt;xref:System.Text.UTF8Encoding.GetMaxByteCount%2A&gt;</ph> method generally executes faster.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetByteCount%2A&gt;</ph>方法通常會配置較少的記憶體，而<ph id="ph2">&lt;xref:System.Text.UTF8Encoding.GetMaxByteCount%2A&gt;</ph>方法通常執行速度更快。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetByteCount(System.Char*,System.Int32)">
          <source>With error detection, an invalid sequence causes this method to throw an <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph> exception.</source>
          <target state="translated">錯誤偵測無效的序列造成此方法會擲回<ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph>例外狀況。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetByteCount(System.Char*,System.Int32)">
          <source>Without error detection, invalid sequences are ignored, and no exception is thrown.</source>
          <target state="translated">錯誤偵測，會忽略無效的序列，而不擲回任何例外狀況。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetByteCount(System.Char*,System.Int32)">
          <source>To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</source>
          <target state="translated">若要確保儲存為檔案或資料流時編碼的位元組會正確解碼，您可以前置詞與前序編碼的位元組資料流。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetByteCount(System.Char*,System.Int32)">
          <source>Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility, and the number of bytes in the preamble is not reflected in the value returned by the <ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetByteCount%2A&gt;</ph> method.</source>
          <target state="translated">位元組資料流的開頭插入前序編碼 (例如一系列的位元組寫入檔案的開頭) 是開發人員的責任和中前序編碼的位元組數目不會反映在所傳回的值<ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetByteCount%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetByteCount(System.Char*,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetByteCount(System.Char*,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph> 小於零。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetByteCount(System.Char*,System.Int32)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetByteCount(System.Char*,System.Int32)">
          <source>The resulting number of bytes is greater than the maximum number that can be returned as an integer.</source>
          <target state="translated">所產生的位元組數目大於可用整數傳回的數目上限。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetByteCount(System.Char*,System.Int32)">
          <source>Error detection is enabled, and <ph id="ph1">&lt;paramref name="chars" /&gt;</ph> contains an invalid sequence of characters.</source>
          <target state="translated">已啟用錯誤偵測，而 <ph id="ph1">&lt;paramref name="chars" /&gt;</ph> 包含無效的字元序列。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetByteCount(System.Char*,System.Int32)">
          <source>A fallback occurred (see <bpt id="p1">[</bpt>Character Encoding in the .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> for a complete explanation)</source>
          <target state="translated">發生後援 (如需完整說明，請參閱 <bpt id="p1">[</bpt>.NET Framework 中的字元編碼<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept>)</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetByteCount(System.Char*,System.Int32)">
          <source>-and-</source>
          <target state="translated">-和-</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetByteCount(System.Char*,System.Int32)">
          <source><ph id="ph1">&lt;see cref="P:System.Text.Encoding.EncoderFallback" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Text.Encoding.EncoderFallback" /&gt;</ph> 設定為 <ph id="ph2">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetByteCount(System.Char*,System.Int32)">
          <source>Requires full trust for the immediate caller.</source>
          <target state="translated">需要完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetByteCount(System.Char*,System.Int32)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">這個成員無法供部分信任或安全性透明程式碼。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>The character array containing the set of characters to encode.</source>
          <target state="translated">包含要解碼之一組字元的字元陣列。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>The index of the first character to encode.</source>
          <target state="translated">要編碼的第一個字元索引。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>The number of characters to encode.</source>
          <target state="translated">要編碼的字元數。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>Calculates the number of bytes produced by encoding a set of characters from the specified character array.</source>
          <target state="translated">計算將指定字元陣列中的一組字元編碼所產生的位元組數目。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>The number of bytes produced by encoding the specified characters.</source>
          <target state="translated">編碼指定字元所產生的位元組數。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>To calculate the exact array size required by <ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetBytes%2A&gt;</ph> to store the resulting bytes, you call the uses <ph id="ph2">&lt;xref:System.Text.UTF8Encoding.GetByteCount%2A&gt;</ph> method.</source>
          <target state="translated">若要計算所需的精確陣列大小<ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetBytes%2A&gt;</ph>儲存產生的位元組，您會呼叫使用<ph id="ph2">&lt;xref:System.Text.UTF8Encoding.GetByteCount%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>To calculate the maximum array size, you call the <ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetMaxByteCount%2A&gt;</ph> method.</source>
          <target state="translated">若要計算的最大陣列大小，請呼叫<ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetMaxByteCount%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetByteCount%2A&gt;</ph> method generally allocates less memory, while the <ph id="ph2">&lt;xref:System.Text.UTF8Encoding.GetMaxByteCount%2A&gt;</ph> method generally executes faster.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetByteCount%2A&gt;</ph>方法通常會配置較少的記憶體，而<ph id="ph2">&lt;xref:System.Text.UTF8Encoding.GetMaxByteCount%2A&gt;</ph>方法通常執行速度更快。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>With error detection, an invalid sequence causes this method to throw an <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph> exception.</source>
          <target state="translated">錯誤偵測無效的序列造成此方法會擲回<ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph>例外狀況。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>Without error detection, invalid sequences are ignored, and no exception is thrown.</source>
          <target state="translated">錯誤偵測，會忽略無效的序列，而不擲回任何例外狀況。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</source>
          <target state="translated">若要確保儲存為檔案或資料流時編碼的位元組會正確解碼，您可以前置詞與前序編碼的位元組資料流。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility, and the number of bytes in the preamble is not reflected in the value returned by the <ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetByteCount%2A&gt;</ph> method.</source>
          <target state="translated">位元組資料流的開頭插入前序編碼 (例如一系列的位元組寫入檔案的開頭) 是開發人員的責任和中前序編碼的位元組數目不會反映在所傳回的值<ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetByteCount%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>The following example populates an array with a Latin uppercase and lowercase characters and calls the <ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> method to determine the number of bytes needed to encode the Latin lowercase characters.</source>
          <target state="translated">下列範例會填入大寫英文的陣列和小寫字元與呼叫<ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29&gt;</ph>方法，以判斷拉丁小寫字元編碼所需的位元組數目。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>It then displays this information along with the total number of bytes needed if a byte order mark is added.</source>
          <target state="translated">然後，它會顯示這項資訊，以及如果位元組順序標記就會加入所需的位元組總數。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>It compares this number with the value returned by the <ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetMaxByteCount%2A&gt;</ph> method, which indicates maximum number of bytes needed to encode the Latin lowercase characters.</source>
          <target state="translated">它會比較所傳回的值與這個數字<ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetMaxByteCount%2A&gt;</ph>方法，表示英文小寫字元編碼所需的位元組數目上限。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="count" /&gt;</ph> 小於零。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> and <ph id="ph2">&lt;paramref name="count" /&gt;</ph> do not denote a valid range in <ph id="ph3">&lt;paramref name="chars" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 與 <ph id="ph2">&lt;paramref name="count" /&gt;</ph> 不代表 <ph id="ph3">&lt;paramref name="chars" /&gt;</ph> 中有效的範圍。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>The resulting number of bytes is greater than the maximum number that can be returned as an integer.</source>
          <target state="translated">所產生的位元組數目大於可用整數傳回的數目上限。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>Error detection is enabled, and <ph id="ph1">&lt;paramref name="chars" /&gt;</ph> contains an invalid sequence of characters.</source>
          <target state="translated">已啟用錯誤偵測，而 <ph id="ph1">&lt;paramref name="chars" /&gt;</ph> 包含無效的字元序列。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>A fallback occurred (see <bpt id="p1">[</bpt>Character Encoding in the .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> for complete explanation)</source>
          <target state="translated">發生後援 (如需完整說明，請參閱 <bpt id="p1">[</bpt>.NET Framework 中的字元編碼<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept>)</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>-and-</source>
          <target state="translated">-和-</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Text.Encoding.EncoderFallback" /&gt;</ph> property is set to <ph id="ph2">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Text.Encoding.EncoderFallback" /&gt;</ph> 屬性設定為 <ph id="ph2">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="T:System.Text.UTF8Encoding">
          <source>Encodes a set of characters into a sequence of bytes.</source>
          <target state="translated">將一組字元編碼成位元組序列。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>A pointer to the first character to encode.</source>
          <target state="translated">要編碼的第一個字元指標。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>The number of characters to encode.</source>
          <target state="translated">要編碼的字元數。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>A pointer to the location at which to start writing the resulting sequence of bytes.</source>
          <target state="translated">開始寫入結果位元組序列的位置指標。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>The maximum number of bytes to write.</source>
          <target state="translated">寫入的最大位元組數。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>Encodes a set of characters starting at the specified character pointer into a sequence of bytes that are stored starting at the specified byte pointer.</source>
          <target state="translated">將起始於指定字元指標的一組字元編碼成位元組序列；儲存該位元組序列時，係以指定的位元組指標為起始點。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>The actual number of bytes written at the location indicated by <ph id="ph1">&lt;paramref name="bytes" /&gt;</ph>.</source>
          <target state="translated">在 <ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> 所表示的位置上寫入的實際位元組數目。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>To calculate the exact array size required by <ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetBytes%2A&gt;</ph> to store the resulting bytes, you call the <ph id="ph2">&lt;xref:System.Text.UTF8Encoding.GetByteCount%2A&gt;</ph> method.</source>
          <target state="translated">若要計算所需的精確陣列大小<ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetBytes%2A&gt;</ph>儲存產生的位元組，您呼叫<ph id="ph2">&lt;xref:System.Text.UTF8Encoding.GetByteCount%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>To calculate the maximum array size, you call the <ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetMaxByteCount%2A&gt;</ph> method.</source>
          <target state="translated">若要計算的最大陣列大小，請呼叫<ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetMaxByteCount%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetByteCount%2A&gt;</ph> method generally allocates less memory, while the <ph id="ph2">&lt;xref:System.Text.UTF8Encoding.GetMaxByteCount%2A&gt;</ph> method generally executes faster.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetByteCount%2A&gt;</ph>方法通常會配置較少的記憶體，而<ph id="ph2">&lt;xref:System.Text.UTF8Encoding.GetMaxByteCount%2A&gt;</ph>方法通常執行速度更快。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>With error detection, an invalid sequence causes this method to throw an <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph> exception.</source>
          <target state="translated">錯誤偵測無效的序列造成此方法會擲回<ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph>例外狀況。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>Without error detection, invalid sequences are ignored, and no exception is thrown.</source>
          <target state="translated">錯誤偵測，會忽略無效的序列，而不擲回任何例外狀況。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>Data to be converted, such as data read from a stream, might be available only in sequential blocks.</source>
          <target state="translated">要轉換，例如，從資料流讀取資料的資料可能只適用於連續區塊。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, use the <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> or the <ph id="ph2">&lt;xref:System.Text.Encoder&gt;</ph> returned by the <ph id="ph3">&lt;xref:System.Text.UTF8Encoding.GetDecoder%2A&gt;</ph> method or the <ph id="ph4">&lt;xref:System.Text.UTF8Encoding.GetEncoder%2A&gt;</ph> method, respectively.</source>
          <target state="translated">在這種情況下，或如果資料量很大，它必須分割成較小的區塊，請使用<ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph>或<ph id="ph2">&lt;xref:System.Text.Encoder&gt;</ph>傳回<ph id="ph3">&lt;xref:System.Text.UTF8Encoding.GetDecoder%2A&gt;</ph>方法或<ph id="ph4">&lt;xref:System.Text.UTF8Encoding.GetEncoder%2A&gt;</ph>方法，分別。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</source>
          <target state="translated">若要確保儲存為檔案或資料流時編碼的位元組會正確解碼，您可以前置詞與前序編碼的位元組資料流。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility.</source>
          <target state="translated">位元組資料流的開頭插入前序編碼 (例如一系列的位元組寫入檔案的開頭) 是開發人員的責任。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetBytes%2A&gt;</ph> method does not prepend a preamble to the beginning of a sequence of encoded bytes.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetBytes%2A&gt;</ph>方法不會不在前面加上前序編碼的位元組序列的開頭。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="charCount" /&gt;</ph> or <ph id="ph2">&lt;paramref name="byteCount" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="charCount" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="byteCount" /&gt;</ph> 小於零。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>Error detection is enabled, and <ph id="ph1">&lt;paramref name="chars" /&gt;</ph> contains an invalid sequence of characters.</source>
          <target state="translated">已啟用錯誤偵測，而 <ph id="ph1">&lt;paramref name="chars" /&gt;</ph> 包含無效的字元序列。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="byteCount" /&gt;</ph> is less than the resulting number of bytes.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="byteCount" /&gt;</ph> 小於結果位元組數。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>A fallback occurred (see <bpt id="p1">[</bpt>Character Encoding in the .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> for complete explanation)</source>
          <target state="translated">發生後援 (如需完整說明，請參閱 <bpt id="p1">[</bpt>.NET Framework 中的字元編碼<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept>)</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>-and-</source>
          <target state="translated">-和-</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source><ph id="ph1">&lt;see cref="P:System.Text.Encoding.EncoderFallback" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Text.Encoding.EncoderFallback" /&gt;</ph> 設定為 <ph id="ph2">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>Requires full trust for the immediate caller.</source>
          <target state="translated">需要完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">這個成員無法供部分信任或安全性透明程式碼。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The character array containing the set of characters to encode.</source>
          <target state="translated">包含要解碼之一組字元的字元陣列。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The index of the first character to encode.</source>
          <target state="translated">要編碼的第一個字元索引。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The number of characters to encode.</source>
          <target state="translated">要編碼的字元數。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The byte array to contain the resulting sequence of bytes.</source>
          <target state="translated">要包含結果位元組序列的位元組陣列。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The index at which to start writing the resulting sequence of bytes.</source>
          <target state="translated">要開始寫入結果位元組序列的索引。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>Encodes a set of characters from the specified character array into the specified byte array.</source>
          <target state="translated">將指定字元陣列中的一組字元編碼成指定的位元組陣列。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The actual number of bytes written into <ph id="ph1">&lt;paramref name="bytes" /&gt;</ph>.</source>
          <target state="translated">寫入 <ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> 的實際位元組數。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>To calculate the exact array size required by <ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetBytes%2A&gt;</ph> to store the resulting bytes, you call the <ph id="ph2">&lt;xref:System.Text.UTF8Encoding.GetByteCount%2A&gt;</ph> method.</source>
          <target state="translated">若要計算所需的精確陣列大小<ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetBytes%2A&gt;</ph>儲存產生的位元組，您呼叫<ph id="ph2">&lt;xref:System.Text.UTF8Encoding.GetByteCount%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>To calculate the maximum array size, you call the <ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetMaxByteCount%2A&gt;</ph> method.</source>
          <target state="translated">若要計算的最大陣列大小，請呼叫<ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetMaxByteCount%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetByteCount%2A&gt;</ph> method generally allocates less memory, while the <ph id="ph2">&lt;xref:System.Text.UTF8Encoding.GetMaxByteCount%2A&gt;</ph> method generally executes faster.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetByteCount%2A&gt;</ph>方法通常會配置較少的記憶體，而<ph id="ph2">&lt;xref:System.Text.UTF8Encoding.GetMaxByteCount%2A&gt;</ph>方法通常執行速度更快。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>With error detection, an invalid sequence causes this method to throw an <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph> exception.</source>
          <target state="translated">錯誤偵測無效的序列造成此方法會擲回<ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph>例外狀況。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>Without error detection, invalid sequences are ignored, and no exception is thrown.</source>
          <target state="translated">錯誤偵測，會忽略無效的序列，而不擲回任何例外狀況。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>Data to be converted, such as data read from a stream, might be available only in sequential blocks.</source>
          <target state="translated">要轉換，例如，從資料流讀取資料的資料可能只適用於連續區塊。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, use the <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> or the <ph id="ph2">&lt;xref:System.Text.Encoder&gt;</ph> provided by the <ph id="ph3">&lt;xref:System.Text.UTF8Encoding.GetDecoder%2A&gt;</ph> method or the <ph id="ph4">&lt;xref:System.Text.UTF8Encoding.GetEncoder%2A&gt;</ph> method, respectively.</source>
          <target state="translated">在這種情況下，或如果資料量很大，它必須分割成較小的區塊，請使用<ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph>或<ph id="ph2">&lt;xref:System.Text.Encoder&gt;</ph>提供<ph id="ph3">&lt;xref:System.Text.UTF8Encoding.GetDecoder%2A&gt;</ph>方法或<ph id="ph4">&lt;xref:System.Text.UTF8Encoding.GetEncoder%2A&gt;</ph>方法，分別。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</source>
          <target state="translated">若要確保儲存為檔案或資料流時編碼的位元組會正確解碼，您可以前置詞與前序編碼的位元組資料流。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility.</source>
          <target state="translated">位元組資料流的開頭插入前序編碼 (例如一系列的位元組寫入檔案的開頭) 是開發人員的責任。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetBytes%2A&gt;</ph> method does not prepend a preamble to the beginning of a sequence of encoded bytes.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetBytes%2A&gt;</ph>方法不會不在前面加上前序編碼的位元組序列的開頭。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetBytes%2A&gt;</ph> method to encode a range of characters from a string and stores the encoded bytes in a range of elements in a byte array.</source>
          <target state="translated">下列範例會使用<ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetBytes%2A&gt;</ph>方法，將編碼的字元從字串和儲存區中的位元組陣列的項目範圍中編碼的位元組範圍。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="charIndex" /&gt;</ph> or <ph id="ph2">&lt;paramref name="charCount" /&gt;</ph> or <ph id="ph3">&lt;paramref name="byteIndex" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="charIndex" /&gt;</ph>、<ph id="ph2">&lt;paramref name="charCount" /&gt;</ph> 或 <ph id="ph3">&lt;paramref name="byteIndex" /&gt;</ph> 小於零。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="charIndex" /&gt;</ph> and <ph id="ph2">&lt;paramref name="charCount" /&gt;</ph> do not denote a valid range in <ph id="ph3">&lt;paramref name="chars" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="charIndex" /&gt;</ph> 與 <ph id="ph2">&lt;paramref name="charCount" /&gt;</ph> 不代表 <ph id="ph3">&lt;paramref name="chars" /&gt;</ph> 中有效的範圍。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="byteIndex" /&gt;</ph> is not a valid index in <ph id="ph2">&lt;paramref name="bytes" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="byteIndex" /&gt;</ph> 在 <ph id="ph2">&lt;paramref name="bytes" /&gt;</ph> 中不是有效的索引。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>Error detection is enabled, and <ph id="ph1">&lt;paramref name="chars" /&gt;</ph> contains an invalid sequence of characters.</source>
          <target state="translated">已啟用錯誤偵測，而 <ph id="ph1">&lt;paramref name="chars" /&gt;</ph> 包含無效的字元序列。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> does not have enough capacity from <ph id="ph2">&lt;paramref name="byteIndex" /&gt;</ph> to the end of the array to accommodate the resulting bytes.</source>
          <target state="translated">從 <ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> 到陣列結尾處，<ph id="ph2">&lt;paramref name="byteIndex" /&gt;</ph> 沒有足夠的容量容納結果位元組。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>A fallback occurred (see <bpt id="p1">[</bpt>Character Encoding in the .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> for complete explanation)</source>
          <target state="translated">發生後援 (如需完整說明，請參閱 <bpt id="p1">[</bpt>.NET Framework 中的字元編碼<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept>)</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>-and-</source>
          <target state="translated">-和-</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;see cref="P:System.Text.Encoding.EncoderFallback" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Text.Encoding.EncoderFallback" /&gt;</ph> 設定為 <ph id="ph2">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the set of characters to encode.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>，包含要編碼的一組字元。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The index of the first character to encode.</source>
          <target state="translated">要編碼的第一個字元索引。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The number of characters to encode.</source>
          <target state="translated">要編碼的字元數。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The byte array to contain the resulting sequence of bytes.</source>
          <target state="translated">要包含結果位元組序列的位元組陣列。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The index at which to start writing the resulting sequence of bytes.</source>
          <target state="translated">要開始寫入結果位元組序列的索引。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>Encodes a set of characters from the specified <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> into the specified byte array.</source>
          <target state="translated">將指定 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> 中的一組字元編碼成指定的位元組陣列。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The actual number of bytes written into <ph id="ph1">&lt;paramref name="bytes" /&gt;</ph>.</source>
          <target state="translated">寫入 <ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> 的實際位元組數。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>To calculate the exact array size required by <ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetBytes%2A&gt;</ph> to store the resulting bytes, you call the <ph id="ph2">&lt;xref:System.Text.UTF8Encoding.GetByteCount%2A&gt;</ph> method.</source>
          <target state="translated">若要計算所需的精確陣列大小<ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetBytes%2A&gt;</ph>儲存產生的位元組，您呼叫<ph id="ph2">&lt;xref:System.Text.UTF8Encoding.GetByteCount%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>To calculate the maximum array size, you call the <ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetMaxByteCount%2A&gt;</ph> method.</source>
          <target state="translated">若要計算的最大陣列大小，請呼叫<ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetMaxByteCount%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetByteCount%2A&gt;</ph> method generally allocates less memory, while the <ph id="ph2">&lt;xref:System.Text.UTF8Encoding.GetMaxByteCount%2A&gt;</ph> method generally executes faster.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetByteCount%2A&gt;</ph>方法通常會配置較少的記憶體，而<ph id="ph2">&lt;xref:System.Text.UTF8Encoding.GetMaxByteCount%2A&gt;</ph>方法通常執行速度更快。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>With error detection, an invalid sequence causes this method to throw an <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph> exception.</source>
          <target state="translated">錯誤偵測無效的序列造成此方法會擲回<ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph>例外狀況。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>Without error detection, invalid sequences are ignored, and no exception is thrown.</source>
          <target state="translated">錯誤偵測，會忽略無效的序列，而不擲回任何例外狀況。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>Data to be converted, such as data read from a stream, might be available only in sequential blocks.</source>
          <target state="translated">要轉換，例如，從資料流讀取資料的資料可能只適用於連續區塊。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, use the <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> or the <ph id="ph2">&lt;xref:System.Text.Encoder&gt;</ph> provided by the <ph id="ph3">&lt;xref:System.Text.UTF8Encoding.GetDecoder%2A&gt;</ph> method or the <ph id="ph4">&lt;xref:System.Text.UTF8Encoding.GetEncoder%2A&gt;</ph> method, respectively.</source>
          <target state="translated">在這種情況下，或如果資料量很大，它必須分割成較小的區塊，請使用<ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph>或<ph id="ph2">&lt;xref:System.Text.Encoder&gt;</ph>提供<ph id="ph3">&lt;xref:System.Text.UTF8Encoding.GetDecoder%2A&gt;</ph>方法或<ph id="ph4">&lt;xref:System.Text.UTF8Encoding.GetEncoder%2A&gt;</ph>方法，分別。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</source>
          <target state="translated">若要確保儲存為檔案或資料流時編碼的位元組會正確解碼，您可以前置詞與前序編碼的位元組資料流。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility.</source>
          <target state="translated">位元組資料流的開頭插入前序編碼 (例如一系列的位元組寫入檔案的開頭) 是開發人員的責任。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetBytes%2A&gt;</ph> method does not prepend a preamble to the beginning of a sequence of encoded bytes.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetBytes%2A&gt;</ph>方法不會不在前面加上前序編碼的位元組序列的開頭。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetBytes%2A&gt;</ph> method to encode a range of elements from a Unicode character array and store the encoded bytes in a range of elements in a byte array.</source>
          <target state="translated">下列範例會使用<ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetBytes%2A&gt;</ph>編碼的 Unicode 字元陣列中的項目範圍，並將編碼的位元組儲存在位元組陣列中的項目範圍的方法。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="charIndex" /&gt;</ph> or <ph id="ph2">&lt;paramref name="charCount" /&gt;</ph> or <ph id="ph3">&lt;paramref name="byteIndex" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="charIndex" /&gt;</ph>、<ph id="ph2">&lt;paramref name="charCount" /&gt;</ph> 或 <ph id="ph3">&lt;paramref name="byteIndex" /&gt;</ph> 小於零。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="charIndex" /&gt;</ph> and <ph id="ph2">&lt;paramref name="charCount" /&gt;</ph> do not denote a valid range in <ph id="ph3">&lt;paramref name="chars" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="charIndex" /&gt;</ph> 與 <ph id="ph2">&lt;paramref name="charCount" /&gt;</ph> 不代表 <ph id="ph3">&lt;paramref name="chars" /&gt;</ph> 中有效的範圍。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="byteIndex" /&gt;</ph> is not a valid index in <ph id="ph2">&lt;paramref name="bytes" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="byteIndex" /&gt;</ph> 在 <ph id="ph2">&lt;paramref name="bytes" /&gt;</ph> 中不是有效的索引。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>Error detection is enabled, and <ph id="ph1">&lt;paramref name="s" /&gt;</ph> contains an invalid sequence of characters.</source>
          <target state="translated">已啟用錯誤偵測，而 <ph id="ph1">&lt;paramref name="s" /&gt;</ph> 包含無效的字元序列。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> does not have enough capacity from <ph id="ph2">&lt;paramref name="byteIndex" /&gt;</ph> to the end of the array to accommodate the resulting bytes.</source>
          <target state="translated">從 <ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> 到陣列結尾處，<ph id="ph2">&lt;paramref name="byteIndex" /&gt;</ph> 沒有足夠的容量容納結果位元組。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>A fallback occurred (see <bpt id="p1">[</bpt>Character Encoding in the .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> for complete explanation)</source>
          <target state="translated">發生後援 (如需完整說明，請參閱 <bpt id="p1">[</bpt>.NET Framework 中的字元編碼<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept>)</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>-and-</source>
          <target state="translated">-和-</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;see cref="P:System.Text.Encoding.EncoderFallback" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Text.Encoding.EncoderFallback" /&gt;</ph> 設定為 <ph id="ph2">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="T:System.Text.UTF8Encoding">
          <source>Calculates the number of characters produced by decoding a sequence of bytes.</source>
          <target state="translated">計算將位元組序列解碼所產生的字元數。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetCharCount(System.Byte*,System.Int32)">
          <source>A pointer to the first byte to decode.</source>
          <target state="translated">要解碼的第一個位元組指標。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetCharCount(System.Byte*,System.Int32)">
          <source>The number of bytes to decode.</source>
          <target state="translated">要解碼的位元組數。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetCharCount(System.Byte*,System.Int32)">
          <source>Calculates the number of characters produced by decoding a sequence of bytes starting at the specified byte pointer.</source>
          <target state="translated">計算將起始於指定位元組指標的位元組序列解碼所產生的字元數。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetCharCount(System.Byte*,System.Int32)">
          <source>The number of characters produced by decoding the specified sequence of bytes.</source>
          <target state="translated">解碼指定位元組序列所產生的字元數。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetCharCount(System.Byte*,System.Int32)">
          <source>To calculate the exact array size required by <ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetChars%2A&gt;</ph> to store the resulting characters, call the <ph id="ph2">&lt;xref:System.Text.UTF8Encoding.GetCharCount%2A&gt;</ph> method.</source>
          <target state="translated">若要計算所需的精確陣列大小<ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetChars%2A&gt;</ph>來儲存產生的字元，呼叫<ph id="ph2">&lt;xref:System.Text.UTF8Encoding.GetCharCount%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetCharCount(System.Byte*,System.Int32)">
          <source>To calculate the maximum array size, call the <ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetMaxCharCount%2A&gt;</ph> method.</source>
          <target state="translated">若要計算最大陣列大小，請呼叫<ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetMaxCharCount%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetCharCount(System.Byte*,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetCharCount%2A&gt;</ph> method generally allocates less memory, while the <ph id="ph2">&lt;xref:System.Text.UTF8Encoding.GetMaxCharCount%2A&gt;</ph> method generally executes faster.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetCharCount%2A&gt;</ph>方法通常會配置較少的記憶體，而<ph id="ph2">&lt;xref:System.Text.UTF8Encoding.GetMaxCharCount%2A&gt;</ph>方法通常執行速度更快。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetCharCount(System.Byte*,System.Int32)">
          <source>With error detection, an invalid sequence causes this method to throw an <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph> exception.</source>
          <target state="translated">錯誤偵測無效的序列造成此方法會擲回<ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph>例外狀況。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetCharCount(System.Byte*,System.Int32)">
          <source>Without error detection, invalid sequences are ignored, and no exception is thrown.</source>
          <target state="translated">錯誤偵測，會忽略無效的序列，而不擲回任何例外狀況。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetCharCount(System.Byte*,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetCharCount(System.Byte*,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph> 小於零。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetCharCount(System.Byte*,System.Int32)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetCharCount(System.Byte*,System.Int32)">
          <source>The resulting number of bytes is greater than the maximum number that can be returned as an integer.</source>
          <target state="translated">所產生的位元組數目大於可用整數傳回的數目上限。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetCharCount(System.Byte*,System.Int32)">
          <source>Error detection is enabled, and <ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> contains an invalid sequence of bytes.</source>
          <target state="translated">已啟用錯誤偵測，而且 <ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> 包含無效的位元組序列。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetCharCount(System.Byte*,System.Int32)">
          <source>A fallback occurred (see <bpt id="p1">[</bpt>Character Encoding in the .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> for complete explanation)</source>
          <target state="translated">發生後援 (如需完整說明，請參閱 <bpt id="p1">[</bpt>.NET Framework 中的字元編碼<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept>)</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetCharCount(System.Byte*,System.Int32)">
          <source>-and-</source>
          <target state="translated">-和-</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetCharCount(System.Byte*,System.Int32)">
          <source><ph id="ph1">&lt;see cref="P:System.Text.Encoding.DecoderFallback" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="T:System.Text.DecoderExceptionFallback" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Text.Encoding.DecoderFallback" /&gt;</ph> 設定為 <ph id="ph2">&lt;see cref="T:System.Text.DecoderExceptionFallback" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetCharCount(System.Byte*,System.Int32)">
          <source>Requires full trust for the immediate caller.</source>
          <target state="translated">需要完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetCharCount(System.Byte*,System.Int32)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">這個成員無法供部分信任或安全性透明程式碼。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>The byte array containing the sequence of bytes to decode.</source>
          <target state="translated">包含要解碼之位元組序列的位元組陣列。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>The index of the first byte to decode.</source>
          <target state="translated">要解碼的第一個位元組索引。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes to decode.</source>
          <target state="translated">要解碼的位元組數。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>Calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.</source>
          <target state="translated">計算將指定位元組陣列中的位元組序列解碼所產生的字元數。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>The number of characters produced by decoding the specified sequence of bytes.</source>
          <target state="translated">解碼指定位元組序列所產生的字元數。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>To calculate the exact array size required by <ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetChars%2A&gt;</ph> to store the resulting characters, call the <ph id="ph2">&lt;xref:System.Text.UTF8Encoding.GetCharCount%2A&gt;</ph> method.</source>
          <target state="translated">若要計算所需的精確陣列大小<ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetChars%2A&gt;</ph>來儲存產生的字元，呼叫<ph id="ph2">&lt;xref:System.Text.UTF8Encoding.GetCharCount%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>To calculate the maximum array size, call the <ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetMaxCharCount%2A&gt;</ph> method.</source>
          <target state="translated">若要計算最大陣列大小，請呼叫<ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetMaxCharCount%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetCharCount%2A&gt;</ph> method generally allocates less memory, while the <ph id="ph2">&lt;xref:System.Text.UTF8Encoding.GetMaxCharCount%2A&gt;</ph> method generally executes faster.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetCharCount%2A&gt;</ph>方法通常會配置較少的記憶體，而<ph id="ph2">&lt;xref:System.Text.UTF8Encoding.GetMaxCharCount%2A&gt;</ph>方法通常執行速度更快。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>With error detection, an invalid sequence causes this method to throw an <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph> exception.</source>
          <target state="translated">錯誤偵測無效的序列造成此方法會擲回<ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph>例外狀況。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>Without error detection, invalid sequences are ignored, and no exception is thrown.</source>
          <target state="translated">錯誤偵測，會忽略無效的序列，而不擲回任何例外狀況。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetCharCount%2A&gt;</ph> method to return the number of characters produced by decoding a range of elements in a byte array.</source>
          <target state="translated">下列範例會使用<ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetCharCount%2A&gt;</ph>解碼之位元組陣列中的項目範圍所產生的方法來傳回的字元數。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="count" /&gt;</ph> 小於零。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> and <ph id="ph2">&lt;paramref name="count" /&gt;</ph> do not denote a valid range in <ph id="ph3">&lt;paramref name="bytes" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 與 <ph id="ph2">&lt;paramref name="count" /&gt;</ph> 不代表 <ph id="ph3">&lt;paramref name="bytes" /&gt;</ph> 中有效的範圍。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>The resulting number of bytes is greater than the maximum number that can be returned as an integer.</source>
          <target state="translated">所產生的位元組數目大於可用整數傳回的數目上限。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>Error detection is enabled, and <ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> contains an invalid sequence of bytes.</source>
          <target state="translated">已啟用錯誤偵測，而且 <ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> 包含無效的位元組序列。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>A fallback occurred (see <bpt id="p1">[</bpt>Character Encoding in the .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> for complete explanation)</source>
          <target state="translated">發生後援 (如需完整說明，請參閱 <bpt id="p1">[</bpt>.NET Framework 中的字元編碼<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept>)</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>-and-</source>
          <target state="translated">-和-</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;see cref="P:System.Text.Encoding.DecoderFallback" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="T:System.Text.DecoderExceptionFallback" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Text.Encoding.DecoderFallback" /&gt;</ph> 設定為 <ph id="ph2">&lt;see cref="T:System.Text.DecoderExceptionFallback" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="T:System.Text.UTF8Encoding">
          <source>Decodes a sequence of bytes into a set of characters.</source>
          <target state="translated">將位元組序列解碼成一組字元。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>A pointer to the first byte to decode.</source>
          <target state="translated">要解碼的第一個位元組指標。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>The number of bytes to decode.</source>
          <target state="translated">要解碼的位元組數。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>A pointer to the location at which to start writing the resulting set of characters.</source>
          <target state="translated">開始寫入產生的一組字元之位置指標。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>The maximum number of characters to write.</source>
          <target state="translated">要寫入的最大字元數。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>Decodes a sequence of bytes starting at the specified byte pointer into a set of characters that are stored starting at the specified character pointer.</source>
          <target state="translated">將起始於指定位元組指標的位元組序列解碼成一組字元；儲存該組字元時，係以指定的字元指標為起始點。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>The actual number of characters written at the location indicated by <ph id="ph1">&lt;paramref name="chars" /&gt;</ph>.</source>
          <target state="translated">在 <ph id="ph1">&lt;paramref name="chars" /&gt;</ph> 所表示的位置上寫入的實際字元數。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>To calculate the exact array size required by <ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetChars%2A&gt;</ph> to store the resulting characters, call the <ph id="ph2">&lt;xref:System.Text.UTF8Encoding.GetCharCount%2A&gt;</ph> method.</source>
          <target state="translated">若要計算所需的精確陣列大小<ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetChars%2A&gt;</ph>來儲存產生的字元，呼叫<ph id="ph2">&lt;xref:System.Text.UTF8Encoding.GetCharCount%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>To calculate the maximum array size, call the <ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetMaxCharCount%2A&gt;</ph> method.</source>
          <target state="translated">若要計算最大陣列大小，請呼叫<ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetMaxCharCount%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetCharCount%2A&gt;</ph> method generally allocates less memory, while the <ph id="ph2">&lt;xref:System.Text.UTF8Encoding.GetMaxCharCount%2A&gt;</ph> method generally executes faster.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetCharCount%2A&gt;</ph>方法通常會配置較少的記憶體，而<ph id="ph2">&lt;xref:System.Text.UTF8Encoding.GetMaxCharCount%2A&gt;</ph>方法通常執行速度更快。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>With error detection, an invalid sequence causes this method to throw an <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph> exception.</source>
          <target state="translated">錯誤偵測無效的序列造成此方法會擲回<ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph>例外狀況。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>Without error detection, invalid sequences are ignored, and no exception is thrown.</source>
          <target state="translated">錯誤偵測，會忽略無效的序列，而不擲回任何例外狀況。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>If the range of bytes to be decoded includes the byte order mark (BOM) and the byte array was returned by a method of a non-BOM aware type, the character U+FFFE is included in the character array returned by this method.</source>
          <target state="translated">如果要解碼的位元組範圍包含位元組順序標示 (BOM)，而且非 BOM 感知型別之方法所傳回的位元組陣列，這個方法所傳回的字元陣列中包含字元 U + FFFE。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>You can remove it by calling the <ph id="ph1">&lt;xref:System.String.TrimStart%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">您可以移除它，藉由呼叫<ph id="ph1">&lt;xref:System.String.TrimStart%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>Data to be converted, such as data read from a stream, might be available only in sequential blocks.</source>
          <target state="translated">要轉換，例如，從資料流讀取資料的資料可能只適用於連續區塊。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, use the <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> or the <ph id="ph2">&lt;xref:System.Text.Encoder&gt;</ph> object provided by the <ph id="ph3">&lt;xref:System.Text.UTF8Encoding.GetDecoder%2A&gt;</ph> method or the <ph id="ph4">&lt;xref:System.Text.UTF8Encoding.GetEncoder%2A&gt;</ph> method, respectively.</source>
          <target state="translated">在這種情況下，或如果資料量很大，它必須分割成較小的區塊，請使用<ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph>或<ph id="ph2">&lt;xref:System.Text.Encoder&gt;</ph>所提供物件<ph id="ph3">&lt;xref:System.Text.UTF8Encoding.GetDecoder%2A&gt;</ph>方法或<ph id="ph4">&lt;xref:System.Text.UTF8Encoding.GetEncoder%2A&gt;</ph>方法，分別。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="byteCount" /&gt;</ph> or <ph id="ph2">&lt;paramref name="charCount" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="byteCount" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="charCount" /&gt;</ph> 小於零。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>Error detection is enabled, and <ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> contains an invalid sequence of bytes.</source>
          <target state="translated">已啟用錯誤偵測，而且 <ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> 包含無效的位元組序列。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="charCount" /&gt;</ph> is less than the resulting number of characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="charCount" /&gt;</ph> 小於結果字元數。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>A fallback occurred (see <bpt id="p1">[</bpt>Character Encoding in the .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> for complete explanation)</source>
          <target state="translated">發生後援 (如需完整說明，請參閱 <bpt id="p1">[</bpt>.NET Framework 中的字元編碼<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept>)</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>-and-</source>
          <target state="translated">-和-</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source><ph id="ph1">&lt;see cref="P:System.Text.Encoding.DecoderFallback" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="T:System.Text.DecoderExceptionFallback" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Text.Encoding.DecoderFallback" /&gt;</ph> 設定為 <ph id="ph2">&lt;see cref="T:System.Text.DecoderExceptionFallback" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>Requires full trust for the immediate caller.</source>
          <target state="translated">需要完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">這個成員無法供部分信任或安全性透明程式碼。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>The byte array containing the sequence of bytes to decode.</source>
          <target state="translated">包含要解碼之位元組序列的位元組陣列。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>The index of the first byte to decode.</source>
          <target state="translated">要解碼的第一個位元組索引。</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>The number of bytes to decode.</source>
          <target state="translated">要解碼的位元組數。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>The character array to contain the resulting set of characters.</source>
          <target state="translated">包含產生的一組字元之字元陣列。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>The index at which to start writing the resulting set of characters.</source>
          <target state="translated">要開始寫入產生的一組字元之索引。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>Decodes a sequence of bytes from the specified byte array into the specified character array.</source>
          <target state="translated">將指定位元組陣列中的位元組序列解碼成指定的字元陣列。</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>The actual number of characters written into <ph id="ph1">&lt;paramref name="chars" /&gt;</ph>.</source>
          <target state="translated">寫入 <ph id="ph1">&lt;paramref name="chars" /&gt;</ph> 的實際字元數。</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>To calculate the exact array size required by <ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetChars%2A&gt;</ph> to store the resulting characters, call the <ph id="ph2">&lt;xref:System.Text.UTF8Encoding.GetCharCount%2A&gt;</ph> method.</source>
          <target state="translated">若要計算所需的精確陣列大小<ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetChars%2A&gt;</ph>來儲存產生的字元，呼叫<ph id="ph2">&lt;xref:System.Text.UTF8Encoding.GetCharCount%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>To calculate the maximum array size, call the <ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetMaxCharCount%2A&gt;</ph> method.</source>
          <target state="translated">若要計算最大陣列大小，請呼叫<ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetMaxCharCount%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetCharCount%2A&gt;</ph> method generally allocates less memory, while the <ph id="ph2">&lt;xref:System.Text.UTF8Encoding.GetMaxCharCount%2A&gt;</ph> method generally executes faster.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetCharCount%2A&gt;</ph>方法通常會配置較少的記憶體，而<ph id="ph2">&lt;xref:System.Text.UTF8Encoding.GetMaxCharCount%2A&gt;</ph>方法通常執行速度更快。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>With error detection, an invalid sequence causes this method to throw an <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph> exception.</source>
          <target state="translated">錯誤偵測無效的序列造成此方法會擲回<ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph>例外狀況。</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>Without error detection, invalid sequences are ignored, and no exception is thrown.</source>
          <target state="translated">錯誤偵測，會忽略無效的序列，而不擲回任何例外狀況。</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>If the range of bytes to be decoded includes the byte order mark (BOM) and the byte array was returned by a method of a non-BOM aware type, the character U+FFFE is included in the character array returned by this method.</source>
          <target state="translated">如果要解碼的位元組範圍包含位元組順序標示 (BOM)，而且非 BOM 感知型別之方法所傳回的位元組陣列，這個方法所傳回的字元陣列中包含字元 U + FFFE。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>You can remove it by calling the <ph id="ph1">&lt;xref:System.String.TrimStart%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">您可以移除它，藉由呼叫<ph id="ph1">&lt;xref:System.String.TrimStart%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>Data to be converted, such as data read from a stream, might be available only in sequential blocks.</source>
          <target state="translated">要轉換，例如，從資料流讀取資料的資料可能只適用於連續區塊。</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, use the <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> or the <ph id="ph2">&lt;xref:System.Text.Encoder&gt;</ph> provided by the <ph id="ph3">&lt;xref:System.Text.UTF8Encoding.GetDecoder%2A&gt;</ph> method or the <ph id="ph4">&lt;xref:System.Text.UTF8Encoding.GetEncoder%2A&gt;</ph> method, respectively.</source>
          <target state="translated">在這種情況下，或如果資料量很大，它必須分割成較小的區塊，請使用<ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph>或<ph id="ph2">&lt;xref:System.Text.Encoder&gt;</ph>提供<ph id="ph3">&lt;xref:System.Text.UTF8Encoding.GetDecoder%2A&gt;</ph>方法或<ph id="ph4">&lt;xref:System.Text.UTF8Encoding.GetEncoder%2A&gt;</ph>方法，分別。</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetChars%2A&gt;</ph> method to decode a range of elements in a byte array and store the result in a character array.</source>
          <target state="translated">下列範例會使用<ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetChars%2A&gt;</ph>方法來解碼的位元組陣列中的項目範圍，並將結果儲存在字元陣列。</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="byteIndex" /&gt;</ph> or <ph id="ph2">&lt;paramref name="byteCount" /&gt;</ph> or <ph id="ph3">&lt;paramref name="charIndex" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="byteIndex" /&gt;</ph>、<ph id="ph2">&lt;paramref name="byteCount" /&gt;</ph> 或 <ph id="ph3">&lt;paramref name="charIndex" /&gt;</ph> 小於零。</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="byteindex" /&gt;</ph> and <ph id="ph2">&lt;paramref name="byteCount" /&gt;</ph> do not denote a valid range in <ph id="ph3">&lt;paramref name="bytes" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="byteindex" /&gt;</ph> 與 <ph id="ph2">&lt;paramref name="byteCount" /&gt;</ph> 不代表 <ph id="ph3">&lt;paramref name="bytes" /&gt;</ph> 中有效的範圍。</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="charIndex" /&gt;</ph> is not a valid index in <ph id="ph2">&lt;paramref name="chars" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="charIndex" /&gt;</ph> 在 <ph id="ph2">&lt;paramref name="chars" /&gt;</ph> 中不是有效的索引。</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>Error detection is enabled, and <ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> contains an invalid sequence of bytes.</source>
          <target state="translated">已啟用錯誤偵測，而且 <ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> 包含無效的位元組序列。</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> does not have enough capacity from <ph id="ph2">&lt;paramref name="charIndex" /&gt;</ph> to the end of the array to accommodate the resulting characters.</source>
          <target state="translated">從 <ph id="ph1">&lt;paramref name="chars" /&gt;</ph> 到陣列結尾處，<ph id="ph2">&lt;paramref name="charIndex" /&gt;</ph> 沒有足夠的容量容納結果字元。</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>A fallback occurred (see <bpt id="p1">[</bpt>Character Encoding in the .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> for complete explanation)</source>
          <target state="translated">發生後援 (如需完整說明，請參閱 <bpt id="p1">[</bpt>.NET Framework 中的字元編碼<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept>)</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>-and-</source>
          <target state="translated">-和-</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source><ph id="ph1">&lt;see cref="P:System.Text.Encoding.DecoderFallback" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="T:System.Text.DecoderExceptionFallback" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Text.Encoding.DecoderFallback" /&gt;</ph> 設定為 <ph id="ph2">&lt;see cref="T:System.Text.DecoderExceptionFallback" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetDecoder">
          <source>Obtains a decoder that converts a UTF-8 encoded sequence of bytes into a sequence of Unicode characters.</source>
          <target state="translated">取得可以將以 UTF-8 編碼的位元組序列轉換成 Unicode 字元序列的解碼器。</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetDecoder">
          <source>A decoder that converts a UTF-8 encoded sequence of bytes into a sequence of Unicode characters.</source>
          <target state="translated">可以將以 UTF-8 編碼的位元組序列轉換成 Unicode 字元序列的解碼器。</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetDecoder">
          <source>The <ph id="ph1">&lt;xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType&gt;</ph> method converts sequential blocks of bytes into sequential blocks of characters, in a manner similar to the <ph id="ph2">&lt;xref:System.Text.UTF8Encoding.GetChars%2A&gt;</ph> method of this class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType&gt;</ph>方法將序列的位元組區塊轉換成循序區塊中的字元，其方式類似<ph id="ph2">&lt;xref:System.Text.UTF8Encoding.GetChars%2A&gt;</ph>這個類別的方法。</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetDecoder">
          <source>However, a <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> maintains state information between calls so it can correctly decode byte sequences that span blocks.</source>
          <target state="translated">不過，<ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph>維護呼叫，因此它可以正確解碼位元組序列跨越區塊之間的狀態資訊。</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetDecoder">
          <source>The <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> also preserves trailing bytes at the end of data blocks and uses the trailing bytes in the next decoding operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph>也會保留資料區塊的結尾的後隨位元組，並在下一步解碼作業中使用尾端位元組。</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetDecoder">
          <source>Therefore, <ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetDecoder%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Text.UTF8Encoding.GetEncoder%2A&gt;</ph> are useful for network transmission and file operations, because those operations often deal with blocks of data instead of a complete data stream.</source>
          <target state="translated">因此，<ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetDecoder%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Text.UTF8Encoding.GetEncoder%2A&gt;</ph>進行網路傳輸，而檔案作業很實用是因為這些作業經常要處理而不是完整的資料流的資料區塊。</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetDecoder">
          <source>If error detection is enabled, that is, the <ph id="ph1">`throwOnInvalidCharacters`</ph> parameter of the constructor is set to <ph id="ph2">`true`</ph>, error detection is also enabled in the <ph id="ph3">&lt;xref:System.Text.Decoder&gt;</ph> returned by this method.</source>
          <target state="translated">如果已啟用錯誤偵測，也就是<ph id="ph1">`throwOnInvalidCharacters`</ph>建構函式的參數設定為<ph id="ph2">`true`</ph>中, 也已啟用錯誤偵測<ph id="ph3">&lt;xref:System.Text.Decoder&gt;</ph>這個方法所傳回。</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetDecoder">
          <source>If error detection is enabled and an invalid sequence is encountered, the state of the decoder is undefined and processing must stop.</source>
          <target state="translated">如果已啟用錯誤偵測，遇到無效的序列的解碼器狀態是未定義，且必須停止處理。</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetDecoder">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetDecoder%2A&gt;</ph> method to obtain a UTF-8 decoder.</source>
          <target state="translated">下列範例會使用<ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetDecoder%2A&gt;</ph>方法，以取得 utf-8 解碼器。</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetDecoder">
          <source>The decoder converts a sequence of bytes into a sequence of characters.</source>
          <target state="translated">解碼器會將位元組序列轉換成字元序列。</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetEncoder">
          <source>Obtains an encoder that converts a sequence of Unicode characters into a UTF-8 encoded sequence of bytes.</source>
          <target state="translated">取得可以將 Unicode 字元序列轉換成以 UTF-8 編碼的位元組序列的編碼器。</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetEncoder">
          <source>A <ph id="ph1">&lt;see cref="T:System.Text.Encoder" /&gt;</ph> that converts a sequence of Unicode characters into a UTF-8 encoded sequence of bytes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Text.Encoder" /&gt;</ph>，可以將 Unicode 字元序列轉換成以 UTF-8 編碼的位元組序列。</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetEncoder">
          <source>The <ph id="ph1">&lt;xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType&gt;</ph> method converts sequential blocks of characters into sequential blocks of bytes, in a manner similar to the <ph id="ph2">&lt;xref:System.Text.UTF8Encoding.GetBytes%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType&gt;</ph>方法會將字元的循序區塊轉換成位元組，以類似方式循序區塊<ph id="ph2">&lt;xref:System.Text.UTF8Encoding.GetBytes%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetEncoder">
          <source>However, a <ph id="ph1">&lt;xref:System.Text.Encoder&gt;</ph> maintains state information between calls so it can correctly encode character sequences that span blocks.</source>
          <target state="translated">不過，<ph id="ph1">&lt;xref:System.Text.Encoder&gt;</ph>維護呼叫，讓它正確可以編碼跨越區塊的字元序列之間的狀態資訊。</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetEncoder">
          <source>The <ph id="ph1">&lt;xref:System.Text.Encoder&gt;</ph> also preserves trailing characters at the end of data blocks and uses the trailing characters in the next encoding operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.Encoder&gt;</ph>也保留尾端字元的資料區塊的結尾，並在下一步的編碼作業中使用尾端字元。</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetEncoder">
          <source>For example, a data block might end with an unmatched high surrogate, and the matching low surrogate might be in the next data block.</source>
          <target state="translated">例如，資料區塊可能會不相符的高 surrogate，以結束，而且比對的低 surrogate 可能在下一個資料區塊中。</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetEncoder">
          <source>Therefore, <ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetDecoder%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Text.UTF8Encoding.GetEncoder%2A&gt;</ph> are useful for network transmission and file operations, because those operations often deal with blocks of data instead of a complete data stream.</source>
          <target state="translated">因此，<ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetDecoder%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Text.UTF8Encoding.GetEncoder%2A&gt;</ph>進行網路傳輸，而檔案作業很實用是因為這些作業經常要處理而不是完整的資料流的資料區塊。</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetEncoder">
          <source>If error detection is enabled, that is, the <ph id="ph1">`throwOnInvalidCharacters`</ph> parameter of the constructor is set to <ph id="ph2">`true`</ph>, error detection is also enabled in the <ph id="ph3">&lt;xref:System.Text.Encoder&gt;</ph> returned by this method.</source>
          <target state="translated">如果已啟用錯誤偵測，也就是<ph id="ph1">`throwOnInvalidCharacters`</ph>建構函式的參數設定為<ph id="ph2">`true`</ph>中, 也已啟用錯誤偵測<ph id="ph3">&lt;xref:System.Text.Encoder&gt;</ph>這個方法所傳回。</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetEncoder">
          <source>If error detection is enabled and an invalid sequence is encountered, the state of the encoder is undefined and processing must stop.</source>
          <target state="translated">如果已啟用錯誤偵測，而且遇到無效的序列，編碼器狀態是未定義，且必須停止處理。</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetEncoder">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetEncoder%2A&gt;</ph> method to obtain an encoder to convert a sequence of characters into a UTF-8 encoded sequence of bytes.</source>
          <target state="translated">下列範例會使用<ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetEncoder%2A&gt;</ph>方法，以取得編碼器將字元序列轉換成以 utf-8 編碼的位元組序列。</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetHashCode">
          <source>Returns the hash code for the current instance.</source>
          <target state="translated">傳回目前執行個體的雜湊碼。</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetHashCode">
          <source>The hash code for the current instance.</source>
          <target state="translated">目前執行個體的雜湊碼。</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetHashCode">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetHashCode%2A&gt;</ph> method to return a hash code for <ph id="ph2">&lt;xref:System.Text.UTF8Encoding&gt;</ph> instances.</source>
          <target state="translated">下列範例會使用<ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetHashCode%2A&gt;</ph>方法傳回的雜湊碼<ph id="ph2">&lt;xref:System.Text.UTF8Encoding&gt;</ph>執行個體。</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetHashCode">
          <source>Notice that the hash code returned by this method depends on the constructor used to create the <ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph> object.</source>
          <target state="translated">請注意，這個方法所傳回的雜湊程式碼是否取決於用來建立的建構函式<ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetMaxByteCount(System.Int32)">
          <source>The number of characters to encode.</source>
          <target state="translated">要編碼的字元數。</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetMaxByteCount(System.Int32)">
          <source>Calculates the maximum number of bytes produced by encoding the specified number of characters.</source>
          <target state="translated">計算將指定數目的字元編碼所產生的最大位元組數目。</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetMaxByteCount(System.Int32)">
          <source>The maximum number of bytes produced by encoding the specified number of characters.</source>
          <target state="translated">編碼指定字元數所產生的最大位元組數。</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetMaxByteCount(System.Int32)">
          <source>To calculate the exact array size required by <ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetBytes%2A&gt;</ph> to store the resulting bytes, you call the <ph id="ph2">&lt;xref:System.Text.UTF8Encoding.GetByteCount%2A&gt;</ph> method.</source>
          <target state="translated">若要計算所需的精確陣列大小<ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetBytes%2A&gt;</ph>儲存產生的位元組，您呼叫<ph id="ph2">&lt;xref:System.Text.UTF8Encoding.GetByteCount%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetMaxByteCount(System.Int32)">
          <source>To calculate the maximum array size, you call the <ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetMaxByteCount%2A&gt;</ph> method.</source>
          <target state="translated">若要計算的最大陣列大小，請呼叫<ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetMaxByteCount%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetMaxByteCount(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetByteCount%2A&gt;</ph> method generally allocates less memory, while the <ph id="ph2">&lt;xref:System.Text.UTF8Encoding.GetMaxByteCount%2A&gt;</ph> method generally executes faster.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetByteCount%2A&gt;</ph>方法通常會配置較少的記憶體，而<ph id="ph2">&lt;xref:System.Text.UTF8Encoding.GetMaxByteCount%2A&gt;</ph>方法通常執行速度更快。</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetMaxByteCount(System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetMaxByteCount%2A&gt;</ph> is a worst-case number, including the worst case for the currently selected <ph id="ph2">&lt;xref:System.Text.EncoderFallback&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetMaxByteCount%2A&gt;</ph> 最差狀況的字，包括最壞的情況下，針對目前所選<ph id="ph2">&lt;xref:System.Text.EncoderFallback&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetMaxByteCount(System.Int32)">
          <source>If a fallback is chosen with a potentially large string, <ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetMaxByteCount%2A&gt;</ph> can return large values.</source>
          <target state="translated">如果是可能的大型字串、 選擇後援<ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetMaxByteCount%2A&gt;</ph>可以傳回較大的值。</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetMaxByteCount(System.Int32)">
          <source>In most cases, this method returns reasonable numbers for small strings.</source>
          <target state="translated">在大部分情況下，這個方法會傳回對小型字串合理的數字。</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetMaxByteCount(System.Int32)">
          <source>For large strings, you might have to choose between using very large buffers and catching errors in the rare case that a more reasonable buffer is exceeded.</source>
          <target state="translated">大型字串，您可能選擇使用極大的緩衝區，在極少數的案例更合理地緩衝區超出攔截錯誤。</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetMaxByteCount(System.Int32)">
          <source>You might also want to consider a different approach using <ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetByteCount%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">您也可以考慮不同的方法，使用<ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetByteCount%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetMaxByteCount(System.Int32)">
          <source>For example, text in English and many other languages often needs only one UTF-8 byte to represent a character, but the number returned by <ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetMaxByteCount%2A&gt;</ph> has to allow for the possibility that the string to be converted will consist entirely of characters that each require four bytes.</source>
          <target state="translated">例如，英文和許多其他語言中的文字通常必須只有一個 utf-8 位元組來表示字元，但所傳回的數目<ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetMaxByteCount%2A&gt;</ph>已允許，要轉換的字串將會完全字元組成，每個的可能性需要四個位元組。</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetMaxByteCount(System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetMaxByteCount%2A&gt;</ph> has no relation to <ph id="ph2">&lt;xref:System.Text.UTF8Encoding.GetChars%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetMaxByteCount%2A&gt;</ph> 有沒有關係<ph id="ph2">&lt;xref:System.Text.UTF8Encoding.GetChars%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetMaxByteCount(System.Int32)">
          <source>If your application needs a similar function to use with <ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetChars%2A&gt;</ph>, it should use <ph id="ph2">&lt;xref:System.Text.UTF8Encoding.GetMaxCharCount%2A&gt;</ph>.</source>
          <target state="translated">如果您的應用程式需要類似的函數，以搭配<ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetChars%2A&gt;</ph>，應該使用<ph id="ph2">&lt;xref:System.Text.UTF8Encoding.GetMaxCharCount%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetMaxByteCount(System.Int32)">
          <source><ph id="ph1">`GetMaxByteCount(N)`</ph> is not necessarily the same value as <ph id="ph2">`N* GetMaxByteCount(1)`</ph>.</source>
          <target state="translated"><ph id="ph1">`GetMaxByteCount(N)`</ph> 不一定是相同的值<ph id="ph2">`N* GetMaxByteCount(1)`</ph>。</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetMaxByteCount(System.Int32)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetMaxByteCount%2A&gt;</ph> method to return the maximum number of bytes required to encode a specified number of characters.</source>
          <target state="translated">下列範例會使用<ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetMaxByteCount%2A&gt;</ph>方法傳回的編碼指定的字元數所需的位元組數目上限。</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetMaxByteCount(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="charCount" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="charCount" /&gt;</ph> 小於零。</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetMaxByteCount(System.Int32)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetMaxByteCount(System.Int32)">
          <source>The resulting number of bytes is greater than the maximum number that can be returned as an integer.</source>
          <target state="translated">所產生的位元組數目大於可用整數傳回的數目上限。</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetMaxByteCount(System.Int32)">
          <source>A fallback occurred (see <bpt id="p1">[</bpt>Character Encoding in the .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> for complete explanation)</source>
          <target state="translated">發生後援 (如需完整說明，請參閱 <bpt id="p1">[</bpt>.NET Framework 中的字元編碼<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept>)</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetMaxByteCount(System.Int32)">
          <source>-and-</source>
          <target state="translated">-和-</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetMaxByteCount(System.Int32)">
          <source><ph id="ph1">&lt;see cref="P:System.Text.Encoding.EncoderFallback" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Text.Encoding.EncoderFallback" /&gt;</ph> 設定為 <ph id="ph2">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetMaxCharCount(System.Int32)">
          <source>The number of bytes to decode.</source>
          <target state="translated">要解碼的位元組數。</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetMaxCharCount(System.Int32)">
          <source>Calculates the maximum number of characters produced by decoding the specified number of bytes.</source>
          <target state="translated">計算將指定數目的位元組解碼所產生的最大字元數。</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetMaxCharCount(System.Int32)">
          <source>The maximum number of characters produced by decoding the specified number of bytes.</source>
          <target state="translated">解碼指定位元組數所產生的最大字元數。</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetMaxCharCount(System.Int32)">
          <source>To calculate the exact array size required by <ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetChars%2A&gt;</ph> to store the resulting characters, you call the <ph id="ph2">&lt;xref:System.Text.UTF8Encoding.GetCharCount%2A&gt;</ph> method.</source>
          <target state="translated">若要計算所需的精確陣列大小<ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetChars%2A&gt;</ph>來儲存產生的字元，您呼叫<ph id="ph2">&lt;xref:System.Text.UTF8Encoding.GetCharCount%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetMaxCharCount(System.Int32)">
          <source>To calculate the maximum array size, you call the <ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetMaxCharCount%2A&gt;</ph> method.</source>
          <target state="translated">若要計算的最大陣列大小，請呼叫<ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetMaxCharCount%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetMaxCharCount(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetCharCount%2A&gt;</ph> method generally allocates less memory, while the <ph id="ph2">&lt;xref:System.Text.UTF8Encoding.GetMaxCharCount%2A&gt;</ph> method generally executes faster.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetCharCount%2A&gt;</ph>方法通常會配置較少的記憶體，而<ph id="ph2">&lt;xref:System.Text.UTF8Encoding.GetMaxCharCount%2A&gt;</ph>方法通常執行速度更快。</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetMaxCharCount(System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetMaxCharCount%2A&gt;</ph> is a worst-case number, including the worst case for the currently selected <ph id="ph2">&lt;xref:System.Text.DecoderFallback&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetMaxCharCount%2A&gt;</ph> 最差狀況的字，包括最壞的情況下，針對目前所選<ph id="ph2">&lt;xref:System.Text.DecoderFallback&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetMaxCharCount(System.Int32)">
          <source>If a fallback is chosen with a potentially large string, <ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetMaxCharCount%2A&gt;</ph> can return large values.</source>
          <target state="translated">如果是可能的大型字串、 選擇後援<ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetMaxCharCount%2A&gt;</ph>可以傳回較大的值。</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetMaxCharCount(System.Int32)">
          <source>In most cases, this method returns reasonable numbers for small strings.</source>
          <target state="translated">在大部分情況下，這個方法會傳回對小型字串合理的數字。</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetMaxCharCount(System.Int32)">
          <source>For large strings, you might have to choose between using very large buffers and catching errors in the rare case that a more reasonable buffer is exceeded.</source>
          <target state="translated">大型字串，您可能選擇使用極大的緩衝區，在極少數的案例更合理地緩衝區超出攔截錯誤。</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetMaxCharCount(System.Int32)">
          <source>You might also want to consider a different approach using <ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetCharCount%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">您也可以考慮不同的方法，使用<ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetCharCount%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetMaxCharCount(System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetMaxCharCount%2A&gt;</ph> has no relation to <ph id="ph2">&lt;xref:System.Text.UTF8Encoding.GetBytes%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetMaxCharCount%2A&gt;</ph> 有沒有關係<ph id="ph2">&lt;xref:System.Text.UTF8Encoding.GetBytes%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetMaxCharCount(System.Int32)">
          <source>If your application needs a similar function to use with <ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetBytes%2A&gt;</ph>, it should use <ph id="ph2">&lt;xref:System.Text.UTF8Encoding.GetMaxByteCount%2A&gt;</ph>.</source>
          <target state="translated">如果您的應用程式需要類似的函數，以搭配<ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetBytes%2A&gt;</ph>，應該使用<ph id="ph2">&lt;xref:System.Text.UTF8Encoding.GetMaxByteCount%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetMaxCharCount(System.Int32)">
          <source><ph id="ph1">`GetMaxCharCount(N)`</ph> is not necessarily the same value as <ph id="ph2">`N* GetMaxCharCount(1)`</ph>.</source>
          <target state="translated"><ph id="ph1">`GetMaxCharCount(N)`</ph> 不一定是相同的值<ph id="ph2">`N* GetMaxCharCount(1)`</ph>。</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetMaxCharCount(System.Int32)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetMaxCharCount%2A&gt;</ph> method to return the maximum number of characters produced by decoding a specified number of bytes.</source>
          <target state="translated">下列範例會使用<ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetMaxCharCount%2A&gt;</ph>解碼指定的位元組數所產生的方法來傳回最大字元數。</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetMaxCharCount(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="byteCount" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="byteCount" /&gt;</ph> 小於零。</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetMaxCharCount(System.Int32)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetMaxCharCount(System.Int32)">
          <source>The resulting number of bytes is greater than the maximum number that can be returned as an integer.</source>
          <target state="translated">所產生的位元組數目大於可用整數傳回的數目上限。</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetMaxCharCount(System.Int32)">
          <source>A fallback occurred (see <bpt id="p1">[</bpt>Character Encoding in the .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> for complete explanation)</source>
          <target state="translated">發生後援 (如需完整說明，請參閱 <bpt id="p1">[</bpt>.NET Framework 中的字元編碼<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept>)</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetMaxCharCount(System.Int32)">
          <source>-and-</source>
          <target state="translated">-和-</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetMaxCharCount(System.Int32)">
          <source><ph id="ph1">&lt;see cref="P:System.Text.Encoding.DecoderFallback" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="T:System.Text.DecoderExceptionFallback" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Text.Encoding.DecoderFallback" /&gt;</ph> 設定為 <ph id="ph2">&lt;see cref="T:System.Text.DecoderExceptionFallback" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetPreamble">
          <source>Returns a Unicode byte order mark encoded in UTF-8 format, if the <ph id="ph1">&lt;see cref="T:System.Text.UTF8Encoding" /&gt;</ph> encoding object is configured to supply one.</source>
          <target state="translated">如果設定 <ph id="ph1">&lt;see cref="T:System.Text.UTF8Encoding" /&gt;</ph> 編碼物件提供編碼方式，則會傳回以 UTF-8 格式編碼的 Unicode 位元組順序標記。</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetPreamble">
          <source>A byte array containing the Unicode byte order mark, if the <ph id="ph1">&lt;see cref="T:System.Text.UTF8Encoding" /&gt;</ph> encoding object is configured to supply one.</source>
          <target state="translated">如果設定 <ph id="ph1">&lt;see cref="T:System.Text.UTF8Encoding" /&gt;</ph> 編碼物件提供編碼方式，則為包含 Unicode 位元組順序標記的位元組陣列。</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetPreamble">
          <source>Otherwise, this method returns a zero-length byte array.</source>
          <target state="translated">否則，這個方法會傳回長度為零的位元組陣列。</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetPreamble">
          <source>The <ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph> object can provide a preamble, which is a byte array that can be prefixed to the sequence of bytes that result from the encoding process.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph>物件可以提供前序編碼，也就是可以前置位元組編碼程序會產生一連串的位元組陣列。</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetPreamble">
          <source>Prefacing a sequence of encoded bytes with a byte order mark (code point U+FEFF) helps the decoder determine the byte order and the transformation format, or UTF.</source>
          <target state="translated">引用編碼的位元組序列的位元組順序標示 （字碼指標 U + FEFF） 有助於判斷位元組順序的轉換格式或 UTF-8 解碼器。</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetPreamble">
          <source>The Unicode byte order mark (BOM) is serialized as 0xEF 0xBB 0xBF.</source>
          <target state="translated">Unicode 位元組順序標記 (BOM) 會序列化為 0xEF 0xBB 0xBF。</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetPreamble">
          <source>Note that the Unicode Standard neither requires nor recommends the use of a BOM for UTF-8 encoded streams.</source>
          <target state="translated">請注意 Unicode 標準都不需要也不建議使用 BOM utf-8 編碼資料流。</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetPreamble">
          <source>You can instantiate a <ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph> object whose <ph id="ph2">&lt;xref:System.Text.UTF8Encoding.GetPreamble%2A&gt;</ph> method returns a valid BOM in the following ways:</source>
          <target state="translated">您可以具現化<ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph>物件，其<ph id="ph2">&lt;xref:System.Text.UTF8Encoding.GetPreamble%2A&gt;</ph>方法會傳回有效的 BOM 以下列方式：</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetPreamble">
          <source>By retrieving the <ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph> object returned by the <ph id="ph2">&lt;xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">藉由擷取<ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph>所傳回物件<ph id="ph2">&lt;xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetPreamble">
          <source>By calling a <ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph> constructor with a <ph id="ph2">`encoderShouldEmitUTF8Identifier`</ph> parameter and setting its value set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">藉由呼叫<ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph>具有建構函式<ph id="ph2">`encoderShouldEmitUTF8Identifier`</ph>參數並將設定其值設為<ph id="ph3">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetPreamble">
          <source>All other <ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph> objects are configured to return an empty array rather than a valid BOM.</source>
          <target state="translated">所有其他<ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph>物件設定為傳回空陣列，而不是有效的 BOM。</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetPreamble">
          <source>The BOM provide nearly certain identification of an encoding for files that otherwise have lost a reference to their encoding, such as untagged or improperly tagged web data or random text files stored when a business did not have international concerns.</source>
          <target state="translated">BOM 提供幾乎否則失去其編碼方式的參考檔案的編碼方式的特定識別，例如未標記或標記不當 web 資料或儲存時商務的隨機文字檔案沒有國際考量。</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetPreamble">
          <source>Often user problems might be avoided if data is consistently and properly tagged.</source>
          <target state="translated">如果資料一致的方式，以及已正確加上標記，就能避免通常使用者的問題。</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetPreamble">
          <source>For standards that provide an encoding type, a BOM is somewhat redundant.</source>
          <target state="translated">提供編碼類型的標準，BOM 是多餘的。</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetPreamble">
          <source>However, it can be used to help a server send the correct encoding header.</source>
          <target state="translated">不過，它可以用來幫助伺服器傳送正確的編碼方式標頭。</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetPreamble">
          <source>Alternatively, it can be used as a fallback in case the encoding is otherwise lost.</source>
          <target state="translated">或者，它可用來當做後援以防編碼遺失時。</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetPreamble">
          <source>There are some disadvantages to using a BOM.</source>
          <target state="translated">有一些缺點，以包含 BOM。</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetPreamble">
          <source>For example, knowing how to limit the database fields that use a BOM can be difficult.</source>
          <target state="translated">例如，了解如何限制使用 BOM 的資料庫欄位很難。</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetPreamble">
          <source>Concatenation of files can be a problem also, for example, when files are merged in such a way that an unnecessary character can end up in the middle of data.</source>
          <target state="translated">串連的檔案可以也會是問題，比方說，例如合併檔案時不必要的字元可能會結束中間資料的方式。</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetPreamble">
          <source>In spite of the few disadvantages, however, the use of a BOM is highly recommended.</source>
          <target state="translated">儘管有一些缺點，不過，BOM 使用建議。</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetPreamble">
          <source>For more information on byte order and the byte order mark, see The Unicode Standard at the <bpt id="p1">[</bpt>Unicode home page<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=37123)</ept>.</source>
          <target state="translated">如需有關位元組順序和位元組順序標記的詳細資訊，請參閱 Unicode 標準<bpt id="p1">[</bpt>Unicode 首頁<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=37123)</ept>。</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetPreamble">
          <source>To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix the beginning of a stream of encoded bytes with a preamble.</source>
          <target state="translated">若要確保儲存為檔案或資料流時編碼的位元組會正確解碼，您可以前置詞與前序編碼的位元組資料流的開頭。</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetPreamble">
          <source>Note that the <ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetBytes%2A&gt;</ph> method does not prepend a BOM to a sequence of encoded bytes; supplying a BOM at the beginning of an appropriate byte stream is the developer's responsibility.</source>
          <target state="translated">請注意，<ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetBytes%2A&gt;</ph>方法不會不在前面加上 BOM 編碼的位元組序列; 開發人員必須負責提供適當的位元組資料流的開頭 BOM。</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetPreamble">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetPreamble%2A&gt;</ph> method to return the Unicode byte order mark encoded in UTF-8 format.</source>
          <target state="translated">下列範例會使用<ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetPreamble%2A&gt;</ph>方法以傳回 Unicode 位元組順序標記以 utf-8 格式編碼。</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetPreamble">
          <source>Notice that the default constructor for <ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph> does not provide a preamble.</source>
          <target state="translated">請注意的預設建構函式<ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph>不會提供前序編碼。</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetPreamble">
          <source>The following example instantiates two <ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph> objects, the first by calling the parameterless <ph id="ph2">&lt;xref:System.Text.UTF8Encoding.%23ctor&gt;</ph> constructor, which does not provide a BOM, and the second by calling the <ph id="ph3">&lt;xref:System.Text.UTF8Encoding.%23ctor%28System.Boolean%29&gt;</ph> constructor with its <ph id="ph4">`encoderShouldEmitUTF8Identifier`</ph> argument set to <ph id="ph5">`true`</ph>.</source>
          <target state="translated">下列範例會呈現兩個<ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph>物件、 呼叫無參數的第一個<ph id="ph2">&lt;xref:System.Text.UTF8Encoding.%23ctor&gt;</ph>建構函式，不會提供 BOM，且第二個呼叫<ph id="ph3">&lt;xref:System.Text.UTF8Encoding.%23ctor%28System.Boolean%29&gt;</ph>建構函式與它<ph id="ph4">`encoderShouldEmitUTF8Identifier`</ph>引數設定為<ph id="ph5">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetPreamble">
          <source>It then calls the <ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetPreamble%2A&gt;</ph> method to write the BOM to a file before writing a UF8-encoded string.</source>
          <target state="translated">然後它會呼叫<ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetPreamble%2A&gt;</ph>方法，將 BOM 寫入之前 UF8 編碼的字串寫入檔案。</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetPreamble">
          <source>As the console output from the example shows, the file that saves the bytes from the second encoder has three more bytes than the first.</source>
          <target state="translated">如主控台輸出範例所示，從第二個編碼器會將位元組儲存的檔案有三個的多個位元組，比第一個。</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetPreamble">
          <source>You can also compare the files by using the <ph id="ph1">`fc`</ph> command in a console window, or you can inspect the files in a text editor that includes a Hex View mode.</source>
          <target state="translated">您也可以藉由比較檔案<ph id="ph1">`fc`</ph>命令主控台視窗中，或者您可以檢查包含十六進位檢視模式的文字編輯器中的檔案。</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetPreamble">
          <source>Note that when the file is opened in an editor that supports UTF-8, the BOM is not displayed.</source>
          <target state="translated">請注意，當支援 utf-8 的編輯器中開啟檔案時，BOM 會不會顯示。</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>The byte array containing the sequence of bytes to decode.</source>
          <target state="translated">包含要解碼之位元組序列的位元組陣列。</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>The index of the first byte to decode.</source>
          <target state="translated">要解碼的第一個位元組索引。</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes to decode.</source>
          <target state="translated">要解碼的位元組數。</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>Decodes a range of bytes from a byte array into a string.</source>
          <target state="translated">將位元組陣列中的某一段位元組範圍解碼成字串。</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the results of decoding the specified sequence of bytes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>，包含將指定之位元組序列解碼的結果。</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>With error detection, an invalid sequence causes this method to throw an <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph> exception.</source>
          <target state="translated">錯誤偵測無效的序列造成此方法會擲回<ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph>例外狀況。</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>Without error detection, invalid sequences are ignored, and no exception is thrown.</source>
          <target state="translated">錯誤偵測，會忽略無效的序列，而不擲回任何例外狀況。</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>If the range of bytes to be decoded includes the byte order mark (BOM) and the byte array was returned by a method of a non-BOM aware type, the character U+FFFE is included in the character array returned by this method.</source>
          <target state="translated">如果要解碼的位元組範圍包含位元組順序標示 (BOM)，而且非 BOM 感知型別之方法所傳回的位元組陣列，這個方法所傳回的字元陣列中包含字元 U + FFFE。</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>You can remove it by calling the <ph id="ph1">&lt;xref:System.String.TrimStart%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">您可以移除它，藉由呼叫<ph id="ph1">&lt;xref:System.String.TrimStart%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>Data to be converted, such as data read from a stream, might be available only in sequential blocks.</source>
          <target state="translated">要轉換，例如，從資料流讀取資料的資料可能只適用於連續區塊。</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, use the <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> or the <ph id="ph2">&lt;xref:System.Text.Encoder&gt;</ph> provided by the <ph id="ph3">&lt;xref:System.Text.UTF8Encoding.GetDecoder%2A&gt;</ph> method or the <ph id="ph4">&lt;xref:System.Text.UTF8Encoding.GetEncoder%2A&gt;</ph> method, respectively.</source>
          <target state="translated">在這種情況下，或如果資料量很大，它必須分割成較小的區塊，請使用<ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph>或<ph id="ph2">&lt;xref:System.Text.Encoder&gt;</ph>提供<ph id="ph3">&lt;xref:System.Text.UTF8Encoding.GetDecoder%2A&gt;</ph>方法或<ph id="ph4">&lt;xref:System.Text.UTF8Encoding.GetEncoder%2A&gt;</ph>方法，分別。</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>The following example initializes an array by calling the <ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetByteCount%2A&gt;</ph> method to determine exactly how many bytes are required for an encoded string and then adding the size of the byte order mark (BOM).</source>
          <target state="translated">下列範例會藉由呼叫初始化陣列<ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetByteCount%2A&gt;</ph>方法，以判斷完全多少個位元組所需編碼的字串，然後再將位元組順序標示 (BOM) 的大小。</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>The example then calls the <ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetPreamble%2A&gt;</ph> method to store the BOM to the array before calling the <ph id="ph2">&lt;xref:System.Text.UTF8Encoding.GetBytes%2A&gt;</ph> method to store the encoded bytes to the array.</source>
          <target state="translated">此範例會接著呼叫<ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetPreamble%2A&gt;</ph>方法，可儲存到陣列之前先呼叫 BOM<ph id="ph2">&lt;xref:System.Text.UTF8Encoding.GetBytes%2A&gt;</ph>儲存編碼的位元組陣列的方法。</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>The example then calls the <ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetString%2A&gt;</ph> method to decode the string.</source>
          <target state="translated">此範例會接著呼叫<ph id="ph1">&lt;xref:System.Text.UTF8Encoding.GetString%2A&gt;</ph>方法來解碼的字串。</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>Note that in this case the decoded string differs from the original string, since it begins with a 16-bit byte order mark U+FFFD.</source>
          <target state="translated">請注意，在此情況下已解碼的字串不同於原始的字串，因為它的開頭 U + FFFD 的 16 位元的位元組順序標記。</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>This means that the two strings will compare as unequal, and that if the string is output, the BOM will be displayed as the replacement character "?".</source>
          <target state="translated">這表示兩個字串將會比較結果不相等，而且，如果字串為輸出，BOM 會顯示為 「 取代字元"？"。</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF8Encoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>To remove the BOM at the beginning of the string, you can call the <ph id="ph1">&lt;xref:System.String.TrimStart%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">若要移除的字串開頭 BOM，您可以呼叫<ph id="ph1">&lt;xref:System.String.TrimStart%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="count" /&gt;</ph> 小於零。</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> and <ph id="ph2">&lt;paramref name="count" /&gt;</ph> do not denote a valid range in <ph id="ph3">&lt;paramref name="bytes" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 和 <ph id="ph2">&lt;paramref name="count" /&gt;</ph> 不代表 <ph id="ph3">&lt;paramref name="bytes" /&gt;</ph> 中有效的範圍。</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>Error detection is enabled, and <ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> contains an invalid sequence of bytes.</source>
          <target state="translated">已啟用錯誤偵測，而且 <ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> 包含無效的位元組序列。</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>A fallback occurred (see <bpt id="p1">[</bpt>Character Encoding in the .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> for complete explanation)</source>
          <target state="translated">發生後援 (如需完整說明，請參閱 <bpt id="p1">[</bpt>.NET Framework 中的字元編碼<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept>)</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>-and-</source>
          <target state="translated">-和-</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" uid="M:System.Text.UTF8Encoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;see cref="P:System.Text.Encoding.DecoderFallback" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="T:System.Text.DecoderExceptionFallback" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Text.Encoding.DecoderFallback" /&gt;</ph> 設定為 <ph id="ph2">&lt;see cref="T:System.Text.DecoderExceptionFallback" /&gt;</ph>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>