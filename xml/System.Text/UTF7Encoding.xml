<Type Name="UTF7Encoding" FullName="System.Text.UTF7Encoding">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3577903944716f5c8fa85f9997538ae938e55175" /><Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="11/27/2018" /><Meta Name="ms.locfileid" Value="52381557" /></Metadata><TypeSignature Language="C#" Value="public class UTF7Encoding : System.Text.Encoding" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit UTF7Encoding extends System.Text.Encoding" />
  <TypeSignature Language="DocId" Value="T:System.Text.UTF7Encoding" />
  <TypeSignature Language="VB.NET" Value="Public Class UTF7Encoding&#xA;Inherits Encoding" />
  <TypeSignature Language="C++ CLI" Value="public ref class UTF7Encoding : System::Text::Encoding" />
  <TypeSignature Language="F#" Value="type UTF7Encoding = class&#xA;    inherit Encoding" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Text.Encoding</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="413a8-101">代表 Unicode 字元的 UTF-7 編碼方式。</span><span class="sxs-lookup"><span data-stu-id="413a8-101">Represents a UTF-7 encoding of Unicode characters.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="413a8-102">編碼是將一組 Unicode 字元轉換成位元組序列的處理程序。</span><span class="sxs-lookup"><span data-stu-id="413a8-102">Encoding is the process of transforming a set of Unicode characters into a sequence of bytes.</span></span> <span data-ttu-id="413a8-103">解碼則是將編碼的位元組序列轉換成一組 Unicode 字元的程序。</span><span class="sxs-lookup"><span data-stu-id="413a8-103">Decoding is the process of transforming a sequence of encoded bytes into a set of Unicode characters.</span></span>  
  
 <span data-ttu-id="413a8-104">Utf-7 編碼表示 Unicode 字元視為 7 位元的 ASCII 字元的序列。</span><span class="sxs-lookup"><span data-stu-id="413a8-104">The UTF-7 encoding represents Unicode characters as sequences of 7-bit ASCII characters.</span></span> <span data-ttu-id="413a8-105">這種編碼方式時，支援特定它是必要的通訊協定，多半是電子郵件或新聞群組通訊協定。</span><span class="sxs-lookup"><span data-stu-id="413a8-105">This encoding supports certain protocols for which it is required, most often email or newsgroup protocols.</span></span> <span data-ttu-id="413a8-106">UTF-7、utf 不特別安全或穩固，現今大部分的系統允許的 8 位元編碼方式，因為通常應 utf-7 比 utf-8。</span><span class="sxs-lookup"><span data-stu-id="413a8-106">Since UTF-7 is not particularly secure or robust, and most modern systems allow 8-bit encodings, UTF-8 should normally be preferred to UTF-7.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="413a8-107"><xref:System.Text.UTF7Encoding> 不會提供錯誤偵測。</span><span class="sxs-lookup"><span data-stu-id="413a8-107"><xref:System.Text.UTF7Encoding> does not provide error detection.</span></span> <span data-ttu-id="413a8-108">基於安全性理由，應用程式應該使用<xref:System.Text.UTF8Encoding>， <xref:System.Text.UnicodeEncoding>，或<xref:System.Text.UTF32Encoding>並啟用錯誤偵測。</span><span class="sxs-lookup"><span data-stu-id="413a8-108">For security reasons, the application should use <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, or <xref:System.Text.UTF32Encoding> and enable error detection.</span></span>  
  
 <span data-ttu-id="413a8-109">如需有關 UTFs 和所支援其他編碼<xref:System.Text>，請參閱 < [.NET Framework 中的字元編碼](~/docs/standard/base-types/character-encoding.md)。</span><span class="sxs-lookup"><span data-stu-id="413a8-109">For more information about the UTFs and other encodings supported by <xref:System.Text>, see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md).</span></span>  
  
 <span data-ttu-id="413a8-110"><xref:System.Text.UTF7Encoding.GetByteCount%2A>方法會判斷多少個位元組會導致一組 Unicode 字元的編碼方式和<xref:System.Text.UTF7Encoding.GetBytes%2A>方法會執行實際的編碼方式。</span><span class="sxs-lookup"><span data-stu-id="413a8-110">The <xref:System.Text.UTF7Encoding.GetByteCount%2A> method determines how many bytes result in encoding a set of Unicode characters, and the <xref:System.Text.UTF7Encoding.GetBytes%2A> method performs the actual encoding.</span></span>  
  
 <span data-ttu-id="413a8-111">同樣地，<xref:System.Text.UTF7Encoding.GetCharCount%2A>方法會判斷字元數會導致解碼的位元組序列，而<xref:System.Text.UTF7Encoding.GetChars%2A>和<xref:System.Text.UTF7Encoding.GetString%2A>方法會執行實際的解碼。</span><span class="sxs-lookup"><span data-stu-id="413a8-111">Likewise, the <xref:System.Text.UTF7Encoding.GetCharCount%2A> method determines how many characters result in decoding a sequence of bytes, and the <xref:System.Text.UTF7Encoding.GetChars%2A> and <xref:System.Text.UTF7Encoding.GetString%2A> methods perform the actual decoding.</span></span>  
  
 <span data-ttu-id="413a8-112"><xref:System.Text.UTF7Encoding> 對應至 Windows 字碼頁 65000。</span><span class="sxs-lookup"><span data-stu-id="413a8-112"><xref:System.Text.UTF7Encoding> corresponds to the Windows code page 65000.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="413a8-113">Utf-7 編碼物件的狀態時，不會保留該物件會序列化並使用不同的.NET Framework 版本。</span><span class="sxs-lookup"><span data-stu-id="413a8-113">The state of a UTF-7 encoded object is not preserved if the object is serialized and deserialized using different .NET Framework versions.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="413a8-114">下列程式碼範例示範如何使用<xref:System.Text.UTF7Encoding>編碼的 Unicode 字元字串，並將它們儲存在位元組陣列。</span><span class="sxs-lookup"><span data-stu-id="413a8-114">The following code example demonstrates how to use a <xref:System.Text.UTF7Encoding> to encode a string of Unicode characters and store them in a byte array.</span></span> <span data-ttu-id="413a8-115">請注意，當回字串解碼的位元組陣列，不會遺失任何資料。</span><span class="sxs-lookup"><span data-stu-id="413a8-115">Notice that when the byte array is decoded back to a string, no data is lost.</span></span>  
  
 [!code-cpp[System.Text.UTF7Encoding Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF7Encoding Example/CPP/snippet.cpp#1)]
 [!code-csharp[System.Text.UTF7Encoding Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF7Encoding Example/CS/snippet.cs#1)]
 [!code-vb[System.Text.UTF7Encoding Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF7Encoding Example/VB/snippet.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.Decoder" />
    <altmember cref="T:System.Text.Encoder" />
    <related type="Article" href="~/docs/standard/base-types/character-encoding.md"><span data-ttu-id="413a8-116">了解編碼</span><span class="sxs-lookup"><span data-stu-id="413a8-116">Understanding Encodings</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="413a8-117">初始化 <see cref="T:System.Text.UTF7Encoding" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="413a8-117">Initializes a new instance of the <see cref="T:System.Text.UTF7Encoding" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UTF7Encoding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF7Encoding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UTF7Encoding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="413a8-118">初始化 <see cref="T:System.Text.UTF7Encoding" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="413a8-118">Initializes a new instance of the <see cref="T:System.Text.UTF7Encoding" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="413a8-119">這個建構函式會建立不允許使用選擇性字元的執行個體。</span><span class="sxs-lookup"><span data-stu-id="413a8-119">This constructor creates an instance that does not allow optional characters.</span></span> <span data-ttu-id="413a8-120">呼叫<xref:System.Text.UTF7Encoding.%23ctor%2A>建構函式相當於呼叫<xref:System.Text.UTF7Encoding.%23ctor%28System.Boolean%29?displayProperty=nameWithType>建構函式`allowOptionals`參數，並指定`false`該參數。</span><span class="sxs-lookup"><span data-stu-id="413a8-120">Calling the <xref:System.Text.UTF7Encoding.%23ctor%2A> constructor is equivalent to calling the <xref:System.Text.UTF7Encoding.%23ctor%28System.Boolean%29?displayProperty=nameWithType> constructor that takes an `allowOptionals` parameter and specifying `false` for that parameter.</span></span>  
  
 <span data-ttu-id="413a8-121">如果執行個體允許使用選擇性字元，以對應的選擇性字元，而不是修改過的 base 64 字元編碼的 Unicode 字碼指標。</span><span class="sxs-lookup"><span data-stu-id="413a8-121">If an instance allows optional characters, Unicode code points are encoded with a corresponding optional character instead of a modified base 64 character.</span></span> <span data-ttu-id="413a8-122">選擇性的字元是驚嘆號 ("！")，反斜線 ("\\")，垂直線 ("&#124;")，雙引號 (""")，數字符號 （"#"）、 錢幣符號 （$）、 百分比符號 （"%"）、 連字號 ("&")、 星號 ("\*")，分號 （";"），向左角括號 ("\<」)，右角括號 (">")，左大括號 ("{")，右大括弧 ("}")，左側的大括號 ("[")，右方括號 ("]")，等號 （"="）、 at 符號 ("@")，抑揚音符 ("^")、 底線 ("_")，以及抑音符號腔調字 ("'")。</span><span class="sxs-lookup"><span data-stu-id="413a8-122">The optional characters are exclamation point ("!"), backward slash ("\\"), vertical line ("&#124;"), double quote ("""), number sign ("#"), dollar sign ("$"), percent sign ("%"), ampersand ("&"), asterisk ("\*"), semicolon (";"), left angle bracket ("\<"), right angle bracket (">"), left curly bracket ("{"), right curly bracket ("}"), left square bracket ("["), right square bracket ("]"), equal sign ("="), at sign ("@"), circumflex accent ("^"), underscore ("_"), and grave accent ("\`").</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="413a8-123"><xref:System.Text.UTF7Encoding> 不會提供錯誤偵測。</span><span class="sxs-lookup"><span data-stu-id="413a8-123"><xref:System.Text.UTF7Encoding> does not provide error detection.</span></span> <span data-ttu-id="413a8-124">基於安全性理由，您的應用程式，建議您使用<xref:System.Text.UTF8Encoding>， <xref:System.Text.UnicodeEncoding>，或<xref:System.Text.UTF32Encoding>並啟用錯誤偵測。</span><span class="sxs-lookup"><span data-stu-id="413a8-124">For security reasons, your applications are recommended to use <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, or <xref:System.Text.UTF32Encoding> and enable error detection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="413a8-125">下列程式碼範例示範如何建立新<xref:System.Text.UTF7Encoding>執行個體，並顯示名稱的編碼方式。</span><span class="sxs-lookup"><span data-stu-id="413a8-125">The following code example demonstrates how to create a new <xref:System.Text.UTF7Encoding> instance and display the name of the encoding.</span></span>  
  
 [!code-cpp[System.Text.UTF7Encoding.ctor1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF7Encoding.ctor1 Example/CPP/ctor.cpp#1)]
 [!code-csharp[System.Text.UTF7Encoding.ctor1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF7Encoding.ctor1 Example/CS/ctor.cs#1)]
 [!code-vb[System.Text.UTF7Encoding.ctor1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF7Encoding.ctor1 Example/VB/ctor.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UTF7Encoding (bool allowOptionals);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool allowOptionals) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF7Encoding.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (allowOptionals As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UTF7Encoding(bool allowOptionals);" />
      <MemberSignature Language="F#" Value="new System.Text.UTF7Encoding : bool -&gt; System.Text.UTF7Encoding" Usage="new System.Text.UTF7Encoding allowOptionals" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="allowOptionals" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="allowOptionals"><span data-ttu-id="413a8-126"><see langword="true" /> 表示允許指定選擇性字元，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="413a8-126"><see langword="true" /> to specify that optional characters are allowed; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="413a8-127">初始化 <see cref="T:System.Text.UTF7Encoding" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="413a8-127">Initializes a new instance of the <see cref="T:System.Text.UTF7Encoding" /> class.</span></span> <span data-ttu-id="413a8-128">參數可指定是否允許使用選擇性字元。</span><span class="sxs-lookup"><span data-stu-id="413a8-128">A parameter specifies whether to allow optional characters.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="413a8-129">如果執行個體允許使用選擇性字元，以對應的選擇性字元，而不是修改過的 base 64 字元編碼的 Unicode 字碼指標。</span><span class="sxs-lookup"><span data-stu-id="413a8-129">If an instance allows optional characters, Unicode code points are encoded with a corresponding optional character instead of a modified base 64 character.</span></span> <span data-ttu-id="413a8-130">選擇性的字元是驚嘆號 ("！")，反斜線 ("\\")，垂直線 ("&#124;")，雙引號 (""")，數字符號 （"#"）、 錢幣符號 （$）、 百分比符號 （"%"）、 連字號 ("&")、 星號 ("\*")，分號 （";"），向左角括號 ("\<」)，右角括號 (">")，左大括號 ("{")，右大括弧 ("}")，左側的大括號 ("[")，右方括號 ("]")，等號 （"="）、 at 符號 ("@")，抑揚音符 ("^")、 底線 ("_")，以及抑音符號腔調字 ("'")。</span><span class="sxs-lookup"><span data-stu-id="413a8-130">The optional characters are exclamation point ("!"), backward slash ("\\"), vertical line ("&#124;"), double quote ("""), number sign ("#"), dollar sign ("$"), percent sign ("%"), ampersand ("&"), asterisk ("\*"), semicolon (";"), left angle bracket ("\<"), right angle bracket (">"), left curly bracket ("{"), right curly bracket ("}"), left square bracket ("["), right square bracket ("]"), equal sign ("="), at sign ("@"), circumflex accent ("^"), underscore ("_"), and grave accent ("\`").</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="413a8-131"><xref:System.Text.UTF7Encoding> 不會提供錯誤偵測。</span><span class="sxs-lookup"><span data-stu-id="413a8-131"><xref:System.Text.UTF7Encoding> does not provide error detection.</span></span> <span data-ttu-id="413a8-132">基於安全性理由，您的應用程式，建議您使用<xref:System.Text.UTF8Encoding>， <xref:System.Text.UnicodeEncoding>，或<xref:System.Text.UTF32Encoding>並啟用錯誤偵測。</span><span class="sxs-lookup"><span data-stu-id="413a8-132">For security reasons, your applications are recommended to use <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, or <xref:System.Text.UTF32Encoding> and enable error detection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="413a8-133">下列程式碼範例示範如何建立新<xref:System.Text.UTF7Encoding>允許使用選擇性字元的執行個體。</span><span class="sxs-lookup"><span data-stu-id="413a8-133">The following code example demonstrates how to create a new <xref:System.Text.UTF7Encoding> instance that allows optional characters.</span></span>  
  
 [!code-cpp[System.Text.UTF7Encoding.ctor2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF7Encoding.ctor2 Example/CPP/ctor-boolean.cpp#1)]
 [!code-csharp[System.Text.UTF7Encoding.ctor2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF7Encoding.ctor2 Example/CS/ctor-boolean.cs#1)]
 [!code-vb[System.Text.UTF7Encoding.ctor2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF7Encoding.ctor2 Example/VB/ctor-boolean.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF7Encoding.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="uTF7Encoding.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="413a8-134">要與目前的 <see cref="T:System.Text.UTF7Encoding" /> 物件比較的物件。</span><span class="sxs-lookup"><span data-stu-id="413a8-134">An object to compare to the current <see cref="T:System.Text.UTF7Encoding" /> object.</span></span></param>
        <summary><span data-ttu-id="413a8-135">取得值，指出指定的物件是否等於目前的 <see cref="T:System.Text.UTF7Encoding" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="413a8-135">Gets a value indicating whether the specified object is equal to the current <see cref="T:System.Text.UTF7Encoding" /> object.</span></span></summary>
        <returns><span data-ttu-id="413a8-136">如果 <paramref name="value" /> 為 <see cref="T:System.Text.UTF7Encoding" /> 物件且等於目前的 <see cref="T:System.Text.UTF7Encoding" /> 物件，則為 <see langword="true" />；否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="413a8-136"><see langword="true" /> if <paramref name="value" /> is a <see cref="T:System.Text.UTF7Encoding" /> object and is equal to the current <see cref="T:System.Text.UTF7Encoding" /> object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="413a8-137">兩個<xref:System.Text.UTF7Encoding>物件是否相等，如果它們都是允許或不允許選擇性字元，而且如果其基礎<xref:System.Text.Encoding.EncoderFallback%2A>和<xref:System.Text.Encoding.DecoderFallback%2A>屬性相等。</span><span class="sxs-lookup"><span data-stu-id="413a8-137">Two <xref:System.Text.UTF7Encoding> objects are equal if they both either allow or disallow optional characters, and if their underlying <xref:System.Text.Encoding.EncoderFallback%2A> and <xref:System.Text.Encoding.DecoderFallback%2A> properties are equal.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Encoding" />
        <altmember cref="Overload:System.Text.UTF7Encoding.#ctor" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetByteCount">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="413a8-138">計算將一組字元編碼所產生的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="413a8-138">Calculates the number of bytes produced by encoding a set of characters.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public override int GetByteCount (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetByteCount(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF7Encoding.GetByteCount(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetByteCount (s As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetByteCount(System::String ^ s);" />
      <MemberSignature Language="F#" Value="override this.GetByteCount : string -&gt; int" Usage="uTF7Encoding.GetByteCount s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="413a8-139"><see cref="T:System.String" /> 物件，包含要編碼的字元組。</span><span class="sxs-lookup"><span data-stu-id="413a8-139">The <see cref="T:System.String" /> object containing the set of characters to encode.</span></span></param>
        <summary><span data-ttu-id="413a8-140">編碼指定 <see cref="T:System.String" /> 物件中的字元，從而計算所產生的位元組數。</span><span class="sxs-lookup"><span data-stu-id="413a8-140">Calculates the number of bytes produced by encoding the characters in the specified <see cref="T:System.String" /> object.</span></span></summary>
        <returns><span data-ttu-id="413a8-141">編碼指定字元所產生的位元組數。</span><span class="sxs-lookup"><span data-stu-id="413a8-141">The number of bytes produced by encoding the specified characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="413a8-142">若要計算確切的陣列大小<xref:System.Text.UTF7Encoding.GetBytes%2A>需要儲存產生的位元組，應用程式會使用<xref:System.Text.UTF7Encoding.GetByteCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="413a8-142">To calculate the exact array size that <xref:System.Text.UTF7Encoding.GetBytes%2A> requires to store the resulting bytes, the application uses <xref:System.Text.UTF7Encoding.GetByteCount%2A>.</span></span> <span data-ttu-id="413a8-143">若要計算最大陣列大小，應用程式應該使用<xref:System.Text.UTF7Encoding.GetMaxByteCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="413a8-143">To calculate the maximum array size, the application should use <xref:System.Text.UTF7Encoding.GetMaxByteCount%2A>.</span></span> <span data-ttu-id="413a8-144"><xref:System.Text.UTF7Encoding.GetByteCount%2A>方法通常可讓較少的記憶體配置而<xref:System.Text.UTF7Encoding.GetMaxByteCount%2A>方法通常執行速度更快。</span><span class="sxs-lookup"><span data-stu-id="413a8-144">The <xref:System.Text.UTF7Encoding.GetByteCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.UTF7Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="413a8-145">下列程式碼範例示範如何使用<xref:System.Text.UTF7Encoding.GetByteCount%2A>方法傳回的字元陣列編碼所需的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="413a8-145">The following code example demonstrates how to use the <xref:System.Text.UTF7Encoding.GetByteCount%2A> method to return the number of bytes required to encode a character array.</span></span>  
  
 [!code-cpp[System.Text.UTF7Encoding.GetByteCount Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF7Encoding.GetByteCount Example/CPP/getbytecount-char[]-int32-int32.cpp#1)]
 [!code-csharp[System.Text.UTF7Encoding.GetByteCount Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF7Encoding.GetByteCount Example/CS/getbytecount-char[]-int32-int32.cs#1)]
 [!code-vb[System.Text.UTF7Encoding.GetByteCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF7Encoding.GetByteCount Example/VB/getbytecount-char[]-int32-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="413a8-146"><paramref name="s" /> 是 <see langword="null" /> (<see langword="Nothing" />)。</span><span class="sxs-lookup"><span data-stu-id="413a8-146"><paramref name="s" /> is <see langword="null" /> (<see langword="Nothing" />).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="413a8-147">所產生的位元組數目大於可用整數傳回的數目上限。</span><span class="sxs-lookup"><span data-stu-id="413a8-147">The resulting number of bytes is greater than the maximum number that can be returned as an int.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="413a8-148">發生後援 (如需更完整的說明，請參閱 [.NET Framework 中的字元編碼方式](~/docs/standard/base-types/character-encoding.md))</span><span class="sxs-lookup"><span data-stu-id="413a8-148">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span></span> 
<span data-ttu-id="413a8-149">-和-</span><span class="sxs-lookup"><span data-stu-id="413a8-149">-and-</span></span> 
 <span data-ttu-id="413a8-150"><see cref="P:System.Text.Encoding.EncoderFallback" /> 設定為 <see cref="T:System.Text.EncoderExceptionFallback" />。</span><span class="sxs-lookup"><span data-stu-id="413a8-150"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UTF7Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UTF7Encoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF7Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public override int GetByteCount (char* chars, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetByteCount(char* chars, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF7Encoding.GetByteCount(System.Char*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetByteCount(char* chars, int count);" />
      <MemberSignature Language="F#" Value="override this.GetByteCount : nativeptr&lt;char&gt; * int -&gt; int" Usage="uTF7Encoding.GetByteCount (chars, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char*" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="413a8-151">要編碼的第一個字元指標。</span><span class="sxs-lookup"><span data-stu-id="413a8-151">A pointer to the first character to encode.</span></span></param>
        <param name="count"><span data-ttu-id="413a8-152">要編碼的字元數。</span><span class="sxs-lookup"><span data-stu-id="413a8-152">The number of characters to encode.</span></span></param>
        <summary><span data-ttu-id="413a8-153">計算將起始於指定字元指標的一組字元編碼所產生的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="413a8-153">Calculates the number of bytes produced by encoding a set of characters starting at the specified character pointer.</span></span></summary>
        <returns><span data-ttu-id="413a8-154">編碼指定字元所產生的位元組數。</span><span class="sxs-lookup"><span data-stu-id="413a8-154">The number of bytes produced by encoding the specified characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="413a8-155">若要計算確切的陣列大小<xref:System.Text.UTF7Encoding.GetBytes%2A>需要儲存產生的位元組，應用程式會使用<xref:System.Text.UTF7Encoding.GetByteCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="413a8-155">To calculate the exact array size that <xref:System.Text.UTF7Encoding.GetBytes%2A> requires to store the resulting bytes, the application uses <xref:System.Text.UTF7Encoding.GetByteCount%2A>.</span></span> <span data-ttu-id="413a8-156">若要計算最大陣列大小，應用程式應該使用<xref:System.Text.UTF7Encoding.GetMaxByteCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="413a8-156">To calculate the maximum array size, the application should use <xref:System.Text.UTF7Encoding.GetMaxByteCount%2A>.</span></span> <span data-ttu-id="413a8-157"><xref:System.Text.UTF7Encoding.GetByteCount%2A>方法通常可讓較少的記憶體配置而<xref:System.Text.UTF7Encoding.GetMaxByteCount%2A>方法通常執行速度更快。</span><span class="sxs-lookup"><span data-stu-id="413a8-157">The <xref:System.Text.UTF7Encoding.GetByteCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.UTF7Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="413a8-158"><paramref name="chars" /> 是 <see langword="null" /> (在 Visual Basic .NET 中為 <see langword="Nothing" />)。</span><span class="sxs-lookup"><span data-stu-id="413a8-158"><paramref name="chars" /> is <see langword="null" /> (<see langword="Nothing" /> in Visual Basic .NET).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="413a8-159"><paramref name="count" /> 小於零。</span><span class="sxs-lookup"><span data-stu-id="413a8-159"><paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="413a8-160">-或-</span><span class="sxs-lookup"><span data-stu-id="413a8-160">-or-</span></span> 
<span data-ttu-id="413a8-161">所產生的位元組數目大於可用整數傳回的數目上限。</span><span class="sxs-lookup"><span data-stu-id="413a8-161">The resulting number of bytes is greater than the maximum number that can be returned as an int.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="413a8-162">發生後援 (如需完整說明，請參閱 [.NET Framework 中的字元編碼](~/docs/standard/base-types/character-encoding.md))</span><span class="sxs-lookup"><span data-stu-id="413a8-162">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="413a8-163">-和-</span><span class="sxs-lookup"><span data-stu-id="413a8-163">-and-</span></span> 
 <span data-ttu-id="413a8-164"><see cref="P:System.Text.Encoding.EncoderFallback" /> 設定為 <see cref="T:System.Text.EncoderExceptionFallback" />。</span><span class="sxs-lookup"><span data-stu-id="413a8-164"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="413a8-165">需要完全信任立即呼叫端。</span><span class="sxs-lookup"><span data-stu-id="413a8-165">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="413a8-166">此成員不能由部分信任或不透明的程式碼。</span><span class="sxs-lookup"><span data-stu-id="413a8-166">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Text.UTF7Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UTF7Encoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF7Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public override int GetByteCount (char[] chars, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetByteCount(char[] chars, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF7Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetByteCount (chars As Char(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetByteCount(cli::array &lt;char&gt; ^ chars, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.GetByteCount : char[] * int * int -&gt; int" Usage="uTF7Encoding.GetByteCount (chars, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="413a8-167">包含要解碼之一組字元的字元陣列。</span><span class="sxs-lookup"><span data-stu-id="413a8-167">The character array containing the set of characters to encode.</span></span></param>
        <param name="index"><span data-ttu-id="413a8-168">要編碼的第一個字元索引。</span><span class="sxs-lookup"><span data-stu-id="413a8-168">The index of the first character to encode.</span></span></param>
        <param name="count"><span data-ttu-id="413a8-169">要編碼的字元數。</span><span class="sxs-lookup"><span data-stu-id="413a8-169">The number of characters to encode.</span></span></param>
        <summary><span data-ttu-id="413a8-170">計算將指定字元陣列中的一組字元編碼所產生的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="413a8-170">Calculates the number of bytes produced by encoding a set of characters from the specified character array.</span></span></summary>
        <returns><span data-ttu-id="413a8-171">編碼指定字元所產生的位元組數。</span><span class="sxs-lookup"><span data-stu-id="413a8-171">The number of bytes produced by encoding the specified characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="413a8-172">若要計算所需的確切的陣列大小<xref:System.Text.UTF7Encoding.GetBytes%2A>來儲存產生的位元組，應用程式會使用<xref:System.Text.UTF7Encoding.GetByteCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="413a8-172">To calculate the exact array size required by <xref:System.Text.UTF7Encoding.GetBytes%2A> to store the resulting bytes, the application uses <xref:System.Text.UTF7Encoding.GetByteCount%2A>.</span></span> <span data-ttu-id="413a8-173">若要計算最大陣列大小，應用程式應該使用<xref:System.Text.UTF7Encoding.GetMaxByteCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="413a8-173">To calculate the maximum array size, the application should use <xref:System.Text.UTF7Encoding.GetMaxByteCount%2A>.</span></span> <span data-ttu-id="413a8-174"><xref:System.Text.UTF7Encoding.GetByteCount%2A>方法通常可讓較少的記憶體配置而<xref:System.Text.UTF7Encoding.GetMaxByteCount%2A>方法通常執行速度更快。</span><span class="sxs-lookup"><span data-stu-id="413a8-174">The <xref:System.Text.UTF7Encoding.GetByteCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.UTF7Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="413a8-175">下列程式碼範例示範如何使用<xref:System.Text.UTF7Encoding.GetByteCount%2A>方法來傳回編碼的 Unicode 字元陣列所需的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="413a8-175">The following code example demonstrates how to use the <xref:System.Text.UTF7Encoding.GetByteCount%2A> method to return the number of bytes required to encode an array of Unicode characters.</span></span>  
  
 [!code-cpp[System.Text.UTF7Encoding.GetByteCount Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF7Encoding.GetByteCount Example/CPP/getbytecount-char[]-int32-int32.cpp#1)]
 [!code-csharp[System.Text.UTF7Encoding.GetByteCount Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF7Encoding.GetByteCount Example/CS/getbytecount-char[]-int32-int32.cs#1)]
 [!code-vb[System.Text.UTF7Encoding.GetByteCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF7Encoding.GetByteCount Example/VB/getbytecount-char[]-int32-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="413a8-176"><paramref name="chars" /> 是 <see langword="null" /> (<see langword="Nothing" />)。</span><span class="sxs-lookup"><span data-stu-id="413a8-176"><paramref name="chars" /> is <see langword="null" /> (<see langword="Nothing" />).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="413a8-177"><paramref name="index" /> 或 <paramref name="count" /> 小於零。</span><span class="sxs-lookup"><span data-stu-id="413a8-177"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="413a8-178">-或-</span><span class="sxs-lookup"><span data-stu-id="413a8-178">-or-</span></span> 
 <span data-ttu-id="413a8-179"><paramref name="index" /> 與 <paramref name="count" /> 不代表 <paramref name="chars" /> 中有效的範圍。</span><span class="sxs-lookup"><span data-stu-id="413a8-179"><paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="chars" />.</span></span>  
  
<span data-ttu-id="413a8-180">-或-</span><span class="sxs-lookup"><span data-stu-id="413a8-180">-or-</span></span> 
<span data-ttu-id="413a8-181">所產生的位元組數目大於可用整數傳回的數目上限。</span><span class="sxs-lookup"><span data-stu-id="413a8-181">The resulting number of bytes is greater than the maximum number that can be returned as an int.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="413a8-182">發生後援 (如需完整說明，請參閱 [.NET Framework 中的字元編碼](~/docs/standard/base-types/character-encoding.md))</span><span class="sxs-lookup"><span data-stu-id="413a8-182">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="413a8-183">-和-</span><span class="sxs-lookup"><span data-stu-id="413a8-183">-and-</span></span> 
 <span data-ttu-id="413a8-184"><see cref="P:System.Text.Encoding.EncoderFallback" /> 設定為 <see cref="T:System.Text.EncoderExceptionFallback" />。</span><span class="sxs-lookup"><span data-stu-id="413a8-184"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UTF7Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UTF7Encoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF7Encoding.GetEncoder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetBytes">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="413a8-185">將一組字元編碼成位元組序列。</span><span class="sxs-lookup"><span data-stu-id="413a8-185">Encodes a set of characters into a sequence of bytes.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override int GetBytes (char* chars, int charCount, byte* bytes, int byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetBytes(char* chars, int32 charCount, unsigned int8* bytes, int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF7Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetBytes(char* chars, int charCount, System::Byte* bytes, int byteCount);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : nativeptr&lt;char&gt; * int * nativeptr&lt;byte&gt; * int -&gt; int" Usage="uTF7Encoding.GetBytes (chars, charCount, bytes, byteCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char*" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="byteCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="413a8-186">要編碼的第一個字元指標。</span><span class="sxs-lookup"><span data-stu-id="413a8-186">A pointer to the first character to encode.</span></span></param>
        <param name="charCount"><span data-ttu-id="413a8-187">要編碼的字元數。</span><span class="sxs-lookup"><span data-stu-id="413a8-187">The number of characters to encode.</span></span></param>
        <param name="bytes"><span data-ttu-id="413a8-188">開始寫入結果位元組序列的位置指標。</span><span class="sxs-lookup"><span data-stu-id="413a8-188">A pointer to the location at which to start writing the resulting sequence of bytes.</span></span></param>
        <param name="byteCount"><span data-ttu-id="413a8-189">寫入的最大位元組數。</span><span class="sxs-lookup"><span data-stu-id="413a8-189">The maximum number of bytes to write.</span></span></param>
        <summary><span data-ttu-id="413a8-190">將起始於指定字元指標的一組字元編碼成位元組序列；儲存該位元組序列時，係以指定的位元組指標為起始點。</span><span class="sxs-lookup"><span data-stu-id="413a8-190">Encodes a set of characters starting at the specified character pointer into a sequence of bytes that are stored starting at the specified byte pointer.</span></span></summary>
        <returns><span data-ttu-id="413a8-191">在 <paramref name="bytes" /> 所表示的位置上寫入的實際位元組數目。</span><span class="sxs-lookup"><span data-stu-id="413a8-191">The actual number of bytes written at the location indicated by <paramref name="bytes" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="413a8-192">若要計算所需的確切的陣列大小<xref:System.Text.UTF7Encoding.GetBytes%2A>來儲存產生的位元組，應用程式會使用<xref:System.Text.UTF7Encoding.GetByteCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="413a8-192">To calculate the exact array size required by <xref:System.Text.UTF7Encoding.GetBytes%2A> to store the resulting bytes, the application uses <xref:System.Text.UTF7Encoding.GetByteCount%2A>.</span></span> <span data-ttu-id="413a8-193">若要計算最大陣列大小，應用程式應該使用<xref:System.Text.UTF7Encoding.GetMaxByteCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="413a8-193">To calculate the maximum array size, the application should use <xref:System.Text.UTF7Encoding.GetMaxByteCount%2A>.</span></span> <span data-ttu-id="413a8-194"><xref:System.Text.UTF7Encoding.GetByteCount%2A>方法通常可讓較少的記憶體配置而<xref:System.Text.UTF7Encoding.GetMaxByteCount%2A>方法通常執行速度更快。</span><span class="sxs-lookup"><span data-stu-id="413a8-194">The <xref:System.Text.UTF7Encoding.GetByteCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.UTF7Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="413a8-195">要轉換，例如，從資料流讀取資料的資料可能僅適用於循序區塊。</span><span class="sxs-lookup"><span data-stu-id="413a8-195">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="413a8-196">在此情況下，或如果資料量太大，它必須分割成較小的區塊，應該使用應用程式<xref:System.Text.Decoder>或<xref:System.Text.Encoder>所提供<xref:System.Text.UTF7Encoding.GetDecoder%2A>方法或<xref:System.Text.UTF7Encoding.GetEncoder%2A>方法，分別。</span><span class="sxs-lookup"><span data-stu-id="413a8-196">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UTF7Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF7Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="413a8-197"><xref:System.Text.UTF7Encoding> 不會提供錯誤偵測。</span><span class="sxs-lookup"><span data-stu-id="413a8-197"><xref:System.Text.UTF7Encoding> does not provide error detection.</span></span> <span data-ttu-id="413a8-198">無效的字元都會編碼為修改過的 base 64 字元。</span><span class="sxs-lookup"><span data-stu-id="413a8-198">Invalid characters are encoded as a modified base 64 character.</span></span> <span data-ttu-id="413a8-199">基於安全性理由，您的應用程式，建議您使用<xref:System.Text.UTF8Encoding>， <xref:System.Text.UnicodeEncoding>，或<xref:System.Text.UTF32Encoding>並啟用錯誤偵測。</span><span class="sxs-lookup"><span data-stu-id="413a8-199">For security reasons, your applications are recommended to use <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, or <xref:System.Text.UTF32Encoding> and enable error detection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="413a8-200"><paramref name="chars" /> 是 <see langword="null" /> (<see langword="Nothing" />)。</span><span class="sxs-lookup"><span data-stu-id="413a8-200"><paramref name="chars" /> is <see langword="null" /> (<see langword="Nothing" />).</span></span>  
  
<span data-ttu-id="413a8-201">-或-</span><span class="sxs-lookup"><span data-stu-id="413a8-201">-or-</span></span> 
 <span data-ttu-id="413a8-202"><paramref name="bytes" /> 是 <see langword="null" /> (<see langword="Nothing" />)。</span><span class="sxs-lookup"><span data-stu-id="413a8-202"><paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="413a8-203"><paramref name="charCount" /> 或 <paramref name="byteCount" /> 小於零。</span><span class="sxs-lookup"><span data-stu-id="413a8-203"><paramref name="charCount" /> or <paramref name="byteCount" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="413a8-204"><paramref name="byteCount" /> 小於結果位元組數。</span><span class="sxs-lookup"><span data-stu-id="413a8-204"><paramref name="byteCount" /> is less than the resulting number of bytes.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="413a8-205">發生後援 (如需更完整的說明，請參閱 [.NET Framework 中的字元編碼方式](~/docs/standard/base-types/character-encoding.md))</span><span class="sxs-lookup"><span data-stu-id="413a8-205">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span></span> 
<span data-ttu-id="413a8-206">-和-</span><span class="sxs-lookup"><span data-stu-id="413a8-206">-and-</span></span> 
 <span data-ttu-id="413a8-207"><see cref="P:System.Text.Encoding.EncoderFallback" /> 設定為 <see cref="T:System.Text.EncoderExceptionFallback" />。</span><span class="sxs-lookup"><span data-stu-id="413a8-207"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="413a8-208">需要完全信任立即呼叫端。</span><span class="sxs-lookup"><span data-stu-id="413a8-208">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="413a8-209">此成員不能由部分信任或不透明的程式碼。</span><span class="sxs-lookup"><span data-stu-id="413a8-209">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Text.UTF7Encoding.GetEncoder" />
        <altmember cref="M:System.Text.UTF7Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF7Encoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override int GetBytes (char[] chars, int charIndex, int charCount, byte[] bytes, int byteIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetBytes(char[] chars, int32 charIndex, int32 charCount, unsigned int8[] bytes, int32 byteIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF7Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (chars As Char(), charIndex As Integer, charCount As Integer, bytes As Byte(), byteIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetBytes(cli::array &lt;char&gt; ^ chars, int charIndex, int charCount, cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : char[] * int * int * byte[] * int -&gt; int" Usage="uTF7Encoding.GetBytes (chars, charIndex, charCount, bytes, byteIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="413a8-210">包含要解碼之一組字元的字元陣列。</span><span class="sxs-lookup"><span data-stu-id="413a8-210">The character array containing the set of characters to encode.</span></span></param>
        <param name="charIndex"><span data-ttu-id="413a8-211">要編碼的第一個字元索引。</span><span class="sxs-lookup"><span data-stu-id="413a8-211">The index of the first character to encode.</span></span></param>
        <param name="charCount"><span data-ttu-id="413a8-212">要編碼的字元數。</span><span class="sxs-lookup"><span data-stu-id="413a8-212">The number of characters to encode.</span></span></param>
        <param name="bytes"><span data-ttu-id="413a8-213">要包含結果位元組序列的位元組陣列。</span><span class="sxs-lookup"><span data-stu-id="413a8-213">The byte array to contain the resulting sequence of bytes.</span></span></param>
        <param name="byteIndex"><span data-ttu-id="413a8-214">要開始寫入結果位元組序列的索引。</span><span class="sxs-lookup"><span data-stu-id="413a8-214">The index at which to start writing the resulting sequence of bytes.</span></span></param>
        <summary><span data-ttu-id="413a8-215">將指定字元陣列中的一組字元編碼成指定的位元組陣列。</span><span class="sxs-lookup"><span data-stu-id="413a8-215">Encodes a set of characters from the specified character array into the specified byte array.</span></span></summary>
        <returns><span data-ttu-id="413a8-216">寫入 <paramref name="bytes" /> 的實際位元組數。</span><span class="sxs-lookup"><span data-stu-id="413a8-216">The actual number of bytes written into <paramref name="bytes" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="413a8-217">若要計算所需的確切的陣列大小<xref:System.Text.UTF7Encoding.GetBytes%2A>來儲存產生的位元組，應用程式會使用<xref:System.Text.UTF7Encoding.GetByteCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="413a8-217">To calculate the exact array size required by <xref:System.Text.UTF7Encoding.GetBytes%2A> to store the resulting bytes, the application uses <xref:System.Text.UTF7Encoding.GetByteCount%2A>.</span></span> <span data-ttu-id="413a8-218">若要計算最大陣列大小，應用程式應該使用<xref:System.Text.UTF7Encoding.GetMaxByteCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="413a8-218">To calculate the maximum array size, the application should use <xref:System.Text.UTF7Encoding.GetMaxByteCount%2A>.</span></span> <span data-ttu-id="413a8-219"><xref:System.Text.UTF7Encoding.GetByteCount%2A>方法通常可讓較少的記憶體配置而<xref:System.Text.UTF7Encoding.GetMaxByteCount%2A>方法通常執行速度更快。</span><span class="sxs-lookup"><span data-stu-id="413a8-219">The <xref:System.Text.UTF7Encoding.GetByteCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.UTF7Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="413a8-220">要轉換，例如，從資料流讀取資料的資料可能僅適用於循序區塊。</span><span class="sxs-lookup"><span data-stu-id="413a8-220">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="413a8-221">在此情況下，或如果資料量太大，它必須分割成較小的區塊，應該使用應用程式<xref:System.Text.Decoder>或<xref:System.Text.Encoder>所提供<xref:System.Text.UTF7Encoding.GetDecoder%2A>方法或<xref:System.Text.UTF7Encoding.GetEncoder%2A>方法，分別。</span><span class="sxs-lookup"><span data-stu-id="413a8-221">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UTF7Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF7Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="413a8-222"><xref:System.Text.UTF7Encoding> 不會提供錯誤偵測。</span><span class="sxs-lookup"><span data-stu-id="413a8-222"><xref:System.Text.UTF7Encoding> does not provide error detection.</span></span> <span data-ttu-id="413a8-223">無效的字元都會編碼為修改過的 base 64 字元。</span><span class="sxs-lookup"><span data-stu-id="413a8-223">Invalid characters are encoded as a modified base 64 character.</span></span> <span data-ttu-id="413a8-224">基於安全性理由，您的應用程式，建議您使用<xref:System.Text.UTF8Encoding>， <xref:System.Text.UnicodeEncoding>，或<xref:System.Text.UTF32Encoding>並啟用錯誤偵測。</span><span class="sxs-lookup"><span data-stu-id="413a8-224">For security reasons, your applications are recommended to use <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, or <xref:System.Text.UTF32Encoding> and enable error detection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="413a8-225">下列程式碼範例示範如何使用<xref:System.Text.UTF7Encoding.GetBytes%2A>方法來編碼的字元範圍<xref:System.String>並將編碼的位元組儲存在位元組陣列中的項目範圍。</span><span class="sxs-lookup"><span data-stu-id="413a8-225">The following code example demonstrates how to use the <xref:System.Text.UTF7Encoding.GetBytes%2A> method to encode a range of characters from a <xref:System.String> and store the encoded bytes in a range of elements in a byte array.</span></span>  
  
 [!code-cpp[System.Text.UTF7Encoding.GetBytes Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF7Encoding.GetBytes Example/CPP/getbytes-char[]-int32-int32-byte[]-int32.cpp#1)]
 [!code-csharp[System.Text.UTF7Encoding.GetBytes Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF7Encoding.GetBytes Example/CS/getbytes-char[]-int32-int32-byte[]-int32.cs#1)]
 [!code-vb[System.Text.UTF7Encoding.GetBytes Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF7Encoding.GetBytes Example/VB/getbytes-char[]-int32-int32-byte[]-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="413a8-226"><paramref name="chars" /> 是 <see langword="null" /> (<see langword="Nothing" />)。</span><span class="sxs-lookup"><span data-stu-id="413a8-226"><paramref name="chars" /> is <see langword="null" /> (<see langword="Nothing" />).</span></span>  
  
<span data-ttu-id="413a8-227">-或-</span><span class="sxs-lookup"><span data-stu-id="413a8-227">-or-</span></span> 
 <span data-ttu-id="413a8-228"><paramref name="bytes" /> 是 <see langword="null" /> (<see langword="Nothing" />)。</span><span class="sxs-lookup"><span data-stu-id="413a8-228"><paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="413a8-229"><paramref name="charIndex" />、<paramref name="charCount" /> 或 <paramref name="byteIndex" /> 小於零。</span><span class="sxs-lookup"><span data-stu-id="413a8-229"><paramref name="charIndex" /> or <paramref name="charCount" /> or <paramref name="byteIndex" /> is less than zero.</span></span>  
  
<span data-ttu-id="413a8-230">-或-</span><span class="sxs-lookup"><span data-stu-id="413a8-230">-or-</span></span> 
 <span data-ttu-id="413a8-231"><paramref name="charIndex" /> 與 <paramref name="charCount" /> 不代表 <paramref name="chars" /> 中有效的範圍。</span><span class="sxs-lookup"><span data-stu-id="413a8-231"><paramref name="charIndex" /> and <paramref name="charCount" /> do not denote a valid range in <paramref name="chars" />.</span></span>  
  
<span data-ttu-id="413a8-232">-或-</span><span class="sxs-lookup"><span data-stu-id="413a8-232">-or-</span></span> 
 <span data-ttu-id="413a8-233"><paramref name="byteIndex" /> 在 <paramref name="bytes" /> 中不是有效的索引。</span><span class="sxs-lookup"><span data-stu-id="413a8-233"><paramref name="byteIndex" /> is not a valid index in <paramref name="bytes" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="413a8-234">從 <paramref name="bytes" /> 到陣列結尾處，<paramref name="byteIndex" /> 沒有足夠的容量容納結果位元組。</span><span class="sxs-lookup"><span data-stu-id="413a8-234"><paramref name="bytes" /> does not have enough capacity from <paramref name="byteIndex" /> to the end of the array to accommodate the resulting bytes.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="413a8-235">發生後援 (如需更完整的說明，請參閱 [.NET Framework 中的字元編碼方式](~/docs/standard/base-types/character-encoding.md))</span><span class="sxs-lookup"><span data-stu-id="413a8-235">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span></span> 
<span data-ttu-id="413a8-236">-和-</span><span class="sxs-lookup"><span data-stu-id="413a8-236">-and-</span></span> 
 <span data-ttu-id="413a8-237"><see cref="P:System.Text.Encoding.EncoderFallback" /> 設定為 <see cref="T:System.Text.EncoderExceptionFallback" />。</span><span class="sxs-lookup"><span data-stu-id="413a8-237"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UTF7Encoding.GetEncoder" />
        <altmember cref="M:System.Text.UTF7Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF7Encoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override int GetBytes (string s, int charIndex, int charCount, byte[] bytes, int byteIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetBytes(string s, int32 charIndex, int32 charCount, unsigned int8[] bytes, int32 byteIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF7Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (s As String, charIndex As Integer, charCount As Integer, bytes As Byte(), byteIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetBytes(System::String ^ s, int charIndex, int charCount, cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : string * int * int * byte[] * int -&gt; int" Usage="uTF7Encoding.GetBytes (s, charIndex, charCount, bytes, byteIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="413a8-238"><see cref="T:System.String" />，包含要編碼的一組字元。</span><span class="sxs-lookup"><span data-stu-id="413a8-238">The <see cref="T:System.String" /> containing the set of characters to encode.</span></span></param>
        <param name="charIndex"><span data-ttu-id="413a8-239">要編碼的第一個字元索引。</span><span class="sxs-lookup"><span data-stu-id="413a8-239">The index of the first character to encode.</span></span></param>
        <param name="charCount"><span data-ttu-id="413a8-240">要編碼的字元數。</span><span class="sxs-lookup"><span data-stu-id="413a8-240">The number of characters to encode.</span></span></param>
        <param name="bytes"><span data-ttu-id="413a8-241">要包含結果位元組序列的位元組陣列。</span><span class="sxs-lookup"><span data-stu-id="413a8-241">The byte array to contain the resulting sequence of bytes.</span></span></param>
        <param name="byteIndex"><span data-ttu-id="413a8-242">要開始寫入結果位元組序列的索引。</span><span class="sxs-lookup"><span data-stu-id="413a8-242">The index at which to start writing the resulting sequence of bytes.</span></span></param>
        <summary><span data-ttu-id="413a8-243">將指定 <see cref="T:System.String" /> 中的一組字元編碼成指定的位元組陣列。</span><span class="sxs-lookup"><span data-stu-id="413a8-243">Encodes a set of characters from the specified <see cref="T:System.String" /> into the specified byte array.</span></span></summary>
        <returns><span data-ttu-id="413a8-244">寫入 <paramref name="bytes" /> 的實際位元組數。</span><span class="sxs-lookup"><span data-stu-id="413a8-244">The actual number of bytes written into <paramref name="bytes" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="413a8-245">若要計算所需的確切的陣列大小<xref:System.Text.UTF7Encoding.GetBytes%2A>來儲存產生的位元組，應用程式會使用<xref:System.Text.UTF7Encoding.GetByteCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="413a8-245">To calculate the exact array size required by <xref:System.Text.UTF7Encoding.GetBytes%2A> to store the resulting bytes, the application uses <xref:System.Text.UTF7Encoding.GetByteCount%2A>.</span></span> <span data-ttu-id="413a8-246">若要計算最大陣列大小，應用程式應該使用<xref:System.Text.UTF7Encoding.GetMaxByteCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="413a8-246">To calculate the maximum array size, the application should use <xref:System.Text.UTF7Encoding.GetMaxByteCount%2A>.</span></span> <span data-ttu-id="413a8-247"><xref:System.Text.UTF7Encoding.GetByteCount%2A>方法通常可讓較少的記憶體配置而<xref:System.Text.UTF7Encoding.GetMaxByteCount%2A>方法通常執行速度更快。</span><span class="sxs-lookup"><span data-stu-id="413a8-247">The <xref:System.Text.UTF7Encoding.GetByteCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.UTF7Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="413a8-248">要轉換，例如，從資料流讀取資料的資料可能僅適用於循序區塊。</span><span class="sxs-lookup"><span data-stu-id="413a8-248">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="413a8-249">在此情況下，或如果資料量太大，它必須分割成較小的區塊，應該使用應用程式<xref:System.Text.Decoder>或<xref:System.Text.Encoder>所提供<xref:System.Text.UTF7Encoding.GetDecoder%2A>方法或<xref:System.Text.UTF7Encoding.GetEncoder%2A>方法，分別。</span><span class="sxs-lookup"><span data-stu-id="413a8-249">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UTF7Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF7Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="413a8-250"><xref:System.Text.UTF7Encoding> 不會提供錯誤偵測。</span><span class="sxs-lookup"><span data-stu-id="413a8-250"><xref:System.Text.UTF7Encoding> does not provide error detection.</span></span> <span data-ttu-id="413a8-251">無效的字元都會編碼為修改過的 base 64 字元。</span><span class="sxs-lookup"><span data-stu-id="413a8-251">Invalid characters are encoded as a modified base 64 character.</span></span> <span data-ttu-id="413a8-252">基於安全性理由，您的應用程式，建議您使用<xref:System.Text.UTF8Encoding>， <xref:System.Text.UnicodeEncoding>，或<xref:System.Text.UTF32Encoding>並啟用錯誤偵測。</span><span class="sxs-lookup"><span data-stu-id="413a8-252">For security reasons, your applications are recommended to use <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, or <xref:System.Text.UTF32Encoding> and enable error detection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="413a8-253">下列程式碼範例示範如何使用<xref:System.Text.UTF7Encoding.GetBytes%2A>編碼項目範圍從 Unicode 字元陣列，並將編碼的位元組儲存在位元組陣列中的項目範圍中的方法。</span><span class="sxs-lookup"><span data-stu-id="413a8-253">The following code example demonstrates how to use the <xref:System.Text.UTF7Encoding.GetBytes%2A> method to encode a range of elements from a Unicode character array, and store the encoded bytes in a range of elements in a byte array.</span></span>  
  
 [!code-cpp[System.Text.UTF7Encoding.GetBytes Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF7Encoding.GetBytes Example/CPP/getbytes-char[]-int32-int32-byte[]-int32.cpp#1)]
 [!code-csharp[System.Text.UTF7Encoding.GetBytes Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF7Encoding.GetBytes Example/CS/getbytes-char[]-int32-int32-byte[]-int32.cs#1)]
 [!code-vb[System.Text.UTF7Encoding.GetBytes Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF7Encoding.GetBytes Example/VB/getbytes-char[]-int32-int32-byte[]-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="413a8-254"><paramref name="s" /> 是 <see langword="null" /> (<see langword="Nothing" />)。</span><span class="sxs-lookup"><span data-stu-id="413a8-254"><paramref name="s" /> is <see langword="null" /> (<see langword="Nothing" />).</span></span>  
  
<span data-ttu-id="413a8-255">-或-</span><span class="sxs-lookup"><span data-stu-id="413a8-255">-or-</span></span> 
 <span data-ttu-id="413a8-256"><paramref name="bytes" /> 是 <see langword="null" /> (<see langword="Nothing" />)。</span><span class="sxs-lookup"><span data-stu-id="413a8-256"><paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="413a8-257"><paramref name="charIndex" />、<paramref name="charCount" /> 或 <paramref name="byteIndex" /> 小於零。</span><span class="sxs-lookup"><span data-stu-id="413a8-257"><paramref name="charIndex" /> or <paramref name="charCount" /> or <paramref name="byteIndex" /> is less than zero.</span></span>  
  
<span data-ttu-id="413a8-258">-或-</span><span class="sxs-lookup"><span data-stu-id="413a8-258">-or-</span></span> 
 <span data-ttu-id="413a8-259"><paramref name="charIndex" /> 與 <paramref name="charCount" /> 不代表 <paramref name="chars" /> 中有效的範圍。</span><span class="sxs-lookup"><span data-stu-id="413a8-259"><paramref name="charIndex" /> and <paramref name="charCount" /> do not denote a valid range in <paramref name="chars" />.</span></span>  
  
<span data-ttu-id="413a8-260">-或-</span><span class="sxs-lookup"><span data-stu-id="413a8-260">-or-</span></span> 
 <span data-ttu-id="413a8-261"><paramref name="byteIndex" /> 在 <paramref name="bytes" /> 中不是有效的索引。</span><span class="sxs-lookup"><span data-stu-id="413a8-261"><paramref name="byteIndex" /> is not a valid index in <paramref name="bytes" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="413a8-262">從 <paramref name="bytes" /> 到陣列結尾處，<paramref name="byteIndex" /> 沒有足夠的容量容納結果位元組。</span><span class="sxs-lookup"><span data-stu-id="413a8-262"><paramref name="bytes" /> does not have enough capacity from <paramref name="byteIndex" /> to the end of the array to accommodate the resulting bytes.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="413a8-263">發生後援 (如需更完整的說明，請參閱 [.NET Framework 中的字元編碼方式](~/docs/standard/base-types/character-encoding.md))</span><span class="sxs-lookup"><span data-stu-id="413a8-263">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span></span> 
<span data-ttu-id="413a8-264">-和-</span><span class="sxs-lookup"><span data-stu-id="413a8-264">-and-</span></span> 
 <span data-ttu-id="413a8-265"><see cref="P:System.Text.Encoding.EncoderFallback" /> 設定為 <see cref="T:System.Text.EncoderExceptionFallback" />。</span><span class="sxs-lookup"><span data-stu-id="413a8-265"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UTF7Encoding.GetEncoder" />
        <altmember cref="M:System.Text.UTF7Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF7Encoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCharCount">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="413a8-266">計算將位元組序列解碼所產生的字元數。</span><span class="sxs-lookup"><span data-stu-id="413a8-266">Calculates the number of characters produced by decoding a sequence of bytes.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public override int GetCharCount (byte* bytes, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetCharCount(unsigned int8* bytes, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF7Encoding.GetCharCount(System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetCharCount(System::Byte* bytes, int count);" />
      <MemberSignature Language="F#" Value="override this.GetCharCount : nativeptr&lt;byte&gt; * int -&gt; int" Usage="uTF7Encoding.GetCharCount (bytes, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="413a8-267">要解碼的第一個位元組指標。</span><span class="sxs-lookup"><span data-stu-id="413a8-267">A pointer to the first byte to decode.</span></span></param>
        <param name="count"><span data-ttu-id="413a8-268">要解碼的位元組數。</span><span class="sxs-lookup"><span data-stu-id="413a8-268">The number of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="413a8-269">計算將起始於指定位元組指標的位元組序列解碼所產生的字元數。</span><span class="sxs-lookup"><span data-stu-id="413a8-269">Calculates the number of characters produced by decoding a sequence of bytes starting at the specified byte pointer.</span></span></summary>
        <returns><span data-ttu-id="413a8-270">解碼指定位元組序列所產生的字元數。</span><span class="sxs-lookup"><span data-stu-id="413a8-270">The number of characters produced by decoding the specified sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="413a8-271">若要計算所需的確切的陣列大小<xref:System.Text.UTF7Encoding.GetChars%2A>若要儲存產生的字元，使用<xref:System.Text.UTF7Encoding.GetCharCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="413a8-271">To calculate the exact array size required by <xref:System.Text.UTF7Encoding.GetChars%2A> to store the resulting characters, use <xref:System.Text.UTF7Encoding.GetCharCount%2A>.</span></span> <span data-ttu-id="413a8-272">若要計算最大陣列大小，應用程式應該使用<xref:System.Text.UTF7Encoding.GetMaxCharCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="413a8-272">To calculate the maximum array size, the application should use <xref:System.Text.UTF7Encoding.GetMaxCharCount%2A>.</span></span> <span data-ttu-id="413a8-273"><xref:System.Text.UTF7Encoding.GetCharCount%2A>方法通常可讓較少的記憶體配置而<xref:System.Text.UTF7Encoding.GetMaxCharCount%2A>方法通常執行速度更快。</span><span class="sxs-lookup"><span data-stu-id="413a8-273">The <xref:System.Text.UTF7Encoding.GetCharCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.UTF7Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="413a8-274"><paramref name="bytes" /> 是 <see langword="null" /> (<see langword="Nothing" />)。</span><span class="sxs-lookup"><span data-stu-id="413a8-274"><paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="413a8-275"><paramref name="count" /> 小於零。</span><span class="sxs-lookup"><span data-stu-id="413a8-275"><paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="413a8-276">-或-</span><span class="sxs-lookup"><span data-stu-id="413a8-276">-or-</span></span> 
<span data-ttu-id="413a8-277">所產生的字元數目大於可用整數傳回的數目上限。</span><span class="sxs-lookup"><span data-stu-id="413a8-277">The resulting number of characters is greater than the maximum number that can be returned as an int.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="413a8-278">發生後援 (如需更完整的說明，請參閱 [.NET Framework 中的字元編碼方式](~/docs/standard/base-types/character-encoding.md))</span><span class="sxs-lookup"><span data-stu-id="413a8-278">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span></span> 
<span data-ttu-id="413a8-279">-和-</span><span class="sxs-lookup"><span data-stu-id="413a8-279">-and-</span></span> 
 <span data-ttu-id="413a8-280"><see cref="P:System.Text.Encoding.DecoderFallback" /> 設定為 <see cref="T:System.Text.DecoderExceptionFallback" />。</span><span class="sxs-lookup"><span data-stu-id="413a8-280"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="413a8-281">需要完全信任立即呼叫端。</span><span class="sxs-lookup"><span data-stu-id="413a8-281">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="413a8-282">此成員不能由部分信任或不透明的程式碼。</span><span class="sxs-lookup"><span data-stu-id="413a8-282">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="Overload:System.Text.UTF7Encoding.GetChars" />
        <altmember cref="M:System.Text.UTF7Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF7Encoding.GetDecoder" />
      </Docs>
    </Member>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public override int GetCharCount (byte[] bytes, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetCharCount(unsigned int8[] bytes, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF7Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCharCount (bytes As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetCharCount(cli::array &lt;System::Byte&gt; ^ bytes, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.GetCharCount : byte[] * int * int -&gt; int" Usage="uTF7Encoding.GetCharCount (bytes, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="413a8-283">包含要解碼之位元組序列的位元組陣列。</span><span class="sxs-lookup"><span data-stu-id="413a8-283">The byte array containing the sequence of bytes to decode.</span></span></param>
        <param name="index"><span data-ttu-id="413a8-284">要解碼的第一個位元組索引。</span><span class="sxs-lookup"><span data-stu-id="413a8-284">The index of the first byte to decode.</span></span></param>
        <param name="count"><span data-ttu-id="413a8-285">要解碼的位元組數。</span><span class="sxs-lookup"><span data-stu-id="413a8-285">The number of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="413a8-286">計算將指定位元組陣列中的位元組序列解碼所產生的字元數。</span><span class="sxs-lookup"><span data-stu-id="413a8-286">Calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.</span></span></summary>
        <returns><span data-ttu-id="413a8-287">解碼指定位元組序列所產生的字元數。</span><span class="sxs-lookup"><span data-stu-id="413a8-287">The number of characters produced by decoding the specified sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="413a8-288">若要計算所需的確切的陣列大小<xref:System.Text.UTF7Encoding.GetChars%2A>若要儲存產生的字元，使用<xref:System.Text.UTF7Encoding.GetCharCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="413a8-288">To calculate the exact array size required by <xref:System.Text.UTF7Encoding.GetChars%2A> to store the resulting characters, use <xref:System.Text.UTF7Encoding.GetCharCount%2A>.</span></span> <span data-ttu-id="413a8-289">若要計算最大陣列大小，應用程式應該使用<xref:System.Text.UTF7Encoding.GetMaxCharCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="413a8-289">To calculate the maximum array size, the application should use <xref:System.Text.UTF7Encoding.GetMaxCharCount%2A>.</span></span> <span data-ttu-id="413a8-290"><xref:System.Text.UTF7Encoding.GetCharCount%2A>方法通常可讓較少的記憶體配置而<xref:System.Text.UTF7Encoding.GetMaxCharCount%2A>方法通常執行速度更快。</span><span class="sxs-lookup"><span data-stu-id="413a8-290">The <xref:System.Text.UTF7Encoding.GetCharCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.UTF7Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="413a8-291">下列程式碼範例示範如何使用<xref:System.Text.UTF7Encoding.GetCharCount%2A>解碼位元組陣列中的項目範圍所產生的方法，以傳回的字元數。</span><span class="sxs-lookup"><span data-stu-id="413a8-291">The following code example demonstrates how to use the <xref:System.Text.UTF7Encoding.GetCharCount%2A> method to return the number of characters produced by decoding a range of elements in a byte array.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.GetCharCount Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetCharCount Example/CPP/getcharcount-byte[]-int32-int32.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.GetCharCount Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetCharCount Example/CS/getcharcount-byte[]-int32-int32.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.GetCharCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetCharCount Example/VB/getcharcount-byte[]-int32-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="413a8-292"><paramref name="bytes" /> 是 <see langword="null" /> (<see langword="Nothing" />)。</span><span class="sxs-lookup"><span data-stu-id="413a8-292"><paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="413a8-293"><paramref name="index" /> 或 <paramref name="count" /> 小於零。</span><span class="sxs-lookup"><span data-stu-id="413a8-293"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="413a8-294">-或-</span><span class="sxs-lookup"><span data-stu-id="413a8-294">-or-</span></span> 
 <span data-ttu-id="413a8-295"><paramref name="index" /> 與 <paramref name="count" /> 不代表 <paramref name="bytes" /> 中有效的範圍。</span><span class="sxs-lookup"><span data-stu-id="413a8-295"><paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span></span>  
  
<span data-ttu-id="413a8-296">-或-</span><span class="sxs-lookup"><span data-stu-id="413a8-296">-or-</span></span> 
<span data-ttu-id="413a8-297">所產生的字元數目大於可用整數傳回的數目上限。</span><span class="sxs-lookup"><span data-stu-id="413a8-297">The resulting number of characters is greater than the maximum number that can be returned as an int.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="413a8-298">發生後援 (如需完整說明，請參閱 [.NET Framework 中的字元編碼](~/docs/standard/base-types/character-encoding.md))</span><span class="sxs-lookup"><span data-stu-id="413a8-298">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="413a8-299">-和-</span><span class="sxs-lookup"><span data-stu-id="413a8-299">-and-</span></span> 
 <span data-ttu-id="413a8-300"><see cref="P:System.Text.Encoding.DecoderFallback" /> 設定為 <see cref="T:System.Text.DecoderExceptionFallback" />。</span><span class="sxs-lookup"><span data-stu-id="413a8-300"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="Overload:System.Text.UTF7Encoding.GetChars" />
        <altmember cref="M:System.Text.UTF7Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF7Encoding.GetDecoder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetChars">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="413a8-301">將位元組序列解碼成一組字元。</span><span class="sxs-lookup"><span data-stu-id="413a8-301">Decodes a sequence of bytes into a set of characters.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override int GetChars (byte* bytes, int byteCount, char* chars, int charCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetChars(unsigned int8* bytes, int32 byteCount, char* chars, int32 charCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF7Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetChars(System::Byte* bytes, int byteCount, char* chars, int charCount);" />
      <MemberSignature Language="F#" Value="override this.GetChars : nativeptr&lt;byte&gt; * int * nativeptr&lt;char&gt; * int -&gt; int" Usage="uTF7Encoding.GetChars (bytes, byteCount, chars, charCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="byteCount" Type="System.Int32" />
        <Parameter Name="chars" Type="System.Char*" />
        <Parameter Name="charCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="413a8-302">要解碼的第一個位元組指標。</span><span class="sxs-lookup"><span data-stu-id="413a8-302">A pointer to the first byte to decode.</span></span></param>
        <param name="byteCount"><span data-ttu-id="413a8-303">要解碼的位元組數。</span><span class="sxs-lookup"><span data-stu-id="413a8-303">The number of bytes to decode.</span></span></param>
        <param name="chars"><span data-ttu-id="413a8-304">開始寫入產生的一組字元之位置指標。</span><span class="sxs-lookup"><span data-stu-id="413a8-304">A pointer to the location at which to start writing the resulting set of characters.</span></span></param>
        <param name="charCount"><span data-ttu-id="413a8-305">要寫入的最大字元數。</span><span class="sxs-lookup"><span data-stu-id="413a8-305">The maximum number of characters to write.</span></span></param>
        <summary><span data-ttu-id="413a8-306">將起始於指定位元組指標的位元組序列解碼成一組字元；儲存該組字元時，係以指定的字元指標為起始點。</span><span class="sxs-lookup"><span data-stu-id="413a8-306">Decodes a sequence of bytes starting at the specified byte pointer into a set of characters that are stored starting at the specified character pointer.</span></span></summary>
        <returns><span data-ttu-id="413a8-307">在 <paramref name="chars" /> 所表示的位置上寫入的實際字元數。</span><span class="sxs-lookup"><span data-stu-id="413a8-307">The actual number of characters written at the location indicated by <paramref name="chars" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="413a8-308">若要計算所需的確切的陣列大小<xref:System.Text.UTF7Encoding.GetChars%2A>若要儲存產生的字元，使用<xref:System.Text.UTF7Encoding.GetCharCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="413a8-308">To calculate the exact array size required by <xref:System.Text.UTF7Encoding.GetChars%2A> to store the resulting characters, use <xref:System.Text.UTF7Encoding.GetCharCount%2A>.</span></span> <span data-ttu-id="413a8-309">若要計算最大陣列大小，應用程式應該使用<xref:System.Text.UTF7Encoding.GetMaxCharCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="413a8-309">To calculate the maximum array size, the application should use <xref:System.Text.UTF7Encoding.GetMaxCharCount%2A>.</span></span> <span data-ttu-id="413a8-310"><xref:System.Text.UTF7Encoding.GetCharCount%2A>方法通常可讓較少的記憶體配置而<xref:System.Text.UTF7Encoding.GetMaxCharCount%2A>方法通常執行速度更快。</span><span class="sxs-lookup"><span data-stu-id="413a8-310">The <xref:System.Text.UTF7Encoding.GetCharCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.UTF7Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="413a8-311">要轉換，例如，從資料流讀取資料的資料可能僅適用於循序區塊。</span><span class="sxs-lookup"><span data-stu-id="413a8-311">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="413a8-312">在此情況下，或如果資料量太大，它必須分割成較小的區塊，應該使用應用程式<xref:System.Text.Decoder>或<xref:System.Text.Encoder>所提供<xref:System.Text.UTF7Encoding.GetDecoder%2A>方法或<xref:System.Text.UTF7Encoding.GetEncoder%2A>方法，分別。</span><span class="sxs-lookup"><span data-stu-id="413a8-312">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UTF7Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF7Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="413a8-313"><xref:System.Text.UTF7Encoding> 不會提供錯誤偵測。</span><span class="sxs-lookup"><span data-stu-id="413a8-313"><xref:System.Text.UTF7Encoding> does not provide error detection.</span></span> <span data-ttu-id="413a8-314">當遇到無效的位元組時，<xref:System.Text.UTF7Encoding>一般都會發出的無效位元組。</span><span class="sxs-lookup"><span data-stu-id="413a8-314">When invalid bytes are encountered, <xref:System.Text.UTF7Encoding> generally emits the invalid bytes.</span></span> <span data-ttu-id="413a8-315">如果一個位元組值大於 0x7F 十六進位，位元組值是以零擴充成 Unicode 字元，結果會儲存在`chars`終止陣列，以及任何移位序列。</span><span class="sxs-lookup"><span data-stu-id="413a8-315">If a byte is larger than hexadecimal 0x7F, the byte value is zero-extended into a Unicode character, the result is stored in the `chars` array, and any shift sequence is terminated.</span></span> <span data-ttu-id="413a8-316">例如，如果要編碼的位元組是十六進位 0x81，產生的字元是 U + 0081。</span><span class="sxs-lookup"><span data-stu-id="413a8-316">For example, if the byte to encode is hexadecimal 0x81, the resulting character is U+0081.</span></span> <span data-ttu-id="413a8-317">基於安全性理由，您的應用程式，建議您使用<xref:System.Text.UTF8Encoding>， <xref:System.Text.UnicodeEncoding>，或<xref:System.Text.UTF32Encoding>並啟用錯誤偵測。</span><span class="sxs-lookup"><span data-stu-id="413a8-317">For security reasons, your applications are recommended to use <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, or <xref:System.Text.UTF32Encoding> and enable error detection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="413a8-318"><paramref name="bytes" /> 是 <see langword="null" /> (<see langword="Nothing" />)。</span><span class="sxs-lookup"><span data-stu-id="413a8-318"><paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span></span>  
  
<span data-ttu-id="413a8-319">-或-</span><span class="sxs-lookup"><span data-stu-id="413a8-319">-or-</span></span> 
 <span data-ttu-id="413a8-320"><paramref name="chars" /> 是 <see langword="null" /> (<see langword="Nothing" />)。</span><span class="sxs-lookup"><span data-stu-id="413a8-320"><paramref name="chars" /> is <see langword="null" /> (<see langword="Nothing" />).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="413a8-321"><paramref name="byteCount" /> 或 <paramref name="charCount" /> 小於零。</span><span class="sxs-lookup"><span data-stu-id="413a8-321"><paramref name="byteCount" /> or <paramref name="charCount" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="413a8-322"><paramref name="charCount" /> 小於結果字元數。</span><span class="sxs-lookup"><span data-stu-id="413a8-322"><paramref name="charCount" /> is less than the resulting number of characters.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="413a8-323">發生後援 (如需完整說明，請參閱 [.NET Framework 中的字元編碼](~/docs/standard/base-types/character-encoding.md))</span><span class="sxs-lookup"><span data-stu-id="413a8-323">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="413a8-324">-和-</span><span class="sxs-lookup"><span data-stu-id="413a8-324">-and-</span></span> 
 <span data-ttu-id="413a8-325"><see cref="P:System.Text.Encoding.DecoderFallback" /> 設定為 <see cref="T:System.Text.DecoderExceptionFallback" />。</span><span class="sxs-lookup"><span data-stu-id="413a8-325"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="413a8-326">需要完全信任立即呼叫端。</span><span class="sxs-lookup"><span data-stu-id="413a8-326">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="413a8-327">此成員不能由部分信任或不透明的程式碼。</span><span class="sxs-lookup"><span data-stu-id="413a8-327">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Text.UTF7Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF7Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF7Encoding.GetDecoder" />
        <altmember cref="M:System.Text.UTF7Encoding.GetString(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override int GetChars (byte[] bytes, int byteIndex, int byteCount, char[] chars, int charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetChars(unsigned int8[] bytes, int32 byteIndex, int32 byteCount, char[] chars, int32 charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF7Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChars (bytes As Byte(), byteIndex As Integer, byteCount As Integer, chars As Char(), charIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetChars(cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex, int byteCount, cli::array &lt;char&gt; ^ chars, int charIndex);" />
      <MemberSignature Language="F#" Value="override this.GetChars : byte[] * int * int * char[] * int -&gt; int" Usage="uTF7Encoding.GetChars (bytes, byteIndex, byteCount, chars, charIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
        <Parameter Name="byteCount" Type="System.Int32" />
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="charIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="413a8-328">包含要解碼之位元組序列的位元組陣列。</span><span class="sxs-lookup"><span data-stu-id="413a8-328">The byte array containing the sequence of bytes to decode.</span></span></param>
        <param name="byteIndex"><span data-ttu-id="413a8-329">要解碼的第一個位元組索引。</span><span class="sxs-lookup"><span data-stu-id="413a8-329">The index of the first byte to decode.</span></span></param>
        <param name="byteCount"><span data-ttu-id="413a8-330">要解碼的位元組數。</span><span class="sxs-lookup"><span data-stu-id="413a8-330">The number of bytes to decode.</span></span></param>
        <param name="chars"><span data-ttu-id="413a8-331">包含產生的一組字元之字元陣列。</span><span class="sxs-lookup"><span data-stu-id="413a8-331">The character array to contain the resulting set of characters.</span></span></param>
        <param name="charIndex"><span data-ttu-id="413a8-332">要開始寫入產生的一組字元之索引。</span><span class="sxs-lookup"><span data-stu-id="413a8-332">The index at which to start writing the resulting set of characters.</span></span></param>
        <summary><span data-ttu-id="413a8-333">將指定位元組陣列中的位元組序列解碼成指定的字元陣列。</span><span class="sxs-lookup"><span data-stu-id="413a8-333">Decodes a sequence of bytes from the specified byte array into the specified character array.</span></span></summary>
        <returns><span data-ttu-id="413a8-334">寫入 <paramref name="chars" /> 的實際字元數。</span><span class="sxs-lookup"><span data-stu-id="413a8-334">The actual number of characters written into <paramref name="chars" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="413a8-335">若要計算所需的確切的陣列大小<xref:System.Text.UTF7Encoding.GetChars%2A>若要儲存產生的字元，使用<xref:System.Text.UTF7Encoding.GetCharCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="413a8-335">To calculate the exact array size required by <xref:System.Text.UTF7Encoding.GetChars%2A> to store the resulting characters, use <xref:System.Text.UTF7Encoding.GetCharCount%2A>.</span></span> <span data-ttu-id="413a8-336">若要計算最大陣列大小，應用程式應該使用<xref:System.Text.UTF7Encoding.GetMaxCharCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="413a8-336">To calculate the maximum array size, the application should use <xref:System.Text.UTF7Encoding.GetMaxCharCount%2A>.</span></span> <span data-ttu-id="413a8-337"><xref:System.Text.UTF7Encoding.GetCharCount%2A>方法通常可讓較少的記憶體配置而<xref:System.Text.UTF7Encoding.GetMaxCharCount%2A>方法通常執行速度更快。</span><span class="sxs-lookup"><span data-stu-id="413a8-337">The <xref:System.Text.UTF7Encoding.GetCharCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.UTF7Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="413a8-338">要轉換，例如，從資料流讀取資料的資料可能僅適用於循序區塊。</span><span class="sxs-lookup"><span data-stu-id="413a8-338">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="413a8-339">在此情況下，或如果資料量太大，它必須分割成較小的區塊，應該使用應用程式<xref:System.Text.Decoder>或<xref:System.Text.Encoder>所提供<xref:System.Text.UTF7Encoding.GetDecoder%2A>方法或<xref:System.Text.UTF7Encoding.GetEncoder%2A>方法，分別。</span><span class="sxs-lookup"><span data-stu-id="413a8-339">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UTF7Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF7Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="413a8-340"><xref:System.Text.UTF7Encoding> 不會提供錯誤偵測。</span><span class="sxs-lookup"><span data-stu-id="413a8-340"><xref:System.Text.UTF7Encoding> does not provide error detection.</span></span> <span data-ttu-id="413a8-341">當遇到無效的位元組時，<xref:System.Text.UTF7Encoding>一般都會發出的無效位元組。</span><span class="sxs-lookup"><span data-stu-id="413a8-341">When invalid bytes are encountered, <xref:System.Text.UTF7Encoding> generally emits the invalid bytes.</span></span> <span data-ttu-id="413a8-342">如果一個位元組值大於 0x7F 十六進位，位元組值是以零擴充成 Unicode 字元，結果會儲存在`chars`終止陣列，以及任何移位序列。</span><span class="sxs-lookup"><span data-stu-id="413a8-342">If a byte is larger than hexadecimal 0x7F, the byte value is zero-extended into a Unicode character, the result is stored in the `chars` array, and any shift sequence is terminated.</span></span> <span data-ttu-id="413a8-343">例如，如果要編碼的位元組是十六進位 0x81，產生的字元是 U + 0081。</span><span class="sxs-lookup"><span data-stu-id="413a8-343">For example, if the byte to encode is hexadecimal 0x81, the resulting character is U+0081.</span></span> <span data-ttu-id="413a8-344">基於安全性理由，您的應用程式，建議您使用<xref:System.Text.UTF8Encoding>， <xref:System.Text.UnicodeEncoding>，或<xref:System.Text.UTF32Encoding>並啟用錯誤偵測。</span><span class="sxs-lookup"><span data-stu-id="413a8-344">For security reasons, your applications are recommended to use <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, or <xref:System.Text.UTF32Encoding> and enable error detection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="413a8-345">下列程式碼範例示範如何使用<xref:System.Text.UTF7Encoding.GetChars%2A>方法來解碼位元組陣列中的項目範圍，並將結果儲存在字元陣列。</span><span class="sxs-lookup"><span data-stu-id="413a8-345">The following code example demonstrates how to use the <xref:System.Text.UTF7Encoding.GetChars%2A> method to decode a range of elements in a byte array and store the result in a character array.</span></span>  
  
 [!code-cpp[System.Text.UTF7Encoding.GetChars Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF7Encoding.GetChars Example/CPP/getchars-byte[]-int32-int32-char[]-int32.cpp#1)]
 [!code-csharp[System.Text.UTF7Encoding.GetChars Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF7Encoding.GetChars Example/CS/getchars-byte[]-int32-int32-char[]-int32.cs#1)]
 [!code-vb[System.Text.UTF7Encoding.GetChars Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF7Encoding.GetChars Example/VB/getchars-byte[]-int32-int32-char[]-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="413a8-346"><paramref name="bytes" /> 是 <see langword="null" /> (<see langword="Nothing" />)。</span><span class="sxs-lookup"><span data-stu-id="413a8-346"><paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span></span>  
  
<span data-ttu-id="413a8-347">-或-</span><span class="sxs-lookup"><span data-stu-id="413a8-347">-or-</span></span> 
 <span data-ttu-id="413a8-348"><paramref name="chars" /> 是 <see langword="null" /> (<see langword="Nothing" />)。</span><span class="sxs-lookup"><span data-stu-id="413a8-348"><paramref name="chars" /> is <see langword="null" /> (<see langword="Nothing" />).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="413a8-349"><paramref name="byteIndex" />、<paramref name="byteCount" /> 或 <paramref name="charIndex" /> 小於零。</span><span class="sxs-lookup"><span data-stu-id="413a8-349"><paramref name="byteIndex" /> or <paramref name="byteCount" /> or <paramref name="charIndex" /> is less than zero.</span></span>  
  
<span data-ttu-id="413a8-350">-或-</span><span class="sxs-lookup"><span data-stu-id="413a8-350">-or-</span></span> 
 <span data-ttu-id="413a8-351"><paramref name="byteindex" /> 與 <paramref name="byteCount" /> 不代表 <paramref name="bytes" /> 中有效的範圍。</span><span class="sxs-lookup"><span data-stu-id="413a8-351"><paramref name="byteindex" /> and <paramref name="byteCount" /> do not denote a valid range in <paramref name="bytes" />.</span></span>  
  
<span data-ttu-id="413a8-352">-或-</span><span class="sxs-lookup"><span data-stu-id="413a8-352">-or-</span></span> 
 <span data-ttu-id="413a8-353"><paramref name="charIndex" /> 在 <paramref name="chars" /> 中不是有效的索引。</span><span class="sxs-lookup"><span data-stu-id="413a8-353"><paramref name="charIndex" /> is not a valid index in <paramref name="chars" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="413a8-354">從 <paramref name="chars" /> 到陣列結尾處，<paramref name="charIndex" /> 沒有足夠的容量容納結果字元。</span><span class="sxs-lookup"><span data-stu-id="413a8-354"><paramref name="chars" /> does not have enough capacity from <paramref name="charIndex" /> to the end of the array to accommodate the resulting characters.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="413a8-355">發生後援 (如需完整說明，請參閱 [.NET Framework 中的字元編碼](~/docs/standard/base-types/character-encoding.md))</span><span class="sxs-lookup"><span data-stu-id="413a8-355">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="413a8-356">-和-</span><span class="sxs-lookup"><span data-stu-id="413a8-356">-and-</span></span> 
 <span data-ttu-id="413a8-357"><see cref="P:System.Text.Encoding.DecoderFallback" /> 設定為 <see cref="T:System.Text.DecoderExceptionFallback" />。</span><span class="sxs-lookup"><span data-stu-id="413a8-357"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UTF7Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF7Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF7Encoding.GetDecoder" />
        <altmember cref="M:System.Text.UTF7Encoding.GetString(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetDecoder">
      <MemberSignature Language="C#" Value="public override System.Text.Decoder GetDecoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Text.Decoder GetDecoder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF7Encoding.GetDecoder" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDecoder () As Decoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Text::Decoder ^ GetDecoder();" />
      <MemberSignature Language="F#" Value="override this.GetDecoder : unit -&gt; System.Text.Decoder" Usage="uTF7Encoding.GetDecoder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Decoder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="413a8-358">取得可以將以 UTF-7 編碼的位元組序列轉換成 Unicode 字元序列的解碼器。</span><span class="sxs-lookup"><span data-stu-id="413a8-358">Obtains a decoder that converts a UTF-7 encoded sequence of bytes into a sequence of Unicode characters.</span></span></summary>
        <returns><span data-ttu-id="413a8-359"><see cref="T:System.Text.Decoder" />，可以將以 UTF-7 編碼的位元組序列轉換成 Unicode 字元序列。</span><span class="sxs-lookup"><span data-stu-id="413a8-359">A <see cref="T:System.Text.Decoder" /> that converts a UTF-7 encoded sequence of bytes into a sequence of Unicode characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="413a8-360"><xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType>方法會將序列的位元組的區塊轉換成循序區塊中的字元，以類似的方式<xref:System.Text.UTF7Encoding.GetChars%2A>這個類別的方法。</span><span class="sxs-lookup"><span data-stu-id="413a8-360">The <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> method converts sequential blocks of bytes into sequential blocks of characters, in a manner similar to the <xref:System.Text.UTF7Encoding.GetChars%2A> method of this class.</span></span> <span data-ttu-id="413a8-361">不過，<xref:System.Text.Decoder>維護呼叫，因此它可以正確解碼位元組序列跨越區塊之間的狀態資訊。</span><span class="sxs-lookup"><span data-stu-id="413a8-361">However, a <xref:System.Text.Decoder> maintains state information between calls so it can correctly decode byte sequences that span blocks.</span></span> <span data-ttu-id="413a8-362"><xref:System.Text.Decoder>也會保留尾端位元組的資料區塊的結尾，並在下一步 的解碼作業中使用尾端位元組。</span><span class="sxs-lookup"><span data-stu-id="413a8-362">The <xref:System.Text.Decoder> also preserves trailing bytes at the end of data blocks and uses the trailing bytes in the next decoding operation.</span></span> <span data-ttu-id="413a8-363">因此，<xref:System.Text.UTF7Encoding.GetDecoder%2A>和<xref:System.Text.UTF7Encoding.GetEncoder%2A>適合用於網路傳輸和檔案作業，因為這些作業經常要處理的資料，而不是完整的資料流區塊。</span><span class="sxs-lookup"><span data-stu-id="413a8-363">Therefore, <xref:System.Text.UTF7Encoding.GetDecoder%2A> and <xref:System.Text.UTF7Encoding.GetEncoder%2A> are useful for network transmission and file operations, because those operations often deal with blocks of data instead of a complete data stream.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="413a8-364">下列程式碼範例示範如何使用<xref:System.Text.UTF7Encoding.GetDecoder%2A>方法，以取得轉換 UTF-7、utf 解碼器編碼成字元序列的位元組。</span><span class="sxs-lookup"><span data-stu-id="413a8-364">The following code example demonstrates how to use the <xref:System.Text.UTF7Encoding.GetDecoder%2A> method to obtain a decoder to convert the UTF-7 encoded bytes into a sequence of characters.</span></span>  
  
 [!code-cpp[System.Text.UTF7Encoding.GetDecoder Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF7Encoding.GetDecoder Example/CPP/getdecoder-.cpp#1)]
 [!code-csharp[System.Text.UTF7Encoding.GetDecoder Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF7Encoding.GetDecoder Example/CS/getdecoder-.cs#1)]
 [!code-vb[System.Text.UTF7Encoding.GetDecoder Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF7Encoding.GetDecoder Example/VB/getdecoder-.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Decoder" />
        <altmember cref="M:System.Text.UTF7Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="M:System.Text.UTF7Encoding.GetString(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF7Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF7Encoding.GetEncoder" />
        <related type="Article" href="~/docs/standard/base-types/character-encoding.md"><span data-ttu-id="413a8-365">了解編碼</span><span class="sxs-lookup"><span data-stu-id="413a8-365">Understanding Encodings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetEncoder">
      <MemberSignature Language="C#" Value="public override System.Text.Encoder GetEncoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Text.Encoder GetEncoder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF7Encoding.GetEncoder" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEncoder () As Encoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Text::Encoder ^ GetEncoder();" />
      <MemberSignature Language="F#" Value="override this.GetEncoder : unit -&gt; System.Text.Encoder" Usage="uTF7Encoding.GetEncoder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="413a8-366">取得可以將 Unicode 字元序列轉換成以 UTF-7 編碼的位元組序列的編碼器。</span><span class="sxs-lookup"><span data-stu-id="413a8-366">Obtains an encoder that converts a sequence of Unicode characters into a UTF-7 encoded sequence of bytes.</span></span></summary>
        <returns><span data-ttu-id="413a8-367"><see cref="T:System.Text.Encoder" />，可以將 Unicode 字元序列轉換成以 UTF-7 編碼的位元組序列。</span><span class="sxs-lookup"><span data-stu-id="413a8-367">A <see cref="T:System.Text.Encoder" /> that converts a sequence of Unicode characters into a UTF-7 encoded sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="413a8-368"><xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType>方法會將序列的位元組的區塊轉換成循序區塊中的字元，以類似的方式<xref:System.Text.UTF7Encoding.GetChars%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="413a8-368">The <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> method converts sequential blocks of bytes into sequential blocks of characters, in a manner similar to the <xref:System.Text.UTF7Encoding.GetChars%2A> method.</span></span> <span data-ttu-id="413a8-369">不過，<xref:System.Text.Decoder>維護呼叫，因此它可以正確解碼位元組序列跨越區塊之間的狀態資訊。</span><span class="sxs-lookup"><span data-stu-id="413a8-369">However, a <xref:System.Text.Decoder> maintains state information between calls so it can correctly decode byte sequences that span blocks.</span></span> <span data-ttu-id="413a8-370"><xref:System.Text.Decoder>也會保留尾端位元組的資料區塊的結尾，並在下一步 的解碼作業中使用尾端位元組。</span><span class="sxs-lookup"><span data-stu-id="413a8-370">The <xref:System.Text.Decoder> also preserves trailing bytes at the end of data blocks and uses the trailing bytes in the next decoding operation.</span></span> <span data-ttu-id="413a8-371">因此，<xref:System.Text.UTF7Encoding.GetDecoder%2A>和<xref:System.Text.UTF7Encoding.GetEncoder%2A>適合用於網路傳輸和檔案作業，因為這些作業經常要處理的資料，而不是完整的資料流區塊。</span><span class="sxs-lookup"><span data-stu-id="413a8-371">Therefore, <xref:System.Text.UTF7Encoding.GetDecoder%2A> and <xref:System.Text.UTF7Encoding.GetEncoder%2A> are useful for network transmission and file operations, because those operations often deal with blocks of data instead of a complete data stream.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="413a8-372">下列程式碼範例示範如何使用<xref:System.Text.UTF7Encoding.GetEncoder%2A>方法，以取得將字元序列轉換成 UTF-7、utf 編碼器編碼的位元組序列。</span><span class="sxs-lookup"><span data-stu-id="413a8-372">The following code example demonstrates how to use the <xref:System.Text.UTF7Encoding.GetEncoder%2A> method to obtain an encoder to convert a sequence of characters into a UTF-7 encoded sequence of bytes.</span></span>  
  
 [!code-cpp[System.Text.UTF7Encoding.GetEncoder Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF7Encoding.GetEncoder Example/CPP/getencoder-.cpp#1)]
 [!code-csharp[System.Text.UTF7Encoding.GetEncoder Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF7Encoding.GetEncoder Example/CS/getencoder-.cs#1)]
 [!code-vb[System.Text.UTF7Encoding.GetEncoder Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF7Encoding.GetEncoder Example/VB/getencoder-.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Encoder" />
        <altmember cref="M:System.Text.UTF7Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UTF7Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF7Encoding.GetDecoder" />
        <related type="Article" href="~/docs/standard/base-types/character-encoding.md"><span data-ttu-id="413a8-373">了解編碼</span><span class="sxs-lookup"><span data-stu-id="413a8-373">Understanding Encodings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF7Encoding.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="uTF7Encoding.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="413a8-374">傳回目前 <see cref="T:System.Text.UTF7Encoding" /> 物件的雜湊碼。</span><span class="sxs-lookup"><span data-stu-id="413a8-374">Returns the hash code for the current <see cref="T:System.Text.UTF7Encoding" /> object.</span></span></summary>
        <returns><span data-ttu-id="413a8-375">32 位元帶正負號的整數雜湊碼。</span><span class="sxs-lookup"><span data-stu-id="413a8-375">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="413a8-376">所傳回的值<xref:System.Text.UTF7Encoding.GetHashCode%2A>方法不適合用於區別其中<xref:System.Text.UTF7Encoding>從另一個物件。</span><span class="sxs-lookup"><span data-stu-id="413a8-376">The value returned by the <xref:System.Text.UTF7Encoding.GetHashCode%2A> method is not suitable for distinguishing one <xref:System.Text.UTF7Encoding> object from another.</span></span> <span data-ttu-id="413a8-377">如果您的應用程式需要唯一的雜湊程式碼，它應該覆寫<xref:System.Text.UTF7Encoding.GetHashCode%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="413a8-377">If your application needs a unique hash code, it should override the <xref:System.Text.UTF7Encoding.GetHashCode%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMaxByteCount">
      <MemberSignature Language="C#" Value="public override int GetMaxByteCount (int charCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMaxByteCount(int32 charCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF7Encoding.GetMaxByteCount(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMaxByteCount (charCount As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMaxByteCount(int charCount);" />
      <MemberSignature Language="F#" Value="override this.GetMaxByteCount : int -&gt; int" Usage="uTF7Encoding.GetMaxByteCount charCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charCount"><span data-ttu-id="413a8-378">要編碼的字元數。</span><span class="sxs-lookup"><span data-stu-id="413a8-378">The number of characters to encode.</span></span></param>
        <summary><span data-ttu-id="413a8-379">計算將指定數目的字元編碼所產生的最大位元組數目。</span><span class="sxs-lookup"><span data-stu-id="413a8-379">Calculates the maximum number of bytes produced by encoding the specified number of characters.</span></span></summary>
        <returns><span data-ttu-id="413a8-380">編碼指定字元數所產生的最大位元組數。</span><span class="sxs-lookup"><span data-stu-id="413a8-380">The maximum number of bytes produced by encoding the specified number of characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="413a8-381">若要計算所需的確切的陣列大小<xref:System.Text.UTF7Encoding.GetBytes%2A>來儲存產生的位元組，應用程式會使用<xref:System.Text.UTF7Encoding.GetByteCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="413a8-381">To calculate the exact array size required by <xref:System.Text.UTF7Encoding.GetBytes%2A> to store the resulting bytes, the application uses <xref:System.Text.UTF7Encoding.GetByteCount%2A>.</span></span> <span data-ttu-id="413a8-382">若要計算最大陣列大小，應用程式應該使用<xref:System.Text.UTF7Encoding.GetMaxByteCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="413a8-382">To calculate the maximum array size, the application should use <xref:System.Text.UTF7Encoding.GetMaxByteCount%2A>.</span></span> <span data-ttu-id="413a8-383"><xref:System.Text.UTF7Encoding.GetByteCount%2A>方法通常可讓較少的記憶體配置而<xref:System.Text.UTF7Encoding.GetMaxByteCount%2A>方法通常執行速度更快。</span><span class="sxs-lookup"><span data-stu-id="413a8-383">The <xref:System.Text.UTF7Encoding.GetByteCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.UTF7Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="413a8-384"><xref:System.Text.UTF7Encoding.GetMaxByteCount%2A> 是最壞情況的數字，包括目前所選最壞的情況<xref:System.Text.EncoderFallback>。</span><span class="sxs-lookup"><span data-stu-id="413a8-384"><xref:System.Text.UTF7Encoding.GetMaxByteCount%2A> is a worst-case number, including the worst case for the currently selected <xref:System.Text.EncoderFallback>.</span></span> <span data-ttu-id="413a8-385">如果後援會選擇使用可能很大的字串、<xref:System.Text.UTF7Encoding.GetMaxByteCount%2A>可以傳回較大的值。</span><span class="sxs-lookup"><span data-stu-id="413a8-385">If a fallback is chosen with a potentially large string, <xref:System.Text.UTF7Encoding.GetMaxByteCount%2A> can return large values.</span></span>  
  
 <span data-ttu-id="413a8-386">在大部分情況下，這個方法會傳回對小型字串合理的數字。</span><span class="sxs-lookup"><span data-stu-id="413a8-386">In most cases, this method returns reasonable numbers for small strings.</span></span> <span data-ttu-id="413a8-387">針對大型的字串，您可能選擇使用極大的緩衝區，少數的情況下，更合理的緩衝區已超出攔截錯誤。</span><span class="sxs-lookup"><span data-stu-id="413a8-387">For large strings, you might have to choose between using very large buffers and catching errors in the rare case that a more reasonable buffer is exceeded.</span></span> <span data-ttu-id="413a8-388">您也可以在不同的方法使用，請考慮<xref:System.Text.UTF7Encoding.GetByteCount%2A>或<xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="413a8-388">You might also want to consider a different approach using <xref:System.Text.UTF7Encoding.GetByteCount%2A> or <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="413a8-389">UTF-7、utf ASCII 資料，每個字元，一個位元組編碼效率很高時就非常沒有效率的其他資料。</span><span class="sxs-lookup"><span data-stu-id="413a8-389">While UTF-7 is very efficient at encoding ASCII data, one byte per character, it is extremely inefficient for other data.</span></span> <span data-ttu-id="413a8-390">如上述位<xref:System.Text.UTF7Encoding.GetMaxByteCount%2A>壞的情況下處理。</span><span class="sxs-lookup"><span data-stu-id="413a8-390">As remarked above, <xref:System.Text.UTF7Encoding.GetMaxByteCount%2A> deals with a worst case.</span></span> <span data-ttu-id="413a8-391">如果要編碼的資料大部分都是 ASCII，尤其是 ASCII 字元的叢集在一起，而且 UTF-7、utf 遠比這個方法所傳回的數字有效率建議。</span><span class="sxs-lookup"><span data-stu-id="413a8-391">If the data to be encoded is largely ASCII, and especially if the ASCII characters cluster together, UTF-7 is significantly more efficient than the number returned by this method suggests.</span></span>  
  
 <span data-ttu-id="413a8-392"><xref:System.Text.UTF7Encoding.GetMaxByteCount%2A> 沒有任何關聯<xref:System.Text.UTF7Encoding.GetChars%2A>。</span><span class="sxs-lookup"><span data-stu-id="413a8-392"><xref:System.Text.UTF7Encoding.GetMaxByteCount%2A> has no relation to <xref:System.Text.UTF7Encoding.GetChars%2A>.</span></span> <span data-ttu-id="413a8-393">如果您的應用程式需要類似的函式，以搭配<xref:System.Text.UTF7Encoding.GetChars%2A>，它應該使用<xref:System.Text.UTF7Encoding.GetMaxCharCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="413a8-393">If your application needs a similar function to use with <xref:System.Text.UTF7Encoding.GetChars%2A>, it should use <xref:System.Text.UTF7Encoding.GetMaxCharCount%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="413a8-394">`GetMaxByteCount(N)` 不一定是相同的值`N* GetMaxByteCount(1)`。</span><span class="sxs-lookup"><span data-stu-id="413a8-394">`GetMaxByteCount(N)` is not necessarily the same value as `N* GetMaxByteCount(1)`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="413a8-395">下列程式碼範例示範如何使用<xref:System.Text.UTF7Encoding.GetMaxByteCount%2A>方法傳回的編碼指定的字元數所需的位元組數目上限。</span><span class="sxs-lookup"><span data-stu-id="413a8-395">The following code example demonstrates how to use the <xref:System.Text.UTF7Encoding.GetMaxByteCount%2A> method to return the maximum number of bytes required to encode a specified number of characters.</span></span>  
  
 [!code-cpp[System.Text.UTF7Encoding.GetMaxByteCount Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF7Encoding.GetMaxByteCount Example/CPP/getmaxbytecount-int32.cpp#1)]
 [!code-csharp[System.Text.UTF7Encoding.GetMaxByteCount Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF7Encoding.GetMaxByteCount Example/CS/getmaxbytecount-int32.cs#1)]
 [!code-vb[System.Text.UTF7Encoding.GetMaxByteCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF7Encoding.GetMaxByteCount Example/VB/getmaxbytecount-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="413a8-396"><paramref name="charCount" /> 小於零。</span><span class="sxs-lookup"><span data-stu-id="413a8-396"><paramref name="charCount" /> is less than zero.</span></span>  
  
<span data-ttu-id="413a8-397">-或-</span><span class="sxs-lookup"><span data-stu-id="413a8-397">-or-</span></span> 
<span data-ttu-id="413a8-398">所產生的位元組數目大於可用整數傳回的數目上限。</span><span class="sxs-lookup"><span data-stu-id="413a8-398">The resulting number of bytes is greater than the maximum number that can be returned as an int.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="413a8-399">發生後援 (如需完整說明，請參閱 [.NET Framework 中的字元編碼](~/docs/standard/base-types/character-encoding.md))</span><span class="sxs-lookup"><span data-stu-id="413a8-399">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="413a8-400">-和-</span><span class="sxs-lookup"><span data-stu-id="413a8-400">-and-</span></span> 
 <span data-ttu-id="413a8-401"><see cref="P:System.Text.Encoding.EncoderFallback" /> 設定為 <see cref="T:System.Text.EncoderExceptionFallback" />。</span><span class="sxs-lookup"><span data-stu-id="413a8-401"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UTF7Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UTF7Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF7Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetMaxCharCount">
      <MemberSignature Language="C#" Value="public override int GetMaxCharCount (int byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMaxCharCount(int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF7Encoding.GetMaxCharCount(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMaxCharCount (byteCount As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMaxCharCount(int byteCount);" />
      <MemberSignature Language="F#" Value="override this.GetMaxCharCount : int -&gt; int" Usage="uTF7Encoding.GetMaxCharCount byteCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="byteCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="byteCount"><span data-ttu-id="413a8-402">要解碼的位元組數。</span><span class="sxs-lookup"><span data-stu-id="413a8-402">The number of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="413a8-403">計算將指定數目的位元組解碼所產生的最大字元數。</span><span class="sxs-lookup"><span data-stu-id="413a8-403">Calculates the maximum number of characters produced by decoding the specified number of bytes.</span></span></summary>
        <returns><span data-ttu-id="413a8-404">解碼指定位元組數所產生的最大字元數。</span><span class="sxs-lookup"><span data-stu-id="413a8-404">The maximum number of characters produced by decoding the specified number of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="413a8-405">若要計算所需的確切的陣列大小<xref:System.Text.UTF7Encoding.GetChars%2A>來儲存產生的字元，應用程式會使用<xref:System.Text.UTF7Encoding.GetCharCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="413a8-405">To calculate the exact array size required by <xref:System.Text.UTF7Encoding.GetChars%2A> to store the resulting characters, the application uses <xref:System.Text.UTF7Encoding.GetCharCount%2A>.</span></span> <span data-ttu-id="413a8-406">若要計算最大陣列大小，應用程式應該使用<xref:System.Text.UTF7Encoding.GetMaxCharCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="413a8-406">To calculate the maximum array size, the application should use <xref:System.Text.UTF7Encoding.GetMaxCharCount%2A>.</span></span> <span data-ttu-id="413a8-407"><xref:System.Text.UTF7Encoding.GetCharCount%2A>方法通常可讓較少的記憶體配置而<xref:System.Text.UTF7Encoding.GetMaxCharCount%2A>方法通常執行速度更快。</span><span class="sxs-lookup"><span data-stu-id="413a8-407">The <xref:System.Text.UTF7Encoding.GetCharCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.UTF7Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="413a8-408"><xref:System.Text.UTF7Encoding.GetMaxCharCount%2A> 是最壞情況的數字，包括目前所選最壞的情況<xref:System.Text.DecoderFallback>。</span><span class="sxs-lookup"><span data-stu-id="413a8-408"><xref:System.Text.UTF7Encoding.GetMaxCharCount%2A> is a worst-case number, including the worst case for the currently selected <xref:System.Text.DecoderFallback>.</span></span> <span data-ttu-id="413a8-409">如果後援會選擇使用可能很大的字串、<xref:System.Text.UTF7Encoding.GetMaxCharCount%2A>可以傳回較大的值。</span><span class="sxs-lookup"><span data-stu-id="413a8-409">If a fallback is chosen with a potentially large string, <xref:System.Text.UTF7Encoding.GetMaxCharCount%2A> can return large values.</span></span>  
  
 <span data-ttu-id="413a8-410">在大部分情況下，這個方法會傳回對小型字串合理的數字。</span><span class="sxs-lookup"><span data-stu-id="413a8-410">In most cases, this method returns reasonable numbers for small strings.</span></span> <span data-ttu-id="413a8-411">針對大型的字串，您可能選擇使用極大的緩衝區，少數的情況下，更合理的緩衝區已超出攔截錯誤。</span><span class="sxs-lookup"><span data-stu-id="413a8-411">For large strings, you might have to choose between using very large buffers and catching errors in the rare case that a more reasonable buffer is exceeded.</span></span> <span data-ttu-id="413a8-412">您也可以在不同的方法使用，請考慮<xref:System.Text.UTF7Encoding.GetCharCount%2A>或<xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="413a8-412">You might also want to consider a different approach using <xref:System.Text.UTF7Encoding.GetCharCount%2A> or <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="413a8-413"><xref:System.Text.UTF7Encoding.GetMaxCharCount%2A> 沒有任何關聯<xref:System.Text.UTF7Encoding.GetBytes%2A>。</span><span class="sxs-lookup"><span data-stu-id="413a8-413"><xref:System.Text.UTF7Encoding.GetMaxCharCount%2A> has no relation to <xref:System.Text.UTF7Encoding.GetBytes%2A>.</span></span> <span data-ttu-id="413a8-414">如果您的應用程式需要類似的函式，以搭配<xref:System.Text.UTF7Encoding.GetBytes%2A>，它應該使用<xref:System.Text.UTF7Encoding.GetMaxByteCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="413a8-414">If your application needs a similar function to use with <xref:System.Text.UTF7Encoding.GetBytes%2A>, it should use <xref:System.Text.UTF7Encoding.GetMaxByteCount%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="413a8-415">`GetMaxCharCount(N)` 不一定是相同的值`N* GetMaxCharCount(1)`。</span><span class="sxs-lookup"><span data-stu-id="413a8-415">`GetMaxCharCount(N)` is not necessarily the same value as `N* GetMaxCharCount(1)`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="413a8-416">下列程式碼範例示範如何使用<xref:System.Text.UTF7Encoding.GetMaxCharCount%2A>解碼指定的位元組數所產生的方法，以傳回的字元數上限。</span><span class="sxs-lookup"><span data-stu-id="413a8-416">The following code example demonstrates how to use the <xref:System.Text.UTF7Encoding.GetMaxCharCount%2A> method to return the maximum number of characters produced by decoding a specified number of bytes.</span></span>  
  
 [!code-cpp[System.Text.UTF7Encoding.GetMaxCharCount Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF7Encoding.GetMaxCharCount Example/CPP/getmaxcharcount-int32.cpp#1)]
 [!code-csharp[System.Text.UTF7Encoding.GetMaxCharCount Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF7Encoding.GetMaxCharCount Example/CS/getmaxcharcount-int32.cs#1)]
 [!code-vb[System.Text.UTF7Encoding.GetMaxCharCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF7Encoding.GetMaxCharCount Example/VB/getmaxcharcount-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="413a8-417"><paramref name="byteCount" /> 小於零。</span><span class="sxs-lookup"><span data-stu-id="413a8-417"><paramref name="byteCount" /> is less than zero.</span></span>  
  
<span data-ttu-id="413a8-418">-或-</span><span class="sxs-lookup"><span data-stu-id="413a8-418">-or-</span></span> 
<span data-ttu-id="413a8-419">所產生的字元數目大於可用整數傳回的數目上限。</span><span class="sxs-lookup"><span data-stu-id="413a8-419">The resulting number of characters is greater than the maximum number that can be returned as an int.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="413a8-420">發生後援 (如需完整說明，請參閱 [.NET Framework 中的字元編碼](~/docs/standard/base-types/character-encoding.md))</span><span class="sxs-lookup"><span data-stu-id="413a8-420">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="413a8-421">-和-</span><span class="sxs-lookup"><span data-stu-id="413a8-421">-and-</span></span> 
 <span data-ttu-id="413a8-422"><see cref="P:System.Text.Encoding.DecoderFallback" /> 設定為 <see cref="T:System.Text.DecoderExceptionFallback" />。</span><span class="sxs-lookup"><span data-stu-id="413a8-422"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UTF7Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="M:System.Text.UTF7Encoding.GetString(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF7Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF7Encoding.GetDecoder" />
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public override string GetString (byte[] bytes, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetString(unsigned int8[] bytes, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF7Encoding.GetString(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetString (bytes As Byte(), index As Integer, count As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetString(cli::array &lt;System::Byte&gt; ^ bytes, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.GetString : byte[] * int * int -&gt; string" Usage="uTF7Encoding.GetString (bytes, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="413a8-423">包含要解碼之位元組序列的位元組陣列。</span><span class="sxs-lookup"><span data-stu-id="413a8-423">The byte array containing the sequence of bytes to decode.</span></span></param>
        <param name="index"><span data-ttu-id="413a8-424">要解碼的第一個位元組索引。</span><span class="sxs-lookup"><span data-stu-id="413a8-424">The index of the first byte to decode.</span></span></param>
        <param name="count"><span data-ttu-id="413a8-425">要解碼的位元組數。</span><span class="sxs-lookup"><span data-stu-id="413a8-425">The number of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="413a8-426">將位元組陣列中的某一段位元組範圍解碼成字串。</span><span class="sxs-lookup"><span data-stu-id="413a8-426">Decodes a range of bytes from a byte array into a string.</span></span></summary>
        <returns><span data-ttu-id="413a8-427"><see cref="T:System.String" />，包含將指定之位元組序列解碼的結果。</span><span class="sxs-lookup"><span data-stu-id="413a8-427">A <see cref="T:System.String" /> containing the results of decoding the specified sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="413a8-428">要轉換，例如，從資料流讀取資料的資料可能僅適用於循序區塊。</span><span class="sxs-lookup"><span data-stu-id="413a8-428">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="413a8-429">在此情況下，或如果資料量太大，它必須分割成較小的區塊，應該使用應用程式<xref:System.Text.Decoder>或<xref:System.Text.Encoder>所提供<xref:System.Text.UTF7Encoding.GetDecoder%2A>方法或<xref:System.Text.UTF7Encoding.GetEncoder%2A>方法，分別。</span><span class="sxs-lookup"><span data-stu-id="413a8-429">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UTF7Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF7Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="413a8-430"><xref:System.Text.UTF7Encoding> 不會提供錯誤偵測。</span><span class="sxs-lookup"><span data-stu-id="413a8-430"><xref:System.Text.UTF7Encoding> does not provide error detection.</span></span> <span data-ttu-id="413a8-431">當遇到無效的位元組時，<xref:System.Text.UTF7Encoding>一般都會發出的無效位元組。</span><span class="sxs-lookup"><span data-stu-id="413a8-431">When invalid bytes are encountered, <xref:System.Text.UTF7Encoding> generally emits the invalid bytes.</span></span> <span data-ttu-id="413a8-432">如果一個位元組值大於 0x7F 十六進位，位元組值是以零擴充成 Unicode 字元，結果會儲存在`chars`終止陣列，以及任何移位序列。</span><span class="sxs-lookup"><span data-stu-id="413a8-432">If a byte is larger than hexadecimal 0x7F, the byte value is zero-extended into a Unicode character, the result is stored in the `chars` array, and any shift sequence is terminated.</span></span> <span data-ttu-id="413a8-433">例如，如果要編碼的位元組是十六進位 0x81，產生的字元是 U + 0081。</span><span class="sxs-lookup"><span data-stu-id="413a8-433">For example, if the byte to encode is hexadecimal 0x81, the resulting character is U+0081.</span></span> <span data-ttu-id="413a8-434">基於安全性理由，您的應用程式，建議您使用<xref:System.Text.UTF8Encoding>， <xref:System.Text.UnicodeEncoding>，或<xref:System.Text.UTF32Encoding>並啟用錯誤偵測。</span><span class="sxs-lookup"><span data-stu-id="413a8-434">For security reasons, your applications are recommended to use <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, or <xref:System.Text.UTF32Encoding> and enable error detection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="413a8-435">下列程式碼範例會將字串編碼成位元組陣列，然後再將位元組解碼回字串。</span><span class="sxs-lookup"><span data-stu-id="413a8-435">The following code example encodes a string into an array of bytes, and then decodes the bytes back into a string.</span></span>  
  
 [!code-cpp[System.Text.UTF7Encoding.getstring#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF7Encoding.getstring/CPP/getstring.cpp#1)]
 [!code-csharp[System.Text.UTF7Encoding.getstring#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF7Encoding.getstring/CS/getstring.cs#1)]
 [!code-vb[System.Text.UTF7Encoding.getstring#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF7Encoding.getstring/VB/getstring.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="413a8-436"><paramref name="bytes" /> 是 <see langword="null" /> (<see langword="Nothing" />)。</span><span class="sxs-lookup"><span data-stu-id="413a8-436"><paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="413a8-437"><paramref name="index" /> 或 <paramref name="count" /> 小於零。</span><span class="sxs-lookup"><span data-stu-id="413a8-437"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="413a8-438">-或-</span><span class="sxs-lookup"><span data-stu-id="413a8-438">-or-</span></span> 
 <span data-ttu-id="413a8-439"><paramref name="index" /> 與 <paramref name="count" /> 不代表 <paramref name="bytes" /> 中有效的範圍。</span><span class="sxs-lookup"><span data-stu-id="413a8-439"><paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="413a8-440">發生後援 (如需更完整的說明，請參閱 [.NET Framework 中的字元編碼方式](~/docs/standard/base-types/character-encoding.md))</span><span class="sxs-lookup"><span data-stu-id="413a8-440">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span></span> 
<span data-ttu-id="413a8-441">-和-</span><span class="sxs-lookup"><span data-stu-id="413a8-441">-and-</span></span> 
 <span data-ttu-id="413a8-442"><see cref="P:System.Text.Encoding.DecoderFallback" /> 設定為 <see cref="T:System.Text.DecoderExceptionFallback" />。</span><span class="sxs-lookup"><span data-stu-id="413a8-442"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UTF7Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="M:System.Text.UTF7Encoding.GetDecoder" />
        <altmember cref="M:System.Text.UTF7Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF7Encoding.GetMaxCharCount(System.Int32)" />
      </Docs>
    </Member>
  </Members>
</Type>