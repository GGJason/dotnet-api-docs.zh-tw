<Type Name="UTF32Encoding" FullName="System.Text.UTF32Encoding">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="706a2c3142d40fb718fd8d71fd3876b753ca6f98" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39850703" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class UTF32Encoding : System.Text.Encoding" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit UTF32Encoding extends System.Text.Encoding" />
  <TypeSignature Language="DocId" Value="T:System.Text.UTF32Encoding" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class UTF32Encoding&#xA;Inherits Encoding" />
  <TypeSignature Language="C++ CLI" Value="public ref class UTF32Encoding sealed : System::Text::Encoding" />
  <TypeSignature Language="F#" Value="type UTF32Encoding = class&#xA;    inherit Encoding" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Text.Encoding</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="f6320-101">代表 Unicode 字元的 UTF-32 編碼方式。</span>
      <span class="sxs-lookup">
        <span data-stu-id="f6320-101">Represents a UTF-32 encoding of Unicode characters.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6320-102">編碼是將一組 Unicode 字元轉換成位元組序列的處理程序。</span><span class="sxs-lookup"><span data-stu-id="f6320-102">Encoding is the process of transforming a set of Unicode characters into a sequence of bytes.</span></span> <span data-ttu-id="f6320-103">解碼則是將編碼的位元組序列轉換成一組 Unicode 字元的程序。</span><span class="sxs-lookup"><span data-stu-id="f6320-103">Decoding is the process of transforming a sequence of encoded bytes into a set of Unicode characters.</span></span>  
  
 <span data-ttu-id="f6320-104">[Unicode 標準](http://go.microsoft.com/fwlink/?linkid=37123)給每個支援的指令碼中的每個字元的字碼指標 （數字）。</span><span class="sxs-lookup"><span data-stu-id="f6320-104">The [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123) assigns a code point (a number) to each character in every supported script.</span></span> <span data-ttu-id="f6320-105">Unicode 轉換格式 (UTF) 是要編碼字碼指標的方法。</span><span class="sxs-lookup"><span data-stu-id="f6320-105">A Unicode Transformation Format (UTF) is a way to encode that code point.</span></span> <span data-ttu-id="f6320-106">[Unicode 標準](http://go.microsoft.com/fwlink/?linkid=37123)會使用下列 UTFs:</span><span class="sxs-lookup"><span data-stu-id="f6320-106">The [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123) uses the following UTFs:</span></span>  
  
-   <span data-ttu-id="f6320-107">Utf-8，用來將每個字碼指標表示成一連串的一到四個位元組。</span><span class="sxs-lookup"><span data-stu-id="f6320-107">UTF-8, which represents each code point as a sequence of one to four bytes.</span></span>  
  
-   <span data-ttu-id="f6320-108">Utf-16，用來將每個字碼指標表示成一連串的一到兩個 16 位元整數。</span><span class="sxs-lookup"><span data-stu-id="f6320-108">UTF-16, which represents each code point as a sequence of one to two 16-bit integers.</span></span>  
  
-   <span data-ttu-id="f6320-109">UTF-32，用來將每個字碼指標表示成 32 位元整數。</span><span class="sxs-lookup"><span data-stu-id="f6320-109">UTF-32, which represents each code point as a 32-bit integer.</span></span>  
  
 <span data-ttu-id="f6320-110">如需有關 UTFs 和所支援其他編碼<xref:System.Text>，請參閱。</span><span class="sxs-lookup"><span data-stu-id="f6320-110">For more information about the UTFs and other encodings supported by <xref:System.Text>, see .</span></span>  
  
 <span data-ttu-id="f6320-111"><xref:System.Text.UTF32Encoding>類別代表以 UTF-32 編碼方式。</span><span class="sxs-lookup"><span data-stu-id="f6320-111">The <xref:System.Text.UTF32Encoding> class represents a UTF-32 encoding.</span></span> <span data-ttu-id="f6320-112">編碼器可以使用位元組由大到小位元組順序 (最大顯著性位元組第一次) 或小小的位元組由小到大位元組順序 (最小顯著性位元組第一次)。</span><span class="sxs-lookup"><span data-stu-id="f6320-112">The encoder can use the big endian byte order (most significant byte first) or the little endian byte order (least significant byte first).</span></span> <span data-ttu-id="f6320-113">例如，（字碼指標 u+0041） 序列化為 Latin Capital Letter 如下 （以十六進位方式）：</span><span class="sxs-lookup"><span data-stu-id="f6320-113">For example, the Latin Capital Letter A (code point U+0041) is serialized as follows (in hexadecimal):</span></span>  
  
-   <span data-ttu-id="f6320-114">由大到小的位元組順序： 00 00 00 41</span><span class="sxs-lookup"><span data-stu-id="f6320-114">Big endian byte order: 00 00 00 41</span></span>  
  
-   <span data-ttu-id="f6320-115">一些位元組由小到大位元組順序： 41 00 00 00</span><span class="sxs-lookup"><span data-stu-id="f6320-115">Little endian byte order: 41 00 00 00</span></span>  
  
 <span data-ttu-id="f6320-116">它會儲存使用原生的位元組順序的 Unicode 字元通常更有效率。</span><span class="sxs-lookup"><span data-stu-id="f6320-116">It is generally more efficient to store Unicode characters using the native byte order.</span></span> <span data-ttu-id="f6320-117">比方說，最好使用位元組由小到大的位元組順序少位元組由小到大的平台，例如 Intel 的電腦上。</span><span class="sxs-lookup"><span data-stu-id="f6320-117">For example, it is better to use the little endian byte order on little endian platforms, such as Intel computers.</span></span> <span data-ttu-id="f6320-118"><xref:System.Text.UTF32Encoding> 對應至 12000 （少位元組由小到大位元組順序） 和 12001 （位元組由大到小位元組順序） 的 Windows 字碼頁。</span><span class="sxs-lookup"><span data-stu-id="f6320-118"><xref:System.Text.UTF32Encoding> corresponds to the Windows code pages 12000 (little endian byte order) and 12001 (big endian byte order).</span></span> <span data-ttu-id="f6320-119">您可以藉由呼叫來判斷 「 位元組序 」 的特定架構<xref:System.BitConverter.IsLittleEndian?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="f6320-119">You can determine the "endianness" of a particular architecture by calling the <xref:System.BitConverter.IsLittleEndian?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="f6320-120">（選擇性）<xref:System.Text.UTF32Encoding>物件所提供的位元組順序標記 (BOM)，也就是可以加在編碼程序所產生的位元組序列的位元組陣列。</span><span class="sxs-lookup"><span data-stu-id="f6320-120">Optionally, the <xref:System.Text.UTF32Encoding> object provides a byte order mark (BOM), which is an array of bytes that can be prefixed to the sequence of bytes resulting from the encoding process.</span></span> <span data-ttu-id="f6320-121">如果前序編碼包含位元組順序標記 (BOM)，它可以協助判斷位元組順序的轉換格式或 UTF-8 位元組陣列的解碼器。</span><span class="sxs-lookup"><span data-stu-id="f6320-121">If the preamble contains a byte order mark (BOM), it helps the decoder determine the byte order and the transformation format or UTF of a byte array.</span></span>  
  
 <span data-ttu-id="f6320-122">如果<xref:System.Text.UTF32Encoding>執行個體已設定為提供 BOM，您可以呼叫來擷取<xref:System.Text.UTF32Encoding.GetPreamble%2A>方法; 否則方法會傳回空陣列。</span><span class="sxs-lookup"><span data-stu-id="f6320-122">If the <xref:System.Text.UTF32Encoding> instance is configured to provide a BOM, you can retrieve it by calling the <xref:System.Text.UTF32Encoding.GetPreamble%2A> method; otherwise, the method returns an empty array.</span></span> <span data-ttu-id="f6320-123">請注意，即使<xref:System.Text.UTF32Encoding>BOM 支援使用者設定物件，您必須將編碼的位元組資料流，視需要; 開頭 BOM 編碼方式的<xref:System.Text.UTF32Encoding>類別沒有這麼做會自動。</span><span class="sxs-lookup"><span data-stu-id="f6320-123">Note that, even if a <xref:System.Text.UTF32Encoding> object is configured for BOM support, you must include the BOM at the beginning of the encoded byte stream as appropriate; the encoding methods of the <xref:System.Text.UTF32Encoding> class do not do this automatically.</span></span>  
  
 <span data-ttu-id="f6320-124">若要啟用錯誤偵測，並讓更安全的類別執行個體，您應該執行個體化<xref:System.Text.UTF32Encoding>藉由呼叫物件<xref:System.Text.UTF32Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29>建構函式，並設定其`throwOnInvalidBytes`引數`true`。</span><span class="sxs-lookup"><span data-stu-id="f6320-124">To enable error detection and to make the class instance more secure, you should instantiate a <xref:System.Text.UTF32Encoding> object by calling the <xref:System.Text.UTF32Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> constructor and setting its `throwOnInvalidBytes` argument to `true`.</span></span> <span data-ttu-id="f6320-125">使用錯誤偵測會偵測到無效的字元或位元組序列的方法會擲回<xref:System.ArgumentException>例外狀況。</span><span class="sxs-lookup"><span data-stu-id="f6320-125">With error detection, a method that detects an invalid sequence of characters or bytes throws an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="f6320-126">錯誤偵測，會擲回任何例外狀況，而不正確的順序通常會遭到忽略。</span><span class="sxs-lookup"><span data-stu-id="f6320-126">Without error detection, no exception is thrown, and the invalid sequence is generally ignored.</span></span>  
  
 <span data-ttu-id="f6320-127">您可以具現化<xref:System.Text.UTF32Encoding>數種方式，根據是否要給它提供位元組順序標記 (BOM)，是否要位元組由大到小或由小到大的編碼方式，以及是否要啟用錯誤偵測的物件。</span><span class="sxs-lookup"><span data-stu-id="f6320-127">You can instantiate a <xref:System.Text.UTF32Encoding> object in a number of ways, depending on whether you want to it to provide a byte order mark (BOM), whether you want big-endian or little-endian encoding, and whether you want to enable error detection.</span></span> <span data-ttu-id="f6320-128">下表列出<xref:System.Text.UTF32Encoding>建構函式與<xref:System.Text.Encoding>屬性會傳回<xref:System.Text.UnicodeEncoding>物件。</span><span class="sxs-lookup"><span data-stu-id="f6320-128">The following table lists the <xref:System.Text.UTF32Encoding> constructors and the <xref:System.Text.Encoding> properties that return a <xref:System.Text.UnicodeEncoding> object.</span></span>  
  
|<span data-ttu-id="f6320-129">成員</span><span class="sxs-lookup"><span data-stu-id="f6320-129">Member</span></span>|<span data-ttu-id="f6320-130">位元組序</span><span class="sxs-lookup"><span data-stu-id="f6320-130">Endianness</span></span>|<span data-ttu-id="f6320-131">BOM</span><span class="sxs-lookup"><span data-stu-id="f6320-131">BOM</span></span>|<span data-ttu-id="f6320-132">錯誤偵測</span><span class="sxs-lookup"><span data-stu-id="f6320-132">Error detection</span></span>|  
|------------|----------------|---------|---------------------|  
|<xref:System.Text.Encoding.UTF32%2A?displayProperty=nameWithType>|<span data-ttu-id="f6320-133">位元組由小到大</span><span class="sxs-lookup"><span data-stu-id="f6320-133">Little-endian</span></span>|<span data-ttu-id="f6320-134">[是]</span><span class="sxs-lookup"><span data-stu-id="f6320-134">Yes</span></span>|<span data-ttu-id="f6320-135">無 （取代後援）</span><span class="sxs-lookup"><span data-stu-id="f6320-135">No (Replacement fallback)</span></span>|  
|<xref:System.Text.UTF32Encoding.%23ctor?displayProperty=nameWithType>|<span data-ttu-id="f6320-136">位元組由小到大</span><span class="sxs-lookup"><span data-stu-id="f6320-136">Little-endian</span></span>|<span data-ttu-id="f6320-137">[是]</span><span class="sxs-lookup"><span data-stu-id="f6320-137">Yes</span></span>|<span data-ttu-id="f6320-138">無 （取代後援）</span><span class="sxs-lookup"><span data-stu-id="f6320-138">No (Replacement fallback)</span></span>|  
|<xref:System.Text.UTF32Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType>|<span data-ttu-id="f6320-139">可設定</span><span class="sxs-lookup"><span data-stu-id="f6320-139">Configurable</span></span>|<span data-ttu-id="f6320-140">可設定</span><span class="sxs-lookup"><span data-stu-id="f6320-140">Configurable</span></span>|<span data-ttu-id="f6320-141">無 （取代後援）</span><span class="sxs-lookup"><span data-stu-id="f6320-141">No (Replacement fallback)</span></span>|  
|<xref:System.Text.UTF32Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType>|<span data-ttu-id="f6320-142">可設定</span><span class="sxs-lookup"><span data-stu-id="f6320-142">Configurable</span></span>|<span data-ttu-id="f6320-143">可設定</span><span class="sxs-lookup"><span data-stu-id="f6320-143">Configurable</span></span>|<span data-ttu-id="f6320-144">可設定</span><span class="sxs-lookup"><span data-stu-id="f6320-144">Configurable</span></span>|  
  
 <span data-ttu-id="f6320-145"><xref:System.Text.UTF32Encoding.GetByteCount%2A>方法會判斷多少個位元組會導致一組 Unicode 字元的編碼方式和<xref:System.Text.UTF32Encoding.GetBytes%2A>方法會執行實際的編碼方式。</span><span class="sxs-lookup"><span data-stu-id="f6320-145">The <xref:System.Text.UTF32Encoding.GetByteCount%2A> method determines how many bytes result in encoding a set of Unicode characters, and the <xref:System.Text.UTF32Encoding.GetBytes%2A> method performs the actual encoding.</span></span>  
  
 <span data-ttu-id="f6320-146">同樣地，<xref:System.Text.UTF32Encoding.GetCharCount%2A>方法會判斷字元數會導致解碼的位元組序列，而<xref:System.Text.UTF32Encoding.GetChars%2A>和<xref:System.Text.UTF32Encoding.GetString%2A>方法會執行實際的解碼。</span><span class="sxs-lookup"><span data-stu-id="f6320-146">Likewise, the <xref:System.Text.UTF32Encoding.GetCharCount%2A> method determines how many characters result in decoding a sequence of bytes, and the <xref:System.Text.UTF32Encoding.GetChars%2A> and <xref:System.Text.UTF32Encoding.GetString%2A> methods perform the actual decoding.</span></span>  
  
 <span data-ttu-id="f6320-147">針對編碼器或解碼器能夠儲存狀態資訊編碼或解碼資料跨越多個區塊 （例如 1 百萬個字元的編碼中段 100,000 個字元的字串） 時，請使用<xref:System.Text.UTF32Encoding.GetEncoder%2A>和<xref:System.Text.UTF32Encoding.GetDecoder%2A>屬性，分別。</span><span class="sxs-lookup"><span data-stu-id="f6320-147">For an encoder or decoder that is able to save state information when encoding or decoding data that spans multiple blocks (such as string of 1 million characters that is encoded in 100,000-character segments), use the <xref:System.Text.UTF32Encoding.GetEncoder%2A> and <xref:System.Text.UTF32Encoding.GetDecoder%2A> properties, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6320-148">下列範例示範的行為<xref:System.Text.UTF32Encoding>而啟用的錯誤偵測的物件。</span><span class="sxs-lookup"><span data-stu-id="f6320-148">The following example demonstrates the behavior of <xref:System.Text.UTF32Encoding> objects with and without error detection enabled.</span></span> <span data-ttu-id="f6320-149">它會建立位元組陣列的最後四個位元組代表無效的 surrogate 字組;高 surrogate u+d8ff 後面 U + 01FF，這是低 surrogate (0xDC00 到 0xDFFF) 的範圍之外。</span><span class="sxs-lookup"><span data-stu-id="f6320-149">It creates a byte array whose last four bytes represent an invalid surrogate pair; the high surrogate U+D8FF is followed by an U+01FF, which is outside the range of low surrogates (0xDC00 through 0xDFFF).</span></span> <span data-ttu-id="f6320-150">無錯誤偵測，UTF32 解碼器會使用取代後援，以取代字元 (U + FFFD) 取代無效的 surrogate 字組。</span><span class="sxs-lookup"><span data-stu-id="f6320-150">Without error detection, the UTF32 decoder uses replacement fallback to replace the invalid surrogate pair with REPLACEMENT CHARACTER (U+FFFD).</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.ErrorDetection#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.ErrorDetection/CPP/errordetection.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.ErrorDetection#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.ErrorDetection/CS/errordetection.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.ErrorDetection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.ErrorDetection/VB/ErrorDetection.vb#1)]  
  
 <span data-ttu-id="f6320-151">下列範例會將編碼的 Unicode 字元字串的位元組陣列使用<xref:System.Text.UTF32Encoding>物件。</span><span class="sxs-lookup"><span data-stu-id="f6320-151">The following example encodes a string of Unicode characters into a byte array by using a <xref:System.Text.UTF32Encoding> object.</span></span> <span data-ttu-id="f6320-152">然後，將位元組陣列解碼為字串，以示範不遺失資料。</span><span class="sxs-lookup"><span data-stu-id="f6320-152">The byte array is then decoded into a string to demonstrate that there is no loss of data.</span></span>  
  
 [!code-csharp[System.Text.UTF32Encoding.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.utf32encoding.class/cs/snippet.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.utf32encoding.class/vb/snippet.vb#1)]  
  
 <span data-ttu-id="f6320-153">下列範例會使用相同的字串與上一個，不同之處在於它將編碼的位元組寫入檔案，並使用位元組順序標記 (BOM) 的位元組資料流的前置詞。</span><span class="sxs-lookup"><span data-stu-id="f6320-153">The following example uses the same string as the previous one, except that it writes the encoded bytes to a file and prefixes the byte stream with a byte order mark (BOM).</span></span> <span data-ttu-id="f6320-154">它接著會讀取檔案兩個不同的方式： 為文字檔，使用<xref:System.IO.StreamReader>物件，並當作二進位檔案。</span><span class="sxs-lookup"><span data-stu-id="f6320-154">It then reads the file in two different ways: as a text file by using a <xref:System.IO.StreamReader> object; and as a binary file.</span></span> <span data-ttu-id="f6320-155">如您所預期，在兩種情況下是 BOM 包含在新讀取的字串。</span><span class="sxs-lookup"><span data-stu-id="f6320-155">As you would expect, in neither case is the BOM included in the newly read string.</span></span>  
  
 [!code-csharp[System.Text.UTF32Encoding.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.utf32encoding.class/cs/bom1.cs#2)]
 [!code-vb[System.Text.UTF32Encoding.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.utf32encoding.class/vb/bom1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.Encoding" />
    <altmember cref="T:System.Text.Encoder" />
    <altmember cref="T:System.Text.Decoder" />
    <altmember cref="T:System.Text.UTF8Encoding" />
    <altmember cref="T:System.Text.ASCIIEncoding" />
    <altmember cref="T:System.Text.UnicodeEncoding" />
    <altmember cref="T:System.Globalization.UnicodeCategory" />
    <altmember cref="T:System.Globalization.CharUnicodeInfo" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f6320-156">初始化 <see cref="T:System.Text.UTF32Encoding" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-156">Initializes a new instance of the <see cref="T:System.Text.UTF32Encoding" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UTF32Encoding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UTF32Encoding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f6320-157">初始化 <see cref="T:System.Text.UTF32Encoding" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-157">Initializes a new instance of the <see cref="T:System.Text.UTF32Encoding" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6320-158">這個建構函式會建立使用小的位元組由小到大位元組順序，提供 Unicode 位元組順序標記，而當偵測到無效的編碼方式時，不會擲回例外狀況的執行個體。</span><span class="sxs-lookup"><span data-stu-id="f6320-158">This constructor creates an instance that uses the little endian byte order, provides a Unicode byte order mark, and does not throw an exception when an invalid encoding is detected.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f6320-159">基於安全性理由，您應該啟用錯誤偵測，藉由呼叫<xref:System.Text.UTF32Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29>建構函式，並設定其`throwOnInvalidCharacters`引數`true`。</span><span class="sxs-lookup"><span data-stu-id="f6320-159">For security reasons, you should enable error detection by calling the <xref:System.Text.UTF32Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> constructor and setting its `throwOnInvalidCharacters` argument to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6320-160">下列範例會擷取和位元組順序標示為不同的顯示<xref:System.Text.UTF32Encoding>執行個體。</span><span class="sxs-lookup"><span data-stu-id="f6320-160">The following example retrieves and displays the byte order mark for different <xref:System.Text.UTF32Encoding> instances.</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.GetPreamble#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetPreamble/CPP/getpreamble.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.GetPreamble#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetPreamble/CS/getpreamble.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.GetPreamble#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetPreamble/VB/GetPreamble.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UTF32Encoding (bool bigEndian, bool byteOrderMark);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool bigEndian, bool byteOrderMark) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.#ctor(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (bigEndian As Boolean, byteOrderMark As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UTF32Encoding(bool bigEndian, bool byteOrderMark);" />
      <MemberSignature Language="F#" Value="new System.Text.UTF32Encoding : bool * bool -&gt; System.Text.UTF32Encoding" Usage="new System.Text.UTF32Encoding (bigEndian, byteOrderMark)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="bigEndian" Type="System.Boolean" />
        <Parameter Name="byteOrderMark" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="bigEndian">
          <span data-ttu-id="f6320-161">
            <see langword="true" /> 表示要使用位元組由大到小的位元組順序 (最大顯著性位元組在前)，<see langword="false" /> 表示要使用位元組由小到大的位元組順序 (最小顯著性位元組在前)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-161">
              <see langword="true" /> to use the big endian byte order (most significant byte first), or <see langword="false" /> to use the little endian byte order (least significant byte first).</span>
          </span>
        </param>
        <param name="byteOrderMark">
          <span data-ttu-id="f6320-162">
            <see langword="true" /> 指定提供 Unicode 位元組順序標記；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-162">
              <see langword="true" /> to specify that a Unicode byte order mark is provided; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f6320-163">初始化 <see cref="T:System.Text.UTF32Encoding" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-163">Initializes a new instance of the <see cref="T:System.Text.UTF32Encoding" /> class.</span>
          </span>
          <span data-ttu-id="f6320-164">參數會指定是否使用位元組由大到小的位元組順序，以及 <see cref="M:System.Text.UTF32Encoding.GetPreamble" /> 方法是否傳回 Unicode 位元組順序標記。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-164">Parameters specify whether to use the big endian byte order and whether the <see cref="M:System.Text.UTF32Encoding.GetPreamble" /> method returns a Unicode Unicode byte order mark.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6320-165">這個建構函式建立時偵測到無效的編碼方式時，不會擲回例外狀況的執行個體。</span><span class="sxs-lookup"><span data-stu-id="f6320-165">This constructor creates an instance that does not throw an exception when an invalid encoding is detected.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f6320-166">基於安全性理由，您應該啟用錯誤偵測，藉由呼叫<xref:System.Text.UTF32Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29>建構函式，並設定其`throwOnInvalidCharacters`引數`true`。</span><span class="sxs-lookup"><span data-stu-id="f6320-166">For security reasons, you should enable error detection by calling the <xref:System.Text.UTF32Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> constructor and setting its `throwOnInvalidCharacters` argument to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6320-167">下列範例會擷取和位元組順序標示為不同的顯示<xref:System.Text.UTF32Encoding>執行個體。</span><span class="sxs-lookup"><span data-stu-id="f6320-167">The following example retrieves and displays the byte order mark for different <xref:System.Text.UTF32Encoding> instances.</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.GetPreamble#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetPreamble/CPP/getpreamble.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.GetPreamble#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetPreamble/CS/getpreamble.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.GetPreamble#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetPreamble/VB/GetPreamble.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.UTF32Encoding.GetPreamble" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UTF32Encoding (bool bigEndian, bool byteOrderMark, bool throwOnInvalidCharacters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool bigEndian, bool byteOrderMark, bool throwOnInvalidCharacters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.#ctor(System.Boolean,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (bigEndian As Boolean, byteOrderMark As Boolean, throwOnInvalidCharacters As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UTF32Encoding(bool bigEndian, bool byteOrderMark, bool throwOnInvalidCharacters);" />
      <MemberSignature Language="F#" Value="new System.Text.UTF32Encoding : bool * bool * bool -&gt; System.Text.UTF32Encoding" Usage="new System.Text.UTF32Encoding (bigEndian, byteOrderMark, throwOnInvalidCharacters)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="bigEndian" Type="System.Boolean" />
        <Parameter Name="byteOrderMark" Type="System.Boolean" />
        <Parameter Name="throwOnInvalidCharacters" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="bigEndian">
          <span data-ttu-id="f6320-168">
            <see langword="true" /> 表示要使用位元組由大到小的位元組順序 (最大顯著性位元組在前)，<see langword="false" /> 表示要使用位元組由小到大的位元組順序 (最小顯著性位元組在前)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-168">
              <see langword="true" /> to use the big endian byte order (most significant byte first), or <see langword="false" /> to use the little endian byte order (least significant byte first).</span>
          </span>
        </param>
        <param name="byteOrderMark">
          <span data-ttu-id="f6320-169">
            <see langword="true" /> 指定提供 Unicode 位元組順序標記；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-169">
              <see langword="true" /> to specify that a Unicode byte order mark is provided; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="throwOnInvalidCharacters">
          <span data-ttu-id="f6320-170">
            <see langword="true" />，可指定在偵測到無效的編碼方式時應擲回一個例外狀況，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-170">
              <see langword="true" /> to specify that an exception should be thrown when an invalid encoding is detected; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f6320-171">初始化 <see cref="T:System.Text.UTF32Encoding" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-171">Initializes a new instance of the <see cref="T:System.Text.UTF32Encoding" /> class.</span>
          </span>
          <span data-ttu-id="f6320-172">參數會指定是否使用位元組由大到小的位元組順序、是否提供 Unicode 位元組順序標記，以及是否在偵測到無效的編碼方式時擲回例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-172">Parameters specify whether to use the big endian byte order, whether to provide a Unicode byte order mark, and whether to throw an exception when an invalid encoding is detected.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6320-173">如果`throwOnInvalidCharacters`已`true`，偵測到無效的位元組序列的方法會擲回<xref:System.ArgumentException?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="f6320-173">If `throwOnInvalidCharacters` is `true`, a method that detects an invalid byte sequence throws <xref:System.ArgumentException?displayProperty=nameWithType>.</span></span> <span data-ttu-id="f6320-174">否則，方法不會擲回例外狀況，並忽略無效的序列。</span><span class="sxs-lookup"><span data-stu-id="f6320-174">Otherwise, the method does not throw an exception, and the invalid sequence is ignored.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f6320-175">基於安全性理由，您應該啟用錯誤偵測，藉由呼叫<xref:System.Text.UTF32Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29>建構函式，並設定其`throwOnInvalidCharacters`引數`true`。</span><span class="sxs-lookup"><span data-stu-id="f6320-175">For security reasons, you should enable error detection by calling the <xref:System.Text.UTF32Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> constructor and setting its `throwOnInvalidCharacters` argument to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6320-176">下列範例示範的行為<xref:System.Text.UTF32Encoding>，啟用錯誤偵測，而不需要。</span><span class="sxs-lookup"><span data-stu-id="f6320-176">The following example demonstrates the behavior of <xref:System.Text.UTF32Encoding>, both with error detection enabled and without.</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.ErrorDetection#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.ErrorDetection/CPP/errordetection.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.ErrorDetection#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.ErrorDetection/CS/errordetection.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.ErrorDetection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.ErrorDetection/VB/ErrorDetection.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.UTF32Encoding.GetPreamble" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="uTF32Encoding.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="f6320-177">要與目前物件比較的 <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-177">The <see cref="T:System.Object" /> to compare with the current object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f6320-178">判斷指定的 <see cref="T:System.Object" /> 是否等於目前的 <see cref="T:System.Text.UTF32Encoding" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-178">Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Text.UTF32Encoding" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f6320-179">如果 <paramref name="value" /> 是 <see cref="T:System.Text.UTF32Encoding" /> 的執行個體，並且等於目前的物件，則為 <see langword="true" />；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-179">
              <see langword="true" /> if <paramref name="value" /> is an instance of <see cref="T:System.Text.UTF32Encoding" /> and is equal to the current object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6320-180">兩個<xref:System.Text.UTF32Encoding>物件是否視為相等，如果所有下列條件成立：</span><span class="sxs-lookup"><span data-stu-id="f6320-180">Two <xref:System.Text.UTF32Encoding> objects are considered equal if all of the following conditions are true:</span></span>  
  
-   <span data-ttu-id="f6320-181">這兩個物件都使用相同的位元組順序。</span><span class="sxs-lookup"><span data-stu-id="f6320-181">Both objects use the same byte order.</span></span>  
  
-   <span data-ttu-id="f6320-182">這兩個物件提供位元組順序標記，或兩者都不這麼做。</span><span class="sxs-lookup"><span data-stu-id="f6320-182">Both objects provide the byte order mark, or both do not.</span></span>  
  
-   <span data-ttu-id="f6320-183">這兩個物件都使用相同的編碼器後援。</span><span class="sxs-lookup"><span data-stu-id="f6320-183">Both objects use the same encoder fallback.</span></span>  
  
-   <span data-ttu-id="f6320-184">這兩個物件都使用相同的解碼器後援。</span><span class="sxs-lookup"><span data-stu-id="f6320-184">Both objects use the same decoder fallback.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6320-185">下列範例會建立<xref:System.Text.UTF32Encoding>物件使用不同的參數值，然後檢查它們是否相等。</span><span class="sxs-lookup"><span data-stu-id="f6320-185">The following example creates <xref:System.Text.UTF32Encoding> objects using different parameter values and then checks them for equality.</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.Equals/CPP/equals.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.Equals/CS/equals.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.Equals/VB/equals.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.UTF32Encoding.#ctor" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetByteCount">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f6320-186">計算將一組字元編碼所產生的位元組數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-186">Calculates the number of bytes produced by encoding a set of characters.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public override int GetByteCount (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetByteCount(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetByteCount(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetByteCount (s As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetByteCount(System::String ^ s);" />
      <MemberSignature Language="F#" Value="override this.GetByteCount : string -&gt; int" Usage="uTF32Encoding.GetByteCount s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="f6320-187">
            <see cref="T:System.String" />，包含要編碼的一組字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-187">The <see cref="T:System.String" /> containing the set of characters to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f6320-188">計算將指定 <see cref="T:System.String" /> 中的字元編碼所產生的位元組數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-188">Calculates the number of bytes produced by encoding the characters in the specified <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f6320-189">編碼指定字元所產生的位元組數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-189">The number of bytes produced by encoding the specified characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6320-190">若要計算所需的確切的陣列大小<xref:System.Text.UTF32Encoding.GetBytes%2A>若要儲存產生的位元組，請呼叫<xref:System.Text.UTF32Encoding.GetByteCount%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f6320-190">To calculate the exact array size required by <xref:System.Text.UTF32Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF32Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="f6320-191">若要計算最大陣列大小，請呼叫<xref:System.Text.UTF32Encoding.GetMaxByteCount%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f6320-191">To calculate the maximum array size, you call the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="f6320-192"><xref:System.Text.UTF32Encoding.GetByteCount%2A>方法通常會配置較少的記憶體，而<xref:System.Text.UTF32Encoding.GetMaxByteCount%2A>方法通常執行速度更快。</span><span class="sxs-lookup"><span data-stu-id="f6320-192">The <xref:System.Text.UTF32Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="f6320-193">使用錯誤偵測的無效的序列會造成此方法會擲回<xref:System.ArgumentException>。</span><span class="sxs-lookup"><span data-stu-id="f6320-193">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="f6320-194">錯誤偵測無效的序列會被忽略，而不會擲回任何例外狀況。</span><span class="sxs-lookup"><span data-stu-id="f6320-194">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="f6320-195">若要確保儲存為檔案或資料流時將編碼的位元組會正確解碼，您可以前置詞與前序編碼的位元組資料流。</span><span class="sxs-lookup"><span data-stu-id="f6320-195">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="f6320-196">位元組資料流的開頭插入前序編碼 (例如在一連串的位元組寫入檔案的開頭) 是開發人員的責任，並在前序編碼的位元組數目不會反映在所傳回的值<xref:System.Text.UTF32Encoding.GetByteCount%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f6320-196">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility, and the number of bytes in the preamble is not reflected in the value returned by the <xref:System.Text.UTF32Encoding.GetByteCount%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6320-197">下列範例會呼叫<xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A>和<xref:System.Text.UnicodeEncoding.GetByteCount%28System.String%29>方法來計算最大值與實際所需格式的字串編碼的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="f6320-197">The following example calls the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> and <xref:System.Text.UnicodeEncoding.GetByteCount%28System.String%29> methods to calculate the maximum and actual number of bytes required to encode a string.</span></span> <span data-ttu-id="f6320-198">它也會顯示實際儲存位元組順序標記的位元組資料流所需的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="f6320-198">It also displays the actual number of bytes required to store a byte stream with a byte order mark.</span></span>  
  
 [!code-csharp[System.Text.Utf32Encoding.GetByteCount#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.utf32encoding.getbytecount/cs/getbytecount1.cs#1)]
 [!code-vb[System.Text.Utf32Encoding.GetByteCount#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.utf32encoding.getbytecount/vb/getbytecount1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f6320-199">
            <paramref name="s" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-199">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f6320-200">所產生的位元組數目大於可用整數傳回的數目上限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-200">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f6320-201">已啟用錯誤偵測，而 <paramref name="s" /> 包含無效的字元序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-201">Error detection is enabled, and <paramref name="s" /> contains an invalid sequence of characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="f6320-202">發生後援 (如需完整說明，請參閱 [.NET Framework 中的字元編碼](~/docs/standard/base-types/character-encoding.md))</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-202">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="f6320-203">-和-</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-203">-and-</span>
          </span>
          <span data-ttu-id="f6320-204">
            <see cref="P:System.Text.Encoding.EncoderFallback" /> 設定為 <see cref="T:System.Text.EncoderExceptionFallback" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-204">
              <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UTF32Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public override int GetByteCount (char* chars, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetByteCount(char* chars, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetByteCount(System.Char*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetByteCount(char* chars, int count);" />
      <MemberSignature Language="F#" Value="override this.GetByteCount : nativeptr&lt;char&gt; * int -&gt; int" Usage="uTF32Encoding.GetByteCount (chars, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char*" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars">
          <span data-ttu-id="f6320-205">要編碼的第一個字元指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-205">A pointer to the first character to encode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="f6320-206">要編碼的字元數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-206">The number of characters to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f6320-207">計算將起始於指定字元指標的一組字元編碼所產生的位元組數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-207">Calculates the number of bytes produced by encoding a set of characters starting at the specified character pointer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f6320-208">編碼指定字元所產生的位元組數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-208">The number of bytes produced by encoding the specified characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6320-209">若要計算所需的確切的陣列大小<xref:System.Text.UTF32Encoding.GetBytes%2A>若要儲存產生的位元組，請呼叫<xref:System.Text.UTF32Encoding.GetByteCount%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f6320-209">To calculate the exact array size required by <xref:System.Text.UTF32Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF32Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="f6320-210">若要計算最大陣列大小，請呼叫<xref:System.Text.UTF32Encoding.GetMaxByteCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="f6320-210">To calculate the maximum array size, you call the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A>.</span></span> <span data-ttu-id="f6320-211"><xref:System.Text.UTF32Encoding.GetByteCount%2A>方法通常會配置較少的記憶體，而<xref:System.Text.UTF32Encoding.GetMaxByteCount%2A>方法通常執行速度更快。</span><span class="sxs-lookup"><span data-stu-id="f6320-211">The <xref:System.Text.UTF32Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="f6320-212">使用錯誤偵測的無效的序列會造成此方法會擲回<xref:System.ArgumentException>。</span><span class="sxs-lookup"><span data-stu-id="f6320-212">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException>.</span></span> <span data-ttu-id="f6320-213">錯誤偵測無效的序列會被忽略，而不會擲回任何例外狀況。</span><span class="sxs-lookup"><span data-stu-id="f6320-213">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="f6320-214">若要確保當會儲存為檔案或資料流編碼的位元組會正確解碼，您可以前置詞與前序編碼的位元組資料流。</span><span class="sxs-lookup"><span data-stu-id="f6320-214">To ensure that the encoded bytes are decoded properly when they are saved as a file or a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="f6320-215">位元組資料流的開頭插入前序編碼 (例如在一連串的位元組寫入檔案的開頭) 是開發人員的責任，並在前序編碼的位元組數目不會反映在所傳回的值<xref:System.Text.UTF32Encoding.GetByteCount%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f6320-215">Inserting a preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility, and the number of bytes in the preamble Is not reflected in the value returned by the <xref:System.Text.UTF32Encoding.GetByteCount%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f6320-216">
            <paramref name="chars" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-216">
              <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f6320-217">
            <paramref name="count" /> 小於零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-217">
              <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="f6320-218">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-218">-or-</span>
          </span>
          <span data-ttu-id="f6320-219">所產生的位元組數目大於可用整數傳回的數目上限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-219">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f6320-220">已啟用錯誤偵測，而 <paramref name="chars" /> 包含無效的字元序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-220">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="f6320-221">發生後援 (如需完整說明，請參閱 [.NET Framework 中的字元編碼](~/docs/standard/base-types/character-encoding.md))</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-221">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="f6320-222">-和-</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-222">-and-</span>
          </span>
          <span data-ttu-id="f6320-223">
            <see cref="P:System.Text.Encoding.EncoderFallback" /> 設定為 <see cref="T:System.Text.EncoderExceptionFallback" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-223">
              <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="f6320-224">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-224">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f6320-225">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-225">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Text.UTF32Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public override int GetByteCount (char[] chars, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetByteCount(char[] chars, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetByteCount (chars As Char(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetByteCount(cli::array &lt;char&gt; ^ chars, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.GetByteCount : char[] * int * int -&gt; int" Usage="uTF32Encoding.GetByteCount (chars, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars">
          <span data-ttu-id="f6320-226">包含要解碼之一組字元的字元陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-226">The character array containing the set of characters to encode.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="f6320-227">要編碼的第一個字元索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-227">The index of the first character to encode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="f6320-228">要編碼的字元數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-228">The number of characters to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f6320-229">計算將指定字元陣列中的一組字元編碼所產生的位元組數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-229">Calculates the number of bytes produced by encoding a set of characters from the specified character array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f6320-230">編碼指定字元所產生的位元組數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-230">The number of bytes produced by encoding the specified characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6320-231">若要計算所需的確切的陣列大小<xref:System.Text.UTF32Encoding.GetBytes%2A>若要儲存產生的位元組，請呼叫<xref:System.Text.UTF32Encoding.GetByteCount%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f6320-231">To calculate the exact array size required by <xref:System.Text.UTF32Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF32Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="f6320-232">若要計算最大陣列大小，請呼叫<xref:System.Text.UTF32Encoding.GetMaxByteCount%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f6320-232">To calculate the maximum array size, you call the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="f6320-233"><xref:System.Text.UTF32Encoding.GetByteCount%2A>方法通常會配置較少的記憶體，而<xref:System.Text.UTF32Encoding.GetMaxByteCount%2A>方法通常執行速度更快。</span><span class="sxs-lookup"><span data-stu-id="f6320-233">The <xref:System.Text.UTF32Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="f6320-234">使用錯誤偵測的無效的序列會造成此方法會擲回<xref:System.ArgumentException>。</span><span class="sxs-lookup"><span data-stu-id="f6320-234">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="f6320-235">錯誤偵測無效的序列會被忽略，而不會擲回任何例外狀況。</span><span class="sxs-lookup"><span data-stu-id="f6320-235">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="f6320-236">若要確保當會儲存為檔案或資料流編碼的位元組會正確解碼，您可以前置詞與前序編碼的位元組資料流。</span><span class="sxs-lookup"><span data-stu-id="f6320-236">To ensure that the encoded bytes are decoded properly when they are saved as a file or a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="f6320-237">位元組資料流的開頭插入前序編碼 (例如在一連串的位元組寫入檔案的開頭) 是開發人員的責任，並在前序編碼的位元組數目不會反映在所傳回的值<xref:System.Text.UTF32Encoding.GetByteCount%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f6320-237">Inserting a preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility, and the number of bytes in the preamble Is not reflected in the value returned by the <xref:System.Text.UTF32Encoding.GetByteCount%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6320-238">下列範例會填入陣列拉丁大寫字母和小寫字元和呼叫<xref:System.Text.UnicodeEncoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29>方法，以判斷拉丁文小寫的字元編碼所需的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="f6320-238">The following example populates an array with a Latin uppercase and lowercase characters and calls the <xref:System.Text.UnicodeEncoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method to determine the number of bytes needed to encode the Latin lowercase characters.</span></span> <span data-ttu-id="f6320-239">然後，它會顯示這項資訊，以及加入位元組順序標記時所需的位元組總數。</span><span class="sxs-lookup"><span data-stu-id="f6320-239">It then displays this information along with the total number of bytes needed if a byte order mark is added.</span></span> <span data-ttu-id="f6320-240">它會使用所傳回的值比較此數字<xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A>方法，即表示拉丁文小寫的字元編碼所需的位元組數目上限。</span><span class="sxs-lookup"><span data-stu-id="f6320-240">It compares this number with the value returned by the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method, which indicates maximum number of bytes needed to encode the Latin lowercase characters.</span></span> <span data-ttu-id="f6320-241">下列範例會填入希臘文和斯拉夫字元和呼叫所組成的陣列<xref:System.Text.UnicodeEncoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29>方法，以判斷斯拉夫字元編碼所需的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="f6320-241">The following example populates an array with a combination of Greek and Cyrillic characters and calls the <xref:System.Text.UnicodeEncoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method to determine the number of bytes needed to encode the Cyrillic characters.</span></span> <span data-ttu-id="f6320-242">然後，它會顯示這項資訊，以及加入位元組順序標記時所需的位元組總數。</span><span class="sxs-lookup"><span data-stu-id="f6320-242">It then displays this information along with the total number of bytes needed if a byte order mark is added.</span></span> <span data-ttu-id="f6320-243">它會使用所傳回的值比較此數字<xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A>方法，即表示斯拉夫字元編碼所需的位元組數目上限。</span><span class="sxs-lookup"><span data-stu-id="f6320-243">It compares this number with the value returned by the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method, which indicates maximum number of bytes needed to encode the Cyrillic characters.</span></span>  
  
 [!code-csharp[System.Text.Utf32Encoding.GetByteCount#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.utf32encoding.getbytecount/cs/getbytecount2.cs#2)]
 [!code-vb[System.Text.Utf32Encoding.GetByteCount#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.utf32encoding.getbytecount/vb/getbytecount2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f6320-244">
            <paramref name="chars" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-244">
              <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f6320-245">
            <paramref name="index" /> 或 <paramref name="count" /> 小於零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-245">
              <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="f6320-246">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-246">-or-</span>
          </span>
          <span data-ttu-id="f6320-247">
            <paramref name="index" /> 與 <paramref name="count" /> 不代表 <paramref name="chars" /> 中有效的範圍。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-247">
              <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="chars" />.</span>
          </span>
          <span data-ttu-id="f6320-248">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-248">-or-</span>
          </span>
          <span data-ttu-id="f6320-249">所產生的位元組數目大於可用整數傳回的數目上限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-249">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f6320-250">已啟用錯誤偵測，而 <paramref name="chars" /> 包含無效的字元序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-250">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="f6320-251">發生後援 (如需完整說明，請參閱 [.NET Framework 中的字元編碼](~/docs/standard/base-types/character-encoding.md))</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-251">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="f6320-252">-和-</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-252">-and-</span>
          </span>
          <span data-ttu-id="f6320-253">
            <see cref="P:System.Text.Encoding.EncoderFallback" /> 設定為 <see cref="T:System.Text.EncoderExceptionFallback" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-253">
              <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UTF32Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetEncoder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetBytes">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f6320-254">將一組字元編碼成位元組序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-254">Encodes a set of characters into a sequence of bytes.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override int GetBytes (char* chars, int charCount, byte* bytes, int byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetBytes(char* chars, int32 charCount, unsigned int8* bytes, int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetBytes(char* chars, int charCount, System::Byte* bytes, int byteCount);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : nativeptr&lt;char&gt; * int * nativeptr&lt;byte&gt; * int -&gt; int" Usage="uTF32Encoding.GetBytes (chars, charCount, bytes, byteCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char*" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="byteCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars">
          <span data-ttu-id="f6320-255">要編碼的第一個字元指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-255">A pointer to the first character to encode.</span>
          </span>
        </param>
        <param name="charCount">
          <span data-ttu-id="f6320-256">要編碼的字元數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-256">The number of characters to encode.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="f6320-257">開始寫入結果位元組序列的位置指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-257">A pointer to the location at which to start writing the resulting sequence of bytes.</span>
          </span>
        </param>
        <param name="byteCount">
          <span data-ttu-id="f6320-258">寫入的最大位元組數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-258">The maximum number of bytes to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f6320-259">將起始於指定字元指標的一組字元編碼成位元組序列；儲存該位元組序列時，係以指定的位元組指標為起始點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-259">Encodes a set of characters starting at the specified character pointer into a sequence of bytes that are stored starting at the specified byte pointer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f6320-260">
            <paramref name="bytes" /> 參數所指示位置上寫入的實際位元組數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-260">The actual number of bytes written at the location indicated by the <paramref name="bytes" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6320-261">若要計算所需的確切的陣列大小<xref:System.Text.UTF32Encoding.GetBytes%2A>若要儲存產生的位元組，請呼叫<xref:System.Text.UTF32Encoding.GetByteCount%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f6320-261">To calculate the exact array size required by <xref:System.Text.UTF32Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF32Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="f6320-262">若要計算最大陣列大小，請呼叫<xref:System.Text.UTF32Encoding.GetMaxByteCount%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f6320-262">To calculate the maximum array size, you call the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="f6320-263"><xref:System.Text.UTF32Encoding.GetByteCount%2A>方法通常會配置較少的記憶體，而<xref:System.Text.UTF32Encoding.GetMaxByteCount%2A>方法通常執行速度更快。</span><span class="sxs-lookup"><span data-stu-id="f6320-263">The <xref:System.Text.UTF32Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="f6320-264">使用錯誤偵測的無效的序列會造成此方法會擲回<xref:System.ArgumentException>。</span><span class="sxs-lookup"><span data-stu-id="f6320-264">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="f6320-265">錯誤偵測無效的序列會被忽略，而不會擲回任何例外狀況。</span><span class="sxs-lookup"><span data-stu-id="f6320-265">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="f6320-266">要轉換，例如，從資料流讀取資料的資料可能僅適用於循序區塊。</span><span class="sxs-lookup"><span data-stu-id="f6320-266">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="f6320-267">在此情況下，或應用程式的資料量很大，它必須分割成較小的區塊時，使用<xref:System.Text.Decoder>或<xref:System.Text.Encoder>所提供<xref:System.Text.UTF32Encoding.GetDecoder%2A>方法或<xref:System.Text.UTF32Encoding.GetEncoder%2A>方法，分別。</span><span class="sxs-lookup"><span data-stu-id="f6320-267">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application uses the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UTF32Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF32Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f6320-268">若要確保儲存為檔案或資料流時將編碼的位元組會正確解碼，您可以前置詞與前序編碼的位元組資料流。</span><span class="sxs-lookup"><span data-stu-id="f6320-268">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="f6320-269">位元組資料流的開頭插入前序編碼 (例如一系列的位元組寫入檔案的開頭) 是開發人員的責任。</span><span class="sxs-lookup"><span data-stu-id="f6320-269">Inserting a preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility.</span></span> <span data-ttu-id="f6320-270"><xref:System.Text.UTF32Encoding.GetBytes%2A>方法不會不在前面加上前序編碼的位元組序列的開頭。</span><span class="sxs-lookup"><span data-stu-id="f6320-270">The <xref:System.Text.UTF32Encoding.GetBytes%2A> method does not prepend a preamble to the beginning of a sequence of encoded bytes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f6320-271">
            <paramref name="chars" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-271">
              <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="f6320-272">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-272">-or-</span>
          </span>
          <span data-ttu-id="f6320-273">
            <paramref name="bytes" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-273">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f6320-274">
            <paramref name="charCount" /> 或 <paramref name="byteCount" /> 小於零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-274">
              <paramref name="charCount" /> or <paramref name="byteCount" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f6320-275">已啟用錯誤偵測，而 <paramref name="chars" /> 包含無效的字元序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-275">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span>
          </span>
          <span data-ttu-id="f6320-276">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-276">-or-</span>
          </span>
          <span data-ttu-id="f6320-277">
            <paramref name="byteCount" /> 小於結果位元組數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-277">
              <paramref name="byteCount" /> is less than the resulting number of bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="f6320-278">發生後援 (如需完整說明，請參閱 [.NET Framework 中的字元編碼](~/docs/standard/base-types/character-encoding.md))</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-278">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="f6320-279">-和-</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-279">-and-</span>
          </span>
          <span data-ttu-id="f6320-280">
            <see cref="P:System.Text.Encoding.EncoderFallback" /> 設定為 <see cref="T:System.Text.EncoderExceptionFallback" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-280">
              <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="f6320-281">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-281">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f6320-282">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-282">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Text.UTF32Encoding.GetEncoder" />
        <altmember cref="M:System.Text.UTF32Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override int GetBytes (char[] chars, int charIndex, int charCount, byte[] bytes, int byteIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetBytes(char[] chars, int32 charIndex, int32 charCount, unsigned int8[] bytes, int32 byteIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (chars As Char(), charIndex As Integer, charCount As Integer, bytes As Byte(), byteIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetBytes(cli::array &lt;char&gt; ^ chars, int charIndex, int charCount, cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : char[] * int * int * byte[] * int -&gt; int" Usage="uTF32Encoding.GetBytes (chars, charIndex, charCount, bytes, byteIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars">
          <span data-ttu-id="f6320-283">包含要解碼之一組字元的字元陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-283">The character array containing the set of characters to encode.</span>
          </span>
        </param>
        <param name="charIndex">
          <span data-ttu-id="f6320-284">要編碼的第一個字元索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-284">The index of the first character to encode.</span>
          </span>
        </param>
        <param name="charCount">
          <span data-ttu-id="f6320-285">要編碼的字元數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-285">The number of characters to encode.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="f6320-286">要包含結果位元組序列的位元組陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-286">The byte array to contain the resulting sequence of bytes.</span>
          </span>
        </param>
        <param name="byteIndex">
          <span data-ttu-id="f6320-287">要開始寫入結果位元組序列的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-287">The index at which to start writing the resulting sequence of bytes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f6320-288">將指定字元陣列中的一組字元編碼成指定的位元組陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-288">Encodes a set of characters from the specified character array into the specified byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f6320-289">寫入 <paramref name="bytes" /> 的實際位元組數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-289">The actual number of bytes written into <paramref name="bytes" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6320-290">若要計算所需的確切的陣列大小<xref:System.Text.UTF32Encoding.GetBytes%2A>若要儲存產生的位元組，請呼叫<xref:System.Text.UTF32Encoding.GetByteCount%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f6320-290">To calculate the exact array size required by <xref:System.Text.UTF32Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF32Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="f6320-291">若要計算最大陣列大小，請呼叫<xref:System.Text.UTF32Encoding.GetMaxByteCount%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f6320-291">To calculate the maximum array size, you call the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="f6320-292"><xref:System.Text.UTF32Encoding.GetByteCount%2A>方法通常會配置較少的記憶體，而<xref:System.Text.UTF32Encoding.GetMaxByteCount%2A>方法通常執行速度更快。</span><span class="sxs-lookup"><span data-stu-id="f6320-292">The <xref:System.Text.UTF32Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="f6320-293">使用錯誤偵測的無效的序列會造成此方法會擲回<xref:System.ArgumentException>。</span><span class="sxs-lookup"><span data-stu-id="f6320-293">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="f6320-294">錯誤偵測無效的序列會被忽略，而不會擲回任何例外狀況。</span><span class="sxs-lookup"><span data-stu-id="f6320-294">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="f6320-295">要轉換，例如，從資料流讀取資料的資料可能僅適用於循序區塊。</span><span class="sxs-lookup"><span data-stu-id="f6320-295">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="f6320-296">在此情況下，或應用程式的資料量很大，它必須分割成較小的區塊時，使用<xref:System.Text.Decoder>或<xref:System.Text.Encoder>所提供<xref:System.Text.UTF32Encoding.GetDecoder%2A>方法或<xref:System.Text.UTF32Encoding.GetEncoder%2A>方法，分別。</span><span class="sxs-lookup"><span data-stu-id="f6320-296">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application uses the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UTF32Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF32Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f6320-297">若要確保儲存為檔案或資料流時將編碼的位元組會正確解碼，您可以前置詞與前序編碼的位元組資料流。</span><span class="sxs-lookup"><span data-stu-id="f6320-297">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="f6320-298">位元組資料流的開頭插入前序編碼 (例如一系列的位元組寫入檔案的開頭) 是開發人員的責任。</span><span class="sxs-lookup"><span data-stu-id="f6320-298">Inserting a preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility.</span></span> <span data-ttu-id="f6320-299"><xref:System.Text.UTF32Encoding.GetBytes%2A>方法不會不在前面加上前序編碼的位元組序列的開頭。</span><span class="sxs-lookup"><span data-stu-id="f6320-299">The <xref:System.Text.UTF32Encoding.GetBytes%2A> method does not prepend a preamble to the beginning of a sequence of encoded bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6320-300">下列範例會決定編碼的字元陣列中，三個字元所需的位元組數目，然後將字元編碼並顯示產生的位元組數。</span><span class="sxs-lookup"><span data-stu-id="f6320-300">The following example determines the number of bytes required to encode three characters from a character array, then encodes the characters and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.GetBytes_CharArr#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetBytes_CharArr/CPP/getbytes_chararr.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.GetBytes_CharArr#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetBytes_CharArr/CS/getbytes_chararr.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.GetBytes_CharArr#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetBytes_CharArr/VB/GetBytes_CharArr.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f6320-301">
            <paramref name="chars" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-301">
              <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="f6320-302">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-302">-or-</span>
          </span>
          <span data-ttu-id="f6320-303">
            <paramref name="bytes" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-303">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f6320-304">
            <paramref name="charIndex" />、<paramref name="charCount" /> 或 <paramref name="byteIndex" /> 小於零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-304">
              <paramref name="charIndex" /> or <paramref name="charCount" /> or <paramref name="byteIndex" /> is less than zero.</span>
          </span>
          <span data-ttu-id="f6320-305">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-305">-or-</span>
          </span>
          <span data-ttu-id="f6320-306">
            <paramref name="charIndex" /> 與 <paramref name="charCount" /> 不代表 <paramref name="chars" /> 中有效的範圍。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-306">
              <paramref name="charIndex" /> and <paramref name="charCount" /> do not denote a valid range in <paramref name="chars" />.</span>
          </span>
          <span data-ttu-id="f6320-307">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-307">-or-</span>
          </span>
          <span data-ttu-id="f6320-308">
            <paramref name="byteIndex" /> 在 <paramref name="bytes" /> 中不是有效的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-308">
              <paramref name="byteIndex" /> is not a valid index in <paramref name="bytes" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f6320-309">已啟用錯誤偵測，而 <paramref name="chars" /> 包含無效的字元序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-309">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span>
          </span>
          <span data-ttu-id="f6320-310">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-310">-or-</span>
          </span>
          <span data-ttu-id="f6320-311">從 <paramref name="bytes" /> 到陣列結尾處，<paramref name="byteIndex" /> 沒有足夠的容量容納結果位元組。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-311">
              <paramref name="bytes" /> does not have enough capacity from <paramref name="byteIndex" /> to the end of the array to accommodate the resulting bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="f6320-312">發生後援 (如需完整說明，請參閱 [.NET Framework 中的字元編碼](~/docs/standard/base-types/character-encoding.md))</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-312">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="f6320-313">-和-</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-313">-and-</span>
          </span>
          <span data-ttu-id="f6320-314">
            <see cref="P:System.Text.Encoding.EncoderFallback" /> 設定為 <see cref="T:System.Text.EncoderExceptionFallback" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-314">
              <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UTF32Encoding.GetEncoder" />
        <altmember cref="M:System.Text.UTF32Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override int GetBytes (string s, int charIndex, int charCount, byte[] bytes, int byteIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetBytes(string s, int32 charIndex, int32 charCount, unsigned int8[] bytes, int32 byteIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (s As String, charIndex As Integer, charCount As Integer, bytes As Byte(), byteIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetBytes(System::String ^ s, int charIndex, int charCount, cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : string * int * int * byte[] * int -&gt; int" Usage="uTF32Encoding.GetBytes (s, charIndex, charCount, bytes, byteIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="f6320-315">
            <see cref="T:System.String" />，包含要編碼的一組字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-315">The <see cref="T:System.String" /> containing the set of characters to encode.</span>
          </span>
        </param>
        <param name="charIndex">
          <span data-ttu-id="f6320-316">要編碼的第一個字元索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-316">The index of the first character to encode.</span>
          </span>
        </param>
        <param name="charCount">
          <span data-ttu-id="f6320-317">要編碼的字元數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-317">The number of characters to encode.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="f6320-318">要包含結果位元組序列的位元組陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-318">The byte array to contain the resulting sequence of bytes.</span>
          </span>
        </param>
        <param name="byteIndex">
          <span data-ttu-id="f6320-319">要開始寫入結果位元組序列的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-319">The index at which to start writing the resulting sequence of bytes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f6320-320">將指定 <see cref="T:System.String" /> 中的一組字元編碼成指定的位元組陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-320">Encodes a set of characters from the specified <see cref="T:System.String" /> into the specified byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f6320-321">寫入 <paramref name="bytes" /> 的實際位元組數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-321">The actual number of bytes written into <paramref name="bytes" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6320-322">若要計算所需的確切的陣列大小<xref:System.Text.UTF32Encoding.GetBytes%2A>若要儲存產生的位元組，請呼叫<xref:System.Text.UTF32Encoding.GetByteCount%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f6320-322">To calculate the exact array size required by <xref:System.Text.UTF32Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF32Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="f6320-323">若要計算最大陣列大小，請呼叫<xref:System.Text.UTF32Encoding.GetMaxByteCount%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f6320-323">To calculate the maximum array size, you call the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="f6320-324"><xref:System.Text.UTF32Encoding.GetByteCount%2A>方法通常會配置較少的記憶體，而<xref:System.Text.UTF32Encoding.GetMaxByteCount%2A>方法通常執行速度更快。</span><span class="sxs-lookup"><span data-stu-id="f6320-324">The <xref:System.Text.UTF32Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="f6320-325">使用錯誤偵測的無效的序列會造成此方法會擲回<xref:System.ArgumentException>。</span><span class="sxs-lookup"><span data-stu-id="f6320-325">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="f6320-326">錯誤偵測無效的序列會被忽略，而不會擲回任何例外狀況。</span><span class="sxs-lookup"><span data-stu-id="f6320-326">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="f6320-327">要轉換，例如，從資料流讀取資料的資料可能僅適用於循序區塊。</span><span class="sxs-lookup"><span data-stu-id="f6320-327">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="f6320-328">在此情況下，或應用程式的資料量很大，它必須分割成較小的區塊時，使用<xref:System.Text.Decoder>或<xref:System.Text.Encoder>所提供<xref:System.Text.UTF32Encoding.GetDecoder%2A>方法或<xref:System.Text.UTF32Encoding.GetEncoder%2A>方法，分別。</span><span class="sxs-lookup"><span data-stu-id="f6320-328">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application uses the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UTF32Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF32Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f6320-329">若要確保儲存為檔案或資料流時將編碼的位元組會正確解碼，您可以前置詞與前序編碼的位元組資料流。</span><span class="sxs-lookup"><span data-stu-id="f6320-329">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="f6320-330">位元組資料流的開頭插入前序編碼 (例如一系列的位元組寫入檔案的開頭) 是開發人員的責任。</span><span class="sxs-lookup"><span data-stu-id="f6320-330">Inserting a preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility.</span></span> <span data-ttu-id="f6320-331"><xref:System.Text.UTF32Encoding.GetBytes%2A>方法不會不在前面加上前序編碼的位元組序列的開頭。</span><span class="sxs-lookup"><span data-stu-id="f6320-331">The <xref:System.Text.UTF32Encoding.GetBytes%2A> method does not prepend a preamble to the beginning of a sequence of encoded bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6320-332">下列範例會決定編碼為字串，所需的位元組數目則將字串編碼，並顯示產生的位元組數。</span><span class="sxs-lookup"><span data-stu-id="f6320-332">The following example determines the number of bytes required to encode a string, then encodes the string and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.GetBytes_String#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetBytes_String/CPP/getbytes_string.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.GetBytes_String#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetBytes_String/CS/getbytes_string.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.GetBytes_String#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetBytes_String/VB/GetBytes_String.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f6320-333">
            <paramref name="s" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-333">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="f6320-334">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-334">-or-</span>
          </span>
          <span data-ttu-id="f6320-335">
            <paramref name="bytes" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-335">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f6320-336">
            <paramref name="charIndex" />、<paramref name="charCount" /> 或 <paramref name="byteIndex" /> 小於零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-336">
              <paramref name="charIndex" /> or <paramref name="charCount" /> or <paramref name="byteIndex" /> is less than zero.</span>
          </span>
          <span data-ttu-id="f6320-337">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-337">-or-</span>
          </span>
          <span data-ttu-id="f6320-338">
            <paramref name="charIndex" /> 與 <paramref name="charCount" /> 不代表 <paramref name="chars" /> 中有效的範圍。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-338">
              <paramref name="charIndex" /> and <paramref name="charCount" /> do not denote a valid range in <paramref name="chars" />.</span>
          </span>
          <span data-ttu-id="f6320-339">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-339">-or-</span>
          </span>
          <span data-ttu-id="f6320-340">
            <paramref name="byteIndex" /> 在 <paramref name="bytes" /> 中不是有效的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-340">
              <paramref name="byteIndex" /> is not a valid index in <paramref name="bytes" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f6320-341">已啟用錯誤偵測，而 <paramref name="s" /> 包含無效的字元序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-341">Error detection is enabled, and <paramref name="s" /> contains an invalid sequence of characters.</span>
          </span>
          <span data-ttu-id="f6320-342">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-342">-or-</span>
          </span>
          <span data-ttu-id="f6320-343">從 <paramref name="bytes" /> 到陣列結尾處，<paramref name="byteIndex" /> 沒有足夠的容量容納結果位元組。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-343">
              <paramref name="bytes" /> does not have enough capacity from <paramref name="byteIndex" /> to the end of the array to accommodate the resulting bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="f6320-344">發生後援 (如需完整說明，請參閱 [.NET Framework 中的字元編碼](~/docs/standard/base-types/character-encoding.md))</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-344">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="f6320-345">-和-</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-345">-and-</span>
          </span>
          <span data-ttu-id="f6320-346">
            <see cref="P:System.Text.Encoding.EncoderFallback" /> 設定為 <see cref="T:System.Text.EncoderExceptionFallback" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-346">
              <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UTF32Encoding.GetEncoder" />
        <altmember cref="M:System.Text.UTF32Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCharCount">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f6320-347">計算將位元組序列解碼所產生的字元數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-347">Calculates the number of characters produced by decoding a sequence of bytes.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public override int GetCharCount (byte* bytes, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetCharCount(unsigned int8* bytes, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetCharCount(System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetCharCount(System::Byte* bytes, int count);" />
      <MemberSignature Language="F#" Value="override this.GetCharCount : nativeptr&lt;byte&gt; * int -&gt; int" Usage="uTF32Encoding.GetCharCount (bytes, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="f6320-348">要解碼的第一個位元組指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-348">A pointer to the first byte to decode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="f6320-349">要解碼的位元組數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-349">The number of bytes to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f6320-350">計算將起始於指定位元組指標的位元組序列解碼所產生的字元數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-350">Calculates the number of characters produced by decoding a sequence of bytes starting at the specified byte pointer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f6320-351">解碼指定位元組序列所產生的字元數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-351">The number of characters produced by decoding the specified sequence of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6320-352"><xref:System.Text.UTF32Encoding.GetCharCount%2A> 計算所需的確切的陣列大小<xref:System.Text.UTF32Encoding.GetChars%2A>方法來儲存產生的字元。</span><span class="sxs-lookup"><span data-stu-id="f6320-352"><xref:System.Text.UTF32Encoding.GetCharCount%2A> calculates the exact array size required by the <xref:System.Text.UTF32Encoding.GetChars%2A> method to store the resulting characters.</span></span> <span data-ttu-id="f6320-353">若要計算最大陣列大小，請呼叫<xref:System.Text.UTF32Encoding.GetMaxCharCount%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f6320-353">To calculate the maximum array size, call the <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="f6320-354"><xref:System.Text.UTF32Encoding.GetCharCount%2A>方法通常會配置較少的記憶體，而<xref:System.Text.UTF32Encoding.GetMaxCharCount%2A>方法通常執行速度更快。</span><span class="sxs-lookup"><span data-stu-id="f6320-354">The <xref:System.Text.UTF32Encoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="f6320-355">使用錯誤偵測的無效的序列會造成此方法會擲回<xref:System.ArgumentException>。</span><span class="sxs-lookup"><span data-stu-id="f6320-355">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="f6320-356">錯誤偵測無效的序列會被忽略，而不會擲回任何例外狀況。</span><span class="sxs-lookup"><span data-stu-id="f6320-356">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f6320-357">
            <paramref name="bytes" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-357">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f6320-358">
            <paramref name="count" /> 小於零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-358">
              <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="f6320-359">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-359">-or-</span>
          </span>
          <span data-ttu-id="f6320-360">所產生的位元組數目大於可用整數傳回的數目上限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-360">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f6320-361">已啟用錯誤偵測，而且 <paramref name="bytes" /> 包含無效的位元組序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-361">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="f6320-362">發生後援 (如需完整說明，請參閱 [.NET Framework 中的字元編碼](~/docs/standard/base-types/character-encoding.md))</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-362">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="f6320-363">-和-</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-363">-and-</span>
          </span>
          <span data-ttu-id="f6320-364">
            <see cref="P:System.Text.Encoding.DecoderFallback" /> 設定為 <see cref="T:System.Text.DecoderExceptionFallback" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-364">
              <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="f6320-365">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-365">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f6320-366">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-366">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="Overload:System.Text.UTF32Encoding.GetChars" />
        <altmember cref="M:System.Text.UTF32Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetDecoder" />
      </Docs>
    </Member>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public override int GetCharCount (byte[] bytes, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetCharCount(unsigned int8[] bytes, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCharCount (bytes As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetCharCount(cli::array &lt;System::Byte&gt; ^ bytes, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.GetCharCount : byte[] * int * int -&gt; int" Usage="uTF32Encoding.GetCharCount (bytes, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="f6320-367">包含要解碼之位元組序列的位元組陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-367">The byte array containing the sequence of bytes to decode.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="f6320-368">要解碼的第一個位元組索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-368">The index of the first byte to decode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="f6320-369">要解碼的位元組數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-369">The number of bytes to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f6320-370">計算將指定位元組陣列中的位元組序列解碼所產生的字元數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-370">Calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f6320-371">解碼指定位元組序列所產生的字元數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-371">The number of characters produced by decoding the specified sequence of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6320-372"><xref:System.Text.UTF32Encoding.GetCharCount%2A>方法會計算所需的確切的陣列大小<xref:System.Text.UTF32Encoding.GetChars%2A>方法來儲存產生的字元。</span><span class="sxs-lookup"><span data-stu-id="f6320-372">The <xref:System.Text.UTF32Encoding.GetCharCount%2A> method calculates the exact array size required by the <xref:System.Text.UTF32Encoding.GetChars%2A> method to store the resulting characters.</span></span> <span data-ttu-id="f6320-373">若要計算最大陣列大小，請呼叫<xref:System.Text.UTF32Encoding.GetMaxCharCount%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f6320-373">To calculate the maximum array size, call the <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="f6320-374"><xref:System.Text.UTF32Encoding.GetCharCount%2A>方法通常會配置較少的記憶體，而<xref:System.Text.UTF32Encoding.GetMaxCharCount%2A>方法通常執行速度更快。</span><span class="sxs-lookup"><span data-stu-id="f6320-374">The <xref:System.Text.UTF32Encoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="f6320-375">使用錯誤偵測的無效的序列會造成此方法會擲回<xref:System.ArgumentException>。</span><span class="sxs-lookup"><span data-stu-id="f6320-375">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="f6320-376">錯誤偵測無效的序列會被忽略，而不會擲回任何例外狀況。</span><span class="sxs-lookup"><span data-stu-id="f6320-376">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6320-377">下列範例會將字串編碼成位元組陣列，並接著將位元組解碼成字元陣列。</span><span class="sxs-lookup"><span data-stu-id="f6320-377">The following example encodes a string into an array of bytes, and then decodes the bytes into an array of characters.</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.GetChars#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetChars/CPP/getchars.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.GetChars#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetChars/CS/getchars.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.GetChars#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetChars/VB/GetChars.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f6320-378">
            <paramref name="bytes" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-378">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f6320-379">
            <paramref name="index" /> 或 <paramref name="count" /> 小於零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-379">
              <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="f6320-380">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-380">-or-</span>
          </span>
          <span data-ttu-id="f6320-381">
            <paramref name="index" /> 與 <paramref name="count" /> 不代表 <paramref name="bytes" /> 中有效的範圍。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-381">
              <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span>
          </span>
          <span data-ttu-id="f6320-382">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-382">-or-</span>
          </span>
          <span data-ttu-id="f6320-383">所產生的位元組數目大於可用整數傳回的數目上限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-383">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f6320-384">已啟用錯誤偵測，而且 <paramref name="bytes" /> 包含無效的位元組序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-384">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="f6320-385">發生後援 (如需完整說明，請參閱 [.NET Framework 中的字元編碼](~/docs/standard/base-types/character-encoding.md))</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-385">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="f6320-386">-和-</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-386">-and-</span>
          </span>
          <span data-ttu-id="f6320-387">
            <see cref="P:System.Text.Encoding.DecoderFallback" /> 設定為 <see cref="T:System.Text.DecoderExceptionFallback" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-387">
              <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Text.UTF32Encoding.GetChars" />
        <altmember cref="M:System.Text.UTF32Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetDecoder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetChars">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f6320-388">將位元組序列解碼成一組字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-388">Decodes a sequence of bytes into a set of characters.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override int GetChars (byte* bytes, int byteCount, char* chars, int charCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetChars(unsigned int8* bytes, int32 byteCount, char* chars, int32 charCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetChars(System::Byte* bytes, int byteCount, char* chars, int charCount);" />
      <MemberSignature Language="F#" Value="override this.GetChars : nativeptr&lt;byte&gt; * int * nativeptr&lt;char&gt; * int -&gt; int" Usage="uTF32Encoding.GetChars (bytes, byteCount, chars, charCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="byteCount" Type="System.Int32" />
        <Parameter Name="chars" Type="System.Char*" />
        <Parameter Name="charCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="f6320-389">要解碼的第一個位元組指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-389">A pointer to the first byte to decode.</span>
          </span>
        </param>
        <param name="byteCount">
          <span data-ttu-id="f6320-390">要解碼的位元組數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-390">The number of bytes to decode.</span>
          </span>
        </param>
        <param name="chars">
          <span data-ttu-id="f6320-391">開始寫入產生的一組字元之位置指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-391">A pointer to the location at which to start writing the resulting set of characters.</span>
          </span>
        </param>
        <param name="charCount">
          <span data-ttu-id="f6320-392">要寫入的最大字元數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-392">The maximum number of characters to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f6320-393">將起始於指定位元組指標的位元組序列解碼成一組字元；儲存該組字元時，係以指定的字元指標為起始點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-393">Decodes a sequence of bytes starting at the specified byte pointer into a set of characters that are stored starting at the specified character pointer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f6320-394">在 <paramref name="chars" /> 所表示的位置上寫入的實際字元數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-394">The actual number of characters written at the location indicated by <paramref name="chars" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6320-395">若要計算所需的確切的陣列大小<xref:System.Text.UTF32Encoding.GetChars%2A>來儲存產生的字元，呼叫<xref:System.Text.UTF32Encoding.GetCharCount%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f6320-395">To calculate the exact array size required by <xref:System.Text.UTF32Encoding.GetChars%2A> to store the resulting characters, call the <xref:System.Text.UTF32Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="f6320-396">若要計算最大陣列大小，請呼叫<xref:System.Text.UTF32Encoding.GetMaxCharCount%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f6320-396">To calculate the maximum array size, call the <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="f6320-397"><xref:System.Text.UTF32Encoding.GetCharCount%2A>方法通常會配置較少的記憶體，而<xref:System.Text.UTF32Encoding.GetMaxCharCount%2A>方法通常執行速度更快。</span><span class="sxs-lookup"><span data-stu-id="f6320-397">The <xref:System.Text.UTF32Encoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="f6320-398">使用錯誤偵測的無效的序列會造成此方法會擲回<xref:System.ArgumentException>。</span><span class="sxs-lookup"><span data-stu-id="f6320-398">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="f6320-399">錯誤偵測無效的序列會被忽略，而不會擲回任何例外狀況。</span><span class="sxs-lookup"><span data-stu-id="f6320-399">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="f6320-400">如果要解碼的位元組範圍包含位元組順序標記 (BOM)，而非 BOM 感知型別的方法所傳回的位元組陣列，這個方法所傳回的字元陣列中包含的字元 U + FFFE。</span><span class="sxs-lookup"><span data-stu-id="f6320-400">If the range of bytes to be decoded includes the byte order mark (BOM) and the byte array was returned by a method of a non-BOM aware type, the character U+FFFE is included in the character array returned by this method.</span></span> <span data-ttu-id="f6320-401">您可以呼叫來移除<xref:System.String.TrimStart%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="f6320-401">You can remove it by calling the <xref:System.String.TrimStart%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="f6320-402">要轉換，例如，從資料流讀取資料的資料可能僅適用於循序區塊。</span><span class="sxs-lookup"><span data-stu-id="f6320-402">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="f6320-403">在此情況下，或應用程式的資料量很大，它必須分割成較小的區塊時，使用<xref:System.Text.Decoder>或<xref:System.Text.Encoder>所提供<xref:System.Text.UTF32Encoding.GetDecoder%2A>方法或<xref:System.Text.UTF32Encoding.GetEncoder%2A>方法，分別。</span><span class="sxs-lookup"><span data-stu-id="f6320-403">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application uses the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UTF32Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF32Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f6320-404">
            <paramref name="bytes" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-404">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="f6320-405">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-405">-or-</span>
          </span>
          <span data-ttu-id="f6320-406">
            <paramref name="chars" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-406">
              <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f6320-407">
            <paramref name="byteCount" /> 或 <paramref name="charCount" /> 小於零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-407">
              <paramref name="byteCount" /> or <paramref name="charCount" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f6320-408">已啟用錯誤偵測，而且 <paramref name="bytes" /> 包含無效的位元組序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-408">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span>
          </span>
          <span data-ttu-id="f6320-409">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-409">-or-</span>
          </span>
          <span data-ttu-id="f6320-410">
            <paramref name="charCount" /> 小於結果字元數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-410">
              <paramref name="charCount" /> is less than the resulting number of characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="f6320-411">發生後援 (如需完整說明，請參閱 [.NET Framework 中的字元編碼](~/docs/standard/base-types/character-encoding.md))</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-411">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="f6320-412">-和-</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-412">-and-</span>
          </span>
          <span data-ttu-id="f6320-413">
            <see cref="P:System.Text.Encoding.DecoderFallback" /> 設定為 <see cref="T:System.Text.DecoderExceptionFallback" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-413">
              <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="f6320-414">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-414">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f6320-415">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-415">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Text.UTF32Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetDecoder" />
        <altmember cref="M:System.Text.UTF32Encoding.GetString(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override int GetChars (byte[] bytes, int byteIndex, int byteCount, char[] chars, int charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetChars(unsigned int8[] bytes, int32 byteIndex, int32 byteCount, char[] chars, int32 charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChars (bytes As Byte(), byteIndex As Integer, byteCount As Integer, chars As Char(), charIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetChars(cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex, int byteCount, cli::array &lt;char&gt; ^ chars, int charIndex);" />
      <MemberSignature Language="F#" Value="override this.GetChars : byte[] * int * int * char[] * int -&gt; int" Usage="uTF32Encoding.GetChars (bytes, byteIndex, byteCount, chars, charIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
        <Parameter Name="byteCount" Type="System.Int32" />
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="charIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="f6320-416">包含要解碼之位元組序列的位元組陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-416">The byte array containing the sequence of bytes to decode.</span>
          </span>
        </param>
        <param name="byteIndex">
          <span data-ttu-id="f6320-417">要解碼的第一個位元組索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-417">The index of the first byte to decode.</span>
          </span>
        </param>
        <param name="byteCount">
          <span data-ttu-id="f6320-418">要解碼的位元組數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-418">The number of bytes to decode.</span>
          </span>
        </param>
        <param name="chars">
          <span data-ttu-id="f6320-419">包含產生的一組字元之字元陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-419">The character array to contain the resulting set of characters.</span>
          </span>
        </param>
        <param name="charIndex">
          <span data-ttu-id="f6320-420">要開始寫入產生的一組字元之索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-420">The index at which to start writing the resulting set of characters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f6320-421">將指定位元組陣列中的位元組序列解碼成指定的字元陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-421">Decodes a sequence of bytes from the specified byte array into the specified character array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f6320-422">寫入 <paramref name="chars" /> 的實際字元數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-422">The actual number of characters written into <paramref name="chars" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6320-423">若要計算所需的確切的陣列大小<xref:System.Text.UTF32Encoding.GetChars%2A>來儲存產生的字元，呼叫<xref:System.Text.UTF32Encoding.GetCharCount%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f6320-423">To calculate the exact array size required by <xref:System.Text.UTF32Encoding.GetChars%2A> to store the resulting characters, call the <xref:System.Text.UTF32Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="f6320-424">若要計算最大陣列大小，請呼叫<xref:System.Text.UTF32Encoding.GetMaxCharCount%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f6320-424">To calculate the maximum array size, call the <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="f6320-425"><xref:System.Text.UTF32Encoding.GetCharCount%2A>方法通常會配置較少的記憶體，而<xref:System.Text.UTF32Encoding.GetMaxCharCount%2A>方法通常執行速度更快。</span><span class="sxs-lookup"><span data-stu-id="f6320-425">The <xref:System.Text.UTF32Encoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="f6320-426">使用錯誤偵測的無效的序列會造成此方法會擲回<xref:System.ArgumentException>。</span><span class="sxs-lookup"><span data-stu-id="f6320-426">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="f6320-427">錯誤偵測無效的序列會被忽略，而不會擲回任何例外狀況。</span><span class="sxs-lookup"><span data-stu-id="f6320-427">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="f6320-428">如果要解碼的位元組範圍包含位元組順序標記 (BOM)，而非 BOM 感知型別的方法所傳回的位元組陣列，這個方法所傳回的字元陣列中包含的字元 U + FFFE。</span><span class="sxs-lookup"><span data-stu-id="f6320-428">If the range of bytes to be decoded includes the byte order mark (BOM) and the byte array was returned by a method of a non-BOM aware type, the character U+FFFE is included in the character array returned by this method.</span></span> <span data-ttu-id="f6320-429">您可以呼叫來移除<xref:System.String.TrimStart%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="f6320-429">You can remove it by calling the <xref:System.String.TrimStart%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="f6320-430">要轉換，例如，從資料流讀取資料的資料可能僅適用於循序區塊。</span><span class="sxs-lookup"><span data-stu-id="f6320-430">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="f6320-431">在此情況下，或應用程式的資料量很大，它必須分割成較小的區塊時，使用<xref:System.Text.Decoder>或<xref:System.Text.Encoder>所提供<xref:System.Text.UTF32Encoding.GetDecoder%2A>方法或<xref:System.Text.UTF32Encoding.GetEncoder%2A>方法，分別。</span><span class="sxs-lookup"><span data-stu-id="f6320-431">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application uses the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UTF32Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF32Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6320-432">下列範例會將字串編碼成位元組陣列，並接著將位元組解碼成字元陣列。</span><span class="sxs-lookup"><span data-stu-id="f6320-432">The following example encodes a string into an array of bytes, and then decodes the bytes into an array of characters.</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.GetChars#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetChars/CPP/getchars.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.GetChars#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetChars/CS/getchars.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.GetChars#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetChars/VB/GetChars.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f6320-433">
            <paramref name="bytes" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-433">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="f6320-434">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-434">-or-</span>
          </span>
          <span data-ttu-id="f6320-435">
            <paramref name="chars" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-435">
              <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f6320-436">
            <paramref name="byteIndex" />、<paramref name="byteCount" /> 或 <paramref name="charIndex" /> 小於零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-436">
              <paramref name="byteIndex" /> or <paramref name="byteCount" /> or <paramref name="charIndex" /> is less than zero.</span>
          </span>
          <span data-ttu-id="f6320-437">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-437">-or-</span>
          </span>
          <span data-ttu-id="f6320-438">
            <paramref name="byteindex" /> 與 <paramref name="byteCount" /> 不代表 <paramref name="bytes" /> 中有效的範圍。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-438">
              <paramref name="byteindex" /> and <paramref name="byteCount" /> do not denote a valid range in <paramref name="bytes" />.</span>
          </span>
          <span data-ttu-id="f6320-439">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-439">-or-</span>
          </span>
          <span data-ttu-id="f6320-440">
            <paramref name="charIndex" /> 在 <paramref name="chars" /> 中不是有效的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-440">
              <paramref name="charIndex" /> is not a valid index in <paramref name="chars" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f6320-441">已啟用錯誤偵測，而且 <paramref name="bytes" /> 包含無效的位元組序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-441">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span>
          </span>
          <span data-ttu-id="f6320-442">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-442">-or-</span>
          </span>
          <span data-ttu-id="f6320-443">從 <paramref name="chars" /> 到陣列結尾處，<paramref name="charIndex" /> 沒有足夠的容量容納結果字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-443">
              <paramref name="chars" /> does not have enough capacity from <paramref name="charIndex" /> to the end of the array to accommodate the resulting characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="f6320-444">發生後援 (如需完整說明，請參閱 [.NET Framework 中的字元編碼](~/docs/standard/base-types/character-encoding.md))</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-444">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="f6320-445">-和-</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-445">-and-</span>
          </span>
          <span data-ttu-id="f6320-446">
            <see cref="P:System.Text.Encoding.DecoderFallback" /> 設定為 <see cref="T:System.Text.DecoderExceptionFallback" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-446">
              <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UTF32Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetDecoder" />
        <altmember cref="M:System.Text.UTF32Encoding.GetString(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetDecoder">
      <MemberSignature Language="C#" Value="public override System.Text.Decoder GetDecoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Text.Decoder GetDecoder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetDecoder" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDecoder () As Decoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Text::Decoder ^ GetDecoder();" />
      <MemberSignature Language="F#" Value="override this.GetDecoder : unit -&gt; System.Text.Decoder" Usage="uTF32Encoding.GetDecoder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Decoder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f6320-447">取得可以將以 UTF-32 編碼的位元組序列轉換成 Unicode 字元序列的解碼器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-447">Obtains a decoder that converts a UTF-32 encoded sequence of bytes into a sequence of Unicode characters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f6320-448">
            <see cref="T:System.Text.Decoder" />，可以將以 UTF-32 編碼的位元組序列轉換成 Unicode 字元序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-448">A <see cref="T:System.Text.Decoder" /> that converts a UTF-32 encoded sequence of bytes into a sequence of Unicode characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6320-449"><xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType>方法會將序列的位元組的區塊轉換成循序區塊中的字元，以類似的方式<xref:System.Text.UTF32Encoding.GetChars%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f6320-449">The <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> method converts sequential blocks of bytes into sequential blocks of characters, in a manner similar to the <xref:System.Text.UTF32Encoding.GetChars%2A> method.</span></span> <span data-ttu-id="f6320-450">不過，<xref:System.Text.Decoder>維護呼叫，因此它可以正確解碼位元組序列跨越區塊之間的狀態資訊。</span><span class="sxs-lookup"><span data-stu-id="f6320-450">However, a <xref:System.Text.Decoder> maintains state information between calls so it can correctly decode byte sequences that span blocks.</span></span> <span data-ttu-id="f6320-451"><xref:System.Text.Decoder>也會保留尾端位元組的資料區塊的結尾，並在下一步 的解碼作業中使用尾端位元組。</span><span class="sxs-lookup"><span data-stu-id="f6320-451">The <xref:System.Text.Decoder> also preserves trailing bytes at the end of data blocks and uses the trailing bytes in the next decoding operation.</span></span> <span data-ttu-id="f6320-452">因此，<xref:System.Text.UTF32Encoding.GetDecoder%2A>和<xref:System.Text.UTF32Encoding.GetEncoder%2A>適合用於網路傳輸和檔案作業，因為這些作業經常要處理的資料，而不是完整的資料流區塊。</span><span class="sxs-lookup"><span data-stu-id="f6320-452">Therefore, <xref:System.Text.UTF32Encoding.GetDecoder%2A> and <xref:System.Text.UTF32Encoding.GetEncoder%2A> are useful for network transmission and file operations, because those operations often deal with blocks of data instead of a complete data stream.</span></span>  
  
 <span data-ttu-id="f6320-453">如果已啟用錯誤偵測，亦即`throwOnInvalidCharacters`建構函式的參數已設為`true`中, 也已啟用錯誤偵測<xref:System.Text.Decoder>這個方法所傳回。</span><span class="sxs-lookup"><span data-stu-id="f6320-453">If error detection is enabled, that is, the `throwOnInvalidCharacters` parameter of the constructor was set to `true`, error detection is also enabled in the <xref:System.Text.Decoder> returned by this method.</span></span> <span data-ttu-id="f6320-454">如果已啟用錯誤偵測且遇到無效的序列，解碼器的狀態會是未定義，且必須停止處理。</span><span class="sxs-lookup"><span data-stu-id="f6320-454">If error detection is enabled and an invalid sequence is encountered, the state of the decoder is undefined and processing must stop.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6320-455">下列範例會使用編碼器和解碼器將字串編碼成位元組陣列，並再將位元組解碼為字元陣列。</span><span class="sxs-lookup"><span data-stu-id="f6320-455">The following example uses an encoder and a decoder to encode a string into an array of bytes, and then decode the bytes into an array of characters.</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.EncDec#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.EncDec/CPP/encdec.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.EncDec#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.EncDec/CS/encdec.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.EncDec#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.EncDec/VB/EncDec.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Decoder" />
        <altmember cref="M:System.Text.UTF32Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetString(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetEncoder">
      <MemberSignature Language="C#" Value="public override System.Text.Encoder GetEncoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Text.Encoder GetEncoder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetEncoder" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEncoder () As Encoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Text::Encoder ^ GetEncoder();" />
      <MemberSignature Language="F#" Value="override this.GetEncoder : unit -&gt; System.Text.Encoder" Usage="uTF32Encoding.GetEncoder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f6320-456">取得可以將 Unicode 字元序列轉換成以 UTF-32 編碼的位元組序列的編碼器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-456">Obtains an encoder that converts a sequence of Unicode characters into a UTF-32 encoded sequence of bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f6320-457">
            <see cref="T:System.Text.Encoder" />，可以將 Unicode 字元序列轉換成以 UTF-32 編碼的位元組序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-457">A <see cref="T:System.Text.Encoder" /> that converts a sequence of Unicode characters into a UTF-32 encoded sequence of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6320-458"><xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType>方法會將字元的循序區塊轉換成循序區塊中的位元組，以類似的方式<xref:System.Text.UTF32Encoding.GetBytes%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f6320-458">The <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method converts sequential blocks of characters into sequential blocks of bytes, in a manner similar to the <xref:System.Text.UTF32Encoding.GetBytes%2A> method.</span></span> <span data-ttu-id="f6320-459">不過，<xref:System.Text.Encoder>維護呼叫，因此它可以正確編碼跨越區塊的字元序列之間的狀態資訊。</span><span class="sxs-lookup"><span data-stu-id="f6320-459">However, a <xref:System.Text.Encoder> maintains state information between calls so it can correctly encode character sequences that span blocks.</span></span> <span data-ttu-id="f6320-460"><xref:System.Text.Encoder>也保留尾端字元的資料區塊的結尾，並在下一步 的編碼作業中使用尾端的字元。</span><span class="sxs-lookup"><span data-stu-id="f6320-460">The <xref:System.Text.Encoder> also preserves trailing characters at the end of data blocks and uses the trailing characters in the next encoding operation.</span></span> <span data-ttu-id="f6320-461">比方說，資料區塊可能會以不符合高 surrogate，結尾，而且下一個資料區塊可能會比對的低 surrogate。</span><span class="sxs-lookup"><span data-stu-id="f6320-461">For example, a data block might end with an unmatched high-surrogate, and the matching low-surrogate might be in the next data block.</span></span> <span data-ttu-id="f6320-462">因此，<xref:System.Text.UTF32Encoding.GetDecoder%2A>和<xref:System.Text.UTF32Encoding.GetEncoder%2A>適合用於網路傳輸和檔案作業，因為這些作業經常要處理的資料，而不是完整的資料流區塊。</span><span class="sxs-lookup"><span data-stu-id="f6320-462">Therefore, <xref:System.Text.UTF32Encoding.GetDecoder%2A> and <xref:System.Text.UTF32Encoding.GetEncoder%2A> are useful for network transmission and file operations, because those operations often deal with blocks of data instead of a complete data stream.</span></span>  
  
 <span data-ttu-id="f6320-463">如果已啟用錯誤偵測，亦即`throwOnInvalidCharacters`建構函式的參數已設為`true`中, 也已啟用錯誤偵測<xref:System.Text.Encoder>這個方法所傳回。</span><span class="sxs-lookup"><span data-stu-id="f6320-463">If error detection is enabled, that is, the `throwOnInvalidCharacters` parameter of the constructor was set to `true`, error detection is also enabled in the <xref:System.Text.Encoder> returned by this method.</span></span> <span data-ttu-id="f6320-464">如果已啟用錯誤偵測且遇到無效的序列，編碼器的狀態會是未定義，且必須停止處理。</span><span class="sxs-lookup"><span data-stu-id="f6320-464">If error detection is enabled and an invalid sequence is encountered, the state of the encoder is undefined and processing must stop.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6320-465">下列範例會使用編碼器和解碼器將字串編碼成位元組陣列，並再將位元組解碼為字元陣列。</span><span class="sxs-lookup"><span data-stu-id="f6320-465">The following example uses an encoder and a decoder to encode a string into an array of bytes, and then decode the bytes into an array of characters.</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.EncDec#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.EncDec/CPP/encdec.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.EncDec#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.EncDec/CS/encdec.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.EncDec#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.EncDec/VB/EncDec.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Encoder" />
        <altmember cref="M:System.Text.UTF32Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetDecoder" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="uTF32Encoding.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f6320-466">傳回目前執行個體的雜湊碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-466">Returns the hash code for the current instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f6320-467">目前 <see cref="T:System.Text.UTF32Encoding" /> 物件的雜湊碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-467">The hash code for the current <see cref="T:System.Text.UTF32Encoding" /> object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="GetMaxByteCount">
      <MemberSignature Language="C#" Value="public override int GetMaxByteCount (int charCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMaxByteCount(int32 charCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetMaxByteCount(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMaxByteCount (charCount As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMaxByteCount(int charCount);" />
      <MemberSignature Language="F#" Value="override this.GetMaxByteCount : int -&gt; int" Usage="uTF32Encoding.GetMaxByteCount charCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charCount">
          <span data-ttu-id="f6320-468">要編碼的字元數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-468">The number of characters to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f6320-469">計算將指定數目的字元編碼所產生的最大位元組數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-469">Calculates the maximum number of bytes produced by encoding the specified number of characters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f6320-470">編碼指定字元數所產生的最大位元組數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-470">The maximum number of bytes produced by encoding the specified number of characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6320-471">若要計算所需的確切的陣列大小<xref:System.Text.UTF32Encoding.GetBytes%2A>若要儲存產生的位元組，請呼叫<xref:System.Text.UTF32Encoding.GetByteCount%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f6320-471">To calculate the exact array size required by <xref:System.Text.UTF32Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF32Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="f6320-472">若要計算最大陣列大小，請呼叫<xref:System.Text.UTF32Encoding.GetMaxByteCount%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f6320-472">To calculate the maximum array size, you call the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="f6320-473"><xref:System.Text.UTF32Encoding.GetByteCount%2A>方法通常會配置較少的記憶體，而<xref:System.Text.UTF32Encoding.GetMaxByteCount%2A>方法通常執行速度更快。</span><span class="sxs-lookup"><span data-stu-id="f6320-473">The <xref:System.Text.UTF32Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="f6320-474"><xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> 是最壞情況的數字，包括目前所選最壞的情況<xref:System.Text.EncoderFallback>。</span><span class="sxs-lookup"><span data-stu-id="f6320-474"><xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> is a worst-case number, including the worst case for the currently selected <xref:System.Text.EncoderFallback>.</span></span> <span data-ttu-id="f6320-475">如果後援會選擇使用可能很大的字串、<xref:System.Text.UTF32Encoding.GetMaxByteCount%2A>可以傳回較大的值。</span><span class="sxs-lookup"><span data-stu-id="f6320-475">If a fallback is chosen with a potentially large string,  <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> can return large values.</span></span>  
  
 <span data-ttu-id="f6320-476">在大部分情況下，這個方法會傳回對小型字串合理的數字。</span><span class="sxs-lookup"><span data-stu-id="f6320-476">In most cases, this method returns reasonable numbers for small strings.</span></span> <span data-ttu-id="f6320-477">針對大型的字串，您可能選擇使用極大的緩衝區，少數的情況下，更合理的緩衝區已超出攔截錯誤。</span><span class="sxs-lookup"><span data-stu-id="f6320-477">For large strings, you might have to choose between using very large buffers and catching errors in the rare case that a more reasonable buffer is exceeded.</span></span> <span data-ttu-id="f6320-478">您也可以考慮不同的方法，並使用<xref:System.Text.UTF32Encoding.GetByteCount%2A>或<xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="f6320-478">You might also want to consider a different approach and use <xref:System.Text.UTF32Encoding.GetByteCount%2A> or <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="f6320-479"><xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> 沒有任何關聯性<xref:System.Text.UTF32Encoding.GetChars%2A>。</span><span class="sxs-lookup"><span data-stu-id="f6320-479"><xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> has no relationship to <xref:System.Text.UTF32Encoding.GetChars%2A>.</span></span> <span data-ttu-id="f6320-480">如果您需要類似的函式，以搭配<xref:System.Text.UTF32Encoding.GetChars%2A>，使用<xref:System.Text.UTF32Encoding.GetMaxCharCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="f6320-480">If you need a similar function to use with <xref:System.Text.UTF32Encoding.GetChars%2A>, use <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f6320-481">`GetMaxByteCount(N)` 不一定是相同的值`N* GetMaxByteCount(1)`。</span><span class="sxs-lookup"><span data-stu-id="f6320-481">`GetMaxByteCount(N)` is not necessarily the same value as `N* GetMaxByteCount(1)`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6320-482">下列範例會決定編碼為字串，所需的位元組數目則將字串編碼，並顯示產生的位元組數。</span><span class="sxs-lookup"><span data-stu-id="f6320-482">The following example determines the number of bytes required to encode a string, then encodes the string and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.GetBytes_String#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetBytes_String/CPP/getbytes_string.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.GetBytes_String#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetBytes_String/CS/getbytes_string.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.GetBytes_String#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetBytes_String/VB/GetBytes_String.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f6320-483">
            <paramref name="charCount" /> 小於零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-483">
              <paramref name="charCount" /> is less than zero.</span>
          </span>
          <span data-ttu-id="f6320-484">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-484">-or-</span>
          </span>
          <span data-ttu-id="f6320-485">所產生的位元組數目大於可用整數傳回的數目上限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-485">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="f6320-486">發生後援 (如需完整說明，請參閱 [.NET Framework 中的字元編碼](~/docs/standard/base-types/character-encoding.md))</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-486">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="f6320-487">-和-</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-487">-and-</span>
          </span>
          <span data-ttu-id="f6320-488">
            <see cref="P:System.Text.Encoding.EncoderFallback" /> 設定為 <see cref="T:System.Text.EncoderExceptionFallback" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-488">
              <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UTF32Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetMaxCharCount">
      <MemberSignature Language="C#" Value="public override int GetMaxCharCount (int byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMaxCharCount(int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetMaxCharCount(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMaxCharCount (byteCount As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMaxCharCount(int byteCount);" />
      <MemberSignature Language="F#" Value="override this.GetMaxCharCount : int -&gt; int" Usage="uTF32Encoding.GetMaxCharCount byteCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="byteCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="byteCount">
          <span data-ttu-id="f6320-489">要解碼的位元組數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-489">The number of bytes to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f6320-490">計算將指定數目的位元組解碼所產生的最大字元數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-490">Calculates the maximum number of characters produced by decoding the specified number of bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f6320-491">解碼指定位元組數所產生的最大字元數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-491">The maximum number of characters produced by decoding the specified number of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6320-492">若要計算所需的確切的陣列大小<xref:System.Text.UTF32Encoding.GetChars%2A>若要儲存產生的字元，請呼叫<xref:System.Text.UTF32Encoding.GetCharCount%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f6320-492">To calculate the exact array size required by <xref:System.Text.UTF32Encoding.GetChars%2A> to store the resulting characters, you call the <xref:System.Text.UTF32Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="f6320-493">若要計算最大陣列大小，請呼叫<xref:System.Text.UTF32Encoding.GetMaxCharCount%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f6320-493">To calculate the maximum array size, you call the <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="f6320-494"><xref:System.Text.UTF32Encoding.GetCharCount%2A>方法通常會配置較少的記憶體，而<xref:System.Text.UTF32Encoding.GetMaxCharCount%2A>方法通常執行速度更快。</span><span class="sxs-lookup"><span data-stu-id="f6320-494">The <xref:System.Text.UTF32Encoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="f6320-495"><xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> 是最壞情況的數字，包括目前所選最壞的情況<xref:System.Text.DecoderFallback>。</span><span class="sxs-lookup"><span data-stu-id="f6320-495"><xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> is a worst-case number, including the worst case for the currently selected <xref:System.Text.DecoderFallback>.</span></span> <span data-ttu-id="f6320-496">如果後援會選擇使用可能很大的字串、<xref:System.Text.UTF32Encoding.GetMaxCharCount%2A>可以傳回較大的值。</span><span class="sxs-lookup"><span data-stu-id="f6320-496">If a fallback is chosen with a potentially large string, <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> can return large values.</span></span>  
  
 <span data-ttu-id="f6320-497">在大部分情況下，這個方法會傳回對小型字串合理的數字。</span><span class="sxs-lookup"><span data-stu-id="f6320-497">In most cases, this method returns reasonable numbers for small strings.</span></span> <span data-ttu-id="f6320-498">針對大型的字串，您可能選擇使用極大的緩衝區，少數的情況下，更合理的緩衝區已超出攔截錯誤。</span><span class="sxs-lookup"><span data-stu-id="f6320-498">For large strings, you might have to choose between using very large buffers and catching errors in the rare case that a more reasonable buffer is exceeded.</span></span> <span data-ttu-id="f6320-499">您也可以考慮不同的方法，並使用<xref:System.Text.UTF32Encoding.GetCharCount%2A>或<xref:System.Text.Decoder.Convert%2A>。</span><span class="sxs-lookup"><span data-stu-id="f6320-499">You might also want to consider a different approach and use <xref:System.Text.UTF32Encoding.GetCharCount%2A> or <xref:System.Text.Decoder.Convert%2A>.</span></span>  
  
 <span data-ttu-id="f6320-500"><xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> 沒有任何關聯性<xref:System.Text.UTF32Encoding.GetBytes%2A>。</span><span class="sxs-lookup"><span data-stu-id="f6320-500"><xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> has no relationship to <xref:System.Text.UTF32Encoding.GetBytes%2A>.</span></span> <span data-ttu-id="f6320-501">如果您需要類似的函式，以搭配<xref:System.Text.UTF32Encoding.GetBytes%2A>，使用<xref:System.Text.UTF32Encoding.GetMaxByteCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="f6320-501">If you need a similar function to use with <xref:System.Text.UTF32Encoding.GetBytes%2A>, use <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f6320-502">`GetMaxCharCount(N)` 不一定是相同的值`N* GetMaxCharCount(1)`。</span><span class="sxs-lookup"><span data-stu-id="f6320-502">`GetMaxCharCount(N)` is not necessarily the same value as `N* GetMaxCharCount(1)`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6320-503">下列範例會將字串編碼成位元組陣列，並接著將位元組解碼成字元陣列。</span><span class="sxs-lookup"><span data-stu-id="f6320-503">The following example encodes a string into an array of bytes, and then decodes the bytes into an array of characters.</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.GetChars#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetChars/CPP/getchars.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.GetChars#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetChars/CS/getchars.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.GetChars#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetChars/VB/GetChars.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f6320-504">
            <paramref name="byteCount" /> 小於零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-504">
              <paramref name="byteCount" /> is less than zero.</span>
          </span>
          <span data-ttu-id="f6320-505">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-505">-or-</span>
          </span>
          <span data-ttu-id="f6320-506">所產生的位元組數目大於可用整數傳回的數目上限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-506">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="f6320-507">發生後援 (如需完整說明，請參閱 [.NET Framework 中的字元編碼](~/docs/standard/base-types/character-encoding.md))</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-507">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="f6320-508">-和-</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-508">-and-</span>
          </span>
          <span data-ttu-id="f6320-509">
            <see cref="P:System.Text.Encoding.DecoderFallback" /> 設定為 <see cref="T:System.Text.DecoderExceptionFallback" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-509">
              <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UTF32Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetString(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetDecoder" />
      </Docs>
    </Member>
    <Member MemberName="GetPreamble">
      <MemberSignature Language="C#" Value="public override byte[] GetPreamble ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] GetPreamble() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetPreamble" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetPreamble () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ GetPreamble();" />
      <MemberSignature Language="F#" Value="override this.GetPreamble : unit -&gt; byte[]" Usage="uTF32Encoding.GetPreamble " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f6320-510">如果設定 <see cref="T:System.Text.UTF32Encoding" /> 編碼物件提供編碼方式，則會傳回以 UTF-32 格式編碼的 Unicode 位元組順序標記。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-510">Returns a Unicode byte order mark encoded in UTF-32 format, if the <see cref="T:System.Text.UTF32Encoding" /> object is configured to supply one.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f6320-511">如果設定 <see cref="T:System.Text.UTF32Encoding" /> 物件提供編碼方式，則為包含 Unicode 位元組順序標記的位元組陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-511">A byte array containing the Unicode byte order mark, if the <see cref="T:System.Text.UTF32Encoding" /> object is configured to supply one.</span>
          </span>
          <span data-ttu-id="f6320-512">否則，這個方法會傳回長度為零的位元組陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-512">Otherwise, this method returns a zero-length byte array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6320-513"><xref:System.Text.UTF32Encoding>物件可以提供前序編碼，也就是可以加在編碼程序所產生的位元組序列的位元組陣列。</span><span class="sxs-lookup"><span data-stu-id="f6320-513">The <xref:System.Text.UTF32Encoding> object can provide a preamble, which is an array of bytes that can be prefixed to the sequence of bytes resulting from the encoding process.</span></span> <span data-ttu-id="f6320-514">引用編碼的位元組序列的位元組順序標記 （字碼指標 U + 0000 U + FEFF） 有助於判斷位元組順序的轉換格式或 UTF 解碼器。</span><span class="sxs-lookup"><span data-stu-id="f6320-514">Prefacing a sequence of encoded bytes with a byte order mark (code points U+0000 U+FEFF) helps the decoder determine the byte order and the transformation format, or UTF.</span></span> <span data-ttu-id="f6320-515">Unicode 位元組順序標記 (BOM) （以十六進位方式） 的序列化，如下所示：</span><span class="sxs-lookup"><span data-stu-id="f6320-515">The Unicode byte order mark (BOM) is serialized as follows (in hexadecimal):</span></span>  
  
-   <span data-ttu-id="f6320-516">由大到小的位元組順序： 00 00 FE FF</span><span class="sxs-lookup"><span data-stu-id="f6320-516">Big endian byte order: 00 00 FE FF</span></span>  
  
-   <span data-ttu-id="f6320-517">一些位元組由小到大位元組順序： FF FE 00 00</span><span class="sxs-lookup"><span data-stu-id="f6320-517">Little endian byte order: FF FE 00 00</span></span>  
  
 <span data-ttu-id="f6320-518">您可以具現化<xref:System.Text.UTF32Encoding>物件，其<xref:System.Text.UTF32Encoding.GetPreamble%2A>方法會傳回有效的 BOM 如下：</span><span class="sxs-lookup"><span data-stu-id="f6320-518">You can instantiate a <xref:System.Text.UTF32Encoding> object whose <xref:System.Text.UTF32Encoding.GetPreamble%2A> method returns a valid BOM in the following ways:</span></span>  
  
-   <span data-ttu-id="f6320-519">藉由擷取<xref:System.Text.UTF32Encoding>所傳回的物件<xref:System.Text.Encoding.UTF32%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="f6320-519">By retrieving the <xref:System.Text.UTF32Encoding> object returned by the <xref:System.Text.Encoding.UTF32%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="f6320-520">藉由呼叫無參數<xref:System.Text.UTF32Encoding.%23ctor>建構函式來具現化<xref:System.Text.UTF32Encoding>物件。</span><span class="sxs-lookup"><span data-stu-id="f6320-520">By calling the parameterless <xref:System.Text.UTF32Encoding.%23ctor> constructor to instantiate a <xref:System.Text.UTF32Encoding> object.</span></span>  
  
-   <span data-ttu-id="f6320-521">藉由提供`true`的值`byteOrderMark`引數<xref:System.Text.UTF32Encoding.%23ctor%2A>和<xref:System.Text.UTF32Encoding.%23ctor%2A>建構函式。</span><span class="sxs-lookup"><span data-stu-id="f6320-521">By supplying `true` as the value of the `byteOrderMark` argument to the <xref:System.Text.UTF32Encoding.%23ctor%2A> and <xref:System.Text.UTF32Encoding.%23ctor%2A> constructors.</span></span>  
  
 <span data-ttu-id="f6320-522">我們建議您使用 BOM，因為它提供幾乎特定編碼的檔案，否則為已中斷的參考識別<xref:System.Text.UTF32Encoding>物件，例如，未標記，或不正確標記 web 資料，或隨機文字檔案儲存時商務沒有國際考量或其他資料。</span><span class="sxs-lookup"><span data-stu-id="f6320-522">We recommend that you use the BOM, since it provides nearly certain identification of an encoding for files that otherwise have lost reference to the <xref:System.Text.UTF32Encoding> object, for example, untagged or improperly tagged web data, or random text files stored when a business did not have international concerns or other data.</span></span> <span data-ttu-id="f6320-523">通常，如果資料一致的方式適當地標記，可能會避免使用者的問題。</span><span class="sxs-lookup"><span data-stu-id="f6320-523">Often, user problems might be avoided if data is consistently and properly tagged.</span></span>  
  
 <span data-ttu-id="f6320-524">提供編碼類型的標準，BOM 是多餘的。</span><span class="sxs-lookup"><span data-stu-id="f6320-524">For standards that provide an encoding type, a BOM is somewhat redundant.</span></span> <span data-ttu-id="f6320-525">不過，它可以用來傳送正確的編碼方式標頭的伺服器。</span><span class="sxs-lookup"><span data-stu-id="f6320-525">However, it can be used to help a server send the correct encoding header.</span></span> <span data-ttu-id="f6320-526">或者，它可用來當做後援萬一編碼遺失時。</span><span class="sxs-lookup"><span data-stu-id="f6320-526">Alternatively, it can be used as a fallback in case the encoding is otherwise lost.</span></span>  
  
 <span data-ttu-id="f6320-527">有一些缺點，若要使用 BOM。</span><span class="sxs-lookup"><span data-stu-id="f6320-527">There are some disadvantages to using a BOM.</span></span> <span data-ttu-id="f6320-528">比方說，了解如何限制使用 BOM 的資料庫欄位可以是很困難。</span><span class="sxs-lookup"><span data-stu-id="f6320-528">For example, knowing how to limit the database fields that use a BOM can be difficult.</span></span> <span data-ttu-id="f6320-529">串連的檔案可以也會是問題，比方說，當檔案會合併，例如某種程度的不必要的字元可以得到中間的資料。</span><span class="sxs-lookup"><span data-stu-id="f6320-529">Concatenation of files can be a problem also, for example, when files are merged in such a way that an unnecessary character can end up in the middle of data.</span></span> <span data-ttu-id="f6320-530">儘管幾個缺點，不過，BOM 是強烈建議使用。</span><span class="sxs-lookup"><span data-stu-id="f6320-530">In spite of the few disadvantages, however, the use of a BOM is highly recommended.</span></span>  
  
 <span data-ttu-id="f6320-531">如需有關位元組順序和位元組順序標記的詳細資訊，請參閱 Unicode Standard > [Unicode 首頁](http://go.microsoft.com/fwlink/?LinkId=37123)。</span><span class="sxs-lookup"><span data-stu-id="f6320-531">For more information on byte order and the byte order mark, see The Unicode Standard at the [Unicode home page](http://go.microsoft.com/fwlink/?LinkId=37123).</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="f6320-532">若要確保正確解碼的編碼的位元組，您應該前置詞與前序編碼的位元組。</span><span class="sxs-lookup"><span data-stu-id="f6320-532">To ensure that the encoded bytes are decoded properly, you should prefix encoded bytes with a preamble.</span></span> <span data-ttu-id="f6320-533">請注意，<xref:System.Text.UTF32Encoding.GetBytes%2A>方法不會不在前面加上 BOM 編碼的位元組序列; 開發人員的責任提供適當的位元組資料流的開頭 BOM。</span><span class="sxs-lookup"><span data-stu-id="f6320-533">Note that the <xref:System.Text.UTF32Encoding.GetBytes%2A> method does not prepend a BOM to a sequence of encoded bytes; supplying a BOM at the beginning of an appropriate byte stream is the developer's responsibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6320-534">下列程式碼範例會擷取和位元組順序標示為不同的顯示<xref:System.Text.UTF32Encoding>執行個體。</span><span class="sxs-lookup"><span data-stu-id="f6320-534">The following code example retrieves and displays the byte order mark for different <xref:System.Text.UTF32Encoding> instances.</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.GetPreamble#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetPreamble/CPP/getpreamble.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.GetPreamble#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetPreamble/CS/getpreamble.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.GetPreamble#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetPreamble/VB/GetPreamble.vb#1)]  
  
 <span data-ttu-id="f6320-535">下列範例具現化兩個<xref:System.Text.UTF32Encoding>物件，其中第一個不提供 BOM，而其執行的秒數。</span><span class="sxs-lookup"><span data-stu-id="f6320-535">The following example instantiates two <xref:System.Text.UTF32Encoding> objects, the first of which does not provide a BOM and the second of which does.</span></span> <span data-ttu-id="f6320-536">然後它會呼叫<xref:System.Text.UTF32Encoding.GetPreamble%2A>UTF-32 編碼的字串寫入之前，請先將 BOM 寫入至檔案的方法。</span><span class="sxs-lookup"><span data-stu-id="f6320-536">It then calls the <xref:System.Text.UTF32Encoding.GetPreamble%2A> method to write the BOM to a file before writing a UTF-32-encoded string.</span></span> <span data-ttu-id="f6320-537">如範例輸出所示，從第二個編碼器會將位元組儲存的檔案會有更多的四個位元組，第一個。</span><span class="sxs-lookup"><span data-stu-id="f6320-537">As the output from the example shows, the file that saves the bytes from the second encoder has four more bytes that the first.</span></span>  
  
 [!code-csharp[System.Text.UTF32Encoding.GetPreamble#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetPreamble/CS/getpreamble1.cs#2)]
 [!code-vb[System.Text.UTF32Encoding.GetPreamble#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetPreamble/VB/getpreamble1.vb#2)]  
  
 <span data-ttu-id="f6320-538">您也可以藉由比較檔案`fc`命令主控台視窗中，或者您可以檢查包含十六進位檢視模式的文字編輯器中的檔案。</span><span class="sxs-lookup"><span data-stu-id="f6320-538">You can also compare the files by using the `fc` command in a console window, or you can inspect the files in a text editor that includes a Hex View mode.</span></span> <span data-ttu-id="f6320-539">請注意，當支援 UTF-32 的編輯器中開啟檔案，BOM 會不會顯示。</span><span class="sxs-lookup"><span data-stu-id="f6320-539">Note that when the file is opened in an editor that supports UTF-32, the BOM is not displayed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public override string GetString (byte[] bytes, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetString(unsigned int8[] bytes, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetString(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetString (bytes As Byte(), index As Integer, count As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetString(cli::array &lt;System::Byte&gt; ^ bytes, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.GetString : byte[] * int * int -&gt; string" Usage="uTF32Encoding.GetString (bytes, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="f6320-540">包含要解碼之位元組序列的位元組陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-540">The byte array containing the sequence of bytes to decode.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="f6320-541">要解碼的第一個位元組索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-541">The index of the first byte to decode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="f6320-542">要解碼的位元組數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-542">The number of bytes to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f6320-543">將位元組陣列中的某一段位元組範圍解碼成字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-543">Decodes a range of bytes from a byte array into a string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f6320-544">字串，包含將指定之位元組序列解碼的結果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-544">A string that contains the results of decoding the specified sequence of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6320-545">使用錯誤偵測的無效的序列會造成此方法會擲回<xref:System.ArgumentException>。</span><span class="sxs-lookup"><span data-stu-id="f6320-545">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="f6320-546">錯誤偵測無效的序列會被忽略，而不會擲回任何例外狀況。</span><span class="sxs-lookup"><span data-stu-id="f6320-546">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="f6320-547">如果要解碼的位元組範圍包含位元組順序標記 (BOM)，而非 BOM 感知型別的方法所傳回的位元組陣列，這個方法所傳回的字元陣列中包含的字元 U + FFFE。</span><span class="sxs-lookup"><span data-stu-id="f6320-547">If the range of bytes to be decoded includes the byte order mark (BOM), and the byte array was returned by a method of a non-BOM aware type, the character U+FFFE is included in the character array returned by this method.</span></span> <span data-ttu-id="f6320-548">您可以呼叫來移除<xref:System.String.TrimStart%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="f6320-548">You can remove it by calling the <xref:System.String.TrimStart%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="f6320-549">要轉換，例如，從資料流讀取資料的資料可能僅適用於循序區塊。</span><span class="sxs-lookup"><span data-stu-id="f6320-549">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="f6320-550">在此情況下，或如果資料量太大，它必須分割成較小的區塊，應該使用應用程式<xref:System.Text.Decoder>或<xref:System.Text.Encoder>所提供<xref:System.Text.UTF32Encoding.GetDecoder%2A>方法或<xref:System.Text.UTF32Encoding.GetEncoder%2A>方法，分別。</span><span class="sxs-lookup"><span data-stu-id="f6320-550">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UTF32Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF32Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6320-551">下列範例將字串編碼的位元組，以位元組由小到大順序的其中一個，另一個位元組由大到小順序的兩個陣列陣列。</span><span class="sxs-lookup"><span data-stu-id="f6320-551">The following example encodes a string into two arrays arrays of bytes, one in little-endian order and the other in big-endian order.</span></span> <span data-ttu-id="f6320-552">然後將回字串解碼的位元組。</span><span class="sxs-lookup"><span data-stu-id="f6320-552">It then decodes the bytes back into a string.</span></span>  
  
 [!code-csharp[System.Text.UTF32Encoding.GetString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.utf32encoding.getstring/CS/getstring.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.GetString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.utf32encoding.getstring/VB/GetString.vb#1)]  
  
 <span data-ttu-id="f6320-553">下列範例會藉由呼叫初始化陣列<xref:System.Text.UTF32Encoding.GetByteCount%2A>方法，以判斷完全多少個位元組所需編碼的字串，然後再將位元組順序標記 (BOM) 的大小。</span><span class="sxs-lookup"><span data-stu-id="f6320-553">The following example initializes an array by calling the <xref:System.Text.UTF32Encoding.GetByteCount%2A> method to determine exactly how many bytes are required for an encoded string and then adding the size of the byte order mark (BOM).</span></span> <span data-ttu-id="f6320-554">此範例接著會呼叫<xref:System.Text.UTF32Encoding.GetPreamble%2A>方法，可儲存至的陣列，然後再呼叫 BOM<xref:System.Text.UTF32Encoding.GetBytes%2A>儲存編碼的位元組陣列的方法。</span><span class="sxs-lookup"><span data-stu-id="f6320-554">The example then calls the <xref:System.Text.UTF32Encoding.GetPreamble%2A> method to store the BOM to the array before calling the <xref:System.Text.UTF32Encoding.GetBytes%2A> method to store the encoded bytes to the array.</span></span> <span data-ttu-id="f6320-555">此範例接著會呼叫<xref:System.Text.UTF32Encoding.GetString%2A>方法來解碼的字串。</span><span class="sxs-lookup"><span data-stu-id="f6320-555">The example then calls the <xref:System.Text.UTF32Encoding.GetString%2A> method to decode the string.</span></span>  
  
 [!code-csharp[System.Text.UTF32Encoding.GetString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.utf32encoding.getstring/CS/GetString1.cs#2)]
 [!code-vb[System.Text.UTF32Encoding.GetString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.utf32encoding.getstring/VB/GetString1.vb#2)]  
  
 <span data-ttu-id="f6320-556">請注意，在此情況下已解碼的字串不同於原始的字串，因為它的開頭的 32 位元的位元組順序標記 U + 7C94:FFFE u+0000。</span><span class="sxs-lookup"><span data-stu-id="f6320-556">Note that in this case the decoded string differs from the original string, since it begins with a 32-bit byte order mark U+FFFE U+0000.</span></span> <span data-ttu-id="f6320-557">這表示兩個字串將會比較結果不相等，而且，如果字串為輸出，BOM 會顯示為取代字元"？"。</span><span class="sxs-lookup"><span data-stu-id="f6320-557">This means that the two strings will compare as unequal, and that if the string is output, the BOM will be displayed as the replacement character "?".</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f6320-558">
            <paramref name="bytes" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-558">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f6320-559">
            <paramref name="index" /> 或 <paramref name="count" /> 小於零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-559">
              <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="f6320-560">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-560">-or-</span>
          </span>
          <span data-ttu-id="f6320-561">
            <paramref name="index" /> 和 <paramref name="count" /> 不代表 <paramref name="bytes" /> 中有效的範圍。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-561">
              <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f6320-562">已啟用錯誤偵測，而且 <paramref name="bytes" /> 包含無效的位元組序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-562">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="f6320-563">發生後援 (如需完整說明，請參閱 [.NET Framework 中的字元編碼](~/docs/standard/base-types/character-encoding.md))</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-563">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for a complete explanation)</span>
          </span>
          <span data-ttu-id="f6320-564">-和-</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-564">-and-</span>
          </span>
          <span data-ttu-id="f6320-565">
            <see cref="P:System.Text.Encoding.DecoderFallback" /> 設定為 <see cref="T:System.Text.DecoderExceptionFallback" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6320-565">
              <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UTF32Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetDecoder" />
        <altmember cref="M:System.Text.UTF32Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetMaxCharCount(System.Int32)" />
      </Docs>
    </Member>
  </Members>
</Type>