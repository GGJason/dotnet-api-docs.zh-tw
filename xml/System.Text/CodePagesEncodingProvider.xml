<Type Name="CodePagesEncodingProvider" FullName="System.Text.CodePagesEncodingProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ec395e2880547bd074b772633a50cbe3dfa1a2c2" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39998094" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class CodePagesEncodingProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CodePagesEncodingProvider extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Text.CodePagesEncodingProvider" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CodePagesEncodingProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodePagesEncodingProvider sealed" />
  <TypeSignature Language="F#" Value="type CodePagesEncodingProvider = class" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding.CodePages</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>針對桌面 .NET Framework 所支援但 UWP App 不支援的字碼頁，提供其編碼提供者的存取權。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Text.CodePagesEncodingProvider> .NET 原生實作的.NET Core 只支援類別。  
  
 .NET Framework for Windows desktop 支援一組大型的 Unicode 和程式碼頁的編碼方式。 通用 Windows 平台和.NET Native，相反地，支援下列編碼方式：  
  
-   ASCII （字碼頁為 20127），由<xref:System.Text.Encoding.ASCII%2A?displayProperty=nameWithType>屬性。  
  
-   ISO-8859-1 （字碼頁 28591）。  
  
-   UTF-7、utf （字碼頁為 65000），這由<xref:System.Text.Encoding.UTF7%2A?displayProperty=nameWithType>屬性。  
  
-   Utf-8 （字碼頁 65001），這由<xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType>屬性。  
  
-   UTF-16 和 UTF-16LE （字碼頁 1200年），這由<xref:System.Text.Encoding.Unicode%2A?displayProperty=nameWithType>屬性。  
  
-   UTF-16BE （字碼頁 1201年），這呼叫具現化<xref:System.Text.UnicodeEncoding.%23ctor%2A?displayProperty=nameWithType>或是<xref:System.Text.UnicodeEncoding.%23ctor%2A?displayProperty=nameWithType>建構函式`bigEndian`的值`true`。  
  
-   UTF-32 和 UTF-32LE （字碼頁為 12000），這由<xref:System.Text.Encoding.UTF32%2A?displayProperty=nameWithType>屬性。  
  
-   UTF-32BE （字碼頁為 12001），這呼叫具現化<xref:System.Text.UTF32Encoding>建構函式`bigEndian`參數，並提供值為`true`方法呼叫中。  
  
 除了字碼頁 20127，不支援字碼頁編碼方式。  
  
 <xref:System.Text.CodePagesEncodingProvider>類別會擴充<xref:System.Text.EncodingProvider>至.NET Native 和通用 Windows 平台 (UWP) 應用程式提供這些字碼頁。 若要使用這些額外的字碼頁，您執行下列作業：  
  
-   您可以將 System.Text.Encoding.CodePages.dll 組件的參考加入專案。  
  
-   擷取<xref:System.Text.CodePagesEncodingProvider>靜態物件<xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=nameWithType>屬性。  
  
-   將 <xref:System.Text.CodePagesEncodingProvider> 物件傳遞至 <xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=nameWithType> 方法。  
  
 在後<xref:System.Text.EncodingProvider>物件已註冊過，它支援的編碼方式可呼叫的多載<xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType>; 您不應該呼叫<xref:System.Text.EncodingProvider.GetEncoding%2A?displayProperty=nameWithType>多載。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Instance">
      <MemberSignature Language="C#" Value="public static System.Text.EncodingProvider Instance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Text.EncodingProvider Instance" />
      <MemberSignature Language="DocId" Value="P:System.Text.CodePagesEncodingProvider.Instance" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Instance As EncodingProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Text::EncodingProvider ^ Instance { System::Text::EncodingProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Instance : System.Text.EncodingProvider" Usage="System.Text.CodePagesEncodingProvider.Instance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.CodePages</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.EncodingProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>針對桌面 .NET Framework 所支援但目前 .NET Framework 平台不支援的字碼頁，取得其編碼提供者。</summary>
        <value>可讓您存取目前的.NET Framework 平台不支援的編碼方式編碼提供者。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Text.CodePagesEncodingProvider.Instance%2A>屬性會傳回<xref:System.Text.EncodingProvider>物件，編碼可讓應用程式為目標[!INCLUDE[net_v46](~/includes/net-v46-md.md)]或更新版本，否則都只在 Windows 桌面上的.NET Framework。  
  
 在 Windows 桌面上的.NET Framework 支援大量的字元編碼方式和程式碼頁面。 您可以取得編碼方式的完整清單，藉由呼叫<xref:System.Text.Encoding.GetEncodings%2A?displayProperty=nameWithType>方法，這是提供於完整.NET Framework 在 Windows 桌面上。 .NET native for UWP 應用程式，相反地，預設會支援下列編碼方式：  
  
-   ASCII （字碼頁為 20127），由<xref:System.Text.Encoding.ASCII%2A?displayProperty=nameWithType>屬性。  
  
-   ISO-8859-1 （字碼頁 28591）。  
  
-   UTF-7、utf （字碼頁為 65000），這由<xref:System.Text.Encoding.UTF7%2A?displayProperty=nameWithType>屬性。  
  
-   Utf-8 （字碼頁 65001），這由<xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType>屬性。  
  
-   UTF-16 和 UTF-16LE （字碼頁 1200年），這由<xref:System.Text.Encoding.Unicode%2A?displayProperty=nameWithType>屬性。  
  
-   UTF-16BE （字碼頁 1201年），這呼叫具現化<xref:System.Text.UnicodeEncoding.%23ctor%2A?displayProperty=nameWithType>或是<xref:System.Text.UnicodeEncoding.%23ctor%2A?displayProperty=nameWithType>建構函式`bigEndian`的值`true`。  
  
-   UTF-32 和 UTF-32LE （字碼頁為 12000），這由<xref:System.Text.Encoding.UTF32%2A?displayProperty=nameWithType>屬性。  
  
-   UTF-32BE （字碼頁為 12001），這呼叫具現化<xref:System.Text.UTF32Encoding>建構函式`bigEndian`參數，並提供值為`true`方法呼叫中。  
  
 若要擷取的編碼方式，會出現在.NET Framework 在 Windows 桌面上，但不是在 UWP 應用程式中，您執行下列作業：  
  
-   您可以將 System.Text.Encoding.CodePages.dll 組件的參考加入專案。  
  
-   取得<xref:System.Text.EncodingProvider>靜態物件<xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=nameWithType>屬性。  
  
-   傳遞<xref:System.Text.EncodingProvider>物件至<xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=nameWithType>方法，讓所提供之編碼<xref:System.Text.EncodingProvider>common language runtime 提供的物件。  
  
-   呼叫<xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType>多載，以擷取的編碼方式。 <xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType>方法會呼叫對應<xref:System.Text.EncodingProvider.GetEncoding%2A?displayProperty=nameWithType>方法，以判斷是否可以提供要求之編碼方式。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>