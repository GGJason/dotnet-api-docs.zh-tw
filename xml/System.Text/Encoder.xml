<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Encoder.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5935e8a3f446a4bf08e1efb7afb01e36886d1cd6f.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">935e8a3f446a4bf08e1efb7afb01e36886d1cd6f</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Text.Encoder">
          <source>Converts a set of characters into a sequence of bytes.</source>
          <target state="translated">將一組字元轉換成位元組序列。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.Encoder">
          <source>To obtain an instance of an implementation of the <ph id="ph1">&lt;xref:System.Text.Encoder&gt;</ph> class, the application should use the <ph id="ph2">&lt;xref:System.Text.Encoding.GetEncoder%2A&gt;</ph> method of an <ph id="ph3">&lt;xref:System.Text.Encoding&gt;</ph> implementation.</source>
          <target state="translated">若要取得之實作的執行個體<ph id="ph1">&lt;xref:System.Text.Encoder&gt;</ph>類別，應用程式應該使用<ph id="ph2">&lt;xref:System.Text.Encoding.GetEncoder%2A&gt;</ph>方法<ph id="ph3">&lt;xref:System.Text.Encoding&gt;</ph>實作。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.Encoder">
          <source>The <ph id="ph1">&lt;xref:System.Text.Encoder.GetByteCount%2A&gt;</ph> method determines how many bytes result in encoding a set of Unicode characters, and the <ph id="ph2">&lt;xref:System.Text.Encoder.GetBytes%2A&gt;</ph> method performs the actual encoding.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.Encoder.GetByteCount%2A&gt;</ph>方法會判斷多少個位元組會導致一組 Unicode 字元編碼和<ph id="ph2">&lt;xref:System.Text.Encoder.GetBytes%2A&gt;</ph>方法會執行實際的編碼方式。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.Encoder">
          <source>There are several versions of both of these methods available in the <ph id="ph1">&lt;xref:System.Text.Encoder&gt;</ph> class.</source>
          <target state="translated">這兩種方法的數個版本中有<ph id="ph1">&lt;xref:System.Text.Encoder&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.Encoder">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">如需詳細資訊，請參閱<ph id="ph1">&lt;xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.Encoder">
          <source>A <ph id="ph1">&lt;xref:System.Text.Encoder&gt;</ph> object maintains state information between successive calls to <ph id="ph2">`GetBytes`</ph> or <ph id="ph3">&lt;xref:System.Text.Decoder.Convert%2A&gt;</ph> methods so that it can correctly encode character sequences that span blocks.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Text.Encoder&gt;</ph>物件會維護狀態資訊之間的後續呼叫<ph id="ph2">`GetBytes`</ph>或<ph id="ph3">&lt;xref:System.Text.Decoder.Convert%2A&gt;</ph>方法，讓它可以正確編碼的字元序列跨越區塊。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.Encoder">
          <source>The <ph id="ph1">&lt;xref:System.Text.Encoder&gt;</ph> also preserves trailing characters at the end of data blocks and uses the trailing characters in the next encoding operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.Encoder&gt;</ph>也保留尾端字元的資料區塊的結尾，並在下一步的編碼作業中使用尾端字元。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.Encoder">
          <source>For example, a data block might end with an unmatched high surrogate, and the matching low surrogate might be in the next data block.</source>
          <target state="translated">例如，資料區塊可能會不相符的高 surrogate，以結束，而且比對的低 surrogate 可能在下一個資料區塊中。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.Encoder">
          <source>Therefore, <ph id="ph1">&lt;xref:System.Text.Encoding.GetDecoder%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Text.Encoding.GetEncoder%2A&gt;</ph> are useful for network transmission and file operations, because those operations often deal with blocks of data instead of a complete data stream.</source>
          <target state="translated">因此，<ph id="ph1">&lt;xref:System.Text.Encoding.GetDecoder%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Text.Encoding.GetEncoder%2A&gt;</ph>進行網路傳輸，而檔案作業很實用是因為這些作業經常要處理而不是完整的資料流的資料區塊。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.Encoder">
          <source>When the application is done with a stream of data it should make sure that the state information is flushed by setting the <ph id="ph1">`flush`</ph> parameter to <ph id="ph2">`true`</ph> in the appropriate method call.</source>
          <target state="translated">當應用程式會完成它應該要確定的狀態資訊會藉由設定排清的資料的資料流<ph id="ph1">`flush`</ph>參數<ph id="ph2">`true`</ph>適當的方法呼叫中。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.Encoder">
          <source>If an exception occurs or if the application switches streams, it should call <ph id="ph1">&lt;xref:System.Text.Encoder.Reset%2A&gt;</ph> to clear the internal state of the <ph id="ph2">`Encoder`</ph> object.</source>
          <target state="translated">如果發生例外狀況，或如果應用程式切換資料流時，它應該呼叫<ph id="ph1">&lt;xref:System.Text.Encoder.Reset%2A&gt;</ph>清除的內部狀態<ph id="ph2">`Encoder`</ph>物件。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.Encoder">
          <source>Version Considerations</source>
          <target state="translated">版本的考量</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.Encoder">
          <source>A <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> or <ph id="ph2">&lt;xref:System.Text.Encoder&gt;</ph> object can be serialized during a conversion operation.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph>或<ph id="ph2">&lt;xref:System.Text.Encoder&gt;</ph>物件可以序列化期間的轉換作業。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.Encoder">
          <source>The state of the object is retained if it is deserialized in the same version of the .NET Framework, but lost if it is deserialized in another version.</source>
          <target state="translated">物件的狀態會保留在相同版本的.NET Framework 中，還原序列化，但在另一個版本中還原序列化時遺失。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.Encoder">
          <source>The following example demonstrates how to convert an array of Unicode characters into blocks of bytes using a specified encoding.</source>
          <target state="translated">下列範例會示範如何將 Unicode 字元的陣列轉換成使用指定編碼的位元組區塊。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.Encoder">
          <source>For comparison, the array of characters is first encoded using <ph id="ph1">&lt;xref:System.Text.UTF7Encoding&gt;</ph>.</source>
          <target state="translated">如需比較，字元陣列先編碼使用<ph id="ph1">&lt;xref:System.Text.UTF7Encoding&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.Encoder">
          <source>Next, the array of characters is encoded using an <ph id="ph1">&lt;xref:System.Text.Encoder&gt;</ph>.</source>
          <target state="translated">接下來，使用編碼的字元陣列<ph id="ph1">&lt;xref:System.Text.Encoder&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.Encoder">
          <source>When your application inherits from this class, it must override all the members.</source>
          <target state="translated">當您的應用程式會繼承自這個類別時，它必須覆寫所有成員。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Text.Encoder" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Text.Encoder" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Encoder.#ctor">
          <source>To obtain an instance of an implementation of this class, the application should use the <ph id="ph1">&lt;xref:System.Text.Encoding.GetEncoder%2A&gt;</ph> method of an <ph id="ph2">&lt;xref:System.Text.Encoding&gt;</ph> implementation.</source>
          <target state="translated">若要取得之這個類別實作的執行個體，應用程式應該使用<ph id="ph1">&lt;xref:System.Text.Encoding.GetEncoder%2A&gt;</ph>方法<ph id="ph2">&lt;xref:System.Text.Encoding&gt;</ph>實作。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Encoder.#ctor">
          <source>The following example demonstrates two techniques for initializing a new <ph id="ph1">&lt;xref:System.Text.Encoder&gt;</ph> instance.</source>
          <target state="translated">下列範例會示範兩種技術來初始化新<ph id="ph1">&lt;xref:System.Text.Encoder&gt;</ph>執行個體。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="T:System.Text.Encoder">
          <source>Converts a buffer or array of Unicode characters to an encoded byte sequence.</source>
          <target state="translated">將 Unicode 字元的緩衝區或陣列轉換成編碼的位元組序列。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.Convert(System.Char*,System.Int32,System.Byte*,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>The address of a string of UTF-16 encoded characters to convert.</source>
          <target state="translated">要轉換的 UTF-16 編碼字元字串位址。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.Convert(System.Char*,System.Int32,System.Byte*,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>The number of characters in <bpt id="p1">&lt;c&gt;</bpt>chars<ept id="p1">&lt;/c&gt;</ept> to convert.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>chars<ept id="p1">&lt;/c&gt;</ept> 中要轉換的字元數。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.Convert(System.Char*,System.Int32,System.Byte*,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>The address of a buffer to store the converted bytes.</source>
          <target state="translated">緩衝區位址，用來儲存已轉換的位元組。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.Convert(System.Char*,System.Int32,System.Byte*,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>The maximum number of bytes in <bpt id="p1">&lt;c&gt;</bpt>bytes<ept id="p1">&lt;/c&gt;</ept> to use in the conversion.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>bytes<ept id="p1">&lt;/c&gt;</ept> 中要用於轉換的位元組數目上限。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.Convert(System.Char*,System.Int32,System.Byte*,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to indicate no further data is to be converted; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">若表示不進行任何其他資料轉換即為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.Convert(System.Char*,System.Int32,System.Byte*,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>When this method returns, contains the number of characters from <bpt id="p1">&lt;c&gt;</bpt>chars<ept id="p1">&lt;/c&gt;</ept> that were used in the conversion.</source>
          <target state="translated">傳回此方法時，會包含 <bpt id="p1">&lt;c&gt;</bpt>chars<ept id="p1">&lt;/c&gt;</ept> 中用於轉換的字元數目。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.Convert(System.Char*,System.Int32,System.Byte*,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>This parameter is passed uninitialized.</source>
          <target state="translated">這個參數會以未初始化的狀態傳遞。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.Convert(System.Char*,System.Int32,System.Byte*,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>When this method returns, contains the number of bytes that were used in the conversion.</source>
          <target state="translated">傳回此方法時，包含轉換所使用的位元組數目。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.Convert(System.Char*,System.Int32,System.Byte*,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>This parameter is passed uninitialized.</source>
          <target state="translated">這個參數會以未初始化的狀態傳遞。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.Convert(System.Char*,System.Int32,System.Byte*,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>When this method returns, contains <ph id="ph1">&lt;see langword="true" /&gt;</ph> if all the characters specified by <bpt id="p1">&lt;c&gt;</bpt>charCount<ept id="p1">&lt;/c&gt;</ept> were converted; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">傳回此方法時，若所有 <bpt id="p1">&lt;c&gt;</bpt>charCount<ept id="p1">&lt;/c&gt;</ept> 指定的字元皆已轉換則包含 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.Convert(System.Char*,System.Int32,System.Byte*,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>This parameter is passed uninitialized.</source>
          <target state="translated">這個參數會以未初始化的狀態傳遞。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.Convert(System.Char*,System.Int32,System.Byte*,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>Converts a buffer of Unicode characters to an encoded byte sequence and stores the result in another buffer.</source>
          <target state="translated">將 Unicode 字元的緩衝區轉換成編碼的位元組序列，並將結果儲存在另一個緩衝區。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Encoder.Convert(System.Char*,System.Int32,System.Byte*,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>Remember that the <ph id="ph1">&lt;xref:System.Text.Encoder&gt;</ph> object saves state between calls to <ph id="ph2">&lt;xref:System.Text.Encoder.Convert%2A&gt;</ph>.</source>
          <target state="translated">請記住，<ph id="ph1">&lt;xref:System.Text.Encoder&gt;</ph>物件儲存呼叫之間的狀態<ph id="ph2">&lt;xref:System.Text.Encoder.Convert%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Encoder.Convert(System.Char*,System.Int32,System.Byte*,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>When the application is done with a stream of data, it should set the <ph id="ph1">`flush`</ph> parameter to <ph id="ph2">`true`</ph> to make sure that the state information is flushed.</source>
          <target state="translated">當應用程式已完成的資料流時，它應該設定<ph id="ph1">`flush`</ph>參數<ph id="ph2">`true`</ph>以確定會排清狀態資訊。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Encoder.Convert(System.Char*,System.Int32,System.Byte*,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>With this setting, the encoder ignores invalid bytes at the end of the data block and clears the internal buffer.</source>
          <target state="translated">使用此設定時，編碼器會忽略無效位元組的資料區塊的結尾，並清除內部緩衝區。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Encoder.Convert(System.Char*,System.Int32,System.Byte*,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>Any remaining processed data that is part of a logical unit, such as the high surrogate of a surrogate pair, is converted according to the current fallback settings.</source>
          <target state="translated">屬於邏輯的單位，例如之高 surrogate 的 surrogate 字組的任何其餘處理過的資料會根據目前的後援設定轉換。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Encoder.Convert(System.Char*,System.Int32,System.Byte*,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>The <ph id="ph1">`Convert`</ph> method is designed to be used in a loop to encode an arbitrary amount of input, such as data read from a file or stream.</source>
          <target state="translated"><ph id="ph1">`Convert`</ph>方法設計用來在迴圈中用來編碼任意數量的輸入，例如從檔案或資料流讀取的資料。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Encoder.Convert(System.Char*,System.Int32,System.Byte*,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>It stores the output of the encoding operation in a fixed-size buffer.</source>
          <target state="translated">它會編碼作業的輸出儲存在固定大小的緩衝區。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Encoder.Convert(System.Char*,System.Int32,System.Byte*,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source><ph id="ph1">&lt;xref:System.Text.Encoder.GetBytes%2A&gt;</ph> will throw an exception if the output buffer isn't large enough, but <ph id="ph2">&lt;xref:System.Text.Encoder.Convert%2A&gt;</ph> will fill as much space as possible and return the chars read and bytes written.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.Encoder.GetBytes%2A&gt;</ph> 如果輸出緩衝區不夠大，無法，便會擲回例外狀況，但<ph id="ph2">&lt;xref:System.Text.Encoder.Convert%2A&gt;</ph>會填滿的空間越好，並傳回字元讀取和寫入的位元組。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Encoder.Convert(System.Char*,System.Int32,System.Byte*,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>Also see the <ph id="ph1">&lt;xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType&gt;</ph> topic for more comments.</source>
          <target state="translated">另請參閱<ph id="ph1">&lt;xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType&gt;</ph>主題的多個註解。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Encoder.Convert(System.Char*,System.Int32,System.Byte*,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>The <ph id="ph1">`completed`</ph> output parameter indicates whether all the data in the input buffer was converted and stored in the output buffer.</source>
          <target state="translated"><ph id="ph1">`completed`</ph>輸出參數會指出是否轉換並儲存在輸出緩衝區中，輸入緩衝區中的所有資料。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Encoder.Convert(System.Char*,System.Int32,System.Byte*,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>This parameter is set to <ph id="ph1">`false`</ph> if the number of characters specified by the <ph id="ph2">`charCount`</ph> parameter cannot be converted without exceeding the number of bytes specified by the <ph id="ph3">`byteCount`</ph> parameter.</source>
          <target state="translated">此參數設為<ph id="ph1">`false`</ph>如果所指定的字元數<ph id="ph2">`charCount`</ph>無法轉換參數，但不超過指定的位元組數目<ph id="ph3">`byteCount`</ph>參數。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Encoder.Convert(System.Char*,System.Int32,System.Byte*,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>In that situation, the application should use the contents of the output buffer or provide a new output buffer, increment the <ph id="ph1">`chars`</ph> parameter by the number of characters specified by the <ph id="ph2">`charsUsed`</ph> parameter, then call the <ph id="ph3">`Convert`</ph> method again to process the remaining input.</source>
          <target state="translated">在此情況下，應用程式應該使用輸出緩衝區的內容，或提供新的輸出緩衝區，遞增<ph id="ph1">`chars`</ph>參數所指定的字元數<ph id="ph2">`charsUsed`</ph>參數，然後呼叫<ph id="ph3">`Convert`</ph>方法一次若要處理剩餘的輸入。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Encoder.Convert(System.Char*,System.Int32,System.Byte*,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>The <ph id="ph1">`completed`</ph> parameter can also be set to <ph id="ph2">`false`</ph>, even though the <ph id="ph3">`charsUsed`</ph> and <ph id="ph4">`charCount`</ph> parameters are equal.</source>
          <target state="translated"><ph id="ph1">`completed`</ph>參數也會設定為<ph id="ph2">`false`</ph>，即使<ph id="ph3">`charsUsed`</ph>和<ph id="ph4">`charCount`</ph>參數是否相等。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Encoder.Convert(System.Char*,System.Int32,System.Byte*,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>This situation occurs if there is still data in the <ph id="ph1">&lt;xref:System.Text.Encoder&gt;</ph> object that has not been stored in the <ph id="ph2">`chars`</ph> buffer.</source>
          <target state="translated">如果仍然中的資料，就會發生這種情況下<ph id="ph1">&lt;xref:System.Text.Encoder&gt;</ph>物件未儲存在<ph id="ph2">`chars`</ph>緩衝區。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.Convert(System.Char*,System.Int32,System.Byte*,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> or <ph id="ph2">&lt;paramref name="bytes" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph> (<ph id="ph4">&lt;see langword="Nothing" /&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="bytes" /&gt;</ph> 是 <ph id="ph3">&lt;see langword="null" /&gt;</ph> (<ph id="ph4">&lt;see langword="Nothing" /&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.Convert(System.Char*,System.Int32,System.Byte*,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source><ph id="ph1">&lt;paramref name="charCount" /&gt;</ph> or <ph id="ph2">&lt;paramref name="byteCount" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="charCount" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="byteCount" /&gt;</ph> 小於零。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.Convert(System.Char*,System.Int32,System.Byte*,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>The output buffer is too small to contain any of the converted input.</source>
          <target state="translated">輸出緩衝區太小而無法包含任何已轉換的輸入。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.Convert(System.Char*,System.Int32,System.Byte*,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>The output buffer should be greater than or equal to the size indicated by the <ph id="ph1">&lt;see cref="Overload:System.Text.Encoder.GetByteCount" /&gt;</ph> method.</source>
          <target state="translated">輸出緩衝區應大於或等於 <ph id="ph1">&lt;see cref="Overload:System.Text.Encoder.GetByteCount" /&gt;</ph> 方法所指出的大小。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.Convert(System.Char*,System.Int32,System.Byte*,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>A fallback occurred (see <bpt id="p1">[</bpt>Character Encoding in the .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> for fuller explanation)</source>
          <target state="translated">發生後援 (如需更完整的說明，請參閱 <bpt id="p1">[</bpt>.NET Framework 中的字元編碼方式<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept>)</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.Convert(System.Char*,System.Int32,System.Byte*,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>-and-</source>
          <target state="translated">-和-</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.Convert(System.Char*,System.Int32,System.Byte*,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source><ph id="ph1">&lt;see cref="P:System.Text.Encoder.Fallback" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Text.Encoder.Fallback" /&gt;</ph> 設定為 <ph id="ph2">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Encoder.Convert(System.Char*,System.Int32,System.Byte*,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>Requires full trust for the immediate caller.</source>
          <target state="translated">需要完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Encoder.Convert(System.Char*,System.Int32,System.Byte*,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">這個成員無法供部分信任或安全性透明程式碼。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.Convert(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>An array of characters to convert.</source>
          <target state="translated">要轉換的字元陣列。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.Convert(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>The first element of <bpt id="p1">&lt;c&gt;</bpt>chars<ept id="p1">&lt;/c&gt;</ept> to convert.</source>
          <target state="translated">要轉換的第一個 <bpt id="p1">&lt;c&gt;</bpt>chars<ept id="p1">&lt;/c&gt;</ept> 項目。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.Convert(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>The number of elements of <bpt id="p1">&lt;c&gt;</bpt>chars<ept id="p1">&lt;/c&gt;</ept> to convert.</source>
          <target state="translated">要轉換的 <bpt id="p1">&lt;c&gt;</bpt>chars<ept id="p1">&lt;/c&gt;</ept> 項目數目。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.Convert(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>An array where the converted bytes are stored.</source>
          <target state="translated">儲存位元組儲存所在的陣列。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.Convert(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>The first element of <bpt id="p1">&lt;c&gt;</bpt>bytes<ept id="p1">&lt;/c&gt;</ept> in which data is stored.</source>
          <target state="translated">存放資料的第一個 <bpt id="p1">&lt;c&gt;</bpt>bytes<ept id="p1">&lt;/c&gt;</ept> 項目。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.Convert(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>The maximum number of elements of <bpt id="p1">&lt;c&gt;</bpt>bytes<ept id="p1">&lt;/c&gt;</ept> to use in the conversion.</source>
          <target state="translated">轉換中要使用的 <bpt id="p1">&lt;c&gt;</bpt>bytes<ept id="p1">&lt;/c&gt;</ept> 之項目數上限。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.Convert(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to indicate no further data is to be converted; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">若表示不進行任何其他資料轉換即為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.Convert(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>When this method returns, contains the number of characters from <bpt id="p1">&lt;c&gt;</bpt>chars<ept id="p1">&lt;/c&gt;</ept> that were used in the conversion.</source>
          <target state="translated">傳回此方法時，會包含 <bpt id="p1">&lt;c&gt;</bpt>chars<ept id="p1">&lt;/c&gt;</ept> 中用於轉換的字元數目。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.Convert(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>This parameter is passed uninitialized.</source>
          <target state="translated">這個參數會以未初始化的狀態傳遞。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.Convert(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>When this method returns, contains the number of bytes that were produced by the conversion.</source>
          <target state="translated">傳回此方法時，包含轉換所產生的位元組數目。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.Convert(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>This parameter is passed uninitialized.</source>
          <target state="translated">這個參數會以未初始化的狀態傳遞。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.Convert(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>When this method returns, contains <ph id="ph1">&lt;see langword="true" /&gt;</ph> if all the characters specified by <bpt id="p1">&lt;c&gt;</bpt>charCount<ept id="p1">&lt;/c&gt;</ept> were converted; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">傳回此方法時，若所有 <bpt id="p1">&lt;c&gt;</bpt>charCount<ept id="p1">&lt;/c&gt;</ept> 指定的字元皆已轉換則包含 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.Convert(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>This parameter is passed uninitialized.</source>
          <target state="translated">這個參數會以未初始化的狀態傳遞。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.Convert(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>Converts an array of Unicode characters to an encoded byte sequence and stores the result in an array of bytes.</source>
          <target state="translated">將 Unicode 字元的陣列轉換成編碼的位元組序列，並將結果儲存在位元組陣列中。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Encoder.Convert(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>Remember that the <ph id="ph1">&lt;xref:System.Text.Encoder&gt;</ph> object saves state between calls to <ph id="ph2">&lt;xref:System.Text.Encoder.Convert%2A&gt;</ph>.</source>
          <target state="translated">請記住，<ph id="ph1">&lt;xref:System.Text.Encoder&gt;</ph>物件儲存呼叫之間的狀態<ph id="ph2">&lt;xref:System.Text.Encoder.Convert%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Encoder.Convert(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>When the application is done with a stream of data, it should set the <ph id="ph1">`flush`</ph> parameter to <ph id="ph2">`true`</ph> to make sure that the state information is flushed.</source>
          <target state="translated">當應用程式已完成的資料流時，它應該設定<ph id="ph1">`flush`</ph>參數<ph id="ph2">`true`</ph>以確定會排清狀態資訊。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Encoder.Convert(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>With this setting, the encoder ignores invalid bytes at the end of the data block and clears the internal buffer.</source>
          <target state="translated">使用此設定時，編碼器會忽略無效位元組的資料區塊的結尾，並清除內部緩衝區。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Encoder.Convert(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>Any remaining processed data that is part of a logical unit, such as the high surrogate of a surrogate pair, is converted according to the current fallback settings.</source>
          <target state="translated">屬於邏輯的單位，例如之高 surrogate 的 surrogate 字組的任何其餘處理過的資料會根據目前的後援設定轉換。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Encoder.Convert(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>The <ph id="ph1">`Convert`</ph> method is designed to be used in a loop to decode an arbitrary amount of input, such as data read from a file or stream.</source>
          <target state="translated"><ph id="ph1">`Convert`</ph>方法設計用來在迴圈中用於解碼任意數量的輸入，例如從檔案或資料流讀取的資料。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Encoder.Convert(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>It stores the output of the encoding operation in a fixed-size buffer.</source>
          <target state="translated">它會編碼作業的輸出儲存在固定大小的緩衝區。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Encoder.Convert(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source><ph id="ph1">&lt;xref:System.Text.Encoder.GetBytes%2A&gt;</ph> will throw an exception if the output buffer isn't large enough, but <ph id="ph2">&lt;xref:System.Text.Encoder.Convert%2A&gt;</ph> will fill as much space as possible and return the chars read and bytes written.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.Encoder.GetBytes%2A&gt;</ph> 如果輸出緩衝區不夠大，無法，便會擲回例外狀況，但<ph id="ph2">&lt;xref:System.Text.Encoder.Convert%2A&gt;</ph>會填滿的空間越好，並傳回字元讀取和寫入的位元組。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Encoder.Convert(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>Also see the <ph id="ph1">&lt;xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType&gt;</ph> topic for more comments.</source>
          <target state="translated">另請參閱<ph id="ph1">&lt;xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType&gt;</ph>主題的多個註解。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Encoder.Convert(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>The <ph id="ph1">`completed`</ph> output parameter indicates whether all the data in the input buffer was converted and stored in the output buffer.</source>
          <target state="translated"><ph id="ph1">`completed`</ph>輸出參數會指出是否轉換並儲存在輸出緩衝區中，輸入緩衝區中的所有資料。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Encoder.Convert(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>This parameter is set to <ph id="ph1">`false`</ph> if the number of characters specified by the <ph id="ph2">`charCount`</ph> parameter cannot be converted without exceeding the number of bytes specified by the <ph id="ph3">`byteCount`</ph> parameter.</source>
          <target state="translated">此參數設為<ph id="ph1">`false`</ph>如果所指定的字元數<ph id="ph2">`charCount`</ph>無法轉換參數，但不超過指定的位元組數目<ph id="ph3">`byteCount`</ph>參數。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Encoder.Convert(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>In that situation, the application should use the contents of the output buffer or provide a new output buffer, increment the <ph id="ph1">`chars`</ph> parameter by the number of characters specified by the <ph id="ph2">`charsUsed`</ph> parameter, then call the <ph id="ph3">`Convert`</ph> method again to process the remaining input.</source>
          <target state="translated">在此情況下，應用程式應該使用輸出緩衝區的內容，或提供新的輸出緩衝區，遞增<ph id="ph1">`chars`</ph>參數所指定的字元數<ph id="ph2">`charsUsed`</ph>參數，然後呼叫<ph id="ph3">`Convert`</ph>方法一次若要處理剩餘的輸入。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Encoder.Convert(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>The <ph id="ph1">`completed`</ph> parameter can also be set to <ph id="ph2">`false`</ph>, even though the <ph id="ph3">`charsUsed`</ph> and <ph id="ph4">`charCount`</ph> parameters are equal.</source>
          <target state="translated"><ph id="ph1">`completed`</ph>參數也會設定為<ph id="ph2">`false`</ph>，即使<ph id="ph3">`charsUsed`</ph>和<ph id="ph4">`charCount`</ph>參數是否相等。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Encoder.Convert(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>This situation occurs if there is still data in the <ph id="ph1">&lt;xref:System.Text.Encoder&gt;</ph> object that has not been stored in the <ph id="ph2">`chars`</ph> buffer.</source>
          <target state="translated">如果仍然中的資料，就會發生這種情況下<ph id="ph1">&lt;xref:System.Text.Encoder&gt;</ph>物件未儲存在<ph id="ph2">`chars`</ph>緩衝區。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Encoder.Convert(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Text.Encoder.Convert%2A&gt;</ph> method to convert a file of UTF-16 characters to UTF-8, then uses the <ph id="ph2">&lt;xref:System.Text.Decoder.Convert%2A&gt;</ph> method to convert the UTF-8 characters back to UTF-16 characters.</source>
          <target state="translated">下列範例會使用<ph id="ph1">&lt;xref:System.Text.Encoder.Convert%2A&gt;</ph>方法，將轉換的檔案的 utf-16 字元為 utf-8，則會使用<ph id="ph2">&lt;xref:System.Text.Decoder.Convert%2A&gt;</ph>方法來轉換回 utf-16 字元的 utf-8 字元。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.Convert(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> or <ph id="ph2">&lt;paramref name="bytes" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph> (<ph id="ph4">&lt;see langword="Nothing" /&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="bytes" /&gt;</ph> 是 <ph id="ph3">&lt;see langword="null" /&gt;</ph> (<ph id="ph4">&lt;see langword="Nothing" /&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.Convert(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source><ph id="ph1">&lt;paramref name="charIndex" /&gt;</ph>, <ph id="ph2">&lt;paramref name="charCount" /&gt;</ph>, <ph id="ph3">&lt;paramref name="byteIndex" /&gt;</ph>, or <ph id="ph4">&lt;paramref name="byteCount" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="charIndex" /&gt;</ph>、<ph id="ph2">&lt;paramref name="charCount" /&gt;</ph>、<ph id="ph3">&lt;paramref name="byteIndex" /&gt;</ph> 或 <ph id="ph4">&lt;paramref name="byteCount" /&gt;</ph> 小於零。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.Convert(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.Convert(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>The length of <ph id="ph1">&lt;paramref name="chars" /&gt;</ph><ph id="ph2"> - </ph><ph id="ph3">&lt;paramref name="charIndex" /&gt;</ph> is less than <ph id="ph4">&lt;paramref name="charCount" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="chars" /&gt;</ph><ph id="ph2"> - </ph><ph id="ph3">&lt;paramref name="charIndex" /&gt;</ph> 的長度小於 <ph id="ph4">&lt;paramref name="charCount" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.Convert(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.Convert(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>The length of <ph id="ph1">&lt;paramref name="bytes" /&gt;</ph><ph id="ph2"> - </ph><ph id="ph3">&lt;paramref name="byteIndex" /&gt;</ph> is less than <ph id="ph4">&lt;paramref name="byteCount" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph><ph id="ph2"> - </ph><ph id="ph3">&lt;paramref name="byteIndex" /&gt;</ph> 的長度小於 <ph id="ph4">&lt;paramref name="byteCount" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.Convert(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>The output buffer is too small to contain any of the converted input.</source>
          <target state="translated">輸出緩衝區太小而無法包含任何已轉換的輸入。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.Convert(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>The output buffer should be greater than or equal to the size indicated by the <ph id="ph1">&lt;see cref="Overload:System.Text.Encoder.GetByteCount" /&gt;</ph> method.</source>
          <target state="translated">輸出緩衝區應大於或等於 <ph id="ph1">&lt;see cref="Overload:System.Text.Encoder.GetByteCount" /&gt;</ph> 方法所指出的大小。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.Convert(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>A fallback occurred (see <bpt id="p1">[</bpt>Character Encoding in the .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> for fuller explanation)</source>
          <target state="translated">發生後援 (如需更完整的說明，請參閱 <bpt id="p1">[</bpt>.NET Framework 中的字元編碼方式<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept>)</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.Convert(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>-and-</source>
          <target state="translated">-和-</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.Convert(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source><ph id="ph1">&lt;see cref="P:System.Text.Encoder.Fallback" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Text.Encoder.Fallback" /&gt;</ph> 設定為 <ph id="ph2">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="P:System.Text.Encoder.Fallback">
          <source>Gets or sets a <ph id="ph1">&lt;see cref="T:System.Text.EncoderFallback" /&gt;</ph> object for the current <ph id="ph2">&lt;see cref="T:System.Text.Encoder" /&gt;</ph> object.</source>
          <target state="translated">取得或設定目前 <ph id="ph1">&lt;see cref="T:System.Text.EncoderFallback" /&gt;</ph> 物件的 <ph id="ph2">&lt;see cref="T:System.Text.Encoder" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.Encoder.Fallback">
          <source>A <ph id="ph1">&lt;see cref="T:System.Text.EncoderFallback" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Text.EncoderFallback" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.Encoder.Fallback">
          <source>The <ph id="ph1">&lt;xref:System.Text.EncoderFallback&gt;</ph> object represents an error handler that is invoked when a character cannot be converted into an encoded byte sequence.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.EncoderFallback&gt;</ph>物件都代表一個字元無法轉換成編碼的位元組序列時所叫用錯誤處理常式。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="P:System.Text.Encoder.Fallback">
          <source>The value in a set operation is <ph id="ph1">&lt;see langword="null" /&gt;</ph> (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>).</source>
          <target state="translated">設定作業中的值是 <ph id="ph1">&lt;see langword="null" /&gt;</ph> (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="P:System.Text.Encoder.Fallback">
          <source>A new value cannot be assigned in a set operation because the current <ph id="ph1">&lt;see cref="T:System.Text.EncoderFallbackBuffer" /&gt;</ph> object contains data that has not been encoded yet.</source>
          <target state="translated">設定作業中無法指派新的值，因為目前的 <ph id="ph1">&lt;see cref="T:System.Text.EncoderFallbackBuffer" /&gt;</ph> 物件包含尚未編碼的資料。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="P:System.Text.Encoder.Fallback">
          <source>A fallback occurred (see <bpt id="p1">[</bpt>Character Encoding in the .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> for fuller explanation)</source>
          <target state="translated">發生後援 (如需更完整的說明，請參閱 <bpt id="p1">[</bpt>.NET Framework 中的字元編碼方式<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept>)</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="P:System.Text.Encoder.Fallback">
          <source>-and-</source>
          <target state="translated">-和-</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="P:System.Text.Encoder.Fallback">
          <source><ph id="ph1">&lt;see cref="P:System.Text.Encoder.Fallback" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Text.Encoder.Fallback" /&gt;</ph> 設定為 <ph id="ph2">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="P:System.Text.Encoder.FallbackBuffer">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Text.EncoderFallbackBuffer" /&gt;</ph> object associated with the current <ph id="ph2">&lt;see cref="T:System.Text.Encoder" /&gt;</ph> object.</source>
          <target state="translated">取得與目前 <ph id="ph1">&lt;see cref="T:System.Text.EncoderFallbackBuffer" /&gt;</ph> 物件關聯的 <ph id="ph2">&lt;see cref="T:System.Text.Encoder" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.Encoder.FallbackBuffer">
          <source>A <ph id="ph1">&lt;see cref="T:System.Text.EncoderFallbackBuffer" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Text.EncoderFallbackBuffer" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.Encoder.FallbackBuffer">
          <source>The <ph id="ph1">&lt;xref:System.Text.Encoder.FallbackBuffer%2A&gt;</ph> object represents data used by the <ph id="ph2">&lt;xref:System.Text.EncoderFallback&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.Encoder.FallbackBuffer%2A&gt;</ph>物件都代表所使用的資料<ph id="ph2">&lt;xref:System.Text.EncoderFallback&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.Encoder.FallbackBuffer">
          <source>The <ph id="ph1">&lt;xref:System.Text.EncoderFallback&gt;</ph> object represents an error handler that is invoked when a character cannot be converted into an encoded byte sequence.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.EncoderFallback&gt;</ph>物件都代表一個字元無法轉換成編碼的位元組序列時所叫用錯誤處理常式。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="T:System.Text.Encoder">
          <source>When overridden in a derived class, calculates the number of bytes produced by encoding a set of characters.</source>
          <target state="translated">在衍生類別中覆寫時，計算編碼一組字元所產生的位元組數目。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.GetByteCount(System.Char*,System.Int32,System.Boolean)">
          <source>A pointer to the first character to encode.</source>
          <target state="translated">要編碼的第一個字元指標。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.GetByteCount(System.Char*,System.Int32,System.Boolean)">
          <source>The number of characters to encode.</source>
          <target state="translated">要編碼的字元數。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.GetByteCount(System.Char*,System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to simulate clearing the internal state of the encoder after the calculation; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 模擬在計算後清除編碼器的內部狀態，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.GetByteCount(System.Char*,System.Int32,System.Boolean)">
          <source>When overridden in a derived class, calculates the number of bytes produced by encoding a set of characters starting at the specified character pointer.</source>
          <target state="translated">在衍生類別中覆寫時，計算從指定的字元指標開始，編碼一組字元所產生的位元組數目。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.GetByteCount(System.Char*,System.Int32,System.Boolean)">
          <source>A parameter indicates whether to clear the internal state of the encoder after the calculation.</source>
          <target state="translated">參數會指示，在計算之後是否要清除編碼器的內部狀態。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.GetByteCount(System.Char*,System.Int32,System.Boolean)">
          <source>The number of bytes produced by encoding the specified characters and any characters in the internal buffer.</source>
          <target state="translated">編碼指定的字元及內部緩衝區內任何字元所產生的位元組數目。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Encoder.GetByteCount(System.Char*,System.Int32,System.Boolean)">
          <source>This method does not affect the state of the encoder.</source>
          <target state="translated">這個方法不會影響編碼器的狀態。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Encoder.GetByteCount(System.Char*,System.Int32,System.Boolean)">
          <source>To calculate the exact array size that <ph id="ph1">&lt;xref:System.Text.Encoder.GetBytes%2A&gt;</ph> requires to store the resulting bytes, the application should use <ph id="ph2">&lt;xref:System.Text.Encoder.GetByteCount%2A&gt;</ph>.</source>
          <target state="translated">若要計算確切的陣列大小的<ph id="ph1">&lt;xref:System.Text.Encoder.GetBytes%2A&gt;</ph>需要儲存產生的位元組，應用程式應該使用<ph id="ph2">&lt;xref:System.Text.Encoder.GetByteCount%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Encoder.GetByteCount(System.Char*,System.Int32,System.Boolean)">
          <source>If <ph id="ph1">`GetBytes`</ph> is called with <ph id="ph2">`flush`</ph> set to <ph id="ph3">`false`</ph>, the encoder stores trailing characters at the end of the data block in an internal buffer and uses them in the next encoding operation.</source>
          <target state="translated">如果<ph id="ph1">`GetBytes`</ph>呼叫<ph id="ph2">`flush`</ph>設<ph id="ph3">`false`</ph>，內部緩衝區中儲存的資料區塊的結尾行尾字元的編碼器，以及下一個編碼作業中使用它們。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Encoder.GetByteCount(System.Char*,System.Int32,System.Boolean)">
          <source>The application should call <ph id="ph1">`GetByteCount`</ph> on a block of data immediately before calling <ph id="ph2">`GetBytes`</ph> on the same block, so that any trailing characters from the previous block are included in the calculation.</source>
          <target state="translated">應用程式應該呼叫<ph id="ph1">`GetByteCount`</ph>之前呼叫的資料區塊上<ph id="ph2">`GetBytes`</ph>上相同的區塊，以便從上一個區塊任何尾端字元會包含在計算中。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.GetByteCount(System.Char*,System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph> (<ph id="ph3">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic .NET).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> 是 <ph id="ph2">&lt;see langword="null" /&gt;</ph> (在 Visual Basic .NET 中為 <ph id="ph3">&lt;see langword="Nothing" /&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.GetByteCount(System.Char*,System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph> 小於零。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.GetByteCount(System.Char*,System.Int32,System.Boolean)">
          <source>A fallback occurred (see <bpt id="p1">[</bpt>Character Encoding in the .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> for fuller explanation)</source>
          <target state="translated">發生後援 (如需更完整的說明，請參閱 <bpt id="p1">[</bpt>.NET Framework 中的字元編碼方式<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept>)</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.GetByteCount(System.Char*,System.Int32,System.Boolean)">
          <source>-and-</source>
          <target state="translated">-和-</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.GetByteCount(System.Char*,System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;see cref="P:System.Text.Encoder.Fallback" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Text.Encoder.Fallback" /&gt;</ph> 設定為 <ph id="ph2">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Encoder.GetByteCount(System.Char*,System.Int32,System.Boolean)">
          <source>Requires full trust for the immediate caller.</source>
          <target state="translated">需要完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Encoder.GetByteCount(System.Char*,System.Int32,System.Boolean)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">這個成員無法供部分信任或安全性透明程式碼。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.GetByteCount(System.Char[],System.Int32,System.Int32,System.Boolean)">
          <source>The character array containing the set of characters to encode.</source>
          <target state="translated">包含要解碼之一組字元的字元陣列。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.GetByteCount(System.Char[],System.Int32,System.Int32,System.Boolean)">
          <source>The index of the first character to encode.</source>
          <target state="translated">要編碼的第一個字元索引。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.GetByteCount(System.Char[],System.Int32,System.Int32,System.Boolean)">
          <source>The number of characters to encode.</source>
          <target state="translated">要編碼的字元數。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.GetByteCount(System.Char[],System.Int32,System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to simulate clearing the internal state of the encoder after the calculation; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 模擬在計算後清除編碼器的內部狀態，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.GetByteCount(System.Char[],System.Int32,System.Int32,System.Boolean)">
          <source>When overridden in a derived class, calculates the number of bytes produced by encoding a set of characters from the specified character array.</source>
          <target state="translated">在衍生類別中覆寫時，計算從指定的字元陣列編碼一組字元所產生的位元組數目。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.GetByteCount(System.Char[],System.Int32,System.Int32,System.Boolean)">
          <source>A parameter indicates whether to clear the internal state of the encoder after the calculation.</source>
          <target state="translated">參數會指示，在計算之後是否要清除編碼器的內部狀態。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.GetByteCount(System.Char[],System.Int32,System.Int32,System.Boolean)">
          <source>The number of bytes produced by encoding the specified characters and any characters in the internal buffer.</source>
          <target state="translated">編碼指定的字元及內部緩衝區內任何字元所產生的位元組數目。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Encoder.GetByteCount(System.Char[],System.Int32,System.Int32,System.Boolean)">
          <source>This method does not affect the state of the encoder.</source>
          <target state="translated">這個方法不會影響編碼器的狀態。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Encoder.GetByteCount(System.Char[],System.Int32,System.Int32,System.Boolean)">
          <source>To calculate the exact array size that <ph id="ph1">&lt;xref:System.Text.Encoder.GetBytes%2A&gt;</ph> requires to store the resulting bytes, the application should use <ph id="ph2">&lt;xref:System.Text.Encoder.GetByteCount%2A&gt;</ph>.</source>
          <target state="translated">若要計算確切的陣列大小的<ph id="ph1">&lt;xref:System.Text.Encoder.GetBytes%2A&gt;</ph>需要儲存產生的位元組，應用程式應該使用<ph id="ph2">&lt;xref:System.Text.Encoder.GetByteCount%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Encoder.GetByteCount(System.Char[],System.Int32,System.Int32,System.Boolean)">
          <source>If <ph id="ph1">`GetBytes`</ph> is called with <ph id="ph2">`flush`</ph> set to <ph id="ph3">`false`</ph>, the encoder stores trailing characters at the end of the data block in an internal buffer and uses them in the next encoding operation.</source>
          <target state="translated">如果<ph id="ph1">`GetBytes`</ph>呼叫<ph id="ph2">`flush`</ph>設<ph id="ph3">`false`</ph>，內部緩衝區中儲存的資料區塊的結尾行尾字元的編碼器，以及下一個編碼作業中使用它們。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Encoder.GetByteCount(System.Char[],System.Int32,System.Int32,System.Boolean)">
          <source>The application should call <ph id="ph1">`GetByteCount`</ph> on a block of data immediately before calling <ph id="ph2">`GetBytes`</ph> on the same block, so that any trailing characters from the previous block are included in the calculation.</source>
          <target state="translated">應用程式應該呼叫<ph id="ph1">`GetByteCount`</ph>之前呼叫的資料區塊上<ph id="ph2">`GetBytes`</ph>上相同的區塊，以便從上一個區塊任何尾端字元會包含在計算中。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Encoder.GetByteCount(System.Char[],System.Int32,System.Int32,System.Boolean)">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Text.Encoder.GetByteCount%2A&gt;</ph> method to return the number of bytes required to encode an array of characters using a Unicode <ph id="ph2">&lt;xref:System.Text.Encoder&gt;</ph>.</source>
          <target state="translated">下列程式碼範例示範如何使用<ph id="ph1">&lt;xref:System.Text.Encoder.GetByteCount%2A&gt;</ph>方法傳回的陣列，使用 Unicode 的字元編碼所需的位元組數目<ph id="ph2">&lt;xref:System.Text.Encoder&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.GetByteCount(System.Char[],System.Int32,System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.GetByteCount(System.Char[],System.Int32,System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="count" /&gt;</ph> 小於零。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.GetByteCount(System.Char[],System.Int32,System.Int32,System.Boolean)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.GetByteCount(System.Char[],System.Int32,System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> and <ph id="ph2">&lt;paramref name="count" /&gt;</ph> do not denote a valid range in <ph id="ph3">&lt;paramref name="chars" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 與 <ph id="ph2">&lt;paramref name="count" /&gt;</ph> 不代表 <ph id="ph3">&lt;paramref name="chars" /&gt;</ph> 中有效的範圍。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.GetByteCount(System.Char[],System.Int32,System.Int32,System.Boolean)">
          <source>A fallback occurred (see <bpt id="p1">[</bpt>Character Encoding in the .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> for fuller explanation)</source>
          <target state="translated">發生後援 (如需更完整的說明，請參閱 <bpt id="p1">[</bpt>.NET Framework 中的字元編碼方式<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept>)</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.GetByteCount(System.Char[],System.Int32,System.Int32,System.Boolean)">
          <source>-and-</source>
          <target state="translated">-和-</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.GetByteCount(System.Char[],System.Int32,System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;see cref="P:System.Text.Encoder.Fallback" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Text.Encoder.Fallback" /&gt;</ph> 設定為 <ph id="ph2">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="T:System.Text.Encoder">
          <source>When overridden in a derived class, encodes a set of characters into a sequence of bytes.</source>
          <target state="translated">在衍生類別中覆寫時，將一組字元編碼成位元組序列。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32,System.Boolean)">
          <source>A pointer to the first character to encode.</source>
          <target state="translated">要編碼的第一個字元指標。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32,System.Boolean)">
          <source>The number of characters to encode.</source>
          <target state="translated">要編碼的字元數。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32,System.Boolean)">
          <source>A pointer to the location at which to start writing the resulting sequence of bytes.</source>
          <target state="translated">開始寫入結果位元組序列的位置指標。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32,System.Boolean)">
          <source>The maximum number of bytes to write.</source>
          <target state="translated">寫入的最大位元組數。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to clear the internal state of the encoder after the conversion; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 表示要在轉換之後清除編碼器的內部狀態，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32,System.Boolean)">
          <source>When overridden in a derived class, encodes a set of characters starting at the specified character pointer and any characters in the internal buffer into a sequence of bytes that are stored starting at the specified byte pointer.</source>
          <target state="translated">在衍生類別中覆寫時，將以指定字元指標開始的一組字元以及內部緩衝區內的任何字元，編碼成位元組序列 (會從指定的位元組指標開始存放此序列)。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32,System.Boolean)">
          <source>A parameter indicates whether to clear the internal state of the encoder after the conversion.</source>
          <target state="translated">參數會指示，在轉換之後是否要清除編碼器的內部狀態。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32,System.Boolean)">
          <source>The actual number of bytes written at the location indicated by the <ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> 參數所指示位置上寫入的實際位元組數目。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Encoder.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32,System.Boolean)">
          <source>Remember that the <ph id="ph1">&lt;xref:System.Text.Encoder&gt;</ph> object saves state between calls to <ph id="ph2">&lt;xref:System.Text.Encoder.GetBytes%2A&gt;</ph>.</source>
          <target state="translated">請記住，<ph id="ph1">&lt;xref:System.Text.Encoder&gt;</ph>物件儲存呼叫之間的狀態<ph id="ph2">&lt;xref:System.Text.Encoder.GetBytes%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Encoder.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32,System.Boolean)">
          <source>When the application is done with a stream of data, it should set the <ph id="ph1">`flush`</ph> parameter to <ph id="ph2">`true`</ph> in the last call to <ph id="ph3">`GetBytes`</ph> to make sure that the state information is flushed and that the encoded bytes are properly terminated.</source>
          <target state="translated">當應用程式已完成的資料流時，它應該設定<ph id="ph1">`flush`</ph>參數<ph id="ph2">`true`</ph>中在上次呼叫<ph id="ph3">`GetBytes`</ph>確定的狀態資訊會排清，且已正確地終止編碼的位元組。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Encoder.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32,System.Boolean)">
          <source>With this setting, the encoder ignores invalid bytes at the end of the data block, such as unmatched surrogates or incomplete combining sequences, and clears the internal buffer.</source>
          <target state="translated">使用此設定時，編碼器會忽略無效的資料區塊，例如不相符 (instance) 或不完整的結合序列結尾處的位元組，並清除內部緩衝區。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Encoder.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32,System.Boolean)">
          <source>To calculate the exact buffer size that <ph id="ph1">`GetBytes`</ph> requires to store the resulting characters, the application should use <ph id="ph2">&lt;xref:System.Text.Encoder.GetByteCount%2A&gt;</ph>.</source>
          <target state="translated">若要計算確切的緩衝區大小的<ph id="ph1">`GetBytes`</ph>需要應用程式應該使用來儲存產生的字元， <ph id="ph2">&lt;xref:System.Text.Encoder.GetByteCount%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Encoder.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32,System.Boolean)">
          <source>If <ph id="ph1">`GetBytes`</ph> is called with <ph id="ph2">`flush`</ph> set to <ph id="ph3">`false`</ph>, the encoder stores trailing bytes at the end of the data block in an internal buffer and uses them in the next encoding operation.</source>
          <target state="translated">如果<ph id="ph1">`GetBytes`</ph>呼叫<ph id="ph2">`flush`</ph>設<ph id="ph3">`false`</ph>，內部緩衝區中儲存的資料區塊的結尾的後隨位元組的編碼器，以及下一個編碼作業中使用它們。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Encoder.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32,System.Boolean)">
          <source>The application should call <ph id="ph1">`GetByteCount`</ph> on a block of data immediately before calling <ph id="ph2">`GetBytes`</ph> on the same block, so that any trailing characters from the previous block are included in the calculation.</source>
          <target state="translated">應用程式應該呼叫<ph id="ph1">`GetByteCount`</ph>之前呼叫的資料區塊上<ph id="ph2">`GetBytes`</ph>上相同的區塊，以便從上一個區塊任何尾端字元會包含在計算中。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Encoder.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32,System.Boolean)">
          <source>If your application is to convert many segments of an input stream, consider using the <ph id="ph1">&lt;xref:System.Text.Encoder.Convert%2A&gt;</ph> method.</source>
          <target state="translated">如果您的應用程式来轉換的輸入資料流的許多區段中，請考慮使用<ph id="ph1">&lt;xref:System.Text.Encoder.Convert%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Encoder.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Text.Encoder.GetBytes%2A&gt;</ph> will throw an exception if the output buffer isn't large enough, but <ph id="ph2">&lt;xref:System.Text.Encoder.Convert%2A&gt;</ph> will fill as much space as possible and return the chars read and bytes written.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.Encoder.GetBytes%2A&gt;</ph> 如果輸出緩衝區不夠大，無法，便會擲回例外狀況，但<ph id="ph2">&lt;xref:System.Text.Encoder.Convert%2A&gt;</ph>會填滿的空間越好，並傳回字元讀取和寫入的位元組。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Encoder.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32,System.Boolean)">
          <source>Also see the <ph id="ph1">&lt;xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType&gt;</ph> topic for more comments.</source>
          <target state="translated">另請參閱<ph id="ph1">&lt;xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType&gt;</ph>主題的多個註解。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph> (<ph id="ph3">&lt;see langword="Nothing" /&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> 是 <ph id="ph2">&lt;see langword="null" /&gt;</ph> (<ph id="ph3">&lt;see langword="Nothing" /&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32,System.Boolean)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph> (<ph id="ph3">&lt;see langword="Nothing" /&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> 是 <ph id="ph2">&lt;see langword="null" /&gt;</ph> (<ph id="ph3">&lt;see langword="Nothing" /&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="charCount" /&gt;</ph> or <ph id="ph2">&lt;paramref name="byteCount" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="charCount" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="byteCount" /&gt;</ph> 小於零。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="byteCount" /&gt;</ph> is less than the resulting number of bytes.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="byteCount" /&gt;</ph> 小於結果位元組數。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32,System.Boolean)">
          <source>A fallback occurred (see <bpt id="p1">[</bpt>Character Encoding in the .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> for fuller explanation)</source>
          <target state="translated">發生後援 (如需更完整的說明，請參閱 <bpt id="p1">[</bpt>.NET Framework 中的字元編碼方式<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept>)</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32,System.Boolean)">
          <source>-and-</source>
          <target state="translated">-和-</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;see cref="P:System.Text.Encoder.Fallback" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Text.Encoder.Fallback" /&gt;</ph> 設定為 <ph id="ph2">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Encoder.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32,System.Boolean)">
          <source>Requires full trust for the immediate caller.</source>
          <target state="translated">需要完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Encoder.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32,System.Boolean)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">這個成員無法供部分信任或安全性透明程式碼。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Boolean)">
          <source>The character array containing the set of characters to encode.</source>
          <target state="translated">包含要解碼之一組字元的字元陣列。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Boolean)">
          <source>The index of the first character to encode.</source>
          <target state="translated">要編碼的第一個字元索引。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Boolean)">
          <source>The number of characters to encode.</source>
          <target state="translated">要編碼的字元數。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Boolean)">
          <source>The byte array to contain the resulting sequence of bytes.</source>
          <target state="translated">要包含結果位元組序列的位元組陣列。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Boolean)">
          <source>The index at which to start writing the resulting sequence of bytes.</source>
          <target state="translated">要開始寫入結果位元組序列的索引。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to clear the internal state of the encoder after the conversion; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 表示要在轉換之後清除編碼器的內部狀態，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Boolean)">
          <source>When overridden in a derived class, encodes a set of characters from the specified character array and any characters in the internal buffer into the specified byte array.</source>
          <target state="translated">在衍生類別中覆寫時，將指定字元陣列中的一組字元以及內部緩衝區內的任何字元，編碼成指定的位元組陣列。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Boolean)">
          <source>A parameter indicates whether to clear the internal state of the encoder after the conversion.</source>
          <target state="translated">參數會指示，在轉換之後是否要清除編碼器的內部狀態。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Boolean)">
          <source>The actual number of bytes written into <ph id="ph1">&lt;paramref name="bytes" /&gt;</ph>.</source>
          <target state="translated">寫入 <ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> 的實際位元組數。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Encoder.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Boolean)">
          <source>Remember that the <ph id="ph1">&lt;xref:System.Text.Encoder&gt;</ph> object saves state between calls to <ph id="ph2">&lt;xref:System.Text.Encoder.GetBytes%2A&gt;</ph>.</source>
          <target state="translated">請記住，<ph id="ph1">&lt;xref:System.Text.Encoder&gt;</ph>物件儲存呼叫之間的狀態<ph id="ph2">&lt;xref:System.Text.Encoder.GetBytes%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Encoder.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Boolean)">
          <source>When the application is done with a stream of data, it should set the <ph id="ph1">`flush`</ph> parameter to <ph id="ph2">`true`</ph> in the last call to <ph id="ph3">`GetBytes`</ph> to make sure that the state information is flushed and that the encoded bytes are properly terminated.</source>
          <target state="translated">當應用程式已完成的資料流時，它應該設定<ph id="ph1">`flush`</ph>參數<ph id="ph2">`true`</ph>中在上次呼叫<ph id="ph3">`GetBytes`</ph>確定的狀態資訊會排清，且已正確地終止編碼的位元組。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Encoder.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Boolean)">
          <source>With this setting, the encoder ignores invalid bytes at the end of the data block, such as unmatched surrogates or incomplete combining sequences, and clears the internal buffer.</source>
          <target state="translated">使用此設定時，編碼器會忽略無效的資料區塊，例如不相符 (instance) 或不完整的結合序列結尾處的位元組，並清除內部緩衝區。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Encoder.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Boolean)">
          <source>To calculate the exact buffer size that <ph id="ph1">`GetBytes`</ph> requires to store the resulting characters, the application should use <ph id="ph2">&lt;xref:System.Text.Encoder.GetByteCount%2A&gt;</ph>.</source>
          <target state="translated">若要計算確切的緩衝區大小的<ph id="ph1">`GetBytes`</ph>需要應用程式應該使用來儲存產生的字元， <ph id="ph2">&lt;xref:System.Text.Encoder.GetByteCount%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Encoder.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Boolean)">
          <source>If <ph id="ph1">`GetBytes`</ph> is called with <ph id="ph2">`flush`</ph> set to <ph id="ph3">`false`</ph>, the encoder stores trailing bytes at the end of the data block in an internal buffer and uses them in the next encoding operation.</source>
          <target state="translated">如果<ph id="ph1">`GetBytes`</ph>呼叫<ph id="ph2">`flush`</ph>設<ph id="ph3">`false`</ph>，內部緩衝區中儲存的資料區塊的結尾的後隨位元組的編碼器，以及下一個編碼作業中使用它們。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Encoder.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Boolean)">
          <source>The application should call <ph id="ph1">`GetByteCount`</ph> on a block of data immediately before calling <ph id="ph2">`GetBytes`</ph> on the same block, so that any trailing characters from the previous block are included in the calculation.</source>
          <target state="translated">應用程式應該呼叫<ph id="ph1">`GetByteCount`</ph>之前呼叫的資料區塊上<ph id="ph2">`GetBytes`</ph>上相同的區塊，以便從上一個區塊任何尾端字元會包含在計算中。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Encoder.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Boolean)">
          <source>If your application is to convert many segments of an input stream, consider using the <ph id="ph1">&lt;xref:System.Text.Encoder.Convert%2A&gt;</ph> method.</source>
          <target state="translated">如果您的應用程式来轉換的輸入資料流的許多區段中，請考慮使用<ph id="ph1">&lt;xref:System.Text.Encoder.Convert%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Encoder.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Text.Encoder.GetBytes%2A&gt;</ph> will throw an exception if the output buffer isn't large enough, but <ph id="ph2">&lt;xref:System.Text.Encoder.Convert%2A&gt;</ph> will fill as much space as possible and return the chars read and bytes written.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.Encoder.GetBytes%2A&gt;</ph> 如果輸出緩衝區不夠大，無法，便會擲回例外狀況，但<ph id="ph2">&lt;xref:System.Text.Encoder.Convert%2A&gt;</ph>會填滿的空間越好，並傳回字元讀取和寫入的位元組。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Encoder.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Boolean)">
          <source>Also see the <ph id="ph1">&lt;xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType&gt;</ph> topic for more comments.</source>
          <target state="translated">另請參閱<ph id="ph1">&lt;xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType&gt;</ph>主題的多個註解。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Encoder.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Boolean)">
          <source>The following example demonstrates how to encode a range of elements from a character array and store the encoded bytes in a range of elements in a byte array.</source>
          <target state="translated">下列範例會示範如何將編碼的字元陣列中的項目範圍，並將編碼的位元組儲存在位元組陣列中的項目範圍。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Encoder.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Text.Encoder.GetByteCount%2A&gt;</ph> method is used to determine the size of the array required by <ph id="ph2">&lt;xref:System.Text.Encoder.GetBytes%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.Encoder.GetByteCount%2A&gt;</ph>方法用來判斷所需的陣列大小<ph id="ph2">&lt;xref:System.Text.Encoder.GetBytes%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph> (<ph id="ph3">&lt;see langword="Nothing" /&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> 是 <ph id="ph2">&lt;see langword="null" /&gt;</ph> (<ph id="ph3">&lt;see langword="Nothing" /&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Boolean)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph> (<ph id="ph3">&lt;see langword="Nothing" /&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> 是 <ph id="ph2">&lt;see langword="null" /&gt;</ph> (<ph id="ph3">&lt;see langword="Nothing" /&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="charIndex" /&gt;</ph> or <ph id="ph2">&lt;paramref name="charCount" /&gt;</ph> or <ph id="ph3">&lt;paramref name="byteIndex" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="charIndex" /&gt;</ph>、<ph id="ph2">&lt;paramref name="charCount" /&gt;</ph> 或 <ph id="ph3">&lt;paramref name="byteIndex" /&gt;</ph> 小於零。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Boolean)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="charIndex" /&gt;</ph> and <ph id="ph2">&lt;paramref name="charCount" /&gt;</ph> do not denote a valid range in <ph id="ph3">&lt;paramref name="chars" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="charIndex" /&gt;</ph> 與 <ph id="ph2">&lt;paramref name="charCount" /&gt;</ph> 不代表 <ph id="ph3">&lt;paramref name="chars" /&gt;</ph> 中有效的範圍。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Boolean)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="byteIndex" /&gt;</ph> is not a valid index in <ph id="ph2">&lt;paramref name="bytes" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="byteIndex" /&gt;</ph> 在 <ph id="ph2">&lt;paramref name="bytes" /&gt;</ph> 中不是有效的索引。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> does not have enough capacity from <ph id="ph2">&lt;paramref name="byteIndex" /&gt;</ph> to the end of the array to accommodate the resulting bytes.</source>
          <target state="translated">從 <ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> 到陣列結尾處，<ph id="ph2">&lt;paramref name="byteIndex" /&gt;</ph> 沒有足夠的容量容納結果位元組。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Boolean)">
          <source>A fallback occurred (see <bpt id="p1">[</bpt>Character Encoding in the .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> for fuller explanation)</source>
          <target state="translated">發生後援 (如需更完整的說明，請參閱 <bpt id="p1">[</bpt>.NET Framework 中的字元編碼方式<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept>)</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Boolean)">
          <source>-and-</source>
          <target state="translated">-和-</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;see cref="P:System.Text.Encoder.Fallback" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Text.Encoder.Fallback" /&gt;</ph> 設定為 <ph id="ph2">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Text.Encoder.Reset">
          <source>When overridden in a derived class, sets the encoder back to its initial state.</source>
          <target state="translated">在衍生類別中覆寫時，將編碼器設定回其初始狀態。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Encoder.Reset">
          <source>This method clears the internal state of the <ph id="ph1">&lt;xref:System.Text.Encoder&gt;</ph> object.</source>
          <target state="translated">這個方法會清除的內部狀態<ph id="ph1">&lt;xref:System.Text.Encoder&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Encoder.Reset">
          <source>The method clears any state information preserved from a previous call to <ph id="ph1">&lt;xref:System.Text.Encoder.GetBytes%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Text.Decoder.Convert%2A&gt;</ph>, including trailing characters at the end of the previous data block, such as an unmatched high surrogate.</source>
          <target state="translated">方法會清除所有先前呼叫所保留的狀態資訊<ph id="ph1">&lt;xref:System.Text.Encoder.GetBytes%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Text.Decoder.Convert%2A&gt;</ph>，包括尾端結尾之前的資料區塊，例如不相符的高 surrogate 的字元。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Encoder.Reset">
          <source>Your application should call the <ph id="ph1">`Reset`</ph> method if it wants to reuse the same encoder even after an exception is thrown by <ph id="ph2">&lt;xref:System.Text.Encoder.GetBytes%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Text.Encoder.GetByteCount%2A&gt;</ph>, or if the application switches streams.</source>
          <target state="translated">您的應用程式應該呼叫<ph id="ph1">`Reset`</ph>方法，如果它要重複使用相同的編碼器，所擲回例外狀況時，即使<ph id="ph2">&lt;xref:System.Text.Encoder.GetBytes%2A&gt;</ph>或<ph id="ph3">&lt;xref:System.Text.Encoder.GetByteCount%2A&gt;</ph>，或當應用程式切換資料流。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>