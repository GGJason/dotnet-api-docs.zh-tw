<Type Name="EncoderExceptionFallbackBuffer" FullName="System.Text.EncoderExceptionFallbackBuffer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d4865b8076e25b60fd65b7496258cdedc2538107" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58691490" /></Metadata><TypeSignature Language="C#" Value="public sealed class EncoderExceptionFallbackBuffer : System.Text.EncoderFallbackBuffer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EncoderExceptionFallbackBuffer extends System.Text.EncoderFallbackBuffer" />
  <TypeSignature Language="DocId" Value="T:System.Text.EncoderExceptionFallbackBuffer" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EncoderExceptionFallbackBuffer&#xA;Inherits EncoderFallbackBuffer" />
  <TypeSignature Language="C++ CLI" Value="public ref class EncoderExceptionFallbackBuffer sealed : System::Text::EncoderFallbackBuffer" />
  <TypeSignature Language="F#" Value="type EncoderExceptionFallbackBuffer = class&#xA;    inherit EncoderFallbackBuffer" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Text.EncoderFallbackBuffer</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="d4327-101">當輸入字元無法轉換成編碼的輸出位元組序列時，會擲回 <see cref="T:System.Text.EncoderFallbackException" />。</span><span class="sxs-lookup"><span data-stu-id="d4327-101">Throws <see cref="T:System.Text.EncoderFallbackException" /> when an input character cannot be converted to an encoded output byte sequence.</span></span> <span data-ttu-id="d4327-102">這個類別無法被繼承。</span><span class="sxs-lookup"><span data-stu-id="d4327-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4327-103">編碼或解碼作業失敗的常見原因是如果基礎的編碼類別並未提供字元與對應的位元組序列之間的對應。</span><span class="sxs-lookup"><span data-stu-id="d4327-103">A common reason for an encoding or decoding operation to fail is if the underlying encoding class does not provide a mapping between a character and an equivalent byte sequence.</span></span> <span data-ttu-id="d4327-104">如果輸入的字元無法轉換成輸出位元組序列，編碼作業會呼叫<xref:System.Text.EncoderExceptionFallbackBuffer.Fallback%2A>方法，就會擲回<xref:System.Text.EncoderFallbackException>。</span><span class="sxs-lookup"><span data-stu-id="d4327-104">If the input character cannot be converted to an output byte sequence, the encoding operation calls the <xref:System.Text.EncoderExceptionFallbackBuffer.Fallback%2A> method, which throws <xref:System.Text.EncoderFallbackException>.</span></span>  
  
 <span data-ttu-id="d4327-105"><xref:System.Text.EncoderFallbackBuffer?displayProperty=nameWithType>類別，代表編碼的作業中所使用的資料緩衝區，這是基底類別<xref:System.Text.EncoderExceptionFallbackBuffer>類別。</span><span class="sxs-lookup"><span data-stu-id="d4327-105">The <xref:System.Text.EncoderFallbackBuffer?displayProperty=nameWithType> class, which represents a data buffer used in an encoding operation, is the base class for the <xref:System.Text.EncoderExceptionFallbackBuffer> class.</span></span> <span data-ttu-id="d4327-106">不過，而不是資料緩衝區<xref:System.Text.EncoderExceptionFallbackBuffer>類別代表標準的行為，其中會擲回例外狀況的編碼作業會失敗。</span><span class="sxs-lookup"><span data-stu-id="d4327-106">However, instead of a data buffer, the <xref:System.Text.EncoderExceptionFallbackBuffer> class represents a standard behavior wherein an exception is thrown if an encoding operation fails.</span></span> <span data-ttu-id="d4327-107">沒有實際的資料緩衝區存在，並設計來管理這類緩衝區的成員執行任何大量的工作。</span><span class="sxs-lookup"><span data-stu-id="d4327-107">No actual data buffer exists, and the members designed to manipulate such a buffer do no significant work.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncoderExceptionFallbackBuffer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderExceptionFallbackBuffer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncoderExceptionFallbackBuffer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d4327-108">初始化 <see cref="T:System.Text.EncoderExceptionFallbackBuffer" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="d4327-108">Initializes a new instance of the <see cref="T:System.Text.EncoderExceptionFallbackBuffer" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Fallback">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d4327-109">因為無法編碼輸入字元，所以擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="d4327-109">Throws an exception because the input character cannot be encoded.</span></span> <span data-ttu-id="d4327-110">不會使用名義上的傳回值。</span><span class="sxs-lookup"><span data-stu-id="d4327-110">The nominal return value is not used.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Fallback">
      <MemberSignature Language="C#" Value="public override bool Fallback (char charUnknown, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Fallback(char charUnknown, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Fallback (charUnknown As Char, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Fallback(char charUnknown, int index);" />
      <MemberSignature Language="F#" Value="override this.Fallback : char * int -&gt; bool" Usage="encoderExceptionFallbackBuffer.Fallback (charUnknown, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charUnknown" Type="System.Char" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charUnknown"><span data-ttu-id="d4327-111">輸入字元。</span><span class="sxs-lookup"><span data-stu-id="d4327-111">An input character.</span></span></param>
        <param name="index"><span data-ttu-id="d4327-112">輸入緩衝區中字元的索引位置。</span><span class="sxs-lookup"><span data-stu-id="d4327-112">The index position of the character in the input buffer.</span></span></param>
        <summary><span data-ttu-id="d4327-113">因為無法編碼輸入字元，所以擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="d4327-113">Throws an exception because the input character cannot be encoded.</span></span> <span data-ttu-id="d4327-114">參數會針對無法轉換的字元指定值和索引位置。</span><span class="sxs-lookup"><span data-stu-id="d4327-114">Parameters specify the value and index position of the character that cannot be converted.</span></span></summary>
        <returns><span data-ttu-id="d4327-115">無。</span><span class="sxs-lookup"><span data-stu-id="d4327-115">None.</span></span> <span data-ttu-id="d4327-116">因為 <see cref="M:System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Int32)" /> 方法永遠都會擲回例外狀況，所以不會傳回任何值。</span><span class="sxs-lookup"><span data-stu-id="d4327-116">No value is returned because the <see cref="M:System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Int32)" /> method always throws an exception.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4327-117"><xref:System.Text.Encoding.GetBytes%2A>並<xref:System.Text.Encoder.Convert%2A>方法呼叫<xref:System.Text.EncoderExceptionFallbackBuffer.Fallback%2A>如果遇到未知的字元，在其輸入。</span><span class="sxs-lookup"><span data-stu-id="d4327-117">The <xref:System.Text.Encoding.GetBytes%2A> and <xref:System.Text.Encoder.Convert%2A> methods call <xref:System.Text.EncoderExceptionFallbackBuffer.Fallback%2A> if they encounter an unknown character in their input.</span></span> <span data-ttu-id="d4327-118">在回應中，<xref:System.Text.EncoderExceptionFallbackBuffer.Fallback%2A>一律會擲回<xref:System.Text.EncoderFallbackException>。</span><span class="sxs-lookup"><span data-stu-id="d4327-118">In response, <xref:System.Text.EncoderExceptionFallbackBuffer.Fallback%2A> always throws <xref:System.Text.EncoderFallbackException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="d4327-119">無法編碼 <paramref name="charUnknown" />。</span><span class="sxs-lookup"><span data-stu-id="d4327-119"><paramref name="charUnknown" /> cannot be encoded.</span></span> <span data-ttu-id="d4327-120">此方法永遠都會擲回例外狀況，報告 <paramref name="charUnknown" /> 和 <paramref name="index" /> 參數的值。</span><span class="sxs-lookup"><span data-stu-id="d4327-120">This method always throws an exception that reports the value of the <paramref name="charUnknown" /> and <paramref name="index" /> parameters.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Fallback">
      <MemberSignature Language="C#" Value="public override bool Fallback (char charUnknownHigh, char charUnknownLow, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Fallback(char charUnknownHigh, char charUnknownLow, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Fallback (charUnknownHigh As Char, charUnknownLow As Char, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Fallback(char charUnknownHigh, char charUnknownLow, int index);" />
      <MemberSignature Language="F#" Value="override this.Fallback : char * char * int -&gt; bool" Usage="encoderExceptionFallbackBuffer.Fallback (charUnknownHigh, charUnknownLow, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charUnknownHigh" Type="System.Char" />
        <Parameter Name="charUnknownLow" Type="System.Char" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charUnknownHigh"><span data-ttu-id="d4327-121">輸入字組的高 Surrogate。</span><span class="sxs-lookup"><span data-stu-id="d4327-121">The high surrogate of the input pair.</span></span></param>
        <param name="charUnknownLow"><span data-ttu-id="d4327-122">輸入字組的低 Surrogate。</span><span class="sxs-lookup"><span data-stu-id="d4327-122">The low surrogate of the input pair.</span></span></param>
        <param name="index"><span data-ttu-id="d4327-123">輸入緩衝區中 Surrogate 字組的索引位置。</span><span class="sxs-lookup"><span data-stu-id="d4327-123">The index position of the surrogate pair in the input buffer.</span></span></param>
        <summary><span data-ttu-id="d4327-124">因為無法編碼輸入字元，所以擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="d4327-124">Throws an exception because the input character cannot be encoded.</span></span> <span data-ttu-id="d4327-125">參數在輸入中會指定 Surrogate 字組的值和索引位置，且不會使用名義上的傳回值。</span><span class="sxs-lookup"><span data-stu-id="d4327-125">Parameters specify the value and index position of the surrogate pair in the input, and the nominal return value is not used.</span></span></summary>
        <returns><span data-ttu-id="d4327-126">無。</span><span class="sxs-lookup"><span data-stu-id="d4327-126">None.</span></span> <span data-ttu-id="d4327-127">因為 <see cref="M:System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)" /> 方法永遠都會擲回例外狀況，所以不會傳回任何值。</span><span class="sxs-lookup"><span data-stu-id="d4327-127">No value is returned because the <see cref="M:System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)" /> method always throws an exception.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4327-128"><xref:System.Text.Encoding.GetBytes%2A>並<xref:System.Text.Encoder.Convert%2A>方法呼叫<xref:System.Text.EncoderExceptionFallbackBuffer.Fallback%2A>如果遇到其輸入中的 surrogate 字組。</span><span class="sxs-lookup"><span data-stu-id="d4327-128">The <xref:System.Text.Encoding.GetBytes%2A> and <xref:System.Text.Encoder.Convert%2A> methods call <xref:System.Text.EncoderExceptionFallbackBuffer.Fallback%2A> if they encounter a surrogate pair in their input.</span></span> <span data-ttu-id="d4327-129">在回應中，<xref:System.Text.EncoderExceptionFallbackBuffer.Fallback%2A>一律會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="d4327-129">In response, <xref:System.Text.EncoderExceptionFallbackBuffer.Fallback%2A> always throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="d4327-130">無法編碼由 <paramref name="charUnknownHigh" /> 和 <paramref name="charUnknownLow" /> 表示的字元。</span><span class="sxs-lookup"><span data-stu-id="d4327-130">The character represented by <paramref name="charUnknownHigh" /> and <paramref name="charUnknownLow" /> cannot be encoded.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d4327-131"><paramref name="charUnknownHigh" /> 或 <paramref name="charUnknownLow" /> 是無效的。</span><span class="sxs-lookup"><span data-stu-id="d4327-131">Either <paramref name="charUnknownHigh" /> or <paramref name="charUnknownLow" /> is invalid.</span></span> <span data-ttu-id="d4327-132"><paramref name="charUnknownHigh" /> 未在 U+D800 和 U+DBFF 之間 (含頭尾)，或是 <paramref name="charUnknownLow" /> 未在 U+DC00 和 U+DFFF 之間 (含頭尾)。</span><span class="sxs-lookup"><span data-stu-id="d4327-132"><paramref name="charUnknownHigh" /> is not between U+D800 and U+DBFF, inclusive, or <paramref name="charUnknownLow" /> is not between U+DC00 and U+DFFF, inclusive.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetNextChar">
      <MemberSignature Language="C#" Value="public override char GetNextChar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance char GetNextChar() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderExceptionFallbackBuffer.GetNextChar" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetNextChar () As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override char GetNextChar();" />
      <MemberSignature Language="F#" Value="override this.GetNextChar : unit -&gt; char" Usage="encoderExceptionFallbackBuffer.GetNextChar " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d4327-133">擷取例外狀況後援緩衝區中的下一個字元。</span><span class="sxs-lookup"><span data-stu-id="d4327-133">Retrieves the next character in the exception fallback buffer.</span></span></summary>
        <returns><span data-ttu-id="d4327-134">傳回值永遠都會是 Unicode 字元 NULL (U+0000)。</span><span class="sxs-lookup"><span data-stu-id="d4327-134">The return value is always the Unicode character, NULL (U+0000).</span></span>  
  
<span data-ttu-id="d4327-135">因為這個方法會實作抽象方法，所以會定義傳回值 (雖然此值不會變更)。</span><span class="sxs-lookup"><span data-stu-id="d4327-135">A return value is defined, although it is unchanging, because this method implements an abstract method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4327-136">因為<xref:System.Text.EncoderExceptionFallbackBuffer>沒有任何實際的例外狀況資料緩衝區，<xref:System.Text.EncoderExceptionFallbackBuffer.GetNextChar%2A>方法一律會傳回 Unicode NULL 字元。</span><span class="sxs-lookup"><span data-stu-id="d4327-136">Because <xref:System.Text.EncoderExceptionFallbackBuffer> has no actual exception data buffer, the <xref:System.Text.EncoderExceptionFallbackBuffer.GetNextChar%2A> method always returns the Unicode NULL character.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MovePrevious">
      <MemberSignature Language="C#" Value="public override bool MovePrevious ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MovePrevious() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderExceptionFallbackBuffer.MovePrevious" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MovePrevious () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MovePrevious();" />
      <MemberSignature Language="F#" Value="override this.MovePrevious : unit -&gt; bool" Usage="encoderExceptionFallbackBuffer.MovePrevious " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d4327-137">使得 <see cref="M:System.Text.EncoderExceptionFallbackBuffer.GetNextChar" /> 方法的下一個呼叫存取在目前位置之前的例外狀況資料緩衝區字元位置。</span><span class="sxs-lookup"><span data-stu-id="d4327-137">Causes the next call to the <see cref="M:System.Text.EncoderExceptionFallbackBuffer.GetNextChar" /> method to access the exception data buffer character position that is prior to the current position.</span></span></summary>
        <returns><span data-ttu-id="d4327-138">傳回值永遠都會是 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d4327-138">The return value is always <see langword="false" />.</span></span>  
  
<span data-ttu-id="d4327-139">因為這個方法會實作抽象方法，所以會定義傳回值 (雖然此值不會變更)。</span><span class="sxs-lookup"><span data-stu-id="d4327-139">A return value is defined, although it is unchanging, because this method implements an abstract method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4327-140">因為<xref:System.Text.EncoderExceptionFallbackBuffer>沒有實際的例外狀況資料緩衝區中，<xref:System.Text.EncoderExceptionFallbackBuffer.MovePrevious%2A>方法一律會傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="d4327-140">Because <xref:System.Text.EncoderExceptionFallbackBuffer> has no actual exception data buffer, the <xref:System.Text.EncoderExceptionFallbackBuffer.MovePrevious%2A> method always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remaining">
      <MemberSignature Language="C#" Value="public override int Remaining { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Remaining" />
      <MemberSignature Language="DocId" Value="P:System.Text.EncoderExceptionFallbackBuffer.Remaining" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Remaining As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Remaining { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Remaining : int" Usage="System.Text.EncoderExceptionFallbackBuffer.Remaining" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d4327-141">取得在目前的 <see cref="T:System.Text.EncoderExceptionFallbackBuffer" /> 物件中仍要處理的字元數。</span><span class="sxs-lookup"><span data-stu-id="d4327-141">Gets the number of characters in the current <see cref="T:System.Text.EncoderExceptionFallbackBuffer" /> object that remain to be processed.</span></span></summary>
        <value><span data-ttu-id="d4327-142">傳回值永遠是零。</span><span class="sxs-lookup"><span data-stu-id="d4327-142">The return value is always zero.</span></span>  
  
<span data-ttu-id="d4327-143">因為這個方法會實作抽象方法，所以會定義傳回值 (雖然此值不會變更)。</span><span class="sxs-lookup"><span data-stu-id="d4327-143">A return value is defined, although it is unchanging, because this method implements an abstract method.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4327-144">因為<xref:System.Text.EncoderExceptionFallbackBuffer>沒有任何實際的例外狀況資料緩衝區，<xref:System.Text.EncoderExceptionFallbackBuffer.Remaining%2A>屬性一律會傳回零。</span><span class="sxs-lookup"><span data-stu-id="d4327-144">Because <xref:System.Text.EncoderExceptionFallbackBuffer> has no actual exception data buffer, the <xref:System.Text.EncoderExceptionFallbackBuffer.Remaining%2A> property always returns zero.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>