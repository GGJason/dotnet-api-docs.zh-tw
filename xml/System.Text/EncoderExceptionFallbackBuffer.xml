<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="EncoderExceptionFallbackBuffer.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac500aa7c16487a8e1d2e57f073b4d082024e7f6b64.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">00aa7c16487a8e1d2e57f073b4d082024e7f6b64</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Text.EncoderExceptionFallbackBuffer">
          <source>Throws <ph id="ph1">&lt;see cref="T:System.Text.EncoderFallbackException" /&gt;</ph> when an input character cannot be converted to an encoded output byte sequence.</source>
          <target state="translated">當輸入字元無法轉換成編碼的輸出位元組序列時，會擲回 <ph id="ph1">&lt;see cref="T:System.Text.EncoderFallbackException" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Text.EncoderExceptionFallbackBuffer">
          <source>This class cannot be inherited.</source>
          <target state="translated">這個類別無法被繼承。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderExceptionFallbackBuffer">
          <source>A common reason for an encoding or decoding operation to fail is if the underlying encoding class does not provide a mapping between a character and an equivalent byte sequence.</source>
          <target state="translated">用於編碼或解碼作業失敗的常見原因是如果基礎的編碼類別並未提供一個字元與對應的位元組序列之間的對應。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderExceptionFallbackBuffer">
          <source>If the input character cannot be converted to an output byte sequence, the encoding operation calls the <ph id="ph1">&lt;xref:System.Text.EncoderExceptionFallbackBuffer.Fallback%2A&gt;</ph> method, which throws <ph id="ph2">&lt;xref:System.Text.EncoderFallbackException&gt;</ph>.</source>
          <target state="translated">如果輸入的字元無法轉換成輸出位元組序列，編碼作業呼叫<ph id="ph1">&lt;xref:System.Text.EncoderExceptionFallbackBuffer.Fallback%2A&gt;</ph>方法，就會擲回<ph id="ph2">&lt;xref:System.Text.EncoderFallbackException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderExceptionFallbackBuffer">
          <source>The <ph id="ph1">&lt;xref:System.Text.EncoderFallbackBuffer?displayProperty=nameWithType&gt;</ph> class, which represents a data buffer used in an encoding operation, is the base class for the <ph id="ph2">&lt;xref:System.Text.EncoderExceptionFallbackBuffer&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.EncoderFallbackBuffer?displayProperty=nameWithType&gt;</ph>代表編碼作業中使用的資料緩衝區，類別是基底類別<ph id="ph2">&lt;xref:System.Text.EncoderExceptionFallbackBuffer&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderExceptionFallbackBuffer">
          <source>However, instead of a data buffer, the <ph id="ph1">&lt;xref:System.Text.EncoderExceptionFallbackBuffer&gt;</ph> class represents a standard behavior wherein an exception is thrown if an encoding operation fails.</source>
          <target state="translated">不過，而不是資料緩衝區，<ph id="ph1">&lt;xref:System.Text.EncoderExceptionFallbackBuffer&gt;</ph>類別代表標準行為，其中如果編碼作業失敗會擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderExceptionFallbackBuffer">
          <source>No actual data buffer exists, and the members designed to manipulate such a buffer do no significant work.</source>
          <target state="translated">沒有實際的資料緩衝區存在，而且設計來管理這類緩衝區的成員沒有相當多的工作。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Text.EncoderExceptionFallbackBuffer.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Text.EncoderExceptionFallbackBuffer" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Text.EncoderExceptionFallbackBuffer" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="T:System.Text.EncoderExceptionFallbackBuffer">
          <source>Throws an exception because the input character cannot be encoded.</source>
          <target state="translated">因為無法編碼輸入字元，所以擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="T:System.Text.EncoderExceptionFallbackBuffer">
          <source>The nominal return value is not used.</source>
          <target state="translated">不會使用名義上的傳回值。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Int32)">
          <source>An input character.</source>
          <target state="translated">輸入字元。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Int32)">
          <source>The index position of the character in the input buffer.</source>
          <target state="translated">輸入緩衝區中字元的索引位置。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Int32)">
          <source>Throws an exception because the input character cannot be encoded.</source>
          <target state="translated">因為無法編碼輸入字元，所以擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Int32)">
          <source>Parameters specify the value and index position of the character that cannot be converted.</source>
          <target state="translated">參數會針對無法轉換的字元指定值和索引位置。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Int32)">
          <source>None.</source>
          <target state="translated">無。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Int32)">
          <source>No value is returned because the <ph id="ph1">&lt;see cref="M:System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Int32)" /&gt;</ph> method always throws an exception.</source>
          <target state="translated">因為 <ph id="ph1">&lt;see cref="M:System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Int32)" /&gt;</ph> 方法永遠都會擲回例外狀況，所以不會傳回任何值。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.Encoding.GetBytes%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Text.Encoder.Convert%2A&gt;</ph> methods call <ph id="ph3">&lt;xref:System.Text.EncoderExceptionFallbackBuffer.Fallback%2A&gt;</ph> if they encounter an unknown character in their input.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.Encoding.GetBytes%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Text.Encoder.Convert%2A&gt;</ph>方法呼叫<ph id="ph3">&lt;xref:System.Text.EncoderExceptionFallbackBuffer.Fallback%2A&gt;</ph>如果遇到未知的字元，在其輸入。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Int32)">
          <source>In response, <ph id="ph1">&lt;xref:System.Text.EncoderExceptionFallbackBuffer.Fallback%2A&gt;</ph> always throws <ph id="ph2">&lt;xref:System.Text.EncoderFallbackException&gt;</ph>.</source>
          <target state="translated">為了回應，<ph id="ph1">&lt;xref:System.Text.EncoderExceptionFallbackBuffer.Fallback%2A&gt;</ph>一律會擲回<ph id="ph2">&lt;xref:System.Text.EncoderFallbackException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="charUnknown" /&gt;</ph> cannot be encoded.</source>
          <target state="translated">無法編碼 <ph id="ph1">&lt;paramref name="charUnknown" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Int32)">
          <source>This method always throws an exception that reports the value of the <ph id="ph1">&lt;paramref name="charUnknown" /&gt;</ph> and <ph id="ph2">&lt;paramref name="index" /&gt;</ph> parameters.</source>
          <target state="translated">此方法永遠都會擲回例外狀況，報告 <ph id="ph1">&lt;paramref name="charUnknown" /&gt;</ph> 和 <ph id="ph2">&lt;paramref name="index" /&gt;</ph> 參數的值。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)">
          <source>The high surrogate of the input pair.</source>
          <target state="translated">輸入字組的高 Surrogate。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)">
          <source>The low surrogate of the input pair.</source>
          <target state="translated">輸入字組的低 Surrogate。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)">
          <source>The index position of the surrogate pair in the input buffer.</source>
          <target state="translated">輸入緩衝區中 Surrogate 字組的索引位置。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)">
          <source>Throws an exception because the input character cannot be encoded.</source>
          <target state="translated">因為無法編碼輸入字元，所以擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)">
          <source>Parameters specify the value and index position of the surrogate pair in the input, and the nominal return value is not used.</source>
          <target state="translated">參數在輸入中會指定 Surrogate 字組的值和索引位置，且不會使用名義上的傳回值。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)">
          <source>None.</source>
          <target state="translated">無。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)">
          <source>No value is returned because the <ph id="ph1">&lt;see cref="M:System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)" /&gt;</ph> method always throws an exception.</source>
          <target state="translated">因為 <ph id="ph1">&lt;see cref="M:System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)" /&gt;</ph> 方法永遠都會擲回例外狀況，所以不會傳回任何值。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.Encoding.GetBytes%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Text.Encoder.Convert%2A&gt;</ph> methods call <ph id="ph3">&lt;xref:System.Text.EncoderExceptionFallbackBuffer.Fallback%2A&gt;</ph> if they encounter a surrogate pair in their input.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.Encoding.GetBytes%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Text.Encoder.Convert%2A&gt;</ph>方法呼叫<ph id="ph3">&lt;xref:System.Text.EncoderExceptionFallbackBuffer.Fallback%2A&gt;</ph>如果遇到其輸入中的 surrogate 字組。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)">
          <source>In response, <ph id="ph1">&lt;xref:System.Text.EncoderExceptionFallbackBuffer.Fallback%2A&gt;</ph> always throws an exception.</source>
          <target state="translated">為了回應，<ph id="ph1">&lt;xref:System.Text.EncoderExceptionFallbackBuffer.Fallback%2A&gt;</ph>一律會擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)">
          <source>The character represented by <ph id="ph1">&lt;paramref name="charUnknownHigh" /&gt;</ph> and <ph id="ph2">&lt;paramref name="charUnknownLow" /&gt;</ph> cannot be encoded.</source>
          <target state="translated">無法編碼由 <ph id="ph1">&lt;paramref name="charUnknownHigh" /&gt;</ph> 和 <ph id="ph2">&lt;paramref name="charUnknownLow" /&gt;</ph> 表示的字元。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)">
          <source>Either <ph id="ph1">&lt;paramref name="charUnknownHigh" /&gt;</ph> or <ph id="ph2">&lt;paramref name="charUnknownLow" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="charUnknownHigh" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="charUnknownLow" /&gt;</ph> 是無效的。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="charUnknownHigh" /&gt;</ph> is not between U+D800 and U+DBFF, inclusive, or <ph id="ph2">&lt;paramref name="charUnknownLow" /&gt;</ph> is not between U+DC00 and U+DFFF, inclusive.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="charUnknownHigh" /&gt;</ph> 未在 U+D800 和 U+DBFF 之間 (含頭尾)，或是 <ph id="ph2">&lt;paramref name="charUnknownLow" /&gt;</ph> 未在 U+DC00 和 U+DFFF 之間 (含頭尾)。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Text.EncoderExceptionFallbackBuffer.GetNextChar">
          <source>Retrieves the next character in the exception fallback buffer.</source>
          <target state="translated">擷取例外狀況後援緩衝區中的下一個字元。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Text.EncoderExceptionFallbackBuffer.GetNextChar">
          <source>The return value is always the Unicode character, NULL (U+0000).</source>
          <target state="translated">傳回值永遠都會是 Unicode 字元 NULL (U+0000)。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Text.EncoderExceptionFallbackBuffer.GetNextChar">
          <source>A return value is defined, although it is unchanging, because this method implements an abstract method.</source>
          <target state="translated">因為這個方法會實作抽象方法，所以會定義傳回值 (雖然此值不會變更)。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncoderExceptionFallbackBuffer.GetNextChar">
          <source>Because <ph id="ph1">&lt;xref:System.Text.EncoderExceptionFallbackBuffer&gt;</ph> has no actual exception data buffer, the <ph id="ph2">&lt;xref:System.Text.EncoderExceptionFallbackBuffer.GetNextChar%2A&gt;</ph> method always returns the Unicode NULL character.</source>
          <target state="translated">因為<ph id="ph1">&lt;xref:System.Text.EncoderExceptionFallbackBuffer&gt;</ph>具有任何實際的例外狀況資料緩衝區，<ph id="ph2">&lt;xref:System.Text.EncoderExceptionFallbackBuffer.GetNextChar%2A&gt;</ph>方法一律會傳回 Unicode NULL 字元。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Text.EncoderExceptionFallbackBuffer.MovePrevious">
          <source>Causes the next call to the <ph id="ph1">&lt;see cref="M:System.Text.EncoderExceptionFallbackBuffer.GetNextChar" /&gt;</ph> method to access the exception data buffer character position that is prior to the current position.</source>
          <target state="translated">使得 <ph id="ph1">&lt;see cref="M:System.Text.EncoderExceptionFallbackBuffer.GetNextChar" /&gt;</ph> 方法的下一個呼叫存取在目前位置之前的例外狀況資料緩衝區字元位置。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Text.EncoderExceptionFallbackBuffer.MovePrevious">
          <source>The return value is always <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">傳回值永遠都會是 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Text.EncoderExceptionFallbackBuffer.MovePrevious">
          <source>A return value is defined, although it is unchanging, because this method implements an abstract method.</source>
          <target state="translated">因為這個方法會實作抽象方法，所以會定義傳回值 (雖然此值不會變更)。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncoderExceptionFallbackBuffer.MovePrevious">
          <source>Because <ph id="ph1">&lt;xref:System.Text.EncoderExceptionFallbackBuffer&gt;</ph> has no actual exception data buffer, the <ph id="ph2">&lt;xref:System.Text.EncoderExceptionFallbackBuffer.MovePrevious%2A&gt;</ph> method always returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">因為<ph id="ph1">&lt;xref:System.Text.EncoderExceptionFallbackBuffer&gt;</ph>具有任何實際的例外狀況資料緩衝區，<ph id="ph2">&lt;xref:System.Text.EncoderExceptionFallbackBuffer.MovePrevious%2A&gt;</ph>方法一律會傳回<ph id="ph3">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="P:System.Text.EncoderExceptionFallbackBuffer.Remaining">
          <source>Gets the number of characters in the current <ph id="ph1">&lt;see cref="T:System.Text.EncoderExceptionFallbackBuffer" /&gt;</ph> object that remain to be processed.</source>
          <target state="translated">取得在目前的 <ph id="ph1">&lt;see cref="T:System.Text.EncoderExceptionFallbackBuffer" /&gt;</ph> 物件中仍要處理的字元數。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.EncoderExceptionFallbackBuffer.Remaining">
          <source>The return value is always zero.</source>
          <target state="translated">傳回值永遠是零。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.EncoderExceptionFallbackBuffer.Remaining">
          <source>A return value is defined, although it is unchanging, because this method implements an abstract method.</source>
          <target state="translated">因為這個方法會實作抽象方法，所以會定義傳回值 (雖然此值不會變更)。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.EncoderExceptionFallbackBuffer.Remaining">
          <source>Because <ph id="ph1">&lt;xref:System.Text.EncoderExceptionFallbackBuffer&gt;</ph> has no actual exception data buffer, the <ph id="ph2">&lt;xref:System.Text.EncoderExceptionFallbackBuffer.Remaining%2A&gt;</ph> property always returns zero.</source>
          <target state="translated">因為<ph id="ph1">&lt;xref:System.Text.EncoderExceptionFallbackBuffer&gt;</ph>具有任何實際的例外狀況資料緩衝區，<ph id="ph2">&lt;xref:System.Text.EncoderExceptionFallbackBuffer.Remaining%2A&gt;</ph>屬性一律會傳回零。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>