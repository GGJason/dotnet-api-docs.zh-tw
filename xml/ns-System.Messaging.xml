<Namespace Name="System.Messaging">
  <Metadata><Meta Name="ms.openlocfilehash" Value="eab5ed0569927572b94947f95901b3f05d70f785" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="30734692" /></Metadata><Docs>
    <summary><see cref="N:System.Messaging" /> 命名空間提供類別以連接、監控和管理網路上的訊息佇列，以及傳送、接收或窺視 (Peek) 訊息。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 成員<xref:System.Messaging.MessageQueue>類別包含下列方法來讀取和寫入訊息至佇列：  
  
-   <xref:System.Messaging.MessageQueue.Send%2A>方法可讓您的應用程式將訊息寫入至佇列。 方法的多載可讓您指定是否要傳送訊息使用<xref:System.Messaging.Message>（以提供詳細控制您所傳送的資訊） 或任何其他 managed 的物件，包括應用程式特定類別。 方法會為交易的一部分，也支援傳送訊息。  
  
-   <xref:System.Messaging.MessageQueue.Receive%2A>， <xref:System.Messaging.MessageQueue.ReceiveById%2A>，和<xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%2A>方法提供從佇列讀取訊息的功能。 例如<xref:System.Messaging.MessageQueue.Send%2A>方法，這些方法會提供多載，可支援交易式佇列處理。 這些方法也會提供多載的逾時。  
  
     Out 參數，讓處理作業能夠繼續佇列是否空白。 因為這些方法是同步處理的範例，而中斷目前的執行緒，直到訊息可以的話，除非您指定逾時。  
  
-   <xref:System.Messaging.MessageQueue.Peek%2A>方法是類似於<xref:System.Messaging.MessageQueue.Receive%2A>，但它不會造成讀取時，從佇列移除訊息。 因為<xref:System.Messaging.MessageQueue.Peek%2A>不會變更佇列的內容中，有沒有多載，可以支援交易式處理。 不過，因為<xref:System.Messaging.MessageQueue.Peek%2A>，例如<xref:System.Messaging.MessageQueue.Receive%2A>，以同步方式從佇列讀取訊息，方法的多載支援指定的逾時，以避免執行緒無限期等候。  
  
-   <xref:System.Messaging.MessageQueue.BeginPeek%2A>， <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29>， <xref:System.Messaging.MessageQueue.BeginReceive%2A>，和<xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29>方法提供以非同步方式從佇列讀取訊息的方式。 它們不會中斷目前的執行緒等待訊息到達佇列中。  
  
 下列方法<xref:System.Messaging.MessageQueue>類別提供用來擷取所指定準則的佇列的清單，並判斷特定的佇列是否存在的功能：  
  
-   <xref:System.Messaging.MessageQueue.GetPrivateQueuesByMachine%28System.String%29> 允許在電腦上私用佇列的擷取。  
  
-   <xref:System.Messaging.MessageQueue.GetPublicQueuesByCategory%28System.Guid%29><xref:System.Messaging.MessageQueue.GetPublicQueuesByLabel%28System.String%29>，和<xref:System.Messaging.MessageQueue.GetPublicQueuesByMachine%28System.String%29>提供共通準則來擷取公用佇列的方式。 多載<xref:System.Messaging.MessageQueue.GetPublicQueues%2A>選取幾個搜尋條件為基礎的佇列時，提供更精細的細微的詳細資料。  
  
 其他方法<xref:System.Messaging.MessageQueue>類別提供下列功能：  
  
-   建立和刪除訊息佇列的佇列。  
  
-   若要逐步執行佇列中的訊息使用訊息的列舉值。  
  
-   使用佇列的列舉值逐一查看系統上的佇列。  
  
-   設定 ACL 為基礎的存取權限。  
  
-   若要使用的連線快取。  
  
 <xref:System.Messaging.Message>類別會提供詳細的資訊傳送到佇列中，控制，而且使用物件接收或窺視訊息從佇列中時。 除了訊息內文，而屬性<xref:System.Messaging.Message>類別包含通知設定、 格式器選取項目、 識別、 驗證和加密的資訊、 時間戳記、 使用追蹤、 伺服器日誌的相關指示和寄不出信件佇列和交易資料。  
  
 <xref:System.Messaging.MessageQueue>元件是與下列三個格式器，可讓您序列化和還原序列化訊息從佇列傳送和接收相關聯：  
  
-   <xref:System.Messaging.XmlMessageFormatter>提供鬆散偶合的傳訊，啟用用戶端和伺服器上的序列化類型的獨立版本設定。  
  
-   <xref:System.Messaging.ActiveXMessageFormatter>適用於 MSMQ COM 控制項。 它可讓您傳送控制項可接收的類型，並接收已由控制項傳送的類型。  
  
-   <xref:System.Messaging.BinaryMessageFormatter>提供更快速的替代方法，來<xref:System.Messaging.XmlMessageFormatter>，但不使用鬆散偶合的傳訊的優點。  
  
 中的其他類別`Messaging`命名空間支援程式碼存取權和 ACL 為基礎的安全性篩選<xref:System.Messaging.Message>時從佇列讀取訊息，並使用交易時傳送和接收訊息的屬性。  
  
 ]]></format>
    </remarks>
  </Docs>
</Namespace>