<Type Name="ProxyGenerator" FullName="System.Web.Script.Services.ProxyGenerator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="228c62a8a8dca242d8d055a378a10b7256eed369" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36397996" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class ProxyGenerator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ProxyGenerator extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Script.Services.ProxyGenerator" />
  <TypeSignature Language="VB.NET" Value="Public Class ProxyGenerator" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProxyGenerator abstract sealed" />
  <TypeSignature Language="F#" Value="type ProxyGenerator = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示 Proxy 程式碼產生器。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.Script.Services.ProxyGenerator.GetClientProxyScript%2A>方法來擷取用來產生 proxy 類別的 Web 服務、 Windows Communication Foundation 服務，或具有靜態網頁方法的 ECMAScript (JavaScript) 程式碼<xref:System.Web.Services.WebMethodAttribute>套用的屬性。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="GetClientProxyScript">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>擷取指定型別的 Proxy 產生程式碼。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetClientProxyScript">
      <MemberSignature Language="C#" Value="public static string GetClientProxyScript (Type type, string path, bool debug);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetClientProxyScript(class System.Type type, string path, bool debug) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Services.ProxyGenerator.GetClientProxyScript(System.Type,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetClientProxyScript(Type ^ type, System::String ^ path, bool debug);" />
      <MemberSignature Language="F#" Value="static member GetClientProxyScript : Type * string * bool -&gt; string" Usage="System.Web.Script.Services.ProxyGenerator.GetClientProxyScript (type, path, debug)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="debug" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type">可取得指令碼的物件型別。</param>
        <param name="path">端點的位置。</param>
        <param name="debug">如果要包含 XML 程式碼註解，則為 <see langword="true" />，否則為 <see langword="false" />。</param>
        <summary>擷取指定型別的 Proxy 產生程式碼。</summary>
        <returns>Proxy 產生程式碼。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Script.Services.ProxyGenerator.GetClientProxyScript%2A>方法會傳回 proxy 產生 ECMAScript (JavaScript) 的 Web 服務、 Windows Communication Foundation (WCF) 服務，或具有靜態網頁方法<xref:System.Web.Services.WebMethodAttribute>套用的屬性。 `type`參數包含 Web 服務類別、 WCF 服務類別或 ASP.NET 網頁類別的類型。 當類型為 WCF 服務類別或介面、 類別或介面必須有<xref:System.ServiceModel.ServiceContractAttribute>套用的屬性。 如果`debug`參數是`true`，產生的程式碼包含可用於 Visual Studio 中的 IntelliSense 支援或其他開發環境的 XML 程式碼註解。 如此一來，產生的指令碼的大小是較大。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="type" /> 或 <paramref name="path" /> 參數為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">Proxy 產生不支援指定型別。</exception>
        <altmember cref="T:System.ServiceModel.ServiceContractAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetClientProxyScript">
      <MemberSignature Language="C#" Value="public static string GetClientProxyScript (Type type, string path, bool debug, System.ServiceModel.Description.ServiceEndpoint serviceEndpoint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetClientProxyScript(class System.Type type, string path, bool debug, class System.ServiceModel.Description.ServiceEndpoint serviceEndpoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Services.ProxyGenerator.GetClientProxyScript(System.Type,System.String,System.Boolean,System.ServiceModel.Description.ServiceEndpoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetClientProxyScript(Type ^ type, System::String ^ path, bool debug, System::ServiceModel::Description::ServiceEndpoint ^ serviceEndpoint);" />
      <MemberSignature Language="F#" Value="static member GetClientProxyScript : Type * string * bool * System.ServiceModel.Description.ServiceEndpoint -&gt; string" Usage="System.Web.Script.Services.ProxyGenerator.GetClientProxyScript (type, path, debug, serviceEndpoint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="debug" Type="System.Boolean" />
        <Parameter Name="serviceEndpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
      </Parameters>
      <Docs>
        <param name="type">可取得指令碼的物件型別。</param>
        <param name="path">端點的位置。</param>
        <param name="debug">如果要包含 XML 程式碼註解，則為 <see langword="true" />，否則為 <see langword="false" />。</param>
        <param name="serviceEndpoint">服務端點。</param>
        <summary>使用路徑和服務端點，擷取指定之型別的 Proxy 產生程式碼。</summary>
        <returns>Proxy 產生程式碼。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Script.Services.ProxyGenerator.GetClientProxyScript%2A>方法會傳回 proxy 產生 ECMAScript (JavaScript) 的 Web 服務、 Windows Communication Foundation (WCF) 服務，或具有靜態網頁方法<xref:System.Web.Services.WebMethodAttribute>套用的屬性。 `type`參數包含 Web 服務類別、 WCF 服務類別或 ASP.NET 網頁類別的類型。 當類型為 WCF 服務類別或介面、 類別或介面必須有<xref:System.ServiceModel.ServiceContractAttribute>套用的屬性。 如果`debug`參數是`true`，產生的程式碼包含可用於 Visual Studio 中的 IntelliSense 支援或其他開發環境的 XML 程式碼註解。 如此一來，產生的指令碼的大小是較大。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="type" /> 或 <paramref name="path" /> 參數為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">Proxy 產生不支援指定型別。</exception>
        <altmember cref="T:System.ServiceModel.ServiceContractAttribute" />
      </Docs>
    </Member>
  </Members>
</Type>