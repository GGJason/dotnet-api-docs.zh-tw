<Type Name="ScriptMethodAttribute" FullName="System.Web.Script.Services.ScriptMethodAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e746b231716e23a563d1d48538f543cc25813249" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30539542" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ScriptMethodAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ScriptMethodAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Web.Script.Services.ScriptMethodAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ScriptMethodAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ScriptMethodAttribute sealed : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>指定要用來叫用方法的 HTTP 動詞命令 (Verb)，以及回應的格式。 這個類別無法被繼承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性用來指定可以從用戶端指令碼呼叫的方法資訊。 屬性可讓您指定哪些 HTTP 動詞命令 （GET 或 POST） 可以用來叫用方法。 它也可讓您指定是否使用 JavaScript Object Notation (JSON) 或 XML 格式化回應。  
  
 <xref:System.Web.Script.Services.ScriptMethodAttribute> 屬性是選擇性的。 (不過，可以從用戶端指令碼呼叫的方法必須有<xref:System.Web.Services.WebMethodAttribute?displayProperty=nameWithType>套用的屬性。)。 如果方法未標示為<xref:System.Web.Script.Services.ScriptMethodAttribute>、 使用 HTTP POST 命令也會呼叫的方法和回應會序列化為 JSON。 您無法覆寫這項設定指令碼。  
  
 <xref:System.Web.Script.Services.ScriptMethodAttribute> 會採用只有具名參數。 以下是屬性<xref:System.Web.Script.Services.ScriptMethodAttribute>可用來當做具名參數的類別：  
  
-   <xref:System.Web.Script.Services.ScriptMethodAttribute.UseHttpGet%2A>  
  
     指定使用 HTTP GET 命令是否會叫用此方法。 預設值為 `false`。  
  
    > [!IMPORTANT]
    >  設定<xref:System.Web.Script.Services.ScriptMethodAttribute.UseHttpGet%2A>屬性`true`可能會造成安全性風險，您的應用程式，如果您正在使用機密資料或交易。 在 GET 要求訊息由瀏覽器編碼成 URL，因此遭到竄改的輕鬆目標。 GET 和 POST 要求，您應該遵循安全性指導方針來保護機密資料。  
  
-   <xref:System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat%2A>  
  
     指定是否將回應序列化為 JSON 或 XML。 預設值為 `Json`。 <xref:System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat%2A>屬性可用於 XML 指定為傳回型別，方法傳回時<xref:System.Xml.XmlDocument>或<xref:System.Xml.XmlElement>物件。  
  
-   <xref:System.Web.Script.Services.ScriptMethodAttribute.XmlSerializeString%2A>  
  
     指定是否要將所有的傳回型別，包括字串型別序列化為 XML。 值<xref:System.Web.Script.Services.ScriptMethodAttribute.XmlSerializeString%2A>回應序列化為 JSON 時，則會忽略屬性。  
  
 如需如何使用屬性的詳細資訊，請參閱[屬性](~/docs/standard/attributes/index.md)。  
  
   
  
## Examples  
 下列範例示範如何套用<xref:System.Web.Script.Services.ScriptMethodAttribute>至`GetXmlDocument`和`EchoStringAndDate`方法，以指定要使用，並指定回應格式的 HTTP 動詞命令。  
  
  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Services.WebMethodAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ScriptMethodAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Services.ScriptMethodAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ScriptMethodAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.Script.Services.ScriptMethodAttribute" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResponseFormat">
      <MemberSignature Language="C#" Value="public System.Web.Script.Services.ResponseFormat ResponseFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Script.Services.ResponseFormat ResponseFormat" />
      <MemberSignature Language="DocId" Value="P:System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property ResponseFormat As ResponseFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Script::Services::ResponseFormat ResponseFormat { System::Web::Script::Services::ResponseFormat get(); void set(System::Web::Script::Services::ResponseFormat value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Script.Services.ResponseFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定方法回應的格式。</summary>
        <value>其中一個 <see cref="T:System.Web.Script.Services.ResponseFormat" /> 值。 預設值為 <see langword="Json" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat%2A>屬性，當您想要指定 XML 做為傳回類型的格式。 方法傳回時這非常有用<xref:System.Xml.XmlDocument>或<xref:System.Xml.XmlElement>物件。  
  
 當<xref:System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat%2A>屬性設定為`Xml`，公用欄位和屬性的傳回型別具有<xref:System.Web.Script.Serialization.ScriptIgnoreAttribute>套用屬性不會忽略。 這是因為它們會序列化使用<xref:System.Xml.Serialization.XmlSerializer>物件而非<xref:System.Web.Script.Serialization.JavaScriptSerializer>物件。 您必須先套用<xref:System.Xml.Serialization.XmlIgnoreAttribute>屬性，而讓<xref:System.Xml.Serialization.XmlSerializer>略過，或略過，這些公用的欄位和屬性的傳回型別。  
  
   
  
## Examples  
 下列範例示範如何套用<xref:System.Web.Script.Services.ScriptMethodAttribute>Web 方法與屬性<xref:System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat%2A>屬性設定為`Xml`。 方法的傳回值會序列化為 XML，並傳送成功的回呼函式物件類型的形式<xref:System.Xml.XmlDocument>。 這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Web.Script.Services.ScriptMethodAttribute>類別。  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Script.Serialization.ScriptIgnoreAttribute" />
        <altmember cref="T:System.Xml.Serialization.XmlIgnoreAttribute" />
      </Docs>
    </Member>
    <Member MemberName="UseHttpGet">
      <MemberSignature Language="C#" Value="public bool UseHttpGet { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseHttpGet" />
      <MemberSignature Language="DocId" Value="P:System.Web.Script.Services.ScriptMethodAttribute.UseHttpGet" />
      <MemberSignature Language="VB.NET" Value="Public Property UseHttpGet As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseHttpGet { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出是否使用 HTTP GET 叫用方法。</summary>
        <value>
          如果使用 HTTP GET 命令叫用方法則為 <see langword="true" />，使用 HTTP POST 命令叫用方法則為 <see langword="false" />。 預設值為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您無法覆寫來自 ECMAScript (JavaScript) 用戶端上的這個屬性。 如果這個屬性設定為`true`，叫用指令碼的方法一律會使用 HTTP GET。  
  
 當這個屬性設定為`true`，用戶端 proxy 程式碼會使用 HTTP GET 呼叫 Web 服務。 方法的每個輸入的參數會顯示為用來叫用 Web 方法的 URL 中的查詢參數。 取得參數值透過 JavaScript 物件標記法 (JSON) 序列化和 URL 編碼的參數值。  
  
 使用 HTTP GET，叫用 Web 服務方法會遵循相同的任何其他 Web 互動的指導方針。 HTTP GET 應該只針對作業公開任何機密資料的位置以及使用伺服器的動作不能有副作用。  
  
> [!IMPORTANT]
>  設定<xref:System.Web.Script.Services.ScriptMethodAttribute.UseHttpGet%2A>屬性`true`可能會造成安全性風險，您的應用程式，如果您正在使用機密資料或交易。 在 GET 要求訊息由瀏覽器編碼成 URL，因此遭到竄改的輕鬆目標。  
  
   
  
## Examples  
 下列範例示範如何套用<xref:System.Web.Script.Services.ScriptMethodAttribute>與 Web 方法<xref:System.Web.Script.Services.ScriptMethodAttribute.UseHttpGet%2A>屬性設定為`true`。 這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Web.Script.Services.ScriptMethodAttribute>類別。  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlSerializeString">
      <MemberSignature Language="C#" Value="public bool XmlSerializeString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool XmlSerializeString" />
      <MemberSignature Language="DocId" Value="P:System.Web.Script.Services.ScriptMethodAttribute.XmlSerializeString" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlSerializeString As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool XmlSerializeString { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出是否將所有傳回型別 (包含字串型別) 序列化為 XML。</summary>
        <value>
          如果要將所有傳回型別序列化為 XML 則為 <see langword="true" />，否則為 <see langword="false" />。 預設值為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當這個屬性設定為`false`，所有傳回型別會序列化為 XML，除了解譯為 XML 標記的字串。 如果值為`false`，因此如果的傳回型別是字串，而且如果字串不包含對應至格式正確的 XML 文件的 XML 標記，成功的回呼函式會叫用但所產生的序列化的字串`null`.  
  
 值<xref:System.Web.Script.Services.ScriptMethodAttribute.XmlSerializeString%2A>時，會忽略<xref:System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat%2A>屬性設定為`Json`。  
  
   
  
## Examples  
 下列範例示範如何套用<xref:System.Web.Script.Services.ScriptMethodAttribute>與 Web 方法<xref:System.Web.Script.Services.ScriptMethodAttribute.XmlSerializeString%2A>屬性設定為`true`。 這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Web.Script.Services.ScriptMethodAttribute>類別。  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>