<Type Name="EncoderParameter" FullName="System.Drawing.Imaging.EncoderParameter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cd7032264bf799531146050a5cf59b6c89e321af" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51882230" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class EncoderParameter : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit EncoderParameter extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Imaging.EncoderParameter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EncoderParameter&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class EncoderParameter sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type EncoderParameter = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Drawing.Common</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>用於將值或值的陣列傳遞至影像編碼器。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您也可以使用<xref:System.Drawing.Imaging.EncoderParameter>物件，以接收特定參數的特定的影像編碼器所支援的可能值清單。  
  
   
  
## Examples  
 下列程式碼範例示範如何建立<xref:System.Drawing.Imaging.EncoderParameter>使用<xref:System.Drawing.Imaging.EncoderParameter.%23ctor%2A>建構函式。 若要執行此範例中，貼上程式碼的 Windows Form 和呼叫`VaryQualityLevel`從表單的建構函式的方法。 這個範例需要名為影像檔`TestPhoto.jpg`位於**c:\\**。  
  
 [!code-csharp[UsingImageEncodersDecoders#8](~/samples/snippets/csharp/VS_Snippets_Winforms/UsingImageEncodersDecoders/CS/Form1.cs#8)]
 [!code-vb[UsingImageEncodersDecoders#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/UsingImageEncodersDecoders/VB/Form1.vb#8)]  
[!code-csharp[UsingImageEncodersDecoders#6](~/samples/snippets/csharp/VS_Snippets_Winforms/UsingImageEncodersDecoders/CS/Form1.cs#6)]
[!code-vb[UsingImageEncodersDecoders#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/UsingImageEncodersDecoders/VB/Form1.vb#6)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/0e838ea1-4e7e-4334-b882-ab25df607b8b">使用 Managed GDI+ 中的影像編碼器和解碼器</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>使用指定的 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件和值，初始化 <see cref="T:System.Drawing.Imaging.Encoder" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncoderParameter (System.Drawing.Imaging.Encoder encoder, byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Imaging.Encoder encoder, unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncoderParameter(System::Drawing::Imaging::Encoder ^ encoder, System::Byte value);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Imaging.EncoderParameter : System.Drawing.Imaging.Encoder * byte -&gt; System.Drawing.Imaging.EncoderParameter" Usage="new System.Drawing.Imaging.EncoderParameter (encoder, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="encoder" Type="System.Drawing.Imaging.Encoder" />
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="encoder">
          <see cref="T:System.Drawing.Imaging.Encoder" /> 物件，會封裝參數類別目錄的全域唯一識別碼。</param>
        <param name="value">8 位元不帶正負號的整數 (Unsigned Integer)，指定儲存在 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件中的值。</param>
        <summary>使用指定的 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件和一個不帶正負號的 8 位元整數，初始化 <see cref="T:System.Drawing.Imaging.Encoder" /> 類別的新執行個體。 設定 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 屬性為 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeByte" />，並設定 <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 屬性為 1。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncoderParameter (System.Drawing.Imaging.Encoder encoder, byte[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Imaging.Encoder encoder, unsigned int8[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncoderParameter(System::Drawing::Imaging::Encoder ^ encoder, cli::array &lt;System::Byte&gt; ^ value);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Imaging.EncoderParameter : System.Drawing.Imaging.Encoder * byte[] -&gt; System.Drawing.Imaging.EncoderParameter" Usage="new System.Drawing.Imaging.EncoderParameter (encoder, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="encoder" Type="System.Drawing.Imaging.Encoder" />
        <Parameter Name="value" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="encoder">
          <see cref="T:System.Drawing.Imaging.Encoder" /> 物件，會封裝參數類別目錄的全域唯一識別碼。</param>
        <param name="value">8 位元不帶正負號整數的陣列，指定儲存在 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件中的值。</param>
        <summary>使用指定的 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件和不帶正負號的 8 位元整數的陣列，初始化 <see cref="T:System.Drawing.Imaging.Encoder" /> 類別的新執行個體。 設定 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 屬性為 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeByte" />，並設定 <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 屬性為陣列中的元素數目。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncoderParameter (System.Drawing.Imaging.Encoder encoder, short value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Imaging.Encoder encoder, int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int16)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncoderParameter(System::Drawing::Imaging::Encoder ^ encoder, short value);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Imaging.EncoderParameter : System.Drawing.Imaging.Encoder * int16 -&gt; System.Drawing.Imaging.EncoderParameter" Usage="new System.Drawing.Imaging.EncoderParameter (encoder, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="encoder" Type="System.Drawing.Imaging.Encoder" />
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="encoder">
          <see cref="T:System.Drawing.Imaging.Encoder" /> 物件，會封裝參數類別目錄的全域唯一識別碼。</param>
        <param name="value">16 位元整數，指定儲存在 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件中的值。 不可為負值。</param>
        <summary>使用指定的 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件和一個 16 位元整數，初始化 <see cref="T:System.Drawing.Imaging.Encoder" /> 類別的新執行個體。 設定 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 屬性為 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeShort" />，並設定 <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 屬性為 1。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncoderParameter (System.Drawing.Imaging.Encoder encoder, short[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Imaging.Encoder encoder, int16[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int16[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncoderParameter(System::Drawing::Imaging::Encoder ^ encoder, cli::array &lt;short&gt; ^ value);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Imaging.EncoderParameter : System.Drawing.Imaging.Encoder * int16[] -&gt; System.Drawing.Imaging.EncoderParameter" Usage="new System.Drawing.Imaging.EncoderParameter (encoder, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="encoder" Type="System.Drawing.Imaging.Encoder" />
        <Parameter Name="value" Type="System.Int16[]" />
      </Parameters>
      <Docs>
        <param name="encoder">
          <see cref="T:System.Drawing.Imaging.Encoder" /> 物件，會封裝參數類別目錄的全域唯一識別碼。</param>
        <param name="value">16 位元整數的陣列，指定儲存在 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件中的值。 陣列中的整數不可為負值。</param>
        <summary>使用指定的 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件和 16 位元整數的陣列，初始化 <see cref="T:System.Drawing.Imaging.Encoder" /> 類別的新執行個體。 設定 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 屬性為 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeShort" />，並設定 <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 屬性為陣列中的元素數目。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncoderParameter (System.Drawing.Imaging.Encoder encoder, long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Imaging.Encoder encoder, int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncoderParameter(System::Drawing::Imaging::Encoder ^ encoder, long value);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Imaging.EncoderParameter : System.Drawing.Imaging.Encoder * int64 -&gt; System.Drawing.Imaging.EncoderParameter" Usage="new System.Drawing.Imaging.EncoderParameter (encoder, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="encoder" Type="System.Drawing.Imaging.Encoder" />
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="encoder">
          <see cref="T:System.Drawing.Imaging.Encoder" /> 物件，會封裝參數類別目錄的全域唯一識別碼。</param>
        <param name="value">64 位元整數，指定儲存在 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件中的值。 不可為負值。 在這個參數儲存在 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件中之前，會先轉換為 32 位元整數。</param>
        <summary>使用指定的 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件和一個 64 位元整數，初始化 <see cref="T:System.Drawing.Imaging.Encoder" /> 類別的新執行個體。 設定 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 屬性為 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeLong" /> (32 位元)，並設定 <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 屬性為 1。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列程式碼範例示範如何建立<xref:System.Drawing.Imaging.EncoderParameter>使用<xref:System.Drawing.Imaging.EncoderParameter.%23ctor%2A>建構函式。 若要執行此範例中，貼上程式碼的 Windows Form 和呼叫`VaryQualityLevel`從表單的建構函式的方法。 這個範例需要名為影像檔`TestPhoto.jpg`位於**c:\\**。  
  
 [!code-csharp[UsingImageEncodersDecoders#8](~/samples/snippets/csharp/VS_Snippets_Winforms/UsingImageEncodersDecoders/CS/Form1.cs#8)]
 [!code-vb[UsingImageEncodersDecoders#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/UsingImageEncodersDecoders/VB/Form1.vb#8)]  
[!code-csharp[UsingImageEncodersDecoders#6](~/samples/snippets/csharp/VS_Snippets_Winforms/UsingImageEncodersDecoders/CS/Form1.cs#6)]
[!code-vb[UsingImageEncodersDecoders#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/UsingImageEncodersDecoders/VB/Form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncoderParameter (System.Drawing.Imaging.Encoder encoder, long[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Imaging.Encoder encoder, int64[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncoderParameter(System::Drawing::Imaging::Encoder ^ encoder, cli::array &lt;long&gt; ^ value);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Imaging.EncoderParameter : System.Drawing.Imaging.Encoder * int64[] -&gt; System.Drawing.Imaging.EncoderParameter" Usage="new System.Drawing.Imaging.EncoderParameter (encoder, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="encoder" Type="System.Drawing.Imaging.Encoder" />
        <Parameter Name="value" Type="System.Int64[]" />
      </Parameters>
      <Docs>
        <param name="encoder">
          <see cref="T:System.Drawing.Imaging.Encoder" /> 物件，會封裝參數類別目錄的全域唯一識別碼。</param>
        <param name="value">64 位元整數的陣列，指定儲存在 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件中的值。 陣列中的整數不可為負值。 在 64 位元整數儲存在 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件中之前，會先轉換為 32 位元整數。</param>
        <summary>使用指定的 <see cref="T:System.Drawing.Imaging.Encoder" /> 物件和 64 位元整數的陣列，初始化 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 類別的新執行個體。 設定 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 屬性為 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeLong" /> (32 位元)，並設定 <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 屬性為陣列中的元素數目。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncoderParameter (System.Drawing.Imaging.Encoder encoder, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Imaging.Encoder encoder, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncoderParameter(System::Drawing::Imaging::Encoder ^ encoder, System::String ^ value);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Imaging.EncoderParameter : System.Drawing.Imaging.Encoder * string -&gt; System.Drawing.Imaging.EncoderParameter" Usage="new System.Drawing.Imaging.EncoderParameter (encoder, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="encoder" Type="System.Drawing.Imaging.Encoder" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="encoder">
          <see cref="T:System.Drawing.Imaging.Encoder" /> 物件，會封裝參數類別目錄的全域唯一識別碼。</param>
        <param name="value">
          <see cref="T:System.String" />，指定儲存在 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件中的值。</param>
        <summary>使用指定 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件和字元字串，初始化 <see cref="T:System.Drawing.Imaging.Encoder" /> 類別的新執行個體。 在字串儲存在 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件中之前，會先轉換為 Null 終端 ASCII 字串。 設定 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 屬性為 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeAscii" />，並設定 <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 屬性為包含 null 結束字元 (Terminator) 的 ASCII 字串的長度。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncoderParameter (System.Drawing.Imaging.Encoder encoder, byte value, bool undefined);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Imaging.Encoder encoder, unsigned int8 value, bool undefined) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncoderParameter(System::Drawing::Imaging::Encoder ^ encoder, System::Byte value, bool undefined);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Imaging.EncoderParameter : System.Drawing.Imaging.Encoder * byte * bool -&gt; System.Drawing.Imaging.EncoderParameter" Usage="new System.Drawing.Imaging.EncoderParameter (encoder, value, undefined)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="encoder" Type="System.Drawing.Imaging.Encoder" />
        <Parameter Name="value" Type="System.Byte" />
        <Parameter Name="undefined" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="encoder">
          <see cref="T:System.Drawing.Imaging.Encoder" /> 物件，會封裝參數類別目錄的全域唯一識別碼。</param>
        <param name="value">位元組，指定儲存在 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件中的值。</param>
        <param name="undefined">如果為 <see langword="true" />，則 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 屬性會設定為 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeUndefined" />，否則，<see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 屬性會設定為 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeByte" />。</param>
        <summary>使用指定的 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件和一個 8 位元值，初始化 <see cref="T:System.Drawing.Imaging.Encoder" /> 類別的新執行個體。 設定 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 屬性為 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeUndefined" /> 或 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeByte" />，並設定 <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 屬性為 1。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncoderParameter (System.Drawing.Imaging.Encoder encoder, byte[] value, bool undefined);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Imaging.Encoder encoder, unsigned int8[] value, bool undefined) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte[],System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncoderParameter(System::Drawing::Imaging::Encoder ^ encoder, cli::array &lt;System::Byte&gt; ^ value, bool undefined);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Imaging.EncoderParameter : System.Drawing.Imaging.Encoder * byte[] * bool -&gt; System.Drawing.Imaging.EncoderParameter" Usage="new System.Drawing.Imaging.EncoderParameter (encoder, value, undefined)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="encoder" Type="System.Drawing.Imaging.Encoder" />
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="undefined" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="encoder">
          <see cref="T:System.Drawing.Imaging.Encoder" /> 物件，會封裝參數類別目錄的全域唯一識別碼。</param>
        <param name="value">位元組陣列，指定儲存在 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件中的值。</param>
        <param name="undefined">如果為 <see langword="true" />，則 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 屬性會設定為 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeUndefined" />，否則，<see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 屬性會設定為 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeByte" />。</param>
        <summary>使用指定的 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件和位元組的陣列，初始化 <see cref="T:System.Drawing.Imaging.Encoder" /> 類別的新執行個體。 設定 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 屬性為 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeUndefined" /> 或 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeByte" />，並設定 <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 屬性為陣列中的元素數目。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncoderParameter (System.Drawing.Imaging.Encoder encoder, int[] numerator, int[] denominator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Imaging.Encoder encoder, int32[] numerator, int32[] denominator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32[],System.Int32[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncoderParameter(System::Drawing::Imaging::Encoder ^ encoder, cli::array &lt;int&gt; ^ numerator, cli::array &lt;int&gt; ^ denominator);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Imaging.EncoderParameter : System.Drawing.Imaging.Encoder * int[] * int[] -&gt; System.Drawing.Imaging.EncoderParameter" Usage="new System.Drawing.Imaging.EncoderParameter (encoder, numerator, denominator)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="encoder" Type="System.Drawing.Imaging.Encoder" />
        <Parameter Name="numerator" Type="System.Int32[]" />
        <Parameter Name="denominator" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="encoder">
          <see cref="T:System.Drawing.Imaging.Encoder" /> 物件，會封裝參數類別目錄的全域唯一識別碼。</param>
        <param name="numerator">32 位元整數的陣列，指定分數的分子。 陣列中的整數不可為負值。</param>
        <param name="denominator">32 位元整數的陣列，指定分數的分母。 陣列中的整數不可為負值。 指定索引的分母和相同索引的分子相配對。</param>
        <summary>使用指定的 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件和兩個 32 位元整數的陣列，初始化 <see cref="T:System.Drawing.Imaging.Encoder" /> 類別的新執行個體。 這兩個陣列表示分數的陣列。 設定 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 屬性為 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeRational" />，並設定 <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 屬性為 <paramref name="numerator" /> 陣列中的元素數目，這個數目必須和 <paramref name="denominator" /> 陣列中的元素數目相同。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncoderParameter (System.Drawing.Imaging.Encoder encoder, long rangebegin, long rangeend);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Imaging.Encoder encoder, int64 rangebegin, int64 rangeend) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64,System.Int64)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncoderParameter(System::Drawing::Imaging::Encoder ^ encoder, long rangebegin, long rangeend);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Imaging.EncoderParameter : System.Drawing.Imaging.Encoder * int64 * int64 -&gt; System.Drawing.Imaging.EncoderParameter" Usage="new System.Drawing.Imaging.EncoderParameter (encoder, rangebegin, rangeend)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="encoder" Type="System.Drawing.Imaging.Encoder" />
        <Parameter Name="rangebegin" Type="System.Int64" />
        <Parameter Name="rangeend" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="encoder">
          <see cref="T:System.Drawing.Imaging.Encoder" /> 物件，會封裝參數類別目錄的全域唯一識別碼。</param>
        <param name="rangebegin">64 位元整數，表示整數範圍中的最小數字。 不可為負值。 在這個參數儲存在 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件中之前，會先轉換為 32 位元整數。</param>
        <param name="rangeend">64 位元整數，表示整數範圍中的最大數字。 不可為負值。 在這個參數儲存在 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件中之前，會先轉換為 32 位元整數。</param>
        <summary>使用指定的 <see cref="T:System.Drawing.Imaging.Encoder" /> 物件和一組 64 位元整數，初始化 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 類別的新執行個體。 整數的配對表示整數的範圍，第一個整數為範圍中的最小數字，第二個整數為範圍中的最大數字。 設定 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 屬性為 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeLongRange" />，並設定 <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 屬性為 1。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncoderParameter (System.Drawing.Imaging.Encoder encoder, long[] rangebegin, long[] rangeend);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Imaging.Encoder encoder, int64[] rangebegin, int64[] rangeend) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64[],System.Int64[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncoderParameter(System::Drawing::Imaging::Encoder ^ encoder, cli::array &lt;long&gt; ^ rangebegin, cli::array &lt;long&gt; ^ rangeend);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Imaging.EncoderParameter : System.Drawing.Imaging.Encoder * int64[] * int64[] -&gt; System.Drawing.Imaging.EncoderParameter" Usage="new System.Drawing.Imaging.EncoderParameter (encoder, rangebegin, rangeend)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="encoder" Type="System.Drawing.Imaging.Encoder" />
        <Parameter Name="rangebegin" Type="System.Int64[]" />
        <Parameter Name="rangeend" Type="System.Int64[]" />
      </Parameters>
      <Docs>
        <param name="encoder">
          <see cref="T:System.Drawing.Imaging.Encoder" /> 物件，會封裝參數類別目錄的全域唯一識別碼。</param>
        <param name="rangebegin">64 位元整數的陣列，指定整數範圍的最小值。 陣列中的整數不可為負值。 在 64 位元整數儲存在 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件中之前，會先轉換為 32 位元整數。</param>
        <param name="rangeend">64 位元整數的陣列，指定整數範圍的最大值。 陣列中的整數不可為負值。 在 64 位元整數儲存在 <see cref="T:System.Drawing.Imaging.EncoderParameters" /> 物件中之前，會先轉換為 32 位元整數。 指定索引的最大值和相同索引的最小值相配對。</param>
        <summary>使用指定的 <see cref="T:System.Drawing.Imaging.Encoder" /> 物件和兩個 64 位元整數的陣列，初始化 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 類別的新執行個體。 這兩個陣列表示陣列整數範圍。 設定 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 屬性為 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeLongRange" />，並設定 <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 屬性為 <paramref name="rangebegin" /> 陣列中的元素數目，這個數目必須和 <paramref name="rangeend" /> 陣列中的元素數目相同。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncoderParameter (System.Drawing.Imaging.Encoder encoder, int numberValues, System.Drawing.Imaging.EncoderParameterValueType type, IntPtr value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Imaging.Encoder encoder, int32 numberValues, valuetype System.Drawing.Imaging.EncoderParameterValueType type, native int value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Drawing.Imaging.EncoderParameterValueType,System.IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncoderParameter(System::Drawing::Imaging::Encoder ^ encoder, int numberValues, System::Drawing::Imaging::EncoderParameterValueType type, IntPtr value);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Imaging.EncoderParameter : System.Drawing.Imaging.Encoder * int * System.Drawing.Imaging.EncoderParameterValueType * nativeint -&gt; System.Drawing.Imaging.EncoderParameter" Usage="new System.Drawing.Imaging.EncoderParameter (encoder, numberValues, type, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="encoder" Type="System.Drawing.Imaging.Encoder" />
        <Parameter Name="numberValues" Type="System.Int32" />
        <Parameter Name="type" Type="System.Drawing.Imaging.EncoderParameterValueType" />
        <Parameter Name="value" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="encoder">
          <see cref="T:System.Drawing.Imaging.Encoder" /> 物件，會封裝參數類別目錄的全域唯一識別碼。</param>
        <param name="numberValues">整數，指定儲存在 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件中的值數目。 <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 屬性設為這個值。</param>
        <param name="type">
          <see cref="T:System.Drawing.Imaging.EncoderParameterValueType" /> 列舉型別的成員，其指定儲存在 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件中之值的資料型別。 <see cref="T:System.Type" /> 和 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 屬性都設定為這個值。</param>
        <param name="value">
          <c>Type</c> 參數所指定型別之值陣列的指標。</param>
        <summary>使用指定的 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件、值的數目、值的資料型別和儲存在 <see cref="T:System.Drawing.Imaging.Encoder" /> 物件中值的指標，初始化 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncoderParameter (System.Drawing.Imaging.Encoder encoder, int NumberOfValues, int Type, int Value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Imaging.Encoder encoder, int32 NumberOfValues, int32 Type, int32 Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncoderParameter(System::Drawing::Imaging::Encoder ^ encoder, int NumberOfValues, int Type, int Value);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Imaging.EncoderParameter : System.Drawing.Imaging.Encoder * int * int * int -&gt; System.Drawing.Imaging.EncoderParameter" Usage="new System.Drawing.Imaging.EncoderParameter (encoder, NumberOfValues, Type, Value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1">
          <AttributeName>System.Obsolete("This constructor has been deprecated. Use EncoderParameter(Encoder encoder, int numberValues, EncoderParameterValueType type, IntPtr value) instead.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="encoder" Type="System.Drawing.Imaging.Encoder" />
        <Parameter Name="NumberOfValues" Type="System.Int32" />
        <Parameter Name="Type" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="encoder">
          <see cref="T:System.Drawing.Imaging.Encoder" /> 物件，會封裝參數類別目錄的全域唯一識別碼。</param>
        <param name="NumberOfValues">整數，指定儲存在 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件中的值數目。 <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 屬性設為這個值。</param>
        <param name="Type">
          <see cref="T:System.Drawing.Imaging.EncoderParameterValueType" /> 列舉型別的成員，其指定儲存在 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件中之值的資料型別。 <see cref="T:System.Type" /> 和 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 屬性都設定為這個值。</param>
        <param name="Value">
          <c>Type</c> 參數所指定型別之值陣列的指標。</param>
        <summary>使用指定的 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件和三個整數 (其指定值的數目、值的資料型別和儲存在 <see cref="T:System.Drawing.Imaging.Encoder" /> 物件中值的指標)，初始化 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">型別不是有效的 <see cref="T:System.Drawing.Imaging.EncoderParameterValueType" />。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncoderParameter (System.Drawing.Imaging.Encoder encoder, int numerator, int demoninator);" FrameworkAlternate="netframework-1.1;netframework-4.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Imaging.Encoder encoder, int32 numerator, int32 demoninator) cil managed" FrameworkAlternate="netframework-1.1;netframework-4.0" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncoderParameter(System::Drawing::Imaging::Encoder ^ encoder, int numerator, int demoninator);" FrameworkAlternate="netframework-1.1;netframework-4.0" />
      <MemberSignature Language="F#" Value="new System.Drawing.Imaging.EncoderParameter : System.Drawing.Imaging.Encoder * int * int -&gt; System.Drawing.Imaging.EncoderParameter" Usage="new System.Drawing.Imaging.EncoderParameter (encoder, numerator, demoninator)" FrameworkAlternate="netframework-1.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public EncoderParameter (System.Drawing.Imaging.Encoder encoder, int numerator, int denominator);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Imaging.Encoder encoder, int32 numerator, int32 denominator) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncoderParameter(System::Drawing::Imaging::Encoder ^ encoder, int numerator, int denominator);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1" />
      <MemberSignature Language="F#" Value="new System.Drawing.Imaging.EncoderParameter : System.Drawing.Imaging.Encoder * int * int -&gt; System.Drawing.Imaging.EncoderParameter" Usage="new System.Drawing.Imaging.EncoderParameter (encoder, numerator, denominator)" FrameworkAlternate="dotnet-plat-ext-2.1;netcore-2.1;netframework-2.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="encoder" Type="System.Drawing.Imaging.Encoder" Index="0" />
        <Parameter Name="numerator" Type="System.Int32" Index="1" />
        <Parameter Name="demoninator" Type="System.Int32" Index="2" FrameworkAlternate="netframework-1.1;netframework-4.0" />
        <Parameter Name="denominator" Type="System.Int32" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1" />
      </Parameters>
      <Docs>
        <param name="encoder">
          <see cref="T:System.Drawing.Imaging.Encoder" /> 物件，會封裝參數類別目錄的全域唯一識別碼。</param>
        <param name="denominator">32 位元整數，表示分數的分母。 不可為負值。</param>
        <param name="numerator">32 位元整數，表示分數的分子。 不可為負值。</param>
        <param name="demoninator">To be added.</param>
        <summary>使用指定的 <see cref="T:System.Drawing.Imaging.Encoder" /> 物件和一組 32 位元整數，初始化 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 類別的新執行個體。 這組整數表示分數，第一個整數為分子，第二個整數為分母。 設定 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 屬性為 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeRational" />，並設定 <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 屬性為 1。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncoderParameter (System.Drawing.Imaging.Encoder encoder, int numerator1, int demoninator1, int numerator2, int demoninator2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Imaging.Encoder encoder, int32 numerator1, int32 demoninator1, int32 numerator2, int32 demoninator2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncoderParameter(System::Drawing::Imaging::Encoder ^ encoder, int numerator1, int demoninator1, int numerator2, int demoninator2);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Imaging.EncoderParameter : System.Drawing.Imaging.Encoder * int * int * int * int -&gt; System.Drawing.Imaging.EncoderParameter" Usage="new System.Drawing.Imaging.EncoderParameter (encoder, numerator1, demoninator1, numerator2, demoninator2)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="encoder" Type="System.Drawing.Imaging.Encoder" />
        <Parameter Name="numerator1" Type="System.Int32" />
        <Parameter Name="demoninator1" Type="System.Int32" />
        <Parameter Name="numerator2" Type="System.Int32" />
        <Parameter Name="demoninator2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="encoder">
          <see cref="T:System.Drawing.Imaging.Encoder" /> 物件，會封裝參數類別目錄的全域唯一識別碼。</param>
        <param name="numerator1">32 位元整數，表示範圍中最小分數的分子。 不可為負值。</param>
        <param name="demoninator1">32 位元整數，表示範圍中最小分數的分母。 不可為負值。</param>
        <param name="numerator2">32 位元整數，表示範圍中最小分數的分母。 不可為負值。</param>
        <param name="demoninator2">32 位元整數，表示範圍中最大分數的分子。 不可為負值。</param>
        <summary>使用指定的 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件和四個 32 位元整數，初始化 <see cref="T:System.Drawing.Imaging.Encoder" /> 類別的新執行個體。 四個整數表示分數的範圍。 前兩個整數表示範圍中的最小分數，其餘的兩個整數表示範圍中的最大分數。 設定 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 屬性為 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeRationalRange" />，並設定 <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 屬性為 1。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncoderParameter (System.Drawing.Imaging.Encoder encoder, int[] numerator1, int[] denominator1, int[] numerator2, int[] denominator2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Imaging.Encoder encoder, int32[] numerator1, int32[] denominator1, int32[] numerator2, int32[] denominator2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32[],System.Int32[],System.Int32[],System.Int32[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncoderParameter(System::Drawing::Imaging::Encoder ^ encoder, cli::array &lt;int&gt; ^ numerator1, cli::array &lt;int&gt; ^ denominator1, cli::array &lt;int&gt; ^ numerator2, cli::array &lt;int&gt; ^ denominator2);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Imaging.EncoderParameter : System.Drawing.Imaging.Encoder * int[] * int[] * int[] * int[] -&gt; System.Drawing.Imaging.EncoderParameter" Usage="new System.Drawing.Imaging.EncoderParameter (encoder, numerator1, denominator1, numerator2, denominator2)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="encoder" Type="System.Drawing.Imaging.Encoder" />
        <Parameter Name="numerator1" Type="System.Int32[]" />
        <Parameter Name="denominator1" Type="System.Int32[]" />
        <Parameter Name="numerator2" Type="System.Int32[]" />
        <Parameter Name="denominator2" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="encoder">
          <see cref="T:System.Drawing.Imaging.Encoder" /> 物件，會封裝參數類別目錄的全域唯一識別碼。</param>
        <param name="numerator1">32 位元整數的陣列，指定範圍中最小值的分子。 陣列中的整數不可為負值。</param>
        <param name="denominator1">32 位元整數的陣列，指定範圍中最小值的分母。 陣列中的整數不可為負值。</param>
        <param name="numerator2">32 位元整數的陣列，指定範圍中最大值的分子。 陣列中的整數不可為負值。</param>
        <param name="denominator2">32 位元整數的陣列，指定範圍中最大值的分母。 陣列中的整數不可為負值。</param>
        <summary>使用指定的 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件和四個 32 位元整數的陣列，初始化 <see cref="T:System.Drawing.Imaging.Encoder" /> 類別的新執行個體。 四個陣列表示陣列有理數範圍。 有理數範圍是從最小分數值到最大分數值的所有分數集合。 設定 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 屬性為 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeRationalRange" />，並設定 <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 屬性為 <paramref name="numerator1" /> 陣列中的元素數目，這個數目必須與其他三個陣列中的元素數目相同。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 涉及範圍包含從 numerator1 所有小數點的數字 [i] / denominator1 [i] 透過 numerator2 [i] / denominator2 [i]。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.EncoderParameter.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="encoderParameter.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>釋放這個 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件使用的所有資源。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼叫<xref:System.Drawing.Imaging.EncoderParameter.Dispose%2A>可讓由這個資源<xref:System.Drawing.Imaging.EncoderParameter>基於其他因素都重新配置的物件。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Encoder">
      <MemberSignature Language="C#" Value="public System.Drawing.Imaging.Encoder Encoder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Imaging.Encoder Encoder" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Imaging.EncoderParameter.Encoder" />
      <MemberSignature Language="VB.NET" Value="Public Property Encoder As Encoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Imaging::Encoder ^ Encoder { System::Drawing::Imaging::Encoder ^ get(); void set(System::Drawing::Imaging::Encoder ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Encoder : System.Drawing.Imaging.Encoder with get, set" Usage="System.Drawing.Imaging.EncoderParameter.Encoder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Imaging.Encoder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定與這個 <see cref="T:System.Drawing.Imaging.Encoder" /> 物件相關聯的 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件。 <see cref="T:System.Drawing.Imaging.Encoder" /> 物件會封裝全域唯一識別項 (GUID)，其指定儲存在這個 <see cref="F:System.Drawing.Imaging.Encoder.Quality" /> 物件中之參數的分類 (例如 <see cref="F:System.Drawing.Imaging.Encoder.ColorDepth" />、<see cref="F:System.Drawing.Imaging.Encoder.Compression" /> 或 <see cref="T:System.Drawing.Imaging.EncoderParameter" />)。</summary>
        <value>
          <see cref="T:System.Drawing.Imaging.Encoder" /> 物件，封裝指定儲存在這個 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件中參數之分類的 GUID。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~EncoderParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.EncoderParameter.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!EncoderParameter ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="encoderParameter.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>允許 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件嘗試釋放資源，並執行其他清除作業，不必等到記憶體回收收回 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberOfValues">
      <MemberSignature Language="C#" Value="public int NumberOfValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NumberOfValues" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NumberOfValues As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int NumberOfValues { int get(); };" />
      <MemberSignature Language="F#" Value="member this.NumberOfValues : int" Usage="System.Drawing.Imaging.EncoderParameter.NumberOfValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得儲存在這個 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件中的值陣列之元素數目。</summary>
        <value>整數，指出儲存在這個 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件中值陣列的元素數目。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public System.Drawing.Imaging.EncoderParameterValueType Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Imaging.EncoderParameterValueType Type" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Imaging.EncoderParameter.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As EncoderParameterValueType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Imaging::EncoderParameterValueType Type { System::Drawing::Imaging::EncoderParameterValueType get(); };" />
      <MemberSignature Language="F#" Value="member this.Type : System.Drawing.Imaging.EncoderParameterValueType" Usage="System.Drawing.Imaging.EncoderParameter.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Imaging.EncoderParameterValueType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得儲存在這個 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件中的值之資料型別。</summary>
        <value>
          <see cref="T:System.Drawing.Imaging.EncoderParameterValueType" /> 列舉型別的成員，指出儲存在這個 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件中的值之資料型別。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValueType">
      <MemberSignature Language="C#" Value="public System.Drawing.Imaging.EncoderParameterValueType ValueType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Imaging.EncoderParameterValueType ValueType" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Imaging.EncoderParameter.ValueType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValueType As EncoderParameterValueType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Imaging::EncoderParameterValueType ValueType { System::Drawing::Imaging::EncoderParameterValueType get(); };" />
      <MemberSignature Language="F#" Value="member this.ValueType : System.Drawing.Imaging.EncoderParameterValueType" Usage="System.Drawing.Imaging.EncoderParameter.ValueType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Imaging.EncoderParameterValueType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得儲存在這個 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件中的值之資料型別。</summary>
        <value>
          <see cref="T:System.Drawing.Imaging.EncoderParameterValueType" /> 列舉型別的成員，指出儲存在這個 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件中的值之資料型別。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>