<Type Name="XmlReaderSettings" FullName="System.Xml.XmlReaderSettings">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cb23dbbc74a37f1d75de357623f3f4b6dd96e726" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57944533" /></Metadata><TypeSignature Language="C#" Value="public sealed class XmlReaderSettings" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XmlReaderSettings extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlReaderSettings" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XmlReaderSettings" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlReaderSettings sealed" />
  <TypeSignature Language="F#" Value="type XmlReaderSettings = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="93ef0-101">指定要在由 <see cref="T:System.Xml.XmlReader" /> 方法建立的 <see cref="Overload:System.Xml.XmlReader.Create" /> 物件上支援的一組功能。</span><span class="sxs-lookup"><span data-stu-id="93ef0-101">Specifies a set of features to support on the <see cref="T:System.Xml.XmlReader" /> object created by the <see cref="Overload:System.Xml.XmlReader.Create" /> method.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93ef0-102">您使用<xref:System.Xml.XmlReader.Create%2A>方法，以取得<xref:System.Xml.XmlReader>執行個體。</span><span class="sxs-lookup"><span data-stu-id="93ef0-102">You use the <xref:System.Xml.XmlReader.Create%2A> method to obtain <xref:System.Xml.XmlReader> instances.</span></span> <span data-ttu-id="93ef0-103">這個方法會使用<xref:System.Xml.XmlReaderSettings>類別，以指定要在實作哪些功能<xref:System.Xml.XmlReader>物件，它會建立。</span><span class="sxs-lookup"><span data-stu-id="93ef0-103">This method uses the <xref:System.Xml.XmlReaderSettings> class to specify which features to implement in the <xref:System.Xml.XmlReader> object it creates.</span></span>  
  
 <span data-ttu-id="93ef0-104">請參閱的 < 備註 > 一節<xref:System.Xml.XmlReader>和<xref:System.Xml.XmlReader.Create%2A>參考頁面，如需有關要使用的一致性檢查、 驗證和其他常見案例的設定資訊。</span><span class="sxs-lookup"><span data-stu-id="93ef0-104">See the Remarks sections of the <xref:System.Xml.XmlReader> and <xref:System.Xml.XmlReader.Create%2A> reference pages for information about which settings to use for conformance checks, validation, and other common scenarios.</span></span> <span data-ttu-id="93ef0-105">請參閱<xref:System.Xml.XmlReaderSettings.%23ctor>建構函式，如需預設設定的清單。</span><span class="sxs-lookup"><span data-stu-id="93ef0-105">See the <xref:System.Xml.XmlReaderSettings.%23ctor> constructor for a list of default settings.</span></span>  
  
## <a name="security-considerations"></a><span data-ttu-id="93ef0-106">安全性考量</span><span class="sxs-lookup"><span data-stu-id="93ef0-106">Security considerations</span></span>  
 <span data-ttu-id="93ef0-107">使用時，請考慮下列<xref:System.Xml.XmlReaderSettings>類別。</span><span class="sxs-lookup"><span data-stu-id="93ef0-107">Consider the following when using the <xref:System.Xml.XmlReaderSettings> class.</span></span>  
  
-   <span data-ttu-id="93ef0-108">依預設，不會設定 <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> 物件的 <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> 及 <xref:System.Xml.XmlReaderSettings> 驗證旗標。</span><span class="sxs-lookup"><span data-stu-id="93ef0-108">The <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> and <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> validation flags of an <xref:System.Xml.XmlReaderSettings> object are not set by default.</span></span> <span data-ttu-id="93ef0-109">當設定這些旗標時，<xref:System.Xml.XmlReaderSettings.XmlResolver%2A> 物件的 <xref:System.Xml.XmlReaderSettings> 可用於解析在 <xref:System.Xml.XmlReader> 的執行個體文件中發現的結構描述位置。</span><span class="sxs-lookup"><span data-stu-id="93ef0-109">When these flags are set, the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> of the <xref:System.Xml.XmlReaderSettings> object is used to resolve schema locations encountered in the instance document in the <xref:System.Xml.XmlReader>.</span></span> <span data-ttu-id="93ef0-110">如果<xref:System.Xml.XmlReaderSettings.XmlResolver%2A>物件是否`null`，則不會解析結構描述位置即使<xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema>和<xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation>設定驗證旗標。</span><span class="sxs-lookup"><span data-stu-id="93ef0-110">If the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> object is `null`, schema locations are not resolved even if the <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> and <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> validation flags are set.</span></span>  
  
-   <span data-ttu-id="93ef0-111">驗證期間加入的結構描述會加入新型別，並可變更要驗證之物件的驗證結果。</span><span class="sxs-lookup"><span data-stu-id="93ef0-111">Schemas added during validation add new types and can change the validation outcome of the document being validated.</span></span> <span data-ttu-id="93ef0-112">因此，外部結構描述應僅從受信任的來源解析。</span><span class="sxs-lookup"><span data-stu-id="93ef0-112">As a result, external schemas should only be resolved from trusted sources.</span></span>  
  
-   <span data-ttu-id="93ef0-113">驗證錯誤訊息可能會公開敏感的內容模型的資訊。</span><span class="sxs-lookup"><span data-stu-id="93ef0-113">Validation error messages may expose sensitive content model information.</span></span> <span data-ttu-id="93ef0-114">驗證錯誤和警告訊息則會使用處理<xref:System.Xml.Schema.ValidationEventHandler>委派，或公開為<xref:System.Xml.Schema.XmlSchemaValidationException>如果沒有事件處理常式提供給<xref:System.Xml.XmlReaderSettings>物件 (不會造成驗證警告<xref:System.Xml.Schema.XmlSchemaValidationException>擲回)。</span><span class="sxs-lookup"><span data-stu-id="93ef0-114">Validation error and warning messages are handled using the <xref:System.Xml.Schema.ValidationEventHandler> delegate, or are exposed as an <xref:System.Xml.Schema.XmlSchemaValidationException> if no event handler is provided to the <xref:System.Xml.XmlReaderSettings> object (validation warnings do not cause an <xref:System.Xml.Schema.XmlSchemaValidationException> to be thrown).</span></span> <span data-ttu-id="93ef0-115">在不受信任的情況下，應該不會公開此內容模型的資訊。</span><span class="sxs-lookup"><span data-stu-id="93ef0-115">This content model information should not be exposed in untrusted scenarios.</span></span> <span data-ttu-id="93ef0-116">依預設會隱藏驗證警告訊息，並可以藉由設定報告<xref:System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings>旗標。</span><span class="sxs-lookup"><span data-stu-id="93ef0-116">Validation warning messages are suppressed by default and can be reported by setting the <xref:System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings> flag.</span></span>  
  
-   <span data-ttu-id="93ef0-117"><xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A>屬性<xref:System.Xml.Schema.XmlSchemaValidationException>傳回至造成例外狀況的結構描述檔案的 URI 路徑。</span><span class="sxs-lookup"><span data-stu-id="93ef0-117">The <xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A> property of an <xref:System.Xml.Schema.XmlSchemaValidationException> returns the URI path to the schema file that caused the exception.</span></span> <span data-ttu-id="93ef0-118"><xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A>屬性不應公開受信任的案例中。</span><span class="sxs-lookup"><span data-stu-id="93ef0-118">The <xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A> property should not be exposed in untrusted scenarios.</span></span>  
  
-   <span data-ttu-id="93ef0-119">停用<xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints>旗標 （預設為啟用） 時，建議使用文件的大部分驗證、 不受信任、 大型 XML 文件中的高可用性的情況下，針對具有識別條件約束的結構描述。</span><span class="sxs-lookup"><span data-stu-id="93ef0-119">Disabling the <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints> flag (enabled by default) is recommended when validating, untrusted, large XML documents in high availability scenarios against a schema with identity constraints over a large part of the document.</span></span>  
  
-   <span data-ttu-id="93ef0-120"><xref:System.Xml.XmlReaderSettings> 物件可以包含機密資訊 (如使用者認證)。</span><span class="sxs-lookup"><span data-stu-id="93ef0-120"><xref:System.Xml.XmlReaderSettings> objects can contain sensitive information such as user credentials.</span></span> <span data-ttu-id="93ef0-121">快取 <xref:System.Xml.XmlReaderSettings> 物件，或將 <xref:System.Xml.XmlReaderSettings> 物件從一個元件傳遞至另一元件時，請務必小心。</span><span class="sxs-lookup"><span data-stu-id="93ef0-121">You should be careful when caching <xref:System.Xml.XmlReaderSettings> objects, or when passing the <xref:System.Xml.XmlReaderSettings> object from one component to another.</span></span>  
  
-   <span data-ttu-id="93ef0-122">DTD 處理預設會停用。</span><span class="sxs-lookup"><span data-stu-id="93ef0-122">DTD processing is disabled by default.</span></span> <span data-ttu-id="93ef0-123">如果您啟用 DTD 處理，您需要留意的 dtd 來自不受信任的來源和可能的阻絕服務攻擊。</span><span class="sxs-lookup"><span data-stu-id="93ef0-123">If you enable DTD processing, you need to be aware of including DTDs from untrusted sources and possible denial of service attacks.</span></span> <span data-ttu-id="93ef0-124">使用<xref:System.Xml.XmlSecureResolver>來限制資源的<xref:System.Xml.XmlReader>可以存取。</span><span class="sxs-lookup"><span data-stu-id="93ef0-124">Use the <xref:System.Xml.XmlSecureResolver> to restrict the resources that the <xref:System.Xml.XmlReader> can access.</span></span>  
  
-   <span data-ttu-id="93ef0-125">請不要接受來自不受信任來源的支援元件，如 <xref:System.Xml.NameTable>、<xref:System.Xml.XmlNamespaceManager> 及 <xref:System.Xml.XmlResolver> 物件。</span><span class="sxs-lookup"><span data-stu-id="93ef0-125">Do not accept supporting components, such as <xref:System.Xml.NameTable>, <xref:System.Xml.XmlNamespaceManager>, and <xref:System.Xml.XmlResolver> objects, from an untrusted source.</span></span>  
  
-   <span data-ttu-id="93ef0-126">使用 <xref:System.Xml.XmlReader> 之應用程式的記憶體使用量可能與剖析的 XML 文件大小相互關聯。</span><span class="sxs-lookup"><span data-stu-id="93ef0-126">Memory usage of an application that uses <xref:System.Xml.XmlReader> may have a correlation to the size of the parsed XML document.</span></span> <span data-ttu-id="93ef0-127">一種形式的阻絕服務攻擊發生於送出過多的 XML 文件進行剖析時。</span><span class="sxs-lookup"><span data-stu-id="93ef0-127">One form of denial of service attack is when excessively large XML documents are submitted to be parsed.</span></span> <span data-ttu-id="93ef0-128">您可以限制可以藉由設定剖析的文件的大小<xref:System.Xml.XmlReaderSettings.MaxCharactersInDocument%2A>屬性，然後限制產生自展開實體所設定的字元數<xref:System.Xml.XmlReaderSettings.MaxCharactersFromEntities%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="93ef0-128">You can limit the size of the document that can be parsed by setting the <xref:System.Xml.XmlReaderSettings.MaxCharactersInDocument%2A> property and then limit the number of characters that result from expanding entities by setting the <xref:System.Xml.XmlReaderSettings.MaxCharactersFromEntities%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93ef0-129">下列範例會建立<xref:System.Xml.XmlReader>使用<xref:System.Xml.XmlUrlResolver>具有必要認證。</span><span class="sxs-lookup"><span data-stu-id="93ef0-129">The following example creates an <xref:System.Xml.XmlReader> that uses an <xref:System.Xml.XmlUrlResolver> with the necessary credentials.</span></span>  
  
 [!code-csharp[XmlReader.Create#2](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.Create/CS/XmlReader_Create.cs#2)]
 [!code-vb[XmlReader.Create#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.Create/VB/XmlReader_Create.vb#2)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/standard/data/xml/index.md"><span data-ttu-id="93ef0-130">XML 文件和資料</span><span class="sxs-lookup"><span data-stu-id="93ef0-130">XML Documents and Data</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="93ef0-131">初始化 <see cref="T:System.Xml.XmlReaderSettings" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="93ef0-131">Initializes a new instance of the <see cref="T:System.Xml.XmlReaderSettings" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlReaderSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReaderSettings.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlReaderSettings();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="93ef0-132">初始化 <see cref="T:System.Xml.XmlReaderSettings" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="93ef0-132">Initializes a new instance of the <see cref="T:System.Xml.XmlReaderSettings" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93ef0-133">下表顯示的執行個體的初始屬性值<xref:System.Xml.XmlReaderSettings>。</span><span class="sxs-lookup"><span data-stu-id="93ef0-133">The following table shows initial property values for an instance of <xref:System.Xml.XmlReaderSettings>.</span></span>  
  
|<span data-ttu-id="93ef0-134">屬性</span><span class="sxs-lookup"><span data-stu-id="93ef0-134">Property</span></span>|<span data-ttu-id="93ef0-135">Initial value</span><span class="sxs-lookup"><span data-stu-id="93ef0-135">Initial value</span></span>|  
|--------------|-------------------|  
|<xref:System.Xml.XmlReaderSettings.Async%2A>|<span data-ttu-id="93ef0-136">`false`.</span><span class="sxs-lookup"><span data-stu-id="93ef0-136">`false`.</span></span>|  
|<xref:System.Xml.XmlReaderSettings.CheckCharacters%2A>|<span data-ttu-id="93ef0-137">`true`.</span><span class="sxs-lookup"><span data-stu-id="93ef0-137">`true`.</span></span>|  
|<xref:System.Xml.XmlReaderSettings.ConformanceLevel%2A>|<span data-ttu-id="93ef0-138"><xref:System.Xml.ConformanceLevel.Document>.</span><span class="sxs-lookup"><span data-stu-id="93ef0-138"><xref:System.Xml.ConformanceLevel.Document>.</span></span>|  
|<xref:System.Xml.XmlReaderSettings.IgnoreComments%2A>|<span data-ttu-id="93ef0-139">`false`.</span><span class="sxs-lookup"><span data-stu-id="93ef0-139">`false`.</span></span>|  
|<xref:System.Xml.XmlReaderSettings.IgnoreProcessingInstructions%2A>|<span data-ttu-id="93ef0-140">`false`.</span><span class="sxs-lookup"><span data-stu-id="93ef0-140">`false`.</span></span>|  
|<xref:System.Xml.XmlReaderSettings.IgnoreWhitespace%2A>|<span data-ttu-id="93ef0-141">`false`.</span><span class="sxs-lookup"><span data-stu-id="93ef0-141">`false`.</span></span>|  
|<xref:System.Xml.XmlReaderSettings.LineNumberOffset%2A>|<span data-ttu-id="93ef0-142">0.</span><span class="sxs-lookup"><span data-stu-id="93ef0-142">0.</span></span>|  
|<xref:System.Xml.XmlReaderSettings.LinePositionOffset%2A>|<span data-ttu-id="93ef0-143">0.</span><span class="sxs-lookup"><span data-stu-id="93ef0-143">0.</span></span>|  
|<xref:System.Xml.XmlReaderSettings.MaxCharactersFromEntities%2A>|<span data-ttu-id="93ef0-144">0 （不會產生自展開實體的字元數目沒有限制）。</span><span class="sxs-lookup"><span data-stu-id="93ef0-144">0 (there is no limit on the number of characters that result from expanding entities).</span></span>|  
|<xref:System.Xml.XmlReaderSettings.MaxCharactersInDocument%2A>|<span data-ttu-id="93ef0-145">0 （在 XML 文件大小沒有任何限制）。</span><span class="sxs-lookup"><span data-stu-id="93ef0-145">0 (there is no limit on the size of the XML document).</span></span>|  
|<xref:System.Xml.XmlReaderSettings.NameTable%2A>|<span data-ttu-id="93ef0-146">`null`.</span><span class="sxs-lookup"><span data-stu-id="93ef0-146">`null`.</span></span>|  
|<xref:System.Xml.XmlTextReader.DtdProcessing%2A>|<xref:System.Xml.DtdProcessing.Prohibit>|  
|<xref:System.Xml.XmlReaderSettings.ProhibitDtd%2A>|<span data-ttu-id="93ef0-147">`true`.</span><span class="sxs-lookup"><span data-stu-id="93ef0-147">`true`.</span></span> <span data-ttu-id="93ef0-148">這個屬性已經過時。</span><span class="sxs-lookup"><span data-stu-id="93ef0-148">This property is obsolete.</span></span> <span data-ttu-id="93ef0-149">請改用 <xref:System.Xml.XmlTextReader.DtdProcessing%2A>。</span><span class="sxs-lookup"><span data-stu-id="93ef0-149">Use <xref:System.Xml.XmlTextReader.DtdProcessing%2A> instead.</span></span> <span data-ttu-id="93ef0-150">如果您已設定<xref:System.Xml.XmlReaderSettings.ProhibitDtd%2A>為其預設值`true`設定<xref:System.Xml.XmlTextReader.DtdProcessing%2A>至`Prohibit`。</span><span class="sxs-lookup"><span data-stu-id="93ef0-150">If you had set <xref:System.Xml.XmlReaderSettings.ProhibitDtd%2A> to its default value `true` set <xref:System.Xml.XmlTextReader.DtdProcessing%2A> to `Prohibit`.</span></span> <span data-ttu-id="93ef0-151">如果您已設定<xref:System.Xml.XmlReaderSettings.ProhibitDtd%2A>要`false`設定<xref:System.Xml.XmlTextReader.DtdProcessing%2A>至`Parse`。</span><span class="sxs-lookup"><span data-stu-id="93ef0-151">If you had set <xref:System.Xml.XmlReaderSettings.ProhibitDtd%2A> to `false` set <xref:System.Xml.XmlTextReader.DtdProcessing%2A> to `Parse`.</span></span>|  
|<xref:System.Xml.XmlReaderSettings.Schemas%2A>|<span data-ttu-id="93ef0-152">空的 <xref:System.Xml.Schema.XmlSchemaSet> 物件。</span><span class="sxs-lookup"><span data-stu-id="93ef0-152">An empty <xref:System.Xml.Schema.XmlSchemaSet> object.</span></span>|  
|<xref:System.Xml.XmlReaderSettings.ValidationFlags%2A>|<span data-ttu-id="93ef0-153"><xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints>.</span><span class="sxs-lookup"><span data-stu-id="93ef0-153"><xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints>.</span></span>|  
|<xref:System.Xml.XmlReaderSettings.ValidationType%2A>|<span data-ttu-id="93ef0-154"><xref:System.Xml.ValidationType.None>.</span><span class="sxs-lookup"><span data-stu-id="93ef0-154"><xref:System.Xml.ValidationType.None>.</span></span>|  
|<xref:System.Xml.XmlReaderSettings.XmlResolver%2A>|<span data-ttu-id="93ef0-155">新的 <xref:System.Xml.XmlUrlResolver> 物件。</span><span class="sxs-lookup"><span data-stu-id="93ef0-155">A new <xref:System.Xml.XmlUrlResolver> object.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="93ef0-156">以下會建立可用來建構的讀取器處理指示、 註解，並不顯著泛空白字元會去除設定物件。</span><span class="sxs-lookup"><span data-stu-id="93ef0-156">The following creates a settings object that can be used to construct a reader that strips processing instructions, comments, and insignificant white space.</span></span>  
  
 [!code-cpp[XmlReaderSettings.cctor#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlReaderSettings.cctor/CPP/XmlReaderSettings.cctor.cpp#1)]
 [!code-csharp[XmlReaderSettings.cctor#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderSettings.cctor/CS/factory_rdr_cctor2.cs#1)]
 [!code-vb[XmlReaderSettings.cctor#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderSettings.cctor/VB/factory_rdr_cctor2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlReaderSettings (System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReaderSettings.#ctor(System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlReaderSettings(System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlReaderSettings : System.Xml.XmlResolver -&gt; System.Xml.XmlReaderSettings" Usage="new System.Xml.XmlReaderSettings resolver" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="resolver"><span data-ttu-id="93ef0-157">XML 解析器。</span><span class="sxs-lookup"><span data-stu-id="93ef0-157">The XML resolver.</span></span></param>
        <summary><span data-ttu-id="93ef0-158">初始化 <see cref="T:System.Xml.XmlReaderSettings" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="93ef0-158">Initializes a new instance of the <see cref="T:System.Xml.XmlReaderSettings" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Async">
      <MemberSignature Language="C#" Value="public bool Async { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Async" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.Async" />
      <MemberSignature Language="VB.NET" Value="Public Property Async As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Async { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Async : bool with get, set" Usage="System.Xml.XmlReaderSettings.Async" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="93ef0-159">取得或設定非同步 <see cref="T:System.Xml.XmlReader" /> 方法是否可以用於特定 <see cref="T:System.Xml.XmlReader" /> 執行個體。</span><span class="sxs-lookup"><span data-stu-id="93ef0-159">Gets or sets whether asynchronous <see cref="T:System.Xml.XmlReader" /> methods can be used on a particular <see cref="T:System.Xml.XmlReader" /> instance.</span></span></summary>
        <value><span data-ttu-id="93ef0-160">如果可以使用非同步方法，則為 <see langword="true" />，否則為<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="93ef0-160"><see langword="true" /> if asynchronous methods can be used; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93ef0-161">您必須將此值設定為`true`當您建立新<xref:System.Xml.XmlReader>執行個體，如果您想要使用非同步<xref:System.Xml.XmlReader>該執行個體上的方法。</span><span class="sxs-lookup"><span data-stu-id="93ef0-161">You must set this value to `true` when you create a new <xref:System.Xml.XmlReader> instance if you want to use asynchronous <xref:System.Xml.XmlReader> methods on that instance.</span></span> <span data-ttu-id="93ef0-162">在後<xref:System.Xml.XmlReader>會建立執行個體，<xref:System.Xml.XmlReaderSettings.Async%2A>屬性是唯讀的。</span><span class="sxs-lookup"><span data-stu-id="93ef0-162">After the <xref:System.Xml.XmlReader> instance is created, the <xref:System.Xml.XmlReaderSettings.Async%2A> property is read-only.</span></span> <span data-ttu-id="93ef0-163">此屬性的預設值為 `false`。</span><span class="sxs-lookup"><span data-stu-id="93ef0-163">The default value of this property is `false`.</span></span>  
  
 <span data-ttu-id="93ef0-164">這個旗標會忽略<xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType>多載。</span><span class="sxs-lookup"><span data-stu-id="93ef0-164">This flag is ignored by the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> overload.</span></span> <span data-ttu-id="93ef0-165">這表示，如果您建立新<xref:System.Xml.XmlReader>根據現有<xref:System.Xml.XmlReader>，取決於輸入的非同步行為<xref:System.Xml.XmlReader>，而且您無法使用<xref:System.Xml.XmlReaderSettings.Async%2A>變更非同步行為的旗標。</span><span class="sxs-lookup"><span data-stu-id="93ef0-165">This means that if you create a new <xref:System.Xml.XmlReader> based on an existing <xref:System.Xml.XmlReader>, the async behavior depends on the input <xref:System.Xml.XmlReader>, and you cannot use the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to change the async behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7"><span data-ttu-id="93ef0-166">使用 Async 和 Await 設計非同步程式 (C# 和 Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="93ef0-166">Asynchronous Programming with Async and Await (C# and Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CheckCharacters">
      <MemberSignature Language="C#" Value="public bool CheckCharacters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CheckCharacters" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.CheckCharacters" />
      <MemberSignature Language="VB.NET" Value="Public Property CheckCharacters As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CheckCharacters { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CheckCharacters : bool with get, set" Usage="System.Xml.XmlReaderSettings.CheckCharacters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="93ef0-167">取得或設定值，綁表示是否要執行字元檢查。</span><span class="sxs-lookup"><span data-stu-id="93ef0-167">Gets or sets a value indicating whether to do character checking.</span></span></summary>
        <value><span data-ttu-id="93ef0-168"><see langword="true" /> 表示執行字元檢查，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="93ef0-168"><see langword="true" /> to do character checking; otherwise <see langword="false" />.</span></span> <span data-ttu-id="93ef0-169">預設為 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="93ef0-169">The default is <see langword="true" />.</span></span>  
  
 <block subset="none" type="note"><para>  
 <span data-ttu-id="93ef0-170">如果 <see cref="T:System.Xml.XmlReader" /> 正在處理文字資料，則它會始終檢查 XML 名稱和文字內容是否有效，而不論屬性設定。</span><span class="sxs-lookup"><span data-stu-id="93ef0-170">If the <see cref="T:System.Xml.XmlReader" /> is processing text data, it always checks that the XML names and text content are valid, regardless of the property setting.</span></span> <span data-ttu-id="93ef0-171">將 <see cref="P:System.Xml.XmlReaderSettings.CheckCharacters" /> 設為 <see langword="false" /> 會關閉字元實體參考的字元檢查。</span><span class="sxs-lookup"><span data-stu-id="93ef0-171">Setting <see cref="P:System.Xml.XmlReaderSettings.CheckCharacters" /> to <see langword="false" /> turns off character checking for character entity references.</span></span>  
  
</para></block></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93ef0-172">此屬性會指示 XML 讀取器檢查字元在 XML 資料，它讀取，則擲回<xref:System.Xml.XmlException>有任何字元超出合法 XML 字元的範圍。</span><span class="sxs-lookup"><span data-stu-id="93ef0-172">This property instructs the XML reader to check characters in the XML data it's reading and throw an <xref:System.Xml.XmlException> if any characters are outside the range of legal XML characters.</span></span> <span data-ttu-id="93ef0-173">啟用字元檢查時，可確保：</span><span class="sxs-lookup"><span data-stu-id="93ef0-173">When character checking is enabled, you are ensured the following:</span></span>  
  
-   <span data-ttu-id="93ef0-174">所定義的字元都是合法的 XML 字元的範圍內[2.2 字元](https://www.w3.org/TR/2006/REC-xml-20060816/#charsets)W3C XML 1.0 建議事項一節。</span><span class="sxs-lookup"><span data-stu-id="93ef0-174">Characters are within the range of legal XML characters, as defined by the [2.2 Characters](https://www.w3.org/TR/2006/REC-xml-20060816/#charsets) section of the W3C XML 1.0 Recommendation.</span></span>  
  
-   <span data-ttu-id="93ef0-175">所有 XML 名稱都是否有效，所定義[2.3 Common Syntactic Constructs](https://www.w3.org/TR/2006/REC-xml-20060816/#NT-Name) W3C XML 1.0 建議事項一節。</span><span class="sxs-lookup"><span data-stu-id="93ef0-175">All XML names are valid, as defined by the [2.3 Common Syntactic Constructs](https://www.w3.org/TR/2006/REC-xml-20060816/#NT-Name) section of the W3C XML 1.0 Recommendation.</span></span>  
  
 <span data-ttu-id="93ef0-176">當這個屬性設定為`true`，這是預設設定，<xref:System.Xml.XmlException>擲回例外狀況是 XML 檔案包含不合法的字元或無效的 XML 名稱 （例如，項目名稱以數字開頭）。</span><span class="sxs-lookup"><span data-stu-id="93ef0-176">When this property is set to `true`, which is the default setting, an <xref:System.Xml.XmlException> exception is thrown if the XML file contains illegal characters or invalid XML names (for example, an element name starts with a number).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReaderSettings Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReaderSettings Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReaderSettings.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As XmlReaderSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReaderSettings ^ Clone();" />
      <MemberSignature Language="F#" Value="member this.Clone : unit -&gt; System.Xml.XmlReaderSettings" Usage="xmlReaderSettings.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReaderSettings</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="93ef0-177">建立 <see cref="T:System.Xml.XmlReaderSettings" /> 執行個體的複本。</span><span class="sxs-lookup"><span data-stu-id="93ef0-177">Creates a copy of the <see cref="T:System.Xml.XmlReaderSettings" /> instance.</span></span></summary>
        <returns><span data-ttu-id="93ef0-178">複製的 <see cref="T:System.Xml.XmlReaderSettings" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="93ef0-178">The cloned <see cref="T:System.Xml.XmlReaderSettings" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93ef0-179">複製<xref:System.Xml.XmlReaderSettings>可以修改物件，而不會影響原始物件上的設定。</span><span class="sxs-lookup"><span data-stu-id="93ef0-179">The cloned <xref:System.Xml.XmlReaderSettings> object can be modified without affecting the settings on the original object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CloseInput">
      <MemberSignature Language="C#" Value="public bool CloseInput { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CloseInput" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.CloseInput" />
      <MemberSignature Language="VB.NET" Value="Public Property CloseInput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CloseInput { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CloseInput : bool with get, set" Usage="System.Xml.XmlReaderSettings.CloseInput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="93ef0-180">取得或設定值，指出是否應該在關閉讀取器時關閉基礎資料流或 <see cref="T:System.IO.TextReader" />。</span><span class="sxs-lookup"><span data-stu-id="93ef0-180">Gets or sets a value indicating whether the underlying stream or <see cref="T:System.IO.TextReader" /> should be closed when the reader is closed.</span></span></summary>
        <value><span data-ttu-id="93ef0-181"><see langword="true" /> 表示關閉讀取器時關閉基礎資料流或 <see cref="T:System.IO.TextReader" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="93ef0-181"><see langword="true" /> to close the underlying stream or <see cref="T:System.IO.TextReader" /> when the reader is closed; otherwise <see langword="false" />.</span></span> <span data-ttu-id="93ef0-182">預設為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="93ef0-182">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93ef0-183">當資料流時，會使用此設定或<xref:System.IO.TextReader>傳遞至<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="93ef0-183">This setting is used when a stream or <xref:System.IO.TextReader> is passed to the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="93ef0-184">如果資料流由自己的處理的讀取器建立的例如建立讀取器時使用的 URI，或開啟外部的文件類型定義時，它一律會關閉讀取器關閉時。</span><span class="sxs-lookup"><span data-stu-id="93ef0-184">If a stream is created by the reader for its own processing, such as when the reader is created with a URI or when it opens an external document type definition, it is always closed when the reader is closed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConformanceLevel">
      <MemberSignature Language="C#" Value="public System.Xml.ConformanceLevel ConformanceLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.ConformanceLevel ConformanceLevel" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.ConformanceLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property ConformanceLevel As ConformanceLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::ConformanceLevel ConformanceLevel { System::Xml::ConformanceLevel get(); void set(System::Xml::ConformanceLevel value); };" />
      <MemberSignature Language="F#" Value="member this.ConformanceLevel : System.Xml.ConformanceLevel with get, set" Usage="System.Xml.XmlReaderSettings.ConformanceLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.ConformanceLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="93ef0-185">取得或設定 <see cref="T:System.Xml.XmlReader" /> 要遵循的一致性層級。</span><span class="sxs-lookup"><span data-stu-id="93ef0-185">Gets or sets the level of conformance which the <see cref="T:System.Xml.XmlReader" /> will comply.</span></span></summary>
        <value><span data-ttu-id="93ef0-186">其中一個列舉值，指定 XML 讀取器將強制執行的一致性層級。</span><span class="sxs-lookup"><span data-stu-id="93ef0-186">One of the enumeration values that specifies the level of conformance that the XML reader will enforce.</span></span> <span data-ttu-id="93ef0-187">預設為 <see cref="F:System.Xml.ConformanceLevel.Document" />。</span><span class="sxs-lookup"><span data-stu-id="93ef0-187">The default is <see cref="F:System.Xml.ConformanceLevel.Document" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93ef0-188">所建立的 XML 讀取器<xref:System.Xml.XmlReader.Create%2A>方法符合下列的合規性需求的預設值：</span><span class="sxs-lookup"><span data-stu-id="93ef0-188">XML readers that are created by the <xref:System.Xml.XmlReader.Create%2A> method meet the following compliance requirements by default:</span></span>  
  
-   <span data-ttu-id="93ef0-189">新行和屬性值根據正規化 W3C [XML 1.0 建議事項](https://www.w3.org/TR/2006/REC-xml-20060816/)。</span><span class="sxs-lookup"><span data-stu-id="93ef0-189">New lines and attribute value are normalized according to the W3C [XML 1.0 Recommendation](https://www.w3.org/TR/2006/REC-xml-20060816/).</span></span>  
  
-   <span data-ttu-id="93ef0-190">會自動展開所有實體。</span><span class="sxs-lookup"><span data-stu-id="93ef0-190">All entities are automatically expanded.</span></span>  
  
-   <span data-ttu-id="93ef0-191">即使在讀取器不會驗證時，會固定加入文件類型定義中宣告的預設屬性。</span><span class="sxs-lookup"><span data-stu-id="93ef0-191">Default attributes declared in the document type definition are always added even when the reader does not validate.</span></span>  
  
-   <span data-ttu-id="93ef0-192">允許宣告對應至正確的 XML 命名空間 URI 的 XML 前置詞。</span><span class="sxs-lookup"><span data-stu-id="93ef0-192">Declaration of XML prefix mapped to the correct XML namespace URI is allowed.</span></span>  
  
-   <span data-ttu-id="93ef0-193">在單一標記法名稱`NotationType`屬性宣告並`NmTokens`在單一`Enumeration`屬性宣告就會不同。</span><span class="sxs-lookup"><span data-stu-id="93ef0-193">The notation names in a single `NotationType` attribute declaration and `NmTokens` in a single `Enumeration` attribute declaration are distinct.</span></span>  
  
 <span data-ttu-id="93ef0-194">您可以使用<xref:System.Xml.XmlReaderSettings.ConformanceLevel%2A>屬性，以檢查並確保讀取資料流符合格式正確的 XML 1.0 文件或文件片段的規則。</span><span class="sxs-lookup"><span data-stu-id="93ef0-194">You can use the <xref:System.Xml.XmlReaderSettings.ConformanceLevel%2A> property to check and guarantee that the stream being read complies with the rules for a well-formed XML 1.0 document or document fragment.</span></span> <span data-ttu-id="93ef0-195">如果資料不符合，<xref:System.Xml.XmlException>擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="93ef0-195">If the data doesn't comply, an <xref:System.Xml.XmlException> exception is thrown.</span></span> <span data-ttu-id="93ef0-196">預設值是<xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType>（文件層級的一致性）。</span><span class="sxs-lookup"><span data-stu-id="93ef0-196">The default is <xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType> (document-level conformance).</span></span>  
  
 <span data-ttu-id="93ef0-197">三個一致性層級如下：</span><span class="sxs-lookup"><span data-stu-id="93ef0-197">The three conformance levels are:</span></span>  
  
|<span data-ttu-id="93ef0-198">設定</span><span class="sxs-lookup"><span data-stu-id="93ef0-198">Setting</span></span>|<span data-ttu-id="93ef0-199">描述</span><span class="sxs-lookup"><span data-stu-id="93ef0-199">Description</span></span>|  
|-------------|-----------------|  
|<xref:System.Xml.ConformanceLevel.Document>|<span data-ttu-id="93ef0-200">可確保 XML 資料符合格式正確的 XML 1.0 文件的規則。</span><span class="sxs-lookup"><span data-stu-id="93ef0-200">Ensures that the XML data conforms to the rules for a well-formed XML 1.0 document.</span></span> <span data-ttu-id="93ef0-201">此檢查層級可確保任何處理器都可使用資料流讀入以作為[語式正確的 XML 1.0 文件](https://www.w3.org/TR/2006/REC-xml-20060816/#sec-well-formed)。</span><span class="sxs-lookup"><span data-stu-id="93ef0-201">This level of checking ensures that any processor can consume the stream being read as an [well-formed XML 1.0 document](https://www.w3.org/TR/2006/REC-xml-20060816/#sec-well-formed).</span></span><br /><br /> <span data-ttu-id="93ef0-202">讀取器會檢查下列項目：</span><span class="sxs-lookup"><span data-stu-id="93ef0-202">The reader checks for the following:</span></span><br /><br /> <span data-ttu-id="93ef0-203">-最上層項目不能有 XML 宣告、 文件類型定義 (DTD)、 項目、 註解、 泛空白字元或處理指示以外的任何節點。</span><span class="sxs-lookup"><span data-stu-id="93ef0-203">-   The top-level item must not have any nodes other than XML Declaration, document type definition (DTD), element, comment, white space, or processing instruction.</span></span><br /><span data-ttu-id="93ef0-204">-XML 資料必須有一個最上層的項目節點。</span><span class="sxs-lookup"><span data-stu-id="93ef0-204">-   The XML data must have exactly one top-level element node.</span></span>|  
|<xref:System.Xml.ConformanceLevel.Fragment>|<span data-ttu-id="93ef0-205">可確保 XML 資料符合格式正確的 XML 1.0 文件片段的規則。</span><span class="sxs-lookup"><span data-stu-id="93ef0-205">Ensures that the XML data conforms to the rules for a well-formed XML 1.0 document fragment.</span></span><br /><br /> <span data-ttu-id="93ef0-206">此設定接受在最上層具有多個根項目或文字節點的 XML 資料。</span><span class="sxs-lookup"><span data-stu-id="93ef0-206">This setting accepts XML data with multiple root elements, or text nodes at the top-level.</span></span> <span data-ttu-id="93ef0-207">此檢查層級可確保任何處理器都可使用資料流讀入以作為[外部剖析實體](https://www.w3.org/TR/2006/REC-xml-20060816/#wf-entities)。</span><span class="sxs-lookup"><span data-stu-id="93ef0-207">This level of checking ensures that any processor can consume the stream being read as an [external parsed entity](https://www.w3.org/TR/2006/REC-xml-20060816/#wf-entities).</span></span>|  
|<xref:System.Xml.ConformanceLevel.Auto>|<span data-ttu-id="93ef0-208">指定讀取器應該決定根據內送資料的一致性檢查的層級。</span><span class="sxs-lookup"><span data-stu-id="93ef0-208">Specifies that the reader should determine the level of conformance checking based on the incoming data.</span></span><br /><br /> <span data-ttu-id="93ef0-209">如果 XML 資料包含 DTD 資訊，則會套用文件一致性檢查。</span><span class="sxs-lookup"><span data-stu-id="93ef0-209">Document conformance checking is applied if the XML data contains DTD information.</span></span><br /><br /> <span data-ttu-id="93ef0-210">如果 XML 資料包含下列其中一項，則會套用片段一致性檢查：</span><span class="sxs-lookup"><span data-stu-id="93ef0-210">Fragment conformance checking is applied if the XML data contains one of following:</span></span><br /><br /> <span data-ttu-id="93ef0-211">文字、 CDATA 或實體參考節點的根層級。</span><span class="sxs-lookup"><span data-stu-id="93ef0-211">-   Text, CDATA, or entity reference node at the root level.</span></span><br /><span data-ttu-id="93ef0-212">-多個項目根層級。</span><span class="sxs-lookup"><span data-stu-id="93ef0-212">-   More than one element at the root level.</span></span><br /><span data-ttu-id="93ef0-213">-沒有根層級的項目。</span><span class="sxs-lookup"><span data-stu-id="93ef0-213">-   No element at the root level.</span></span><br /><br /> <span data-ttu-id="93ef0-214">如果存在衝突 (如根層級存在文字節點及 DTD)，則會擲回 <xref:System.Xml.XmlException>。</span><span class="sxs-lookup"><span data-stu-id="93ef0-214">An <xref:System.Xml.XmlException> is thrown if there is a conflict, such as when there is a text node and a DTD at the root level.</span></span><br /><br /> <span data-ttu-id="93ef0-215">當使用 <xref:System.Xml.XmlReader.Create%2A> 方法向現有 <xref:System.Xml.XmlReader> 加入其他功能時，此設定可以用於包裝案例。</span><span class="sxs-lookup"><span data-stu-id="93ef0-215">This setting can be used in wrapping scenarios when the <xref:System.Xml.XmlReader.Create%2A> method is used to add additional features to an existing <xref:System.Xml.XmlReader>.</span></span> <span data-ttu-id="93ef0-216">在此情況下，<xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType>不會加入任何新的一致性檢查。</span><span class="sxs-lookup"><span data-stu-id="93ef0-216">In this case, <xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType> does not add any new conformance checking.</span></span> <span data-ttu-id="93ef0-217">一致性檢查會留給被包裝的 <xref:System.Xml.XmlReader>。</span><span class="sxs-lookup"><span data-stu-id="93ef0-217">Conformance checking is left to the <xref:System.Xml.XmlReader> that is being wrapped.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="93ef0-218">存在 DTD 時，XML 1.0 版建議事項會要求文件層級的一致性。</span><span class="sxs-lookup"><span data-stu-id="93ef0-218">The XML 1.0 recommendation requires document-level conformance when a DTD is present.</span></span> <span data-ttu-id="93ef0-219">因此，如果讀取器設定為支援<xref:System.Xml.ConformanceLevel.Fragment?displayProperty=nameWithType>，但 XML 資料包含文件類型定義 (DTD)，<xref:System.Xml.XmlException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="93ef0-219">Therefore, if the reader is configured to support <xref:System.Xml.ConformanceLevel.Fragment?displayProperty=nameWithType>, but the XML data contains a document type definition (DTD), an <xref:System.Xml.XmlException> is thrown.</span></span>  
  
 <span data-ttu-id="93ef0-220">以下是 讀取器會根據設定的特定一致性違規的處理<xref:System.Xml.XmlReaderSettings.ConformanceLevel%2A>屬性：</span><span class="sxs-lookup"><span data-stu-id="93ef0-220">Here's how the reader handles specific conformance violations depending on the setting of the <xref:System.Xml.XmlReaderSettings.ConformanceLevel%2A> property:</span></span>  
  
|<span data-ttu-id="93ef0-221">條件</span><span class="sxs-lookup"><span data-stu-id="93ef0-221">Condition</span></span>|<xref:System.Xml.ConformanceLevel.Document>|<xref:System.Xml.ConformanceLevel.Fragment>|<xref:System.Xml.ConformanceLevel.Auto>|  
|---------------|---------------------------------------------------------------------------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------|  
|<span data-ttu-id="93ef0-222">文字或具類型的值會出現在最上層。</span><span class="sxs-lookup"><span data-stu-id="93ef0-222">Text or a typed value appears at the top level.</span></span>|<span data-ttu-id="93ef0-223"><xref:System.Xml.XmlException> 會擲回。</span><span class="sxs-lookup"><span data-stu-id="93ef0-223"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="93ef0-224">不會視為違規情形，這項設定。</span><span class="sxs-lookup"><span data-stu-id="93ef0-224">Not considered a violation for this setting.</span></span>|<span data-ttu-id="93ef0-225">不會視為違規情形，這項設定。</span><span class="sxs-lookup"><span data-stu-id="93ef0-225">Not considered a violation for this setting.</span></span>|  
|<span data-ttu-id="93ef0-226">多個項目或沒有項目會出現在最上層。</span><span class="sxs-lookup"><span data-stu-id="93ef0-226">Multiple elements or no element appear at the top level.</span></span>|<span data-ttu-id="93ef0-227"><xref:System.Xml.XmlException> 會擲回。</span><span class="sxs-lookup"><span data-stu-id="93ef0-227"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="93ef0-228">不會視為違規情形，這項設定。</span><span class="sxs-lookup"><span data-stu-id="93ef0-228">Not considered a violation for this setting.</span></span>|<span data-ttu-id="93ef0-229">不會視為違規情形，這項設定。</span><span class="sxs-lookup"><span data-stu-id="93ef0-229">Not considered a violation for this setting.</span></span>|  
|<span data-ttu-id="93ef0-230">最上層項目是泛空白字元。</span><span class="sxs-lookup"><span data-stu-id="93ef0-230">Top-level item is white space.</span></span>|<span data-ttu-id="93ef0-231">不會視為違規情形，這項設定。</span><span class="sxs-lookup"><span data-stu-id="93ef0-231">Not considered a violation for this setting.</span></span>|<span data-ttu-id="93ef0-232">不會視為違規情形，這項設定。</span><span class="sxs-lookup"><span data-stu-id="93ef0-232">Not considered a violation for this setting.</span></span>|<span data-ttu-id="93ef0-233">不會視為違規情形，這項設定。</span><span class="sxs-lookup"><span data-stu-id="93ef0-233">Not considered a violation for this setting.</span></span>|  
|<span data-ttu-id="93ef0-234">最上層項目是 （辨識為文字節點） 的屬性。</span><span class="sxs-lookup"><span data-stu-id="93ef0-234">Top-level item is an attribute (recognized as a text node).</span></span>|<span data-ttu-id="93ef0-235"><xref:System.Xml.XmlException> 會擲回。</span><span class="sxs-lookup"><span data-stu-id="93ef0-235"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="93ef0-236">不會視為違規情形，這項設定。</span><span class="sxs-lookup"><span data-stu-id="93ef0-236">Not considered a violation for this setting.</span></span>|<span data-ttu-id="93ef0-237">不會視為違規情形，這項設定。</span><span class="sxs-lookup"><span data-stu-id="93ef0-237">Not considered a violation for this setting.</span></span>|  
|<span data-ttu-id="93ef0-238">找到多個連續的文字節點。</span><span class="sxs-lookup"><span data-stu-id="93ef0-238">Multiple, contiguous text nodes are found.</span></span>|<span data-ttu-id="93ef0-239">不會視為違規情形，這項設定。</span><span class="sxs-lookup"><span data-stu-id="93ef0-239">Not considered a violation for this setting.</span></span>|<span data-ttu-id="93ef0-240">不會視為違規情形，這項設定。</span><span class="sxs-lookup"><span data-stu-id="93ef0-240">Not considered a violation for this setting.</span></span>|<span data-ttu-id="93ef0-241">不會視為違規情形，這項設定。</span><span class="sxs-lookup"><span data-stu-id="93ef0-241">Not considered a violation for this setting.</span></span>|  
|<span data-ttu-id="93ef0-242">兩次中的相同的區域範圍宣告相同的命名空間前置詞。</span><span class="sxs-lookup"><span data-stu-id="93ef0-242">The same namespace prefix is declared twice in the same local scope.</span></span>|<span data-ttu-id="93ef0-243"><xref:System.Xml.XmlException> 會擲回。</span><span class="sxs-lookup"><span data-stu-id="93ef0-243"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="93ef0-244"><xref:System.Xml.XmlException> 會擲回。</span><span class="sxs-lookup"><span data-stu-id="93ef0-244"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="93ef0-245"><xref:System.Xml.XmlException> 會擲回。</span><span class="sxs-lookup"><span data-stu-id="93ef0-245"><xref:System.Xml.XmlException> is thrown.</span></span>|  
|<span data-ttu-id="93ef0-246">中的項目或屬性的命名空間不存在的區域範圍中。</span><span class="sxs-lookup"><span data-stu-id="93ef0-246">The namespace in an element or attribute doesn't exist in the local scope.</span></span>|<span data-ttu-id="93ef0-247"><xref:System.Xml.XmlException> 會擲回。</span><span class="sxs-lookup"><span data-stu-id="93ef0-247"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="93ef0-248"><xref:System.Xml.XmlException> 會擲回。</span><span class="sxs-lookup"><span data-stu-id="93ef0-248"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="93ef0-249"><xref:System.Xml.XmlException> 會擲回。</span><span class="sxs-lookup"><span data-stu-id="93ef0-249"><xref:System.Xml.XmlException> is thrown.</span></span>|  
|<span data-ttu-id="93ef0-250">資料中包含的命名空間的前置詞不相符。</span><span class="sxs-lookup"><span data-stu-id="93ef0-250">Data contains a prefix-namespace mismatch.</span></span>|<span data-ttu-id="93ef0-251"><xref:System.Xml.XmlException> 會擲回。</span><span class="sxs-lookup"><span data-stu-id="93ef0-251"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="93ef0-252"><xref:System.Xml.XmlException> 會擲回。</span><span class="sxs-lookup"><span data-stu-id="93ef0-252"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="93ef0-253"><xref:System.Xml.XmlException> 會擲回。</span><span class="sxs-lookup"><span data-stu-id="93ef0-253"><xref:System.Xml.XmlException> is thrown.</span></span>|  
|<span data-ttu-id="93ef0-254">`xml:space` 屬性包含無效的值。</span><span class="sxs-lookup"><span data-stu-id="93ef0-254">`xml:space` attribute contains an invalid value.</span></span>|<span data-ttu-id="93ef0-255"><xref:System.Xml.XmlException> 會擲回。</span><span class="sxs-lookup"><span data-stu-id="93ef0-255"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="93ef0-256"><xref:System.Xml.XmlException> 會擲回。</span><span class="sxs-lookup"><span data-stu-id="93ef0-256"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="93ef0-257"><xref:System.Xml.XmlException> 會擲回。</span><span class="sxs-lookup"><span data-stu-id="93ef0-257"><xref:System.Xml.XmlException> is thrown.</span></span>|  
|<span data-ttu-id="93ef0-258">發現無效的名稱。</span><span class="sxs-lookup"><span data-stu-id="93ef0-258">An invalid name is encountered.</span></span>|<span data-ttu-id="93ef0-259"><xref:System.Xml.XmlException> 會擲回。</span><span class="sxs-lookup"><span data-stu-id="93ef0-259"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="93ef0-260"><xref:System.Xml.XmlException> 會擲回。</span><span class="sxs-lookup"><span data-stu-id="93ef0-260"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="93ef0-261"><xref:System.Xml.XmlException> 會擲回。</span><span class="sxs-lookup"><span data-stu-id="93ef0-261"><xref:System.Xml.XmlException> is thrown.</span></span>|  
|<span data-ttu-id="93ef0-262">`xml`前置詞未對應到http://www.w3.org/XML/1998/namespaceURI。</span><span class="sxs-lookup"><span data-stu-id="93ef0-262">The `xml` prefix isn't matched to the http://www.w3.org/XML/1998/namespace URI.</span></span>|<span data-ttu-id="93ef0-263"><xref:System.Xml.XmlException> 會擲回。</span><span class="sxs-lookup"><span data-stu-id="93ef0-263"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="93ef0-264"><xref:System.Xml.XmlException> 會擲回。</span><span class="sxs-lookup"><span data-stu-id="93ef0-264"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="93ef0-265"><xref:System.Xml.XmlException> 會擲回。</span><span class="sxs-lookup"><span data-stu-id="93ef0-265"><xref:System.Xml.XmlException> is thrown.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="93ef0-266">下列範例會建立<xref:System.Xml.XmlReader>讀取 XML 片段的物件。</span><span class="sxs-lookup"><span data-stu-id="93ef0-266">The following example creates an <xref:System.Xml.XmlReader> object that reads an XML fragment.</span></span>  
  
 [!code-csharp[XmlReader.Create#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.Create/CS/XmlReader_Create.cs#1)]
 [!code-vb[XmlReader.Create#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.Create/VB/XmlReader_Create.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="DtdProcessing">
      <MemberSignature Language="C#" Value="public System.Xml.DtdProcessing DtdProcessing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.DtdProcessing DtdProcessing" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.DtdProcessing" />
      <MemberSignature Language="VB.NET" Value="Public Property DtdProcessing As DtdProcessing" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::DtdProcessing DtdProcessing { System::Xml::DtdProcessing get(); void set(System::Xml::DtdProcessing value); };" />
      <MemberSignature Language="F#" Value="member this.DtdProcessing : System.Xml.DtdProcessing with get, set" Usage="System.Xml.XmlReaderSettings.DtdProcessing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.DtdProcessing</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="93ef0-267">取得或設定決定 DTD 處理的值。</span><span class="sxs-lookup"><span data-stu-id="93ef0-267">Gets or sets a value that determines the processing of DTDs.</span></span></summary>
        <value><span data-ttu-id="93ef0-268">其中一個列舉值，決定 DTD 處理方式。</span><span class="sxs-lookup"><span data-stu-id="93ef0-268">One of the enumeration values that determines the processing of DTDs.</span></span> <span data-ttu-id="93ef0-269">預設為 <see cref="F:System.Xml.DtdProcessing.Prohibit" />。</span><span class="sxs-lookup"><span data-stu-id="93ef0-269">The default is <see cref="F:System.Xml.DtdProcessing.Prohibit" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93ef0-270">文件類型定義 (DTD) 驗證以 W3C 所定義的有效性條件約束來實作[可延伸標記語言 (XML) 1.0 （第四版） 建議](https://www.w3.org/TR/2006/REC-xml-20060816/)。</span><span class="sxs-lookup"><span data-stu-id="93ef0-270">Document type definition (DTD) validation is implemented by using the validity constraints defined in the W3C [Extensible Markup Language (XML) 1.0 (fourth edition) recommendation](https://www.w3.org/TR/2006/REC-xml-20060816/).</span></span> <span data-ttu-id="93ef0-271">Dtd 使用正式文法描述的結構和語法相容的 XML 文件;在指定的內容和 XML 文件所允許的值。</span><span class="sxs-lookup"><span data-stu-id="93ef0-271">DTDs use a formal grammar to describe the structure and syntax of compliant XML documents; they specify the content and values allowed for the XML document.</span></span>  
  
 <span data-ttu-id="93ef0-272">這個屬性可以具有下列其中一個值：</span><span class="sxs-lookup"><span data-stu-id="93ef0-272">This property can have one of the following values:</span></span>  
  
-   <span data-ttu-id="93ef0-273"><xref:System.Xml.DtdProcessing.Parse?displayProperty=nameWithType> 若要啟用 DTD 處理。</span><span class="sxs-lookup"><span data-stu-id="93ef0-273"><xref:System.Xml.DtdProcessing.Parse?displayProperty=nameWithType> to enable DTD processing.</span></span>  
  
-   <span data-ttu-id="93ef0-274"><xref:System.Xml.DtdProcessing.Prohibit?displayProperty=nameWithType> 擲回<xref:System.Xml.XmlException>在遇到 DTD 時的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="93ef0-274"><xref:System.Xml.DtdProcessing.Prohibit?displayProperty=nameWithType> to throw an <xref:System.Xml.XmlException> exception when a DTD is encountered.</span></span>  
  
-   <span data-ttu-id="93ef0-275"><xref:System.Xml.DtdProcessing.Ignore?displayProperty=nameWithType> 若要停用 DTD 處理，但不警告或例外狀況。</span><span class="sxs-lookup"><span data-stu-id="93ef0-275"><xref:System.Xml.DtdProcessing.Ignore?displayProperty=nameWithType> to disable DTD processing without warnings or exceptions.</span></span>  
  
 <span data-ttu-id="93ef0-276">若要執行 DTD 驗證，<xref:System.Xml.XmlReader> 會使用在 XML 文件之 DOCTYPE 宣告中所定義的 DTD。</span><span class="sxs-lookup"><span data-stu-id="93ef0-276">To perform validation against a DTD, the <xref:System.Xml.XmlReader> uses the DTD defined in the DOCTYPE declaration of an XML document.</span></span> <span data-ttu-id="93ef0-277">DOCTYPE 宣告可以指向內嵌 DTD，也可以是外部 DTD 檔案的參考。</span><span class="sxs-lookup"><span data-stu-id="93ef0-277">The DOCTYPE declaration can either point to an inline DTD or can be a reference to an external DTD file.</span></span> <span data-ttu-id="93ef0-278">若要驗證對 DTD 進行驗證的 XML 檔案：</span><span class="sxs-lookup"><span data-stu-id="93ef0-278">To validate an XML file against a DTD:</span></span>  
  
-   <span data-ttu-id="93ef0-279">將 <xref:System.Xml.XmlReaderSettings.DtdProcessing%2A?displayProperty=nameWithType> 屬性設定為 `DtdProcessing.Parse.`</span><span class="sxs-lookup"><span data-stu-id="93ef0-279">Set the <xref:System.Xml.XmlReaderSettings.DtdProcessing%2A?displayProperty=nameWithType> property to `DtdProcessing.Parse.`</span></span>  
  
-   <span data-ttu-id="93ef0-280">將 <xref:System.Xml.XmlReaderSettings.ValidationType%2A?displayProperty=nameWithType> 屬性設定為 `ValidationType.DTD`。</span><span class="sxs-lookup"><span data-stu-id="93ef0-280">Set the <xref:System.Xml.XmlReaderSettings.ValidationType%2A?displayProperty=nameWithType> property to `ValidationType.DTD`.</span></span>  
  
-   <span data-ttu-id="93ef0-281">如果 DTD 是儲存在需要驗證之網路資源上的外部檔案，請將具有必要認證的 <xref:System.Xml.XmlResolver> 物件傳遞至 <xref:System.Xml.XmlReader.Create%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="93ef0-281">If the DTD is an external file stored on a network resource that requires authentication, pass an <xref:System.Xml.XmlResolver> object with the necessary credentials to the <xref:System.Xml.XmlReader.Create%2A> method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="93ef0-282">如果<xref:System.Xml.XmlReaderSettings.DtdProcessing%2A>屬性設定為<xref:System.Xml.DtdProcessing.Ignore?displayProperty=nameWithType>，則<xref:System.Xml.XmlReader>將不會報告 Dtd。</span><span class="sxs-lookup"><span data-stu-id="93ef0-282">If the <xref:System.Xml.XmlReaderSettings.DtdProcessing%2A> property is set to <xref:System.Xml.DtdProcessing.Ignore?displayProperty=nameWithType>, the <xref:System.Xml.XmlReader> will not report the DTDs.</span></span> <span data-ttu-id="93ef0-283">這表示在輸出上，將會遺失 DTD/DOCTYPE。</span><span class="sxs-lookup"><span data-stu-id="93ef0-283">This means that the DTD/DOCTYPE will be lost on output.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93ef0-284">下列範例使用 DTD 檔案驗證 XML 檔案。</span><span class="sxs-lookup"><span data-stu-id="93ef0-284">The following example validates an XML file using a DTD file.</span></span>  
  
 [!code-cpp[XmlReaderSettings.DtdValidate#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlReaderSettings.DtdValidate/CPP/XmlReaderSettings.DtdValidate.cpp#1)]
 [!code-csharp[XmlReaderSettings.DtdValidate#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderSettings.DtdValidate/CS/validdtd.cs#1)]
 [!code-vb[XmlReaderSettings.DtdValidate#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderSettings.DtdValidate/VB/validdtd.vb#1)]  
  
## <a name="input"></a><span data-ttu-id="93ef0-285">輸入</span><span class="sxs-lookup"><span data-stu-id="93ef0-285">Input</span></span>  
 <span data-ttu-id="93ef0-286">該範例使用 `itemDTD.xml` 檔案做為輸入。</span><span class="sxs-lookup"><span data-stu-id="93ef0-286">The example uses the `itemDTD.xml` file as input.</span></span>  
  
 [!code-xml[XmlReaderSettings.DtdValidate#2](~/samples/snippets/xml/VS_Snippets_Data/XmlReaderSettings.DtdValidate/XML/itemDTD.xml#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreComments">
      <MemberSignature Language="C#" Value="public bool IgnoreComments { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreComments" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.IgnoreComments" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreComments As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreComments { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreComments : bool with get, set" Usage="System.Xml.XmlReaderSettings.IgnoreComments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="93ef0-287">取得或設定值，指出是否忽略註解。</span><span class="sxs-lookup"><span data-stu-id="93ef0-287">Gets or sets a value indicating whether to ignore comments.</span></span></summary>
        <value><span data-ttu-id="93ef0-288"><see langword="true" /> 表示忽略註解，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="93ef0-288"><see langword="true" /> to ignore comments; otherwise <see langword="false" />.</span></span> <span data-ttu-id="93ef0-289">預設為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="93ef0-289">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93ef0-290">將此屬性設定為`true`可能會導致從讀取器傳回的多個連續的文字節點。</span><span class="sxs-lookup"><span data-stu-id="93ef0-290">Setting this property to `true` can result in multiple contiguous text nodes being returned from the reader.</span></span> <span data-ttu-id="93ef0-291">這不會影響驗證。</span><span class="sxs-lookup"><span data-stu-id="93ef0-291">This does not affect validation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93ef0-292">以下會建立可用來建構的讀取器處理指示、 註解，並不顯著泛空白字元會去除設定物件。</span><span class="sxs-lookup"><span data-stu-id="93ef0-292">The following creates a settings object that can be used to construct a reader that strips processing instructions, comments, and insignificant white space.</span></span>  
  
 [!code-cpp[XmlReaderSettings.cctor#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlReaderSettings.cctor/CPP/XmlReaderSettings.cctor.cpp#1)]
 [!code-csharp[XmlReaderSettings.cctor#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderSettings.cctor/CS/factory_rdr_cctor2.cs#1)]
 [!code-vb[XmlReaderSettings.cctor#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderSettings.cctor/VB/factory_rdr_cctor2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IgnoreProcessingInstructions">
      <MemberSignature Language="C#" Value="public bool IgnoreProcessingInstructions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreProcessingInstructions" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.IgnoreProcessingInstructions" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreProcessingInstructions As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreProcessingInstructions { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreProcessingInstructions : bool with get, set" Usage="System.Xml.XmlReaderSettings.IgnoreProcessingInstructions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="93ef0-293">取得或設定值，指出是否忽略處理指示。</span><span class="sxs-lookup"><span data-stu-id="93ef0-293">Gets or sets a value indicating whether to ignore processing instructions.</span></span></summary>
        <value><span data-ttu-id="93ef0-294"><see langword="true" /> 表示忽略處理指示，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="93ef0-294"><see langword="true" /> to ignore processing instructions; otherwise <see langword="false" />.</span></span> <span data-ttu-id="93ef0-295">預設為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="93ef0-295">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93ef0-296">將此屬性設定為`true`可能會導致從讀取器傳回的多個連續的文字節點。</span><span class="sxs-lookup"><span data-stu-id="93ef0-296">Setting this property to `true` can result in multiple contiguous text nodes being returned from the reader.</span></span> <span data-ttu-id="93ef0-297">這不會影響驗證。</span><span class="sxs-lookup"><span data-stu-id="93ef0-297">This does not affect validation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93ef0-298">以下會建立可用來建構的讀取器處理指示、 註解，並不顯著泛空白字元會去除設定物件。</span><span class="sxs-lookup"><span data-stu-id="93ef0-298">The following creates a settings object that can be used to construct a reader that strips processing instructions, comments, and insignificant white space.</span></span>  
  
 [!code-cpp[XmlReaderSettings.cctor#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlReaderSettings.cctor/CPP/XmlReaderSettings.cctor.cpp#1)]
 [!code-csharp[XmlReaderSettings.cctor#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderSettings.cctor/CS/factory_rdr_cctor2.cs#1)]
 [!code-vb[XmlReaderSettings.cctor#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderSettings.cctor/VB/factory_rdr_cctor2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IgnoreWhitespace">
      <MemberSignature Language="C#" Value="public bool IgnoreWhitespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreWhitespace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.IgnoreWhitespace" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreWhitespace As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreWhitespace { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreWhitespace : bool with get, set" Usage="System.Xml.XmlReaderSettings.IgnoreWhitespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="93ef0-299">取得或設定值，指出是否忽略不重要的空白字元。</span><span class="sxs-lookup"><span data-stu-id="93ef0-299">Gets or sets a value indicating whether to ignore insignificant white space.</span></span></summary>
        <value><span data-ttu-id="93ef0-300"><see langword="true" /> 表示忽略泛空白字元，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="93ef0-300"><see langword="true" /> to ignore white space; otherwise <see langword="false" />.</span></span> <span data-ttu-id="93ef0-301">預設為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="93ef0-301">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93ef0-302">不是重大的泛空白字元包含空格、 tab 鍵和空白的行用來設定分開的更高的可讀性的標記。</span><span class="sxs-lookup"><span data-stu-id="93ef0-302">White space that is not considered to be significant includes spaces, tabs, and blank lines used to set apart the markup for greater readability.</span></span> <span data-ttu-id="93ef0-303">這個範例是項目內容中的泛空白字元。</span><span class="sxs-lookup"><span data-stu-id="93ef0-303">An example of this is white space in element content.</span></span>  
  
 <span data-ttu-id="93ef0-304">此屬性設定不會影響在混合內容模式中或發生的範圍內的泛空白字元中標記間的泛空白字元`xml:space='preserve'`屬性。</span><span class="sxs-lookup"><span data-stu-id="93ef0-304">This property setting does not affect white space between markup in a mixed content mode, or white space that occurs within the scope of an `xml:space='preserve'` attribute.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93ef0-305">以下會建立可用來建構的讀取器處理指示、 註解，並不顯著泛空白字元會去除設定物件。</span><span class="sxs-lookup"><span data-stu-id="93ef0-305">The following creates a settings object that can be used to construct a reader that strips processing instructions, comments, and insignificant white space.</span></span>  
  
 [!code-cpp[XmlReaderSettings.cctor#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlReaderSettings.cctor/CPP/XmlReaderSettings.cctor.cpp#1)]
 [!code-csharp[XmlReaderSettings.cctor#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderSettings.cctor/CS/factory_rdr_cctor2.cs#1)]
 [!code-vb[XmlReaderSettings.cctor#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderSettings.cctor/VB/factory_rdr_cctor2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="LineNumberOffset">
      <MemberSignature Language="C#" Value="public int LineNumberOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LineNumberOffset" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.LineNumberOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property LineNumberOffset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LineNumberOffset { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.LineNumberOffset : int with get, set" Usage="System.Xml.XmlReaderSettings.LineNumberOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="93ef0-306">取得或設定 <see cref="T:System.Xml.XmlReader" /> 物件的行號位移。</span><span class="sxs-lookup"><span data-stu-id="93ef0-306">Gets or sets line number offset of the <see cref="T:System.Xml.XmlReader" /> object.</span></span></summary>
        <value><span data-ttu-id="93ef0-307">行號位移。</span><span class="sxs-lookup"><span data-stu-id="93ef0-307">The line number offset.</span></span> <span data-ttu-id="93ef0-308">預設值為 0。</span><span class="sxs-lookup"><span data-stu-id="93ef0-308">The default is 0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93ef0-309"><xref:System.Xml.XmlReaderSettings.LineNumberOffset%2A>設定會決定該點其中<xref:System.Xml.IXmlLineInfo.LineNumber%2A>屬性會開始計算。</span><span class="sxs-lookup"><span data-stu-id="93ef0-309">The <xref:System.Xml.XmlReaderSettings.LineNumberOffset%2A> setting determines the point where the <xref:System.Xml.IXmlLineInfo.LineNumber%2A> property starts counting.</span></span> <span data-ttu-id="93ef0-310">這非常有用，如果您的 XML 資料內嵌在較大的文件。</span><span class="sxs-lookup"><span data-stu-id="93ef0-310">This is useful if your XML data is embedded within a larger document.</span></span> <span data-ttu-id="93ef0-311">比方說，如果您的 XML 資料內嵌在較大的文件中，資料列 101 文件的開始，您可能想要指定讀取器開始 100 行。</span><span class="sxs-lookup"><span data-stu-id="93ef0-311">For example, if your XML data were embedded in a larger document, and your data started on line 101 of the document, you may want to specify that the reader start at line 100.</span></span> <span data-ttu-id="93ef0-312">因此，如果讀取器擲回的例外狀況，剖析 XML 的第一行時，它會報告為 101，行，而不是第 1 行的行號。</span><span class="sxs-lookup"><span data-stu-id="93ef0-312">Therefore, if the reader threw an exception while parsing the first line of the XML, it would report the line number as line 101, rather than line 1.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="LinePositionOffset">
      <MemberSignature Language="C#" Value="public int LinePositionOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LinePositionOffset" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.LinePositionOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property LinePositionOffset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LinePositionOffset { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.LinePositionOffset : int with get, set" Usage="System.Xml.XmlReaderSettings.LinePositionOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="93ef0-313">取得或設定 <see cref="T:System.Xml.XmlReader" /> 物件的行位置位移。</span><span class="sxs-lookup"><span data-stu-id="93ef0-313">Gets or sets line position offset of the <see cref="T:System.Xml.XmlReader" /> object.</span></span></summary>
        <value><span data-ttu-id="93ef0-314">行位置位移。</span><span class="sxs-lookup"><span data-stu-id="93ef0-314">The line position offset.</span></span> <span data-ttu-id="93ef0-315">預設值為 0。</span><span class="sxs-lookup"><span data-stu-id="93ef0-315">The default is 0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93ef0-316"><xref:System.Xml.XmlReaderSettings.LinePositionOffset%2A>設定會決定該點其中<xref:System.Xml.IXmlLineInfo.LinePosition%2A>屬性會開始計算。</span><span class="sxs-lookup"><span data-stu-id="93ef0-316">The <xref:System.Xml.XmlReaderSettings.LinePositionOffset%2A> setting determines the point where the <xref:System.Xml.IXmlLineInfo.LinePosition%2A> property starts counting.</span></span> <span data-ttu-id="93ef0-317">如果您的 XML 資料內嵌在較大的文件，而且沒有任何新行開頭的 xml，這非常有用。</span><span class="sxs-lookup"><span data-stu-id="93ef0-317">This is useful if your XML data is embedded within a larger document and there is no new line at the beginning of the XML.</span></span> <span data-ttu-id="93ef0-318">在此情況下，如果讀取器擲回的例外狀況，剖析 XML 時，您要它傳回相對於主要文件，不只是相對的 XML 片段的行位置。</span><span class="sxs-lookup"><span data-stu-id="93ef0-318">In this case, if the reader throws an exception while parsing the XML, you want it to return the line position relative to the main document, not just relative to the XML fragment.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="MaxCharactersFromEntities">
      <MemberSignature Language="C#" Value="public long MaxCharactersFromEntities { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxCharactersFromEntities" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.MaxCharactersFromEntities" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxCharactersFromEntities As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaxCharactersFromEntities { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.MaxCharactersFromEntities : int64 with get, set" Usage="System.Xml.XmlReaderSettings.MaxCharactersFromEntities" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="93ef0-319">取得或設定值，指出文件中產生自展開實體的最大可允許字元數。</span><span class="sxs-lookup"><span data-stu-id="93ef0-319">Gets or sets a value indicating the maximum allowable number of characters in a document that result from expanding entities.</span></span></summary>
        <value><span data-ttu-id="93ef0-320">來自展開實體的最大可允許字元數。</span><span class="sxs-lookup"><span data-stu-id="93ef0-320">The maximum allowable number of characters from expanded entities.</span></span> <span data-ttu-id="93ef0-321">預設值為 0。</span><span class="sxs-lookup"><span data-stu-id="93ef0-321">The default is 0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93ef0-322">零 (0) 的值表示產生自展開實體的字元數目沒有限制。</span><span class="sxs-lookup"><span data-stu-id="93ef0-322">A zero (0) value means no limits on the number of characters that result from expanding entities.</span></span> <span data-ttu-id="93ef0-323">為非零的值會指定最大可以產生自展開實體的字元數。</span><span class="sxs-lookup"><span data-stu-id="93ef0-323">A non-zero value specifies the maximum number of characters that can result from expanding entities.</span></span>  
  
 <span data-ttu-id="93ef0-324">如果讀取器會嘗試讀取的文件，擴充的大小會超過這個屬性，包含實體<xref:System.Xml.XmlException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="93ef0-324">If the reader attempts to read a document that contains entities such that the expanded size will exceed this property, an <xref:System.Xml.XmlException> will be thrown.</span></span>  
  
 <span data-ttu-id="93ef0-325">這個屬性可讓您降低阻絕服務攻擊，攻擊者送出嘗試超過記憶體限制透過展開實體的 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="93ef0-325">This property allows you to mitigate denial of service attacks where the attacker submits XML documents that attempt to exceed memory limits via expanding entities.</span></span> <span data-ttu-id="93ef0-326">藉由限制產生自展開實體的字元，您可以偵測到攻擊，並可靠地復原。</span><span class="sxs-lookup"><span data-stu-id="93ef0-326">By limiting the characters that result from expanded entities, you can detect the attack and recover reliably.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93ef0-327">下列程式碼會設定這個屬性，並然後再嘗試剖析的文件包含實體會展開成低於設定限制更大的大小。</span><span class="sxs-lookup"><span data-stu-id="93ef0-327">The following code sets this property, and then attempts to parse a document that contains an entity that expands to a size greater than the set limit.</span></span> <span data-ttu-id="93ef0-328">在真實世界案例中，您會設定此限制為尚未處理有效的文件，夠大的值夠小，無法限制從惡意文件的威脅。</span><span class="sxs-lookup"><span data-stu-id="93ef0-328">In a real world scenario, you would set this limit to a value large enough to handle valid documents, yet small enough to limit the threat from malicious documents.</span></span>  
  
```csharp  
string markup =  
@"<!DOCTYPE Root [  
  <!ENTITY anEntity ""Expands to more than 30 characters"">  
  <!ELEMENT Root (#PCDATA)>  
]>  
<Root>Content &anEntity;</Root>";  
  
XmlReaderSettings settings = new XmlReaderSettings();  
settings.DtdProcessing = DtdProcessing.Parse;  
settings.ValidationType = ValidationType.DTD;  
settings.MaxCharactersFromEntities = 30;  
  
try  
{  
    XmlReader reader = XmlReader.Create(new StringReader(markup), settings);  
    while (reader.Read()) { }  
}  
catch (XmlException ex)  
{  
    Console.WriteLine(ex.Message);  
}  
```  
  
```vb  
Dim markup As String = _  
    "<!DOCTYPE Root [" + Environment.NewLine + _  
    "  <!ENTITY anEntity ""Expands to more than 30 characters"">" + Environment.NewLine + _  
    "  <!ELEMENT Root (#PCDATA)>" + Environment.NewLine + _  
    "]>" + Environment.NewLine + _  
    "<Root>Content &anEntity;</Root>"  
  
Dim settings As XmlReaderSettings = New XmlReaderSettings()  
settings.DtdProcessing = DtdProcessing.Parse;  
settings.ValidationType = ValidationType.DTD  
settings.MaxCharactersFromEntities = 30  
  
Try  
    Dim reader As XmlReader = XmlReader.Create(New StringReader(markup), settings)  
    While (reader.Read())  
    End While  
Catch ex As XmlException  
    Console.WriteLine(ex.Message)  
End Try  
```  
  
 <span data-ttu-id="93ef0-329">這個範例會產生下列輸出：</span><span class="sxs-lookup"><span data-stu-id="93ef0-329">This example produces the following output:</span></span>  
  
```  
There is an error in XML document (MaxCharactersFromEntities, ).  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxCharactersInDocument">
      <MemberSignature Language="C#" Value="public long MaxCharactersInDocument { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxCharactersInDocument" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.MaxCharactersInDocument" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxCharactersInDocument As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaxCharactersInDocument { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.MaxCharactersInDocument : int64 with get, set" Usage="System.Xml.XmlReaderSettings.MaxCharactersInDocument" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="93ef0-330">取得或設定值，指出 XML 文件中最大可允許字元數。</span><span class="sxs-lookup"><span data-stu-id="93ef0-330">Gets or sets a value indicating the maximum allowable number of characters in an XML document.</span></span> <span data-ttu-id="93ef0-331">零 (0) 的值表示對 XML 文件大小沒有限制。</span><span class="sxs-lookup"><span data-stu-id="93ef0-331">A zero (0) value means no limits on the size of the XML document.</span></span> <span data-ttu-id="93ef0-332">非零值指定大小上限，以字元為單位。</span><span class="sxs-lookup"><span data-stu-id="93ef0-332">A non-zero value specifies the maximum size, in characters.</span></span></summary>
        <value><span data-ttu-id="93ef0-333">XML 文件的最大可允許字元數。</span><span class="sxs-lookup"><span data-stu-id="93ef0-333">The maximum allowable number of characters in an XML document.</span></span> <span data-ttu-id="93ef0-334">預設值為 0。</span><span class="sxs-lookup"><span data-stu-id="93ef0-334">The default is 0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93ef0-335">零 (0) 的值表示剖析的文件中的字元數目沒有限制。</span><span class="sxs-lookup"><span data-stu-id="93ef0-335">A zero (0) value means no limits on the number of characters in the parsed document.</span></span> <span data-ttu-id="93ef0-336">為非零的值指定可剖析的字元的數上限。</span><span class="sxs-lookup"><span data-stu-id="93ef0-336">A non-zero value specifies the maximum number of characters that can be parsed.</span></span>  
  
 <span data-ttu-id="93ef0-337">文件的最大字元計數包括產生自展開實體的字元計數。</span><span class="sxs-lookup"><span data-stu-id="93ef0-337">The maximum character count for the document includes the count of characters that result from expanded entities.</span></span>  
  
 <span data-ttu-id="93ef0-338">如果讀取器會嘗試讀取的文件的大小超過這個屬性，與<xref:System.Xml.XmlException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="93ef0-338">If the reader attempts to read a document with a size that exceeds this property, an <xref:System.Xml.XmlException> will be thrown.</span></span>  
  
 <span data-ttu-id="93ef0-339">這個屬性可讓您降低阻絕服務攻擊，攻擊者提交非常大的 XML 文件的位置。</span><span class="sxs-lookup"><span data-stu-id="93ef0-339">This property allows you to mitigate denial of service attacks where the attacker submits extremely large XML documents.</span></span> <span data-ttu-id="93ef0-340">藉由限制文件大小，您可以偵測到攻擊，並可靠地復原。</span><span class="sxs-lookup"><span data-stu-id="93ef0-340">By limiting the size of a document, you can detect the attack and recover reliably.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93ef0-341">下列程式碼會設定這個屬性，並然後再嘗試剖析文件大小超過限制。</span><span class="sxs-lookup"><span data-stu-id="93ef0-341">The following code sets this property, and then attempts to parse a document larger than the limit.</span></span> <span data-ttu-id="93ef0-342">在真實世界案例中，您會設定此限制為尚未處理有效的文件，夠大的值夠小，無法限制從惡意文件的威脅。</span><span class="sxs-lookup"><span data-stu-id="93ef0-342">In a real world scenario, you would set this limit to a value large enough to handle valid documents, yet small enough to limit the threat from malicious documents.</span></span>  
  
```csharp  
string markup = "<Root>Content</Root>";  
  
XmlReaderSettings settings = new XmlReaderSettings();  
settings.MaxCharactersInDocument = 10;  
  
try  
{  
    XmlReader reader = XmlReader.Create(new StringReader(markup), settings);  
    while (reader.Read()) { }  
}  
catch (XmlException ex)  
{  
    Console.WriteLine(ex.Message);  
}  
```  
  
```vb  
Dim markup As String = "<Root>Content</Root>"  
  
Dim settings As XmlReaderSettings = New XmlReaderSettings()  
settings.MaxCharactersInDocument = 10  
  
Try  
    Dim reader As XmlReader = XmlReader.Create(New StringReader(markup), settings)  
    While (reader.Read())  
    End While  
Catch ex As XmlException  
    Console.WriteLine(ex.Message)  
End Try  
```  
  
 <span data-ttu-id="93ef0-343">此程式碼會產生下列輸出：</span><span class="sxs-lookup"><span data-stu-id="93ef0-343">This code produces the following output:</span></span>  
  
```  
There is an error in XML document (MaxCharactersInDocument, ).  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NameTable">
      <MemberSignature Language="C#" Value="public System.Xml.XmlNameTable NameTable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNameTable NameTable" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.NameTable" />
      <MemberSignature Language="VB.NET" Value="Public Property NameTable As XmlNameTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlNameTable ^ NameTable { System::Xml::XmlNameTable ^ get(); void set(System::Xml::XmlNameTable ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NameTable : System.Xml.XmlNameTable with get, set" Usage="System.Xml.XmlReaderSettings.NameTable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNameTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="93ef0-344">取得或設定用來比較已擷取字串的 <see cref="T:System.Xml.XmlNameTable" />。</span><span class="sxs-lookup"><span data-stu-id="93ef0-344">Gets or sets the <see cref="T:System.Xml.XmlNameTable" /> used for atomized string comparisons.</span></span></summary>
        <value><span data-ttu-id="93ef0-345"><see cref="T:System.Xml.XmlNameTable" />，儲存使用這個 <see cref="T:System.Xml.XmlReader" /> 物件建立之所有 <see cref="T:System.Xml.XmlReaderSettings" /> 執行個體所使用的所有原子化字串。</span><span class="sxs-lookup"><span data-stu-id="93ef0-345">The <see cref="T:System.Xml.XmlNameTable" /> that stores all the atomized strings used by all <see cref="T:System.Xml.XmlReader" /> instances created using this <see cref="T:System.Xml.XmlReaderSettings" /> object.</span></span>  
  
<span data-ttu-id="93ef0-346">預設為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="93ef0-346">The default is <see langword="null" />.</span></span> <span data-ttu-id="93ef0-347">如果這個值為 <see langword="null" />，則建立的 <see cref="T:System.Xml.XmlReader" /> 執行個體會使用新的空 <see cref="T:System.Xml.NameTable" />。</span><span class="sxs-lookup"><span data-stu-id="93ef0-347">The created <see cref="T:System.Xml.XmlReader" /> instance will use a new empty <see cref="T:System.Xml.NameTable" /> if this value is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93ef0-348">將此屬性設定為<xref:System.Xml.XmlNameTable>執行個體，如果您想要共用在所有的通用名稱表建立<xref:System.Xml.XmlReader>執行個體。</span><span class="sxs-lookup"><span data-stu-id="93ef0-348">Set this property to an <xref:System.Xml.XmlNameTable> instance if you want to share a common name table among all the created <xref:System.Xml.XmlReader> instances.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="93ef0-349">
  <xref:System.Xml.NameTable> 類別不是安全執行緒。</span><span class="sxs-lookup"><span data-stu-id="93ef0-349">The <xref:System.Xml.NameTable> class is not thread-safe.</span></span> <span data-ttu-id="93ef0-350">因此它無法在之間共用<xref:System.Xml.XmlReader>在不同的執行緒中同時執行的物件。</span><span class="sxs-lookup"><span data-stu-id="93ef0-350">Therefore it cannot be shared between <xref:System.Xml.XmlReader> objects that run simultaneously in different threads.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProhibitDtd">
      <MemberSignature Language="C#" Value="public bool ProhibitDtd { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProhibitDtd" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.ProhibitDtd" />
      <MemberSignature Language="VB.NET" Value="Public Property ProhibitDtd As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProhibitDtd { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ProhibitDtd : bool with get, set" Usage="System.Xml.XmlReaderSettings.ProhibitDtd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.Obsolete("Use XmlReaderSettings.DtdProcessing property instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="93ef0-351">取得或設定值，表示是否禁止物件類型定義 (DTD) 處理。</span><span class="sxs-lookup"><span data-stu-id="93ef0-351">Gets or sets a value indicating whether to prohibit document type definition (DTD) processing.</span></span> <span data-ttu-id="93ef0-352">這個屬性已經過時。</span><span class="sxs-lookup"><span data-stu-id="93ef0-352">This property is obsolete.</span></span> <span data-ttu-id="93ef0-353">請改用 <see cref="P:System.Xml.XmlTextReader.DtdProcessing" />。</span><span class="sxs-lookup"><span data-stu-id="93ef0-353">Use <see cref="P:System.Xml.XmlTextReader.DtdProcessing" /> instead.</span></span></summary>
        <value><span data-ttu-id="93ef0-354"><see langword="true" /> 表示禁止 DTD 處理，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="93ef0-354"><see langword="true" /> to prohibit DTD processing; otherwise <see langword="false" />.</span></span> <span data-ttu-id="93ef0-355">預設為 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="93ef0-355">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93ef0-356">當設定為`true`，則<xref:System.Xml.XmlReader>就會擲回<xref:System.Xml.XmlException>時遇到任何 DTD 內容。</span><span class="sxs-lookup"><span data-stu-id="93ef0-356">When set to `true`, the <xref:System.Xml.XmlReader> throws an <xref:System.Xml.XmlException> when any DTD content is encountered.</span></span> <span data-ttu-id="93ef0-357">如果您顧慮阻絕服務問題或正在處理不受信任的來源，請勿啟用 DTD 處理。</span><span class="sxs-lookup"><span data-stu-id="93ef0-357">Do not enable DTD processing if you are concerned about Denial of Service issues or if you are dealing with untrusted sources.</span></span>  
  
 <span data-ttu-id="93ef0-358">如果已啟用 DTD 處理，則可使用 <xref:System.Xml.XmlSecureResolver> 限制 <xref:System.Xml.XmlReader> 可存取的資源。</span><span class="sxs-lookup"><span data-stu-id="93ef0-358">If you have DTD processing enabled, you can use the <xref:System.Xml.XmlSecureResolver> to restrict the resources that the <xref:System.Xml.XmlReader> can access.</span></span> <span data-ttu-id="93ef0-359">您還可以設計應用程式，讓 XML 處理具有記憶體和時間限制。</span><span class="sxs-lookup"><span data-stu-id="93ef0-359">You can also design your application so that the XML processing is memory and time constrained.</span></span> <span data-ttu-id="93ef0-360">例如，在 ASP.NET 應用程式中設定逾時限制。</span><span class="sxs-lookup"><span data-stu-id="93ef0-360">For example, configure time-out limits in your ASP.NET application.</span></span>  
  
 <span data-ttu-id="93ef0-361">這個屬性已經過時。</span><span class="sxs-lookup"><span data-stu-id="93ef0-361">This property is obsolete.</span></span> <span data-ttu-id="93ef0-362">請改用 <xref:System.Xml.XmlTextReader.DtdProcessing%2A>。</span><span class="sxs-lookup"><span data-stu-id="93ef0-362">Use <xref:System.Xml.XmlTextReader.DtdProcessing%2A> instead.</span></span> <span data-ttu-id="93ef0-363">如果您已設定<xref:System.Xml.XmlReaderSettings.ProhibitDtd%2A>為其預設值`true`設定<xref:System.Xml.XmlTextReader.DtdProcessing%2A>至`Prohibit`。</span><span class="sxs-lookup"><span data-stu-id="93ef0-363">If you had set <xref:System.Xml.XmlReaderSettings.ProhibitDtd%2A> to its default value `true` set <xref:System.Xml.XmlTextReader.DtdProcessing%2A> to `Prohibit`.</span></span> <span data-ttu-id="93ef0-364">如果您已設定<xref:System.Xml.XmlReaderSettings.ProhibitDtd%2A>要`false`設定<xref:System.Xml.XmlTextReader.DtdProcessing%2A>至`Parse`。</span><span class="sxs-lookup"><span data-stu-id="93ef0-364">If you had set <xref:System.Xml.XmlReaderSettings.ProhibitDtd%2A> to `false` set <xref:System.Xml.XmlTextReader.DtdProcessing%2A> to `Parse`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93ef0-365">下列範例會驗證使用 DTD 的資料。</span><span class="sxs-lookup"><span data-stu-id="93ef0-365">The following example validates data using a DTD.</span></span>  
  
 [!code-cpp[XmlReaderSettings.DtdValidate#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlReaderSettings.DtdValidate/CPP/XmlReaderSettings.DtdValidate.cpp#1)]
 [!code-csharp[XmlReaderSettings.DtdValidate#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderSettings.DtdValidate/CS/validdtd.cs#1)]
 [!code-vb[XmlReaderSettings.DtdValidate#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderSettings.DtdValidate/VB/validdtd.vb#1)]  
  
 <span data-ttu-id="93ef0-366">此範例會使用 itemDTD.xml 檔案做為輸入。</span><span class="sxs-lookup"><span data-stu-id="93ef0-366">The example uses the itemDTD.xml file as input.</span></span>  
  
 [!code-xml[XmlReaderSettings.DtdValidate#2](~/samples/snippets/xml/VS_Snippets_Data/XmlReaderSettings.DtdValidate/XML/itemDTD.xml#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReaderSettings.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="member this.Reset : unit -&gt; unit" Usage="xmlReaderSettings.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="93ef0-367">將設定類別的成員重設為其預設值。</span><span class="sxs-lookup"><span data-stu-id="93ef0-367">Resets the members of the settings class to their default values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93ef0-368">下表顯示的執行個體的初始屬性值<xref:System.Xml.XmlReaderSettings>。</span><span class="sxs-lookup"><span data-stu-id="93ef0-368">The following table shows initial property values for an instance of <xref:System.Xml.XmlReaderSettings>.</span></span>  
  
|<span data-ttu-id="93ef0-369">屬性</span><span class="sxs-lookup"><span data-stu-id="93ef0-369">Property</span></span>|<span data-ttu-id="93ef0-370">初始值</span><span class="sxs-lookup"><span data-stu-id="93ef0-370">Initial Value</span></span>|  
|--------------|-------------------|  
|<xref:System.Xml.XmlReaderSettings.Async%2A>|<span data-ttu-id="93ef0-371">`false`.</span><span class="sxs-lookup"><span data-stu-id="93ef0-371">`false`.</span></span>|  
|<xref:System.Xml.XmlReaderSettings.CheckCharacters%2A>|<span data-ttu-id="93ef0-372">`true`.</span><span class="sxs-lookup"><span data-stu-id="93ef0-372">`true`.</span></span>|  
|<xref:System.Xml.XmlReaderSettings.ConformanceLevel%2A>|<span data-ttu-id="93ef0-373"><xref:System.Xml.ConformanceLevel.Document>.</span><span class="sxs-lookup"><span data-stu-id="93ef0-373"><xref:System.Xml.ConformanceLevel.Document>.</span></span>|  
|<xref:System.Xml.XmlReaderSettings.IgnoreComments%2A>|<span data-ttu-id="93ef0-374">`false`.</span><span class="sxs-lookup"><span data-stu-id="93ef0-374">`false`.</span></span>|  
|<xref:System.Xml.XmlReaderSettings.IgnoreProcessingInstructions%2A>|<span data-ttu-id="93ef0-375">`false`.</span><span class="sxs-lookup"><span data-stu-id="93ef0-375">`false`.</span></span>|  
|<xref:System.Xml.XmlReaderSettings.IgnoreWhitespace%2A>|<span data-ttu-id="93ef0-376">`false`.</span><span class="sxs-lookup"><span data-stu-id="93ef0-376">`false`.</span></span>|  
|<xref:System.Xml.XmlReaderSettings.LineNumberOffset%2A>|<span data-ttu-id="93ef0-377">0.</span><span class="sxs-lookup"><span data-stu-id="93ef0-377">0.</span></span>|  
|<xref:System.Xml.XmlReaderSettings.LinePositionOffset%2A>|<span data-ttu-id="93ef0-378">0.</span><span class="sxs-lookup"><span data-stu-id="93ef0-378">0.</span></span>|  
|<xref:System.Xml.XmlReaderSettings.MaxCharactersFromEntities%2A>|<span data-ttu-id="93ef0-379">0 （不會產生自展開實體的字元數目沒有限制）。</span><span class="sxs-lookup"><span data-stu-id="93ef0-379">0 (there is no limit on the number of characters that result from expanding entities).</span></span>|  
|<xref:System.Xml.XmlReaderSettings.MaxCharactersInDocument%2A>|<span data-ttu-id="93ef0-380">0 （在 XML 文件大小沒有任何限制）。</span><span class="sxs-lookup"><span data-stu-id="93ef0-380">0 (there is no limit on the size of the XML document).</span></span>|  
|<xref:System.Xml.XmlReaderSettings.NameTable%2A>|<span data-ttu-id="93ef0-381">`null`.</span><span class="sxs-lookup"><span data-stu-id="93ef0-381">`null`.</span></span>|  
|<xref:System.Xml.XmlTextReader.DtdProcessing%2A>|<xref:System.Xml.DtdProcessing.Prohibit>|  
|<xref:System.Xml.XmlReaderSettings.ProhibitDtd%2A>|<span data-ttu-id="93ef0-382">`true`.</span><span class="sxs-lookup"><span data-stu-id="93ef0-382">`true`.</span></span> <span data-ttu-id="93ef0-383">這個屬性已經過時。</span><span class="sxs-lookup"><span data-stu-id="93ef0-383">This property is obsolete.</span></span> <span data-ttu-id="93ef0-384">請改用 <xref:System.Xml.XmlTextReader.DtdProcessing%2A>。</span><span class="sxs-lookup"><span data-stu-id="93ef0-384">Use <xref:System.Xml.XmlTextReader.DtdProcessing%2A> instead.</span></span> <span data-ttu-id="93ef0-385">如果您已設定<xref:System.Xml.XmlReaderSettings.ProhibitDtd%2A>為其預設值`true`設定<xref:System.Xml.XmlTextReader.DtdProcessing%2A>至`Prohibit`。</span><span class="sxs-lookup"><span data-stu-id="93ef0-385">If you had set <xref:System.Xml.XmlReaderSettings.ProhibitDtd%2A> to its default value `true` set <xref:System.Xml.XmlTextReader.DtdProcessing%2A> to `Prohibit`.</span></span> <span data-ttu-id="93ef0-386">如果您已設定<xref:System.Xml.XmlReaderSettings.ProhibitDtd%2A>要`false`設定<xref:System.Xml.XmlTextReader.DtdProcessing%2A>至`Parse`。</span><span class="sxs-lookup"><span data-stu-id="93ef0-386">If you had set <xref:System.Xml.XmlReaderSettings.ProhibitDtd%2A> to `false` set <xref:System.Xml.XmlTextReader.DtdProcessing%2A> to `Parse`.</span></span>|  
|<xref:System.Xml.XmlReaderSettings.Schemas%2A>|<span data-ttu-id="93ef0-387">空的 <xref:System.Xml.Schema.XmlSchemaSet> 物件。</span><span class="sxs-lookup"><span data-stu-id="93ef0-387">An empty <xref:System.Xml.Schema.XmlSchemaSet> object.</span></span>|  
|<xref:System.Xml.XmlReaderSettings.ValidationFlags%2A>|<span data-ttu-id="93ef0-388"><xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints>.</span><span class="sxs-lookup"><span data-stu-id="93ef0-388"><xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints>.</span></span>|  
|<xref:System.Xml.XmlReaderSettings.ValidationType%2A>|<span data-ttu-id="93ef0-389"><xref:System.Xml.ValidationType.None>.</span><span class="sxs-lookup"><span data-stu-id="93ef0-389"><xref:System.Xml.ValidationType.None>.</span></span>|  
|<xref:System.Xml.XmlReaderSettings.XmlResolver%2A>|<span data-ttu-id="93ef0-390">新的 <xref:System.Xml.XmlUrlResolver> 物件。</span><span class="sxs-lookup"><span data-stu-id="93ef0-390">A new <xref:System.Xml.XmlUrlResolver> object.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Schemas">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaSet Schemas { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.XmlSchemaSet Schemas" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.Schemas" />
      <MemberSignature Language="VB.NET" Value="Public Property Schemas As XmlSchemaSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaSet ^ Schemas { System::Xml::Schema::XmlSchemaSet ^ get(); void set(System::Xml::Schema::XmlSchemaSet ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Schemas : System.Xml.Schema.XmlSchemaSet with get, set" Usage="System.Xml.XmlReaderSettings.Schemas" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="93ef0-391">取得或設定要在執行結構描述驗證時使用的 <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</span><span class="sxs-lookup"><span data-stu-id="93ef0-391">Gets or sets the <see cref="T:System.Xml.Schema.XmlSchemaSet" /> to use when performing schema validation.</span></span></summary>
        <value><span data-ttu-id="93ef0-392">執行結構描述驗證時使用的<see cref="T:System.Xml.Schema.XmlSchemaSet" />。</span><span class="sxs-lookup"><span data-stu-id="93ef0-392">The <see cref="T:System.Xml.Schema.XmlSchemaSet" /> to use when performing schema validation.</span></span> <span data-ttu-id="93ef0-393">預設為空的 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="93ef0-393">The default is an empty <see cref="T:System.Xml.Schema.XmlSchemaSet" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
> -   <span data-ttu-id="93ef0-394">請勿使用從未知或未受信任的來源或位置的結構描述。</span><span class="sxs-lookup"><span data-stu-id="93ef0-394">Do not use schemas from unknown or untrusted sources or locations.</span></span> <span data-ttu-id="93ef0-395">如此一來會危及您的程式碼的安全性。</span><span class="sxs-lookup"><span data-stu-id="93ef0-395">Doing so will compromise the security of your code.</span></span>  
> -   <span data-ttu-id="93ef0-396">XML 結構描述 （包括內嵌結構描述） 是本質上容易遭到阻絕服務攻擊;不接受這些未受信任的案例中。</span><span class="sxs-lookup"><span data-stu-id="93ef0-396">XML schemas (including inline schemas) are inherently vulnerable to denial of service attacks; do not accept them in untrusted scenarios.</span></span>  
> -   <span data-ttu-id="93ef0-397">結構描述驗證錯誤訊息和例外狀況可能會公開機密資訊的內容模型或結構描述檔案的 URI 路徑。</span><span class="sxs-lookup"><span data-stu-id="93ef0-397">Schema validation error messages and exceptions may expose sensitive information about the content model or URI paths to the schema file.</span></span> <span data-ttu-id="93ef0-398">請小心，不要公開 （expose） 給未受信任的呼叫端的這項資訊。</span><span class="sxs-lookup"><span data-stu-id="93ef0-398">Be careful not to expose this information to untrusted callers.</span></span>  
> -   <span data-ttu-id="93ef0-399">如需詳細資訊，請參閱 < 安全性考量 > 一節。</span><span class="sxs-lookup"><span data-stu-id="93ef0-399">For additional information, see the "Security considerations" section.</span></span>  
  
 <span data-ttu-id="93ef0-400"><xref:System.Xml.Schema.XmlSchemaSet>類別只支援 XML 結構描述定義語言 (XSD) 結構描述。</span><span class="sxs-lookup"><span data-stu-id="93ef0-400">The <xref:System.Xml.Schema.XmlSchemaSet> class only supports XML Schema definition language (XSD) schemas.</span></span> <span data-ttu-id="93ef0-401"><xref:System.Xml.XmlReader> 所建立的執行個體<xref:System.Xml.XmlReader.Create%2A>方法不能設定為啟用 Xml-data Reduced (XDR) 結構描述驗證。</span><span class="sxs-lookup"><span data-stu-id="93ef0-401"><xref:System.Xml.XmlReader> instances created by the <xref:System.Xml.XmlReader.Create%2A> method cannot be configured to enable XML-Data Reduced (XDR) schema validation.</span></span>  
  
## <a name="security-considerations"></a><span data-ttu-id="93ef0-402">安全性考量</span><span class="sxs-lookup"><span data-stu-id="93ef0-402">Security considerations</span></span>  
  
-   <span data-ttu-id="93ef0-403">請勿使用來源不明或不受信任來源的結構描述。</span><span class="sxs-lookup"><span data-stu-id="93ef0-403">Do not use schemas from unknown or untrusted sources.</span></span> <span data-ttu-id="93ef0-404">如此一來會危及您的程式碼的安全性。</span><span class="sxs-lookup"><span data-stu-id="93ef0-404">Doing so will compromise the security of your code.</span></span> <span data-ttu-id="93ef0-405"><xref:System.Xml.XmlUrlResolver>類別預設用來解析外部結構描述。</span><span class="sxs-lookup"><span data-stu-id="93ef0-405">The <xref:System.Xml.XmlUrlResolver> class is used to resolve external schemas by default.</span></span> <span data-ttu-id="93ef0-406">若要停用解析的 include，匯入，並重新定義結構描述的項目，設定<xref:System.Xml.Schema.XmlSchemaSet.XmlResolver%2A?displayProperty=nameWithType>屬性設`null`。</span><span class="sxs-lookup"><span data-stu-id="93ef0-406">To disable resolution of include, import, and redefine elements of a schema, set the <xref:System.Xml.Schema.XmlSchemaSet.XmlResolver%2A?displayProperty=nameWithType> property to `null`.</span></span>  
  
-   <span data-ttu-id="93ef0-407">使用所引發的例外狀況<xref:System.Xml.Schema.XmlSchemaSet>類別，例如<xref:System.Xml.Schema.XmlSchemaException>類別可能包含不應公開受信任的案例中的機密資訊。</span><span class="sxs-lookup"><span data-stu-id="93ef0-407">Exceptions raised as a result of using the <xref:System.Xml.Schema.XmlSchemaSet> class, such as the <xref:System.Xml.Schema.XmlSchemaException> class may contain sensitive information that should not be exposed in untrusted scenarios.</span></span> <span data-ttu-id="93ef0-408">例如，<xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A>屬性<xref:System.Xml.Schema.XmlSchemaException>傳回至造成例外狀況的結構描述檔案的 URI 路徑。</span><span class="sxs-lookup"><span data-stu-id="93ef0-408">For example, the <xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A> property of an <xref:System.Xml.Schema.XmlSchemaException> returns the URI path to the schema file that caused the exception.</span></span> <span data-ttu-id="93ef0-409"><xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A>屬性不應公開受信任的案例中。</span><span class="sxs-lookup"><span data-stu-id="93ef0-409">The <xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A> property should not be exposed in untrusted scenarios.</span></span> <span data-ttu-id="93ef0-410">使機密資訊不會暴露在不受信任的情況下，就應該正確處理例外狀況。</span><span class="sxs-lookup"><span data-stu-id="93ef0-410">Exceptions should be properly handled so that this sensitive information is not exposed in untrusted scenarios.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93ef0-411">以下範例使用<xref:System.Xml.XmlReaderSettings>物件和<xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType>XML 文件相關聯的結構描述的方法。</span><span class="sxs-lookup"><span data-stu-id="93ef0-411">The example below uses the <xref:System.Xml.XmlReaderSettings> object and the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to associate a schema with an XML document.</span></span> <span data-ttu-id="93ef0-412">結構描述加入至<xref:System.Xml.XmlReaderSettings.Schemas%2A>屬性<xref:System.Xml.XmlReaderSettings>物件。</span><span class="sxs-lookup"><span data-stu-id="93ef0-412">The schema is added to the <xref:System.Xml.XmlReaderSettings.Schemas%2A> property of the <xref:System.Xml.XmlReaderSettings> object.</span></span> <span data-ttu-id="93ef0-413">值<xref:System.Xml.XmlReaderSettings.Schemas%2A>屬性是<xref:System.Xml.Schema.XmlSchemaSet>物件。</span><span class="sxs-lookup"><span data-stu-id="93ef0-413">The value of the <xref:System.Xml.XmlReaderSettings.Schemas%2A> property is an <xref:System.Xml.Schema.XmlSchemaSet> object.</span></span> <span data-ttu-id="93ef0-414">結構描述用來驗證 XML 文件符合結構描述內容模型。</span><span class="sxs-lookup"><span data-stu-id="93ef0-414">The schema is used to validate that the XML document conforms to the schema content model.</span></span> <span data-ttu-id="93ef0-415">結構描述驗證錯誤和警告會由<xref:System.Xml.XmlReaderSettings.ValidationEventHandler>中所定義<xref:System.Xml.XmlReaderSettings>物件。</span><span class="sxs-lookup"><span data-stu-id="93ef0-415">Schema validation errors and warnings are handled by the <xref:System.Xml.XmlReaderSettings.ValidationEventHandler> defined in the <xref:System.Xml.XmlReaderSettings> object.</span></span>  
  
 [!code-cpp[XmlSchemaSetOverall Example#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlSchemaSetOverall Example/CPP/xmlschemasetexample.cpp#1)]
 [!code-csharp[XmlSchemaSetOverall Example#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaSetOverall Example/CS/xmlschemasetexample.cs#1)]
 [!code-vb[XmlSchemaSetOverall Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaSetOverall Example/VB/xmlschemasetexample.vb#1)]  
  
 <span data-ttu-id="93ef0-416">此範例會使用 books.xml 檔案做為輸入。</span><span class="sxs-lookup"><span data-stu-id="93ef0-416">The example uses the books.xml file as input.</span></span>  
  
 [!code-xml[XmlSchemaSetOverall Example#2](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaSetOverall Example/XML/books.xml#2)]  
  
 <span data-ttu-id="93ef0-417">此範例會使用 books.xsd 檔案做為輸入。</span><span class="sxs-lookup"><span data-stu-id="93ef0-417">The example uses the books.xsd file as an input.</span></span>  
  
 [!code-xml[XmlSchemaSetOverall Example#3](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaSetOverall Example/XML/books.xsd#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ValidationEventHandler">
      <MemberSignature Language="C#" Value="public event System.Xml.Schema.ValidationEventHandler ValidationEventHandler;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Xml.Schema.ValidationEventHandler ValidationEventHandler" />
      <MemberSignature Language="DocId" Value="E:System.Xml.XmlReaderSettings.ValidationEventHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Xml::Schema::ValidationEventHandler ^ ValidationEventHandler;" />
      <MemberSignature Language="F#" Value="member this.ValidationEventHandler : System.Xml.Schema.ValidationEventHandler " Usage="member this.ValidationEventHandler : System.Xml.Schema.ValidationEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.ValidationEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="93ef0-418">發生於讀取器遇到驗證錯誤時。</span><span class="sxs-lookup"><span data-stu-id="93ef0-418">Occurs when the reader encounters validation errors.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93ef0-419">如果讀取的 XML 執行個體文件時，發生這些事件<xref:System.Xml.XmlReaderSettings.ValidationType%2A>會設為<xref:System.Xml.ValidationType.DTD>或<xref:System.Xml.ValidationType.Schema>。</span><span class="sxs-lookup"><span data-stu-id="93ef0-419">These events occur while reading an XML instance document if the <xref:System.Xml.XmlReaderSettings.ValidationType%2A> is set to either <xref:System.Xml.ValidationType.DTD> or <xref:System.Xml.ValidationType.Schema>.</span></span> <span data-ttu-id="93ef0-420">如果<xref:System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings>設定已啟用<xref:System.Xml.XmlReaderSettings.ValidationFlags%2A>發生任何驗證警告時，也可能會發生這些事件的屬性。</span><span class="sxs-lookup"><span data-stu-id="93ef0-420">If the <xref:System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings> setting has been enabled on the <xref:System.Xml.XmlReaderSettings.ValidationFlags%2A> property these events also occur when any validation warnings are encountered.</span></span>  
  
 <span data-ttu-id="93ef0-421">如果讀取器設定進行驗證，而且尚未設定任何驗證事件處理常式，<xref:System.Xml.Schema.XmlSchemaValidationException>就會擲回的所有驗證錯誤。</span><span class="sxs-lookup"><span data-stu-id="93ef0-421">If the reader is configured for validation and no validation event handler has been set, an <xref:System.Xml.Schema.XmlSchemaValidationException> is thrown for all validation errors.</span></span> <span data-ttu-id="93ef0-422">(不會造成驗證警告<xref:System.Xml.Schema.XmlSchemaValidationException>擲回)。</span><span class="sxs-lookup"><span data-stu-id="93ef0-422">(Validation warnings do not cause an <xref:System.Xml.Schema.XmlSchemaValidationException> to be thrown).</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="93ef0-423">驗證錯誤訊息可能會公開敏感的內容模型的資訊。</span><span class="sxs-lookup"><span data-stu-id="93ef0-423">Validation error messages may expose sensitive content model information.</span></span> <span data-ttu-id="93ef0-424">驗證錯誤和警告訊息則會使用處理<xref:System.Xml.Schema.ValidationEventHandler>委派，或公開為<xref:System.Xml.Schema.XmlSchemaValidationException>如果沒有事件處理常式提供給<xref:System.Xml.XmlReaderSettings>物件 (不會造成驗證警告<xref:System.Xml.Schema.XmlSchemaValidationException>擲回)。</span><span class="sxs-lookup"><span data-stu-id="93ef0-424">Validation error and warning messages are handled using the <xref:System.Xml.Schema.ValidationEventHandler> delegate, or are exposed as an <xref:System.Xml.Schema.XmlSchemaValidationException> if no event handler is provided to the <xref:System.Xml.XmlReaderSettings> object (validation warnings do not cause an <xref:System.Xml.Schema.XmlSchemaValidationException> to be thrown).</span></span> <span data-ttu-id="93ef0-425">在不受信任的情況下，應該不會公開此內容模型的資訊。</span><span class="sxs-lookup"><span data-stu-id="93ef0-425">This content model information should not be exposed in untrusted scenarios.</span></span> <span data-ttu-id="93ef0-426">依預設會隱藏驗證警告訊息，並可以藉由設定報告<xref:System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings>旗標。</span><span class="sxs-lookup"><span data-stu-id="93ef0-426">Validation warning messages are suppressed by default and can be reported by setting the <xref:System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings> flag.</span></span>  
>   
>  <span data-ttu-id="93ef0-427"><xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A>屬性<xref:System.Xml.Schema.XmlSchemaValidationException>傳回至造成例外狀況的結構描述檔案的 URI 路徑。</span><span class="sxs-lookup"><span data-stu-id="93ef0-427">The <xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A> property of an <xref:System.Xml.Schema.XmlSchemaValidationException> returns the URI path to the schema file that caused the exception.</span></span> <span data-ttu-id="93ef0-428"><xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A>屬性不應公開受信任的案例中。</span><span class="sxs-lookup"><span data-stu-id="93ef0-428">The <xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A> property should not be exposed in untrusted scenarios.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93ef0-429">下列範例會顯示這些設定來指定要建立的讀取器，驗證使用內嵌結構描述，並同時也顯示驗證警告。</span><span class="sxs-lookup"><span data-stu-id="93ef0-429">The following example shows the settings to specify to create a reader that validates using an inline schema and that also displays validation warnings.</span></span> <span data-ttu-id="93ef0-430">驗證事件處理常式使用<xref:System.Xml.Schema.XmlSeverityType>區分警告和錯誤的列舉。</span><span class="sxs-lookup"><span data-stu-id="93ef0-430">The validation event handler uses the <xref:System.Xml.Schema.XmlSeverityType> enumeration to differentiate between warnings and errors.</span></span>  
  
 [!code-csharp[XmlReaderSettings.IgnoreInlineSchema#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderSettings.IgnoreInlineSchema/CS/factory_rdr_cctor.cs#1)]
 [!code-vb[XmlReaderSettings.IgnoreInlineSchema#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderSettings.IgnoreInlineSchema/VB/factory_rdr_cctor.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ValidationFlags">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaValidationFlags ValidationFlags { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Schema.XmlSchemaValidationFlags ValidationFlags" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.ValidationFlags" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidationFlags As XmlSchemaValidationFlags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaValidationFlags ValidationFlags { System::Xml::Schema::XmlSchemaValidationFlags get(); void set(System::Xml::Schema::XmlSchemaValidationFlags value); };" />
      <MemberSignature Language="F#" Value="member this.ValidationFlags : System.Xml.Schema.XmlSchemaValidationFlags with get, set" Usage="System.Xml.XmlReaderSettings.ValidationFlags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaValidationFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="93ef0-431">取得或設定值，表示結構描述驗證設定。</span><span class="sxs-lookup"><span data-stu-id="93ef0-431">Gets or sets a value indicating the schema validation settings.</span></span> <span data-ttu-id="93ef0-432">這個設定會套用至可驗證結構描述的 <see cref="T:System.Xml.XmlReader" /> 物件 (<see cref="P:System.Xml.XmlReaderSettings.ValidationType" /> 屬性設為 <see langword="ValidationType.Schema" />)。</span><span class="sxs-lookup"><span data-stu-id="93ef0-432">This setting applies to <see cref="T:System.Xml.XmlReader" /> objects that validate schemas (<see cref="P:System.Xml.XmlReaderSettings.ValidationType" /> property set to <see langword="ValidationType.Schema" />).</span></span></summary>
        <value><span data-ttu-id="93ef0-433">指定驗證選項的列舉值的位元組合。</span><span class="sxs-lookup"><span data-stu-id="93ef0-433">A bitwise combination of enumeration values that specify validation options.</span></span> <span data-ttu-id="93ef0-434"><see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints" /> 和 <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.AllowXmlAttributes" /> 預設為啟用。</span><span class="sxs-lookup"><span data-stu-id="93ef0-434"><see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints" /> and <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.AllowXmlAttributes" /> are enabled by default.</span></span> <span data-ttu-id="93ef0-435"><see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema" />、<see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation" /> 和 <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings" /> 預設為停用。</span><span class="sxs-lookup"><span data-stu-id="93ef0-435"><see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema" />, <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation" />, and <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings" /> are disabled by default.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="93ef0-436">依預設，不會設定 <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> 物件的 <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> 及 <xref:System.Xml.XmlReaderSettings> 驗證旗標。</span><span class="sxs-lookup"><span data-stu-id="93ef0-436">The <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> and <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> validation flags of an <xref:System.Xml.XmlReaderSettings> object are not set by default.</span></span> <span data-ttu-id="93ef0-437">當設定這些旗標時，<xref:System.Xml.XmlReaderSettings.XmlResolver%2A> 物件的 <xref:System.Xml.XmlReaderSettings> 可用於解析在 <xref:System.Xml.XmlReader> 的執行個體文件中發現的結構描述位置。</span><span class="sxs-lookup"><span data-stu-id="93ef0-437">When these flags are set, the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> of the <xref:System.Xml.XmlReaderSettings> object is used to resolve schema locations encountered in the instance document in the <xref:System.Xml.XmlReader>.</span></span> <span data-ttu-id="93ef0-438">如果<xref:System.Xml.XmlReaderSettings.XmlResolver%2A>物件是否`null`，則不會解析結構描述位置即使<xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema>和<xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation>設定驗證旗標。</span><span class="sxs-lookup"><span data-stu-id="93ef0-438">If the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> object is `null`, schema locations are not resolved even if the <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> and <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> validation flags are set.</span></span>  
>   
>  <span data-ttu-id="93ef0-439">驗證期間加入的結構描述會加入新型別，並可變更要驗證之物件的驗證結果。</span><span class="sxs-lookup"><span data-stu-id="93ef0-439">Schemas added during validation add new types and can change the validation outcome of the document being validated.</span></span> <span data-ttu-id="93ef0-440">因此，外部結構描述應僅從受信任的來源解析。</span><span class="sxs-lookup"><span data-stu-id="93ef0-440">As a result, external schemas should only be resolved from trusted sources.</span></span>  
>   
>  <span data-ttu-id="93ef0-441">停用<xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints>旗標 （預設為啟用） 時，建議使用文件的大部分驗證、 不受信任、 大型 XML 文件中的高可用性的情況下，針對具有識別條件約束的結構描述。</span><span class="sxs-lookup"><span data-stu-id="93ef0-441">Disabling the <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints> flag (enabled by default) is recommended when validating, untrusted, large XML documents in high availability scenarios against a schema with identity constraints over a large part of the document.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93ef0-442">下列範例會針對內嵌 XML 結構描述的 XML 檔案驗證啟用<xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema>設定。</span><span class="sxs-lookup"><span data-stu-id="93ef0-442">The following example validates an XML file against an inline XML Schema by enabling the <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> setting.</span></span> <span data-ttu-id="93ef0-443">XML 讀取器會設定為顯示驗證警告，sp 您也看到預期的警告根項目上。</span><span class="sxs-lookup"><span data-stu-id="93ef0-443">The XML reader is configured to display validation warnings, sp you also see the expected warning on the root element.</span></span>  
  
 [!code-csharp[XmlReaderSettings.IgnoreInlineSchema#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderSettings.IgnoreInlineSchema/CS/factory_rdr_cctor.cs#1)]
 [!code-vb[XmlReaderSettings.IgnoreInlineSchema#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderSettings.IgnoreInlineSchema/VB/factory_rdr_cctor.vb#1)]  
  
## <a name="input"></a><span data-ttu-id="93ef0-444">輸入</span><span class="sxs-lookup"><span data-stu-id="93ef0-444">Input</span></span>  
 <span data-ttu-id="93ef0-445">該範例採用 inlineSchema.xml 檔案做為輸入。</span><span class="sxs-lookup"><span data-stu-id="93ef0-445">The example uses the inlineSchema.xml file as input.</span></span>  
  
 [!code-xml[XmlReaderSettings.IgnoreInlineSchema#3](~/samples/snippets/xml/VS_Snippets_Data/XmlReaderSettings.IgnoreInlineSchema/XML/inlineSchema.xml#3)]  
  
## <a name="output"></a><span data-ttu-id="93ef0-446">輸出</span><span class="sxs-lookup"><span data-stu-id="93ef0-446">Output</span></span>  
 <span data-ttu-id="93ef0-447">警告： 找不到相符的結構描述。</span><span class="sxs-lookup"><span data-stu-id="93ef0-447">Warning:   Matching schema not found.</span></span> <span data-ttu-id="93ef0-448">未發生驗證。</span><span class="sxs-lookup"><span data-stu-id="93ef0-448">No validation occurred.</span></span> <span data-ttu-id="93ef0-449">找不到項目 root 的結構描述資訊。</span><span class="sxs-lookup"><span data-stu-id="93ef0-449">Could not find schema information for the element 'root'.</span></span>  
  
 <span data-ttu-id="93ef0-450">驗證錯誤： 項目 Xsdheadcount: headcount 含有無效的子項目 '除法'。</span><span class="sxs-lookup"><span data-stu-id="93ef0-450">Validation error:   The element 'xsdHeadCount:HeadCount' has invalid child element 'division'.</span></span> <span data-ttu-id="93ef0-451">預期的是 'ID'。</span><span class="sxs-lookup"><span data-stu-id="93ef0-451">Expected 'ID'.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ValidationType">
      <MemberSignature Language="C#" Value="public System.Xml.ValidationType ValidationType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.ValidationType ValidationType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.ValidationType" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidationType As ValidationType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::ValidationType ValidationType { System::Xml::ValidationType get(); void set(System::Xml::ValidationType value); };" />
      <MemberSignature Language="F#" Value="member this.ValidationType : System.Xml.ValidationType with get, set" Usage="System.Xml.XmlReaderSettings.ValidationType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.ValidationType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="93ef0-452">取得或設定值，指出 <see cref="T:System.Xml.XmlReader" /> 是否會在讀取時執行驗證或類型指派。</span><span class="sxs-lookup"><span data-stu-id="93ef0-452">Gets or sets a value indicating whether the <see cref="T:System.Xml.XmlReader" /> will perform validation or type assignment when reading.</span></span></summary>
        <value><span data-ttu-id="93ef0-453">其中一個 <see cref="T:System.Xml.ValidationType" /> 值，指出 XmlReader 在讀取時是否執行驗證或型別指派。</span><span class="sxs-lookup"><span data-stu-id="93ef0-453">One of the <see cref="T:System.Xml.ValidationType" /> values that indicates whether XmlReader will perform validation or type assignment when reading.</span></span> <span data-ttu-id="93ef0-454">預設為 <see langword="ValidationType.None" />。</span><span class="sxs-lookup"><span data-stu-id="93ef0-454">The default is <see langword="ValidationType.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93ef0-455">下表描述<xref:System.Xml.ValidationType>值。</span><span class="sxs-lookup"><span data-stu-id="93ef0-455">The following table describes the <xref:System.Xml.ValidationType> values.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="93ef0-456"><xref:System.Xml.ValidationType.Auto>和<xref:System.Xml.ValidationType.XDR>列舉的值為.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="93ef0-456">The <xref:System.Xml.ValidationType.Auto> and <xref:System.Xml.ValidationType.XDR> enumeration values are obsolete in .NET Framework version 2.0.</span></span>  
  
|<span data-ttu-id="93ef0-457">ValidationType</span><span class="sxs-lookup"><span data-stu-id="93ef0-457">ValidationType</span></span>|<span data-ttu-id="93ef0-458">描述</span><span class="sxs-lookup"><span data-stu-id="93ef0-458">Description</span></span>|  
|--------------------|-----------------|  
|`DTD`|<span data-ttu-id="93ef0-459">使用文件類型定義 (DTD) 會執行驗證。</span><span class="sxs-lookup"><span data-stu-id="93ef0-459">Validation is performed using a document type definition (DTD).</span></span> <span data-ttu-id="93ef0-460">**注意：**<xref:System.Xml.XmlReaderSettings.DtdProcessing%2A>屬性也必須設為<xref:System.Xml.DtdProcessing.Parse>。</span><span class="sxs-lookup"><span data-stu-id="93ef0-460">**Note:**  The <xref:System.Xml.XmlReaderSettings.DtdProcessing%2A> property must also be set to <xref:System.Xml.DtdProcessing.Parse>.</span></span>|  
|`None`|<span data-ttu-id="93ef0-461"><xref:System.Xml.XmlReader>不會驗證資料，或執行任何類型指派。</span><span class="sxs-lookup"><span data-stu-id="93ef0-461">The <xref:System.Xml.XmlReader> does not validate data, or perform any type assignment.</span></span>|  
|`Schema`|<span data-ttu-id="93ef0-462">驗證和型別指派是使用 XML 結構描述定義語言 (XSD) 結構描述來執行。</span><span class="sxs-lookup"><span data-stu-id="93ef0-462">Validation and type assignment is performed using an XML Schema definition language (XSD) schema.</span></span> <span data-ttu-id="93ef0-463">讀取器存取 XML 結構描述，使用下列命令：</span><span class="sxs-lookup"><span data-stu-id="93ef0-463">The reader accesses the XML Schema using the following:</span></span><br /><br /> <span data-ttu-id="93ef0-464">-使用<xref:System.Xml.XmlReaderSettings.Schemas%2A>屬性來存取<xref:System.Xml.Schema.XmlSchemaSet>這個讀取器相關聯的物件。</span><span class="sxs-lookup"><span data-stu-id="93ef0-464">-   Uses the <xref:System.Xml.XmlReaderSettings.Schemas%2A> property to access the <xref:System.Xml.Schema.XmlSchemaSet> object associated with this reader.</span></span><br /><span data-ttu-id="93ef0-465">-使用 XML 執行個體文件中包含的內嵌結構描述。</span><span class="sxs-lookup"><span data-stu-id="93ef0-465">-   Uses the in-line schema contained in the XML instance document.</span></span> <span data-ttu-id="93ef0-466">(<xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema>必須啟用選項。)</span><span class="sxs-lookup"><span data-stu-id="93ef0-466">(The <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> option must be enabled.)</span></span><br /><span data-ttu-id="93ef0-467">-使用結構描述位置提示所指定的 XML 結構描述 (`xsi:schemaLocation`或`xsi:noNamespaceSchemaLocation`屬性) 的 XML 執行個體文件中找到。</span><span class="sxs-lookup"><span data-stu-id="93ef0-467">-   Uses the XML Schema specified by schema location hints (`xsi:schemaLocation` or `xsi:noNamespaceSchemaLocation` attribute) found in the XML instance document.</span></span> <span data-ttu-id="93ef0-468">(<xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation>必須啟用選項。)</span><span class="sxs-lookup"><span data-stu-id="93ef0-468">(The <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> option must be enabled.)</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="93ef0-469">下列範例會驗證使用結構描述儲存在<xref:System.Xml.Schema.XmlSchemaSet>。</span><span class="sxs-lookup"><span data-stu-id="93ef0-469">The following example validates using a schema stored in the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span>  
  
 [!code-cpp[XmlReader_Validate_SchemaSet#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlReader_Validate_SchemaSet/CPP/XmlReader_Validate_SchemaSet.cpp#1)]
 [!code-csharp[XmlReader_Validate_SchemaSet#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader_Validate_SchemaSet/CS/validschemaset.cs#1)]
 [!code-vb[XmlReader_Validate_SchemaSet#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader_Validate_SchemaSet/VB/validschemaset.vb#1)]  
  
 <span data-ttu-id="93ef0-470">此範例會使用下列的輸入的檔案：</span><span class="sxs-lookup"><span data-stu-id="93ef0-470">The sample uses the following input files:</span></span>  
  
 `booksSchemaFail.xml`  
  
 [!code-xml[XmlReader_Validate_SchemaSet#2](~/samples/snippets/xml/VS_Snippets_Data/XmlReader_Validate_SchemaSet/XML/booksschemafail.xml#2)]  
  
 `books.xsd`  
  
 [!code-xml[XmlReader_Validate_SchemaSet#3](~/samples/snippets/xml/VS_Snippets_Data/XmlReader_Validate_SchemaSet/XML/books.xsd#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaValidationFlags" />
      </Docs>
    </Member>
    <Member MemberName="XmlResolver">
      <MemberSignature Language="C#" Value="public System.Xml.XmlResolver XmlResolver { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlResolver XmlResolver" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.XmlResolver" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlResolver As XmlResolver" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlResolver ^ XmlResolver {  void set(System::Xml::XmlResolver ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlResolver : System.Xml.XmlResolver" Usage="System.Xml.XmlReaderSettings.XmlResolver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="93ef0-471">設定用來存取外部文件的 <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="93ef0-471">Sets the <see cref="T:System.Xml.XmlResolver" /> used to access external documents.</span></span></summary>
        <value><span data-ttu-id="93ef0-472"><see cref="T:System.Xml.XmlResolver" />，用於存取外部文件。</span><span class="sxs-lookup"><span data-stu-id="93ef0-472">An <see cref="T:System.Xml.XmlResolver" /> used to access external documents.</span></span> <span data-ttu-id="93ef0-473">如果設為 <see langword="null" />，則在 <see cref="T:System.Xml.XmlException" /> 嘗試存取外部資源時會擲回 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="93ef0-473">If set to <see langword="null" />, an <see cref="T:System.Xml.XmlException" /> is thrown when the <see cref="T:System.Xml.XmlReader" /> tries to access an external resource.</span></span> <span data-ttu-id="93ef0-474">預設為沒有認證的新 <see cref="T:System.Xml.XmlUrlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="93ef0-474">The default is a new <see cref="T:System.Xml.XmlUrlResolver" /> with no credentials.</span></span>  <span data-ttu-id="93ef0-475">從.NET Framework 4.5.2 開始，此設定具有預設值是<see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="93ef0-475">Starting with the .NET Framework 4.5.2, this setting has a default value of <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93ef0-476"><xref:System.Xml.XmlResolver>來找出並開啟 XML 執行個體文件，或尋找及開啟 XML 執行個體文件所參考的任何外部資源。</span><span class="sxs-lookup"><span data-stu-id="93ef0-476">The <xref:System.Xml.XmlResolver> is used to locate and open an XML instance document, or to locate and open any external resources referenced by the XML instance document.</span></span> <span data-ttu-id="93ef0-477">這可能包括實體、 DTD 或結構描述。</span><span class="sxs-lookup"><span data-stu-id="93ef0-477">This can include entities, DTD, or schemas.</span></span> <span data-ttu-id="93ef0-478"><xref:System.Xml.XmlResolver.Credentials%2A?displayProperty=nameWithType>屬性可以用來指定網路驗證所需的任何認證。</span><span class="sxs-lookup"><span data-stu-id="93ef0-478">The <xref:System.Xml.XmlResolver.Credentials%2A?displayProperty=nameWithType> property can be used to specify any credentials required for network authentication.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="93ef0-479">因為<xref:System.Xml.XmlReaderSettings.XmlResolver%2A>可以包含機密資訊，例如使用者認證，您應該要特別小心快取時<xref:System.Xml.XmlReaderSettings>物件，或傳遞時<xref:System.Xml.XmlReaderSettings>元件之間的物件。</span><span class="sxs-lookup"><span data-stu-id="93ef0-479">Because the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> can contain sensitive information such as user credentials, you should be careful when caching <xref:System.Xml.XmlReaderSettings> objects, or when passing the <xref:System.Xml.XmlReaderSettings> object from one component to another.</span></span>  
>   
>  <span data-ttu-id="93ef0-480"><xref:System.Xml.XmlSecureResolver>可用來存取外部文件。</span><span class="sxs-lookup"><span data-stu-id="93ef0-480">An <xref:System.Xml.XmlSecureResolver> can be used to access external documents.</span></span> <span data-ttu-id="93ef0-481"><xref:System.Xml.XmlSecureResolver>類別可以協助保護另一實作<xref:System.Xml.XmlResolver>藉由包裝<xref:System.Xml.XmlResolver>物件，並限制資源的基礎<xref:System.Xml.XmlResolver>具有存取權。</span><span class="sxs-lookup"><span data-stu-id="93ef0-481">The <xref:System.Xml.XmlSecureResolver> class helps to secure another implementation of <xref:System.Xml.XmlResolver> by wrapping the <xref:System.Xml.XmlResolver> object and restricting the resources that the underlying <xref:System.Xml.XmlResolver> has access to.</span></span>  
>   
>  <span data-ttu-id="93ef0-482">依預設，不會設定 <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> 物件的 <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> 及 <xref:System.Xml.XmlReaderSettings> 驗證旗標。</span><span class="sxs-lookup"><span data-stu-id="93ef0-482">The <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> and <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> validation flags of an <xref:System.Xml.XmlReaderSettings> object are not set by default.</span></span> <span data-ttu-id="93ef0-483">當設定這些旗標時，<xref:System.Xml.XmlReaderSettings.XmlResolver%2A> 物件的 <xref:System.Xml.XmlReaderSettings> 可用於解析在 <xref:System.Xml.XmlReader> 的執行個體文件中發現的結構描述位置。</span><span class="sxs-lookup"><span data-stu-id="93ef0-483">When these flags are set, the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> of the <xref:System.Xml.XmlReaderSettings> object is used to resolve schema locations encountered in the instance document in the <xref:System.Xml.XmlReader>.</span></span> <span data-ttu-id="93ef0-484">如果<xref:System.Xml.XmlReaderSettings.XmlResolver%2A>物件是否`null`，則不會解析結構描述位置即使<xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema>和<xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation>設定驗證旗標。</span><span class="sxs-lookup"><span data-stu-id="93ef0-484">If the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> object is `null`, schema locations are not resolved even if the <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> and <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> validation flags are set.</span></span>  
>   
>  <span data-ttu-id="93ef0-485">驗證期間加入的結構描述會加入新型別，並可變更要驗證之物件的驗證結果。</span><span class="sxs-lookup"><span data-stu-id="93ef0-485">Schemas added during validation add new types and can change the validation outcome of the document being validated.</span></span> <span data-ttu-id="93ef0-486">因此，外部結構描述應僅從受信任的來源解析。</span><span class="sxs-lookup"><span data-stu-id="93ef0-486">As a result, external schemas should only be resolved from trusted sources.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93ef0-487">下列範例會建立<xref:System.Xml.XmlReader>使用<xref:System.Xml.XmlSecureResolver>具有預設認證。</span><span class="sxs-lookup"><span data-stu-id="93ef0-487">The following example creates an <xref:System.Xml.XmlReader> that uses an <xref:System.Xml.XmlSecureResolver> with default credentials.</span></span>  
  
 [!code-csharp[XmlReader.Create#10](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.Create/CS/XmlReader_Create.cs#10)]
 [!code-vb[XmlReader.Create#10](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.Create/VB/XmlReader_Create.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>