<Type Name="XmlNode" FullName="System.Xml.XmlNode">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a8b583c1030f60c393dd43a1e00bbb32f10fe440" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39943806" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class XmlNode : ICloneable, System.Collections.IEnumerable, System.Xml.XPath.IXPathNavigable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit XmlNode extends System.Object implements class System.Collections.IEnumerable, class System.ICloneable, class System.Xml.XPath.IXPathNavigable" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlNode" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class XmlNode&#xA;Implements ICloneable, IEnumerable, IXPathNavigable" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlNode abstract : ICloneable, System::Collections::IEnumerable, System::Xml::XPath::IXPathNavigable" />
  <TypeSignature Language="F#" Value="type XmlNode = class&#xA;    interface ICloneable&#xA;    interface IEnumerable&#xA;    interface IXPathNavigable" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlDocument</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Xml.XPath.IXPathNavigable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Diagnostics.DebuggerDisplay("{debuggerDisplayProxy}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="00046-101">表示 XML 文件中的單一節點。</span>
      <span class="sxs-lookup">
        <span data-stu-id="00046-101">Represents a single node in the XML document.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00046-102">這個類別會實作 W3C 文件物件模型 (DOM) 層級 1 核心及核心 DOM 層級 2。</span><span class="sxs-lookup"><span data-stu-id="00046-102">This class implements the W3C Document Object Model (DOM) Level 1 Core and the Core DOM Level 2.</span></span> <span data-ttu-id="00046-103">DOM 是 XML 文件的記憶體中 (快取) 樹狀表示。</span><span class="sxs-lookup"><span data-stu-id="00046-103">The DOM is an in-memory (cache) tree representation of an XML document.</span></span> <span data-ttu-id="00046-104">`XmlNode` 在 DOM 的.NET 實作的基底類別</span><span class="sxs-lookup"><span data-stu-id="00046-104">`XmlNode` is the base class in the .NET implementation of the DOM.</span></span> <span data-ttu-id="00046-105">它支援 XPath 選取項目，並提供編輯功能。</span><span class="sxs-lookup"><span data-stu-id="00046-105">It supports XPath selections and provides editing capabilities.</span></span> <span data-ttu-id="00046-106"><xref:System.Xml.XmlDocument>類別會擴充`XmlNode`和代表 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="00046-106">The <xref:System.Xml.XmlDocument> class extends `XmlNode` and represents an XML document.</span></span> <span data-ttu-id="00046-107">您可以使用`XmlDocument`載入和儲存 XML 資料。</span><span class="sxs-lookup"><span data-stu-id="00046-107">You can use `XmlDocument` to load and save XML data.</span></span> <span data-ttu-id="00046-108">它也會包含節點建立方法。</span><span class="sxs-lookup"><span data-stu-id="00046-108">It also includes methods for node creation.</span></span> <span data-ttu-id="00046-109">請參閱[XML 文件物件模型 (DOM)](~/docs/standard/data/xml/xml-document-object-model-dom.md)如需詳細資訊。</span><span class="sxs-lookup"><span data-stu-id="00046-109">See [XML Document Object Model (DOM)](~/docs/standard/data/xml/xml-document-object-model-dom.md) for more information.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="00046-110">使用所引發的例外狀況<xref:System.Xml.XmlNode>類別，例如<xref:System.Xml.XmlException>類別可能包含不應公開受信任的案例中的機密資訊。</span><span class="sxs-lookup"><span data-stu-id="00046-110">Exceptions raised as a result of using the <xref:System.Xml.XmlNode> class, such as the <xref:System.Xml.XmlException> class may contain sensitive information that should not be exposed in untrusted scenarios.</span></span> <span data-ttu-id="00046-111">使機密資訊不會暴露在不受信任的情況下，就應該正確處理例外狀況。</span><span class="sxs-lookup"><span data-stu-id="00046-111">Exceptions should be properly handled so that this sensitive information is not exposed in untrusted scenarios.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Xml.XmlNode.SelectNodes(System.String)" />
  </Docs>
  <Members>
    <Member MemberName="AppendChild">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode AppendChild (System.Xml.XmlNode newChild);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode AppendChild(class System.Xml.XmlNode newChild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.AppendChild(System.Xml.XmlNode)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AppendChild (newChild As XmlNode) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ AppendChild(System::Xml::XmlNode ^ newChild);" />
      <MemberSignature Language="F#" Value="abstract member AppendChild : System.Xml.XmlNode -&gt; System.Xml.XmlNode&#xA;override this.AppendChild : System.Xml.XmlNode -&gt; System.Xml.XmlNode" Usage="xmlNode.AppendChild newChild" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newChild" Type="System.Xml.XmlNode" />
      </Parameters>
      <Docs>
        <param name="newChild">
          <span data-ttu-id="00046-112">要加入的節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-112">The node to add.</span>
          </span>
          <span data-ttu-id="00046-113">要加入之節點的所有內容會移入指定的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-113">All the contents of the node to be added are moved into the specified location.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00046-114">將指定的節點加入這個節點之子節點清單的結尾。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-114">Adds the specified node to the end of the list of child nodes, of this node.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="00046-115">已加入的節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-115">The node added.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00046-116">如果`newChild`是已經在樹狀目錄中，您會從其原始位置移除，並加入其目標位置。</span><span class="sxs-lookup"><span data-stu-id="00046-116">If the `newChild` is already in the tree, it is removed from its original position and added to its target position.</span></span> <span data-ttu-id="00046-117">如需有關插入節點的詳細資訊，請參閱[節點插入 XML 文件](~/docs/standard/data/xml/inserting-nodes-into-an-xml-document.md)。</span><span class="sxs-lookup"><span data-stu-id="00046-117">For more information about inserting nodes, see [Inserting Nodes into an XML Document](~/docs/standard/data/xml/inserting-nodes-into-an-xml-document.md).</span></span>  
  
 <span data-ttu-id="00046-118">如果要插入的節點建立另一個文件中，您可以使用<xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=nameWithType>匯入目前的文件的節點。</span><span class="sxs-lookup"><span data-stu-id="00046-118">If the node being inserted was created from another document, you can use <xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=nameWithType> to import the node to the current document.</span></span> <span data-ttu-id="00046-119">匯入的節點則可以插入至目前的文件。</span><span class="sxs-lookup"><span data-stu-id="00046-119">The imported node can then be inserted into the current document.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00046-120">下列範例會將 XML 文件中的新節點。</span><span class="sxs-lookup"><span data-stu-id="00046-120">The following example adds a new node to the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.AppendChild Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.AppendChild Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.AppendChild Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.AppendChild Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.AppendChild Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.AppendChild Example/VB/source.vb#1)]  
  
 <span data-ttu-id="00046-121">**輸出：**</span><span class="sxs-lookup"><span data-stu-id="00046-121">**Output:**</span></span>  
  
```  
Display the modified XML...  
<?xml version="1.0" encoding="IBM437"?>  
<book genre="novel" ISBN="1-861001-57-5">  
  <title>Pride And Prejudice</title>  
  <price>19.95</price>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="00046-122">這個節點的型別不允許 <paramref name="newChild" /> 節點型別的子節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-122">This node is of a type that does not allow child nodes of the type of the <paramref name="newChild" /> node.</span>
          </span>
          <span data-ttu-id="00046-123">
            <paramref name="newChild" /> 是這個節點的上階。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-123">The <paramref name="newChild" /> is an ancestor of this node.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="00046-124">
            <paramref name="newChild" /> 由不同於建立這個節點的另一份文件所建立。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-124">The <paramref name="newChild" /> was created from a different document than the one that created this node.</span>
          </span>
          <span data-ttu-id="00046-125">這個節點是唯讀的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-125">This node is read-only.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="00046-126">
            <para>當覆寫<see langword="AppendChild" />衍生類別中，要正確地引發事件以便您必須呼叫<see langword="AppendChild" />基底類別的方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-126">
              <para>When overriding <see langword="AppendChild" /> in a derived class, in order for events to be raised correctly, you must call the <see langword="AppendChild" /> method of the base class.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Xml.XmlDocument.ImportNode(System.Xml.XmlNode,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlAttributeCollection Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlAttributeCollection Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Attributes As XmlAttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlAttributeCollection ^ Attributes { System::Xml::XmlAttributeCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.Xml.XmlAttributeCollection" Usage="System.Xml.XmlNode.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttributeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="00046-127">取得包含這個節點屬性 (Attribute) 的 <see cref="T:System.Xml.XmlAttributeCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-127">Gets an <see cref="T:System.Xml.XmlAttributeCollection" /> containing the attributes of this node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="00046-128">
            <see langword="XmlAttributeCollection" />，包含這個節點的屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-128">An <see langword="XmlAttributeCollection" /> containing the attributes of the node.</span>
          </span>
          <span data-ttu-id="00046-129">如果這個節點的類型為 XmlNodeType.Element，則傳回這個節點的屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-129">If the node is of type XmlNodeType.Element, the attributes of the node are returned.</span>
          </span>
          <span data-ttu-id="00046-130">否則，這個函式會傳回 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-130">Otherwise, this property returns <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="00046-131">下列範例會將 XML 文件中的新屬性。</span><span class="sxs-lookup"><span data-stu-id="00046-131">The following example adds a new attribute to the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.GetNamespaceOfPrefix Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.GetNamespaceOfPrefix Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.GetNamespaceOfPrefix Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.GetNamespaceOfPrefix Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.GetNamespaceOfPrefix Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.GetNamespaceOfPrefix Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseURI">
      <MemberSignature Language="C#" Value="public virtual string BaseURI { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseURI" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.BaseURI" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property BaseURI As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ BaseURI { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseURI : string" Usage="System.Xml.XmlNode.BaseURI" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="00046-132">取得目前節點的基底 (Base) URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-132">Gets the base URI of the current node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="00046-133">節點載入的位置；如果節點沒有基底 URI，則為 String.Empty。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-133">The location from which the node was loaded or String.Empty if the node has no base URI.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00046-134">網路上的 XML 文件使用不同的 W3C 標準包含機制進行彙總的資料區塊所組成，並因此會包含來自不同位置的節點。</span><span class="sxs-lookup"><span data-stu-id="00046-134">A networked XML document is comprised of chunks of data aggregated using various W3C standard inclusion mechanisms and therefore contains nodes that come from different places.</span></span> <span data-ttu-id="00046-135">`BaseURI`會告訴您這些節點的來源。</span><span class="sxs-lookup"><span data-stu-id="00046-135">The `BaseURI` tells you where these nodes came from.</span></span>  
  
 <span data-ttu-id="00046-136">這個屬性的值需視節點類型而異。</span><span class="sxs-lookup"><span data-stu-id="00046-136">The value of this property varies depending on the node type.</span></span> <span data-ttu-id="00046-137">例如，文件節點傳回的位置<xref:System.Xml.XmlDocument>物件。</span><span class="sxs-lookup"><span data-stu-id="00046-137">For example, Document nodes return the location of the <xref:System.Xml.XmlDocument> object.</span></span> <span data-ttu-id="00046-138">也就是外部的 EntityReference 節點的子節點的節點會傳回實體本身的位置。</span><span class="sxs-lookup"><span data-stu-id="00046-138">Nodes which are child nodes of external EntityReference nodes return the location of the entity itself.</span></span> <span data-ttu-id="00046-139">例如，請考慮下列的 XML 文件：</span><span class="sxs-lookup"><span data-stu-id="00046-139">For example, consider the following XML document:</span></span>  
  
```xml  
<!DOCTYPE item [  
<!ENTITY xyz SYSTEM "a/b.xml">  
]>  
<item num='123'>&xyz;</item>  
```  
  
 <span data-ttu-id="00046-140">其中的外部實體`a/b.xml`包含 XML 文字： `<test>123</test>`。</span><span class="sxs-lookup"><span data-stu-id="00046-140">where the external entity `a/b.xml` contains the XML text: `<test>123</test>`.</span></span>  
  
 <span data-ttu-id="00046-141">如果文件從載入http://server/mydata.xml，`BaseURI`會傳回下列：</span><span class="sxs-lookup"><span data-stu-id="00046-141">If the document is loaded from http://server/mydata.xml, `BaseURI` returns the following:</span></span>  
  
|<span data-ttu-id="00046-142">NodeType</span><span class="sxs-lookup"><span data-stu-id="00046-142">NodeType</span></span>|<span data-ttu-id="00046-143">名稱</span><span class="sxs-lookup"><span data-stu-id="00046-143">Name</span></span>|<span data-ttu-id="00046-144">BaseURI</span><span class="sxs-lookup"><span data-stu-id="00046-144">BaseURI</span></span>|  
|--------------|----------|-------------|  
|<span data-ttu-id="00046-145">屬性</span><span class="sxs-lookup"><span data-stu-id="00046-145">Attribute</span></span>|<span data-ttu-id="00046-146">num</span><span class="sxs-lookup"><span data-stu-id="00046-146">num</span></span>|http://server/mydata.xml|  
|<span data-ttu-id="00046-147">文件</span><span class="sxs-lookup"><span data-stu-id="00046-147">Document</span></span>|<span data-ttu-id="00046-148">#document</span><span class="sxs-lookup"><span data-stu-id="00046-148">#document</span></span>|http://server/mydata.xml|  
|<span data-ttu-id="00046-149">DocumentType</span><span class="sxs-lookup"><span data-stu-id="00046-149">DocumentType</span></span>|<span data-ttu-id="00046-150">項目</span><span class="sxs-lookup"><span data-stu-id="00046-150">item</span></span>|http://server/mydata.xml|  
|<span data-ttu-id="00046-151">實體</span><span class="sxs-lookup"><span data-stu-id="00046-151">Entity</span></span>|<span data-ttu-id="00046-152">xyz</span><span class="sxs-lookup"><span data-stu-id="00046-152">xyz</span></span>|http://server/mydata.xml|  
|<span data-ttu-id="00046-153">元素</span><span class="sxs-lookup"><span data-stu-id="00046-153">Element</span></span>|<span data-ttu-id="00046-154">項目</span><span class="sxs-lookup"><span data-stu-id="00046-154">item</span></span>|http://server/mydata.xml|  
|<span data-ttu-id="00046-155">EntityReference</span><span class="sxs-lookup"><span data-stu-id="00046-155">EntityReference</span></span>|<span data-ttu-id="00046-156">xyz</span><span class="sxs-lookup"><span data-stu-id="00046-156">xyz</span></span>|http://server/mydata.xml|  
|<span data-ttu-id="00046-157">元素</span><span class="sxs-lookup"><span data-stu-id="00046-157">Element</span></span>|<span data-ttu-id="00046-158">測試</span><span class="sxs-lookup"><span data-stu-id="00046-158">test</span></span>|http://server/a/b.xml|  
|<span data-ttu-id="00046-159">Text</span><span class="sxs-lookup"><span data-stu-id="00046-159">Text</span></span>|<span data-ttu-id="00046-160">#text</span><span class="sxs-lookup"><span data-stu-id="00046-160">#text</span></span>|http://server/a/b.xml|  
  
 <span data-ttu-id="00046-161">`BaseURI` 因此展開實體，則這項資訊不會保留，而且此屬性傳回的位置，尋找實體參考界限，`XmlDocument`在所有情況下的物件。</span><span class="sxs-lookup"><span data-stu-id="00046-161">`BaseURI` looks for entity reference boundaries, so if entities are expanded this information is not preserved and this property returns the location of the `XmlDocument` object in all cases.</span></span>  
  
 <span data-ttu-id="00046-162">第二個範例中，指定下列的 XML 文件：</span><span class="sxs-lookup"><span data-stu-id="00046-162">As a second example, given the following XML document:</span></span>  
  
```xml  
<!DOCTYPE Mydata SYSTEM "http://localhost/doctype.dtd">  
<baa>&xyz;</baa>  
```  
  
 <span data-ttu-id="00046-163">其中的 DTD 檔案包含下列：</span><span class="sxs-lookup"><span data-stu-id="00046-163">where the DTD file contains the following:</span></span>  
  
```  
<!ENTITY xyz <E1>My Data</E1>  
<!ELEMENT baa #PCDATA>  
<!ATTLIST baa attr1 "woof">  
```  
  
 <span data-ttu-id="00046-164">如果 XML 文件從載入http://localhost/mydata.xml，`BaseURI`會傳回下列每個節點：</span><span class="sxs-lookup"><span data-stu-id="00046-164">If the XML document is loaded from http://localhost/mydata.xml, `BaseURI` returns the following for each of the nodes:</span></span>  
  
|<span data-ttu-id="00046-165">NodeType</span><span class="sxs-lookup"><span data-stu-id="00046-165">NodeType</span></span>|<span data-ttu-id="00046-166">名稱</span><span class="sxs-lookup"><span data-stu-id="00046-166">Name</span></span>|<span data-ttu-id="00046-167">BaseURI</span><span class="sxs-lookup"><span data-stu-id="00046-167">BaseURI</span></span>|  
|--------------|----------|-------------|  
|<span data-ttu-id="00046-168">文件</span><span class="sxs-lookup"><span data-stu-id="00046-168">Document</span></span>|<span data-ttu-id="00046-169">#document</span><span class="sxs-lookup"><span data-stu-id="00046-169">#document</span></span>|http://localhost/mydata.xml|  
|<span data-ttu-id="00046-170">DocumentType</span><span class="sxs-lookup"><span data-stu-id="00046-170">DocumentType</span></span>|<span data-ttu-id="00046-171">Mydata</span><span class="sxs-lookup"><span data-stu-id="00046-171">Mydata</span></span>|http://localhost/mydata.xml<br /><br /> <span data-ttu-id="00046-172"><xref:System.Xml.XmlDocumentType.SystemId%2A?displayProperty=nameWithType>或<xref:System.Xml.XmlDocumentType.PublicId%2A?displayProperty=nameWithType>屬性可用來識別的 DTD 檔案已從載入。</span><span class="sxs-lookup"><span data-stu-id="00046-172">The <xref:System.Xml.XmlDocumentType.SystemId%2A?displayProperty=nameWithType> or <xref:System.Xml.XmlDocumentType.PublicId%2A?displayProperty=nameWithType> properties can be used to identify where the DTD file was loaded from.</span></span>|  
|<span data-ttu-id="00046-173">元素</span><span class="sxs-lookup"><span data-stu-id="00046-173">Element</span></span>|<span data-ttu-id="00046-174">baa</span><span class="sxs-lookup"><span data-stu-id="00046-174">baa</span></span>|http://localhost/mydata.xml|  
|<span data-ttu-id="00046-175">實體</span><span class="sxs-lookup"><span data-stu-id="00046-175">Entity</span></span>|<span data-ttu-id="00046-176">xyz</span><span class="sxs-lookup"><span data-stu-id="00046-176">xyz</span></span>|http://localhost/doctype.dtd|  
|<span data-ttu-id="00046-177">EntityReference</span><span class="sxs-lookup"><span data-stu-id="00046-177">EntityReference</span></span>|<span data-ttu-id="00046-178">xyz</span><span class="sxs-lookup"><span data-stu-id="00046-178">xyz</span></span>|http://localhost/mydata.xml|  
|<span data-ttu-id="00046-179">屬性</span><span class="sxs-lookup"><span data-stu-id="00046-179">Attribute</span></span>|<span data-ttu-id="00046-180">woof</span><span class="sxs-lookup"><span data-stu-id="00046-180">woof</span></span>|http://localhost/mydata.xml|  
  
> [!NOTE]
>  <span data-ttu-id="00046-181">預設屬性的基底 URI 是其所屬的項目基底 URI 相同。</span><span class="sxs-lookup"><span data-stu-id="00046-181">The base URI of a default attribute is the same as the base URI of the element to which they belong.</span></span>  
  
 <span data-ttu-id="00046-182">這個屬性是文件物件模型的 Microsoft 擴充功能。</span><span class="sxs-lookup"><span data-stu-id="00046-182">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChildNodes">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNodeList ChildNodes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNodeList ChildNodes" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.ChildNodes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ChildNodes As XmlNodeList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNodeList ^ ChildNodes { System::Xml::XmlNodeList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ChildNodes : System.Xml.XmlNodeList" Usage="System.Xml.XmlNode.ChildNodes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="00046-183">取得節點的所有子節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-183">Gets all the child nodes of the node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="00046-184">物件，包含節點的所有子節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-184">An object that contains all the child nodes of the node.</span>
          </span>
          <span data-ttu-id="00046-185">如果沒有子節點，這個屬性傳回空的 <see cref="T:System.Xml.XmlNodeList" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-185">If there are no child nodes, this property returns an empty <see cref="T:System.Xml.XmlNodeList" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00046-186">子節點的相關資訊，請參閱[W3C DOM （核心） 層級 1 規格](https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html)</span><span class="sxs-lookup"><span data-stu-id="00046-186">For information about child nodes, see the [W3C DOM (Core) Level 1 specification](https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00046-187">下列範例會顯示根項目的所有子節點。</span><span class="sxs-lookup"><span data-stu-id="00046-187">The following example displays all the child nodes of the root element.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.HasChildNodes Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.HasChildNodes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.HasChildNodes Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.HasChildNodes Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.HasChildNodes Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.HasChildNodes Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; System.Xml.XmlNode&#xA;override this.Clone : unit -&gt; System.Xml.XmlNode" Usage="xmlNode.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="00046-188">建立這個節點的複本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-188">Creates a duplicate of this node.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="00046-189">複製的節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-189">The cloned node.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00046-190">複製<xref:System.Xml.XmlElement>複製所有屬性和其值，包括產生的 XML 處理器來代表預設的屬性。</span><span class="sxs-lookup"><span data-stu-id="00046-190">Cloning an <xref:System.Xml.XmlElement> copies all attributes and their values, including those generated by the XML processor to represent defaulted attributes.</span></span> <span data-ttu-id="00046-191">此方法以遞迴方式複製的節點和其下的樹狀子目錄。</span><span class="sxs-lookup"><span data-stu-id="00046-191">This method recursively clones the node and the subtree underneath it.</span></span>  
  
 <span data-ttu-id="00046-192">`Clone` 相當於呼叫`CloneNode(true)`。</span><span class="sxs-lookup"><span data-stu-id="00046-192">`Clone` is equivalent to calling `CloneNode(true)`.</span></span>  
  
 <span data-ttu-id="00046-193">下表針對每個描述的特定行為<xref:System.Xml.XmlNodeType>。</span><span class="sxs-lookup"><span data-stu-id="00046-193">The following table describes the specific behavior for each <xref:System.Xml.XmlNodeType>.</span></span>  
  
|<span data-ttu-id="00046-194">XmlNodeType</span><span class="sxs-lookup"><span data-stu-id="00046-194">XmlNodeType</span></span>|<span data-ttu-id="00046-195">複製</span><span class="sxs-lookup"><span data-stu-id="00046-195">Clone</span></span>|  
|-----------------|-----------|  
|<span data-ttu-id="00046-196">屬性</span><span class="sxs-lookup"><span data-stu-id="00046-196">Attribute</span></span>|<span data-ttu-id="00046-197">複製屬性節點，包含子節點。</span><span class="sxs-lookup"><span data-stu-id="00046-197">Clones the attribute node, including child nodes.</span></span>|  
|<span data-ttu-id="00046-198">CData</span><span class="sxs-lookup"><span data-stu-id="00046-198">CData</span></span>|<span data-ttu-id="00046-199">複製 CData 節點，包括其資料內容。</span><span class="sxs-lookup"><span data-stu-id="00046-199">Clones the CData node, including its data content.</span></span>|  
|<span data-ttu-id="00046-200">註解</span><span class="sxs-lookup"><span data-stu-id="00046-200">Comment</span></span>|<span data-ttu-id="00046-201">複製註解節點，包括其文字內容。</span><span class="sxs-lookup"><span data-stu-id="00046-201">Clones the comment node, including its text content.</span></span>|  
|<span data-ttu-id="00046-202">文件</span><span class="sxs-lookup"><span data-stu-id="00046-202">Document</span></span>|<span data-ttu-id="00046-203">複製文件節點，包括任何子節點。</span><span class="sxs-lookup"><span data-stu-id="00046-203">Clones the document node, including any child nodes.</span></span>|  
|<span data-ttu-id="00046-204">DocumentFragment</span><span class="sxs-lookup"><span data-stu-id="00046-204">DocumentFragment</span></span>|<span data-ttu-id="00046-205">複製文件片段節點，包括任何子節點。</span><span class="sxs-lookup"><span data-stu-id="00046-205">Clones the document fragment node, including any child nodes.</span></span>|  
|<span data-ttu-id="00046-206">DocumentType</span><span class="sxs-lookup"><span data-stu-id="00046-206">DocumentType</span></span>|<span data-ttu-id="00046-207">複製文件類型節點。</span><span class="sxs-lookup"><span data-stu-id="00046-207">Clones the document type node.</span></span>|  
|<span data-ttu-id="00046-208">元素</span><span class="sxs-lookup"><span data-stu-id="00046-208">Element</span></span>|<span data-ttu-id="00046-209">複製項目節點、 其屬性和任何子節點。</span><span class="sxs-lookup"><span data-stu-id="00046-209">Clones the element node, its attributes, and any child nodes.</span></span>|  
|<span data-ttu-id="00046-210">實體</span><span class="sxs-lookup"><span data-stu-id="00046-210">Entity</span></span>|<span data-ttu-id="00046-211">無法複製 Entity 節點。</span><span class="sxs-lookup"><span data-stu-id="00046-211">Entity nodes cannot be cloned.</span></span>|  
|<span data-ttu-id="00046-212">EntityReference</span><span class="sxs-lookup"><span data-stu-id="00046-212">EntityReference</span></span>|<span data-ttu-id="00046-213">複製實體參考節點。</span><span class="sxs-lookup"><span data-stu-id="00046-213">Clones the entity reference node.</span></span> <span data-ttu-id="00046-214">不包括取代文字。</span><span class="sxs-lookup"><span data-stu-id="00046-214">The replacement text is not included.</span></span>|  
|<span data-ttu-id="00046-215">Notation</span><span class="sxs-lookup"><span data-stu-id="00046-215">Notation</span></span>|<span data-ttu-id="00046-216">標記法節點無法複製。</span><span class="sxs-lookup"><span data-stu-id="00046-216">Notation nodes cannot be cloned.</span></span>|  
|<span data-ttu-id="00046-217">ProcessingInstruction</span><span class="sxs-lookup"><span data-stu-id="00046-217">ProcessingInstruction</span></span>|<span data-ttu-id="00046-218">複製處理指示節點，包括其目標和資料。</span><span class="sxs-lookup"><span data-stu-id="00046-218">Clones the processing instruction node, including its target and data.</span></span>|  
|<span data-ttu-id="00046-219">SignificantWhitespace</span><span class="sxs-lookup"><span data-stu-id="00046-219">SignificantWhitespace</span></span>|<span data-ttu-id="00046-220">複製顯著泛空白字元節點，包括其資料值。</span><span class="sxs-lookup"><span data-stu-id="00046-220">Clones the significant white space node, including its data value.</span></span>|  
|<span data-ttu-id="00046-221">Text</span><span class="sxs-lookup"><span data-stu-id="00046-221">Text</span></span>|<span data-ttu-id="00046-222">複製文字節點，包括其資料值。</span><span class="sxs-lookup"><span data-stu-id="00046-222">Clones the text node, including its data value.</span></span>|  
|<span data-ttu-id="00046-223">Whitespace</span><span class="sxs-lookup"><span data-stu-id="00046-223">Whitespace</span></span>|<span data-ttu-id="00046-224">複製泛空白字元節點，包括其資料值。</span><span class="sxs-lookup"><span data-stu-id="00046-224">Clones the white space node, including its data value.</span></span>|  
|<span data-ttu-id="00046-225">XmlDeclaration</span><span class="sxs-lookup"><span data-stu-id="00046-225">XmlDeclaration</span></span>|<span data-ttu-id="00046-226">複製 xml 宣告節點，包括其資料值。</span><span class="sxs-lookup"><span data-stu-id="00046-226">Clones the XmlDeclaration node, including its data value.</span></span>|  
|<span data-ttu-id="00046-227">所有其他節點型別。</span><span class="sxs-lookup"><span data-stu-id="00046-227">All other node types.</span></span>|<span data-ttu-id="00046-228">無法複製這些節點型別。</span><span class="sxs-lookup"><span data-stu-id="00046-228">These node types cannot be cloned.</span></span>|  
  
 <span data-ttu-id="00046-229">這個方法是 Microsoft 擴充功能文件物件模型 (DOM)。</span><span class="sxs-lookup"><span data-stu-id="00046-229">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00046-230">下列範例會複製的 XML 文件的根節點。</span><span class="sxs-lookup"><span data-stu-id="00046-230">The following example clones the root node of the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.Clone Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.Clone Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.Clone Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.Clone Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.Clone Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.Clone Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlNode.CloneNode(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public abstract System.Xml.XmlNode CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CloneNode (deep As Boolean) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Xml::XmlNode ^ CloneNode(bool deep);" />
      <MemberSignature Language="F#" Value="abstract member CloneNode : bool -&gt; System.Xml.XmlNode" Usage="xmlNode.CloneNode deep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">
          <span data-ttu-id="00046-231">若要在指定的節點下遞迴地複製子樹狀結構，則為 <see langword="true" />；若只要複製節點本身，則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-231">
              <see langword="true" /> to recursively clone the subtree under the specified node; <see langword="false" /> to clone only the node itself.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00046-232">在衍生類別中覆寫時，建立節點的複本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-232">Creates a duplicate of the node, when overridden in a derived class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="00046-233">複製的節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-233">The cloned node.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00046-234">這個方法會做為節點的複製建構函式。</span><span class="sxs-lookup"><span data-stu-id="00046-234">This method serves as a copy constructor for nodes.</span></span> <span data-ttu-id="00046-235">重複的節點有沒有父代 (<xref:System.Xml.XmlNode.ParentNode%2A>傳回`null`)。</span><span class="sxs-lookup"><span data-stu-id="00046-235">The duplicate node has no parent (<xref:System.Xml.XmlNode.ParentNode%2A> returns `null`).</span></span>  
  
 <span data-ttu-id="00046-236">下表針對每個描述的特定行為<xref:System.Xml.XmlNodeType>。</span><span class="sxs-lookup"><span data-stu-id="00046-236">The following table describes the specific behavior for each <xref:System.Xml.XmlNodeType>.</span></span>  
  
|<span data-ttu-id="00046-237">XmlNodeType</span><span class="sxs-lookup"><span data-stu-id="00046-237">XmlNodeType</span></span>|<span data-ttu-id="00046-238">CloneNode(true)</span><span class="sxs-lookup"><span data-stu-id="00046-238">CloneNode(true)</span></span>|<span data-ttu-id="00046-239">CloneNode(false)</span><span class="sxs-lookup"><span data-stu-id="00046-239">CloneNode(false)</span></span>|  
|-----------------|-----------------------|------------------------|  
|<span data-ttu-id="00046-240">屬性</span><span class="sxs-lookup"><span data-stu-id="00046-240">Attribute</span></span>|<span data-ttu-id="00046-241">複製屬性節點，包含子節點。</span><span class="sxs-lookup"><span data-stu-id="00046-241">Clones the attribute node, including child nodes.</span></span>|<span data-ttu-id="00046-242">複製屬性節點，包含子節點。</span><span class="sxs-lookup"><span data-stu-id="00046-242">Clones the attribute node, including child nodes.</span></span>|  
|<span data-ttu-id="00046-243">CData</span><span class="sxs-lookup"><span data-stu-id="00046-243">CData</span></span>|<span data-ttu-id="00046-244">複製 CData 節點，包括其資料內容。</span><span class="sxs-lookup"><span data-stu-id="00046-244">Clones the CData node, including its data content.</span></span>|<span data-ttu-id="00046-245">複製 CData 節點，包括其資料內容。</span><span class="sxs-lookup"><span data-stu-id="00046-245">Clones the CData node, including its data content.</span></span>|  
|<span data-ttu-id="00046-246">註解</span><span class="sxs-lookup"><span data-stu-id="00046-246">Comment</span></span>|<span data-ttu-id="00046-247">複製註解節點，包括其文字內容。</span><span class="sxs-lookup"><span data-stu-id="00046-247">Clones the comment node, including its text content.</span></span>|<span data-ttu-id="00046-248">複製註解節點，包括其文字內容。</span><span class="sxs-lookup"><span data-stu-id="00046-248">Clones the comment node, including its text content.</span></span>|  
|<span data-ttu-id="00046-249">文件</span><span class="sxs-lookup"><span data-stu-id="00046-249">Document</span></span>|<span data-ttu-id="00046-250">複製文件節點，包括任何子節點。</span><span class="sxs-lookup"><span data-stu-id="00046-250">Clones the document node, including any child nodes.</span></span>|<span data-ttu-id="00046-251">複製文件節點。</span><span class="sxs-lookup"><span data-stu-id="00046-251">Clones the document node.</span></span>|  
|<span data-ttu-id="00046-252">DocumentFragment</span><span class="sxs-lookup"><span data-stu-id="00046-252">DocumentFragment</span></span>|<span data-ttu-id="00046-253">複製文件片段節點，包括任何子節點。</span><span class="sxs-lookup"><span data-stu-id="00046-253">Clones the document fragment node, including any child nodes.</span></span>|<span data-ttu-id="00046-254">複製文件片段節點。</span><span class="sxs-lookup"><span data-stu-id="00046-254">Clones the document fragment node.</span></span>|  
|<span data-ttu-id="00046-255">DocumentType</span><span class="sxs-lookup"><span data-stu-id="00046-255">DocumentType</span></span>|<span data-ttu-id="00046-256">複製文件類型節點。</span><span class="sxs-lookup"><span data-stu-id="00046-256">Clones the document type node.</span></span>|<span data-ttu-id="00046-257">複製文件類型節點。</span><span class="sxs-lookup"><span data-stu-id="00046-257">Clones the document type node.</span></span>|  
|<span data-ttu-id="00046-258">元素</span><span class="sxs-lookup"><span data-stu-id="00046-258">Element</span></span>|<span data-ttu-id="00046-259">複製項目節點、 其屬性和任何子節點。</span><span class="sxs-lookup"><span data-stu-id="00046-259">Clones the element node, its attributes, and any child nodes.</span></span>|<span data-ttu-id="00046-260">複製項目節點和其屬性，包括任何預設屬性。</span><span class="sxs-lookup"><span data-stu-id="00046-260">Clones the element node and its attributes, including any default attributes.</span></span>|  
|<span data-ttu-id="00046-261">實體</span><span class="sxs-lookup"><span data-stu-id="00046-261">Entity</span></span>|<span data-ttu-id="00046-262">無法複製 Entity 節點。</span><span class="sxs-lookup"><span data-stu-id="00046-262">Entity nodes cannot be cloned.</span></span>|<span data-ttu-id="00046-263">無法複製 Entity 節點。</span><span class="sxs-lookup"><span data-stu-id="00046-263">Entity nodes cannot be cloned.</span></span>|  
|<span data-ttu-id="00046-264">EntityReference</span><span class="sxs-lookup"><span data-stu-id="00046-264">EntityReference</span></span>|<span data-ttu-id="00046-265">複製實體參考節點。</span><span class="sxs-lookup"><span data-stu-id="00046-265">Clones the entity reference node.</span></span> <span data-ttu-id="00046-266">不包括取代文字。</span><span class="sxs-lookup"><span data-stu-id="00046-266">The replacement text is not included.</span></span>|<span data-ttu-id="00046-267">複製實體參考節點。</span><span class="sxs-lookup"><span data-stu-id="00046-267">Clones the entity reference node.</span></span> <span data-ttu-id="00046-268">不包括取代文字。</span><span class="sxs-lookup"><span data-stu-id="00046-268">The replacement text is not included.</span></span>|  
|<span data-ttu-id="00046-269">Notation</span><span class="sxs-lookup"><span data-stu-id="00046-269">Notation</span></span>|<span data-ttu-id="00046-270">標記法節點無法複製。</span><span class="sxs-lookup"><span data-stu-id="00046-270">Notation nodes cannot be cloned.</span></span>|<span data-ttu-id="00046-271">標記法節點無法複製。</span><span class="sxs-lookup"><span data-stu-id="00046-271">Notation nodes cannot be cloned.</span></span>|  
|<span data-ttu-id="00046-272">ProcessingInstruction</span><span class="sxs-lookup"><span data-stu-id="00046-272">ProcessingInstruction</span></span>|<span data-ttu-id="00046-273">複製處理指示節點，包括其目標和資料。</span><span class="sxs-lookup"><span data-stu-id="00046-273">Clones the processing instruction node, including its target and data.</span></span>|<span data-ttu-id="00046-274">複製處理指示節點，包括其目標和資料。</span><span class="sxs-lookup"><span data-stu-id="00046-274">Clones the processing instruction node, including its target and data.</span></span>|  
|<span data-ttu-id="00046-275">SignificantWhitespace</span><span class="sxs-lookup"><span data-stu-id="00046-275">SignificantWhitespace</span></span>|<span data-ttu-id="00046-276">複製顯著泛空白字元節點，包括其資料值。</span><span class="sxs-lookup"><span data-stu-id="00046-276">Clones the significant white space node, including its data value.</span></span>|<span data-ttu-id="00046-277">複製顯著泛空白字元節點，包括其資料值。</span><span class="sxs-lookup"><span data-stu-id="00046-277">Clones the significant white space node, including its data value.</span></span>|  
|<span data-ttu-id="00046-278">Text</span><span class="sxs-lookup"><span data-stu-id="00046-278">Text</span></span>|<span data-ttu-id="00046-279">複製文字節點，包括其資料值。</span><span class="sxs-lookup"><span data-stu-id="00046-279">Clones the text node, including its data value.</span></span>|<span data-ttu-id="00046-280">複製文字節點，包括其資料值。</span><span class="sxs-lookup"><span data-stu-id="00046-280">Clones the text node, including its data value.</span></span>|  
|<span data-ttu-id="00046-281">Whitespace</span><span class="sxs-lookup"><span data-stu-id="00046-281">Whitespace</span></span>|<span data-ttu-id="00046-282">複製泛空白字元節點，包括其資料值。</span><span class="sxs-lookup"><span data-stu-id="00046-282">Clones the white space node, including its data value.</span></span>|<span data-ttu-id="00046-283">複製泛空白字元節點，包括其資料值。</span><span class="sxs-lookup"><span data-stu-id="00046-283">Clones the white space node, including its data value.</span></span>|  
|<span data-ttu-id="00046-284">XmlDeclaration</span><span class="sxs-lookup"><span data-stu-id="00046-284">XmlDeclaration</span></span>|<span data-ttu-id="00046-285">複製 xml 宣告節點，包括其資料值。</span><span class="sxs-lookup"><span data-stu-id="00046-285">Clones the XmlDeclaration node, including its data value.</span></span>|<span data-ttu-id="00046-286">複製 xml 宣告節點，包括其資料值。</span><span class="sxs-lookup"><span data-stu-id="00046-286">Clones the XmlDeclaration node, including its data value.</span></span>|  
|<span data-ttu-id="00046-287">所有其他節點型別。</span><span class="sxs-lookup"><span data-stu-id="00046-287">All other node types.</span></span>|<span data-ttu-id="00046-288">無法複製這些節點型別。</span><span class="sxs-lookup"><span data-stu-id="00046-288">These node types cannot be cloned.</span></span>|<span data-ttu-id="00046-289">無法複製這些節點型別。</span><span class="sxs-lookup"><span data-stu-id="00046-289">These node types cannot be cloned.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="00046-290">下列範例說明深層和淺層複製之間的差異。</span><span class="sxs-lookup"><span data-stu-id="00046-290">The following example shows the difference between a deep and shallow clone.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.CloneNode Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.CloneNode Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.CloneNode Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.CloneNode Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.CloneNode Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.CloneNode Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="00046-291">在無法複製的節點型別上，呼叫這個方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-291">Calling this method on a node type that cannot be cloned.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateNavigator">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XPath.XPathNavigator CreateNavigator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XPath.XPathNavigator CreateNavigator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.CreateNavigator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateNavigator () As XPathNavigator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XPath::XPathNavigator ^ CreateNavigator();" />
      <MemberSignature Language="F#" Value="abstract member CreateNavigator : unit -&gt; System.Xml.XPath.XPathNavigator&#xA;override this.CreateNavigator : unit -&gt; System.Xml.XPath.XPathNavigator" Usage="xmlNode.CreateNavigator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.XPath.IXPathNavigable.CreateNavigator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNavigator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="00046-292">建立 <see cref="T:System.Xml.XPath.XPathNavigator" /> 以瀏覽這個物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-292">Creates an <see cref="T:System.Xml.XPath.XPathNavigator" /> for navigating this object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="00046-293">用來巡覽節點的 <see langword="XPathNavigator" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-293">An <see langword="XPathNavigator" /> object used to navigate the node.</span>
          </span>
          <span data-ttu-id="00046-294">
            <see langword="XPathNavigator" /> 位於這個節點上，在此節點呼叫此方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-294">The <see langword="XPathNavigator" /> is positioned on the node from which the method was called.</span>
          </span>
          <span data-ttu-id="00046-295">它並非位於文件的根。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-295">It is not positioned on the root of the document.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00046-296">`XPathNavigator`提供唯讀隨機存取資料。</span><span class="sxs-lookup"><span data-stu-id="00046-296">The `XPathNavigator` provides read-only, random access to data.</span></span> <span data-ttu-id="00046-297">因為它適合的 XSLT 轉換，它會提供效能優勢時做為輸入機制<xref:System.Xml.Xsl.XslTransform.Transform%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="00046-297">Because it is optimized for XSLT transformations, it provides performance benefits when used as an input mechanism to the <xref:System.Xml.Xsl.XslTransform.Transform%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="00046-298">這個方法是 Microsoft 擴充功能文件物件模型 (DOM)。</span><span class="sxs-lookup"><span data-stu-id="00046-298">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00046-299">下列範例會載入並編輯 XML 文件執行 XSLT 轉換之前。</span><span class="sxs-lookup"><span data-stu-id="00046-299">The following example loads and edits an XML document before performing an XSLT transform.</span></span>  
  
 [!code-cpp[XslTransform.Transform2#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Transform2/CPP/trans_snip.cpp#1)]
 [!code-csharp[XslTransform.Transform2#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform2/CS/trans_snip.cs#1)]
 [!code-vb[XslTransform.Transform2#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform2/VB/trans_snip.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Xsl.XslTransform" />
      </Docs>
    </Member>
    <Member MemberName="FirstChild">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode FirstChild { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNode FirstChild" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.FirstChild" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property FirstChild As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNode ^ FirstChild { System::Xml::XmlNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FirstChild : System.Xml.XmlNode" Usage="System.Xml.XmlNode.FirstChild" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="00046-300">取得節點的第一個子節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-300">Gets the first child of the node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="00046-301">節點的第一個子節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-301">The first child of the node.</span>
          </span>
          <span data-ttu-id="00046-302">如果沒有這種節點，則會傳回 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-302">If there is no such node, <see langword="null" /> is returned.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00046-303">子節點的相關資訊，請參閱[W3C DOM （核心） 層級 1 規格](https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html)</span><span class="sxs-lookup"><span data-stu-id="00046-303">For information about child nodes, see the [W3C DOM (Core) Level 1 specification](https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00046-304">下列範例顯示的標題項目。</span><span class="sxs-lookup"><span data-stu-id="00046-304">The following example displays the title element.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.FirstChild Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.FirstChild Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.FirstChild Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.FirstChild Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.FirstChild Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.FirstChild Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="xmlNode.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="00046-305">取得逐一查看目前節點中子節點的列舉程式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-305">Get an enumerator that iterates through the child nodes in the current node.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="00046-306">
            <see cref="T:System.Collections.IEnumerator" /> 物件，可用來逐一查看目前節點中的子節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-306">An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the child nodes in the current node.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00046-307">支援的"for each"樣式反覆項目中的節點`XmlNode`。</span><span class="sxs-lookup"><span data-stu-id="00046-307">Provides support for the "for each" style iteration over the nodes in the `XmlNode`.</span></span>  
  
 <span data-ttu-id="00046-308">這個方法是 Microsoft 擴充功能文件物件模型 (DOM)。</span><span class="sxs-lookup"><span data-stu-id="00046-308">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00046-309">下列範例顯示 XML 文件中的所有書籍。</span><span class="sxs-lookup"><span data-stu-id="00046-309">The following example displays all the books in the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.GetEnumerator Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.GetEnumerator Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.GetEnumerator Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.GetEnumerator Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.GetEnumerator Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.GetEnumerator Example/VB/source.vb#1)]  
  
 <span data-ttu-id="00046-310">此範例會使用該檔案，`books.xml`作為輸入。</span><span class="sxs-lookup"><span data-stu-id="00046-310">The example uses the file, `books.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlNode.GetEnumerator Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlNode.GetEnumerator Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNamespaceOfPrefix">
      <MemberSignature Language="C#" Value="public virtual string GetNamespaceOfPrefix (string prefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetNamespaceOfPrefix(string prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNamespaceOfPrefix (prefix As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetNamespaceOfPrefix(System::String ^ prefix);" />
      <MemberSignature Language="F#" Value="abstract member GetNamespaceOfPrefix : string -&gt; string&#xA;override this.GetNamespaceOfPrefix : string -&gt; string" Usage="xmlNode.GetNamespaceOfPrefix prefix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">
          <span data-ttu-id="00046-311">您要尋找其命名空間 URI 的前置詞。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-311">The prefix whose namespace URI you want to find.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00046-312">查閱目前節點範圍內最接近指定前置詞的 **xmlns** 宣告，並傳回宣告中的命名空間 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-312">Looks up the closest **xmlns** declaration for the given prefix that is in scope for the current node and returns the namespace URI in the declaration.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="00046-313">指定前置詞的命名空間 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-313">The namespace URI of the specified prefix.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00046-314">這個方法是 Microsoft 擴充功能文件物件模型 (DOM)。</span><span class="sxs-lookup"><span data-stu-id="00046-314">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00046-315">下列範例會將 XML 文件中的新屬性。</span><span class="sxs-lookup"><span data-stu-id="00046-315">The following example adds a new attribute to the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.GetNamespaceOfPrefix Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.GetNamespaceOfPrefix Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.GetNamespaceOfPrefix Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.GetNamespaceOfPrefix Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.GetNamespaceOfPrefix Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.GetNamespaceOfPrefix Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrefixOfNamespace">
      <MemberSignature Language="C#" Value="public virtual string GetPrefixOfNamespace (string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetPrefixOfNamespace(string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.GetPrefixOfNamespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPrefixOfNamespace (namespaceURI As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetPrefixOfNamespace(System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="abstract member GetPrefixOfNamespace : string -&gt; string&#xA;override this.GetPrefixOfNamespace : string -&gt; string" Usage="xmlNode.GetPrefixOfNamespace namespaceURI" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="namespaceURI">
          <span data-ttu-id="00046-316">您要尋找其前置詞的命名空間 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-316">The namespace URI whose prefix you want to find.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00046-317">查閱目前節點範圍內最接近指定命名空間 URI 的 **xmlns** 宣告，並傳回宣告中所定義的前置詞。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-317">Looks up the closest **xmlns** declaration for the given namespace URI that is in scope for the current node and returns the prefix defined in that declaration.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="00046-318">指定命名空間 URI 的前置詞。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-318">The prefix for the specified namespace URI.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00046-319">這個方法是 Microsoft 擴充功能文件物件模型 (DOM)。</span><span class="sxs-lookup"><span data-stu-id="00046-319">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00046-320">下列範例會將 XML 文件中的新項目。</span><span class="sxs-lookup"><span data-stu-id="00046-320">The following example adds a new element to the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.GetPrefixOfNamespace Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.GetPrefixOfNamespace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.GetPrefixOfNamespace Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.GetPrefixOfNamespace Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.GetPrefixOfNamespace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.GetPrefixOfNamespace Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasChildNodes">
      <MemberSignature Language="C#" Value="public virtual bool HasChildNodes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasChildNodes" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.HasChildNodes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasChildNodes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasChildNodes { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasChildNodes : bool" Usage="System.Xml.XmlNode.HasChildNodes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="00046-321">取得值，指出這個節點是否有子節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-321">Gets a value indicating whether this node has any child nodes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="00046-322">如果該節點有子節點，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-322">
              <see langword="true" /> if the node has child nodes; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00046-323">子節點的相關資訊，請參閱[W3C DOM （核心） 層級 1 規格](https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html)</span><span class="sxs-lookup"><span data-stu-id="00046-323">For information about child nodes, see the [W3C DOM (Core) Level 1 specification](https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00046-324">下列範例會顯示根項目的所有子節點。</span><span class="sxs-lookup"><span data-stu-id="00046-324">The following example displays all the child nodes of the root element.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.HasChildNodes Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.HasChildNodes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.HasChildNodes Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.HasChildNodes Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.HasChildNodes Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.HasChildNodes Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InnerText">
      <MemberSignature Language="C#" Value="public virtual string InnerText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InnerText" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.InnerText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property InnerText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InnerText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InnerText : string with get, set" Usage="System.Xml.XmlNode.InnerText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="00046-325">取得或設定節點和其所有子節點的串連值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-325">Gets or sets the concatenated values of the node and all its child nodes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="00046-326">節點和其所有子節點的串連值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-326">The concatenated values of the node and all its child nodes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00046-327">設定這個屬性取代的指定字串的已剖析內容的所有子節點。</span><span class="sxs-lookup"><span data-stu-id="00046-327">Setting this property replaces all the child nodes with the parsed contents of the given string.</span></span>  
  
 <span data-ttu-id="00046-328">分葉節點，如`InnerText`會傳回相同的內容<xref:System.Xml.XmlNode.Value%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="00046-328">For leaf nodes, `InnerText` returns the same content as the <xref:System.Xml.XmlNode.Value%2A> property.</span></span>  
  
 <span data-ttu-id="00046-329">這個屬性是文件物件模型的 Microsoft 擴充功能。</span><span class="sxs-lookup"><span data-stu-id="00046-329">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00046-330">下列範例會比較`InnerText`和<xref:System.Xml.XmlNode.InnerXml%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="00046-330">The following example compares the `InnerText` and <xref:System.Xml.XmlNode.InnerXml%2A> properties.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.InnerText Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.InnerText Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.InnerText Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.InnerText Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.InnerText Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.InnerText Example/VB/source.vb#1)]  
  
 <span data-ttu-id="00046-331">**輸出：**</span><span class="sxs-lookup"><span data-stu-id="00046-331">**Output:**</span></span>  
  
```  
Display the InnerText of the element...  
some textmore text  
Display the InnerXml of the element...  
some text<child />more text  
<elem>Text containing &lt;markup/&gt; will have char(&lt;) and char(&gt;) escape  
d.</elem>  
<elem>Text containing <markup />.</elem>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InnerXml">
      <MemberSignature Language="C#" Value="public virtual string InnerXml { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InnerXml" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.InnerXml" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property InnerXml As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InnerXml { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InnerXml : string with get, set" Usage="System.Xml.XmlNode.InnerXml" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="00046-332">取得或設定只表示這個節點之子節點的標記。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-332">Gets or sets the markup representing only the child nodes of this node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="00046-333">這個節點之子節點的標記。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-333">The markup of the child nodes of this node.</span>
          </span>
          <span data-ttu-id="00046-334">
            <block subset="none" type="note">
              <para>
                <see langword="InnerXml" /> 不會傳回預設屬性。  </para>
            </block>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-334">
              <block subset="none" type="note">
                <para>
                  <see langword="InnerXml" /> does not return default attributes.  </para>
              </block>
            </span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00046-335">嘗試設定這個屬性的節點不能有子節點，例如文字節點，會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="00046-335">Attempting to set this property from a node that cannot have child nodes, for example a Text node, throws an exception.</span></span> <span data-ttu-id="00046-336">否則，請設定`InnerXml`的子節點，節點中，取代指定的字串的已剖析內容。</span><span class="sxs-lookup"><span data-stu-id="00046-336">Otherwise, setting `InnerXml` replaces the child nodes, of the node, with the parsed contents of the given string.</span></span> <span data-ttu-id="00046-337">剖析會在目前命名空間內容中完成。</span><span class="sxs-lookup"><span data-stu-id="00046-337">The parsing is done in the current namespace context.</span></span>  
  
 <span data-ttu-id="00046-338">這個屬性是文件物件模型的 Microsoft 擴充功能。</span><span class="sxs-lookup"><span data-stu-id="00046-338">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="00046-339">`InnerXml` 不是有效的方式來修改 DOM</span><span class="sxs-lookup"><span data-stu-id="00046-339">`InnerXml` is not an efficient way to modify the DOM.</span></span> <span data-ttu-id="00046-340">取代複雜的節點時，可能是效能問題。</span><span class="sxs-lookup"><span data-stu-id="00046-340">There may be performance issues when replacing complex nodes.</span></span> <span data-ttu-id="00046-341">它是建構節點，並使用下列方法更有效率`InsertBefore`， `InsertAfter`， `AppendChild`，和`RemoveChild`修改 Xml 文件。</span><span class="sxs-lookup"><span data-stu-id="00046-341">It is more efficient to construct nodes and use methods such as `InsertBefore`, `InsertAfter`, `AppendChild`, and `RemoveChild` to modify the Xml document.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00046-342">下列範例會比較<xref:System.Xml.XmlNode.InnerText%2A>和`InnerXml`屬性。</span><span class="sxs-lookup"><span data-stu-id="00046-342">The following example compares the <xref:System.Xml.XmlNode.InnerText%2A> and `InnerXml` properties.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.InnerText Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.InnerText Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.InnerText Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.InnerText Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.InnerText Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.InnerText Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="00046-343">在不能有子節點的節點上，設定這個屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-343">Setting this property on a node that cannot have child nodes.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="00046-344">未正確設定這個屬性之語式時所指定的 XML。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-344">The XML specified when setting this property is not well-formed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="InsertAfter">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode InsertAfter (System.Xml.XmlNode newChild, System.Xml.XmlNode refChild);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode InsertAfter(class System.Xml.XmlNode newChild, class System.Xml.XmlNode refChild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function InsertAfter (newChild As XmlNode, refChild As XmlNode) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ InsertAfter(System::Xml::XmlNode ^ newChild, System::Xml::XmlNode ^ refChild);" />
      <MemberSignature Language="F#" Value="abstract member InsertAfter : System.Xml.XmlNode * System.Xml.XmlNode -&gt; System.Xml.XmlNode&#xA;override this.InsertAfter : System.Xml.XmlNode * System.Xml.XmlNode -&gt; System.Xml.XmlNode" Usage="xmlNode.InsertAfter (newChild, refChild)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newChild" Type="System.Xml.XmlNode" />
        <Parameter Name="refChild" Type="System.Xml.XmlNode" />
      </Parameters>
      <Docs>
        <param name="newChild">
          <span data-ttu-id="00046-345">要插入的 <see langword="XmlNode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-345">The <see langword="XmlNode" /> to insert.</span>
          </span>
        </param>
        <param name="refChild">
          <span data-ttu-id="00046-346">
            <see langword="XmlNode" /> 為參考節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-346">The <see langword="XmlNode" /> that is the reference node.</span>
          </span>
          <span data-ttu-id="00046-347">
            <c>newNode</c> 會置於 <c>refNode</c> 之後。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-347">The <c>newNode</c> is placed after the <c>refNode</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00046-348">在指定的參考節點之後，插入指定的節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-348">Inserts the specified node immediately after the specified reference node.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="00046-349">要插入的節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-349">The node being inserted.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00046-350">如果`refChild`已`null`，插入`newChild`的子節點清單開頭。</span><span class="sxs-lookup"><span data-stu-id="00046-350">If `refChild` is `null`, insert `newChild` at the beginning of the list of child nodes.</span></span> <span data-ttu-id="00046-351">中的所有內容`newChild`後即會插入，以相同的順序， `refChild`。</span><span class="sxs-lookup"><span data-stu-id="00046-351">All the contents of the `newChild` are inserted, in the same order, after `refChild`.</span></span> <span data-ttu-id="00046-352">如果`newChild`是已經在樹狀目錄中，您會從其原始位置移除，並加入其目標位置。</span><span class="sxs-lookup"><span data-stu-id="00046-352">If the `newChild` is already in the tree, it is removed from its original position and added to its target position.</span></span> <span data-ttu-id="00046-353">如需有關插入節點的詳細資訊，請參閱[節點插入 XML 文件](~/docs/standard/data/xml/inserting-nodes-into-an-xml-document.md)。</span><span class="sxs-lookup"><span data-stu-id="00046-353">For more information about inserting nodes, see [Inserting Nodes into an XML Document](~/docs/standard/data/xml/inserting-nodes-into-an-xml-document.md).</span></span>  
  
 <span data-ttu-id="00046-354">如果要插入的節點建立另一個文件中，您可以使用<xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=nameWithType>匯入目前的文件的節點。</span><span class="sxs-lookup"><span data-stu-id="00046-354">If the node being inserted was created from another document, you can use <xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=nameWithType> to import the node to the current document.</span></span> <span data-ttu-id="00046-355">匯入的節點則可以插入至目前的文件。</span><span class="sxs-lookup"><span data-stu-id="00046-355">The imported node can then be inserted into the current document.</span></span>  
  
 <span data-ttu-id="00046-356">這個方法是 Microsoft 擴充功能文件物件模型 (DOM)。</span><span class="sxs-lookup"><span data-stu-id="00046-356">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00046-357">下列範例會將 XML 文件中的新節點。</span><span class="sxs-lookup"><span data-stu-id="00046-357">The following example adds a new node to the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.InsertAfter Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.InsertAfter Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.InsertAfter Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.InsertAfter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.InsertAfter Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.InsertAfter Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="00046-358">這個節點的型別不允許 <paramref name="newChild" /> 節點型別的子節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-358">This node is of a type that does not allow child nodes of the type of the <paramref name="newChild" /> node.</span>
          </span>
          <span data-ttu-id="00046-359">
            <paramref name="newChild" /> 是這個節點的上階。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-359">The <paramref name="newChild" /> is an ancestor of this node.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="00046-360">
            <paramref name="newChild" /> 由不同於建立這個節點的另一份文件所建立。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-360">The <paramref name="newChild" /> was created from a different document than the one that created this node.</span>
          </span>
          <span data-ttu-id="00046-361">
            <paramref name="refChild" /> 不是這個節點的子節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-361">The <paramref name="refChild" /> is not a child of this node.</span>
          </span>
          <span data-ttu-id="00046-362">這個節點是唯讀的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-362">This node is read-only.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="00046-363">
            <para>當覆寫<see langword="InsertAfter" />衍生類別中，要正確地引發事件以便您必須呼叫<see langword="InsertAfter" />基底類別的方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-363">
              <para>When overriding <see langword="InsertAfter" /> in a derived class, in order for events to be raised correctly, you must call the <see langword="InsertAfter" /> method of the base class.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Xml.XmlDocument.ImportNode(System.Xml.XmlNode,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="InsertBefore">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode InsertBefore (System.Xml.XmlNode newChild, System.Xml.XmlNode refChild);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode InsertBefore(class System.Xml.XmlNode newChild, class System.Xml.XmlNode refChild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function InsertBefore (newChild As XmlNode, refChild As XmlNode) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ InsertBefore(System::Xml::XmlNode ^ newChild, System::Xml::XmlNode ^ refChild);" />
      <MemberSignature Language="F#" Value="abstract member InsertBefore : System.Xml.XmlNode * System.Xml.XmlNode -&gt; System.Xml.XmlNode&#xA;override this.InsertBefore : System.Xml.XmlNode * System.Xml.XmlNode -&gt; System.Xml.XmlNode" Usage="xmlNode.InsertBefore (newChild, refChild)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newChild" Type="System.Xml.XmlNode" />
        <Parameter Name="refChild" Type="System.Xml.XmlNode" />
      </Parameters>
      <Docs>
        <param name="newChild">
          <span data-ttu-id="00046-364">要插入的 <see langword="XmlNode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-364">The <see langword="XmlNode" /> to insert.</span>
          </span>
        </param>
        <param name="refChild">
          <span data-ttu-id="00046-365">
            <see langword="XmlNode" /> 為參考節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-365">The <see langword="XmlNode" /> that is the reference node.</span>
          </span>
          <span data-ttu-id="00046-366">
            <c>newChild</c> 會置於這個節點之前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-366">The <c>newChild</c> is placed before this node.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00046-367">在指定的參考節點之前，插入指定的節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-367">Inserts the specified node immediately before the specified reference node.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="00046-368">要插入的節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-368">The node being inserted.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00046-369">如果`refChild`已`null`，插入`newChild`子節點清單結尾。</span><span class="sxs-lookup"><span data-stu-id="00046-369">If `refChild` is `null`, insert `newChild` at the end of the list of child nodes.</span></span> <span data-ttu-id="00046-370">中的所有內容`newChild`插入，以相同的順序，之前`refChild`。</span><span class="sxs-lookup"><span data-stu-id="00046-370">All the contents of the `newChild` are inserted, in the same order, before `refChild`.</span></span> <span data-ttu-id="00046-371">如果`newChild`是已經在樹狀目錄中，您會從其原始位置移除，並加入其目標位置。</span><span class="sxs-lookup"><span data-stu-id="00046-371">If the `newChild` is already in the tree, it is removed from its original position and added to its target position.</span></span> <span data-ttu-id="00046-372">如需有關插入節點的詳細資訊，請參閱[節點插入 XML 文件](~/docs/standard/data/xml/inserting-nodes-into-an-xml-document.md)。</span><span class="sxs-lookup"><span data-stu-id="00046-372">For more information about inserting nodes, see [Inserting Nodes into an XML Document](~/docs/standard/data/xml/inserting-nodes-into-an-xml-document.md).</span></span>  
  
 <span data-ttu-id="00046-373">如果要插入的節點建立另一個文件中，您可以使用<xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=nameWithType>匯入目前的文件的節點。</span><span class="sxs-lookup"><span data-stu-id="00046-373">If the node being inserted was created from another document, you can use <xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=nameWithType> to import the node to the current document.</span></span> <span data-ttu-id="00046-374">匯入的節點則可以插入至目前的文件。</span><span class="sxs-lookup"><span data-stu-id="00046-374">The imported node can then be inserted into the current document.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00046-375">下列範例會將 XML 文件中的新節點。</span><span class="sxs-lookup"><span data-stu-id="00046-375">The following example adds a new node to the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.InsertBefore Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.InsertBefore Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.InsertBefore Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.InsertBefore Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.InsertBefore Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.InsertBefore Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="00046-376">目前這種型別的節點不允許 <paramref name="newChild" /> 節點型別的子節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-376">The current node is of a type that does not allow child nodes of the type of the <paramref name="newChild" /> node.</span>
          </span>
          <span data-ttu-id="00046-377">
            <paramref name="newChild" /> 是這個節點的上階。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-377">The <paramref name="newChild" /> is an ancestor of this node.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="00046-378">
            <paramref name="newChild" /> 由不同於建立這個節點的另一份文件所建立。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-378">The <paramref name="newChild" /> was created from a different document than the one that created this node.</span>
          </span>
          <span data-ttu-id="00046-379">
            <paramref name="refChild" /> 不是這個節點的子節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-379">The <paramref name="refChild" /> is not a child of this node.</span>
          </span>
          <span data-ttu-id="00046-380">這個節點是唯讀的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-380">This node is read-only.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="00046-381">
            <para>當覆寫<see langword="InsertBefore" />衍生類別中，要正確地引發事件以便您必須呼叫<see langword="InsertBefore" />基底類別的方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-381">
              <para>When overriding <see langword="InsertBefore" /> in a derived class, in order for events to be raised correctly, you must call the <see langword="InsertBefore" /> method of the base class.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Xml.XmlDocument.ImportNode(System.Xml.XmlNode,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Xml.XmlNode.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="00046-382">取得值，表示節點是否為唯讀。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-382">Gets a value indicating whether the node is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="00046-383">如果節點是唯讀，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-383">
              <see langword="true" /> if the node is read-only; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00046-384">無法變更其屬性、 屬性或子節點是唯讀節點。</span><span class="sxs-lookup"><span data-stu-id="00046-384">A read-only node is one whose properties, attributes, or child nodes cannot be changed.</span></span> <span data-ttu-id="00046-385">您可以從樹狀目錄移除唯讀節點，並插入其他位置。</span><span class="sxs-lookup"><span data-stu-id="00046-385">You can remove a read-only node from the tree and insert it somewhere else.</span></span> <span data-ttu-id="00046-386">例如，實體節點是永遠唯讀狀態。</span><span class="sxs-lookup"><span data-stu-id="00046-386">For example, Entity nodes are always read-only.</span></span>  
  
 <span data-ttu-id="00046-387">這個屬性是文件物件模型的 Microsoft 擴充功能。</span><span class="sxs-lookup"><span data-stu-id="00046-387">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="00046-388">取得指定的子項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-388">Gets the specified child element.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlElement this[string name] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlElement Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(name As String) As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlElement ^ default[System::String ^] { System::Xml::XmlElement ^ get(System::String ^ name); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : System.Xml.XmlElement" Usage="System.Xml.XmlNode.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="00046-389">要擷取的項目的限定名稱 (Qualified Name)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-389">The qualified name of the element to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00046-390">取得具有指定的 <see cref="P:System.Xml.XmlNode.Name" /> 的第一個子項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-390">Gets the first child element with the specified <see cref="P:System.Xml.XmlNode.Name" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="00046-391">符合指定名稱的第一個 <see cref="T:System.Xml.XmlElement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-391">The first <see cref="T:System.Xml.XmlElement" /> that matches the specified name.</span>
          </span>
          <span data-ttu-id="00046-392">如果沒有相符項目，則傳回 null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-392">It returns a null reference (<see langword="Nothing" /> in Visual Basic) if there is no match.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00046-393">這個屬性是文件物件模型的 Microsoft 擴充功能。</span><span class="sxs-lookup"><span data-stu-id="00046-393">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00046-394">下列範例顯示的標題項目。</span><span class="sxs-lookup"><span data-stu-id="00046-394">The following example displays the title element.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.this Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.this Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.this Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.this Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.this Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.this Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlElement this[string localname, string ns] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlElement Item(string, string)" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.Item(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(localname As String, ns As String) As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlElement ^ default[System::String ^, System::String ^] { System::Xml::XmlElement ^ get(System::String ^ localname, System::String ^ ns); };" />
      <MemberSignature Language="F#" Value="member this.Item(string * string) : System.Xml.XmlElement" Usage="System.Xml.XmlNode.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localname" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localname">
          <span data-ttu-id="00046-395">項目的本機名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-395">The local name of the element.</span>
          </span>
        </param>
        <param name="ns">
          <span data-ttu-id="00046-396">項目的命名空間 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-396">The namespace URI of the element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00046-397">取得具有指定的 <see cref="P:System.Xml.XmlNode.LocalName" /> 與 <see cref="P:System.Xml.XmlNode.NamespaceURI" /> 的第一個子項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-397">Gets the first child element with the specified <see cref="P:System.Xml.XmlNode.LocalName" /> and <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="00046-398">具有符合的 <paramref name="localname" /> 與 <paramref name="ns" /> 的第一個 <see cref="T:System.Xml.XmlElement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-398">The first <see cref="T:System.Xml.XmlElement" /> with the matching <paramref name="localname" /> and <paramref name="ns" />.</span>
          </span>
          <span data-ttu-id="00046-399">。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-399">.</span>
          </span>
          <span data-ttu-id="00046-400">如果沒有相符項目，則傳回 null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-400">It returns a null reference (<see langword="Nothing" /> in Visual Basic) if there is no match.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00046-401">這個屬性是文件物件模型的 Microsoft 擴充功能。</span><span class="sxs-lookup"><span data-stu-id="00046-401">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LastChild">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode LastChild { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNode LastChild" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.LastChild" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property LastChild As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNode ^ LastChild { System::Xml::XmlNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LastChild : System.Xml.XmlNode" Usage="System.Xml.XmlNode.LastChild" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="00046-402">取得節點的最後一個子節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-402">Gets the last child of the node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="00046-403">節點的最後一個子節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-403">The last child of the node.</span>
          </span>
          <span data-ttu-id="00046-404">如果沒有這種節點，則會傳回 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-404">If there is no such node, <see langword="null" /> is returned.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="00046-405">下列範例顯示的價格項目。</span><span class="sxs-lookup"><span data-stu-id="00046-405">The following example displays the price element.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.LastChild Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.LastChild Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.LastChild Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.LastChild Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.LastChild Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.LastChild Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public abstract string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property LocalName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ LocalName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="System.Xml.XmlNode.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="00046-406">在衍生類別中覆寫時，取得節點的區域名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-406">Gets the local name of the node, when overridden in a derived class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="00046-407">移除前置詞的節點名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-407">The name of the node with the prefix removed.</span>
          </span>
          <span data-ttu-id="00046-408">例如，<see langword="LocalName" />書籍項目的&lt;bk: book&amp;gt&gt;。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-408">For example, <see langword="LocalName" /> is book for the element &lt;bk:book&gt;.</span>
          </span>
          <span data-ttu-id="00046-409">傳回的名稱需視節點的 <see cref="P:System.Xml.XmlNode.NodeType" /> 而定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-409">The name returned is dependent on the <see cref="P:System.Xml.XmlNode.NodeType" /> of the node:</span>
          </span>
          <span data-ttu-id="00046-410">
            <list type="table">
              <listheader>
                <term> 型別</term>
                <description>名稱</description>
              </listheader>
              <item>
                <term>屬性</term>
                <description>屬性的本機名稱。</description>
              </item>
              <item>
                <term> CDATA </term>
                <description> #cdata 區段</description>
              </item>
              <item>
                <term>註解</term>
                <description> #comment </description>
              </item>
              <item>
                <term>文件</term>
                <description> #document </description>
              </item>
              <item>
                <term> DocumentFragment </term>
                <description> #document 片段</description>
              </item>
              <item>
                <term> DocumentType </term>
                <description>文件類型名稱。</description>
              </item>
              <item>
                <term> 項目</term>
                <description>項目的本機名稱。</description>
              </item>
              <item>
                <term> 實體</term>
                <description>實體的名稱。</description>
              </item>
              <item>
                <term> EntityReference </term>
                <description>所參考的實體名稱。</description>
              </item>
              <item>
                <term> 標記法</term>
                <description>標記法名稱。</description>
              </item>
              <item>
                <term> ProcessingInstruction </term>
                <description>處理指示的目標。</description>
              </item>
              <item>
                <term> 文字</term>
                <description> #text </description>
              </item>
              <item>
                <term>空白字元</term>
                <description> #whitespace </description>
              </item>
              <item>
                <term>SignificantWhitespace </term>
                <description> #significant 空白字元</description>
              </item>
              <item>
                <term> XmlDeclaration </term>
                <description> #xml 宣告  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-410">
              <list type="table">
                <listheader>
                  <term> Type  </term>
                  <description> Name  </description>
                </listheader>
                <item>
                  <term> Attribute  </term>
                  <description> The local name of the attribute.  </description>
                </item>
                <item>
                  <term> CDATA  </term>
                  <description> #cdata-section  </description>
                </item>
                <item>
                  <term> Comment  </term>
                  <description> #comment  </description>
                </item>
                <item>
                  <term> Document  </term>
                  <description> #document  </description>
                </item>
                <item>
                  <term> DocumentFragment  </term>
                  <description> #document-fragment  </description>
                </item>
                <item>
                  <term> DocumentType  </term>
                  <description> The document type name.  </description>
                </item>
                <item>
                  <term> Element  </term>
                  <description> The local name of the element.  </description>
                </item>
                <item>
                  <term> Entity  </term>
                  <description> The name of the entity.  </description>
                </item>
                <item>
                  <term> EntityReference  </term>
                  <description> The name of the entity referenced.  </description>
                </item>
                <item>
                  <term> Notation  </term>
                  <description> The notation name.  </description>
                </item>
                <item>
                  <term> ProcessingInstruction  </term>
                  <description> The target of the processing instruction.  </description>
                </item>
                <item>
                  <term> Text  </term>
                  <description> #text  </description>
                </item>
                <item>
                  <term> Whitespace  </term>
                  <description> #whitespace  </description>
                </item>
                <item>
                  <term> SignificantWhitespace  </term>
                  <description> #significant-whitespace  </description>
                </item>
                <item>
                  <term> XmlDeclaration  </term>
                  <description> #xml-declaration  </description>
                </item>
              </list>
            </span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00046-411">如果節點沒有前置詞，LocalName 等同於<xref:System.Xml.XmlNode.Name%2A>。</span><span class="sxs-lookup"><span data-stu-id="00046-411">If the node does not have a prefix, LocalName is the same as <xref:System.Xml.XmlNode.Name%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.XmlNode.Prefix" />
        <altmember cref="P:System.Xml.XmlNode.Name" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public abstract string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.Name" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Xml.XmlNode.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="00046-412">在衍生類別中覆寫時，取得節點的限定名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-412">Gets the qualified name of the node, when overridden in a derived class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="00046-413">節點的限定名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-413">The qualified name of the node.</span>
          </span>
          <span data-ttu-id="00046-414">傳回的名稱需視節點的 <see cref="P:System.Xml.XmlNode.NodeType" /> 而定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-414">The name returned is dependent on the <see cref="P:System.Xml.XmlNode.NodeType" /> of the node:</span>
          </span>
          <span data-ttu-id="00046-415">
            <list type="table">
              <listheader>
                <term> 型別</term>
                <description>名稱</description>
              </listheader>
              <item>
                <term>屬性</term>
                <description>屬性的限定的名稱。</description>
              </item>
              <item>
                <term> CDATA </term>
                <description> #cdata 區段</description>
              </item>
              <item>
                <term>註解</term>
                <description> #comment </description>
              </item>
              <item>
                <term>文件</term>
                <description> #document </description>
              </item>
              <item>
                <term> DocumentFragment </term>
                <description> #document 片段</description>
              </item>
              <item>
                <term> DocumentType </term>
                <description>文件類型名稱。</description>
              </item>
              <item>
                <term> 項目</term>
                <description>項目的限定的名稱。</description>
              </item>
              <item>
                <term> 實體</term>
                <description>實體的名稱。</description>
              </item>
              <item>
                <term> EntityReference </term>
                <description>所參考的實體名稱。</description>
              </item>
              <item>
                <term> 標記法</term>
                <description>標記法名稱。</description>
              </item>
              <item>
                <term> ProcessingInstruction </term>
                <description>處理指示的目標。</description>
              </item>
              <item>
                <term> 文字</term>
                <description> #text </description>
              </item>
              <item>
                <term>空白字元</term>
                <description> #whitespace </description>
              </item>
              <item>
                <term>SignificantWhitespace </term>
                <description> #significant 空白字元</description>
              </item>
              <item>
                <term> XmlDeclaration </term>
                <description> #xml 宣告  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-415">
              <list type="table">
                <listheader>
                  <term> Type  </term>
                  <description> Name  </description>
                </listheader>
                <item>
                  <term> Attribute  </term>
                  <description> The qualified name of the attribute.  </description>
                </item>
                <item>
                  <term> CDATA  </term>
                  <description> #cdata-section  </description>
                </item>
                <item>
                  <term> Comment  </term>
                  <description> #comment  </description>
                </item>
                <item>
                  <term> Document  </term>
                  <description> #document  </description>
                </item>
                <item>
                  <term> DocumentFragment  </term>
                  <description> #document-fragment  </description>
                </item>
                <item>
                  <term> DocumentType  </term>
                  <description> The document type name.  </description>
                </item>
                <item>
                  <term> Element  </term>
                  <description> The qualified name of the element.  </description>
                </item>
                <item>
                  <term> Entity  </term>
                  <description> The name of the entity.  </description>
                </item>
                <item>
                  <term> EntityReference  </term>
                  <description> The name of the entity referenced.  </description>
                </item>
                <item>
                  <term> Notation  </term>
                  <description> The notation name.  </description>
                </item>
                <item>
                  <term> ProcessingInstruction  </term>
                  <description> The target of the processing instruction.  </description>
                </item>
                <item>
                  <term> Text  </term>
                  <description> #text  </description>
                </item>
                <item>
                  <term> Whitespace  </term>
                  <description> #whitespace  </description>
                </item>
                <item>
                  <term> SignificantWhitespace  </term>
                  <description> #significant-whitespace  </description>
                </item>
                <item>
                  <term> XmlDeclaration  </term>
                  <description> #xml-declaration  </description>
                </item>
              </list>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NamespaceURI">
      <MemberSignature Language="C#" Value="public virtual string NamespaceURI { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NamespaceURI" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.NamespaceURI" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NamespaceURI As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ NamespaceURI { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NamespaceURI : string" Usage="System.Xml.XmlNode.NamespaceURI" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="00046-416">取得這個節點的命名空間 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-416">Gets the namespace URI of this node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="00046-417">這個節點的命名空間 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-417">The namespace URI of this node.</span>
          </span>
          <span data-ttu-id="00046-418">如果沒有命名空間 URI，則這個屬性傳回 String.Empty。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-418">If there is no namespace URI, this property returns String.Empty.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00046-419">這是在建立期間指定 URI 的命名空間。</span><span class="sxs-lookup"><span data-stu-id="00046-419">This is the namespace URI specified at creation time.</span></span> <span data-ttu-id="00046-420">例如，`NamespaceURI`是元素的 urn： 樣本\<bk: book&gt xmlns:bk ="urn： 範例"></span><span class="sxs-lookup"><span data-stu-id="00046-420">For example, `NamespaceURI` is urn:samples for the element \<bk:book xmlns:bk= "urn:samples"></span></span>  
  
 <span data-ttu-id="00046-421">屬性不會從附加至項目繼承其命名空間。</span><span class="sxs-lookup"><span data-stu-id="00046-421">An attribute does not inherit its namespace from the element it is attached to.</span></span> <span data-ttu-id="00046-422">如果屬性未明確指定命名空間，它只會有沒有命名空間。</span><span class="sxs-lookup"><span data-stu-id="00046-422">If an attribute is not explicitly given a namespace, it simply has no namespace.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NextSibling">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode NextSibling { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNode NextSibling" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.NextSibling" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NextSibling As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNode ^ NextSibling { System::Xml::XmlNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NextSibling : System.Xml.XmlNode" Usage="System.Xml.XmlNode.NextSibling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="00046-423">取得這個節點的後置節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-423">Gets the node immediately following this node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="00046-424">下一個 <see langword="XmlNode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-424">The next <see langword="XmlNode" />.</span>
          </span>
          <span data-ttu-id="00046-425">如果沒有前置節點，就會傳回 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-425">If there is no next node, <see langword="null" /> is returned.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="00046-426">下列範例顯示 XML 文件中的所有書籍。</span><span class="sxs-lookup"><span data-stu-id="00046-426">The following example displays all the books in the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.NextSibling Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.NextSibling Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.NextSibling Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.NextSibling Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.NextSibling Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.NextSibling Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public abstract System.Xml.XmlNodeType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlNodeType NodeType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.NodeType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property NodeType As XmlNodeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Xml::XmlNodeType NodeType { System::Xml::XmlNodeType get(); };" />
      <MemberSignature Language="F#" Value="member this.NodeType : System.Xml.XmlNodeType" Usage="System.Xml.XmlNode.NodeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="00046-427">在衍生類別中覆寫時，取得目前節點的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-427">Gets the type of the current node, when overridden in a derived class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="00046-428">其中一個 <see cref="T:System.Xml.XmlNodeType" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-428">One of the <see cref="T:System.Xml.XmlNodeType" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00046-429">這個屬性永遠不會傳回`XmlNodeType`EndElement EndEntity 或 None。</span><span class="sxs-lookup"><span data-stu-id="00046-429">This property never returns the `XmlNodeType` EndElement, EndEntity or None.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Normalize">
      <MemberSignature Language="C#" Value="public virtual void Normalize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Normalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.Normalize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Normalize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Normalize();" />
      <MemberSignature Language="F#" Value="abstract member Normalize : unit -&gt; unit&#xA;override this.Normalize : unit -&gt; unit" Usage="xmlNode.Normalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="00046-430">使這個 XmlNode 之下子樹狀的整個深度中所有 XmlText 節點成為「一般」形式，其中只用標記 (Markup) (亦即標記 (Tag)、註解、處理指示、CDATA 區段與實體參考) 來分隔 XmlText 節點，也就是說，沒有相鄰的 XmlText 節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-430">Puts all XmlText nodes in the full depth of the sub-tree underneath this XmlNode into a "normal" form where only markup (that is, tags, comments, processing instructions, CDATA sections, and entity references) separates XmlText nodes, that is, there are no adjacent XmlText nodes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00046-431">這個方法可用來確保文件的 DOM 檢視都會相同，如同它已儲存，並重新載入，並用於作業 （例如 XPointer 查詢），取決於特定的文件樹狀結構時很有用。</span><span class="sxs-lookup"><span data-stu-id="00046-431">This method can be used to ensure that the DOM view of a document is the same as if it were saved and re-loaded, and is useful when operations (such as XPointer lookups) that depend on a particular document tree structure are to be used.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OuterXml">
      <MemberSignature Language="C#" Value="public virtual string OuterXml { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OuterXml" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.OuterXml" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property OuterXml As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ OuterXml { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OuterXml : string" Usage="System.Xml.XmlNode.OuterXml" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="00046-432">取得包含這個節點和其所有子節點的標記。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-432">Gets the markup containing this node and all its child nodes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="00046-433">包含這個節點和其所有子節點的標記。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-433">The markup containing this node and all its child nodes.</span>
          </span>
          <span data-ttu-id="00046-434">
            <block subset="none" type="note">
              <para>
                <see langword="OuterXml" /> 不會傳回預設屬性。  </para>
            </block>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-434">
              <block subset="none" type="note">
                <para>
                  <see langword="OuterXml" /> does not return default attributes.  </para>
              </block>
            </span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00046-435">這個屬性是文件物件模型的 Microsoft 擴充功能。</span><span class="sxs-lookup"><span data-stu-id="00046-435">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00046-436">下列範例會比較輸出<xref:System.Xml.XmlNode.InnerXml%2A>和`OuterXml`屬性。</span><span class="sxs-lookup"><span data-stu-id="00046-436">The following example compares output from the <xref:System.Xml.XmlNode.InnerXml%2A> and `OuterXml` properties.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.OuterXml Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.OuterXml Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.OuterXml Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.OuterXml Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.OuterXml Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.OuterXml Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OwnerDocument">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlDocument OwnerDocument { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlDocument OwnerDocument" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.OwnerDocument" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property OwnerDocument As XmlDocument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlDocument ^ OwnerDocument { System::Xml::XmlDocument ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OwnerDocument : System.Xml.XmlDocument" Usage="System.Xml.XmlNode.OwnerDocument" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDocument</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="00046-437">取得這個節點所屬的 <see cref="T:System.Xml.XmlDocument" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-437">Gets the <see cref="T:System.Xml.XmlDocument" /> to which this node belongs.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="00046-438">這個節點所屬的 <see cref="T:System.Xml.XmlDocument" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-438">The <see cref="T:System.Xml.XmlDocument" /> to which this node belongs.</span>
          </span>
          <span data-ttu-id="00046-439">如果這個節點是 <see cref="T:System.Xml.XmlDocument" /> (NodeType 等於 XmlNodeType.Document)，則這個屬性傳回 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-439">If the node is an <see cref="T:System.Xml.XmlDocument" /> (NodeType equals XmlNodeType.Document), this property returns <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00046-440">當將節點加入至目前節點中，使用<xref:System.Xml.XmlDocument>所傳回<xref:System.Xml.XmlNode.OwnerDocument%2A>來建立節點的屬性。</span><span class="sxs-lookup"><span data-stu-id="00046-440">When adding nodes to the current node, use the <xref:System.Xml.XmlDocument> returned by the <xref:System.Xml.XmlNode.OwnerDocument%2A> property to create the node.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00046-441">請參閱<xref:System.Xml.XmlElement.OwnerDocument%2A>（XmlElement 類別中） 如需使用這個屬性的範例。</span><span class="sxs-lookup"><span data-stu-id="00046-441">See <xref:System.Xml.XmlElement.OwnerDocument%2A> (in the XmlElement class) for an example using this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentNode">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode ParentNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNode ParentNode" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.ParentNode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ParentNode As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNode ^ ParentNode { System::Xml::XmlNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ParentNode : System.Xml.XmlNode" Usage="System.Xml.XmlNode.ParentNode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="00046-442">取得這個節點的父代 (對於具有父代的節點而言)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-442">Gets the parent of this node (for nodes that can have parents).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="00046-443">目前節點的父代的 <see langword="XmlNode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-443">The <see langword="XmlNode" /> that is the parent of the current node.</span>
          </span>
          <span data-ttu-id="00046-444">如果剛剛建立節點而尚未加入至樹狀結構中，或者已經從樹狀結構中移除，則父代為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-444">If a node has just been created and not yet added to the tree, or if it has been removed from the tree, the parent is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="00046-445">對於其他所有節點，傳回的值視節點的 <see cref="P:System.Xml.XmlNode.NodeType" /> 而定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-445">For all other nodes, the value returned depends on the <see cref="P:System.Xml.XmlNode.NodeType" /> of the node.</span>
          </span>
          <span data-ttu-id="00046-446">下表描述 <see langword="ParentNode" /> 屬性的可能傳回值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-446">The following table describes the possible return values for the <see langword="ParentNode" /> property.</span>
          </span>
          <span data-ttu-id="00046-447">
            <list type="table">
              <listheader>
                <term> NodeType </term>
                <description> ParentNode 的傳回值</description>
              </listheader>
              <item>
                <term>屬性、 文件、 DocumentFragment、 Entity、 Notation </term>
                <description>傳回<see langword="null" />;這些節點沒有父代。</description>
              </item>
              <item>
                <term> CDATA </term>
                <description>傳回包含 CDATA 區段項目或實體參考。</description>
              </item>
              <item>
                <term> 註解</term>
                <description>傳回項目、 實體參考、 文件類型或包含註解文件。</description>
              </item>
              <item>
                <term> DocumentType </term>
                <description>傳回文件節點。</description>
              </item>
              <item>
                <term> 項目</term>
                <description>傳回項目的父節點。如果此項目是樹狀的根節點，則父代是文件節點。</description>
              </item>
              <item>
                <term> EntityReference </term>
                <description>傳回包含實體參考的項目、 屬性或實體參考。</description>
              </item>
              <item>
                <term> ProcessingInstruction </term>
                <description>傳回文件、 項目、 文件類型或包含處理指示的實體參考。</description>
              </item>
              <item>
                <term> 文字</term>
                <description>傳回父項目、 屬性或實體的參考，包含文字節點。  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-447">
              <list type="table">
                <listheader>
                  <term> NodeType  </term>
                  <description> Return Value of ParentNode  </description>
                </listheader>
                <item>
                  <term> Attribute, Document, DocumentFragment, Entity, Notation  </term>
                  <description> Returns <see langword="null" />; these nodes do not have parents.  </description>
                </item>
                <item>
                  <term> CDATA  </term>
                  <description> Returns the element or entity reference containing the CDATA section.  </description>
                </item>
                <item>
                  <term> Comment  </term>
                  <description> Returns the element, entity reference, document type, or document containing the comment.  </description>
                </item>
                <item>
                  <term> DocumentType  </term>
                  <description> Returns the document node.  </description>
                </item>
                <item>
                  <term> Element  </term>
                  <description> Returns the parent node of the element. If the element is the root node in the tree, the parent is the document node.  </description>
                </item>
                <item>
                  <term> EntityReference  </term>
                  <description> Returns the element, attribute, or entity reference containing the entity reference.  </description>
                </item>
                <item>
                  <term> ProcessingInstruction  </term>
                  <description> Returns the document, element, document type, or entity reference containing the processing instruction.  </description>
                </item>
                <item>
                  <term> Text  </term>
                  <description> Returns the parent element, attribute, or entity reference containing the text node.  </description>
                </item>
              </list>
            </span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00046-448">父和子節點的相關資訊，請參閱[W3C DOM （核心） 層級 1 規格](https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html)</span><span class="sxs-lookup"><span data-stu-id="00046-448">For information about parent and child nodes, see the [W3C DOM (Core) Level 1 specification](https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html)</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Prefix">
      <MemberSignature Language="C#" Value="public virtual string Prefix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Prefix" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.Prefix" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Prefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Prefix { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Prefix : string with get, set" Usage="System.Xml.XmlNode.Prefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="00046-449">取得或設定這個節點的命名空間前置詞。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-449">Gets or sets the namespace prefix of this node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="00046-450">這個節點的命名空間前置詞。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-450">The namespace prefix of this node.</span>
          </span>
          <span data-ttu-id="00046-451">例如，<see langword="Prefix" />是項目 bk &lt;bk: book&amp;gt&gt;。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-451">For example, <see langword="Prefix" /> is bk for the element &lt;bk:book&gt;.</span>
          </span>
          <span data-ttu-id="00046-452">如果沒有前置詞，則這個屬性會傳回 String.Empty。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-452">If there is no prefix, this property returns String.Empty.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00046-453">若允許，請設定這個屬性，變更<xref:System.Xml.XmlNode.Name%2A>屬性，項目和屬性的節點保存的限定的名稱。</span><span class="sxs-lookup"><span data-stu-id="00046-453">Setting this property, when permitted, changes the <xref:System.Xml.XmlNode.Name%2A> property, which holds the qualified name, on Element and Attribute nodes.</span></span> <span data-ttu-id="00046-454">設定這個屬性不能有前置詞 （例如文字、 註解、 EntityReference、 CDATA、 ProcessingInstruction、 文件和 DocumentFragment） 的節點型別上沒有任何作用。</span><span class="sxs-lookup"><span data-stu-id="00046-454">Setting this property on node types that cannot have a prefix (such as Text, Comment, EntityReference, CDATA, ProcessingInstruction, Document, and DocumentFragment) has no effect.</span></span> <span data-ttu-id="00046-455">變更成具有預設值就是屬性的前置詞，不會使用預設值的新屬性，並顯示原始的前置詞，因為命名空間 URI 和本機名稱不會變更。</span><span class="sxs-lookup"><span data-stu-id="00046-455">Changing the prefix of an attribute that is known to have a default value, does not make a new attribute with the default value and the original prefix appear, since the namespace URI and local name do not change.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="00046-456">這個節點是唯讀的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-456">This node is read-only.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="00046-457">指定的前置詞包含無效的字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-457">The specified prefix contains an invalid character.</span>
          </span>
          <span data-ttu-id="00046-458">指定的前置詞格式不正確。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-458">The specified prefix is malformed.</span>
          </span>
          <span data-ttu-id="00046-459">指定的前置詞為 "xml"，且此節點的 namespaceURI 與 "http://www.w3.org/XML/1998/namespace" \(英文\) 的不同。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-459">The specified prefix is "xml" and the namespaceURI of this node is different from "http://www.w3.org/XML/1998/namespace".</span>
          </span>
          <span data-ttu-id="00046-460">此節點是一個屬性，且指定的前置詞是 "xmlns"，而且此節點的 namespaceURI 與 http://www.w3.org/2000/xmlns/ \(英文\) 的不同。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-460">This node is an attribute and the specified prefix is "xmlns" and the namespaceURI of this node is different from "http://www.w3.org/2000/xmlns/ ".</span>
          </span>
          <span data-ttu-id="00046-461">這個節點是屬性，這個節點的 qualifiedName 是「xmlns」。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-461">This node is an attribute and the qualifiedName of this node is "xmlns".</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="00046-462">
            <para>覆寫時<see langword="Prefix" />無法在衍生類別中，設定這個屬性。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-462">
              <para>When overriding <see langword="Prefix" /> in a derived class, this property cannot be set.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="PrependChild">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode PrependChild (System.Xml.XmlNode newChild);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode PrependChild(class System.Xml.XmlNode newChild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.PrependChild(System.Xml.XmlNode)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PrependChild (newChild As XmlNode) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ PrependChild(System::Xml::XmlNode ^ newChild);" />
      <MemberSignature Language="F#" Value="abstract member PrependChild : System.Xml.XmlNode -&gt; System.Xml.XmlNode&#xA;override this.PrependChild : System.Xml.XmlNode -&gt; System.Xml.XmlNode" Usage="xmlNode.PrependChild newChild" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newChild" Type="System.Xml.XmlNode" />
      </Parameters>
      <Docs>
        <param name="newChild">
          <span data-ttu-id="00046-463">要加入的節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-463">The node to add.</span>
          </span>
          <span data-ttu-id="00046-464">要加入之節點的所有內容會移入指定的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-464">All the contents of the node to be added are moved into the specified location.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00046-465">將指定的節點加入這個節點之子節點清單的開頭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-465">Adds the specified node to the beginning of the list of child nodes for this node.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="00046-466">已加入的節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-466">The node added.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00046-467">如果`newChild`是已經在樹狀目錄中，您會從其原始位置移除，並加入其目標位置。</span><span class="sxs-lookup"><span data-stu-id="00046-467">If the `newChild` is already in the tree, it is removed from its original position and added to its target position.</span></span> <span data-ttu-id="00046-468">如需有關插入節點的詳細資訊，請參閱[節點插入 XML 文件](~/docs/standard/data/xml/inserting-nodes-into-an-xml-document.md)。</span><span class="sxs-lookup"><span data-stu-id="00046-468">For more information about inserting nodes, see [Inserting Nodes into an XML Document](~/docs/standard/data/xml/inserting-nodes-into-an-xml-document.md).</span></span>  
  
 <span data-ttu-id="00046-469">如果要插入的節點建立另一個文件中，您可以使用<xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=nameWithType>匯入目前的文件的節點。</span><span class="sxs-lookup"><span data-stu-id="00046-469">If the node being inserted was created from another document, you can use <xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=nameWithType> to import the node to the current document.</span></span> <span data-ttu-id="00046-470">匯入的節點則可以插入至目前的文件。</span><span class="sxs-lookup"><span data-stu-id="00046-470">The imported node can then be inserted into the current document.</span></span>  
  
 <span data-ttu-id="00046-471">這個方法是 Microsoft 擴充功能文件物件模型 (DOM)。</span><span class="sxs-lookup"><span data-stu-id="00046-471">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00046-472">下列範例會將 XML 文件中的新節點。</span><span class="sxs-lookup"><span data-stu-id="00046-472">The following example adds a new node to the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.PrependChild Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.PrependChild Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.PrependChild Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.PrependChild Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.PrependChild Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.PrependChild Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="00046-473">這個節點的型別不允許 <paramref name="newChild" /> 節點型別的子節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-473">This node is of a type that does not allow child nodes of the type of the <paramref name="newChild" /> node.</span>
          </span>
          <span data-ttu-id="00046-474">
            <paramref name="newChild" /> 是這個節點的上階。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-474">The <paramref name="newChild" /> is an ancestor of this node.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="00046-475">
            <paramref name="newChild" /> 由不同於建立這個節點的另一份文件所建立。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-475">The <paramref name="newChild" /> was created from a different document than the one that created this node.</span>
          </span>
          <span data-ttu-id="00046-476">這個節點是唯讀的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-476">This node is read-only.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="00046-477">
            <para>當覆寫<see langword="PrependChild" />衍生類別中，要正確地引發事件以便您必須呼叫<see langword="PrependChild" />基底類別的方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-477">
              <para>When overriding <see langword="PrependChild" /> in a derived class, in order for events to be raised correctly, you must call the <see langword="PrependChild" /> method of the base class.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Xml.XmlDocument.ImportNode(System.Xml.XmlNode,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="PreviousSibling">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode PreviousSibling { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNode PreviousSibling" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.PreviousSibling" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PreviousSibling As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNode ^ PreviousSibling { System::Xml::XmlNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PreviousSibling : System.Xml.XmlNode" Usage="System.Xml.XmlNode.PreviousSibling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="00046-478">取得這個節點的前置節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-478">Gets the node immediately preceding this node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="00046-479">前置的 <see langword="XmlNode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-479">The preceding <see langword="XmlNode" />.</span>
          </span>
          <span data-ttu-id="00046-480">如果沒有前置節點，就會傳回 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-480">If there is no preceding node, <see langword="null" /> is returned.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="00046-481">下列範例顯示 XML 文件中的所有書籍。</span><span class="sxs-lookup"><span data-stu-id="00046-481">The following example displays all the books in the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.PreviousSibling Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.PreviousSibling Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.PreviousSibling Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.PreviousSibling Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.PreviousSibling Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.PreviousSibling Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviousText">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode PreviousText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNode PreviousText" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.PreviousText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PreviousText As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNode ^ PreviousText { System::Xml::XmlNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PreviousText : System.Xml.XmlNode" Usage="System.Xml.XmlNode.PreviousText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="00046-482">取得這個節點的前置文字節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-482">Gets the text node that immediately precedes this node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="00046-483">傳回 <see cref="T:System.Xml.XmlNode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-483">Returns <see cref="T:System.Xml.XmlNode" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00046-484">此屬性具有更快的效能比<xref:System.Xml.XmlNode.PreviousSibling%2A>屬性，但您只能使用它來取得類型的節點<xref:System.Xml.XmlNodeType.Text>。</span><span class="sxs-lookup"><span data-stu-id="00046-484">This property has faster performance than the <xref:System.Xml.XmlNode.PreviousSibling%2A> property but you can use it only to get a node of type <xref:System.Xml.XmlNodeType.Text>.</span></span> <span data-ttu-id="00046-485">若要取得任何其他類型的節點，在這個節點之前，請使用<xref:System.Xml.XmlNode.PreviousSibling%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="00046-485">To get any other type of node that that precedes this node, use the <xref:System.Xml.XmlNode.PreviousSibling%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAll">
      <MemberSignature Language="C#" Value="public virtual void RemoveAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.RemoveAll" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAll();" />
      <MemberSignature Language="F#" Value="abstract member RemoveAll : unit -&gt; unit&#xA;override this.RemoveAll : unit -&gt; unit" Usage="xmlNode.RemoveAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="00046-486">移除目前節點的所有子節點和/或屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-486">Removes all the child nodes and/or attributes of the current node.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00046-487">如果移除的屬性已知有預設值，屬性會立即出現包含預設值，如果適用的話，對應的命名空間 URI、 本機名稱和前置詞。</span><span class="sxs-lookup"><span data-stu-id="00046-487">If a removed attribute is known to have a default value, an attribute immediately appears containing the default value and, if applicable, the corresponding namespace URI, local name, and prefix.</span></span>  
  
 <span data-ttu-id="00046-488">這個方法是 Microsoft 擴充功能文件物件模型 (DOM)。</span><span class="sxs-lookup"><span data-stu-id="00046-488">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00046-489">下列範例會移除所有的子系及屬性節點，從根節點。</span><span class="sxs-lookup"><span data-stu-id="00046-489">The following example removes all child and attribute nodes from the root node.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.RemoveAll Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.RemoveAll Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.RemoveAll Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.RemoveAll Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.RemoveAll Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.RemoveAll Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="00046-490">
            <para>當覆寫<see langword="RemoveAll" />衍生類別中，要正確地引發事件以便您必須呼叫<see langword="RemoveAll" />基底類別的方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-490">
              <para>When overriding <see langword="RemoveAll" /> in a derived class, in order for events to be raised correctly, you must call the <see langword="RemoveAll" /> method of the base class.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="RemoveChild">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode RemoveChild (System.Xml.XmlNode oldChild);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode RemoveChild(class System.Xml.XmlNode oldChild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.RemoveChild(System.Xml.XmlNode)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveChild (oldChild As XmlNode) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ RemoveChild(System::Xml::XmlNode ^ oldChild);" />
      <MemberSignature Language="F#" Value="abstract member RemoveChild : System.Xml.XmlNode -&gt; System.Xml.XmlNode&#xA;override this.RemoveChild : System.Xml.XmlNode -&gt; System.Xml.XmlNode" Usage="xmlNode.RemoveChild oldChild" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldChild" Type="System.Xml.XmlNode" />
      </Parameters>
      <Docs>
        <param name="oldChild">
          <span data-ttu-id="00046-491">正在移除的節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-491">The node being removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00046-492">移除指定的子節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-492">Removes specified child node.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="00046-493">移除的節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-493">The node removed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="00046-494">下列範例會將 XML 文件移除節點。</span><span class="sxs-lookup"><span data-stu-id="00046-494">The following example removes a node from the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.RemoveChild Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.RemoveChild Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.RemoveChild Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.RemoveChild Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.RemoveChild Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.RemoveChild Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="00046-495">
            <paramref name="oldChild" /> 不是這個節點的子節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-495">The <paramref name="oldChild" /> is not a child of this node.</span>
          </span>
          <span data-ttu-id="00046-496">或者這個節點是唯讀的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-496">Or this node is read-only.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="00046-497">
            <para>當覆寫<see langword="RemoveChild" />衍生類別中，要正確地引發事件以便您必須呼叫<see langword="RemoveChild" />基底類別的方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-497">
              <para>When overriding <see langword="RemoveChild" /> in a derived class, in order for events to be raised correctly, you must call the <see langword="RemoveChild" /> method of the base class.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ReplaceChild">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode ReplaceChild (System.Xml.XmlNode newChild, System.Xml.XmlNode oldChild);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode ReplaceChild(class System.Xml.XmlNode newChild, class System.Xml.XmlNode oldChild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReplaceChild (newChild As XmlNode, oldChild As XmlNode) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ ReplaceChild(System::Xml::XmlNode ^ newChild, System::Xml::XmlNode ^ oldChild);" />
      <MemberSignature Language="F#" Value="abstract member ReplaceChild : System.Xml.XmlNode * System.Xml.XmlNode -&gt; System.Xml.XmlNode&#xA;override this.ReplaceChild : System.Xml.XmlNode * System.Xml.XmlNode -&gt; System.Xml.XmlNode" Usage="xmlNode.ReplaceChild (newChild, oldChild)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newChild" Type="System.Xml.XmlNode" />
        <Parameter Name="oldChild" Type="System.Xml.XmlNode" />
      </Parameters>
      <Docs>
        <param name="newChild">
          <span data-ttu-id="00046-498">要放入子節點清單中的新節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-498">The new node to put in the child list.</span>
          </span>
        </param>
        <param name="oldChild">
          <span data-ttu-id="00046-499">清單中要被取代的節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-499">The node being replaced in the list.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00046-500">將子節點 <paramref name="oldChild" /> 用 <paramref name="newChild" /> 節點取代。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-500">Replaces the child node <paramref name="oldChild" /> with <paramref name="newChild" /> node.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="00046-501">被取代的節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-501">The node replaced.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00046-502">如果`newChild`是已經在樹狀目錄中，則會先移除。</span><span class="sxs-lookup"><span data-stu-id="00046-502">If the `newChild` is already in the tree, it is first removed.</span></span>  
  
 <span data-ttu-id="00046-503">如果`newChild`建立另一個文件，您可以使用<xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=nameWithType>匯入目前的文件的節點。</span><span class="sxs-lookup"><span data-stu-id="00046-503">If the `newChild` was created from another document, you can use <xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=nameWithType> to import the node to the current document.</span></span> <span data-ttu-id="00046-504">匯入的節點然後傳遞至`ReplaceChild`方法。</span><span class="sxs-lookup"><span data-stu-id="00046-504">The imported node can then be passed to the `ReplaceChild` method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00046-505">下列範例會將 XML 文件中的標題項目。</span><span class="sxs-lookup"><span data-stu-id="00046-505">The following example replaces the title element in the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.ReplaceChild Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.ReplaceChild Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.ReplaceChild Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.ReplaceChild Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.ReplaceChild Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.ReplaceChild Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="00046-506">這個節點的型別不允許 <paramref name="newChild" /> 節點型別的子節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-506">This node is of a type that does not allow child nodes of the type of the <paramref name="newChild" /> node.</span>
          </span>
          <span data-ttu-id="00046-507">
            <paramref name="newChild" /> 是這個節點的上階。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-507">The <paramref name="newChild" /> is an ancestor of this node.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="00046-508">
            <paramref name="newChild" /> 由不同於建立這個節點的另一份文件所建立。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-508">The <paramref name="newChild" /> was created from a different document than the one that created this node.</span>
          </span>
          <span data-ttu-id="00046-509">這個節點是唯讀的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-509">This node is read-only.</span>
          </span>
          <span data-ttu-id="00046-510">
            <paramref name="oldChild" /> 不是這個節點的子節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-510">The <paramref name="oldChild" /> is not a child of this node.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="00046-511">
            <para>當覆寫<see langword="ReplaceChild" />衍生類別中，要正確地引發事件以便您必須呼叫<see langword="ReplaceChild" />基底類別的方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-511">
              <para>When overriding <see langword="ReplaceChild" /> in a derived class, in order for events to be raised correctly, you must call the <see langword="ReplaceChild" /> method of the base class.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Xml.XmlDocument.ImportNode(System.Xml.XmlNode,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="SchemaInfo">
      <MemberSignature Language="C#" Value="public virtual System.Xml.Schema.IXmlSchemaInfo SchemaInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.IXmlSchemaInfo SchemaInfo" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.SchemaInfo" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SchemaInfo As IXmlSchemaInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::Schema::IXmlSchemaInfo ^ SchemaInfo { System::Xml::Schema::IXmlSchemaInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SchemaInfo : System.Xml.Schema.IXmlSchemaInfo" Usage="System.Xml.XmlNode.SchemaInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.IXmlSchemaInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="00046-512">取得後結構描述驗證資訊集，在結構描述驗證之後已將其指派給這個節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-512">Gets the post schema validation infoset that has been assigned to this node as a result of schema validation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="00046-513">
            <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> 物件，包含這個節點的後結構描述驗證資訊集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-513">An <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> object containing the post schema validation infoset of this node.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00046-514"><xref:System.Xml.XmlNode.SchemaInfo%2A>這個節點是 validatied 時設定屬性。</span><span class="sxs-lookup"><span data-stu-id="00046-514">The <xref:System.Xml.XmlNode.SchemaInfo%2A> property is set when this node is validatied.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SelectNodes">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="00046-515">選取符合 XPath 運算式的節點清單。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-515">Selects a list of nodes matching the XPath expression.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00046-516">XPath 運算式可包含命名空間。</span><span class="sxs-lookup"><span data-stu-id="00046-516">XPath expressions can include namespaces.</span></span> <span data-ttu-id="00046-517">命名空間解析可透過 `XmlNamespaceManager` 予以支援。</span><span class="sxs-lookup"><span data-stu-id="00046-517">Namespace resolution is supported using the `XmlNamespaceManager`.</span></span> <span data-ttu-id="00046-518">如果 XPath 運算式包含前置詞，前置詞和命名空間 URI 配對必須新增至`XmlNamespaceManager`。</span><span class="sxs-lookup"><span data-stu-id="00046-518">If the XPath expression includes a prefix, the prefix and namespace URI pair must be added to the `XmlNamespaceManager`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="00046-519">如果 XPath 運算式不包含前置詞，則會假設命名空間 URI 是空的命名空間。</span><span class="sxs-lookup"><span data-stu-id="00046-519">If the XPath expression does not include a prefix, it is assumed that the namespace URI is the empty namespace.</span></span> <span data-ttu-id="00046-520">如果 XML 包含預設命名空間，您仍必須將前置詞和命名空間 URI 來`XmlNamespaceManager`; 否則您不會選取任何節點。</span><span class="sxs-lookup"><span data-stu-id="00046-520">If your XML includes a default namespace, you must still add a prefix and namespace URI to the `XmlNamespaceManager`; otherwise, you will not get any nodes selected.</span></span>  
  
 <span data-ttu-id="00046-521">如需詳細資訊，請參閱 <<c0> [ 選取節點使用 XPath 導覽](~/docs/standard/data/xml/select-nodes-using-xpath-navigation.md)。</span><span class="sxs-lookup"><span data-stu-id="00046-521">For more information, see [Select Nodes Using XPath Navigation](~/docs/standard/data/xml/select-nodes-using-xpath-navigation.md).</span></span> <span data-ttu-id="00046-522">程式碼範例，請從上一節中的多載清單中選擇多載。</span><span class="sxs-lookup"><span data-stu-id="00046-522">For code examples, choose an overload from the overload list in the previous section.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SelectNodes">
      <MemberSignature Language="C#" Value="public System.Xml.XmlNodeList SelectNodes (string xpath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlNodeList SelectNodes(string xpath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.SelectNodes(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SelectNodes (xpath As String) As XmlNodeList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlNodeList ^ SelectNodes(System::String ^ xpath);" />
      <MemberSignature Language="F#" Value="member this.SelectNodes : string -&gt; System.Xml.XmlNodeList" Usage="xmlNode.SelectNodes xpath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xpath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xpath">
          <span data-ttu-id="00046-523">XPath 運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-523">The XPath expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00046-524">選取符合 XPath 運算式的節點清單。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-524">Selects a list of nodes matching the XPath expression.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="00046-525">
            <see cref="T:System.Xml.XmlNodeList" />，包含符合 XPath 查詢的節點集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-525">An <see cref="T:System.Xml.XmlNodeList" /> containing a collection of nodes matching the XPath query.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00046-526">如果 XPath 運算式需要命名空間解析，您必須使用`SelectNodes`多載，這個方法會接受<xref:System.Xml.XmlNamespaceManager>作為其引數。</span><span class="sxs-lookup"><span data-stu-id="00046-526">If the XPath expression requires namespace resolution, you must use the `SelectNodes` overload which takes an <xref:System.Xml.XmlNamespaceManager> as its argument.</span></span> <span data-ttu-id="00046-527">`XmlNamespaceManager`用來解析命名空間。</span><span class="sxs-lookup"><span data-stu-id="00046-527">The `XmlNamespaceManager` is used to resolve namespaces.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="00046-528">如果 XPath 運算式不包含前置詞，則會假設命名空間 URI 是空的命名空間。</span><span class="sxs-lookup"><span data-stu-id="00046-528">If the XPath expression does not include a prefix, it is assumed that the namespace URI is the empty namespace.</span></span> <span data-ttu-id="00046-529">如果 XML 包含預設命名空間，您仍然必須使用`XmlNamespaceManager`並加入前置詞和命名空間 URI; 否則您不會選取任何節點。</span><span class="sxs-lookup"><span data-stu-id="00046-529">If your XML includes a default namespace, you must still use the `XmlNamespaceManager` and add a prefix and namespace URI to it; otherwise, you will not get any nodes selected.</span></span> <span data-ttu-id="00046-530">如需詳細資訊，請參閱 <<c0> [ 選取節點使用 XPath 導覽](~/docs/standard/data/xml/select-nodes-using-xpath-navigation.md)。</span><span class="sxs-lookup"><span data-stu-id="00046-530">For more information, see [Select Nodes Using XPath Navigation](~/docs/standard/data/xml/select-nodes-using-xpath-navigation.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="00046-531">常見的問題以公式表示 XPath 運算式是如何在運算式中包含單引號 （'） 或雙引號 （"）。</span><span class="sxs-lookup"><span data-stu-id="00046-531">A common issue when formulating XPath expressions is how to include a single quote (') or double quote (") in the expression.</span></span> <span data-ttu-id="00046-532">如果您有要搜尋包含單引號的值，必須以雙引號括住字串。</span><span class="sxs-lookup"><span data-stu-id="00046-532">If you have to search for a value that includes a single quote, you must enclose the string in double quotes.</span></span> <span data-ttu-id="00046-533">如果您要搜尋包含雙引號的值時，您必須將單引號括住的字串。</span><span class="sxs-lookup"><span data-stu-id="00046-533">If you need to search for a value that includes a double quote, you must enclose the string in single quotes.</span></span>  
  
 <span data-ttu-id="00046-534">例如，假設您有下列 XML:</span><span class="sxs-lookup"><span data-stu-id="00046-534">For example, suppose you have the following XML:</span></span>  
  
```xml  
<bookstore>  
  <book>  
    <title>&apos;Emma&apos;</title>  
  </book>  
</bookstore>  
```  
  
 <span data-ttu-id="00046-535">下列 Visual Basic 程式碼會選取包含單引號的項目：</span><span class="sxs-lookup"><span data-stu-id="00046-535">The following Visual Basic code selects an element that contains single quotes:</span></span>  
  
```csharp  
nodeList = root.SelectNodes("//book[contains(title,""'Emma'"")]")  
```  
  
 <span data-ttu-id="00046-536">這個方法是 Microsoft 擴充功能文件物件模型 (DOM)。</span><span class="sxs-lookup"><span data-stu-id="00046-536">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 <span data-ttu-id="00046-537"><xref:System.Xml.XmlNodeList>這個方法所傳回的物件會有效，但基礎的文件會保持不變。</span><span class="sxs-lookup"><span data-stu-id="00046-537">The <xref:System.Xml.XmlNodeList> object returned by this method will be valid while the underlying document remains unchanged.</span></span> <span data-ttu-id="00046-538">如果基礎文件變更時，可能會傳回非預期的結果 （將會擲回任何例外狀況）。</span><span class="sxs-lookup"><span data-stu-id="00046-538">If the underlying document changes, unexpected results may be returned (no exception will be thrown).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00046-539">下列範例會選取所有書籍的作者姓氏是 Austen，，然後變更 的書籍的價格的位置。</span><span class="sxs-lookup"><span data-stu-id="00046-539">The following example selects all books where the author's last name is Austen, and then changes the price of those books.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.SelectNodes Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.SelectNodes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.SelectNodes Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.SelectNodes Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.SelectNodes Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.SelectNodes Example/VB/source.vb#1)]  
  
 <span data-ttu-id="00046-540">此範例會使用下列 XML:</span><span class="sxs-lookup"><span data-stu-id="00046-540">This example uses the following XML:</span></span>  
  
 [!code-xml[Classic WebData XmlNode.SelectNodes Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlNode.SelectNodes Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XPath.XPathException">
          <span data-ttu-id="00046-541">XPath 運算式包含前置詞。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-541">The XPath expression contains a prefix.</span>
          </span>
          <span data-ttu-id="00046-542">請參閱 [XPath 範例](http://msdn.microsoft.com/library/1431789e-c545-4765-8c09-3057e07d3041)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-542">See [XPath Examples](http://msdn.microsoft.com/library/1431789e-c545-4765-8c09-3057e07d3041).</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.XmlNode.SelectSingleNode(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SelectNodes">
      <MemberSignature Language="C#" Value="public System.Xml.XmlNodeList SelectNodes (string xpath, System.Xml.XmlNamespaceManager nsmgr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlNodeList SelectNodes(string xpath, class System.Xml.XmlNamespaceManager nsmgr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.SelectNodes(System.String,System.Xml.XmlNamespaceManager)" />
      <MemberSignature Language="VB.NET" Value="Public Function SelectNodes (xpath As String, nsmgr As XmlNamespaceManager) As XmlNodeList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlNodeList ^ SelectNodes(System::String ^ xpath, System::Xml::XmlNamespaceManager ^ nsmgr);" />
      <MemberSignature Language="F#" Value="member this.SelectNodes : string * System.Xml.XmlNamespaceManager -&gt; System.Xml.XmlNodeList" Usage="xmlNode.SelectNodes (xpath, nsmgr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xpath" Type="System.String" />
        <Parameter Name="nsmgr" Type="System.Xml.XmlNamespaceManager" />
      </Parameters>
      <Docs>
        <param name="xpath">
          <span data-ttu-id="00046-543">XPath 運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-543">The XPath expression.</span>
          </span>
          <span data-ttu-id="00046-544">請參閱 [XPath 範例](http://msdn.microsoft.com/library/1431789e-c545-4765-8c09-3057e07d3041)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-544">See [XPath Examples](http://msdn.microsoft.com/library/1431789e-c545-4765-8c09-3057e07d3041).</span>
          </span>
        </param>
        <param name="nsmgr">
          <span data-ttu-id="00046-545">
            <see cref="T:System.Xml.XmlNamespaceManager" />，用來解析 XPath 運算式中前置詞的命名空間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-545">An <see cref="T:System.Xml.XmlNamespaceManager" /> to use for resolving namespaces for prefixes in the XPath expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00046-546">選取符合 XPath 運算式的節點清單。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-546">Selects a list of nodes matching the XPath expression.</span>
          </span>
          <span data-ttu-id="00046-547">使用提供的 <see cref="T:System.Xml.XmlNamespaceManager" /> 解析 XPath 運算式中找到的任何前置詞。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-547">Any prefixes found in the XPath expression are resolved using the supplied <see cref="T:System.Xml.XmlNamespaceManager" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="00046-548">
            <see cref="T:System.Xml.XmlNodeList" />，包含符合 XPath 查詢的節點集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-548">An <see cref="T:System.Xml.XmlNodeList" /> containing a collection of nodes matching the XPath query.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00046-549">XPath 運算式可包含命名空間。</span><span class="sxs-lookup"><span data-stu-id="00046-549">XPath expressions can include namespaces.</span></span> <span data-ttu-id="00046-550">命名空間解析可透過 `XmlNamespaceManager` 予以支援。</span><span class="sxs-lookup"><span data-stu-id="00046-550">Namespace resolution is supported using the `XmlNamespaceManager`.</span></span> <span data-ttu-id="00046-551">如果 XPath 運算式包含前置詞，前置詞和命名空間 URI 配對必須新增至`XmlNamespaceManager`。</span><span class="sxs-lookup"><span data-stu-id="00046-551">If the XPath expression includes a prefix, the prefix and namespace URI pair must be added to the `XmlNamespaceManager`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="00046-552">如果 XPath 運算式不包含前置詞，則會假設命名空間 URI 是空的命名空間。</span><span class="sxs-lookup"><span data-stu-id="00046-552">If the XPath expression does not include a prefix, it is assumed that the namespace URI is the empty namespace.</span></span> <span data-ttu-id="00046-553">如果 XML 包含預設命名空間，您仍必須將前置詞和命名空間 URI 來`XmlNamespaceManager`; 否則您不會選取任何節點。</span><span class="sxs-lookup"><span data-stu-id="00046-553">If your XML includes a default namespace, you must still add a prefix and namespace URI to the `XmlNamespaceManager`; otherwise, you will not get any nodes selected.</span></span> <span data-ttu-id="00046-554">如需詳細資訊，請參閱 <<c0> [ 選取節點使用 XPath 導覽](~/docs/standard/data/xml/select-nodes-using-xpath-navigation.md)。</span><span class="sxs-lookup"><span data-stu-id="00046-554">For more information, see [Select Nodes Using XPath Navigation](~/docs/standard/data/xml/select-nodes-using-xpath-navigation.md).</span></span>  
  
 <span data-ttu-id="00046-555">例如，如果您有下列 XML:</span><span class="sxs-lookup"><span data-stu-id="00046-555">For example, if you had the following XML:</span></span>  
  
```xml  
<bookstore xmlns="http://www.lucernepublishing.com">  
 <book>  
   <title>Pride And Prejudice</title>  
 </book>  
</bookstore>  
```  
  
 <span data-ttu-id="00046-556">下列 C# 程式碼會選取活頁簿的所有節點：</span><span class="sxs-lookup"><span data-stu-id="00046-556">The following C# code selects all book nodes:</span></span>  
  
```csharp  
XmlNamespaceManager nsmgr = new XmlNamespaceManager(doc.NameTable);  
nsmgr.AddNamespace("ab", "http://www.lucernepublishing.com");  
XmlNodeList nodelist = doc.SelectNodes("//ab:book", nsmgr);  
```  
  
> [!NOTE]
>  <span data-ttu-id="00046-557">常見的問題以公式表示 XPath 運算式是如何在運算式中包含單引號 （'） 或雙引號 （"）。</span><span class="sxs-lookup"><span data-stu-id="00046-557">A common issue when formulating XPath expressions is how to include a single quote (') or double quote (") in the expression.</span></span> <span data-ttu-id="00046-558">如果您有要搜尋包含單引號的值，必須以雙引號括住字串。</span><span class="sxs-lookup"><span data-stu-id="00046-558">If you have to search for a value that includes a single quote, you must enclose the string in double quotes.</span></span> <span data-ttu-id="00046-559">如果您要搜尋包含雙引號的值時，您必須將單引號括住的字串。</span><span class="sxs-lookup"><span data-stu-id="00046-559">If you need to search for a value that includes a double quote, you must enclose the string in single quotes.</span></span>  
  
 <span data-ttu-id="00046-560">例如，假設您有下列 XML:</span><span class="sxs-lookup"><span data-stu-id="00046-560">For example, suppose you have the following XML:</span></span>  
  
```xml  
<bookstore xmlns="http://www.lucernepublishing.com">  
  <book>  
    <title>&apos;Emma&apos;</title>  
  </book>  
</bookstore>  
```  
  
 <span data-ttu-id="00046-561">下列 Visual Basic 程式碼會選取包含單引號的項目：</span><span class="sxs-lookup"><span data-stu-id="00046-561">The following Visual Basic code selects an element that contains single quotes:</span></span>  
  
```vb  
Dim nsmgr As XmlNamespaceManager = New XmlNamespaceManager(doc.NameTable)  
nsmgr.AddNamespace("ab", "http://www.lucernepublishing.com")  
nodeList = root.SelectNodes("//ab:book[contains(ab:title,""'Emma'"")]", nsmgr)  
```  
  
 <span data-ttu-id="00046-562">這個方法是 Microsoft 擴充功能文件物件模型 (DOM)。</span><span class="sxs-lookup"><span data-stu-id="00046-562">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 <span data-ttu-id="00046-563"><xref:System.Xml.XmlNodeList>這個方法所傳回的物件會有效，但基礎的文件會保持不變。</span><span class="sxs-lookup"><span data-stu-id="00046-563">The <xref:System.Xml.XmlNodeList> object returned by this method will be valid while the underlying document remains unchanged.</span></span> <span data-ttu-id="00046-564">如果基礎文件變更時，可能會傳回非預期的結果 （將會擲回任何例外狀況）。</span><span class="sxs-lookup"><span data-stu-id="00046-564">If the underlying document changes, unexpected results may be returned (no exception will be thrown).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00046-565">下列範例會顯示每個的 ISBN 屬性的值。</span><span class="sxs-lookup"><span data-stu-id="00046-565">The following example displays the values of each of the ISBN attributes.</span></span> <span data-ttu-id="00046-566">這個範例會使用<xref:System.Xml.XmlElement>物件，繼承自<xref:System.Xml.XmlNode>類別。</span><span class="sxs-lookup"><span data-stu-id="00046-566">This example uses an <xref:System.Xml.XmlElement> object, which inherits from the <xref:System.Xml.XmlNode> class.</span></span>  
  
 [!code-cpp[XmlNode.SelectNodes1#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlNode.SelectNodes1/CPP/selectnodes1.cpp#1)]
 [!code-csharp[XmlNode.SelectNodes1#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlNode.SelectNodes1/CS/selectnodes1.cs#1)]
 [!code-vb[XmlNode.SelectNodes1#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlNode.SelectNodes1/VB/selectnodes1.vb#1)]  
  
 <span data-ttu-id="00046-567">此範例會使用該檔案，`booksort.xml`作為輸入。</span><span class="sxs-lookup"><span data-stu-id="00046-567">The example uses the file, `booksort.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlNode.SelectNodes Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlNode.SelectNodes Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XPath.XPathException">
          <span data-ttu-id="00046-568">XPath 運算式包含未定義於 <see langword="XmlNamespaceManager" /> 中的前置詞。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-568">The XPath expression contains a prefix which is not defined in the <see langword="XmlNamespaceManager" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SelectSingleNode">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="00046-569">選取符合 XPath 運算式的第一個 <see langword="XmlNode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-569">Selects the first <see langword="XmlNode" /> that matches the XPath expression.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00046-570">XPath 運算式可包含命名空間。</span><span class="sxs-lookup"><span data-stu-id="00046-570">XPath expressions can include namespaces.</span></span> <span data-ttu-id="00046-571">命名空間解析可透過 `XmlNamespaceManager` 予以支援。</span><span class="sxs-lookup"><span data-stu-id="00046-571">Namespace resolution is supported using the `XmlNamespaceManager`.</span></span> <span data-ttu-id="00046-572">如果 XPath 運算式包含前置詞，前置詞和命名空間 URI 配對必須新增至`XmlNamespaceManager`。</span><span class="sxs-lookup"><span data-stu-id="00046-572">If the XPath expression includes a prefix, the prefix and namespace URI pair must be added to the `XmlNamespaceManager`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="00046-573">如果 XPath 運算式不包含前置詞，則會假設命名空間 URI 是空的命名空間。</span><span class="sxs-lookup"><span data-stu-id="00046-573">If the XPath expression does not include a prefix, it is assumed that the namespace URI is the empty namespace.</span></span> <span data-ttu-id="00046-574">如果 XML 包含預設命名空間，您仍必須將前置詞和命名空間 URI 來`XmlNamespaceManager`; 否則您不會選取任何節點。</span><span class="sxs-lookup"><span data-stu-id="00046-574">If your XML includes a default namespace, you must still add a prefix and namespace URI to the `XmlNamespaceManager`; otherwise, you will not get any nodes selected.</span></span> <span data-ttu-id="00046-575">如需詳細資訊，請參閱 <<c0> [ 選取節點使用 XPath 導覽](~/docs/standard/data/xml/select-nodes-using-xpath-navigation.md)。</span><span class="sxs-lookup"><span data-stu-id="00046-575">For more information, see [Select Nodes Using XPath Navigation](~/docs/standard/data/xml/select-nodes-using-xpath-navigation.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00046-576">下列範例會傳回第一本書籍，相符的作者名稱。</span><span class="sxs-lookup"><span data-stu-id="00046-576">The following example returns the first book with the matching author name.</span></span> <span data-ttu-id="00046-577">`XmlNamespaceManager` 會解析 XPath 運算式中的預設命名空間。</span><span class="sxs-lookup"><span data-stu-id="00046-577">The `XmlNamespaceManager` resolves the default namespace in the XPath expression.</span></span>  
  
 [!code-cpp[XmlNode.SelectSingleNode2#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlNode.SelectSingleNode2/CPP/XmlNode.SelectSingleNode2.cpp#1)]
 [!code-csharp[XmlNode.SelectSingleNode2#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlNode.SelectSingleNode2/CS/selectsingnode2.cs#1)]
 [!code-vb[XmlNode.SelectSingleNode2#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlNode.SelectSingleNode2/VB/selectsingnode2.vb#1)]  
  
 <span data-ttu-id="00046-578">此範例會使用該檔案，`newbooks.xml`作為輸入。</span><span class="sxs-lookup"><span data-stu-id="00046-578">The example uses the file, `newbooks.xml`, as input.</span></span>  
  
 [!code-xml[XmlNode.SelectSingleNode2#2](~/samples/snippets/xml/VS_Snippets_Data/XmlNode.SelectSingleNode2/XML/newbooks.xml#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SelectSingleNode">
      <MemberSignature Language="C#" Value="public System.Xml.XmlNode SelectSingleNode (string xpath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlNode SelectSingleNode(string xpath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.SelectSingleNode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SelectSingleNode (xpath As String) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlNode ^ SelectSingleNode(System::String ^ xpath);" />
      <MemberSignature Language="F#" Value="member this.SelectSingleNode : string -&gt; System.Xml.XmlNode" Usage="xmlNode.SelectSingleNode xpath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xpath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xpath">
          <span data-ttu-id="00046-579">XPath 運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-579">The XPath expression.</span>
          </span>
          <span data-ttu-id="00046-580">請參閱 [XPath 範例](http://msdn.microsoft.com/library/1431789e-c545-4765-8c09-3057e07d3041)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-580">See [XPath Examples](http://msdn.microsoft.com/library/1431789e-c545-4765-8c09-3057e07d3041).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00046-581">選取符合 XPath 運算式的第一個 <see langword="XmlNode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-581">Selects the first <see langword="XmlNode" /> that matches the XPath expression.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="00046-582">符合 XPath 查詢的第一個 <see langword="XmlNode" />，如果找不到符合的節點，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-582">The first <see langword="XmlNode" /> that matches the XPath query or <see langword="null" /> if no matching node is found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00046-583">如果 XPath 運算式需要命名空間解析，您必須使用`SelectSingleNode`多載，這個方法會接受<xref:System.Xml.XmlNamespaceManager>作為其引數。</span><span class="sxs-lookup"><span data-stu-id="00046-583">If the XPath expression requires namespace resolution, you must use the `SelectSingleNode` overload which takes an <xref:System.Xml.XmlNamespaceManager> as its argument.</span></span> <span data-ttu-id="00046-584">`XmlNamespaceManager`用來解析命名空間。</span><span class="sxs-lookup"><span data-stu-id="00046-584">The `XmlNamespaceManager` is used to resolve namespaces.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="00046-585">如果 XPath 運算式不包含前置詞，則會假設命名空間 URI 是空的命名空間。</span><span class="sxs-lookup"><span data-stu-id="00046-585">If the XPath expression does not include a prefix, it is assumed that the namespace URI is the empty namespace.</span></span> <span data-ttu-id="00046-586">如果 XML 包含預設命名空間，您仍然必須使用`XmlNamespaceManager`並加入前置詞和命名空間 URI; 否則您將無法取得選取的節點。</span><span class="sxs-lookup"><span data-stu-id="00046-586">If your XML includes a default namespace, you must still use the `XmlNamespaceManager` and add a prefix and namespace URI to it; otherwise, you will not get a selected node.</span></span> <span data-ttu-id="00046-587">如需詳細資訊，請參閱 <<c0> [ 選取節點使用 XPath 導覽](~/docs/standard/data/xml/select-nodes-using-xpath-navigation.md)。</span><span class="sxs-lookup"><span data-stu-id="00046-587">For more information, see [Select Nodes Using XPath Navigation](~/docs/standard/data/xml/select-nodes-using-xpath-navigation.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="00046-588">常見的問題以公式表示 XPath 運算式是如何在運算式中包含單引號 （'） 或雙引號 （"）。</span><span class="sxs-lookup"><span data-stu-id="00046-588">A common issue when formulating XPath expressions is how to include a single quote (') or double quote (") in the expression.</span></span> <span data-ttu-id="00046-589">如果您有要搜尋包含單引號的值，必須以雙引號括住字串。</span><span class="sxs-lookup"><span data-stu-id="00046-589">If you have to search for a value that includes a single quote, you must enclose the string in double quotes.</span></span> <span data-ttu-id="00046-590">如果您要搜尋包含雙引號的值時，您必須將單引號括住的字串。</span><span class="sxs-lookup"><span data-stu-id="00046-590">If you need to search for a value that includes a double quote, you must enclose the string in single quotes.</span></span>  
  
 <span data-ttu-id="00046-591">例如，假設您有下列 XML:</span><span class="sxs-lookup"><span data-stu-id="00046-591">For example, suppose you have the following XML:</span></span>  
  
```xml  
<bookstore>  
  <book>  
    <title>&apos;Emma&apos;</title>  
  </book>  
</bookstore>  
```  
  
 <span data-ttu-id="00046-592">下列 Visual Basic 程式碼會選取包含單引號的項目：</span><span class="sxs-lookup"><span data-stu-id="00046-592">The following Visual Basic code selects an element that contains single quotes:</span></span>  
  
```  
book = root.SelectSingleNode("descendant::book[title=""'Emma'""]")  
```  
  
 <span data-ttu-id="00046-593">這個方法是 Microsoft 擴充功能文件物件模型 (DOM)。</span><span class="sxs-lookup"><span data-stu-id="00046-593">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00046-594">下列範例會變更第一個 Jane Austen 本書的價格。</span><span class="sxs-lookup"><span data-stu-id="00046-594">The following example changes the price of the first Jane Austen book.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.SelectSingleNode Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.SelectSingleNode Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.SelectSingleNode Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.SelectSingleNode Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.SelectSingleNode Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.SelectSingleNode Example/VB/source.vb#1)]  
  
 <span data-ttu-id="00046-595">此範例會使用該檔案，`booksort.xml`作為輸入。</span><span class="sxs-lookup"><span data-stu-id="00046-595">The example uses the file, `booksort.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlNode.SelectSingleNode Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlNode.SelectSingleNode Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XPath.XPathException">
          <span data-ttu-id="00046-596">XPath 運算式包含前置詞。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-596">The XPath expression contains a prefix.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.XmlNode.SelectNodes(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SelectSingleNode">
      <MemberSignature Language="C#" Value="public System.Xml.XmlNode SelectSingleNode (string xpath, System.Xml.XmlNamespaceManager nsmgr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlNode SelectSingleNode(string xpath, class System.Xml.XmlNamespaceManager nsmgr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.SelectSingleNode(System.String,System.Xml.XmlNamespaceManager)" />
      <MemberSignature Language="VB.NET" Value="Public Function SelectSingleNode (xpath As String, nsmgr As XmlNamespaceManager) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlNode ^ SelectSingleNode(System::String ^ xpath, System::Xml::XmlNamespaceManager ^ nsmgr);" />
      <MemberSignature Language="F#" Value="member this.SelectSingleNode : string * System.Xml.XmlNamespaceManager -&gt; System.Xml.XmlNode" Usage="xmlNode.SelectSingleNode (xpath, nsmgr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xpath" Type="System.String" />
        <Parameter Name="nsmgr" Type="System.Xml.XmlNamespaceManager" />
      </Parameters>
      <Docs>
        <param name="xpath">
          <span data-ttu-id="00046-597">XPath 運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-597">The XPath expression.</span>
          </span>
          <span data-ttu-id="00046-598">請參閱 [XPath 範例](http://msdn.microsoft.com/library/1431789e-c545-4765-8c09-3057e07d3041)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-598">See [XPath Examples](http://msdn.microsoft.com/library/1431789e-c545-4765-8c09-3057e07d3041).</span>
          </span>
        </param>
        <param name="nsmgr">
          <span data-ttu-id="00046-599">
            <see cref="T:System.Xml.XmlNamespaceManager" />，用來解析 XPath 運算式中前置詞的命名空間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-599">An <see cref="T:System.Xml.XmlNamespaceManager" /> to use for resolving namespaces for prefixes in the XPath expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00046-600">選取符合 XPath 運算式的第一個 <see langword="XmlNode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-600">Selects the first <see langword="XmlNode" /> that matches the XPath expression.</span>
          </span>
          <span data-ttu-id="00046-601">使用提供的 <see cref="T:System.Xml.XmlNamespaceManager" /> 解析 XPath 運算式中找到的任何前置詞。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-601">Any prefixes found in the XPath expression are resolved using the supplied <see cref="T:System.Xml.XmlNamespaceManager" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="00046-602">符合 XPath 查詢的第一個 <see langword="XmlNode" />，如果找不到符合的節點，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-602">The first <see langword="XmlNode" /> that matches the XPath query or <see langword="null" /> if no matching node is found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00046-603">XPath 運算式可包含命名空間。</span><span class="sxs-lookup"><span data-stu-id="00046-603">XPath expressions can include namespaces.</span></span> <span data-ttu-id="00046-604">命名空間解析可透過 `XmlNamespaceManager` 予以支援。</span><span class="sxs-lookup"><span data-stu-id="00046-604">Namespace resolution is supported using the `XmlNamespaceManager`.</span></span> <span data-ttu-id="00046-605">如果 XPath 運算式包含前置詞，前置詞和命名空間 URI 配對必須新增至`XmlNamespaceManager`。</span><span class="sxs-lookup"><span data-stu-id="00046-605">If the XPath expression includes a prefix, the prefix and namespace URI pair must be added to the `XmlNamespaceManager`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="00046-606">如果 XPath 運算式不包含前置詞，則會假設命名空間 URI 是空的命名空間。</span><span class="sxs-lookup"><span data-stu-id="00046-606">If the XPath expression does not include a prefix, it is assumed that the namespace URI is the empty namespace.</span></span> <span data-ttu-id="00046-607">如果 XML 包含預設命名空間，您仍必須將前置詞和命名空間 URI 來`XmlNamespaceManager`; 否則您將無法取得選取的節點。</span><span class="sxs-lookup"><span data-stu-id="00046-607">If your XML includes a default namespace, you must still add a prefix and namespace URI to the `XmlNamespaceManager`; otherwise, you will not get a node selected.</span></span> <span data-ttu-id="00046-608">如需詳細資訊，請參閱 <<c0> [ 選取節點使用 XPath 導覽](~/docs/standard/data/xml/select-nodes-using-xpath-navigation.md)。</span><span class="sxs-lookup"><span data-stu-id="00046-608">For more information, see [Select Nodes Using XPath Navigation](~/docs/standard/data/xml/select-nodes-using-xpath-navigation.md).</span></span>  
  
 <span data-ttu-id="00046-609">例如，如果您有下列 XML:</span><span class="sxs-lookup"><span data-stu-id="00046-609">For example, if you had the following XML:</span></span>  
  
```xml  
<bookstore xmlns="http://www.lucernepublishing.com">  
 <book>  
   <title>Pride And Prejudice</title>  
 </book>  
</bookstore>  
```  
  
 <span data-ttu-id="00046-610">下列 C# 程式碼會選取第一個書籍節點：</span><span class="sxs-lookup"><span data-stu-id="00046-610">The following C# code selects the first book node:</span></span>  
  
```csharp  
XmlNamespaceManager nsmgr = new XmlNamespaceManager(doc.NameTable);  
nsmgr.AddNamespace("ab", "http://www.lucernepublishing.com");  
XmlNode book = doc.SelectSingleNode("//ab:book", nsmgr);  
```  
  
> [!NOTE]
>  <span data-ttu-id="00046-611">常見的問題以公式表示 XPath 運算式是如何在運算式中包含單引號 （'） 或雙引號 （"）。</span><span class="sxs-lookup"><span data-stu-id="00046-611">A common issue when formulating XPath expressions is how to include a single quote (') or double quote (") in the expression.</span></span> <span data-ttu-id="00046-612">如果您有要搜尋包含單引號的值，必須以雙引號括住字串。</span><span class="sxs-lookup"><span data-stu-id="00046-612">If you have to search for a value that includes a single quote, you must enclose the string in double quotes.</span></span> <span data-ttu-id="00046-613">如果您要搜尋包含雙引號的值時，您必須將單引號括住的字串。</span><span class="sxs-lookup"><span data-stu-id="00046-613">If you need to search for a value that includes a double quote, you must enclose the string in single quotes.</span></span>  
  
 <span data-ttu-id="00046-614">例如，假設您有下列 XML:</span><span class="sxs-lookup"><span data-stu-id="00046-614">For example, suppose you have the following XML:</span></span>  
  
```xml  
<bookstore xmlns="http://www.lucernepublishing.com">  
  <book>  
    <title>&apos;Emma&apos;</title>  
  </book>  
</bookstore>  
```  
  
 <span data-ttu-id="00046-615">下列 Visual Basic 程式碼會選取包含單引號的項目：</span><span class="sxs-lookup"><span data-stu-id="00046-615">The following Visual Basic code selects an element that contains single quotes:</span></span>  
  
```vb  
Dim nsmgr As XmlNamespaceManager = New XmlNamespaceManager(doc.NameTable)  
nsmgr.AddNamespace("ab", "http://www.lucernepublishing.com")  
book = root.SelectSingleNode("descendant::ab:book[ab:title=""'Emma'""]", nsmgr)  
```  
  
 <span data-ttu-id="00046-616">這個方法是 Microsoft 擴充功能文件物件模型 (DOM)。</span><span class="sxs-lookup"><span data-stu-id="00046-616">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00046-617">下列範例會選取使用相符的 ISBN 值書。</span><span class="sxs-lookup"><span data-stu-id="00046-617">The following example selects the book with the matching ISBN value.</span></span>  
  
 [!code-cpp[XmlNode.SelectSingleNode1#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlNode.SelectSingleNode1/CPP/selectsingnode.cpp#1)]
 [!code-csharp[XmlNode.SelectSingleNode1#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlNode.SelectSingleNode1/CS/selectsingnode.cs#1)]
 [!code-vb[XmlNode.SelectSingleNode1#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlNode.SelectSingleNode1/VB/selectsingnode.vb#1)]  
  
 <span data-ttu-id="00046-618">此範例會使用該檔案，`booksort.xml`作為輸入。</span><span class="sxs-lookup"><span data-stu-id="00046-618">The example uses the file, `booksort.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlNode.SelectNodes Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlNode.SelectNodes Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XPath.XPathException">
          <span data-ttu-id="00046-619">XPath 運算式包含未定義於 <see langword="XmlNamespaceManager" /> 中的前置詞。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-619">The XPath expression contains a prefix which is not defined in the <see langword="XmlNamespaceManager" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Supports">
      <MemberSignature Language="C#" Value="public virtual bool Supports (string feature, string version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Supports(string feature, string version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.Supports(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Supports (feature As String, version As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Supports(System::String ^ feature, System::String ^ version);" />
      <MemberSignature Language="F#" Value="abstract member Supports : string * string -&gt; bool&#xA;override this.Supports : string * string -&gt; bool" Usage="xmlNode.Supports (feature, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="feature" Type="System.String" />
        <Parameter Name="version" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="feature">
          <span data-ttu-id="00046-620">要測試的功能套件 (Package) 名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-620">The package name of the feature to test.</span>
          </span>
          <span data-ttu-id="00046-621">這個名稱並不區分大小寫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-621">This name is not case-sensitive.</span>
          </span>
        </param>
        <param name="version">
          <span data-ttu-id="00046-622">要測試的封裝名稱版本編號。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-622">The version number of the package name to test.</span>
          </span>
          <span data-ttu-id="00046-623">如果沒有指定版本 (null)，則支援任何版本的功能，將使這個方法傳回 true。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-623">If the version is not specified (null), supporting any version of the feature causes the method to return true.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00046-624">測試 DOM 實作 (Implementation) 是否實作特定功能。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-624">Tests if the DOM implementation implements a specific feature.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="00046-625">如果在指定的版本實作這個功能，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-625">
              <see langword="true" /> if the feature is implemented in the specified version; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="00046-626">下表說明傳回 <see langword="true" /> 的組合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-626">The following table describes the combinations that return <see langword="true" />.</span>
          </span>
          <span data-ttu-id="00046-627">
            <list type="table">
              <listheader>
                <term> 功能  </term>
                <description> 版本  </description>
              </listheader>
              <item>
                <term> XML  </term>
                <description> 1.0  </description>
              </item>
              <item>
                <term> XML  </term>
                <description> 2.0  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-627">
              <list type="table">
                <listheader>
                  <term> Feature  </term>
                  <description> Version  </description>
                </listheader>
                <item>
                  <term> XML  </term>
                  <description> 1.0  </description>
                </item>
                <item>
                  <term> XML  </term>
                  <description> 2.0  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="00046-628">如需這個成員的說明，請參閱 <see cref="M:System.Xml.XmlNode.GetEnumerator" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-628">For a description of this member, see <see cref="M:System.Xml.XmlNode.GetEnumerator" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="00046-629">傳回集合的列舉程式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-629">Returns an enumerator for the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00046-630">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="00046-630">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="00046-631">只有在 <xref:System.Xml.XmlNode> 執行個體轉換成 <xref:System.Collections.IEnumerable> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="00046-631">It can be used only when the <xref:System.Xml.XmlNode> instance is cast to an <xref:System.Collections.IEnumerable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="00046-632">如需這個成員的說明，請參閱 <see cref="M:System.Xml.XmlNode.Clone" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-632">For a description of this member, see <see cref="M:System.Xml.XmlNode.Clone" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="00046-633">呼叫來源節點的複本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-633">A copy of the node from which it is called.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00046-634">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="00046-634">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="00046-635">只有在 <xref:System.Xml.XmlNode> 執行個體轉換成 <xref:System.ICloneable> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="00046-635">It can be used only when the <xref:System.Xml.XmlNode> instance is cast to an <xref:System.ICloneable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public virtual string Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.Value" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Value { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : string with get, set" Usage="System.Xml.XmlNode.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="00046-636">取得或設定節點的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-636">Gets or sets the value of the node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="00046-637">傳回值需視節點的 <see cref="P:System.Xml.XmlNode.NodeType" /> 而定：</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-637">The value returned depends on the <see cref="P:System.Xml.XmlNode.NodeType" /> of the node:</span>
          </span>
          <span data-ttu-id="00046-638">
            <list type="table">
              <listheader>
                <term> 型別</term>
                <description>值</description>
              </listheader>
              <item>
                <term>屬性</term>
                <description>屬性的值。</description>
              </item>
              <item>
                <term> CDATASection </term>
                <description> CDATA 區段的內容。</description>
              </item>
              <item>
                <term> 註解</term>
                <description>註解的內容。</description>
              </item>
              <item>
                <term> 文件</term>
                <description>
                  <see langword="null" />。</description>
              </item>
              <item>
                <term> DocumentFragment </term>
                <description>
                  <see langword="null" />。</description>
              </item>
              <item>
                <term> DocumentType </term>
                <description>
                  <see langword="null" />。</description>
              </item>
              <item>
                <term> 項目</term>
                <description>
                  <see langword="null" />。您可以使用<see cref="P:System.Xml.XmlElement.InnerText" />或<see cref="P:System.Xml.XmlElement.InnerXml" />屬性，存取項目節點的值。</description>
              </item>
              <item>
                <term> 實體</term>
                <description>
                  <see langword="null" />。</description>
              </item>
              <item>
                <term> EntityReference </term>
                <description>
                  <see langword="null" />。</description>
              </item>
              <item>
                <term> 標記法</term>
                <description>
                  <see langword="null" />。</description>
              </item>
              <item>
                <term> ProcessingInstruction </term>
                <description>整個內容，目標除外。</description>
              </item>
              <item>
                <term> 文字</term>
                <description>文字節點的內容。</description>
              </item>
              <item>
                <term> SignificantWhitespace </term>
                <description>泛空白字元。空白字元可以包含一或多個空字元、歸位字元、換行字元或定位字元。</description>
              </item>
              <item>
                <term> 空白字元</term>
                <description>泛空白字元。空白字元可以包含一或多個空字元、歸位字元、換行字元或定位字元。</description>
              </item>
              <item>
                <term> XmlDeclaration </term>
                <description>宣告的內容 (也就是一切之間&lt;？ xml 與？&gt;)。  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-638">
              <list type="table">
                <listheader>
                  <term> Type  </term>
                  <description> Value  </description>
                </listheader>
                <item>
                  <term> Attribute  </term>
                  <description> The value of the attribute.  </description>
                </item>
                <item>
                  <term> CDATASection  </term>
                  <description> The content of the CDATA Section.  </description>
                </item>
                <item>
                  <term> Comment  </term>
                  <description> The content of the comment.  </description>
                </item>
                <item>
                  <term> Document  </term>
                  <description>
                    <see langword="null" />.  </description>
                </item>
                <item>
                  <term> DocumentFragment  </term>
                  <description>
                    <see langword="null" />.  </description>
                </item>
                <item>
                  <term> DocumentType  </term>
                  <description>
                    <see langword="null" />.  </description>
                </item>
                <item>
                  <term> Element  </term>
                  <description>
                    <see langword="null" />. You can use the <see cref="P:System.Xml.XmlElement.InnerText" /> or <see cref="P:System.Xml.XmlElement.InnerXml" /> properties to access the value of the element node.  </description>
                </item>
                <item>
                  <term> Entity  </term>
                  <description>
                    <see langword="null" />.  </description>
                </item>
                <item>
                  <term> EntityReference  </term>
                  <description>
                    <see langword="null" />.  </description>
                </item>
                <item>
                  <term> Notation  </term>
                  <description>
                    <see langword="null" />.  </description>
                </item>
                <item>
                  <term> ProcessingInstruction  </term>
                  <description> The entire content excluding the target.  </description>
                </item>
                <item>
                  <term> Text  </term>
                  <description> The content of the text node.  </description>
                </item>
                <item>
                  <term> SignificantWhitespace  </term>
                  <description> The white space characters. White space can consist of one or more space characters, carriage returns, line feeds, or tabs.  </description>
                </item>
                <item>
                  <term> Whitespace  </term>
                  <description> The white space characters. White space can consist of one or more space characters, carriage returns, line feeds, or tabs.  </description>
                </item>
                <item>
                  <term> XmlDeclaration  </term>
                  <description> The content of the declaration (that is, everything between &lt;?xml and ?&gt;).  </description>
                </item>
              </list>
            </span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="00046-639">下列範例會將新屬性的 XML 文件和設定<xref:System.Xml.XmlNode.Value%2A>新屬性的屬性。</span><span class="sxs-lookup"><span data-stu-id="00046-639">The following example adds a new attribute to the XML document and sets the <xref:System.Xml.XmlNode.Value%2A> property of the new attribute.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.GetNamespaceOfPrefix Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.GetNamespaceOfPrefix Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.GetNamespaceOfPrefix Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.GetNamespaceOfPrefix Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.GetNamespaceOfPrefix Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.GetNamespaceOfPrefix Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="00046-640">設定唯讀節點的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-640">Setting the value of a node that is read-only.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="00046-641">設定不應該有值的節點值 (例如，Element 節點)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-641">Setting the value of a node that is not supposed to have a value (for example, an Element node).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteContentTo">
      <MemberSignature Language="C#" Value="public abstract void WriteContentTo (System.Xml.XmlWriter w);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteContentTo(class System.Xml.XmlWriter w) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.WriteContentTo(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteContentTo (w As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteContentTo(System::Xml::XmlWriter ^ w);" />
      <MemberSignature Language="F#" Value="abstract member WriteContentTo : System.Xml.XmlWriter -&gt; unit" Usage="xmlNode.WriteContentTo w" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="w" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="w">
          <span data-ttu-id="00046-642">要儲存的目標 <see langword="XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-642">The <see langword="XmlWriter" /> to which you want to save.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00046-643">在衍生類別中覆寫時，將節點的所有子節點儲存至指定的 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-643">Saves all the child nodes of the node to the specified <see cref="T:System.Xml.XmlWriter" />, when overridden in a derived class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00046-644">這個方法是 Microsoft 擴充功能文件物件模型 (DOM)。</span><span class="sxs-lookup"><span data-stu-id="00046-644">This method is a Microsoft extension to the Document Object Model (DOM).</span></span> <span data-ttu-id="00046-645">它相當於<xref:System.Xml.XmlNode.InnerXml%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="00046-645">It is functionally equivalent to the <xref:System.Xml.XmlNode.InnerXml%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00046-646">下列範例會顯示到主控台的根節點的內容。</span><span class="sxs-lookup"><span data-stu-id="00046-646">The following example displays the contents of the root node to the console.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.WriteContentTo Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.WriteContentTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.WriteContentTo Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.WriteContentTo Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.WriteContentTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.WriteContentTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlNode.WriteTo(System.Xml.XmlWriter)" />
      </Docs>
    </Member>
    <Member MemberName="WriteTo">
      <MemberSignature Language="C#" Value="public abstract void WriteTo (System.Xml.XmlWriter w);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteTo(class System.Xml.XmlWriter w) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.WriteTo(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteTo (w As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteTo(System::Xml::XmlWriter ^ w);" />
      <MemberSignature Language="F#" Value="abstract member WriteTo : System.Xml.XmlWriter -&gt; unit" Usage="xmlNode.WriteTo w" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="w" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="w">
          <span data-ttu-id="00046-647">要儲存的目標 <see langword="XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-647">The <see langword="XmlWriter" /> to which you want to save.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00046-648">在衍生類別中覆寫時，將目前節點儲存至指定的 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00046-648">Saves the current node to the specified <see cref="T:System.Xml.XmlWriter" />, when overridden in a derived class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00046-649">這個方法是 Microsoft 擴充功能文件物件模型 (DOM)。</span><span class="sxs-lookup"><span data-stu-id="00046-649">This method is a Microsoft extension to the Document Object Model (DOM).</span></span> <span data-ttu-id="00046-650">它相當於<xref:System.Xml.XmlNode.OuterXml%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="00046-650">It is functionally equivalent to the <xref:System.Xml.XmlNode.OuterXml%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00046-651">下列範例會在主控台中顯示的根節點。</span><span class="sxs-lookup"><span data-stu-id="00046-651">The following example displays the root node to the console.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.WriteTo Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.WriteTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.WriteTo Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.WriteTo Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.WriteTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.WriteTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>