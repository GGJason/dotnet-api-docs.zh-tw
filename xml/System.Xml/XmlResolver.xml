<Type Name="XmlResolver" FullName="System.Xml.XmlResolver">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c3dfd0aa9e34c8221e27462ebd6d1e33b376f82e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class XmlResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit XmlResolver extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlResolver" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class XmlResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlResolver abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="6c774-101">解析由統一資源識別項 (URI) 所命名的外部 XML 資源。</span>
      <span class="sxs-lookup">
        <span data-stu-id="6c774-101">Resolves external XML resources named by a Uniform Resource Identifier (URI).</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6c774-102"><xref:System.Xml.XmlResolver>類型用來解析外部 XML 資源，例如實體、 文件類型定義 (Dtd) 或結構描述。</span><span class="sxs-lookup"><span data-stu-id="6c774-102">The <xref:System.Xml.XmlResolver> type is used to resolve external XML resources, such as entities, document type definitions (DTDs), or schemas.</span></span> <span data-ttu-id="6c774-103">它也是用來處理程序包含和匯入可延伸樣式表語言 (XSL) 樣式表或 XML 結構描述定義語言 (XSD) 結構描述中所找到的項目。</span><span class="sxs-lookup"><span data-stu-id="6c774-103">It is also used to process include and import elements found in Extensible Stylesheet Language (XSL) style sheets or XML Schema definition language (XSD) schemas.</span></span>  
  
 <span data-ttu-id="6c774-104"><xref:System.Xml.XmlResolver> 會處理所有層面交涉的資源，包括處理安全性認證、 開啟資料來源連接，以及傳回資源的資料流或其他類型的物件形式的連接。</span><span class="sxs-lookup"><span data-stu-id="6c774-104"><xref:System.Xml.XmlResolver> handles all aspects of negotiating the connection to the resources, including handling security credentials, opening the connection to the data source, and returning the resource in the form of a stream or other object type.</span></span> <span data-ttu-id="6c774-105">呼叫物件<xref:System.Xml.XmlResolver>具有解譯資料流的工作。</span><span class="sxs-lookup"><span data-stu-id="6c774-105">The object that calls <xref:System.Xml.XmlResolver> has the task of interpreting the stream.</span></span>  
  
 <span data-ttu-id="6c774-106"><xref:System.Xml>命名空間包含的兩個具象實作<xref:System.Xml.XmlResolver>類別：</span><span class="sxs-lookup"><span data-stu-id="6c774-106">The <xref:System.Xml> namespace includes two concrete implementations of the <xref:System.Xml.XmlResolver> class:</span></span>  
  
-   <span data-ttu-id="6c774-107"><xref:System.Xml.XmlUrlResolver> 是中的所有類別的預設解析程式<xref:System.Xml>命名空間。</span><span class="sxs-lookup"><span data-stu-id="6c774-107"><xref:System.Xml.XmlUrlResolver> is the default resolver for all classes in the <xref:System.Xml> namespace.</span></span> <span data-ttu-id="6c774-108">它支援 `file://` 及 `http://` 通訊協定，以及 <xref:System.Net.WebRequest?displayProperty=nameWithType> 類別的要求。</span><span class="sxs-lookup"><span data-stu-id="6c774-108">It supports the `file://` and `http://` protocols and requests from the <xref:System.Net.WebRequest?displayProperty=nameWithType> class.</span></span> <span data-ttu-id="6c774-109">擴充類別來改善效能的範例，請參閱<xref:System.Xml.XmlUrlResolver>參考頁面。</span><span class="sxs-lookup"><span data-stu-id="6c774-109">For examples of extending the class to improve performance, see the <xref:System.Xml.XmlUrlResolver> reference page.</span></span>  
  
-   <span data-ttu-id="6c774-110"><xref:System.Xml.XmlSecureResolver> 可協助保護另一部<xref:System.Xml.XmlResolver>物件所包裝的物件，並限制其可存取的資源。</span><span class="sxs-lookup"><span data-stu-id="6c774-110"><xref:System.Xml.XmlSecureResolver> helps secure another <xref:System.Xml.XmlResolver> object by wrapping the object object and restricting the resources that it can access.</span></span> <span data-ttu-id="6c774-111">例如，<xref:System.Xml.XmlSecureResolver>可以禁止存取特定的網際網路網站或區域。</span><span class="sxs-lookup"><span data-stu-id="6c774-111">For example, the <xref:System.Xml.XmlSecureResolver> can prohibit access to specific Internet sites or zones.</span></span>  
  
 <span data-ttu-id="6c774-112">您可以建立，並指定您自己的解析程式。</span><span class="sxs-lookup"><span data-stu-id="6c774-112">You can create and specify your own resolver.</span></span> <span data-ttu-id="6c774-113">如果您未指定解決器，讀取器會使用預設<xref:System.Xml.XmlUrlResolver>不具使用者認證。</span><span class="sxs-lookup"><span data-stu-id="6c774-113">If you don't specify a resolver, the reader uses a default <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span>  
  
 <span data-ttu-id="6c774-114">藉由設定 <xref:System.Xml.XmlResolver> 屬性並將 <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> 物件傳遞至 <xref:System.Xml.XmlReaderSettings> 方法，可以指定要使用的 <xref:System.Xml.XmlReader.Create%2A>。</span><span class="sxs-lookup"><span data-stu-id="6c774-114">You specify the <xref:System.Xml.XmlResolver> to use by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property and passing the <xref:System.Xml.XmlReaderSettings> object to the <xref:System.Xml.XmlReader.Create%2A> method.</span></span>  
  
 <span data-ttu-id="6c774-115">如果需要驗證的系統上儲存資源，您會使用<xref:System.Xml.XmlResolver.Credentials%2A?displayProperty=nameWithType>屬性來指定所需的認證。</span><span class="sxs-lookup"><span data-stu-id="6c774-115">If the resource is stored on a system that requires authentication, you use the <xref:System.Xml.XmlResolver.Credentials%2A?displayProperty=nameWithType> property to specify the necessary credentials.</span></span>  
  
## <a name="supplying-authentication-credentials"></a><span data-ttu-id="6c774-116">提供驗證認證</span><span class="sxs-lookup"><span data-stu-id="6c774-116">Supplying authentication credentials</span></span>  
 <span data-ttu-id="6c774-117">包含要讀取的 XML 資料的檔案可能受限制的存取原則。</span><span class="sxs-lookup"><span data-stu-id="6c774-117">The file that contains the XML data to read may have a restricted access policy.</span></span> <span data-ttu-id="6c774-118">如果需要驗證才可存取網路資源，請使用 <xref:System.Xml.XmlResolver.Credentials%2A> 屬性指定必要的認證。</span><span class="sxs-lookup"><span data-stu-id="6c774-118">If authentication is required to access a network resource, use the <xref:System.Xml.XmlResolver.Credentials%2A> property to specify the necessary credentials.</span></span> <span data-ttu-id="6c774-119">如果<xref:System.Xml.XmlResolver.Credentials%2A>屬性未設定，認證會設定為`null`。</span><span class="sxs-lookup"><span data-stu-id="6c774-119">If the <xref:System.Xml.XmlResolver.Credentials%2A> property is not set, credentials are set to `null`.</span></span>  
  
 <span data-ttu-id="6c774-120">例如，假設從進行驗證 web 要求資料時，所需的認證。</span><span class="sxs-lookup"><span data-stu-id="6c774-120">For example, assume that credentials are needed when requesting data from the web for authentication purposes.</span></span> <span data-ttu-id="6c774-121">除非 web 虛擬目錄允許匿名存取，您必須設定<xref:System.Xml.XmlResolver.Credentials%2A>屬性提供的認證。</span><span class="sxs-lookup"><span data-stu-id="6c774-121">Unless the web virtual directory allows anonymous access, you must set the <xref:System.Xml.XmlResolver.Credentials%2A> property to supply credentials.</span></span> <span data-ttu-id="6c774-122">下列範例會建立<xref:System.Xml.XmlReader>物件，使用<xref:System.Xml.XmlUrlResolver>與預設的認證來存取http://localhost/bookstore/inventory.xml站台。</span><span class="sxs-lookup"><span data-stu-id="6c774-122">The following example creates an <xref:System.Xml.XmlReader> object that uses an <xref:System.Xml.XmlUrlResolver> with default credentials to access the http://localhost/bookstore/inventory.xml site.</span></span>  
  
 [!code-cpp[XmlReaderSettings.cctor#2](~/samples/snippets/cpp/VS_Snippets_Data/XmlReaderSettings.cctor/CPP/XmlReaderSettings.cctor.cpp#2)]
 [!code-csharp[XmlReaderSettings.cctor#2](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderSettings.cctor/CS/factory_rdr_cctor2.cs#2)]
 [!code-vb[XmlReaderSettings.cctor#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderSettings.cctor/VB/factory_rdr_cctor2.vb#2)]  
  
 <span data-ttu-id="6c774-123">您可以針對不同的 Uri 中提供不同的認證，並將它們新增至快取。</span><span class="sxs-lookup"><span data-stu-id="6c774-123">You can supply different credentials for different URIs and add them to a cache.</span></span> <span data-ttu-id="6c774-124">不論 XML 的原始來源為何，這些認證都會用於檢查不同 URI 的驗證。</span><span class="sxs-lookup"><span data-stu-id="6c774-124">These credentials are used to check authentication for the different URIs regardless of the original source of the XML.</span></span> <span data-ttu-id="6c774-125">下列範例會示範如何將認證新增至快取。</span><span class="sxs-lookup"><span data-stu-id="6c774-125">The following example shows how to add credentials to a cache.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Load#11](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Load/CS/Xslt_Load_v2.cs#11)]
 [!code-vb[XslCompiledTransform.Load#11](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Load/VB/Xslt_Load_v2.vb#11)]  
  
## <a name="security-considerations"></a><span data-ttu-id="6c774-126">安全性考量</span><span class="sxs-lookup"><span data-stu-id="6c774-126">Security considerations</span></span>  
 <span data-ttu-id="6c774-127">使用時，請考慮下列項目<xref:System.Xml.XmlResolver>類別。</span><span class="sxs-lookup"><span data-stu-id="6c774-127">Consider the following items when working with the <xref:System.Xml.XmlResolver> class.</span></span>  
  
-   <span data-ttu-id="6c774-128"><xref:System.Xml.XmlResolver> 物件可以包含機密資訊 (如使用者認證)。</span><span class="sxs-lookup"><span data-stu-id="6c774-128"><xref:System.Xml.XmlResolver> objects can contain sensitive information such as user credentials.</span></span> <span data-ttu-id="6c774-129">您應該要特別小心快取時<xref:System.Xml.XmlResolver>物件，並不應將傳遞<xref:System.Xml.XmlResolver>物件不受信任的元件。</span><span class="sxs-lookup"><span data-stu-id="6c774-129">You should be careful when caching <xref:System.Xml.XmlResolver> objects and should not pass the <xref:System.Xml.XmlResolver> object to an untrusted component.</span></span>  
  
-   <span data-ttu-id="6c774-130">如果設計使用 <xref:System.Xml.XmlResolver> 類別的類別屬性，應將屬性定義為唯寫屬性。</span><span class="sxs-lookup"><span data-stu-id="6c774-130">If you are designing a class property that uses the <xref:System.Xml.XmlResolver> class, the property should be defined as a write-only property.</span></span> <span data-ttu-id="6c774-131">該屬性可用於指定要使用的 <xref:System.Xml.XmlResolver>，但其不可用於傳回 <xref:System.Xml.XmlResolver> 物件。</span><span class="sxs-lookup"><span data-stu-id="6c774-131">The property can be used to specify the <xref:System.Xml.XmlResolver> to use, but it cannot be used to return an <xref:System.Xml.XmlResolver> object.</span></span>  
  
-   <span data-ttu-id="6c774-132">如果您的應用程式接受<xref:System.Xml.XmlResolver>來自不受信任的程式碼的物件，您不能假設 URI 傳入<xref:System.Xml.XmlResolver.GetEntity%2A>方法將傳回的相同<xref:System.Xml.XmlResolver.ResolveUri%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="6c774-132">If your application accepts <xref:System.Xml.XmlResolver> objects from untrusted code, you cannot assume that the URI passed into the <xref:System.Xml.XmlResolver.GetEntity%2A> method will be the same as that returned by the <xref:System.Xml.XmlResolver.ResolveUri%2A> method.</span></span> <span data-ttu-id="6c774-133">從 <xref:System.Xml.XmlResolver> 類別衍生的類別可以覆寫 <xref:System.Xml.XmlResolver.GetEntity%2A> 方法，並傳回與原始 URI 所包含之內容不同的資料。</span><span class="sxs-lookup"><span data-stu-id="6c774-133">Classes derived from the <xref:System.Xml.XmlResolver> class can override the <xref:System.Xml.XmlResolver.GetEntity%2A> method and return data that is different than what was contained in the original URI.</span></span>  
  
-   <span data-ttu-id="6c774-134">您的應用程式可以降低記憶體阻斷服務威脅<xref:System.Xml.XmlResolver.GetEntity%2A>方法藉由實作<xref:System.Runtime.InteropServices.ComTypes.IStream>，它會限制讀取的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="6c774-134">Your application can mitigate memory denial of service threats to the <xref:System.Xml.XmlResolver.GetEntity%2A> method by implementing an <xref:System.Runtime.InteropServices.ComTypes.IStream> that limits the number of bytes read.</span></span> <span data-ttu-id="6c774-135">這有助於防範惡意程式碼嘗試傳遞無限的資料流的位元組的情況下<xref:System.Xml.XmlResolver.GetEntity%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="6c774-135">This helps guard against situations where malicious code attempts to pass an infinite stream of bytes to the <xref:System.Xml.XmlResolver.GetEntity%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6c774-136">下列範例會建立<xref:System.Xml.XmlUrlResolver>具有預設認證。</span><span class="sxs-lookup"><span data-stu-id="6c774-136">The following example creates an <xref:System.Xml.XmlUrlResolver> with default credentials.</span></span> <span data-ttu-id="6c774-137">A<xref:System.Xml.XmlReader>用來讀取，並顯示結果的資料流。</span><span class="sxs-lookup"><span data-stu-id="6c774-137">A <xref:System.Xml.XmlReader> is used to read and display the resulting data stream.</span></span>  
  
 [!code-csharp[XmlResolver_ex#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlResolver_ex/CS/XmlResolver_ex.cs#1)]
 [!code-vb[XmlResolver_ex#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlResolver_ex/VB/XmlResolver_ex.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XmlResolver ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlResolver.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XmlResolver();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6c774-138">初始化 <see cref="T:System.Xml.XmlResolver" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c774-138">Initializes a new instance of the <see cref="T:System.Xml.XmlResolver" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6c774-139">在衍生的類別建構函式來初始化此類型中的狀態會呼叫這個建構函式。</span><span class="sxs-lookup"><span data-stu-id="6c774-139">This constructor is called by derived class constructors to initialize state in this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public virtual System.Net.ICredentials Credentials { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentials Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlResolver.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Credentials As ICredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::ICredentials ^ Credentials {  void set(System::Net::ICredentials ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ICredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6c774-140">在衍生類別中覆寫時，設定用來驗證 Web 要求的認證資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c774-140">When overridden in a derived class, sets the credentials used to authenticate web requests.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6c774-141">用以驗證 Web 要求的認證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c774-141">The credentials to be used to authenticate web requests.</span>
          </span>
          <span data-ttu-id="6c774-142">如果未設定這個屬性，其值會預設為 <see langword="null" />；也就是說，<see langword="XmlResolver" /> 沒有使用者認證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c774-142">If this property is not set, the value defaults to <see langword="null" />; that is, the <see langword="XmlResolver" /> has no user credentials.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6c774-143">如果虛擬目錄不需要驗證，此屬性沒有設定。</span><span class="sxs-lookup"><span data-stu-id="6c774-143">If the virtual directory does not require authentication, this property doesn't have to be set.</span></span> <span data-ttu-id="6c774-144">否則，您必須提供使用者的認證。</span><span class="sxs-lookup"><span data-stu-id="6c774-144">Otherwise, the credentials of the user must be supplied.</span></span>  
  
 <span data-ttu-id="6c774-145">下列 C# 程式碼上設定認證<xref:System.Xml.XmlResolver>物件。</span><span class="sxs-lookup"><span data-stu-id="6c774-145">The following C# code sets credentials on the <xref:System.Xml.XmlResolver> object.</span></span>  
  
```  
NetworkCredential nc = new NetWorkCredential(UserName,SecurelyStoredPassword,Domain);  
XmlUrlResolver resolver = new XmlUrlResolver();  
resolver.Credentials = nc;  
```  
  
 <span data-ttu-id="6c774-146">您可以將不同的認證與不同的 Uri 產生關聯，並將它們新增至快取。</span><span class="sxs-lookup"><span data-stu-id="6c774-146">You can associate different credentials with different URIs and add them to a cache.</span></span> <span data-ttu-id="6c774-147">您接著可以使用認證檢查不同 Uri，不論 XML 的原始來源為何的驗證。</span><span class="sxs-lookup"><span data-stu-id="6c774-147">You can then use the credentials to check authentication for different URIs regardless of the original source of the XML.</span></span>  
  
```  
NetworkCredential myCred = new NetworkCredential(UserName,SecurelyStoredPassword,Domain);   
CredentialCache myCache = new CredentialCache();   
myCache.Add(new Uri("http://www.contoso.com/"), "Basic", myCred);   
myCache.Add(new Uri("http://app.contoso.com/"), "Basic", myCred);  
XmlUrlResolver resolver = new XmlUrlResolver();  
resolver.Credentials = myCache;  
```  
  
   
  
## Examples  
 <span data-ttu-id="6c774-148">請參閱<xref:System.Xml.XmlUrlResolver.Credentials%2A?displayProperty=nameWithType>的範例，會使用這個屬性。</span><span class="sxs-lookup"><span data-stu-id="6c774-148">See <xref:System.Xml.XmlUrlResolver.Credentials%2A?displayProperty=nameWithType> for an example that uses this property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
    <Member MemberName="GetEntity">
      <MemberSignature Language="C#" Value="public abstract object GetEntity (Uri absoluteUri, string role, Type ofObjectToReturn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetEntity(class System.Uri absoluteUri, string role, class System.Type ofObjectToReturn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlResolver.GetEntity(System.Uri,System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetEntity (absoluteUri As Uri, role As String, ofObjectToReturn As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ GetEntity(Uri ^ absoluteUri, System::String ^ role, Type ^ ofObjectToReturn);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="absoluteUri" Type="System.Uri" />
        <Parameter Name="role" Type="System.String" />
        <Parameter Name="ofObjectToReturn" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="absoluteUri">
          <span data-ttu-id="6c774-149">自 <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" /> 傳回的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c774-149">The URI returned from <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" />.</span>
          </span>
        </param>
        <param name="role">
          <span data-ttu-id="6c774-150">目前未使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c774-150">Currently not used.</span>
          </span>
        </param>
        <param name="ofObjectToReturn">
          <span data-ttu-id="6c774-151">要傳回的物件類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c774-151">The type of object to return.</span>
          </span>
          <span data-ttu-id="6c774-152">目前的版本只傳回 System.IO.Stream 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c774-152">The current version only returns System.IO.Stream objects.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6c774-153">在衍生類別中覆寫時，對應 URI 至包含實際資源的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c774-153">When overridden in a derived class, maps a URI to an object that contains the actual resource.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6c774-154">如果指定的類型並非資料流，則為資料流物件或為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c774-154">A stream object or <see langword="null" /> if a type other than stream is specified.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6c774-155">呼叫端想要將特定的 URI 對應至包含實際資源的 URI 表示的物件時，會使用這個方法。</span><span class="sxs-lookup"><span data-stu-id="6c774-155">This method is used when the caller wants to map a given URI into the object containing the actual resource that the URI represents.</span></span> <span data-ttu-id="6c774-156">傳回物件的型別是協議。不過，必須一律支援實作<xref:System.IO.Stream?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="6c774-156">The type of object returned is negotiable; however, the implementation must always support <xref:System.IO.Stream?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="6c774-157">這個方法的非同步版本，請參閱<xref:System.Xml.XmlResolver.GetEntityAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="6c774-157">For the asynchronous version of this method, see <xref:System.Xml.XmlResolver.GetEntityAsync%2A>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6c774-158">您的應用程式可以降低記憶體阻斷服務威脅<xref:System.Xml.XmlResolver.GetEntity%2A>方法藉由實作<xref:System.Runtime.InteropServices.ComTypes.IStream>，它會限制讀取的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="6c774-158">Your application can mitigate memory denial of service threats to the <xref:System.Xml.XmlResolver.GetEntity%2A> method by implementing an <xref:System.Runtime.InteropServices.ComTypes.IStream> that limits the number of bytes read.</span></span> <span data-ttu-id="6c774-159">這有助於防範惡意程式碼嘗試傳遞無限的資料流的位元組的情況下<xref:System.Xml.XmlResolver.GetEntity%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="6c774-159">This helps guard against situations where malicious code attempts to pass an infinite stream of bytes to the <xref:System.Xml.XmlResolver.GetEntity%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6c774-160">請參閱<xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=nameWithType>如需使用此方法的範例。</span><span class="sxs-lookup"><span data-stu-id="6c774-160">See <xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=nameWithType> for an example using this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="6c774-161">
            <paramref name="ofObjectToReturn" /> 不是 <see langword="Stream" /> 型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c774-161">
              <paramref name="ofObjectToReturn" /> is not a <see langword="Stream" /> type.</span>
          </span>
        </exception>
        <exception cref="T:System.UriFormatException">
          <span data-ttu-id="6c774-162">指定的 URI 並非絕對 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c774-162">The specified URI is not an absolute URI.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6c774-163">
            <paramref name="absoluteUri" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c774-163">
              <paramref name="absoluteUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Exception">
          <span data-ttu-id="6c774-164">發生執行階段錯誤 (例如中斷的伺服器連線)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c774-164">There is a runtime error (for example, an interrupted server connection).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEntityAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;object&gt; GetEntityAsync (Uri absoluteUri, string role, Type ofObjectToReturn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;object&gt; GetEntityAsync(class System.Uri absoluteUri, string role, class System.Type ofObjectToReturn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlResolver.GetEntityAsync(System.Uri,System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEntityAsync (absoluteUri As Uri, role As String, ofObjectToReturn As Type) As Task(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;System::Object ^&gt; ^ GetEntityAsync(Uri ^ absoluteUri, System::String ^ role, Type ^ ofObjectToReturn);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="absoluteUri" Type="System.Uri" />
        <Parameter Name="role" Type="System.String" />
        <Parameter Name="ofObjectToReturn" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="absoluteUri">
          <span data-ttu-id="6c774-165">自 <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" /> 傳回的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c774-165">The URI returned from <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" />.</span>
          </span>
        </param>
        <param name="role">
          <span data-ttu-id="6c774-166">目前未使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c774-166">Currently not used.</span>
          </span>
        </param>
        <param name="ofObjectToReturn">
          <span data-ttu-id="6c774-167">要傳回的物件類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c774-167">The type of object to return.</span>
          </span>
          <span data-ttu-id="6c774-168">目前的版本只傳回 <see cref="T:System.IO.Stream" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c774-168">The current version only returns <see cref="T:System.IO.Stream" /> objects.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6c774-169">以非同步的方式對應 URI 至包含實際資源的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c774-169">Asynchronously maps a URI to an object that contains the actual resource.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6c774-170">如果指定的類型並非資料流，則為資料流物件或為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c774-170">A stream object or <see langword="null" /> if a type other than stream is specified.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6c774-171">這是非同步版本<xref:System.Xml.XmlResolver.GetEntity%2A>，使用相同的功能。</span><span class="sxs-lookup"><span data-stu-id="6c774-171">This is the asynchronous version of <xref:System.Xml.XmlResolver.GetEntity%2A>, with the same functionality.</span></span> <span data-ttu-id="6c774-172">若要使用此方法，您必須設定<xref:System.Xml.XmlReaderSettings.Async%2A>旗標設為`true`。</span><span class="sxs-lookup"><span data-stu-id="6c774-172">To use this method, you must set the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveUri">
      <MemberSignature Language="C#" Value="public virtual Uri ResolveUri (Uri baseUri, string relativeUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Uri ResolveUri(class System.Uri baseUri, string relativeUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ResolveUri (baseUri As Uri, relativeUri As String) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Uri ^ ResolveUri(Uri ^ baseUri, System::String ^ relativeUri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseUri" Type="System.Uri" />
        <Parameter Name="relativeUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="baseUri">
          <span data-ttu-id="6c774-173">用來解析相對 URI 的基底 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c774-173">The base URI used to resolve the relative URI.</span>
          </span>
        </param>
        <param name="relativeUri">
          <span data-ttu-id="6c774-174">要解析的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c774-174">The URI to resolve.</span>
          </span>
          <span data-ttu-id="6c774-175">這個 URI 可為絕對或相對的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c774-175">The URI can be absolute or relative.</span>
          </span>
          <span data-ttu-id="6c774-176">若是絕對的，這個值實際上會取代 <c>baseUri</c> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c774-176">If absolute, this value effectively replaces the <c>baseUri</c> value.</span>
          </span>
          <span data-ttu-id="6c774-177">若是相對的，它會結合 <c>baseUri</c> 而成為絕對 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c774-177">If relative, it combines with the <c>baseUri</c> to make an absolute URI.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6c774-178">在衍生類別中覆寫時，從基底和相對 URI 來解析絕對 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c774-178">When overridden in a derived class, resolves the absolute URI from the base and relative URIs.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6c774-179">絕對 URI，如果相對 URI 不能解析，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c774-179">The absolute URI or <see langword="null" /> if the relative URI cannot be resolved.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6c774-180">絕對 URI 可能作為是相對於此 URI 之實體的任何後續要求的基底 URI。</span><span class="sxs-lookup"><span data-stu-id="6c774-180">The absolute URI may be used as the base URI for any subsequent requests for entities that are relative to this URI.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6c774-181">請參閱<xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=nameWithType>的範例，會使用這個方法。</span><span class="sxs-lookup"><span data-stu-id="6c774-181">See <xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=nameWithType> for an example that uses this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6c774-182">
            <paramref name="relativeUri" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c774-182">
              <paramref name="relativeUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SupportsType">
      <MemberSignature Language="C#" Value="public virtual bool SupportsType (Uri absoluteUri, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SupportsType(class System.Uri absoluteUri, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlResolver.SupportsType(System.Uri,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool SupportsType(Uri ^ absoluteUri, Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="absoluteUri" Type="System.Uri" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="absoluteUri">
          <span data-ttu-id="6c774-183">URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c774-183">The URI.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="6c774-184">要傳回的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c774-184">The type to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6c774-185">讓解析程式傳回 <see cref="T:System.IO.Stream" /> 以外的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c774-185">Enables the resolver to return types other than <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6c774-186">如果支援 <paramref name="type" /> 則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c774-186">
              <see langword="true" /> if the <paramref name="type" /> is supported; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>