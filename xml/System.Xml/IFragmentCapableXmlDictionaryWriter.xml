<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IFragmentCapableXmlDictionaryWriter.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac54280186aaca2bcf519af30ba243d6a4fce3f24ed.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4280186aaca2bcf519af30ba243d6a4fce3f24ed</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.IFragmentCapableXmlDictionaryWriter">
          <source>Contains properties and methods that when implemented by a <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryWriter" /&gt;</ph>, allows processing of XML fragments.</source>
          <target state="translated">包含在經由 <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryWriter" /&gt;</ph> 實作之後即可用來處理 XML 片段的屬性和方法。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.IFragmentCapableXmlDictionaryWriter">
          <source>This class defines the properties and methods related to the capability of an <ph id="ph1">&lt;xref:System.Xml.XmlDictionaryWriter&gt;</ph> to redirect part of its output (a 'fragment') to a different stream than the stream it was created with and to directly insert such a fragment captured by redirection back into the main stream of the same writer at a later point.</source>
          <target state="translated">這個類別會定義與 <ph id="ph1">&lt;xref:System.Xml.XmlDictionaryWriter&gt;</ph> 寫入器的能力有關的屬性和方法，以便這個寫入器能夠將其輸出部分 (「片段」) 重新導向至與用來建立它的資料流不同的資料流，並在稍後將重新導向時所擷取的這類片段直接重新插入至相同寫入器的主要資料流。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="P:System.Xml.IFragmentCapableXmlDictionaryWriter.CanFragment">
          <source>Gets a value that indicates whether this <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryWriter" /&gt;</ph> can process XML fragments.</source>
          <target state="translated">取得值，這個值會指出這個 <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryWriter" /&gt;</ph> 是否可以處理 XML 片段。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.IFragmentCapableXmlDictionaryWriter.CanFragment">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.Xml.XmlDictionaryWriter" /&gt;</ph> can process XML fragments; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果這個 <ph id="ph2">&lt;see cref="T:System.Xml.XmlDictionaryWriter" /&gt;</ph> 可以處理 XML 片段，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.IFragmentCapableXmlDictionaryWriter.CanFragment">
          <source>Returns <ph id="ph1">`true`</ph> if the writer that implements this interface can generate and accept XML fragments.</source>
          <target state="translated">傳回<ph id="ph1">`true`</ph>如果實作此介面的寫入器可以產生和接受 XML 片段。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Xml.IFragmentCapableXmlDictionaryWriter.EndFragment">
          <source>Ends the processing of an XML fragment.</source>
          <target state="translated">結束 XML 片段的處理。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.IFragmentCapableXmlDictionaryWriter.EndFragment">
          <source>Stops redirecting output to the stream supplied by the matching <ph id="ph1">`StartFragment`</ph> call.</source>
          <target state="translated">停止將輸出重新導向至對應的 <ph id="ph1">`StartFragment`</ph> 呼叫所提供的資料流。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.IFragmentCapableXmlDictionaryWriter.EndFragment">
          <source>After this call, the XML writing output goes to the stream originally used by the writer before the <ph id="ph1">`StartFragment`</ph> call.</source>
          <target state="translated">在這個呼叫之後，XML 的寫入輸出會在 <ph id="ph1">`StartFragment`</ph> 呼叫之前進入寫入器原本使用的資料流。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Xml.IFragmentCapableXmlDictionaryWriter.StartFragment(System.IO.Stream,System.Boolean)">
          <source>The stream to write to.</source>
          <target state="translated">要寫入的資料流。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Xml.IFragmentCapableXmlDictionaryWriter.StartFragment(System.IO.Stream,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, any namespaces declared outside the fragment is declared again if used inside of it; if <ph id="ph2">&lt;see langword="false" /&gt;</ph> the namespaces are not declared again.</source>
          <target state="translated">如果為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，則會重新宣告任何已在片段內使用、但卻是在該片段外部宣告的命名空間；如果為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>，則不會重新宣告命名空間。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Xml.IFragmentCapableXmlDictionaryWriter.StartFragment(System.IO.Stream,System.Boolean)">
          <source>Starts the processing of an XML fragment.</source>
          <target state="translated">開始處理 XML 片段。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.IFragmentCapableXmlDictionaryWriter.StartFragment(System.IO.Stream,System.Boolean)">
          <source>Temporarily starts redirecting the writing of the XML output to the supplied stream until <ph id="ph1">`EndFragment`</ph> is called.</source>
          <target state="translated">暫時開始將 XML 輸出的寫入重新導向到提供的資料流，直到 <ph id="ph1">`EndFragment`</ph> 被呼叫為止。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.IFragmentCapableXmlDictionaryWriter.StartFragment(System.IO.Stream,System.Boolean)">
          <source>If <ph id="ph1">`generateSelfContainedTextFragment`</ph> is <ph id="ph2">`true`</ph>, then the redirected XML output is always text XML and is self-contained in terms of its namespace context.</source>
          <target state="translated">如果 <ph id="ph1">`generateSelfContainedTextFragment`</ph> 為 <ph id="ph2">`true`</ph>，則重新導向的 XML 輸出永遠是文字 XML，而且就其命名空間內容而言屬於獨立的 (Self-Contained)。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.IFragmentCapableXmlDictionaryWriter.StartFragment(System.IO.Stream,System.Boolean)">
          <source><ph id="ph1">`StartFragment`</ph>() calls cannot be nested.</source>
          <target state="translated"><ph id="ph1">`StartFragment`</ph>() 呼叫無法以巢狀方式進行。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Xml.IFragmentCapableXmlDictionaryWriter.WriteFragment(System.Byte[],System.Int32,System.Int32)">
          <source>The buffer to write to.</source>
          <target state="translated">要寫入的緩衝區。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Xml.IFragmentCapableXmlDictionaryWriter.WriteFragment(System.Byte[],System.Int32,System.Int32)">
          <source>The starting position from which to write in <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">要在 <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> 中進行寫入的起始位置。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Xml.IFragmentCapableXmlDictionaryWriter.WriteFragment(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes to be written to the <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">要寫入至 <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> 的位元組數目。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Xml.IFragmentCapableXmlDictionaryWriter.WriteFragment(System.Byte[],System.Int32,System.Int32)">
          <source>Writes an XML fragment to the underlying stream of the writer.</source>
          <target state="translated">將 XML 片段寫入至寫入器的基礎資料流。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.IFragmentCapableXmlDictionaryWriter.WriteFragment(System.Byte[],System.Int32,System.Int32)">
          <source>Writes a fragment captured between <ph id="ph1">`StartFragment`</ph> and <ph id="ph2">`EndFragment`</ph> and calls back into the XmlDictionaryWriter's main stream.</source>
          <target state="translated">寫入在 <ph id="ph1">`StartFragment`</ph> 與 <ph id="ph2">`EndFragment`</ph> 之間擷取的片段，並回呼至 XmlDictionaryWriter 的主要資料流中。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.IFragmentCapableXmlDictionaryWriter.WriteFragment(System.Byte[],System.Int32,System.Int32)">
          <source>The fragment written is <ph id="ph1">`count`</ph> bytes starting at the index <ph id="ph2">`offset`</ph> from the supplied <ph id="ph3">`buffer`</ph>.</source>
          <target state="translated">寫入的片段是 <ph id="ph1">`count`</ph> 個位元組，且起始於所提供 <ph id="ph2">`offset`</ph> 中的索引 <ph id="ph3">`buffer`</ph>。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.IFragmentCapableXmlDictionaryWriter.WriteFragment(System.Byte[],System.Int32,System.Int32)">
          <source>The behavior is undefined if the supplied fragment was not captured using this writer instance.</source>
          <target state="translated">如果提供的片段不是使用這個寫入器執行個體所擷取，則表示此行為是未定義的。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>