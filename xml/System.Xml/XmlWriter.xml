<Type Name="XmlWriter" FullName="System.Xml.XmlWriter">
  <TypeSignature Language="C#" Value="public abstract class XmlWriter : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit XmlWriter extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlWriter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class XmlWriter&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlWriter abstract : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="a221d-101">表示寫入器，其可提供快速、非快取的順向方法來產生含有 XML 資料之資料流或檔案。</span><span class="sxs-lookup"><span data-stu-id="a221d-101">Represents a writer that provides a fast, non-cached, forward-only way to generate streams or files that contain XML data.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-102"><xref:System.Xml.XmlWriter>類別會將 XML 資料寫入資料流、 檔案、 文字讀取器或字串。</span><span class="sxs-lookup"><span data-stu-id="a221d-102">The <xref:System.Xml.XmlWriter> class writes XML data to a stream, file, text reader, or string.</span></span> <span data-ttu-id="a221d-103">它支援 W3C[可延伸標記語言 (XML) 1.0 （第四版）](https://www.w3.org/TR/2006/REC-xml-20060816/)和[XML 1.0 中的命名空間 （第三個版本）](https://www.w3.org/TR/REC-xml-names/)建議。</span><span class="sxs-lookup"><span data-stu-id="a221d-103">It supports the W3C [Extensible Markup Language (XML) 1.0 (fourth edition)](https://www.w3.org/TR/2006/REC-xml-20060816/) and [Namespaces in XML 1.0 (third edition)](https://www.w3.org/TR/REC-xml-names/) recommendations.</span></span>  
  
 <span data-ttu-id="a221d-104">成員<xref:System.Xml.XmlWriter>類別可讓您：</span><span class="sxs-lookup"><span data-stu-id="a221d-104">The members of the <xref:System.Xml.XmlWriter> class enable you to:</span></span>  
  
-   <span data-ttu-id="a221d-105">驗證字元是否為合法 XML 字元，以及項目與屬性名稱是否為有效的 XML 名稱。</span><span class="sxs-lookup"><span data-stu-id="a221d-105">Verify that the characters are legal XML characters and that element and attribute names are valid XML names.</span></span>  
  
-   <span data-ttu-id="a221d-106">驗證 XML 文件的格式是否正確。</span><span class="sxs-lookup"><span data-stu-id="a221d-106">Verify that the XML document is well-formed.</span></span>  
  
-   <span data-ttu-id="a221d-107">將二進位資料編碼為 Base64 或 BinHex，並寫出產生的文字。</span><span class="sxs-lookup"><span data-stu-id="a221d-107">Encode binary bytes as Base64 or BinHex, and write out the resulting text.</span></span>  
  
-   <span data-ttu-id="a221d-108">若要避免需要手動執行值的轉換，而不是字串，使用 common language runtime 類型傳遞值。</span><span class="sxs-lookup"><span data-stu-id="a221d-108">Pass values by using common language runtime types instead of strings, to avoid having to manually perform value conversions.</span></span>  
  
-   <span data-ttu-id="a221d-109">將多份文件寫至一個輸出資料流。</span><span class="sxs-lookup"><span data-stu-id="a221d-109">Write multiple documents to one output stream.</span></span>  
  
-   <span data-ttu-id="a221d-110">寫入有效的名稱、限定名稱，以及名稱語彙基元。</span><span class="sxs-lookup"><span data-stu-id="a221d-110">Write valid names, qualified names, and name tokens.</span></span>  
  
 <span data-ttu-id="a221d-111">本節內容：</span><span class="sxs-lookup"><span data-stu-id="a221d-111">In this section:</span></span>  
  
 <span data-ttu-id="a221d-112">[建立 XML 寫入器](#create) </span><span class="sxs-lookup"><span data-stu-id="a221d-112">[Creating an XML writer](#create) </span></span>  
 <span data-ttu-id="a221d-113">[指定的輸出格式](#output) </span><span class="sxs-lookup"><span data-stu-id="a221d-113">[Specifying the output format](#output) </span></span>  
 <span data-ttu-id="a221d-114">[資料一致性](#conformance) </span><span class="sxs-lookup"><span data-stu-id="a221d-114">[Data conformance](#conformance) </span></span>  
 <span data-ttu-id="a221d-115">[寫入項目](#writing_elements) </span><span class="sxs-lookup"><span data-stu-id="a221d-115">[Writing elements](#writing_elements) </span></span>  
 <span data-ttu-id="a221d-116">[寫入屬性](#writing_attributes) </span><span class="sxs-lookup"><span data-stu-id="a221d-116">[Writing attributes](#writing_attributes) </span></span>  
 <span data-ttu-id="a221d-117">[處理命名空間](#handling_ns) </span><span class="sxs-lookup"><span data-stu-id="a221d-117">[Handling namespaces](#handling_ns) </span></span>  
 <span data-ttu-id="a221d-118">[寫入具型別資料](#writing_types) </span><span class="sxs-lookup"><span data-stu-id="a221d-118">[Writing typed data](#writing_types) </span></span>  
 <span data-ttu-id="a221d-119">[關閉的 XML 寫入器](#close) </span><span class="sxs-lookup"><span data-stu-id="a221d-119">[Closing the XML writer](#close) </span></span>  
 <span data-ttu-id="a221d-120">[非同步程式設計](#async) </span><span class="sxs-lookup"><span data-stu-id="a221d-120">[Asynchronous programming](#async) </span></span>  
 [<span data-ttu-id="a221d-121">安全性考量</span><span class="sxs-lookup"><span data-stu-id="a221d-121">Security considerations</span></span>](#security)  
  
<a name="create"></a>   
## <a name="creating-an-xml-writer"></a><span data-ttu-id="a221d-122">建立 XML 寫入器</span><span class="sxs-lookup"><span data-stu-id="a221d-122">Creating an XML writer</span></span>  
 <span data-ttu-id="a221d-123">若要建立<xref:System.Xml.XmlWriter>執行個體，使用<xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-123">To create an <xref:System.Xml.XmlWriter> instance, use the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="a221d-124">指定您想要的 XML 寫入器上啟用的功能的設定，傳遞<xref:System.Xml.XmlWriterSettings>至<xref:System.Xml.XmlWriter.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-124">To specify the set of features you want to enable on the XML writer, pass an <xref:System.Xml.XmlWriterSettings> to the <xref:System.Xml.XmlWriter.Create%2A> method.</span></span> <span data-ttu-id="a221d-125">否則，會使用預設設定。</span><span class="sxs-lookup"><span data-stu-id="a221d-125">Otherwise, default settings are used.</span></span> <span data-ttu-id="a221d-126">請參閱<xref:System.Xml.XmlWriter.Create%2A>參考頁面的詳細資料。</span><span class="sxs-lookup"><span data-stu-id="a221d-126">See the <xref:System.Xml.XmlWriter.Create%2A> reference pages for details.</span></span>  
  
<a name="output"></a>   
## <a name="specifying-the-output-format"></a><span data-ttu-id="a221d-127">指定的輸出格式</span><span class="sxs-lookup"><span data-stu-id="a221d-127">Specifying the output format</span></span>  
 <span data-ttu-id="a221d-128"><xref:System.Xml.XmlWriterSettings>類別包含數個屬性可控制如何<xref:System.Xml.XmlWriter>輸出格式：</span><span class="sxs-lookup"><span data-stu-id="a221d-128">The <xref:System.Xml.XmlWriterSettings> class includes several properties that control how <xref:System.Xml.XmlWriter> output is formatted:</span></span>  
  
|<span data-ttu-id="a221d-129">屬性</span><span class="sxs-lookup"><span data-stu-id="a221d-129">Property</span></span>|<span data-ttu-id="a221d-130">描述</span><span class="sxs-lookup"><span data-stu-id="a221d-130">Description</span></span>|  
|--------------|-----------------|  
|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|<span data-ttu-id="a221d-131">指定要使用的文字編碼方式。</span><span class="sxs-lookup"><span data-stu-id="a221d-131">Specifies the text encoding to use.</span></span> <span data-ttu-id="a221d-132">預設值為 `Encoding.UTF8`。</span><span class="sxs-lookup"><span data-stu-id="a221d-132">The default is `Encoding.UTF8`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.Indent%2A>|<span data-ttu-id="a221d-133">表示是否縮排項目。</span><span class="sxs-lookup"><span data-stu-id="a221d-133">Indicates whether to indent elements.</span></span> <span data-ttu-id="a221d-134">預設值是`false`（沒有縮排）。</span><span class="sxs-lookup"><span data-stu-id="a221d-134">The default is `false` (no indentation).</span></span>|  
|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|<span data-ttu-id="a221d-135">指定縮排時要使用的字元字串。</span><span class="sxs-lookup"><span data-stu-id="a221d-135">Specifies the character string to use when indenting.</span></span> <span data-ttu-id="a221d-136">預設值為兩個空格。</span><span class="sxs-lookup"><span data-stu-id="a221d-136">The default is two spaces.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|<span data-ttu-id="a221d-137">指定用於分行符號的字元字串。</span><span class="sxs-lookup"><span data-stu-id="a221d-137">Specifies the character string to use for line breaks.</span></span> <span data-ttu-id="a221d-138">預設值為 `\r\n` (歸位字元、換行字元)。</span><span class="sxs-lookup"><span data-stu-id="a221d-138">The default is `\r\n` (carriage return, line feed).</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|<span data-ttu-id="a221d-139">指定如何處理新行字元。</span><span class="sxs-lookup"><span data-stu-id="a221d-139">Specifies how to handle newline characters.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|<span data-ttu-id="a221d-140">表示是否要在新行上寫入屬性。</span><span class="sxs-lookup"><span data-stu-id="a221d-140">Indicates whether to write attributes on a new line.</span></span> <span data-ttu-id="a221d-141">使用此屬性時，應將 <xref:System.Xml.XmlWriterSettings.Indent%2A> 設為 `true`。</span><span class="sxs-lookup"><span data-stu-id="a221d-141"><xref:System.Xml.XmlWriterSettings.Indent%2A> should be set to `true` when using this property.</span></span> <span data-ttu-id="a221d-142">預設值為 `false`。</span><span class="sxs-lookup"><span data-stu-id="a221d-142">The default is `false`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|<span data-ttu-id="a221d-143">表示是否撰寫 XML 宣告。</span><span class="sxs-lookup"><span data-stu-id="a221d-143">Indicates whether to write an XML declaration.</span></span> <span data-ttu-id="a221d-144">預設值為 `false`。</span><span class="sxs-lookup"><span data-stu-id="a221d-144">The default is `false`.</span></span>|  
  
 <span data-ttu-id="a221d-145"><xref:System.Xml.XmlWriterSettings.Indent%2A> 及 <xref:System.Xml.XmlWriterSettings.IndentChars%2A> 屬性控制如何格式化非顯著泛空白字元。</span><span class="sxs-lookup"><span data-stu-id="a221d-145">The <xref:System.Xml.XmlWriterSettings.Indent%2A> and <xref:System.Xml.XmlWriterSettings.IndentChars%2A> properties control how insignificant white space is formatted.</span></span> <span data-ttu-id="a221d-146">例如，若要縮排元素節點：</span><span class="sxs-lookup"><span data-stu-id="a221d-146">For example, to indent element nodes:</span></span>  
  
 [!code-csharp[XmlWriter_v2#8](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter_v2/CS/writer_v2.cs#8)]
 [!code-vb[XmlWriter_v2#8](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter_v2/VB/writer_v2.vb#8)]  
  
 <span data-ttu-id="a221d-147">使用<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>利用縮排一個額外層級的新行上撰寫每個屬性：</span><span class="sxs-lookup"><span data-stu-id="a221d-147">Use the <xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A> to write each attribute on a new line with one extra level of indentation:</span></span>  
  
 [!code-csharp[XmlWriter_v2#9](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter_v2/CS/writer_v2.cs#9)]
 [!code-vb[XmlWriter_v2#9](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter_v2/VB/writer_v2.vb#9)]  
  
<a name="conformance"></a>   
## <a name="data-conformance"></a><span data-ttu-id="a221d-148">資料一致性</span><span class="sxs-lookup"><span data-stu-id="a221d-148">Data conformance</span></span>  
 <span data-ttu-id="a221d-149">XML 寫入器會使用兩個屬性，從<xref:System.Xml.XmlWriterSettings>資料一致性檢查的類別：</span><span class="sxs-lookup"><span data-stu-id="a221d-149">An XML writer uses two properties from the <xref:System.Xml.XmlWriterSettings> class to check for data conformance:</span></span>  
  
-   <span data-ttu-id="a221d-150"><xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>屬性會指示檢查的字元，而且會擲回的 XML 寫入器<xref:System.Xml.XmlException>如果任何字元都是在合法的範圍之外，如 W3C 所定義的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="a221d-150">The <xref:System.Xml.XmlWriterSettings.CheckCharacters%2A> property instructs the XML writer to check characters and throw an <xref:System.Xml.XmlException> exception if any characters are outside the legal range, as defined by the W3C.</span></span>  
  
-   <span data-ttu-id="a221d-151"><xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>屬性會設定要檢查正在寫入的資料流符合規則的語式正確的 XML 1.0 文件或文件片段，如 W3C 所定義的 XML 寫入器。</span><span class="sxs-lookup"><span data-stu-id="a221d-151">The <xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A> property configures the XML writer to check that the stream being written complies with the rules for a well-formed XML 1.0 document or document fragment, as defined by the W3C.</span></span> <span data-ttu-id="a221d-152">下表中詳述的三個一致性層級。</span><span class="sxs-lookup"><span data-stu-id="a221d-152">The three conformance levels are described in the following table.</span></span> <span data-ttu-id="a221d-153">預設值為 <xref:System.Xml.ConformanceLevel.Document>。</span><span class="sxs-lookup"><span data-stu-id="a221d-153">The default is <xref:System.Xml.ConformanceLevel.Document>.</span></span> <span data-ttu-id="a221d-154">如需詳細資訊，請參閱<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A?displayProperty=nameWithType>屬性和<xref:System.Xml.ConformanceLevel?displayProperty=nameWithType>列舉型別。</span><span class="sxs-lookup"><span data-stu-id="a221d-154">For details, see the <xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A?displayProperty=nameWithType> property and the <xref:System.Xml.ConformanceLevel?displayProperty=nameWithType> enumeration.</span></span>  
  
    |<span data-ttu-id="a221d-155">層級</span><span class="sxs-lookup"><span data-stu-id="a221d-155">Level</span></span>|<span data-ttu-id="a221d-156">描述</span><span class="sxs-lookup"><span data-stu-id="a221d-156">Description</span></span>|  
    |-----------|-----------------|  
    |<xref:System.Xml.ConformanceLevel.Document>|<span data-ttu-id="a221d-157">XML 輸出符合格式正確的 XML 1.0 版文件的規則，而且可以由任何合格的處理器來處理。</span><span class="sxs-lookup"><span data-stu-id="a221d-157">The XML output conforms to the rules for a well-formed XML 1.0 document and can be processed by any conforming processor.</span></span>|  
    |<xref:System.Xml.ConformanceLevel.Fragment>|<span data-ttu-id="a221d-158">XML 輸出符合格式正確的 XML 1.0 版文件片段的規則。</span><span class="sxs-lookup"><span data-stu-id="a221d-158">The XML output conforms to the rules for a well-formed XML 1.0 document fragment.</span></span>|  
    |<xref:System.Xml.ConformanceLevel.Auto>|<span data-ttu-id="a221d-159">XML 寫入器會決定包含要套用檢查 （文件或片段） 根據內送資料的層級。</span><span class="sxs-lookup"><span data-stu-id="a221d-159">The XML writer determines which level of conformation checking to apply (document or fragment) based on the incoming data.</span></span>|  
  
<a name="writing_elements"></a>   
## <a name="writing-elements"></a><span data-ttu-id="a221d-160">寫入項目</span><span class="sxs-lookup"><span data-stu-id="a221d-160">Writing elements</span></span>  
 <span data-ttu-id="a221d-161">您可以使用下列<xref:System.Xml.XmlWriter>方法來寫入項目節點。</span><span class="sxs-lookup"><span data-stu-id="a221d-161">You can use the following <xref:System.Xml.XmlWriter> methods to write element nodes.</span></span> <span data-ttu-id="a221d-162">如需範例，請參閱所列的方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-162">For examples, see the methods listed.</span></span>  
  
|<span data-ttu-id="a221d-163">使用</span><span class="sxs-lookup"><span data-stu-id="a221d-163">Use</span></span>|<span data-ttu-id="a221d-164">以</span><span class="sxs-lookup"><span data-stu-id="a221d-164">To</span></span>|  
|---------|--------|  
|<xref:System.Xml.XmlWriter.WriteElementString%2A>|<span data-ttu-id="a221d-165">編寫整個項目節點，其中包括字串值。</span><span class="sxs-lookup"><span data-stu-id="a221d-165">Write an entire element  node, including a string value.</span></span>|  
|<xref:System.Xml.XmlWriter.WriteStartElement%2A>|<span data-ttu-id="a221d-166">若要使用多個方法呼叫，以寫入項目值。</span><span class="sxs-lookup"><span data-stu-id="a221d-166">To write an element value by using multiple method calls.</span></span>  <span data-ttu-id="a221d-167">例如，您可以呼叫 <xref:System.Xml.XmlWriter.WriteValue%2A> 寫入具型別值、呼叫 <xref:System.Xml.XmlWriter.WriteCharEntity%2A> 寫入字元實體、呼叫 <xref:System.Xml.XmlWriter.WriteAttributeString%2A> 寫入屬性，或者可以寫入項目子系。</span><span class="sxs-lookup"><span data-stu-id="a221d-167">For example, you can call <xref:System.Xml.XmlWriter.WriteValue%2A> to write a typed value, <xref:System.Xml.XmlWriter.WriteCharEntity%2A> to write a character entity, <xref:System.Xml.XmlWriter.WriteAttributeString%2A> to write an attribute, or you can write a child element.</span></span> <span data-ttu-id="a221d-168">這是更趨精密完美的版本<xref:System.Xml.XmlWriter.WriteElementString%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-168">This is a more sophisticated version of the <xref:System.Xml.XmlWriter.WriteElementString%2A> method.</span></span><br /><br /> <span data-ttu-id="a221d-169">若要關閉項目，請呼叫<xref:System.Xml.XmlWriter.WriteEndElement%2A>或<xref:System.Xml.XmlWriter.WriteFullEndElement%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-169">To close the element, you call the <xref:System.Xml.XmlWriter.WriteEndElement%2A> or <xref:System.Xml.XmlWriter.WriteFullEndElement%2A> method.</span></span>|  
|<xref:System.Xml.XmlWriter.WriteNode%2A>|<span data-ttu-id="a221d-170">若要複製項目節點的目前位置找到<xref:System.Xml.XmlReader>或<xref:System.Xml.XPath.XPathNavigator>物件。</span><span class="sxs-lookup"><span data-stu-id="a221d-170">To copy an element node found at the current position of an <xref:System.Xml.XmlReader> or <xref:System.Xml.XPath.XPathNavigator> object.</span></span> <span data-ttu-id="a221d-171">呼叫此方法時，它會將來源物件中的所有內容複製到 <xref:System.Xml.XmlWriter> 執行個體。</span><span class="sxs-lookup"><span data-stu-id="a221d-171">When called, it copies everything from the source object to the <xref:System.Xml.XmlWriter> instance.</span></span>|  
  
<a name="writing_attributes"></a>   
## <a name="writing-attributes"></a><span data-ttu-id="a221d-172">寫入屬性</span><span class="sxs-lookup"><span data-stu-id="a221d-172">Writing attributes</span></span>  
 <span data-ttu-id="a221d-173">您可以使用下列<xref:System.Xml.XmlWriter>方法來寫入項目節點上的屬性。</span><span class="sxs-lookup"><span data-stu-id="a221d-173">You can use the following <xref:System.Xml.XmlWriter> methods to write attributes on element nodes.</span></span> <span data-ttu-id="a221d-174">這些方法也可用來建立命名空間宣告項目，在下一節中所述。</span><span class="sxs-lookup"><span data-stu-id="a221d-174">These methods can also be used to create namespace declarations on an element, as discussed in the next section.</span></span>  
  
|<span data-ttu-id="a221d-175">使用</span><span class="sxs-lookup"><span data-stu-id="a221d-175">Use</span></span>|<span data-ttu-id="a221d-176">以</span><span class="sxs-lookup"><span data-stu-id="a221d-176">To</span></span>|  
|---------|--------|  
|<xref:System.Xml.XmlWriter.WriteAttributeString%2A>|<span data-ttu-id="a221d-177">要寫入整個屬性節點，其中包括字串值。</span><span class="sxs-lookup"><span data-stu-id="a221d-177">To write an entire attribute node, including a string value.</span></span>|  
|<xref:System.Xml.XmlWriter.WriteStartAttribute%2A>|<span data-ttu-id="a221d-178">若要撰寫使用多個方法呼叫的屬性值。</span><span class="sxs-lookup"><span data-stu-id="a221d-178">To write the attribute value using multiple method calls.</span></span> <span data-ttu-id="a221d-179">例如，您可以呼叫<xref:System.Xml.XmlWriter.WriteValue%2A>寫入具類型的值。</span><span class="sxs-lookup"><span data-stu-id="a221d-179">For example, you can call <xref:System.Xml.XmlWriter.WriteValue%2A> to write a typed value.</span></span> <span data-ttu-id="a221d-180">這是更趨精密完美的版本<xref:System.Xml.XmlWriter.WriteElementString%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-180">This is a more sophisticated version of the <xref:System.Xml.XmlWriter.WriteElementString%2A> method.</span></span><br /><br /> <span data-ttu-id="a221d-181">若要關閉項目，請呼叫<xref:System.Xml.XmlWriter.WriteEndAttribute%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-181">To close the element, you call the <xref:System.Xml.XmlWriter.WriteEndAttribute%2A> method.</span></span>|  
|<xref:System.Xml.XmlWriter.WriteAttributes%2A>|<span data-ttu-id="a221d-182">若要在目前的位置找到的所有屬性都複製<xref:System.Xml.XmlReader>物件。</span><span class="sxs-lookup"><span data-stu-id="a221d-182">To copy all the attributes found at the current position of an <xref:System.Xml.XmlReader> object.</span></span> <span data-ttu-id="a221d-183">寫入的屬性取決於讀取器目前所在的節點的類型：</span><span class="sxs-lookup"><span data-stu-id="a221d-183">The attributes that are written depend on the type of node the reader is currently positioned on:</span></span><br /><br /> <span data-ttu-id="a221d-184">-若為屬性節點，它會將目前的屬性，然後其餘屬性寫入結尾標記的項目之前。</span><span class="sxs-lookup"><span data-stu-id="a221d-184">-   For an attribute node, it writes the current attribute, and then the rest of the attributes until the element closing tag.</span></span><br /><span data-ttu-id="a221d-185">-若為項目節點，它會寫入元素所包含的所有屬性。</span><span class="sxs-lookup"><span data-stu-id="a221d-185">-   For an element node, it writes all attributes contained by the element.</span></span><br /><span data-ttu-id="a221d-186">-若為 XML 宣告節點，它會寫入所有屬性宣告中。</span><span class="sxs-lookup"><span data-stu-id="a221d-186">-   For an XML declaration node, it writes all the attributes in the declaration.</span></span><br /><span data-ttu-id="a221d-187">-若為所有其他節點型別，方法會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="a221d-187">-   For all other node types, the method throws an exception.</span></span>|  
  
<a name="handling_ns"></a>   
## <a name="handling-namespaces"></a><span data-ttu-id="a221d-188">處理命名空間</span><span class="sxs-lookup"><span data-stu-id="a221d-188">Handling namespaces</span></span>  
 <span data-ttu-id="a221d-189">命名空間用於對 XML 文件中的項目與屬性名稱進行限定。</span><span class="sxs-lookup"><span data-stu-id="a221d-189">Namespaces are used to qualify element and attribute names in an XML document.</span></span> <span data-ttu-id="a221d-190">命名空間前置詞將關聯的命名空間，而接著相關聯的 URI 參考的項目和屬性。</span><span class="sxs-lookup"><span data-stu-id="a221d-190">Namespace prefixes associate elements and attributes with namespaces, which are in turn associated with URI references.</span></span> <span data-ttu-id="a221d-191">命名空間會在 XML 文件中建立項目和屬性名稱唯一性。</span><span class="sxs-lookup"><span data-stu-id="a221d-191">Namespaces create element and attribute name uniqueness in an XML document.</span></span>  
  
 <span data-ttu-id="a221d-192"><xref:System.Xml.XmlWriter>維護命名空間堆疊，對應至目前的命名空間範圍中定義的所有命名空間。</span><span class="sxs-lookup"><span data-stu-id="a221d-192">The <xref:System.Xml.XmlWriter> maintains a namespace stack that corresponds to all the namespaces defined in the current namespace scope.</span></span> <span data-ttu-id="a221d-193">當寫入項目及屬性時，可透過下列方式利用命名空間：</span><span class="sxs-lookup"><span data-stu-id="a221d-193">When writing elements and attributes you can utilize namespaces in the following ways:</span></span>  
  
-   <span data-ttu-id="a221d-194">宣告命名空間，以手動方式使用<xref:System.Xml.XmlWriter.WriteAttributeString%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-194">Declare namespaces manually by using the <xref:System.Xml.XmlWriter.WriteAttributeString%2A> method.</span></span> <span data-ttu-id="a221d-195">當知道如何最佳化命名空間宣告數目時，這便會很有用。</span><span class="sxs-lookup"><span data-stu-id="a221d-195">This can be useful when you know how to best optimize the number of namespace declarations.</span></span> <span data-ttu-id="a221d-196">如需範例，請參閱<xref:System.Xml.XmlWriter.WriteAttributeString%28System.String%2CSystem.String%2CSystem.String%2CSystem.String%29>方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-196">For an example, see the <xref:System.Xml.XmlWriter.WriteAttributeString%28System.String%2CSystem.String%2CSystem.String%2CSystem.String%29> method.</span></span>  
  
-   <span data-ttu-id="a221d-197">使用新的命名空間覆寫目前的命名空間宣告。</span><span class="sxs-lookup"><span data-stu-id="a221d-197">Override the current namespace declaration with a new namespace.</span></span> <span data-ttu-id="a221d-198">下列程式碼，<xref:System.Xml.XmlWriter.WriteAttributeString%2A>方法變更命名空間 URI 的`"x"`前置詞`"123"`至`"abc"`。</span><span class="sxs-lookup"><span data-stu-id="a221d-198">In the following code, the <xref:System.Xml.XmlWriter.WriteAttributeString%2A> method changes the namespace URI for the `"x"` prefix from `"123"` to `"abc"`.</span></span>  
  
     [!code-csharp[XmlWriter_v2#18](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter_v2/CS/writer_v2.cs#18)]
     [!code-vb[XmlWriter_v2#18](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter_v2/VB/writer_v2.vb#18)]  
  
     <span data-ttu-id="a221d-199">程式碼會產生下列 XML 字串：</span><span class="sxs-lookup"><span data-stu-id="a221d-199">The code generates the following XML string:</span></span>  
  
    ```xml  
    <x:root xmlns:x="123">  
      <item xmlns:x="abc" />  
    </x:root>  
    ```  
  
-   <span data-ttu-id="a221d-200">寫入屬性或項目時，指定命名空間前置詞。</span><span class="sxs-lookup"><span data-stu-id="a221d-200">Specify a namespace prefix when writing attributes or elements.</span></span> <span data-ttu-id="a221d-201">許多用來寫入項目和屬性的方法可讓您執行這項操作。</span><span class="sxs-lookup"><span data-stu-id="a221d-201">Many of the methods used to write element and attributes enable you to do this.</span></span> <span data-ttu-id="a221d-202">例如，<xref:System.Xml.XmlWriter.WriteStartElement%28System.String%2CSystem.String%2CSystem.String%29>方法寫入的開頭標記，並將它與指定的命名空間與前置詞產生關聯。</span><span class="sxs-lookup"><span data-stu-id="a221d-202">For example, the <xref:System.Xml.XmlWriter.WriteStartElement%28System.String%2CSystem.String%2CSystem.String%29> method writes a start tag and associates it with a specified namespace and prefix.</span></span>  
  
<a name="writing_types"></a>   
## <a name="writing-typed-data"></a><span data-ttu-id="a221d-203">寫入具型別資料</span><span class="sxs-lookup"><span data-stu-id="a221d-203">Writing typed data</span></span>  
 <span data-ttu-id="a221d-204"><xref:System.Xml.XmlWriter.WriteValue%2A>方法可接受的 common language runtime (CLR) 物件、 將輸入的值轉換為其字串表示，根據 XML 結構描述定義語言 (XSD) 資料類型轉換規則，並將它編寫寫入使用<xref:System.Xml.XmlWriter.WriteString%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-204">The <xref:System.Xml.XmlWriter.WriteValue%2A> method accepts a common language runtime (CLR) object, converts the input value to its string representation according to XML schema definition language (XSD) data type conversion rules, and writes it out by using the <xref:System.Xml.XmlWriter.WriteString%2A> method.</span></span> <span data-ttu-id="a221d-205">這是比使用中的方法更容易<xref:System.Xml.XmlConvert>類別，以寫出之前，將具類型的資料轉換成字串值。</span><span class="sxs-lookup"><span data-stu-id="a221d-205">This is easier than using the methods in the <xref:System.Xml.XmlConvert> class to convert the typed data to a string value before writing it out.</span></span>  
  
 <span data-ttu-id="a221d-206">寫入文字，具類型的值序列化為文字使用<xref:System.Xml.XmlConvert>該結構描述類型的規則。</span><span class="sxs-lookup"><span data-stu-id="a221d-206">When writing to text, the typed value is serialized to text by using the <xref:System.Xml.XmlConvert> rules for that schema type.</span></span>  
  
 <span data-ttu-id="a221d-207">預設 XSD 資料型別對應至 CLR 型別，請參閱<xref:System.Xml.XmlWriter.WriteValue%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-207">For default XSD data types that correspond to CLR types, see the <xref:System.Xml.XmlWriter.WriteValue%2A> method.</span></span>  
  
 <span data-ttu-id="a221d-208"><xref:System.Xml.XmlWriter>也可用來寫入 XML 資料存放區。</span><span class="sxs-lookup"><span data-stu-id="a221d-208">The <xref:System.Xml.XmlWriter> can also be used to write to an XML data store.</span></span> <span data-ttu-id="a221d-209">例如，<xref:System.Xml.XPath.XPathNavigator> 類別可以建立 <xref:System.Xml.XmlWriter> 物件，以建立 <xref:System.Xml.XmlDocument> 物件的節點。</span><span class="sxs-lookup"><span data-stu-id="a221d-209">For example, the <xref:System.Xml.XPath.XPathNavigator> class can create an <xref:System.Xml.XmlWriter> object to create nodes for an <xref:System.Xml.XmlDocument> object.</span></span> <span data-ttu-id="a221d-210">如果資料存放區的結構描述資訊可用，<xref:System.Xml.XmlWriter.WriteValue%2A>方法擲回例外狀況，如果您嘗試轉換成不允許的類型。如果資料存放區並沒有結構描述資訊提供給它，<xref:System.Xml.XmlWriter.WriteValue%2A>方法會將所有的值視為`xsd:anySimpleType`型別。</span><span class="sxs-lookup"><span data-stu-id="a221d-210">If the data store has schema information available to it, the <xref:System.Xml.XmlWriter.WriteValue%2A> method throws an exception if you try to convert to a type that is not allowed.If the data store does not have schema information available to it, the <xref:System.Xml.XmlWriter.WriteValue%2A> method treats all values as an `xsd:anySimpleType` type.</span></span>  
  
<a name="close"></a>   
## <a name="closing-the-xml-writer"></a><span data-ttu-id="a221d-211">關閉的 XML 寫入器</span><span class="sxs-lookup"><span data-stu-id="a221d-211">Closing the XML writer</span></span>  
 <span data-ttu-id="a221d-212">當您使用<xref:System.Xml.XmlWriter>輸出 XML 的元素和屬性的方法不會寫入，直到您呼叫<xref:System.Xml.XmlWriter.Close%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-212">When you use <xref:System.Xml.XmlWriter> methods to output XML, the elements and attributes are not written until you call the <xref:System.Xml.XmlWriter.Close%2A> method.</span></span> <span data-ttu-id="a221d-213">例如，如果您使用<xref:System.Xml.XmlWriter>填入<xref:System.Xml.XmlDocument>物件，您將無法看到寫入的元素和屬性的目標文件中，直到您關閉<xref:System.Xml.XmlWriter>執行個體。</span><span class="sxs-lookup"><span data-stu-id="a221d-213">For example, if you are using <xref:System.Xml.XmlWriter> to populate an <xref:System.Xml.XmlDocument> object, you won't be able to see the written elements and attributes in the target document until you close the <xref:System.Xml.XmlWriter> instance.</span></span>  
  
<a name="async"></a>   
## <a name="asynchronous-programming"></a><span data-ttu-id="a221d-214">非同步程式設計</span><span class="sxs-lookup"><span data-stu-id="a221d-214">Asynchronous programming</span></span>  
 <span data-ttu-id="a221d-215">大部分的<xref:System.Xml.XmlWriter>方法都有非同步的對應具有"Async"結尾的方法名稱。</span><span class="sxs-lookup"><span data-stu-id="a221d-215">Most of the <xref:System.Xml.XmlWriter> methods have asynchronous counterparts that have "Async" at the end of their method names.</span></span> <span data-ttu-id="a221d-216">例如，非同步的對等<xref:System.Xml.XmlWriter.WriteAttributeString%2A>是<xref:System.Xml.XmlWriter.WriteAttributeStringAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="a221d-216">For example, the asynchronous equivalent of <xref:System.Xml.XmlWriter.WriteAttributeString%2A> is <xref:System.Xml.XmlWriter.WriteAttributeStringAsync%2A>.</span></span>  
  
 <span data-ttu-id="a221d-217">如<xref:System.Xml.XmlWriter.WriteValue%2A>方法，沒有非同步的對應項目，將傳回的值轉換為字串，然後再使用<xref:System.Xml.XmlWriter.WriteStringAsync%2A>方法改為。</span><span class="sxs-lookup"><span data-stu-id="a221d-217">For the <xref:System.Xml.XmlWriter.WriteValue%2A> method, which doesn't have an asynchronous counterpart, convert the return value to a string and use the <xref:System.Xml.XmlWriter.WriteStringAsync%2A> method instead.</span></span>  
  
<a name="security"></a>   
## <a name="security-considerations"></a><span data-ttu-id="a221d-218">安全性考量</span><span class="sxs-lookup"><span data-stu-id="a221d-218">Security considerations</span></span>  
 <span data-ttu-id="a221d-219">使用時，請考慮下列<xref:System.Xml.XmlWriter>類別：</span><span class="sxs-lookup"><span data-stu-id="a221d-219">Consider the following when working with the <xref:System.Xml.XmlWriter> class:</span></span>  
  
-   <span data-ttu-id="a221d-220">擲回例外狀況<xref:System.Xml.XmlWriter>可以揭露您不想要的路徑資訊反昇至應用程式。</span><span class="sxs-lookup"><span data-stu-id="a221d-220">Exceptions thrown by the <xref:System.Xml.XmlWriter> can disclose path information that you do not want bubbled up to the app.</span></span> <span data-ttu-id="a221d-221">您的應用程式必須捕捉例外狀況，並予以適當處理。</span><span class="sxs-lookup"><span data-stu-id="a221d-221">Your app must catch exceptions and process them appropriately.</span></span>  
  
-   <span data-ttu-id="a221d-222"><xref:System.Xml.XmlWriter> 不會驗證傳遞至任何資料<xref:System.Xml.XmlWriter.WriteDocType%2A>或<xref:System.Xml.XmlWriter.WriteRaw%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-222"><xref:System.Xml.XmlWriter> does not validate any data that is passed to the <xref:System.Xml.XmlWriter.WriteDocType%2A> or <xref:System.Xml.XmlWriter.WriteRaw%2A> method.</span></span> <span data-ttu-id="a221d-223">您不應該對這些方法傳遞任意資料。</span><span class="sxs-lookup"><span data-stu-id="a221d-223">You should not pass arbitrary data to these methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a221d-224">下列程式碼範例示範如何使用非同步 API 來產生 XML。</span><span class="sxs-lookup"><span data-stu-id="a221d-224">The following example code shows how to use the asynchronous API to generate XML.</span></span>  
  
```csharp  
async Task TestWriter(Stream stream)   
{  
    XmlWriterSettings settings = new XmlWriterSettings();  
    settings.Async = true;  
  
    using (XmlWriter writer = XmlWriter.Create(stream, settings)) {  
        await writer.WriteStartElementAsync("pf", "root", "http://ns");  
        await writer.WriteStartElementAsync(null, "sub", null);  
        await writer.WriteAttributeStringAsync(null, "att", null, "val");  
        await writer.WriteStringAsync("text");  
        await writer.WriteEndElementAsync();  
        await writer.WriteProcessingInstructionAsync("pName", "pValue");  
        await writer.WriteCommentAsync("cValue");  
        await writer.WriteCDataAsync("cdata value");  
        await writer.WriteEndElementAsync();  
        await writer.FlushAsync();  
    }  
}  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XmlWriter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XmlWriter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a221d-225">初始化 <see cref="T:System.Xml.XmlWriter" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="a221d-225">Initializes a new instance of the <see cref="T:System.Xml.XmlWriter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a221d-226">在衍生類別中覆寫時，關閉這個資料流和基礎資料流。</span><span class="sxs-lookup"><span data-stu-id="a221d-226">When overridden in a derived class, closes this stream and the underlying stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-227">自動關閉任何項目或屬性保持開啟狀態。</span><span class="sxs-lookup"><span data-stu-id="a221d-227">Any elements or attributes left open are automatically closed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a221d-228">當您使用<xref:System.Xml.XmlWriter>將不會寫入到輸出 XML 的元素和屬性的方法，直到您呼叫<xref:System.Xml.XmlWriter.Close%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-228">When you use the <xref:System.Xml.XmlWriter> methods to output XML, the elements and attributes will not be written until you call the <xref:System.Xml.XmlWriter.Close%2A> method.</span></span> <span data-ttu-id="a221d-229">例如，如果您要使用 XmlWriter 填入<xref:System.Xml.XmlDocument>，除非您關閉<xref:System.Xml.XmlWriter>，不能觀察目標文件中的屬性與寫入的項目。</span><span class="sxs-lookup"><span data-stu-id="a221d-229">For example, if you are using the XmlWriter to populate an <xref:System.Xml.XmlDocument>, until you close the <xref:System.Xml.XmlWriter>, you will not be able to observe the written elements and attributes in the target document.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a221d-230">下列範例會寫入 XML 節點。</span><span class="sxs-lookup"><span data-stu-id="a221d-230">The following example writes an XML node.</span></span>  
  
 [!code-cpp[XmlWriter.Close#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.Close/CPP/XmlWriter.Close.cpp#1)]
 [!code-csharp[XmlWriter.Close#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.Close/CS/writeelems.cs#1)]
 [!code-vb[XmlWriter.Close#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.Close/VB/writeelems.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-231">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-231">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="a221d-232">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span><span class="sxs-lookup"><span data-stu-id="a221d-232">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a221d-233">建立新的 <see cref="T:System.Xml.XmlWriter" /> 執行個體。</span><span class="sxs-lookup"><span data-stu-id="a221d-233">Creates a new <see cref="T:System.Xml.XmlWriter" /> instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-234">部分<xref:System.Xml.XmlWriter.Create%2A>多載包括`settings`參數可接受<xref:System.Xml.XmlWriterSettings>物件。</span><span class="sxs-lookup"><span data-stu-id="a221d-234">Some of the <xref:System.Xml.XmlWriter.Create%2A> overloads include a `settings` parameter that accepts an <xref:System.Xml.XmlWriterSettings> object.</span></span> <span data-ttu-id="a221d-235">您可以使用此物件來：</span><span class="sxs-lookup"><span data-stu-id="a221d-235">You can use this object to:</span></span>  
  
-   <span data-ttu-id="a221d-236">指定要在建立支援哪些功能<xref:System.Xml.XmlWriter>物件。</span><span class="sxs-lookup"><span data-stu-id="a221d-236">Specify which features you want supported on the created <xref:System.Xml.XmlWriter> object.</span></span>  
  
-   <span data-ttu-id="a221d-237">重複使用<xref:System.Xml.XmlWriterSettings>物件來建立多個寫入器物件。</span><span class="sxs-lookup"><span data-stu-id="a221d-237">Reuse the <xref:System.Xml.XmlWriterSettings> object to create multiple writer objects.</span></span> <span data-ttu-id="a221d-238">複製每個已建立之寫入器的 <xref:System.Xml.XmlWriterSettings> 物件，並標示為唯讀。</span><span class="sxs-lookup"><span data-stu-id="a221d-238">The <xref:System.Xml.XmlWriterSettings> object is copied and marked read-only for each created writer.</span></span> <span data-ttu-id="a221d-239">對 <xref:System.Xml.XmlWriterSettings> 執行個體上設定的變更不會影響具有相同設定的現有寫入器。</span><span class="sxs-lookup"><span data-stu-id="a221d-239">Changes to the settings on an <xref:System.Xml.XmlWriterSettings> instance do not affect existing writers with the same settings.</span></span> <span data-ttu-id="a221d-240">因此，您可以使用相同設定來建立具有相同功能的多個寫入器。</span><span class="sxs-lookup"><span data-stu-id="a221d-240">Thus, you can use the same settings to create multiple writers with the same functionality.</span></span> <span data-ttu-id="a221d-241">或者，您可以修改 <xref:System.Xml.XmlWriterSettings> 執行個體上的設定，並建立具有一組不同功能的新寫入器。</span><span class="sxs-lookup"><span data-stu-id="a221d-241">Or, you can modify the settings on an <xref:System.Xml.XmlWriterSettings> instance and create a new writer with a different set of features.</span></span>  
  
-   <span data-ttu-id="a221d-242">將功能加入現有的 XML 寫入器。</span><span class="sxs-lookup"><span data-stu-id="a221d-242">Add features to an existing XML writer.</span></span> <span data-ttu-id="a221d-243"><xref:System.Xml.XmlWriter.Create%2A> 方法可以接受其他 <xref:System.Xml.XmlWriter> 物件。</span><span class="sxs-lookup"><span data-stu-id="a221d-243">The <xref:System.Xml.XmlWriter.Create%2A> method can accept another <xref:System.Xml.XmlWriter> object.</span></span> <span data-ttu-id="a221d-244">基礎<xref:System.Xml.XmlWriter>物件沒有建立靜態的 XML 寫入器<xref:System.Xml.XmlWriter.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-244">The underlying <xref:System.Xml.XmlWriter> object does not have to be an XML writer created by the static <xref:System.Xml.XmlWriter.Create%2A> method.</span></span> <span data-ttu-id="a221d-245">例如，您可以指定要加入其他功能的使用者定義 XML 寫入器。</span><span class="sxs-lookup"><span data-stu-id="a221d-245">For example, you can specify a user-defined XML writer to add additional features to.</span></span>  
  
-   <span data-ttu-id="a221d-246">充分利用功能較佳的一致性檢查和相容性，例如[XML 1.0 版建議事項](https://www.w3.org/TR/2006/REC-xml-20060816/)只上可用的<xref:System.Xml.XmlWriter>建立由靜態物件<xref:System.Xml.XmlWriter.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-246">Take full advantage of features such as better conformance checking and compliance to the [XML 1.0 recommendation](https://www.w3.org/TR/2006/REC-xml-20060816/) that are available only on <xref:System.Xml.XmlWriter> objects created by the static <xref:System.Xml.XmlWriter.Create%2A> method.</span></span>  
  
 <span data-ttu-id="a221d-247">如果您使用<xref:System.Xml.XmlWriter.Create%2A>不接受的多載<xref:System.Xml.XmlWriterSettings>物件時，會使用下列預設寫入器設定：</span><span class="sxs-lookup"><span data-stu-id="a221d-247">If you use a <xref:System.Xml.XmlWriter.Create%2A> overload that doesn't accept an <xref:System.Xml.XmlWriterSettings> object, the following default writer settings are used:</span></span>  
  
|<span data-ttu-id="a221d-248">設定</span><span class="sxs-lookup"><span data-stu-id="a221d-248">Setting</span></span>|<span data-ttu-id="a221d-249">預設</span><span class="sxs-lookup"><span data-stu-id="a221d-249">Default</span></span>|  
|-------------|-------------|  
|<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>|`true`|  
|<xref:System.Xml.XmlWriterSettings.CloseOutput%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>|<xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|<xref:System.Text.Encoding.UTF8?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Indent%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|<span data-ttu-id="a221d-250">兩個空格</span><span class="sxs-lookup"><span data-stu-id="a221d-250">Two spaces</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NamespaceHandling%2A>|<span data-ttu-id="a221d-251"><xref:System.Xml.NamespaceHandling.Default> （不移除）</span><span class="sxs-lookup"><span data-stu-id="a221d-251"><xref:System.Xml.NamespaceHandling.Default> (no removal)</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|<span data-ttu-id="a221d-252">`\r\n` (歸位字元，新行)</span><span class="sxs-lookup"><span data-stu-id="a221d-252">`\r\n` (carriage return, new line)</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|<xref:System.Xml.NewLineHandling.Replace?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.OutputMethod%2A>|<xref:System.Xml.XmlOutputMethod.Xml?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose%2A>|`true`|  
  
> [!NOTE]
>  <span data-ttu-id="a221d-253">雖然.NET Framework 包含<xref:System.Xml.XmlTextWriter>類別，是具象實作的<xref:System.Xml.XmlWriter>類別，建議您建立<xref:System.Xml.XmlWriter>所使用的執行個體<xref:System.Xml.XmlWriter.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-253">Although the .NET Framework includes the <xref:System.Xml.XmlTextWriter> class, which is a concrete implementation of the <xref:System.Xml.XmlWriter> class, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlWriter Create (System.IO.Stream output);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlWriter Create(class System.IO.Stream output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Create(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (output As Stream) As XmlWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlWriter ^ Create(System::IO::Stream ^ output);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="output"><span data-ttu-id="a221d-254">要寫入其中的資料流。</span><span class="sxs-lookup"><span data-stu-id="a221d-254">The stream to which you want to write.</span></span> <span data-ttu-id="a221d-255"><see cref="T:System.Xml.XmlWriter" /> 會寫入 XML 1.0 文字語法，並將其附加至指定的資料流。</span><span class="sxs-lookup"><span data-stu-id="a221d-255">The <see cref="T:System.Xml.XmlWriter" /> writes XML 1.0 text syntax and appends it to the specified stream.</span></span></param>
        <summary><span data-ttu-id="a221d-256">使用指定的資料流，建立新的 <see cref="T:System.Xml.XmlWriter" /> 執行個體。</span><span class="sxs-lookup"><span data-stu-id="a221d-256">Creates a new <see cref="T:System.Xml.XmlWriter" /> instance using the specified stream.</span></span></summary>
        <returns><span data-ttu-id="a221d-257"><see cref="T:System.Xml.XmlWriter" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="a221d-257">An <see cref="T:System.Xml.XmlWriter" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-258">當您使用這個多載，<xref:System.Xml.XmlWriterSettings>物件，使用下列預設設定用來建立 XML 寫入器：</span><span class="sxs-lookup"><span data-stu-id="a221d-258">When you use this overload, an <xref:System.Xml.XmlWriterSettings> object with the following default settings is used to create the XML writer:</span></span>  
  
|<span data-ttu-id="a221d-259">設定</span><span class="sxs-lookup"><span data-stu-id="a221d-259">Setting</span></span>|<span data-ttu-id="a221d-260">預設</span><span class="sxs-lookup"><span data-stu-id="a221d-260">Default</span></span>|  
|-------------|-------------|  
|<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>|`true`|  
|<xref:System.Xml.XmlWriterSettings.CloseOutput%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>|<xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|<xref:System.Text.Encoding.UTF8?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Indent%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|<span data-ttu-id="a221d-261">兩個空格</span><span class="sxs-lookup"><span data-stu-id="a221d-261">Two spaces</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NamespaceHandling%2A>|<span data-ttu-id="a221d-262"><xref:System.Xml.NamespaceHandling.Default> （不移除）</span><span class="sxs-lookup"><span data-stu-id="a221d-262"><xref:System.Xml.NamespaceHandling.Default> (no removal)</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|<span data-ttu-id="a221d-263">`\r\n` (歸位字元，新行)</span><span class="sxs-lookup"><span data-stu-id="a221d-263">`\r\n` (carriage return, new line)</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|<xref:System.Xml.NewLineHandling.Replace?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.OutputMethod%2A>|<xref:System.Xml.XmlOutputMethod.Xml?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose%2A>|`true`|  
  
 <span data-ttu-id="a221d-264">如果您想要指定要在建立的寫入器上支援的功能，使用多載採用<xref:System.Xml.XmlWriterSettings>物件做為其引數，其中，並傳入<xref:System.Xml.XmlWriterSettings>物件的自訂設定。</span><span class="sxs-lookup"><span data-stu-id="a221d-264">If you want to specify the features to support on the created writer, use an overload that takes an <xref:System.Xml.XmlWriterSettings> object as one of its arguments, and pass in an <xref:System.Xml.XmlWriterSettings> object with your custom settings.</span></span>  
  
 <span data-ttu-id="a221d-265">此外，XmlWriter 一律會寫入位元組順序標記 (BOM) 到基礎資料流。不過，某些資料流必須不會有 BOM。</span><span class="sxs-lookup"><span data-stu-id="a221d-265">Also, XmlWriter always writes a Byte Order Mark (BOM) to the underlying data stream; however, some streams must not have a BOM.</span></span> <span data-ttu-id="a221d-266">若要省略 BOM，建立新<xref:System.Xml.XmlWriterSettings>物件，並設定新的編碼屬性<xref:System.Text.UTF8Encoding>物件建構函式設為 false 的布林值。</span><span class="sxs-lookup"><span data-stu-id="a221d-266">To omit the BOM, create a new <xref:System.Xml.XmlWriterSettings> object and set the Encoding property to be a new <xref:System.Text.UTF8Encoding> object with the Boolean value in the constructor set to false.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a221d-267">下列範例會將 XML 片段寫入記憶體資料流。</span><span class="sxs-lookup"><span data-stu-id="a221d-267">The following example writes an XML fragment to a memory stream.</span></span> <span data-ttu-id="a221d-268">(它會使用<xref:System.Xml.XmlWriter.Create%28System.IO.Stream%2CSystem.Xml.XmlWriterSettings%29>多載，也會設定設定新的 XML 寫入器執行個體上。)</span><span class="sxs-lookup"><span data-stu-id="a221d-268">(It uses the <xref:System.Xml.XmlWriter.Create%28System.IO.Stream%2CSystem.Xml.XmlWriterSettings%29> overload, which also configures the settings on the new XML writer instance.)</span></span>  
  
 [!code-csharp[XmlWriterSettings.CloseOutput#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.CloseOutput/CS/writestream2.cs#1)]
 [!code-vb[XmlWriterSettings.CloseOutput#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.CloseOutput/VB/writestream2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a221d-269"><paramref name="stream" /> 值為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a221d-269">The <paramref name="stream" /> value is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlWriter Create (System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlWriter Create(class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Create(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (output As TextWriter) As XmlWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlWriter ^ Create(System::IO::TextWriter ^ output);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="output"><span data-ttu-id="a221d-270">要寫入至其中的 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="a221d-270">The <see cref="T:System.IO.TextWriter" /> to which you want to write.</span></span> <span data-ttu-id="a221d-271"><see cref="T:System.Xml.XmlWriter" /> 會寫入 XML 1.0 文字語法，並將其附加至指定的 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="a221d-271">The <see cref="T:System.Xml.XmlWriter" /> writes XML 1.0 text syntax and appends it to the specified <see cref="T:System.IO.TextWriter" />.</span></span></param>
        <summary><span data-ttu-id="a221d-272">使用指定的 <see cref="T:System.Xml.XmlWriter" />，建立新 <see cref="T:System.IO.TextWriter" /> 執行個體。</span><span class="sxs-lookup"><span data-stu-id="a221d-272">Creates a new <see cref="T:System.Xml.XmlWriter" /> instance using the specified <see cref="T:System.IO.TextWriter" />.</span></span></summary>
        <returns><span data-ttu-id="a221d-273"><see cref="T:System.Xml.XmlWriter" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="a221d-273">An <see cref="T:System.Xml.XmlWriter" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-274">當您使用這個多載，<xref:System.Xml.XmlWriterSettings>物件以預設設定用來建立 XML 寫入器。</span><span class="sxs-lookup"><span data-stu-id="a221d-274">When you use this overload, an <xref:System.Xml.XmlWriterSettings> object with default settings is used to create the XML writer.</span></span>  
  
|<span data-ttu-id="a221d-275">設定</span><span class="sxs-lookup"><span data-stu-id="a221d-275">Setting</span></span>|<span data-ttu-id="a221d-276">預設</span><span class="sxs-lookup"><span data-stu-id="a221d-276">Default</span></span>|  
|-------------|-------------|  
|<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>|`true`|  
|<xref:System.Xml.XmlWriterSettings.CloseOutput%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>|<xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|<xref:System.Text.Encoding.UTF8?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Indent%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|<span data-ttu-id="a221d-277">兩個空格</span><span class="sxs-lookup"><span data-stu-id="a221d-277">Two spaces</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NamespaceHandling%2A>|<span data-ttu-id="a221d-278"><xref:System.Xml.NamespaceHandling.Default> （不移除）</span><span class="sxs-lookup"><span data-stu-id="a221d-278"><xref:System.Xml.NamespaceHandling.Default> (no removal)</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|<span data-ttu-id="a221d-279">`\r\n` (歸位字元，新行)</span><span class="sxs-lookup"><span data-stu-id="a221d-279">`\r\n` (carriage return, new line)</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|<xref:System.Xml.NewLineHandling.Replace?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.OutputMethod%2A>|<xref:System.Xml.XmlOutputMethod.Xml?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose%2A>|`true`|  
  
 <span data-ttu-id="a221d-280">如果您想要指定要在建立的寫入器上支援的功能，使用多載採用<xref:System.Xml.XmlWriterSettings>物件做為其引數，其中，並傳入<xref:System.Xml.XmlWriterSettings>物件的自訂設定。</span><span class="sxs-lookup"><span data-stu-id="a221d-280">If you want to specify the features to support on the created writer, use an overload that takes an <xref:System.Xml.XmlWriterSettings> object as one of its arguments, and pass in an <xref:System.Xml.XmlWriterSettings> object with your custom settings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a221d-281">下列範例會建立輸出至主控台的寫入器。</span><span class="sxs-lookup"><span data-stu-id="a221d-281">The following example creates a writer that outputs to the console.</span></span>  
  
 [!code-csharp[XmlWriter_v2#3](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter_v2/CS/writer_v2.cs#3)]
 [!code-vb[XmlWriter_v2#3](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter_v2/VB/writer_v2.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a221d-282"><paramref name="text" /> 值為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a221d-282">The <paramref name="text" /> value is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlWriter Create (string outputFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlWriter Create(string outputFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Create(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (outputFileName As String) As XmlWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlWriter ^ Create(System::String ^ outputFileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outputFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="outputFileName"><span data-ttu-id="a221d-283">要寫入其中的檔案。</span><span class="sxs-lookup"><span data-stu-id="a221d-283">The file to which you want to write.</span></span> <span data-ttu-id="a221d-284"><see cref="T:System.Xml.XmlWriter" /> 會於指定路徑建立檔案，並在 XML 1.0 文字語法中寫入它。</span><span class="sxs-lookup"><span data-stu-id="a221d-284">The <see cref="T:System.Xml.XmlWriter" /> creates a file at the specified path and writes to it in XML 1.0 text syntax.</span></span> <span data-ttu-id="a221d-285"><c>outputFileName</c> 必須是檔案系統路徑。</span><span class="sxs-lookup"><span data-stu-id="a221d-285">The <c>outputFileName</c> must be a file system path.</span></span></param>
        <summary><span data-ttu-id="a221d-286">使用指定的檔名，建立新 <see cref="T:System.Xml.XmlWriter" /> 執行個體。</span><span class="sxs-lookup"><span data-stu-id="a221d-286">Creates a new <see cref="T:System.Xml.XmlWriter" /> instance using the specified filename.</span></span></summary>
        <returns><span data-ttu-id="a221d-287"><see cref="T:System.Xml.XmlWriter" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="a221d-287">An <see cref="T:System.Xml.XmlWriter" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-288">當您使用這個多載，<xref:System.Xml.XmlWriterSettings>物件以預設設定用來建立 XML 寫入器。</span><span class="sxs-lookup"><span data-stu-id="a221d-288">When you use this overload, an <xref:System.Xml.XmlWriterSettings> object with default settings is used to create the XML writer.</span></span>  
  
|<span data-ttu-id="a221d-289">設定</span><span class="sxs-lookup"><span data-stu-id="a221d-289">Setting</span></span>|<span data-ttu-id="a221d-290">預設</span><span class="sxs-lookup"><span data-stu-id="a221d-290">Default</span></span>|  
|-------------|-------------|  
|<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>|`true`|  
|<xref:System.Xml.XmlWriterSettings.CloseOutput%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>|<xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|<xref:System.Text.Encoding.UTF8?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Indent%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|<span data-ttu-id="a221d-291">兩個空格</span><span class="sxs-lookup"><span data-stu-id="a221d-291">Two spaces</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NamespaceHandling%2A>|<span data-ttu-id="a221d-292"><xref:System.Xml.NamespaceHandling.Default> （不移除）</span><span class="sxs-lookup"><span data-stu-id="a221d-292"><xref:System.Xml.NamespaceHandling.Default> (no removal)</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|<span data-ttu-id="a221d-293">`\r\n` (歸位字元，新行)</span><span class="sxs-lookup"><span data-stu-id="a221d-293">`\r\n` (carriage return, new line)</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|<xref:System.Xml.NewLineHandling.Replace?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.OutputMethod%2A>|<xref:System.Xml.XmlOutputMethod.Xml?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose%2A>|`true`|  
  
 <span data-ttu-id="a221d-294">如果您想要指定要建立的 XML 寫入器上支援的功能，使用多載採用<xref:System.Xml.XmlWriterSettings>物件做為其引數，其中，並傳入<xref:System.Xml.XmlWriterSettings>物件的自訂設定。</span><span class="sxs-lookup"><span data-stu-id="a221d-294">If you want to specify the features to support on the created XML writer, use an overload that takes an <xref:System.Xml.XmlWriterSettings> object as one of its arguments, and pass in a <xref:System.Xml.XmlWriterSettings> object with your custom settings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a221d-295">下列範例會建立<xref:System.Xml.XmlWriter>物件，並寫入書籍節點。</span><span class="sxs-lookup"><span data-stu-id="a221d-295">The following example creates an <xref:System.Xml.XmlWriter> object and writes a book node.</span></span>  
  
 [!code-csharp[XmlWriter_v2#2](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter_v2/CS/writer_v2.cs#2)]
 [!code-vb[XmlWriter_v2#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter_v2/VB/writer_v2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a221d-296"><paramref name="url" /> 值為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a221d-296">The <paramref name="url" /> value is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlWriter Create (System.Text.StringBuilder output);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlWriter Create(class System.Text.StringBuilder output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (output As StringBuilder) As XmlWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlWriter ^ Create(System::Text::StringBuilder ^ output);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.Text.StringBuilder" />
      </Parameters>
      <Docs>
        <param name="output"><span data-ttu-id="a221d-297">要寫入至其中的 <see cref="T:System.Text.StringBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="a221d-297">The <see cref="T:System.Text.StringBuilder" /> to which to write to.</span></span> <span data-ttu-id="a221d-298"><see cref="T:System.Xml.XmlWriter" /> 寫入的內容會附加至 <see cref="T:System.Text.StringBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="a221d-298">Content written by the <see cref="T:System.Xml.XmlWriter" /> is appended to the <see cref="T:System.Text.StringBuilder" />.</span></span></param>
        <summary><span data-ttu-id="a221d-299">使用指定的 <see cref="T:System.Xml.XmlWriter" />，建立新 <see cref="T:System.Text.StringBuilder" /> 執行個體。</span><span class="sxs-lookup"><span data-stu-id="a221d-299">Creates a new <see cref="T:System.Xml.XmlWriter" /> instance using the specified <see cref="T:System.Text.StringBuilder" />.</span></span></summary>
        <returns><span data-ttu-id="a221d-300"><see cref="T:System.Xml.XmlWriter" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="a221d-300">An <see cref="T:System.Xml.XmlWriter" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-301">當您使用這個多載，<xref:System.Xml.XmlWriterSettings>物件以預設設定用來建立 XML 寫入器。</span><span class="sxs-lookup"><span data-stu-id="a221d-301">When you use this overload, an <xref:System.Xml.XmlWriterSettings> object with default settings is used to create the XML writer.</span></span>  
  
|<span data-ttu-id="a221d-302">設定</span><span class="sxs-lookup"><span data-stu-id="a221d-302">Setting</span></span>|<span data-ttu-id="a221d-303">預設</span><span class="sxs-lookup"><span data-stu-id="a221d-303">Default</span></span>|  
|-------------|-------------|  
|<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>|`true`|  
|<xref:System.Xml.XmlWriterSettings.CloseOutput%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>|<xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|<xref:System.Text.Encoding.UTF8?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Indent%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|<span data-ttu-id="a221d-304">兩個空格</span><span class="sxs-lookup"><span data-stu-id="a221d-304">Two spaces</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NamespaceHandling%2A>|<span data-ttu-id="a221d-305"><xref:System.Xml.NamespaceHandling.Default> （不移除）</span><span class="sxs-lookup"><span data-stu-id="a221d-305"><xref:System.Xml.NamespaceHandling.Default> (no removal)</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|<span data-ttu-id="a221d-306">`\r\n` (歸位字元，新行)</span><span class="sxs-lookup"><span data-stu-id="a221d-306">`\r\n` (carriage return, new line)</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|<xref:System.Xml.NewLineHandling.Replace?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.OutputMethod%2A>|<xref:System.Xml.XmlOutputMethod.Xml?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose%2A>|`true`|  
  
 <span data-ttu-id="a221d-307">如果您想要指定要建立的 XML 寫入器上支援的功能，使用多載採用<xref:System.Xml.XmlWriterSettings>物件做為其引數，其中，並傳入<xref:System.Xml.XmlWriterSettings>物件的自訂設定。</span><span class="sxs-lookup"><span data-stu-id="a221d-307">If you want to specify the features to support on the created XML writer, use an overload that takes an <xref:System.Xml.XmlWriterSettings> object as one of its arguments, and pass in a <xref:System.Xml.XmlWriterSettings> object with your custom settings.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a221d-308"><paramref name="builder" /> 值為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a221d-308">The <paramref name="builder" /> value is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlWriter Create (System.Xml.XmlWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlWriter Create(class System.Xml.XmlWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (output As XmlWriter) As XmlWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlWriter ^ Create(System::Xml::XmlWriter ^ output);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="output"><span data-ttu-id="a221d-309">您想要當做基礎寫入器使用的 <see cref="T:System.Xml.XmlWriter" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="a221d-309">The <see cref="T:System.Xml.XmlWriter" /> object that you want to use as the underlying writer.</span></span></param>
        <summary><span data-ttu-id="a221d-310">使用指定的 <see cref="T:System.Xml.XmlWriter" /> 物件，建立新 <see cref="T:System.Xml.XmlWriter" /> 執行個體。</span><span class="sxs-lookup"><span data-stu-id="a221d-310">Creates a new <see cref="T:System.Xml.XmlWriter" /> instance using the specified <see cref="T:System.Xml.XmlWriter" /> object.</span></span></summary>
        <returns><span data-ttu-id="a221d-311"><see cref="T:System.Xml.XmlWriter" /> 物件，包裝於指定的 <see cref="T:System.Xml.XmlWriter" /> 物件附近。</span><span class="sxs-lookup"><span data-stu-id="a221d-311">An <see cref="T:System.Xml.XmlWriter" /> object that is wrapped around the specified <see cref="T:System.Xml.XmlWriter" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-312">這個方法可讓您將功能加入基礎<xref:System.Xml.XmlWriter>物件。</span><span class="sxs-lookup"><span data-stu-id="a221d-312">This method allows you add features to an underlying <xref:System.Xml.XmlWriter> object.</span></span> <span data-ttu-id="a221d-313">基礎<xref:System.Xml.XmlWriter>物件可以是所建立的物件<xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType>方法或使用建立的物件<xref:System.Xml.XmlTextWriter>實作。</span><span class="sxs-lookup"><span data-stu-id="a221d-313">The underlying <xref:System.Xml.XmlWriter> object can be an object created by the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method, or an object created using the <xref:System.Xml.XmlTextWriter> implementation.</span></span>  
  
 <span data-ttu-id="a221d-314">當您使用這個多載，<xref:System.Xml.XmlWriterSettings>物件以預設設定用來建立 XML 寫入器。</span><span class="sxs-lookup"><span data-stu-id="a221d-314">When you use this overload, an <xref:System.Xml.XmlWriterSettings> object with default settings is used to create the XML writer.</span></span>  
  
|<span data-ttu-id="a221d-315">設定</span><span class="sxs-lookup"><span data-stu-id="a221d-315">Setting</span></span>|<span data-ttu-id="a221d-316">預設</span><span class="sxs-lookup"><span data-stu-id="a221d-316">Default</span></span>|  
|-------------|-------------|  
|<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>|`true`|  
|<xref:System.Xml.XmlWriterSettings.CloseOutput%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>|<xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|<xref:System.Text.Encoding.UTF8?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Indent%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|<span data-ttu-id="a221d-317">兩個空格</span><span class="sxs-lookup"><span data-stu-id="a221d-317">Two spaces</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NamespaceHandling%2A>|<span data-ttu-id="a221d-318"><xref:System.Xml.NamespaceHandling.Default> （不移除）</span><span class="sxs-lookup"><span data-stu-id="a221d-318"><xref:System.Xml.NamespaceHandling.Default> (no removal)</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|<span data-ttu-id="a221d-319">`\r\n` (歸位字元，新行)</span><span class="sxs-lookup"><span data-stu-id="a221d-319">`\r\n` (carriage return, new line)</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|<xref:System.Xml.NewLineHandling.Replace?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.OutputMethod%2A>|<xref:System.Xml.XmlOutputMethod.Xml?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose%2A>|`true`|  
  
 <span data-ttu-id="a221d-320">如果您想要指定要建立的 XML 寫入器上支援的功能，使用多載採用<xref:System.Xml.XmlWriterSettings>物件做為其引數，其中，並傳入<xref:System.Xml.XmlWriterSettings>物件的自訂設定。</span><span class="sxs-lookup"><span data-stu-id="a221d-320">If you want to specify the features to support on the created XML writer, use an overload that takes an <xref:System.Xml.XmlWriterSettings> object as one of its arguments, and pass in a <xref:System.Xml.XmlWriterSettings> object with your custom settings.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a221d-321"><paramref name="writer" /> 值為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a221d-321">The <paramref name="writer" /> value is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlWriter Create (System.IO.Stream output, System.Xml.XmlWriterSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlWriter Create(class System.IO.Stream output, class System.Xml.XmlWriterSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Create(System.IO.Stream,System.Xml.XmlWriterSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (output As Stream, settings As XmlWriterSettings) As XmlWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlWriter ^ Create(System::IO::Stream ^ output, System::Xml::XmlWriterSettings ^ settings);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.IO.Stream" />
        <Parameter Name="settings" Type="System.Xml.XmlWriterSettings" />
      </Parameters>
      <Docs>
        <param name="output"><span data-ttu-id="a221d-322">要寫入其中的資料流。</span><span class="sxs-lookup"><span data-stu-id="a221d-322">The stream to which you want to write.</span></span> <span data-ttu-id="a221d-323"><see cref="T:System.Xml.XmlWriter" /> 會寫入 XML 1.0 文字語法，並將其附加至指定的資料流。</span><span class="sxs-lookup"><span data-stu-id="a221d-323">The <see cref="T:System.Xml.XmlWriter" /> writes XML 1.0 text syntax and appends it to the specified stream.</span></span></param>
        <param name="settings"><span data-ttu-id="a221d-324">用於設定新 <see cref="T:System.Xml.XmlWriterSettings" /> 執行個體的 <see cref="T:System.Xml.XmlWriter" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="a221d-324">The <see cref="T:System.Xml.XmlWriterSettings" /> object used to configure the new <see cref="T:System.Xml.XmlWriter" /> instance.</span></span> <span data-ttu-id="a221d-325">如果是 <see langword="null" />，則會使用有預設值的 <see cref="T:System.Xml.XmlWriterSettings" />。</span><span class="sxs-lookup"><span data-stu-id="a221d-325">If this is <see langword="null" />, a <see cref="T:System.Xml.XmlWriterSettings" /> with default settings is used.</span></span>  
  
 <span data-ttu-id="a221d-326">如果 <see cref="T:System.Xml.XmlWriter" /> 正配合 <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /> 方法使用，您應該使用 <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> 屬性，以取得有正確設定的 <see cref="T:System.Xml.XmlWriterSettings" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="a221d-326">If the <see cref="T:System.Xml.XmlWriter" /> is being used with the <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /> method, you should use the <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> property to obtain an <see cref="T:System.Xml.XmlWriterSettings" /> object with the correct settings.</span></span> <span data-ttu-id="a221d-327">如此可確保所建立的 <see cref="T:System.Xml.XmlWriter" /> 物件具有正確的輸出設定。</span><span class="sxs-lookup"><span data-stu-id="a221d-327">This ensures that the created <see cref="T:System.Xml.XmlWriter" /> object has the correct output settings.</span></span></param>
        <summary><span data-ttu-id="a221d-328">使用資料流和 <see cref="T:System.Xml.XmlWriter" /> 物件，建立新 <see cref="T:System.Xml.XmlWriterSettings" /> 執行個體。</span><span class="sxs-lookup"><span data-stu-id="a221d-328">Creates a new <see cref="T:System.Xml.XmlWriter" /> instance using the stream and <see cref="T:System.Xml.XmlWriterSettings" /> object.</span></span></summary>
        <returns><span data-ttu-id="a221d-329"><see cref="T:System.Xml.XmlWriter" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="a221d-329">An <see cref="T:System.Xml.XmlWriter" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-330">XmlWriter 一律將位元組順序標記 (BOM) 寫入至基礎資料流。不過，某些資料流必須不會有 BOM。</span><span class="sxs-lookup"><span data-stu-id="a221d-330">XmlWriter always writes a Byte Order Mark (BOM) to the underlying data stream; however, some streams must not have a BOM.</span></span> <span data-ttu-id="a221d-331">若要省略 BOM，建立新<xref:System.Xml.XmlWriterSettings>物件，並設定新的編碼屬性<xref:System.Text.UTF8Encoding>物件建構函式設為 false 的布林值。</span><span class="sxs-lookup"><span data-stu-id="a221d-331">To omit the BOM, create a new <xref:System.Xml.XmlWriterSettings> object and set the Encoding property to be a new <xref:System.Text.UTF8Encoding> object with the Boolean value in the constructor set to false.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a221d-332">下列範例會將 XML 片段寫入記憶體資料流。</span><span class="sxs-lookup"><span data-stu-id="a221d-332">The following example writes an XML fragment to a memory stream.</span></span>  
  
 [!code-csharp[XmlWriterSettings.CloseOutput#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.CloseOutput/CS/writestream2.cs#1)]
 [!code-vb[XmlWriterSettings.CloseOutput#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.CloseOutput/VB/writestream2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a221d-333"><paramref name="stream" /> 值為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a221d-333">The <paramref name="stream" /> value is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlWriter Create (System.IO.TextWriter output, System.Xml.XmlWriterSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlWriter Create(class System.IO.TextWriter output, class System.Xml.XmlWriterSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Create(System.IO.TextWriter,System.Xml.XmlWriterSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (output As TextWriter, settings As XmlWriterSettings) As XmlWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlWriter ^ Create(System::IO::TextWriter ^ output, System::Xml::XmlWriterSettings ^ settings);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.IO.TextWriter" />
        <Parameter Name="settings" Type="System.Xml.XmlWriterSettings" />
      </Parameters>
      <Docs>
        <param name="output"><span data-ttu-id="a221d-334">要寫入至其中的 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="a221d-334">The <see cref="T:System.IO.TextWriter" /> to which you want to write.</span></span> <span data-ttu-id="a221d-335"><see cref="T:System.Xml.XmlWriter" /> 會寫入 XML 1.0 文字語法，並將其附加至指定的 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="a221d-335">The <see cref="T:System.Xml.XmlWriter" /> writes XML 1.0 text syntax and appends it to the specified <see cref="T:System.IO.TextWriter" />.</span></span></param>
        <param name="settings"><span data-ttu-id="a221d-336">用於設定新 <see cref="T:System.Xml.XmlWriterSettings" /> 執行個體的 <see cref="T:System.Xml.XmlWriter" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="a221d-336">The <see cref="T:System.Xml.XmlWriterSettings" /> object used to configure the new <see cref="T:System.Xml.XmlWriter" /> instance.</span></span> <span data-ttu-id="a221d-337">如果是 <see langword="null" />，則會使用有預設值的 <see cref="T:System.Xml.XmlWriterSettings" />。</span><span class="sxs-lookup"><span data-stu-id="a221d-337">If this is <see langword="null" />, a <see cref="T:System.Xml.XmlWriterSettings" /> with default settings is used.</span></span>  
  
 <span data-ttu-id="a221d-338">如果 <see cref="T:System.Xml.XmlWriter" /> 正配合 <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /> 方法使用，您應該使用 <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> 屬性，以取得有正確設定的 <see cref="T:System.Xml.XmlWriterSettings" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="a221d-338">If the <see cref="T:System.Xml.XmlWriter" /> is being used with the <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /> method, you should use the <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> property to obtain an <see cref="T:System.Xml.XmlWriterSettings" /> object with the correct settings.</span></span> <span data-ttu-id="a221d-339">如此可確保所建立的 <see cref="T:System.Xml.XmlWriter" /> 物件具有正確的輸出設定。</span><span class="sxs-lookup"><span data-stu-id="a221d-339">This ensures that the created <see cref="T:System.Xml.XmlWriter" /> object has the correct output settings.</span></span></param>
        <summary><span data-ttu-id="a221d-340">使用 <see cref="T:System.Xml.XmlWriter" /> 和 <see cref="T:System.IO.TextWriter" /> 物件，建立新的 <see cref="T:System.Xml.XmlWriterSettings" /> 執行個體。</span><span class="sxs-lookup"><span data-stu-id="a221d-340">Creates a new <see cref="T:System.Xml.XmlWriter" /> instance using the <see cref="T:System.IO.TextWriter" /> and <see cref="T:System.Xml.XmlWriterSettings" /> objects.</span></span></summary>
        <returns><span data-ttu-id="a221d-341"><see cref="T:System.Xml.XmlWriter" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="a221d-341">An <see cref="T:System.Xml.XmlWriter" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a221d-342">下列範例會寫出 XML 字串。</span><span class="sxs-lookup"><span data-stu-id="a221d-342">The following example writes out an XML string.</span></span>  
  
 [!code-csharp[XmlWriter_v2#4](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter_v2/CS/writer_v2.cs#4)]
 [!code-vb[XmlWriter_v2#4](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter_v2/VB/writer_v2.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a221d-343"><paramref name="text" /> 值為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a221d-343">The <paramref name="text" /> value is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlWriter Create (string outputFileName, System.Xml.XmlWriterSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlWriter Create(string outputFileName, class System.Xml.XmlWriterSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Create(System.String,System.Xml.XmlWriterSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (outputFileName As String, settings As XmlWriterSettings) As XmlWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlWriter ^ Create(System::String ^ outputFileName, System::Xml::XmlWriterSettings ^ settings);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outputFileName" Type="System.String" />
        <Parameter Name="settings" Type="System.Xml.XmlWriterSettings" />
      </Parameters>
      <Docs>
        <param name="outputFileName"><span data-ttu-id="a221d-344">要寫入其中的檔案。</span><span class="sxs-lookup"><span data-stu-id="a221d-344">The file to which you want to write.</span></span> <span data-ttu-id="a221d-345"><see cref="T:System.Xml.XmlWriter" /> 會於指定路徑建立檔案，並在 XML 1.0 文字語法中寫入它。</span><span class="sxs-lookup"><span data-stu-id="a221d-345">The <see cref="T:System.Xml.XmlWriter" /> creates a file at the specified path and writes to it in XML 1.0 text syntax.</span></span> <span data-ttu-id="a221d-346"><c>outputFileName</c> 必須是檔案系統路徑。</span><span class="sxs-lookup"><span data-stu-id="a221d-346">The <c>outputFileName</c> must be a file system path.</span></span></param>
        <param name="settings"><span data-ttu-id="a221d-347">用於設定新 <see cref="T:System.Xml.XmlWriterSettings" /> 執行個體的 <see cref="T:System.Xml.XmlWriter" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="a221d-347">The <see cref="T:System.Xml.XmlWriterSettings" /> object used to configure the new <see cref="T:System.Xml.XmlWriter" /> instance.</span></span> <span data-ttu-id="a221d-348">如果是 <see langword="null" />，則會使用有預設值的 <see cref="T:System.Xml.XmlWriterSettings" />。</span><span class="sxs-lookup"><span data-stu-id="a221d-348">If this is <see langword="null" />, a <see cref="T:System.Xml.XmlWriterSettings" /> with default settings is used.</span></span>  
  
 <span data-ttu-id="a221d-349">如果 <see cref="T:System.Xml.XmlWriter" /> 正配合 <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /> 方法使用，您應該使用 <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> 屬性，以取得有正確設定的 <see cref="T:System.Xml.XmlWriterSettings" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="a221d-349">If the <see cref="T:System.Xml.XmlWriter" /> is being used with the <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /> method, you should use the <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> property to obtain an <see cref="T:System.Xml.XmlWriterSettings" /> object with the correct settings.</span></span> <span data-ttu-id="a221d-350">如此可確保所建立的 <see cref="T:System.Xml.XmlWriter" /> 物件具有正確的輸出設定。</span><span class="sxs-lookup"><span data-stu-id="a221d-350">This ensures that the created <see cref="T:System.Xml.XmlWriter" /> object has the correct output settings.</span></span></param>
        <summary><span data-ttu-id="a221d-351">使用檔名和 <see cref="T:System.Xml.XmlWriter" /> 物件，建立新 <see cref="T:System.Xml.XmlWriterSettings" /> 執行個體。</span><span class="sxs-lookup"><span data-stu-id="a221d-351">Creates a new <see cref="T:System.Xml.XmlWriter" /> instance using the filename and <see cref="T:System.Xml.XmlWriterSettings" /> object.</span></span></summary>
        <returns><span data-ttu-id="a221d-352"><see cref="T:System.Xml.XmlWriter" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="a221d-352">An <see cref="T:System.Xml.XmlWriter" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a221d-353">下列範例會建立<xref:System.Xml.XmlWriter>物件定義的設定。</span><span class="sxs-lookup"><span data-stu-id="a221d-353">The following example creates an <xref:System.Xml.XmlWriter> object with the defined settings.</span></span>  
  
 [!code-csharp[XmlWriterSettings.Indent#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.Indent/CS/writeindent.cs#1)]
 [!code-vb[XmlWriterSettings.Indent#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.Indent/VB/writeindent.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a221d-354"><paramref name="url" /> 值為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a221d-354">The <paramref name="url" /> value is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlWriter Create (System.Text.StringBuilder output, System.Xml.XmlWriterSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlWriter Create(class System.Text.StringBuilder output, class System.Xml.XmlWriterSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder,System.Xml.XmlWriterSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (output As StringBuilder, settings As XmlWriterSettings) As XmlWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlWriter ^ Create(System::Text::StringBuilder ^ output, System::Xml::XmlWriterSettings ^ settings);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.Text.StringBuilder" />
        <Parameter Name="settings" Type="System.Xml.XmlWriterSettings" />
      </Parameters>
      <Docs>
        <param name="output"><span data-ttu-id="a221d-355">要寫入至其中的 <see cref="T:System.Text.StringBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="a221d-355">The <see cref="T:System.Text.StringBuilder" /> to which to write to.</span></span> <span data-ttu-id="a221d-356"><see cref="T:System.Xml.XmlWriter" /> 寫入的內容會附加至 <see cref="T:System.Text.StringBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="a221d-356">Content written by the <see cref="T:System.Xml.XmlWriter" /> is appended to the <see cref="T:System.Text.StringBuilder" />.</span></span></param>
        <param name="settings"><span data-ttu-id="a221d-357">用於設定新 <see cref="T:System.Xml.XmlWriterSettings" /> 執行個體的 <see cref="T:System.Xml.XmlWriter" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="a221d-357">The <see cref="T:System.Xml.XmlWriterSettings" /> object used to configure the new <see cref="T:System.Xml.XmlWriter" /> instance.</span></span> <span data-ttu-id="a221d-358">如果是 <see langword="null" />，則會使用有預設值的 <see cref="T:System.Xml.XmlWriterSettings" />。</span><span class="sxs-lookup"><span data-stu-id="a221d-358">If this is <see langword="null" />, a <see cref="T:System.Xml.XmlWriterSettings" /> with default settings is used.</span></span>  
  
 <span data-ttu-id="a221d-359">如果 <see cref="T:System.Xml.XmlWriter" /> 正配合 <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /> 方法使用，您應該使用 <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> 屬性，以取得有正確設定的 <see cref="T:System.Xml.XmlWriterSettings" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="a221d-359">If the <see cref="T:System.Xml.XmlWriter" /> is being used with the <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /> method, you should use the <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> property to obtain an <see cref="T:System.Xml.XmlWriterSettings" /> object with the correct settings.</span></span> <span data-ttu-id="a221d-360">如此可確保所建立的 <see cref="T:System.Xml.XmlWriter" /> 物件具有正確的輸出設定。</span><span class="sxs-lookup"><span data-stu-id="a221d-360">This ensures that the created <see cref="T:System.Xml.XmlWriter" /> object has the correct output settings.</span></span></param>
        <summary><span data-ttu-id="a221d-361">使用 <see cref="T:System.Xml.XmlWriter" /> 和 <see cref="T:System.Text.StringBuilder" /> 物件，建立新的 <see cref="T:System.Xml.XmlWriterSettings" /> 執行個體。</span><span class="sxs-lookup"><span data-stu-id="a221d-361">Creates a new <see cref="T:System.Xml.XmlWriter" /> instance using the <see cref="T:System.Text.StringBuilder" /> and <see cref="T:System.Xml.XmlWriterSettings" /> objects.</span></span></summary>
        <returns><span data-ttu-id="a221d-362"><see cref="T:System.Xml.XmlWriter" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="a221d-362">An <see cref="T:System.Xml.XmlWriter" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a221d-363"><paramref name="builder" /> 值為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a221d-363">The <paramref name="builder" /> value is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlWriter Create (System.Xml.XmlWriter output, System.Xml.XmlWriterSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlWriter Create(class System.Xml.XmlWriter output, class System.Xml.XmlWriterSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter,System.Xml.XmlWriterSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (output As XmlWriter, settings As XmlWriterSettings) As XmlWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlWriter ^ Create(System::Xml::XmlWriter ^ output, System::Xml::XmlWriterSettings ^ settings);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
        <Parameter Name="settings" Type="System.Xml.XmlWriterSettings" />
      </Parameters>
      <Docs>
        <param name="output"><span data-ttu-id="a221d-364">您想要當做基礎寫入器使用的 <see cref="T:System.Xml.XmlWriter" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="a221d-364">The <see cref="T:System.Xml.XmlWriter" /> object that you want to use as the underlying writer.</span></span></param>
        <param name="settings"><span data-ttu-id="a221d-365">用於設定新 <see cref="T:System.Xml.XmlWriterSettings" /> 執行個體的 <see cref="T:System.Xml.XmlWriter" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="a221d-365">The <see cref="T:System.Xml.XmlWriterSettings" /> object used to configure the new <see cref="T:System.Xml.XmlWriter" /> instance.</span></span> <span data-ttu-id="a221d-366">如果是 <see langword="null" />，則會使用有預設值的 <see cref="T:System.Xml.XmlWriterSettings" />。</span><span class="sxs-lookup"><span data-stu-id="a221d-366">If this is <see langword="null" />, a <see cref="T:System.Xml.XmlWriterSettings" /> with default settings is used.</span></span>  
  
 <span data-ttu-id="a221d-367">如果 <see cref="T:System.Xml.XmlWriter" /> 正配合 <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /> 方法使用，您應該使用 <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> 屬性，以取得有正確設定的 <see cref="T:System.Xml.XmlWriterSettings" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="a221d-367">If the <see cref="T:System.Xml.XmlWriter" /> is being used with the <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /> method, you should use the <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> property to obtain an <see cref="T:System.Xml.XmlWriterSettings" /> object with the correct settings.</span></span> <span data-ttu-id="a221d-368">如此可確保所建立的 <see cref="T:System.Xml.XmlWriter" /> 物件具有正確的輸出設定。</span><span class="sxs-lookup"><span data-stu-id="a221d-368">This ensures that the created <see cref="T:System.Xml.XmlWriter" /> object has the correct output settings.</span></span></param>
        <summary><span data-ttu-id="a221d-369">使用指定的 <see cref="T:System.Xml.XmlWriter" /> 和 <see cref="T:System.Xml.XmlWriter" /> 物件，建立新的 <see cref="T:System.Xml.XmlWriterSettings" /> 執行個體。</span><span class="sxs-lookup"><span data-stu-id="a221d-369">Creates a new <see cref="T:System.Xml.XmlWriter" /> instance using the specified <see cref="T:System.Xml.XmlWriter" /> and <see cref="T:System.Xml.XmlWriterSettings" /> objects.</span></span></summary>
        <returns><span data-ttu-id="a221d-370"><see cref="T:System.Xml.XmlWriter" /> 物件，包裝於指定的 <see cref="T:System.Xml.XmlWriter" /> 物件附近。</span><span class="sxs-lookup"><span data-stu-id="a221d-370">An <see cref="T:System.Xml.XmlWriter" /> object that is wrapped around the specified <see cref="T:System.Xml.XmlWriter" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-371">這個方法可讓您將其他功能加入基礎<xref:System.Xml.XmlWriter>物件。</span><span class="sxs-lookup"><span data-stu-id="a221d-371">This method allows you add additional features to an underlying <xref:System.Xml.XmlWriter> object.</span></span> <span data-ttu-id="a221d-372">基礎<xref:System.Xml.XmlWriter>物件可以是所建立的物件<xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType>方法或使用建立的物件<xref:System.Xml.XmlTextWriter>實作。</span><span class="sxs-lookup"><span data-stu-id="a221d-372">The underlying <xref:System.Xml.XmlWriter> object can be an object created by the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method, or an object created using the <xref:System.Xml.XmlTextWriter> implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a221d-373"><paramref name="writer" /> 值為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a221d-373">The <paramref name="writer" /> value is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-374">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-374">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="a221d-375">在此情況下，會擲回包含「非同步作業已經在進行中」訊息的 <see cref="T:System.InvalidOperationException" />。</span><span class="sxs-lookup"><span data-stu-id="a221d-375">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message “An asynchronous operation is already in progress.”</span></span></exception>
        <summary><span data-ttu-id="a221d-376">釋放 <see cref="T:System.Xml.XmlWriter" /> 類別所使用的資源。</span><span class="sxs-lookup"><span data-stu-id="a221d-376">Releases the resources used by the <see cref="T:System.Xml.XmlWriter" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a221d-377">將 <see cref="T:System.Xml.XmlWriter" /> 類別目前的執行個體所使用的資源全部釋出。</span><span class="sxs-lookup"><span data-stu-id="a221d-377">Releases all resources used by the current instance of the <see cref="T:System.Xml.XmlWriter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-378">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-378">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="a221d-379">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span><span class="sxs-lookup"><span data-stu-id="a221d-379">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="a221d-380"><see langword="true" /> 表示釋放 Managed 和 Unmanaged 資源，<see langword="false" /> 則表示只釋放 Unmanaged 資源。</span><span class="sxs-lookup"><span data-stu-id="a221d-380"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="a221d-381">釋放 <see cref="T:System.Xml.XmlWriter" /> 所使用的 Unmanaged 資源，並選擇性地釋放 Managed 資源。</span><span class="sxs-lookup"><span data-stu-id="a221d-381">Releases the unmanaged resources used by the <see cref="T:System.Xml.XmlWriter" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-382">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-382">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="a221d-383">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span><span class="sxs-lookup"><span data-stu-id="a221d-383">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public abstract void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Flush" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Flush();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a221d-384">在衍生類別中覆寫時，將緩衝區的所有內容清空至基礎資料流，然後清空基礎資料流。</span><span class="sxs-lookup"><span data-stu-id="a221d-384">When overridden in a derived class, flushes whatever is in the buffer to the underlying streams and also flushes the underlying stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-385">這稱為而不是<xref:System.Xml.XmlWriter.Close%2A>當您想要撰寫更多基礎資料流而不會遺失什麼仍在緩衝區中。</span><span class="sxs-lookup"><span data-stu-id="a221d-385">This is called instead of <xref:System.Xml.XmlWriter.Close%2A> when you want to write more to the underlying stream without losing what is still in the buffer.</span></span>  
  
 <span data-ttu-id="a221d-386">這個方法的非同步版本，請參閱<xref:System.Xml.XmlWriter.FlushAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="a221d-386">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.FlushAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a221d-387">下列範例會將兩個 XML 片段。</span><span class="sxs-lookup"><span data-stu-id="a221d-387">The following example writes two XML fragments.</span></span>  
  
 [!code-cpp[XmlWriter.Flush#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.Flush/CPP/write2docs_v2.cpp#1)]
 [!code-csharp[XmlWriter.Flush#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.Flush/CS/write2docs_v2.cs#1)]
 [!code-vb[XmlWriter.Flush#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.Flush/VB/write2docs_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-388">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-388">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="a221d-389">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span><span class="sxs-lookup"><span data-stu-id="a221d-389">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task FlushAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task FlushAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.FlushAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FlushAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ FlushAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a221d-390">以非同步的方式將緩衝區的所有內容清空至基礎資料流，然後清空基礎資料流。</span><span class="sxs-lookup"><span data-stu-id="a221d-390">Asynchronously flushes whatever is in the buffer to the underlying streams and also flushes the underlying stream.</span></span></summary>
        <returns><span data-ttu-id="a221d-391">表示非同步 <see langword="Flush" /> 作業的工作。</span><span class="sxs-lookup"><span data-stu-id="a221d-391">The task that represents the asynchronous <see langword="Flush" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-392">這是非同步版本<xref:System.Xml.XmlWriter.Flush%2A>，使用相同的功能。</span><span class="sxs-lookup"><span data-stu-id="a221d-392">This is the asynchronous version of <xref:System.Xml.XmlWriter.Flush%2A>, with the same functionality.</span></span> <span data-ttu-id="a221d-393">若要使用此方法，您必須設定<xref:System.Xml.XmlWriterSettings.Async%2A>旗標設為`true`。</span><span class="sxs-lookup"><span data-stu-id="a221d-393">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-394">在未將 <see cref="P:System.Xml.XmlWriterSettings.Async" /> 旗標設為 <see langword="true" />的情況下呼叫了 <see cref="T:System.Xml.XmlWriter" /> 非同步方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-394">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="a221d-395">在此情況下，就會擲回 <see cref="T:System.InvalidOperationException" /> 並顯示訊息「如果您要使用非同步方法，請將 XmlWriterSettings.Async 設為 true」。</span><span class="sxs-lookup"><span data-stu-id="a221d-395">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LookupPrefix">
      <MemberSignature Language="C#" Value="public abstract string LookupPrefix (string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string LookupPrefix(string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.LookupPrefix(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function LookupPrefix (ns As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ LookupPrefix(System::String ^ ns);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ns"><span data-ttu-id="a221d-396">您要尋找其前置詞的命名空間 URI。</span><span class="sxs-lookup"><span data-stu-id="a221d-396">The namespace URI whose prefix you want to find.</span></span></param>
        <summary><span data-ttu-id="a221d-397">在衍生類別中覆寫時，傳回最接近命名空間 URI 在目前命名空間範圍中定義的前置詞。</span><span class="sxs-lookup"><span data-stu-id="a221d-397">When overridden in a derived class, returns the closest prefix defined in the current namespace scope for the namespace URI.</span></span></summary>
        <returns><span data-ttu-id="a221d-398">命名空間前置詞；如果在目前範圍中找不到符合的命名空間 URI，則為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a221d-398">The matching prefix or <see langword="null" /> if no matching namespace URI is found in the current scope.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a221d-399">下列範例會寫出活頁簿。</span><span class="sxs-lookup"><span data-stu-id="a221d-399">The following example writes out a book.</span></span>  
  
 [!code-cpp[XmlWriter.WriteElementString#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.WriteElementString/CPP/writeelemstring_v2.cpp#1)]
 [!code-csharp[XmlWriter.WriteElementString#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteElementString/CS/writeelemstring_v2.cs#1)]
 [!code-vb[XmlWriter.WriteElementString#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteElementString/VB/writeelemstring_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a221d-400"><paramref name="ns" /> 為 <see langword="null" /> 或 <see langword="String.Empty" />。</span><span class="sxs-lookup"><span data-stu-id="a221d-400"><paramref name="ns" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-401">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-401">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="a221d-402">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span><span class="sxs-lookup"><span data-stu-id="a221d-402">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Settings">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlWriterSettings Settings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlWriterSettings Settings" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriter.Settings" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Settings As XmlWriterSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlWriterSettings ^ Settings { System::Xml::XmlWriterSettings ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriterSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a221d-403">取得 <see cref="T:System.Xml.XmlWriterSettings" /> 物件，用於建立這個 <see cref="T:System.Xml.XmlWriter" /> 執行個體。</span><span class="sxs-lookup"><span data-stu-id="a221d-403">Gets the <see cref="T:System.Xml.XmlWriterSettings" /> object used to create this <see cref="T:System.Xml.XmlWriter" /> instance.</span></span></summary>
        <value><span data-ttu-id="a221d-404">用於建立這個寫入器執行個體的 <see cref="T:System.Xml.XmlWriterSettings" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="a221d-404">The <see cref="T:System.Xml.XmlWriterSettings" /> object used to create this writer instance.</span></span> <span data-ttu-id="a221d-405">如果未使用 <see cref="Overload:System.Xml.XmlWriter.Create" /> 方法建立這個寫入器，則這個屬性會傳回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a221d-405">If this writer was not created using the <see cref="Overload:System.Xml.XmlWriter.Create" /> method, this property returns <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-406"><xref:System.Xml.XmlWriterSettings>類別用來指定要建立的寫入器執行個體上支援的功能集。</span><span class="sxs-lookup"><span data-stu-id="a221d-406">The <xref:System.Xml.XmlWriterSettings> class is used to specify the set of features to support on the created writer instance.</span></span> <span data-ttu-id="a221d-407"><xref:System.Xml.XmlWriterSettings>所傳回物件<xref:System.Xml.XmlWriter.Settings%2A>無法修改屬性。</span><span class="sxs-lookup"><span data-stu-id="a221d-407">The <xref:System.Xml.XmlWriterSettings> object returned by the <xref:System.Xml.XmlWriter.Settings%2A> property cannot be modified.</span></span> <span data-ttu-id="a221d-408">任何嘗試變更個別的設定會造成擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="a221d-408">Any attempt to change individual settings results in an exception being thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-409">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-409">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="a221d-410">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span><span class="sxs-lookup"><span data-stu-id="a221d-410">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAttributes">
      <MemberSignature Language="C#" Value="public virtual void WriteAttributes (System.Xml.XmlReader reader, bool defattr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAttributes(class System.Xml.XmlReader reader, bool defattr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteAttributes(System.Xml.XmlReader,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteAttributes (reader As XmlReader, defattr As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteAttributes(System::Xml::XmlReader ^ reader, bool defattr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="defattr" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="a221d-411">要複製屬性的 <see langword="XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="a221d-411">The <see langword="XmlReader" /> from which to copy the attributes.</span></span></param>
        <param name="defattr">
          <span data-ttu-id="a221d-412">若要從 <see langword="true" /> 複製預設屬性，則為 <see langword="XmlReader" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a221d-412"><see langword="true" /> to copy the default attributes from the <see langword="XmlReader" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="a221d-413">在衍生類別中覆寫時，寫出在 <see cref="T:System.Xml.XmlReader" /> 的目前位置找到的所有屬性。</span><span class="sxs-lookup"><span data-stu-id="a221d-413">When overridden in a derived class, writes out all the attributes found at the current position in the <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-414">如果讀取器位於`element`節點`WriteAttributes`複製所有包含的屬性。</span><span class="sxs-lookup"><span data-stu-id="a221d-414">If the reader is positioned on an `element` node `WriteAttributes` copies all the contained attributes.</span></span> <span data-ttu-id="a221d-415">如果讀取器位於`attribute` 節點，這個方法會寫入目前的屬性，則其餘屬性結尾標記的項目之前。</span><span class="sxs-lookup"><span data-stu-id="a221d-415">If the reader is positioned on an `attribute` node, this method writes the current attribute, then the rest of the attributes until the element closing tag.</span></span> <span data-ttu-id="a221d-416">如果讀取器位於`XmlDeclaration` 節點，這個方法會寫入所有屬性宣告中。</span><span class="sxs-lookup"><span data-stu-id="a221d-416">If the reader is positioned on an `XmlDeclaration` node, this method writes all the attributes in the declaration.</span></span> <span data-ttu-id="a221d-417">如果讀取器在任何其他節點類型，這個方法會擲回<xref:System.Xml.XmlException>。</span><span class="sxs-lookup"><span data-stu-id="a221d-417">If the reader is positioned on any other node type this method throws an <xref:System.Xml.XmlException>.</span></span>  
  
 <span data-ttu-id="a221d-418">如果這個方法會呼叫使用<xref:System.Xml.XmlValidatingReader>，以確保寫入時，會取代任何內容 （已展開的實體），可能會導致無效的文件格式正確的 XML。</span><span class="sxs-lookup"><span data-stu-id="a221d-418">If this method is called using <xref:System.Xml.XmlValidatingReader>, to ensure well-formed XML any content (which has been expanded from the entities) that could result in an invalid document is replaced when written.</span></span> <span data-ttu-id="a221d-419">例如，如果屬性包含`&gt;`已擴充，以確保正確格式的文件展開的實體 > 以寫出時，取代`&gt;`。</span><span class="sxs-lookup"><span data-stu-id="a221d-419">For example, if an attribute includes an `&gt;` entity that has been expanded, to ensure a well-formed document the expanded > is replaced when written out with `&gt;`.</span></span>  
  
 <span data-ttu-id="a221d-420">這個方法的非同步版本，請參閱<xref:System.Xml.XmlWriter.WriteAttributesAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="a221d-420">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteAttributesAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a221d-421">下列範例將所有項目複製到輸出，將標記名稱變更為大寫，並將複製未變更的所有屬性。</span><span class="sxs-lookup"><span data-stu-id="a221d-421">The following example copies all the elements to the output, changes the tag names to upper case, and copies all the attributes unchanged.</span></span>  
  
 [!code-cpp[XmlWriter.WriteAttributes#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.WriteAttributes/CPP/writeattrs_v2.cpp#1)]
 [!code-csharp[XmlWriter.WriteAttributes#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteAttributes/CS/writeattrs_v2.cs#1)]
 [!code-vb[XmlWriter.WriteAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteAttributes/VB/writeattrs_v2.vb#1)]  
  
 <span data-ttu-id="a221d-422">此範例會使用該檔案，`test1.xml`作為輸入。</span><span class="sxs-lookup"><span data-stu-id="a221d-422">The example uses the file, `test1.xml`, as input.</span></span>  
  
 [!code-xml[XmlWriter.WriteAttributes#2](~/samples/snippets/xml/VS_Snippets_Data/XmlWriter.WriteAttributes/XML/test1.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a221d-423"><paramref name="reader" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a221d-423"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="a221d-424">讀取器不在 <see langword="element" />、<see langword="attribute" /> 或 <see langword="XmlDeclaration" /> 節點上。</span><span class="sxs-lookup"><span data-stu-id="a221d-424">The reader is not positioned on an <see langword="element" />, <see langword="attribute" /> or <see langword="XmlDeclaration" /> node.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-425">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-425">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="a221d-426">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span><span class="sxs-lookup"><span data-stu-id="a221d-426">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAttributesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteAttributesAsync (System.Xml.XmlReader reader, bool defattr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteAttributesAsync(class System.Xml.XmlReader reader, bool defattr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteAttributesAsync(System.Xml.XmlReader,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteAttributesAsync (reader As XmlReader, defattr As Boolean) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteAttributesAsync(System::Xml::XmlReader ^ reader, bool defattr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.Xml.XmlWriter/&lt;WriteAttributesAsync&gt;c__async2))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="defattr" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="a221d-427">要複製屬性的 <see langword="XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="a221d-427">The <see langword="XmlReader" /> from which to copy the attributes.</span></span></param>
        <param name="defattr">
          <span data-ttu-id="a221d-428">若要從 <see langword="true" /> 複製預設屬性，則為 <see langword="XmlReader" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a221d-428"><see langword="true" /> to copy the default attributes from the <see langword="XmlReader" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="a221d-429">非同步寫出在 <see cref="T:System.Xml.XmlReader" /> 中的目前位置找到的所有屬性。</span><span class="sxs-lookup"><span data-stu-id="a221d-429">Asynchronously writes out all the attributes found at the current position in the <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <returns><span data-ttu-id="a221d-430">表示非同步 <see langword="WriteAttributes" /> 作業的工作。</span><span class="sxs-lookup"><span data-stu-id="a221d-430">The task that represents the asynchronous <see langword="WriteAttributes" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-431">這是非同步版本<xref:System.Xml.XmlWriter.WriteAttributes%2A>，使用相同的功能。</span><span class="sxs-lookup"><span data-stu-id="a221d-431">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteAttributes%2A>, with the same functionality.</span></span> <span data-ttu-id="a221d-432">若要使用此方法，您必須設定<xref:System.Xml.XmlWriterSettings.Async%2A>旗標設為`true`。</span><span class="sxs-lookup"><span data-stu-id="a221d-432">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-433">在未將 <see cref="P:System.Xml.XmlWriterSettings.Async" /> 旗標設為 <see langword="true" />的情況下呼叫了 <see cref="T:System.Xml.XmlWriter" /> 非同步方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-433">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="a221d-434">在此情況下，就會擲回 <see cref="T:System.InvalidOperationException" /> 並顯示訊息「如果您要使用非同步方法，請將 XmlWriterSettings.Async 設為 true」。</span><span class="sxs-lookup"><span data-stu-id="a221d-434">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteAttributeString">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-435">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-435">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="a221d-436">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span><span class="sxs-lookup"><span data-stu-id="a221d-436">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <summary><span data-ttu-id="a221d-437">在衍生類別中覆寫時，寫入具有指定值的屬性。</span><span class="sxs-lookup"><span data-stu-id="a221d-437">When overridden in a derived class, writes an attribute with the specified value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-438">這個方法的非同步版本，請參閱<xref:System.Xml.XmlWriter.WriteElementStringAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="a221d-438">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteElementStringAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteAttributeString">
      <MemberSignature Language="C#" Value="public void WriteAttributeString (string localName, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteAttributeString(string localName, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteAttributeString (localName As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteAttributeString(System::String ^ localName, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="a221d-439">屬性的本機名稱。</span><span class="sxs-lookup"><span data-stu-id="a221d-439">The local name of the attribute.</span></span></param>
        <param name="value"><span data-ttu-id="a221d-440">屬性的值。</span><span class="sxs-lookup"><span data-stu-id="a221d-440">The value of the attribute.</span></span></param>
        <summary><span data-ttu-id="a221d-441">在衍生類別中覆寫時，寫出具有指定的區域名稱與數值的屬性。</span><span class="sxs-lookup"><span data-stu-id="a221d-441">When overridden in a derived class, writes out the attribute with the specified local name and value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-442">`WriteAttributeString` 會執行下列動作：</span><span class="sxs-lookup"><span data-stu-id="a221d-442">`WriteAttributeString` does the following:</span></span>  
  
-   <span data-ttu-id="a221d-443">如果屬性值包含雙引號或單一引號，取代了它們`&quot;`和`&apos;`分別。</span><span class="sxs-lookup"><span data-stu-id="a221d-443">If the attribute value includes double or single quotes, they are replaced with `&quot;` and `&apos;` respectively.</span></span>  
  
-   <span data-ttu-id="a221d-444">如果撰寫`xml:space`屬性寫入器會驗證屬性值是否有效。</span><span class="sxs-lookup"><span data-stu-id="a221d-444">If writing an `xml:space` attribute, the writer verifies the attribute value is valid.</span></span> <span data-ttu-id="a221d-445">(有效值為`preserve`或`default`。)</span><span class="sxs-lookup"><span data-stu-id="a221d-445">(Valid values are `preserve` or `default`.)</span></span>  
  
-   <span data-ttu-id="a221d-446">如果撰寫`xml:lang`屬性寫入器不會驗證屬性值是根據 W3C XML 1.0 recommendation 有效。</span><span class="sxs-lookup"><span data-stu-id="a221d-446">If writing an `xml:lang` attribute, the writer does not verify that the attribute value is valid according to the W3C XML 1.0 recommendation.</span></span>  
  
 <span data-ttu-id="a221d-447">這個方法的非同步版本，請參閱<xref:System.Xml.XmlWriter.WriteAttributeStringAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="a221d-447">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteAttributeStringAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a221d-448">下列範例會寫出活頁簿。</span><span class="sxs-lookup"><span data-stu-id="a221d-448">The following example writes out a book.</span></span>  
  
 [!code-cpp[XmlWriter.WriteElementString#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.WriteElementString/CPP/writeelemstring_v2.cpp#1)]
 [!code-csharp[XmlWriter.WriteElementString#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteElementString/CS/writeelemstring_v2.cs#1)]
 [!code-vb[XmlWriter.WriteElementString#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteElementString/VB/writeelemstring_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-449">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-449">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="a221d-450">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span><span class="sxs-lookup"><span data-stu-id="a221d-450">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a221d-451"><see langword="xml:space" /> 或 <see langword="xml:lang" /> 屬性值無效。</span><span class="sxs-lookup"><span data-stu-id="a221d-451">The <see langword="xml:space" /> or <see langword="xml:lang" /> attribute value is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAttributeString">
      <MemberSignature Language="C#" Value="public void WriteAttributeString (string localName, string ns, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteAttributeString(string localName, string ns, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteAttributeString (localName As String, ns As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteAttributeString(System::String ^ localName, System::String ^ ns, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="a221d-452">屬性的本機名稱。</span><span class="sxs-lookup"><span data-stu-id="a221d-452">The local name of the attribute.</span></span></param>
        <param name="ns"><span data-ttu-id="a221d-453">與屬性相關聯的命名空間 URI。</span><span class="sxs-lookup"><span data-stu-id="a221d-453">The namespace URI to associate with the attribute.</span></span></param>
        <param name="value"><span data-ttu-id="a221d-454">屬性的值。</span><span class="sxs-lookup"><span data-stu-id="a221d-454">The value of the attribute.</span></span></param>
        <summary><span data-ttu-id="a221d-455">在衍生類別中覆寫時，寫入具有指定區域名稱、命名空間 URI 和值的屬性。</span><span class="sxs-lookup"><span data-stu-id="a221d-455">When overridden in a derived class, writes an attribute with the specified local name, namespace URI, and value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-456">這個方法會寫出具有使用者定義的命名空間前置詞的屬性，並將它與指定的命名空間產生關聯。</span><span class="sxs-lookup"><span data-stu-id="a221d-456">This method writes out the attribute with a user defined namespace prefix and associates it with the given namespace.</span></span> <span data-ttu-id="a221d-457">如果`localName`"xmlns"，則這個方法也會將此視為命名空間宣告。</span><span class="sxs-lookup"><span data-stu-id="a221d-457">If `localName` is "xmlns" then this method also treats this as a namespace declaration.</span></span> <span data-ttu-id="a221d-458">在此情況下，`ns`引數可以是`null`。</span><span class="sxs-lookup"><span data-stu-id="a221d-458">In this case, the `ns` argument can be `null`.</span></span>  
  
 <span data-ttu-id="a221d-459">`WriteAttributeString` 會執行下列動作：</span><span class="sxs-lookup"><span data-stu-id="a221d-459">`WriteAttributeString` does the following:</span></span>  
  
-   <span data-ttu-id="a221d-460">如果屬性值包含雙引號或單一引號，取代了它們`&quot;`和`&apos;`分別。</span><span class="sxs-lookup"><span data-stu-id="a221d-460">If the attribute value includes double or single quotes, they are replaced with `&quot;` and `&apos;` respectively.</span></span>  
  
-   <span data-ttu-id="a221d-461">如果撰寫`xml:space`屬性寫入器會驗證屬性值是否有效。</span><span class="sxs-lookup"><span data-stu-id="a221d-461">If writing an `xml:space` attribute, the writer verifies the attribute value is valid.</span></span> <span data-ttu-id="a221d-462">(有效值為`preserve`或`default`。)</span><span class="sxs-lookup"><span data-stu-id="a221d-462">(Valid values are `preserve` or `default`.)</span></span>  
  
-   <span data-ttu-id="a221d-463">如果撰寫`xml:lang`屬性寫入器不會驗證屬性值是根據 W3C XML 1.0 recommendation 有效。</span><span class="sxs-lookup"><span data-stu-id="a221d-463">If writing an `xml:lang` attribute, the writer does not verify that the attribute value is valid according to the W3C XML 1.0 recommendation.</span></span>  
  
 <span data-ttu-id="a221d-464">這個方法的非同步版本，請參閱<xref:System.Xml.XmlWriter.WriteAttributeStringAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="a221d-464">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteAttributeStringAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a221d-465">下列範例會使用<xref:System.Xml.XmlWriter.WriteAttributeString%2A>方法寫入命名空間宣告。</span><span class="sxs-lookup"><span data-stu-id="a221d-465">The following example uses the <xref:System.Xml.XmlWriter.WriteAttributeString%2A> method to write a namespace declaration.</span></span>  
  
 [!code-cpp[XmlWriter.WriteAttributeString#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.WriteAttributeString/CPP/writeattrstring.cpp#1)]
 [!code-csharp[XmlWriter.WriteAttributeString#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteAttributeString/CS/writeattrstring.cs#1)]
 [!code-vb[XmlWriter.WriteAttributeString#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteAttributeString/VB/writeattrstring.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-466">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-466">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="a221d-467">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span><span class="sxs-lookup"><span data-stu-id="a221d-467">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a221d-468"><see langword="xml:space" /> 或 <see langword="xml:lang" /> 屬性值無效。</span><span class="sxs-lookup"><span data-stu-id="a221d-468">The <see langword="xml:space" /> or <see langword="xml:lang" /> attribute value is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAttributeString">
      <MemberSignature Language="C#" Value="public void WriteAttributeString (string prefix, string localName, string ns, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteAttributeString(string prefix, string localName, string ns, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteAttributeString (prefix As String, localName As String, ns As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteAttributeString(System::String ^ prefix, System::String ^ localName, System::String ^ ns, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="a221d-469">屬性的命名空間前置詞。</span><span class="sxs-lookup"><span data-stu-id="a221d-469">The namespace prefix of the attribute.</span></span></param>
        <param name="localName"><span data-ttu-id="a221d-470">屬性的本機名稱。</span><span class="sxs-lookup"><span data-stu-id="a221d-470">The local name of the attribute.</span></span></param>
        <param name="ns"><span data-ttu-id="a221d-471">屬性的命名空間 URI。</span><span class="sxs-lookup"><span data-stu-id="a221d-471">The namespace URI of the attribute.</span></span></param>
        <param name="value"><span data-ttu-id="a221d-472">屬性的值。</span><span class="sxs-lookup"><span data-stu-id="a221d-472">The value of the attribute.</span></span></param>
        <summary><span data-ttu-id="a221d-473">在衍生類別中覆寫時，寫出具有指定的前置詞、區域名稱、命名空間 URI 及其值的屬性。</span><span class="sxs-lookup"><span data-stu-id="a221d-473">When overridden in a derived class, writes out the attribute with the specified prefix, local name, namespace URI, and value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-474">這個方法會寫出具有使用者定義的命名空間前置詞的屬性，並將它與指定的命名空間產生關聯。</span><span class="sxs-lookup"><span data-stu-id="a221d-474">This method writes out the attribute with a user defined namespace prefix and associates it with the given namespace.</span></span> <span data-ttu-id="a221d-475">如果前置詞"xmlns"這個方法也會將它視為命名空間宣告，並將宣告的前置詞與 URI 中指定的屬性值所提供的命名空間產生關聯。</span><span class="sxs-lookup"><span data-stu-id="a221d-475">If the prefix is "xmlns" then this method also treats this as a namespace declaration and associates the declared prefix with the namespace URI provided in the given attribute value.</span></span> <span data-ttu-id="a221d-476">在此情況下`ns`引數可以是`null`。</span><span class="sxs-lookup"><span data-stu-id="a221d-476">In this case the `ns` argument can be `null`.</span></span>  
  
 <span data-ttu-id="a221d-477">`WriteAttributeString` 會執行下列動作：</span><span class="sxs-lookup"><span data-stu-id="a221d-477">`WriteAttributeString` does the following:</span></span>  
  
-   <span data-ttu-id="a221d-478">如果屬性值包含雙引號或單一引號，取代了它們`&quot;`和`&apos;`分別。</span><span class="sxs-lookup"><span data-stu-id="a221d-478">If the attribute value includes double or single quotes, they are replaced with `&quot;` and `&apos;` respectively.</span></span>  
  
-   <span data-ttu-id="a221d-479">如果撰寫`xml:space`屬性寫入器會驗證屬性值是否有效。</span><span class="sxs-lookup"><span data-stu-id="a221d-479">If writing an `xml:space` attribute, the writer verifies the attribute value is valid.</span></span> <span data-ttu-id="a221d-480">(有效值為`preserve`或`default`。)</span><span class="sxs-lookup"><span data-stu-id="a221d-480">(Valid values are `preserve` or `default`.)</span></span>  
  
-   <span data-ttu-id="a221d-481">如果撰寫`xml:lang`屬性寫入器不會驗證屬性值是根據 W3C XML 1.0 recommendation 有效。</span><span class="sxs-lookup"><span data-stu-id="a221d-481">If writing an `xml:lang` attribute, the writer does not verify that the attribute value is valid according to the W3C XML 1.0 recommendation.</span></span>  
  
 <span data-ttu-id="a221d-482">這個方法的非同步版本，請參閱<xref:System.Xml.XmlWriter.WriteAttributeStringAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="a221d-482">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteAttributeStringAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a221d-483">下列範例會使用<xref:System.Xml.XmlWriter.WriteAttributeString%2A>方法寫入命名空間宣告。</span><span class="sxs-lookup"><span data-stu-id="a221d-483">The following example uses the <xref:System.Xml.XmlWriter.WriteAttributeString%2A> method to write a namespace declaration.</span></span>  
  
 [!code-cpp[XmlWriter.WriteAttributeString#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.WriteAttributeString/CPP/writeattrstring.cpp#1)]
 [!code-csharp[XmlWriter.WriteAttributeString#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteAttributeString/CS/writeattrstring.cs#1)]
 [!code-vb[XmlWriter.WriteAttributeString#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteAttributeString/VB/writeattrstring.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-484">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-484">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="a221d-485">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span><span class="sxs-lookup"><span data-stu-id="a221d-485">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a221d-486"><see langword="xml:space" /> 或 <see langword="xml:lang" /> 屬性值無效。</span><span class="sxs-lookup"><span data-stu-id="a221d-486">The <see langword="xml:space" /> or <see langword="xml:lang" /> attribute value is invalid.</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="a221d-487"><paramref name="localName" /> 或 <paramref name="ns" /> 為 <see langword="null" /> </span><span class="sxs-lookup"><span data-stu-id="a221d-487">The <paramref name="localName" /> or <paramref name="ns" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAttributeStringAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WriteAttributeStringAsync (string prefix, string localName, string ns, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WriteAttributeStringAsync(string prefix, string localName, string ns, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteAttributeStringAsync(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteAttributeStringAsync (prefix As String, localName As String, ns As String, value As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ WriteAttributeStringAsync(System::String ^ prefix, System::String ^ localName, System::String ^ ns, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="a221d-488">屬性的命名空間前置詞。</span><span class="sxs-lookup"><span data-stu-id="a221d-488">The namespace prefix of the attribute.</span></span></param>
        <param name="localName"><span data-ttu-id="a221d-489">屬性的本機名稱。</span><span class="sxs-lookup"><span data-stu-id="a221d-489">The local name of the attribute.</span></span></param>
        <param name="ns"><span data-ttu-id="a221d-490">屬性的命名空間 URI。</span><span class="sxs-lookup"><span data-stu-id="a221d-490">The namespace URI of the attribute.</span></span></param>
        <param name="value"><span data-ttu-id="a221d-491">屬性的值。</span><span class="sxs-lookup"><span data-stu-id="a221d-491">The value of the attribute.</span></span></param>
        <summary><span data-ttu-id="a221d-492">以非同步的方式寫出具有指定之前置詞、區域名稱、命名空間 URI 和值的屬性。</span><span class="sxs-lookup"><span data-stu-id="a221d-492">Asynchronously writes out the attribute with the specified prefix, local name, namespace URI, and value.</span></span></summary>
        <returns><span data-ttu-id="a221d-493">表示非同步 <see langword="WriteAttributeString" /> 作業的工作。</span><span class="sxs-lookup"><span data-stu-id="a221d-493">The task that represents the asynchronous <see langword="WriteAttributeString" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-494">這是非同步版本<xref:System.Xml.XmlWriter.WriteAttributeString%2A>，使用相同的功能。</span><span class="sxs-lookup"><span data-stu-id="a221d-494">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteAttributeString%2A>, with the same functionality.</span></span> <span data-ttu-id="a221d-495">若要使用此方法，您必須設定<xref:System.Xml.XmlWriterSettings.Async%2A>旗標設為`true`。</span><span class="sxs-lookup"><span data-stu-id="a221d-495">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-496">在未將 <see cref="P:System.Xml.XmlWriterSettings.Async" /> 旗標設為 <see langword="true" />的情況下呼叫了 <see cref="T:System.Xml.XmlWriter" /> 非同步方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-496">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="a221d-497">在此情況下，就會擲回 <see cref="T:System.InvalidOperationException" /> 並顯示訊息「如果您要使用非同步方法，請將 XmlWriterSettings.Async 設為 true」。</span><span class="sxs-lookup"><span data-stu-id="a221d-497">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBase64">
      <MemberSignature Language="C#" Value="public abstract void WriteBase64 (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteBase64(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteBase64 (buffer As Byte(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteBase64(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="a221d-498">要編碼的位元組陣列。</span><span class="sxs-lookup"><span data-stu-id="a221d-498">Byte array to encode.</span></span></param>
        <param name="index"><span data-ttu-id="a221d-499">緩衝區中的位置指示要寫入的位元組開頭。</span><span class="sxs-lookup"><span data-stu-id="a221d-499">The position in the buffer indicating the start of the bytes to write.</span></span></param>
        <param name="count"><span data-ttu-id="a221d-500">要寫入的位元組數。</span><span class="sxs-lookup"><span data-stu-id="a221d-500">The number of bytes to write.</span></span></param>
        <summary><span data-ttu-id="a221d-501">在衍生類別中覆寫時，以 Base64 格式編碼指定的二進位位元組，並寫出產生的文字。</span><span class="sxs-lookup"><span data-stu-id="a221d-501">When overridden in a derived class, encodes the specified binary bytes as Base64 and writes out the resulting text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-502">例如，位元組緩衝區可能包含 GIF 影像的二進位內容。</span><span class="sxs-lookup"><span data-stu-id="a221d-502">For example, the byte buffer may contain the binary contents of a GIF image.</span></span> <span data-ttu-id="a221d-503">這顯然不是有效的 XML。</span><span class="sxs-lookup"><span data-stu-id="a221d-503">This clearly would not be valid XML.</span></span> <span data-ttu-id="a221d-504">`Base64`編碼方式設計來代表任意位元組序列組成 65 US-ASCII 字元以文字形式 ([A-a-za-z0-9 + =])，每個字元都會編碼的二進位資料的 6 位元。</span><span class="sxs-lookup"><span data-stu-id="a221d-504">The `Base64` encoding is designed to represent arbitrary byte sequences in a text form comprised of the 65 US-ASCII characters ([A-Za-z0-9+/=]) where each character encodes 6 bits of the binary data.</span></span> <span data-ttu-id="a221d-505">如需詳細資訊，請參閱要求建議 (RFC) 位於 1521年[註解的網站要求](https://www.rfc-editor.org)。</span><span class="sxs-lookup"><span data-stu-id="a221d-505">For more information, see Requests for Comments (RFC) 1521 located on the [Request for Comments Web site](https://www.rfc-editor.org).</span></span>  
  
 <span data-ttu-id="a221d-506">這個方法的非同步版本，請參閱<xref:System.Xml.XmlWriter.WriteBase64Async%2A>。</span><span class="sxs-lookup"><span data-stu-id="a221d-506">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteBase64Async%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a221d-507">下列範例會使用<xref:System.Xml.XmlWriter.WriteBase64%2A>方法寫入`Base64`資料。</span><span class="sxs-lookup"><span data-stu-id="a221d-507">The following example uses the <xref:System.Xml.XmlWriter.WriteBase64%2A> method to write `Base64` data.</span></span> <span data-ttu-id="a221d-508">`Base64`資料內嵌於`<image>`項目。</span><span class="sxs-lookup"><span data-stu-id="a221d-508">The `Base64` data is embedded within an `<image>` element.</span></span>  
  
 [!code-csharp[XmlReader_Read_Write_Binary#3](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader_Read_Write_Binary/CS/readBinary.cs#3)]
 [!code-vb[XmlReader_Read_Write_Binary#3](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader_Read_Write_Binary/VB/readBinary.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a221d-509"><paramref name="buffer" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a221d-509"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a221d-510"><paramref name="index" /> 或 <paramref name="count" /> 小於零。</span><span class="sxs-lookup"><span data-stu-id="a221d-510"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
 <span data-ttu-id="a221d-511">-或-</span><span class="sxs-lookup"><span data-stu-id="a221d-511">-or-</span></span>  
  
 <span data-ttu-id="a221d-512">緩衝區長度減去 <paramref name="index" /> 小於 <paramref name="count" />。</span><span class="sxs-lookup"><span data-stu-id="a221d-512">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-513">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-513">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="a221d-514">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span><span class="sxs-lookup"><span data-stu-id="a221d-514">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBase64Async">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteBase64Async (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteBase64Async(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteBase64Async(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteBase64Async (buffer As Byte(), index As Integer, count As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteBase64Async(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="a221d-515">要編碼的位元組陣列。</span><span class="sxs-lookup"><span data-stu-id="a221d-515">Byte array to encode.</span></span></param>
        <param name="index"><span data-ttu-id="a221d-516">緩衝區中的位置指示要寫入的位元組開頭。</span><span class="sxs-lookup"><span data-stu-id="a221d-516">The position in the buffer indicating the start of the bytes to write.</span></span></param>
        <param name="count"><span data-ttu-id="a221d-517">要寫入的位元組數。</span><span class="sxs-lookup"><span data-stu-id="a221d-517">The number of bytes to write.</span></span></param>
        <summary><span data-ttu-id="a221d-518">以非同步的方式將指定的二進位位元組編碼為 base64 並寫出產生的文字。</span><span class="sxs-lookup"><span data-stu-id="a221d-518">Asynchronously encodes the specified binary bytes as Base64 and writes out the resulting text.</span></span></summary>
        <returns><span data-ttu-id="a221d-519">表示非同步 <see langword="WriteBase64" /> 作業的工作。</span><span class="sxs-lookup"><span data-stu-id="a221d-519">The task that represents the asynchronous <see langword="WriteBase64" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-520">這是非同步版本<xref:System.Xml.XmlWriter.WriteBase64%2A>，使用相同的功能。</span><span class="sxs-lookup"><span data-stu-id="a221d-520">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteBase64%2A>, with the same functionality.</span></span> <span data-ttu-id="a221d-521">若要使用此方法，您必須設定<xref:System.Xml.XmlWriterSettings.Async%2A>旗標設為`true`。</span><span class="sxs-lookup"><span data-stu-id="a221d-521">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-522">在未將 <see cref="P:System.Xml.XmlWriterSettings.Async" /> 旗標設為 <see langword="true" />的情況下呼叫了 <see cref="T:System.Xml.XmlWriter" /> 非同步方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-522">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="a221d-523">在此情況下，就會擲回 <see cref="T:System.InvalidOperationException" /> 並顯示訊息「如果您要使用非同步方法，請將 XmlWriterSettings.Async 設為 true」。</span><span class="sxs-lookup"><span data-stu-id="a221d-523">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBinHex">
      <MemberSignature Language="C#" Value="public virtual void WriteBinHex (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteBinHex(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteBinHex (buffer As Byte(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteBinHex(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="a221d-524">要編碼的位元組陣列。</span><span class="sxs-lookup"><span data-stu-id="a221d-524">Byte array to encode.</span></span></param>
        <param name="index"><span data-ttu-id="a221d-525">緩衝區中的位置指示要寫入的位元組開頭。</span><span class="sxs-lookup"><span data-stu-id="a221d-525">The position in the buffer indicating the start of the bytes to write.</span></span></param>
        <param name="count"><span data-ttu-id="a221d-526">要寫入的位元組數。</span><span class="sxs-lookup"><span data-stu-id="a221d-526">The number of bytes to write.</span></span></param>
        <summary><span data-ttu-id="a221d-527">在衍生類別中覆寫時，以 <see langword="BinHex" /> 格式編碼指定的二進位位元組，並寫出產生的文字。</span><span class="sxs-lookup"><span data-stu-id="a221d-527">When overridden in a derived class, encodes the specified binary bytes as <see langword="BinHex" /> and writes out the resulting text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-528">這個方法的非同步版本，請參閱<xref:System.Xml.XmlWriter.WriteBinHexAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="a221d-528">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteBinHexAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a221d-529">下列範例會使用<xref:System.Xml.XmlWriter.WriteBinHex%2A>方法寫入`BinHex`資料。</span><span class="sxs-lookup"><span data-stu-id="a221d-529">The following example uses the <xref:System.Xml.XmlWriter.WriteBinHex%2A> method to write `BinHex` data.</span></span> <span data-ttu-id="a221d-530">`BinHex`資料內嵌於`<image>`項目。</span><span class="sxs-lookup"><span data-stu-id="a221d-530">The `BinHex` data is embedded within an `<image>` element.</span></span>  
  
 [!code-csharp[XmlReader_Read_Write_Binary#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader_Read_Write_Binary/CS/readBinary.cs#1)]
 [!code-vb[XmlReader_Read_Write_Binary#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader_Read_Write_Binary/VB/readBinary.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a221d-531"><paramref name="buffer" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a221d-531"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-532">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-532">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="a221d-533">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span><span class="sxs-lookup"><span data-stu-id="a221d-533">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a221d-534"><paramref name="index" /> 或 <paramref name="count" /> 小於零。</span><span class="sxs-lookup"><span data-stu-id="a221d-534"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
 <span data-ttu-id="a221d-535">-或-</span><span class="sxs-lookup"><span data-stu-id="a221d-535">-or-</span></span>  
  
 <span data-ttu-id="a221d-536">緩衝區長度減去 <paramref name="index" /> 小於 <paramref name="count" />。</span><span class="sxs-lookup"><span data-stu-id="a221d-536">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBinHexAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteBinHexAsync (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteBinHexAsync(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteBinHexAsync(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteBinHexAsync (buffer As Byte(), index As Integer, count As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteBinHexAsync(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="a221d-537">要編碼的位元組陣列。</span><span class="sxs-lookup"><span data-stu-id="a221d-537">Byte array to encode.</span></span></param>
        <param name="index"><span data-ttu-id="a221d-538">緩衝區中的位置指示要寫入的位元組開頭。</span><span class="sxs-lookup"><span data-stu-id="a221d-538">The position in the buffer indicating the start of the bytes to write.</span></span></param>
        <param name="count"><span data-ttu-id="a221d-539">要寫入的位元組數。</span><span class="sxs-lookup"><span data-stu-id="a221d-539">The number of bytes to write.</span></span></param>
        <summary><span data-ttu-id="a221d-540">以非同步的方式將指定的二進位位元組編碼為 <see langword="BinHex" /> 並寫出產生的文字。</span><span class="sxs-lookup"><span data-stu-id="a221d-540">Asynchronously encodes the specified binary bytes as <see langword="BinHex" /> and writes out the resulting text.</span></span></summary>
        <returns><span data-ttu-id="a221d-541">表示非同步 <see langword="WriteBinHex" /> 作業的工作。</span><span class="sxs-lookup"><span data-stu-id="a221d-541">The task that represents the asynchronous <see langword="WriteBinHex" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-542">這是非同步版本<xref:System.Xml.XmlWriter.WriteBinHex%2A>，使用相同的功能。</span><span class="sxs-lookup"><span data-stu-id="a221d-542">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteBinHex%2A>, with the same functionality.</span></span> <span data-ttu-id="a221d-543">若要使用此方法，您必須設定<xref:System.Xml.XmlWriterSettings.Async%2A>旗標設為`true`。</span><span class="sxs-lookup"><span data-stu-id="a221d-543">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-544">在未將 <see cref="P:System.Xml.XmlWriterSettings.Async" /> 旗標設為 <see langword="true" />的情況下呼叫了 <see cref="T:System.Xml.XmlWriter" /> 非同步方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-544">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="a221d-545">在此情況下，就會擲回 <see cref="T:System.InvalidOperationException" /> 並顯示訊息「如果您要使用非同步方法，請將 XmlWriterSettings.Async 設為 true」。</span><span class="sxs-lookup"><span data-stu-id="a221d-545">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCData">
      <MemberSignature Language="C#" Value="public abstract void WriteCData (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteCData(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteCData(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteCData (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteCData(System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="a221d-546">要放在 CDATA 區塊中的文字。</span><span class="sxs-lookup"><span data-stu-id="a221d-546">The text to place inside the CDATA block.</span></span></param>
        <summary><span data-ttu-id="a221d-547">在衍生類別中覆寫時，寫出包含指定文字的 &lt;![CDATA[...]]&gt; 區塊。</span><span class="sxs-lookup"><span data-stu-id="a221d-547">When overridden in a derived class, writes out a &lt;![CDATA[...]]&gt; block containing the specified text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-548">如果`text`是`null`或`String.Empty`，這個方法會寫入一個空白的 CDATA 區塊，例如\<！ [CDATA []]] >< ！[CDATA [] >。</span><span class="sxs-lookup"><span data-stu-id="a221d-548">If `text` is either `null` or `String.Empty`, this method writes an empty CDATA block, for example \<![CDATA[]]]><![CDATA[]>.</span></span>  
  
 <span data-ttu-id="a221d-549">這個方法的非同步版本，請參閱<xref:System.Xml.XmlWriter.WriteCDataAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="a221d-549">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteCDataAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a221d-550">下列範例會將 XML 檔案代表活頁簿。</span><span class="sxs-lookup"><span data-stu-id="a221d-550">The following example writes an XML file representing a book.</span></span>  
  
 [!code-csharp[XmlWriter.WriteStartDocument#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteStartDocument/CS/writerbook_v2.cs#1)]
 [!code-vb[XmlWriter.WriteStartDocument#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteStartDocument/VB/writerbook_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a221d-551">此文字會導致非語式正確的 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="a221d-551">The text would result in a non-well formed XML document.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-552">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-552">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="a221d-553">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span><span class="sxs-lookup"><span data-stu-id="a221d-553">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCDataAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteCDataAsync (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteCDataAsync(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteCDataAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteCDataAsync (text As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteCDataAsync(System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="a221d-554">要放在 CDATA 區塊中的文字。</span><span class="sxs-lookup"><span data-stu-id="a221d-554">The text to place inside the CDATA block.</span></span></param>
        <summary><span data-ttu-id="a221d-555">以非同步的方式寫出包含指定文字的 &lt;![CDATA[...]]&gt; 區塊。</span><span class="sxs-lookup"><span data-stu-id="a221d-555">Asynchronously writes out a &lt;![CDATA[...]]&gt; block containing the specified text.</span></span></summary>
        <returns><span data-ttu-id="a221d-556">表示非同步 <see langword="WriteCData" /> 作業的工作。</span><span class="sxs-lookup"><span data-stu-id="a221d-556">The task that represents the asynchronous <see langword="WriteCData" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-557">這是非同步版本<xref:System.Xml.XmlWriter.WriteCData%2A>，使用相同的功能。</span><span class="sxs-lookup"><span data-stu-id="a221d-557">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteCData%2A>, with the same functionality.</span></span> <span data-ttu-id="a221d-558">若要使用此方法，您必須設定<xref:System.Xml.XmlWriterSettings.Async%2A>旗標設為`true`。</span><span class="sxs-lookup"><span data-stu-id="a221d-558">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-559">在未將 <see cref="P:System.Xml.XmlWriterSettings.Async" /> 旗標設為 <see langword="true" />的情況下呼叫了 <see cref="T:System.Xml.XmlWriter" /> 非同步方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-559">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="a221d-560">在此情況下，就會擲回 <see cref="T:System.InvalidOperationException" /> 並顯示訊息「如果您要使用非同步方法，請將 XmlWriterSettings.Async 設為 true」。</span><span class="sxs-lookup"><span data-stu-id="a221d-560">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCharEntity">
      <MemberSignature Language="C#" Value="public abstract void WriteCharEntity (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteCharEntity(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteCharEntity(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteCharEntity (ch As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteCharEntity(char ch);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch"><span data-ttu-id="a221d-561">要產生字元實體的 Unicode 字元。</span><span class="sxs-lookup"><span data-stu-id="a221d-561">The Unicode character for which to generate a character entity.</span></span></param>
        <summary><span data-ttu-id="a221d-562">在衍生類別中覆寫時，強制產生指定之 Unicode 字元值的字元實體。</span><span class="sxs-lookup"><span data-stu-id="a221d-562">When overridden in a derived class, forces the generation of a character entity for the specified Unicode character value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-563">這個方法會以十六進位字元實體參考格式寫入的 Unicode 字元。</span><span class="sxs-lookup"><span data-stu-id="a221d-563">This method writes the Unicode character in hexadecimal character entity reference format.</span></span>  
  
 <span data-ttu-id="a221d-564">這個方法的非同步版本，請參閱<xref:System.Xml.XmlWriter.WriteCharEntityAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="a221d-564">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteCharEntityAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a221d-565">請參閱<xref:System.Xml.XmlTextWriter.WriteCharEntity%2A?displayProperty=nameWithType>如需使用此方法的範例。</span><span class="sxs-lookup"><span data-stu-id="a221d-565">See <xref:System.Xml.XmlTextWriter.WriteCharEntity%2A?displayProperty=nameWithType> for an example using this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a221d-566">字元位在 Surrogate 字組字元範圍 <see langword="0xd800" /> - <see langword="0xdfff" /> 中。</span><span class="sxs-lookup"><span data-stu-id="a221d-566">The character is in the surrogate pair character range, <see langword="0xd800" /> - <see langword="0xdfff" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-567">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-567">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="a221d-568">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span><span class="sxs-lookup"><span data-stu-id="a221d-568">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCharEntityAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteCharEntityAsync (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteCharEntityAsync(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteCharEntityAsync(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteCharEntityAsync (ch As Char) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteCharEntityAsync(char ch);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch"><span data-ttu-id="a221d-569">要產生字元實體的 Unicode 字元。</span><span class="sxs-lookup"><span data-stu-id="a221d-569">The Unicode character for which to generate a character entity.</span></span></param>
        <summary><span data-ttu-id="a221d-570">以非同步的方式強制產生指定的 Unicode 字元值的字元實體。</span><span class="sxs-lookup"><span data-stu-id="a221d-570">Asynchronously forces the generation of a character entity for the specified Unicode character value.</span></span></summary>
        <returns><span data-ttu-id="a221d-571">表示非同步 <see langword="WriteCharEntity" /> 作業的工作。</span><span class="sxs-lookup"><span data-stu-id="a221d-571">The task that represents the asynchronous <see langword="WriteCharEntity" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-572">這是非同步版本<xref:System.Xml.XmlWriter.WriteCharEntity%2A>，使用相同的功能。</span><span class="sxs-lookup"><span data-stu-id="a221d-572">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteCharEntity%2A>, with the same functionality.</span></span> <span data-ttu-id="a221d-573">若要使用此方法，您必須設定<xref:System.Xml.XmlWriterSettings.Async%2A>旗標設為`true`。</span><span class="sxs-lookup"><span data-stu-id="a221d-573">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-574">在未將 <see cref="P:System.Xml.XmlWriterSettings.Async" /> 旗標設為 <see langword="true" />的情況下呼叫了 <see cref="T:System.Xml.XmlWriter" /> 非同步方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-574">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="a221d-575">在此情況下，就會擲回 <see cref="T:System.InvalidOperationException" /> 並顯示訊息「如果您要使用非同步方法，請將 XmlWriterSettings.Async 設為 true」。</span><span class="sxs-lookup"><span data-stu-id="a221d-575">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteChars">
      <MemberSignature Language="C#" Value="public abstract void WriteChars (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteChars(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteChars(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteChars (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteChars(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="a221d-576">包含要寫入之文字的字元陣列。</span><span class="sxs-lookup"><span data-stu-id="a221d-576">Character array containing the text to write.</span></span></param>
        <param name="index"><span data-ttu-id="a221d-577">緩衝區中的位置指示要寫入的文字開頭。</span><span class="sxs-lookup"><span data-stu-id="a221d-577">The position in the buffer indicating the start of the text to write.</span></span></param>
        <param name="count"><span data-ttu-id="a221d-578">要寫入的字元數。</span><span class="sxs-lookup"><span data-stu-id="a221d-578">The number of characters to write.</span></span></param>
        <summary><span data-ttu-id="a221d-579">在衍生類別中覆寫時，一次將文字寫入一個緩衝區。</span><span class="sxs-lookup"><span data-stu-id="a221d-579">When overridden in a derived class, writes text one buffer at a time.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-580">這個方法可以用來一次寫入大量的文字一個緩衝區。</span><span class="sxs-lookup"><span data-stu-id="a221d-580">This method can be used to write large amounts of text one buffer at a time.</span></span>  
  
 <span data-ttu-id="a221d-581">必須進行特殊處理，可確保`WriteChars`方法不會將 surrogate 字組字元分割跨多個緩衝區寫入。</span><span class="sxs-lookup"><span data-stu-id="a221d-581">Special handling must be done to ensure the `WriteChars` method does not split surrogate pair characters across multiple buffer writes.</span></span> <span data-ttu-id="a221d-582">XML 規格定義的 surrogate 字組的有效範圍。</span><span class="sxs-lookup"><span data-stu-id="a221d-582">The XML specification defines the valid ranges for surrogate pairs.</span></span>  
  
 <span data-ttu-id="a221d-583">這個方法的非同步版本，請參閱<xref:System.Xml.XmlWriter.WriteCharsAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="a221d-583">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteCharsAsync%2A>.</span></span>  
  
   
  
## Examples  
 [!code-csharp[XmlWriter.WriteChars#1](~/samples/snippets/csharp/VS_Snippets_Data/xmlwriter.writechars/cs/xmlwriterwritecharsexample.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a221d-584"><paramref name="buffer" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a221d-584"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a221d-585"><paramref name="index" /> 或 <paramref name="count" /> 小於零。</span><span class="sxs-lookup"><span data-stu-id="a221d-585"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
 <span data-ttu-id="a221d-586">-或-</span><span class="sxs-lookup"><span data-stu-id="a221d-586">-or-</span></span>  
  
 <span data-ttu-id="a221d-587">緩衝區長度減去 <paramref name="index" /> 小於 <paramref name="count" />；這個呼叫會導致 Surrogate 字組字元被分隔或寫入無效的 Surrogate 字組。</span><span class="sxs-lookup"><span data-stu-id="a221d-587">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />; the call results in surrogate pair characters being split or an invalid surrogate pair being written.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a221d-588"><paramref name="buffer" /> 參數值無效。</span><span class="sxs-lookup"><span data-stu-id="a221d-588">The <paramref name="buffer" /> parameter value is not valid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-589">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-589">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="a221d-590">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span><span class="sxs-lookup"><span data-stu-id="a221d-590">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCharsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteCharsAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteCharsAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteCharsAsync(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteCharsAsync (buffer As Char(), index As Integer, count As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteCharsAsync(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="a221d-591">包含要寫入之文字的字元陣列。</span><span class="sxs-lookup"><span data-stu-id="a221d-591">Character array containing the text to write.</span></span></param>
        <param name="index"><span data-ttu-id="a221d-592">緩衝區中的位置指示要寫入的文字開頭。</span><span class="sxs-lookup"><span data-stu-id="a221d-592">The position in the buffer indicating the start of the text to write.</span></span></param>
        <param name="count"><span data-ttu-id="a221d-593">要寫入的字元數。</span><span class="sxs-lookup"><span data-stu-id="a221d-593">The number of characters to write.</span></span></param>
        <summary><span data-ttu-id="a221d-594">以非同步的方式一次將文字寫入一個緩衝區。</span><span class="sxs-lookup"><span data-stu-id="a221d-594">Asynchronously writes text one buffer at a time.</span></span></summary>
        <returns><span data-ttu-id="a221d-595">表示非同步 <see langword="WriteChars" /> 作業的工作。</span><span class="sxs-lookup"><span data-stu-id="a221d-595">The task that represents the asynchronous <see langword="WriteChars" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-596">這是非同步版本<xref:System.Xml.XmlWriter.WriteChars%2A>，使用相同的功能。</span><span class="sxs-lookup"><span data-stu-id="a221d-596">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteChars%2A>, with the same functionality.</span></span> <span data-ttu-id="a221d-597">若要使用此方法，您必須設定<xref:System.Xml.XmlWriterSettings.Async%2A>旗標設為`true`。</span><span class="sxs-lookup"><span data-stu-id="a221d-597">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-598">在未將 <see cref="P:System.Xml.XmlWriterSettings.Async" /> 旗標設為 <see langword="true" />的情況下呼叫了 <see cref="T:System.Xml.XmlWriter" /> 非同步方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-598">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="a221d-599">在此情況下，就會擲回 <see cref="T:System.InvalidOperationException" /> 並顯示訊息「如果您要使用非同步方法，請將 XmlWriterSettings.Async 設為 true」。</span><span class="sxs-lookup"><span data-stu-id="a221d-599">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteComment">
      <MemberSignature Language="C#" Value="public abstract void WriteComment (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteComment(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteComment(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteComment (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteComment(System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="a221d-600">要放入註解中的文字。</span><span class="sxs-lookup"><span data-stu-id="a221d-600">Text to place inside the comment.</span></span></param>
        <summary><span data-ttu-id="a221d-601">在衍生類別中覆寫時，寫出包含指定文字的註解 &lt;!--...--&gt;。</span><span class="sxs-lookup"><span data-stu-id="a221d-601">When overridden in a derived class, writes out a comment &lt;!--...--&gt; containing the specified text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-602">如果`text`是`null`或`String.Empty`，這個方法會寫入註解沒有資料內容，例如\<！--->。</span><span class="sxs-lookup"><span data-stu-id="a221d-602">If `text` is either `null` or `String.Empty`, this method writes a comment with no data content, for example \<!---->.</span></span>  
  
 <span data-ttu-id="a221d-603">如果`text`包含無效的序列的兩個連字號"-"<xref:System.Xml.XmlWriter>可以是 throw <xref:System.ArgumentException> (<xref:System.Xml.XmlTextWriter>物件) 或連字號之間插入空格 [-] 以便文字是有效的 XML 註解 (<xref:System.Xml.XmlWriter>所建立的物件<xref:System.Xml.XmlWriter.Create%2A>方法)。</span><span class="sxs-lookup"><span data-stu-id="a221d-603">If `text` contains an invalid sequence of two dashes "--" the <xref:System.Xml.XmlWriter> can either throw an <xref:System.ArgumentException> (<xref:System.Xml.XmlTextWriter> objects) or insert a space between the dashes "- -" so that the text is a valid XML comment (<xref:System.Xml.XmlWriter> objects created by the <xref:System.Xml.XmlWriter.Create%2A> method).</span></span>  
  
 <span data-ttu-id="a221d-604">這個方法的非同步版本，請參閱<xref:System.Xml.XmlWriter.WriteCommentAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="a221d-604">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteCommentAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a221d-605">下列範例會將 XML 檔案代表活頁簿。</span><span class="sxs-lookup"><span data-stu-id="a221d-605">The following example writes an XML file representing a book.</span></span>  
  
 [!code-csharp[XmlWriter.WriteStartDocument#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteStartDocument/CS/writerbook_v2.cs#1)]
 [!code-vb[XmlWriter.WriteStartDocument#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteStartDocument/VB/writerbook_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a221d-606">此文字會導致非語式正確的 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="a221d-606">The text would result in a non-well-formed XML document.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-607">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-607">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="a221d-608">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span><span class="sxs-lookup"><span data-stu-id="a221d-608">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCommentAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteCommentAsync (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteCommentAsync(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteCommentAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteCommentAsync (text As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteCommentAsync(System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="a221d-609">要放入註解中的文字。</span><span class="sxs-lookup"><span data-stu-id="a221d-609">Text to place inside the comment.</span></span></param>
        <summary><span data-ttu-id="a221d-610">以非同步的方式寫出包含指定文字的註解 &lt;!--...--&gt;。</span><span class="sxs-lookup"><span data-stu-id="a221d-610">Asynchronously writes out a comment &lt;!--...--&gt; containing the specified text.</span></span></summary>
        <returns><span data-ttu-id="a221d-611">表示非同步 <see langword="WriteComment" /> 作業的工作。</span><span class="sxs-lookup"><span data-stu-id="a221d-611">The task that represents the asynchronous <see langword="WriteComment" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-612">這是非同步版本<xref:System.Xml.XmlWriter.WriteComment%2A>，使用相同的功能。</span><span class="sxs-lookup"><span data-stu-id="a221d-612">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteComment%2A>, with the same functionality.</span></span> <span data-ttu-id="a221d-613">若要使用此方法，您必須設定<xref:System.Xml.XmlWriterSettings.Async%2A>旗標設為`true`。</span><span class="sxs-lookup"><span data-stu-id="a221d-613">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-614">在未將 <see cref="P:System.Xml.XmlWriterSettings.Async" /> 旗標設為 <see langword="true" />的情況下呼叫了 <see cref="T:System.Xml.XmlWriter" /> 非同步方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-614">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="a221d-615">在此情況下，就會擲回 <see cref="T:System.InvalidOperationException" /> 並顯示訊息「如果您要使用非同步方法，請將 XmlWriterSettings.Async 設為 true」。</span><span class="sxs-lookup"><span data-stu-id="a221d-615">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteDocType">
      <MemberSignature Language="C#" Value="public abstract void WriteDocType (string name, string pubid, string sysid, string subset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteDocType(string name, string pubid, string sysid, string subset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteDocType(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteDocType (name As String, pubid As String, sysid As String, subset As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteDocType(System::String ^ name, System::String ^ pubid, System::String ^ sysid, System::String ^ subset);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="pubid" Type="System.String" />
        <Parameter Name="sysid" Type="System.String" />
        <Parameter Name="subset" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="a221d-616">DOCTYPE 名稱。</span><span class="sxs-lookup"><span data-stu-id="a221d-616">The name of the DOCTYPE.</span></span> <span data-ttu-id="a221d-617">這必須不是空白的。</span><span class="sxs-lookup"><span data-stu-id="a221d-617">This must be non-empty.</span></span></param>
        <param name="pubid"><span data-ttu-id="a221d-618">如果為非 null，它也會寫入 PUBLIC "pubid" "sysid"，其中 <c>pubid</c> 與 <c>sysid</c> 會取代為指定引數的值。</span><span class="sxs-lookup"><span data-stu-id="a221d-618">If non-null it also writes PUBLIC "pubid" "sysid" where <c>pubid</c> and <c>sysid</c> are replaced with the value of the given arguments.</span></span></param>
        <param name="sysid"><span data-ttu-id="a221d-619">如果 <c>pubid</c> 是 <see langword="null" />，而 <c>sysid</c> 為非 null，則它會寫入 SYSTEM "sysid"，其中 <c>sysid</c> 會取代為這個引數的值。</span><span class="sxs-lookup"><span data-stu-id="a221d-619">If <c>pubid</c> is <see langword="null" /> and <c>sysid</c> is non-null it writes SYSTEM "sysid" where <c>sysid</c> is replaced with the value of this argument.</span></span></param>
        <param name="subset"><span data-ttu-id="a221d-620">如果非 Null，它會寫入 [subset]，其中 subset 由這個引數的值來替代。</span><span class="sxs-lookup"><span data-stu-id="a221d-620">If non-null it writes [subset] where subset is replaced with the value of this argument.</span></span></param>
        <summary><span data-ttu-id="a221d-621">在衍生類別中覆寫時，寫入具有指定名稱與選擇性屬性的 DOCTYPE 宣告。</span><span class="sxs-lookup"><span data-stu-id="a221d-621">When overridden in a derived class, writes the DOCTYPE declaration with the specified name and optional attributes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-622">這個方法不會檢查無效的字元`pubid`，`sysid`或`subset`。</span><span class="sxs-lookup"><span data-stu-id="a221d-622">This method does not check for invalid characters in `pubid`, `sysid` or `subset`.</span></span> <span data-ttu-id="a221d-623">它也不會檢查內部子集是語式正確。</span><span class="sxs-lookup"><span data-stu-id="a221d-623">It also does not check that the internal subset is well-formed.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="a221d-624"><xref:System.Xml.XmlWriter>不會驗證資料傳遞至<xref:System.Xml.XmlWriter.WriteDocType%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-624">The <xref:System.Xml.XmlWriter> does not validate the data that is passed to the <xref:System.Xml.XmlWriter.WriteDocType%2A> method.</span></span> <span data-ttu-id="a221d-625">您不應該將任意資料傳遞至這個方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-625">You should not pass arbitrary data to this method.</span></span>  
  
 <span data-ttu-id="a221d-626">這個方法的非同步版本，請參閱<xref:System.Xml.XmlWriter.WriteDocTypeAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="a221d-626">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteDocTypeAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a221d-627">下列範例會將 XML 檔案代表活頁簿。</span><span class="sxs-lookup"><span data-stu-id="a221d-627">The following example writes an XML file representing a book.</span></span>  
  
 [!code-csharp[XmlWriter.WriteStartDocument#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteStartDocument/CS/writerbook_v2.cs#1)]
 [!code-vb[XmlWriter.WriteStartDocument#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteStartDocument/VB/writerbook_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-628">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-628">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="a221d-629">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span><span class="sxs-lookup"><span data-stu-id="a221d-629">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a221d-630"><paramref name="name" /> 的值將導致無效的 XML。</span><span class="sxs-lookup"><span data-stu-id="a221d-630">The value for <paramref name="name" /> would result in invalid XML.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteDocTypeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteDocTypeAsync (string name, string pubid, string sysid, string subset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteDocTypeAsync(string name, string pubid, string sysid, string subset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteDocTypeAsync(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteDocTypeAsync (name As String, pubid As String, sysid As String, subset As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteDocTypeAsync(System::String ^ name, System::String ^ pubid, System::String ^ sysid, System::String ^ subset);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="pubid" Type="System.String" />
        <Parameter Name="sysid" Type="System.String" />
        <Parameter Name="subset" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="a221d-631">DOCTYPE 名稱。</span><span class="sxs-lookup"><span data-stu-id="a221d-631">The name of the DOCTYPE.</span></span> <span data-ttu-id="a221d-632">這必須不是空白的。</span><span class="sxs-lookup"><span data-stu-id="a221d-632">This must be non-empty.</span></span></param>
        <param name="pubid"><span data-ttu-id="a221d-633">如果為非 null，它也會寫入 PUBLIC "pubid" "sysid"，其中 <c>pubid</c> 與 <c>sysid</c> 會取代為指定引數的值。</span><span class="sxs-lookup"><span data-stu-id="a221d-633">If non-null it also writes PUBLIC "pubid" "sysid" where <c>pubid</c> and <c>sysid</c> are replaced with the value of the given arguments.</span></span></param>
        <param name="sysid"><span data-ttu-id="a221d-634">如果 <c>pubid</c> 是 <see langword="null" />，而 <c>sysid</c> 為非 null，則它會寫入 SYSTEM "sysid"，其中 <c>sysid</c> 會取代為這個引數的值。</span><span class="sxs-lookup"><span data-stu-id="a221d-634">If <c>pubid</c> is <see langword="null" /> and <c>sysid</c> is non-null it writes SYSTEM "sysid" where <c>sysid</c> is replaced with the value of this argument.</span></span></param>
        <param name="subset"><span data-ttu-id="a221d-635">如果非 Null，它會寫入 [subset]，其中 subset 由這個引數的值來替代。</span><span class="sxs-lookup"><span data-stu-id="a221d-635">If non-null it writes [subset] where subset is replaced with the value of this argument.</span></span></param>
        <summary><span data-ttu-id="a221d-636">以非同步的方式寫入具有指定名稱與選擇性屬性的 DOCTYPE 宣告。</span><span class="sxs-lookup"><span data-stu-id="a221d-636">Asynchronously writes the DOCTYPE declaration with the specified name and optional attributes.</span></span></summary>
        <returns><span data-ttu-id="a221d-637">表示非同步 <see langword="WriteDocType" /> 作業的工作。</span><span class="sxs-lookup"><span data-stu-id="a221d-637">The task that represents the asynchronous <see langword="WriteDocType" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-638">這是非同步版本<xref:System.Xml.XmlWriter.WriteDocType%2A>，使用相同的功能。</span><span class="sxs-lookup"><span data-stu-id="a221d-638">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteDocType%2A>, with the same functionality.</span></span> <span data-ttu-id="a221d-639">若要使用此方法，您必須設定<xref:System.Xml.XmlWriterSettings.Async%2A>旗標設為`true`。</span><span class="sxs-lookup"><span data-stu-id="a221d-639">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-640">在未將 <see cref="P:System.Xml.XmlWriterSettings.Async" /> 旗標設為 <see langword="true" />的情況下呼叫了 <see cref="T:System.Xml.XmlWriter" /> 非同步方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-640">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="a221d-641">在此情況下，就會擲回 <see cref="T:System.InvalidOperationException" /> 並顯示訊息「如果您要使用非同步方法，請將 XmlWriterSettings.Async 設為 true」。</span><span class="sxs-lookup"><span data-stu-id="a221d-641">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteElementString">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-642">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-642">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="a221d-643">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span><span class="sxs-lookup"><span data-stu-id="a221d-643">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <summary><span data-ttu-id="a221d-644">寫入包含字串值的項目。</span><span class="sxs-lookup"><span data-stu-id="a221d-644">Writes an element containing a string value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-645">這個方法的非同步版本，請參閱<xref:System.Xml.XmlWriter.WriteElementStringAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="a221d-645">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteElementStringAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteElementString">
      <MemberSignature Language="C#" Value="public void WriteElementString (string localName, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteElementString(string localName, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteElementString (localName As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteElementString(System::String ^ localName, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="a221d-646">項目的本機名稱。</span><span class="sxs-lookup"><span data-stu-id="a221d-646">The local name of the element.</span></span></param>
        <param name="value"><span data-ttu-id="a221d-647">項目的值。</span><span class="sxs-lookup"><span data-stu-id="a221d-647">The value of the element.</span></span></param>
        <summary><span data-ttu-id="a221d-648">寫入具有指定之區域名稱和值的項目。</span><span class="sxs-lookup"><span data-stu-id="a221d-648">Writes an element with the specified local name and value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-649">這個方法的非同步版本，請參閱<xref:System.Xml.XmlWriter.WriteElementStringAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="a221d-649">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteElementStringAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a221d-650">下列範例會使用幾種寫入方法來建立 XML 片段。</span><span class="sxs-lookup"><span data-stu-id="a221d-650">The following example uses several write methods to create an XML fragment.</span></span>  
  
 [!code-cpp[XmlWriter.WriteElementString#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.WriteElementString/CPP/writeelemstring_v2.cpp#1)]
 [!code-csharp[XmlWriter.WriteElementString#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteElementString/CS/writeelemstring_v2.cs#1)]
 [!code-vb[XmlWriter.WriteElementString#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteElementString/VB/writeelemstring_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a221d-651"><paramref name="localName" /> 值為 <see langword="null" /> 或空字串。</span><span class="sxs-lookup"><span data-stu-id="a221d-651">The <paramref name="localName" /> value is <see langword="null" /> or an empty string.</span></span>  
  
 <span data-ttu-id="a221d-652">-或-</span><span class="sxs-lookup"><span data-stu-id="a221d-652">-or-</span></span>  
  
 <span data-ttu-id="a221d-653">參數值無效。</span><span class="sxs-lookup"><span data-stu-id="a221d-653">The parameter values are not valid.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="a221d-654">緩衝區中有一個字元，其為有效的 XML 字元，但對輸出編碼而言無效。</span><span class="sxs-lookup"><span data-stu-id="a221d-654">There is a character in the buffer that is a valid XML character but is not valid for the output encoding.</span></span> <span data-ttu-id="a221d-655">比方說如果輸出的編碼方式為 ASCII，您應該在項目與屬性名稱中只使用範圍從 0 至 127 的字元。</span><span class="sxs-lookup"><span data-stu-id="a221d-655">For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names.</span></span> <span data-ttu-id="a221d-656">無效的字元可能是在這個方法的引數中，或在先前已寫入至緩衝區的方法的引數中。</span><span class="sxs-lookup"><span data-stu-id="a221d-656">The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer.</span></span> <span data-ttu-id="a221d-657">字元實體參考會盡可能逸出這類字元 (比方說在文字節點或屬性值中)。</span><span class="sxs-lookup"><span data-stu-id="a221d-657">Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values).</span></span> <span data-ttu-id="a221d-658">不過，在項目與屬性名稱、註解、處理指示或 CDATA 區段中不允許字元實體參考。</span><span class="sxs-lookup"><span data-stu-id="a221d-658">However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-659">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-659">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="a221d-660">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span><span class="sxs-lookup"><span data-stu-id="a221d-660">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteElementString">
      <MemberSignature Language="C#" Value="public void WriteElementString (string localName, string ns, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteElementString(string localName, string ns, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteElementString (localName As String, ns As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteElementString(System::String ^ localName, System::String ^ ns, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="a221d-661">項目的本機名稱。</span><span class="sxs-lookup"><span data-stu-id="a221d-661">The local name of the element.</span></span></param>
        <param name="ns"><span data-ttu-id="a221d-662">與項目相關聯的命名空間 URI。</span><span class="sxs-lookup"><span data-stu-id="a221d-662">The namespace URI to associate with the element.</span></span></param>
        <param name="value"><span data-ttu-id="a221d-663">項目的值。</span><span class="sxs-lookup"><span data-stu-id="a221d-663">The value of the element.</span></span></param>
        <summary><span data-ttu-id="a221d-664">寫入具有指定之區域名稱、命名空間 URI 和值的項目。</span><span class="sxs-lookup"><span data-stu-id="a221d-664">Writes an element with the specified local name, namespace URI, and value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-665">這個方法的非同步版本，請參閱<xref:System.Xml.XmlWriter.WriteElementStringAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="a221d-665">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteElementStringAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a221d-666">下列範例會使用幾種寫入方法來建立 XML 片段。</span><span class="sxs-lookup"><span data-stu-id="a221d-666">The following example uses several write methods to create an XML fragment.</span></span>  
  
 [!code-cpp[XmlWriter.WriteElementString#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.WriteElementString/CPP/writeelemstring_v2.cpp#1)]
 [!code-csharp[XmlWriter.WriteElementString#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteElementString/CS/writeelemstring_v2.cs#1)]
 [!code-vb[XmlWriter.WriteElementString#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteElementString/VB/writeelemstring_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a221d-667"><paramref name="localName" /> 值為 <see langword="null" /> 或空字串。</span><span class="sxs-lookup"><span data-stu-id="a221d-667">The <paramref name="localName" /> value is <see langword="null" /> or an empty string.</span></span>  
  
 <span data-ttu-id="a221d-668">-或-</span><span class="sxs-lookup"><span data-stu-id="a221d-668">-or-</span></span>  
  
 <span data-ttu-id="a221d-669">參數值無效。</span><span class="sxs-lookup"><span data-stu-id="a221d-669">The parameter values are not valid.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="a221d-670">緩衝區中有一個字元，其為有效的 XML 字元，但對輸出編碼而言無效。</span><span class="sxs-lookup"><span data-stu-id="a221d-670">There is a character in the buffer that is a valid XML character but is not valid for the output encoding.</span></span> <span data-ttu-id="a221d-671">比方說如果輸出的編碼方式為 ASCII，您應該在項目與屬性名稱中只使用範圍從 0 至 127 的字元。</span><span class="sxs-lookup"><span data-stu-id="a221d-671">For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names.</span></span> <span data-ttu-id="a221d-672">無效的字元可能是在這個方法的引數中，或在先前已寫入至緩衝區的方法的引數中。</span><span class="sxs-lookup"><span data-stu-id="a221d-672">The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer.</span></span> <span data-ttu-id="a221d-673">字元實體參考會盡可能逸出這類字元 (比方說在文字節點或屬性值中)。</span><span class="sxs-lookup"><span data-stu-id="a221d-673">Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values).</span></span> <span data-ttu-id="a221d-674">不過，在項目與屬性名稱、註解、處理指示或 CDATA 區段中不允許字元實體參考。</span><span class="sxs-lookup"><span data-stu-id="a221d-674">However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-675">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-675">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="a221d-676">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span><span class="sxs-lookup"><span data-stu-id="a221d-676">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteElementString">
      <MemberSignature Language="C#" Value="public void WriteElementString (string prefix, string localName, string ns, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteElementString(string prefix, string localName, string ns, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteElementString (prefix As String, localName As String, ns As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteElementString(System::String ^ prefix, System::String ^ localName, System::String ^ ns, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="a221d-677">項目的前置詞。</span><span class="sxs-lookup"><span data-stu-id="a221d-677">The prefix of the element.</span></span></param>
        <param name="localName"><span data-ttu-id="a221d-678">項目的本機名稱。</span><span class="sxs-lookup"><span data-stu-id="a221d-678">The local name of the element.</span></span></param>
        <param name="ns"><span data-ttu-id="a221d-679">項目的命名空間 URI。</span><span class="sxs-lookup"><span data-stu-id="a221d-679">The namespace URI of the element.</span></span></param>
        <param name="value"><span data-ttu-id="a221d-680">項目的值。</span><span class="sxs-lookup"><span data-stu-id="a221d-680">The value of the element.</span></span></param>
        <summary><span data-ttu-id="a221d-681">寫入具有指定的前置詞、區域名稱、命名空間 URI 和值的項目。</span><span class="sxs-lookup"><span data-stu-id="a221d-681">Writes an element with the specified prefix, local name, namespace URI, and value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-682">這個方法的非同步版本，請參閱<xref:System.Xml.XmlWriter.WriteElementStringAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="a221d-682">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteElementStringAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a221d-683"><paramref name="localName" /> 值為 <see langword="null" /> 或空字串。</span><span class="sxs-lookup"><span data-stu-id="a221d-683">The <paramref name="localName" /> value is <see langword="null" /> or an empty string.</span></span>  
  
 <span data-ttu-id="a221d-684">-或-</span><span class="sxs-lookup"><span data-stu-id="a221d-684">-or-</span></span>  
  
 <span data-ttu-id="a221d-685">參數值無效。</span><span class="sxs-lookup"><span data-stu-id="a221d-685">The parameter values are not valid.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="a221d-686">緩衝區中有一個字元，其為有效的 XML 字元，但對輸出編碼而言無效。</span><span class="sxs-lookup"><span data-stu-id="a221d-686">There is a character in the buffer that is a valid XML character but is not valid for the output encoding.</span></span> <span data-ttu-id="a221d-687">比方說如果輸出的編碼方式為 ASCII，您應該在項目與屬性名稱中只使用範圍從 0 至 127 的字元。</span><span class="sxs-lookup"><span data-stu-id="a221d-687">For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names.</span></span> <span data-ttu-id="a221d-688">無效的字元可能是在這個方法的引數中，或在先前已寫入至緩衝區的方法的引數中。</span><span class="sxs-lookup"><span data-stu-id="a221d-688">The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer.</span></span> <span data-ttu-id="a221d-689">字元實體參考會盡可能逸出這類字元 (比方說在文字節點或屬性值中)。</span><span class="sxs-lookup"><span data-stu-id="a221d-689">Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values).</span></span> <span data-ttu-id="a221d-690">不過，在項目與屬性名稱、註解、處理指示或 CDATA 區段中不允許字元實體參考。</span><span class="sxs-lookup"><span data-stu-id="a221d-690">However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-691">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-691">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="a221d-692">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span><span class="sxs-lookup"><span data-stu-id="a221d-692">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteElementStringAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WriteElementStringAsync (string prefix, string localName, string ns, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WriteElementStringAsync(string prefix, string localName, string ns, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteElementStringAsync(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteElementStringAsync (prefix As String, localName As String, ns As String, value As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ WriteElementStringAsync(System::String ^ prefix, System::String ^ localName, System::String ^ ns, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.Xml.XmlWriter/&lt;WriteElementStringAsync&gt;c__async6))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="a221d-693">項目的前置詞。</span><span class="sxs-lookup"><span data-stu-id="a221d-693">The prefix of the element.</span></span></param>
        <param name="localName"><span data-ttu-id="a221d-694">項目的本機名稱。</span><span class="sxs-lookup"><span data-stu-id="a221d-694">The local name of the element.</span></span></param>
        <param name="ns"><span data-ttu-id="a221d-695">項目的命名空間 URI。</span><span class="sxs-lookup"><span data-stu-id="a221d-695">The namespace URI of the element.</span></span></param>
        <param name="value"><span data-ttu-id="a221d-696">項目的值。</span><span class="sxs-lookup"><span data-stu-id="a221d-696">The value of the element.</span></span></param>
        <summary><span data-ttu-id="a221d-697">以非同步的方式寫入具有指定之前置詞、區域名稱、命名空間 URI 和值的項目。</span><span class="sxs-lookup"><span data-stu-id="a221d-697">Asynchronously writes an element with the specified prefix, local name, namespace URI, and value.</span></span></summary>
        <returns><span data-ttu-id="a221d-698">表示非同步 <see langword="WriteElementString" /> 作業的工作。</span><span class="sxs-lookup"><span data-stu-id="a221d-698">The task that represents the asynchronous <see langword="WriteElementString" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-699">這是非同步版本<xref:System.Xml.XmlWriter.WriteElementString%2A>，使用相同的功能。</span><span class="sxs-lookup"><span data-stu-id="a221d-699">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteElementString%2A>, with the same functionality.</span></span> <span data-ttu-id="a221d-700">若要使用此方法，您必須設定<xref:System.Xml.XmlWriterSettings.Async%2A>旗標設為`true`。</span><span class="sxs-lookup"><span data-stu-id="a221d-700">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-701">在未將 <see cref="P:System.Xml.XmlWriterSettings.Async" /> 旗標設為 <see langword="true" />的情況下呼叫了 <see cref="T:System.Xml.XmlWriter" /> 非同步方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-701">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="a221d-702">在此情況下，就會擲回 <see cref="T:System.InvalidOperationException" /> 並顯示訊息「如果您要使用非同步方法，請將 XmlWriterSettings.Async 設為 true」。</span><span class="sxs-lookup"><span data-stu-id="a221d-702">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndAttribute">
      <MemberSignature Language="C#" Value="public abstract void WriteEndAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteEndAttribute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteEndAttribute" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteEndAttribute ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteEndAttribute();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a221d-703">在衍生類別中覆寫時，會關閉先前的 <see cref="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)" /> 呼叫。</span><span class="sxs-lookup"><span data-stu-id="a221d-703">When overridden in a derived class, closes the previous <see cref="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)" /> call.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-704">如果您呼叫`WriteStartAttribute`，您可以關閉使用此方法的屬性。</span><span class="sxs-lookup"><span data-stu-id="a221d-704">If you call `WriteStartAttribute`, you can close the attribute with this method.</span></span>  
  
 <span data-ttu-id="a221d-705">您也可以藉由呼叫關閉屬性`WriteStartAttribute`再次呼叫<xref:System.Xml.XmlWriter.WriteAttributeString%2A>，或呼叫<xref:System.Xml.XmlWriter.WriteEndElement%2A>。</span><span class="sxs-lookup"><span data-stu-id="a221d-705">You can also close the attribute by calling `WriteStartAttribute` again, calling <xref:System.Xml.XmlWriter.WriteAttributeString%2A>, or calling <xref:System.Xml.XmlWriter.WriteEndElement%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a221d-706">當您使用<xref:System.Xml.XmlWriter>將不會寫入到輸出 XML 的元素和屬性的方法，直到您呼叫<xref:System.Xml.XmlWriter.Close%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-706">When you use the <xref:System.Xml.XmlWriter> methods to output XML, the elements and attributes will not be written until you call the <xref:System.Xml.XmlWriter.Close%2A> method.</span></span> <span data-ttu-id="a221d-707">例如，如果您要使用 XmlWriter 填入<xref:System.Xml.XmlDocument>，除非您關閉<xref:System.Xml.XmlWriter>，不能觀察目標文件中的屬性與寫入的項目。</span><span class="sxs-lookup"><span data-stu-id="a221d-707">For example, if you are using the XmlWriter to populate an <xref:System.Xml.XmlDocument>, until you close the <xref:System.Xml.XmlWriter>, you will not be able to observe the written elements and attributes in the target document.</span></span>  
  
 <span data-ttu-id="a221d-708">這個方法的非同步版本，請參閱<xref:System.Xml.XmlWriter.WriteEndAttributeAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="a221d-708">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteEndAttributeAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-709">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-709">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="a221d-710">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span><span class="sxs-lookup"><span data-stu-id="a221d-710">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndAttributeAsync">
      <MemberSignature Language="C#" Value="protected internal virtual System.Threading.Tasks.Task WriteEndAttributeAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Threading.Tasks.Task WriteEndAttributeAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteEndAttributeAsync" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function WriteEndAttributeAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Threading::Tasks::Task ^ WriteEndAttributeAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a221d-711">非同步關閉上一個 <see cref="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)" /> 呼叫。</span><span class="sxs-lookup"><span data-stu-id="a221d-711">Asynchronously closes the previous <see cref="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)" /> call.</span></span></summary>
        <returns><span data-ttu-id="a221d-712">表示非同步 <see langword="WriteEndAttribute" /> 作業的工作。</span><span class="sxs-lookup"><span data-stu-id="a221d-712">The task that represents the asynchronous <see langword="WriteEndAttribute" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-713">這是非同步版本<xref:System.Xml.XmlWriter.WriteEndAttribute%2A>，使用相同的功能。</span><span class="sxs-lookup"><span data-stu-id="a221d-713">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteEndAttribute%2A>, with the same functionality.</span></span> <span data-ttu-id="a221d-714">若要使用此方法，您必須設定<xref:System.Xml.XmlWriterSettings.Async%2A>旗標設為`true`。</span><span class="sxs-lookup"><span data-stu-id="a221d-714">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-715">在未將 <see cref="P:System.Xml.XmlWriterSettings.Async" /> 旗標設為 <see langword="true" />的情況下呼叫了 <see cref="T:System.Xml.XmlWriter" /> 非同步方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-715">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="a221d-716">在此情況下，就會擲回 <see cref="T:System.InvalidOperationException" /> 並顯示訊息「如果您要使用非同步方法，請將 XmlWriterSettings.Async 設為 true」。</span><span class="sxs-lookup"><span data-stu-id="a221d-716">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndDocument">
      <MemberSignature Language="C#" Value="public abstract void WriteEndDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteEndDocument() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteEndDocument" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteEndDocument ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteEndDocument();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a221d-717">在衍生類別中覆寫時，關閉任何開啟的項目或屬性，並將寫入器回復開始狀態。</span><span class="sxs-lookup"><span data-stu-id="a221d-717">When overridden in a derived class, closes any open elements or attributes and puts the writer back in the Start state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="a221d-718">當您使用<xref:System.Xml.XmlWriter>將不會寫入到輸出 XML 的元素和屬性的方法，直到您呼叫<xref:System.Xml.XmlWriter.Close%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-718">When you use the <xref:System.Xml.XmlWriter> methods to output XML, the elements and attributes will not be written until you call the <xref:System.Xml.XmlWriter.Close%2A> method.</span></span> <span data-ttu-id="a221d-719">例如，如果您要使用 XmlWriter 填入<xref:System.Xml.XmlDocument>，除非您關閉<xref:System.Xml.XmlWriter>，不能觀察目標文件中的屬性與寫入的項目。</span><span class="sxs-lookup"><span data-stu-id="a221d-719">For example, if you are using the XmlWriter to populate an <xref:System.Xml.XmlDocument>, until you close the <xref:System.Xml.XmlWriter>, you will not be able to observe the written elements and attributes in the target document.</span></span>  
  
 <span data-ttu-id="a221d-720">這個方法的非同步版本，請參閱<xref:System.Xml.XmlWriter.WriteEndDocumentAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="a221d-720">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteEndDocumentAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a221d-721">下列範例會將 XML 檔案代表活頁簿。</span><span class="sxs-lookup"><span data-stu-id="a221d-721">The following example writes an XML file representing a book.</span></span>  
  
 [!code-csharp[XmlWriter.WriteStartDocument#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteStartDocument/CS/writerbook_v2.cs#1)]
 [!code-vb[XmlWriter.WriteStartDocument#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteStartDocument/VB/writerbook_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a221d-722">XML 文件無效。</span><span class="sxs-lookup"><span data-stu-id="a221d-722">The XML document is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-723">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-723">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="a221d-724">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span><span class="sxs-lookup"><span data-stu-id="a221d-724">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndDocumentAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteEndDocumentAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteEndDocumentAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteEndDocumentAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteEndDocumentAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteEndDocumentAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a221d-725">以非同步的方式關閉任何開啟的項目或屬性，並將寫入器回復開始狀態。</span><span class="sxs-lookup"><span data-stu-id="a221d-725">Asynchronously closes any open elements or attributes and puts the writer back in the Start state.</span></span></summary>
        <returns><span data-ttu-id="a221d-726">表示非同步 <see langword="WriteEndDocument" /> 作業的工作。</span><span class="sxs-lookup"><span data-stu-id="a221d-726">The task that represents the asynchronous <see langword="WriteEndDocument" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-727">這是非同步版本<xref:System.Xml.XmlWriter.WriteEndDocument%2A>，使用相同的功能。</span><span class="sxs-lookup"><span data-stu-id="a221d-727">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteEndDocument%2A>, with the same functionality.</span></span> <span data-ttu-id="a221d-728">若要使用此方法，您必須設定<xref:System.Xml.XmlWriterSettings.Async%2A>旗標設為`true`。</span><span class="sxs-lookup"><span data-stu-id="a221d-728">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-729">在未將 <see cref="P:System.Xml.XmlWriterSettings.Async" /> 旗標設為 <see langword="true" />的情況下呼叫了 <see cref="T:System.Xml.XmlWriter" /> 非同步方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-729">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="a221d-730">在此情況下，就會擲回 <see cref="T:System.InvalidOperationException" /> 並顯示訊息「如果您要使用非同步方法，請將 XmlWriterSettings.Async 設為 true」。</span><span class="sxs-lookup"><span data-stu-id="a221d-730">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndElement">
      <MemberSignature Language="C#" Value="public abstract void WriteEndElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteEndElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteEndElement" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteEndElement ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteEndElement();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a221d-731">在衍生類別中覆寫時，關閉一個項目並取出對應的命名空間範圍。</span><span class="sxs-lookup"><span data-stu-id="a221d-731">When overridden in a derived class, closes one element and pops the corresponding namespace scope.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-732">如果項目不包含任何內容，簡短結束標記 」 / > 「 寫入;否則，會寫入完整的結束標記。</span><span class="sxs-lookup"><span data-stu-id="a221d-732">If the element contains no content, a short end tag "/>" is written; otherwise, a full end tag is written.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a221d-733">當您使用<xref:System.Xml.XmlWriter>將不會寫入到輸出 XML 的元素和屬性的方法，直到您呼叫<xref:System.Xml.XmlWriter.Close%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-733">When you use the <xref:System.Xml.XmlWriter> methods to output XML, the elements and attributes will not be written until you call the <xref:System.Xml.XmlWriter.Close%2A> method.</span></span> <span data-ttu-id="a221d-734">例如，如果您用來填入 XmlWwriter <xref:System.Xml.XmlDocument>，除非您關閉<xref:System.Xml.XmlWriter>，不能觀察目標文件中的屬性與寫入的項目。</span><span class="sxs-lookup"><span data-stu-id="a221d-734">For example, if you are using the XmlWwriter to populate an <xref:System.Xml.XmlDocument>, until you close the <xref:System.Xml.XmlWriter>, you will not be able to observe the written elements and attributes in the target document.</span></span>  
  
 <span data-ttu-id="a221d-735">這個方法的非同步版本，請參閱<xref:System.Xml.XmlWriter.WriteEndElementAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="a221d-735">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteEndElementAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a221d-736">下列範例會使用<xref:System.Xml.XmlWriter.WriteEndElement%2A>和<xref:System.Xml.XmlWriter.WriteFullEndElement%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-736">The following example uses the <xref:System.Xml.XmlWriter.WriteEndElement%2A> and the <xref:System.Xml.XmlWriter.WriteFullEndElement%2A> methods.</span></span>  
  
 [!code-csharp[XmlWriter.WriteFullEndElement#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteFullEndElement/CS/writerfullend_v2.cs#1)]
 [!code-vb[XmlWriter.WriteFullEndElement#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteFullEndElement/VB/writerfullend_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-737">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-737">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="a221d-738">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span><span class="sxs-lookup"><span data-stu-id="a221d-738">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndElementAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteEndElementAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteEndElementAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteEndElementAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteEndElementAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteEndElementAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a221d-739">以非同步的方式關閉一個項目並取出對應的命名空間範圍。</span><span class="sxs-lookup"><span data-stu-id="a221d-739">Asynchronously closes one element and pops the corresponding namespace scope.</span></span></summary>
        <returns><span data-ttu-id="a221d-740">表示非同步 <see langword="WriteEndElement" /> 作業的工作。</span><span class="sxs-lookup"><span data-stu-id="a221d-740">The task that represents the asynchronous <see langword="WriteEndElement" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-741">這是非同步版本<xref:System.Xml.XmlWriter.WriteEndElement%2A>，使用相同的功能。</span><span class="sxs-lookup"><span data-stu-id="a221d-741">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteEndElement%2A>, with the same functionality.</span></span> <span data-ttu-id="a221d-742">若要使用此方法，您必須設定<xref:System.Xml.XmlWriterSettings.Async%2A>旗標設為`true`。</span><span class="sxs-lookup"><span data-stu-id="a221d-742">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-743">在未將 <see cref="P:System.Xml.XmlWriterSettings.Async" /> 旗標設為 <see langword="true" />的情況下呼叫了 <see cref="T:System.Xml.XmlWriter" /> 非同步方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-743">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="a221d-744">在此情況下，就會擲回 <see cref="T:System.InvalidOperationException" /> 並顯示訊息「如果您要使用非同步方法，請將 XmlWriterSettings.Async 設為 true」。</span><span class="sxs-lookup"><span data-stu-id="a221d-744">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEntityRef">
      <MemberSignature Language="C#" Value="public abstract void WriteEntityRef (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteEntityRef(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteEntityRef(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteEntityRef (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteEntityRef(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="a221d-745">實體參考的名稱。</span><span class="sxs-lookup"><span data-stu-id="a221d-745">The name of the entity reference.</span></span></param>
        <summary><span data-ttu-id="a221d-746">在衍生類別中覆寫時，寫出如 <see langword="&amp;name;" /> 的實體參考。</span><span class="sxs-lookup"><span data-stu-id="a221d-746">When overridden in a derived class, writes out an entity reference as <see langword="&amp;name;" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-747">這個方法的非同步版本，請參閱<xref:System.Xml.XmlWriter.WriteEntityRefAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="a221d-747">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteEntityRefAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a221d-748">下列範例會將 XML 檔案代表活頁簿。</span><span class="sxs-lookup"><span data-stu-id="a221d-748">The following example writes an XML file representing a book.</span></span>  
  
 [!code-csharp[XmlWriter.WriteStartDocument#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteStartDocument/CS/writerbook_v2.cs#1)]
 [!code-vb[XmlWriter.WriteStartDocument#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteStartDocument/VB/writerbook_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a221d-749"><paramref name="name" /> 為 <see langword="null" /> 或 <see langword="String.Empty" />。</span><span class="sxs-lookup"><span data-stu-id="a221d-749"><paramref name="name" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-750">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-750">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="a221d-751">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span><span class="sxs-lookup"><span data-stu-id="a221d-751">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEntityRefAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteEntityRefAsync (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteEntityRefAsync(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteEntityRefAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteEntityRefAsync (name As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteEntityRefAsync(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="a221d-752">實體參考的名稱。</span><span class="sxs-lookup"><span data-stu-id="a221d-752">The name of the entity reference.</span></span></param>
        <summary><span data-ttu-id="a221d-753">以非同步的方式將實體參考寫出為 <see langword="&amp;name;" />。</span><span class="sxs-lookup"><span data-stu-id="a221d-753">Asynchronously writes out an entity reference as <see langword="&amp;name;" />.</span></span></summary>
        <returns><span data-ttu-id="a221d-754">表示非同步 <see langword="WriteEntityRef" /> 作業的工作。</span><span class="sxs-lookup"><span data-stu-id="a221d-754">The task that represents the asynchronous <see langword="WriteEntityRef" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-755">這是非同步版本<xref:System.Xml.XmlWriter.WriteEntityRef%2A>，使用相同的功能。</span><span class="sxs-lookup"><span data-stu-id="a221d-755">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteEntityRef%2A>, with the same functionality.</span></span> <span data-ttu-id="a221d-756">若要使用此方法，您必須設定<xref:System.Xml.XmlWriterSettings.Async%2A>旗標設為`true`。</span><span class="sxs-lookup"><span data-stu-id="a221d-756">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-757">在未將 <see cref="P:System.Xml.XmlWriterSettings.Async" /> 旗標設為 <see langword="true" />的情況下呼叫了 <see cref="T:System.Xml.XmlWriter" /> 非同步方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-757">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="a221d-758">在此情況下，就會擲回 <see cref="T:System.InvalidOperationException" /> 並顯示訊息「如果您要使用非同步方法，請將 XmlWriterSettings.Async 設為 true」。</span><span class="sxs-lookup"><span data-stu-id="a221d-758">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteFullEndElement">
      <MemberSignature Language="C#" Value="public abstract void WriteFullEndElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteFullEndElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteFullEndElement" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteFullEndElement ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteFullEndElement();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a221d-759">在衍生類別中覆寫時，關閉一個項目並取出對應的命名空間範圍。</span><span class="sxs-lookup"><span data-stu-id="a221d-759">When overridden in a derived class, closes one element and pops the corresponding namespace scope.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-760">這個方法一律會寫入完整的結束標記。</span><span class="sxs-lookup"><span data-stu-id="a221d-760">This method always writes the full end tag.</span></span> <span data-ttu-id="a221d-761">處理項目，其中必須包含完整的結束標記時，這非常有用。</span><span class="sxs-lookup"><span data-stu-id="a221d-761">This is useful when dealing with elements that must include a full end tag.</span></span> <span data-ttu-id="a221d-762">例如，瀏覽器預期 HTML 指令碼區塊，以 「 \< /指令碼 > 」。</span><span class="sxs-lookup"><span data-stu-id="a221d-762">For example, browsers expect HTML script blocks to be closed with "\</script>".</span></span>  
  
 <span data-ttu-id="a221d-763">這個方法的非同步版本，請參閱<xref:System.Xml.XmlWriter.WriteFullEndElementAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="a221d-763">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteFullEndElementAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a221d-764">下列範例會使用<xref:System.Xml.XmlWriter.WriteEndElement%2A>和<xref:System.Xml.XmlWriter.WriteFullEndElement%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-764">The following example uses the <xref:System.Xml.XmlWriter.WriteEndElement%2A> and the <xref:System.Xml.XmlWriter.WriteFullEndElement%2A> methods.</span></span>  
  
 [!code-csharp[XmlWriter.WriteFullEndElement#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteFullEndElement/CS/writerfullend_v2.cs#1)]
 [!code-vb[XmlWriter.WriteFullEndElement#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteFullEndElement/VB/writerfullend_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-765">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-765">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="a221d-766">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span><span class="sxs-lookup"><span data-stu-id="a221d-766">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteFullEndElementAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteFullEndElementAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteFullEndElementAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteFullEndElementAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteFullEndElementAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteFullEndElementAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a221d-767">以非同步的方式關閉一個項目並取出對應的命名空間範圍。</span><span class="sxs-lookup"><span data-stu-id="a221d-767">Asynchronously closes one element and pops the corresponding namespace scope.</span></span></summary>
        <returns><span data-ttu-id="a221d-768">表示非同步 <see langword="WriteFullEndElement" /> 作業的工作。</span><span class="sxs-lookup"><span data-stu-id="a221d-768">The task that represents the asynchronous <see langword="WriteFullEndElement" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-769">這是非同步版本<xref:System.Xml.XmlWriter.WriteFullEndElement%2A>，使用相同的功能。</span><span class="sxs-lookup"><span data-stu-id="a221d-769">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteFullEndElement%2A>, with the same functionality.</span></span> <span data-ttu-id="a221d-770">若要使用此方法，您必須設定<xref:System.Xml.XmlWriterSettings.Async%2A>旗標設為`true`。</span><span class="sxs-lookup"><span data-stu-id="a221d-770">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-771">在未將 <see cref="P:System.Xml.XmlWriterSettings.Async" /> 旗標設為 <see langword="true" />的情況下呼叫了 <see cref="T:System.Xml.XmlWriter" /> 非同步方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-771">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="a221d-772">在此情況下，就會擲回 <see cref="T:System.InvalidOperationException" /> 並顯示訊息「如果您要使用非同步方法，請將 XmlWriterSettings.Async 設為 true」。</span><span class="sxs-lookup"><span data-stu-id="a221d-772">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteName">
      <MemberSignature Language="C#" Value="public virtual void WriteName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteName (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteName(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="a221d-773">要寫入的名稱。</span><span class="sxs-lookup"><span data-stu-id="a221d-773">The name to write.</span></span></param>
        <summary><span data-ttu-id="a221d-774">當覆寫衍生類別時，請寫出指定的名稱，以確保它是符合 W3C XML 1.0 建議 (http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name) \(英文\) 的有效名稱。</span><span class="sxs-lookup"><span data-stu-id="a221d-774">When overridden in a derived class, writes out the specified name, ensuring it is a valid name according to the W3C XML 1.0 recommendation (http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-775">如果<xref:System.Xml.XmlTextWriter.Namespaces%2A>設`true`，`WriteName`也會檢查名稱是否有效，根據 W3C Namespaces in XML 建議事項。</span><span class="sxs-lookup"><span data-stu-id="a221d-775">If <xref:System.Xml.XmlTextWriter.Namespaces%2A> is set to `true`, `WriteName` also checks that the name is also valid according to the W3C Namespaces in XML recommendation.</span></span>  
  
 <span data-ttu-id="a221d-776">這個方法的非同步版本，請參閱<xref:System.Xml.XmlWriter.WriteNameAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="a221d-776">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteNameAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a221d-777"><paramref name="name" /> 不是有效的 XML 名稱，或者 <paramref name="name" /> 是 <see langword="null" /> 或 <see langword="String.Empty" />。</span><span class="sxs-lookup"><span data-stu-id="a221d-777"><paramref name="name" /> is not a valid XML name; or <paramref name="name" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-778">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-778">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="a221d-779">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span><span class="sxs-lookup"><span data-stu-id="a221d-779">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNameAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteNameAsync (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteNameAsync(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteNameAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteNameAsync (name As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteNameAsync(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="a221d-780">要寫入的名稱。</span><span class="sxs-lookup"><span data-stu-id="a221d-780">The name to write.</span></span></param>
        <summary><span data-ttu-id="a221d-781">非同步地寫出指定的名稱，以確保它是符合 W3C XML 1.0 建議 (http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name) \(英文\) 的有效名稱。</span><span class="sxs-lookup"><span data-stu-id="a221d-781">Asynchronously writes out the specified name, ensuring it is a valid name according to the W3C XML 1.0 recommendation (http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</span></span></summary>
        <returns><span data-ttu-id="a221d-782">表示非同步 <see langword="WriteName" /> 作業的工作。</span><span class="sxs-lookup"><span data-stu-id="a221d-782">The task that represents the asynchronous <see langword="WriteName" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-783">這是非同步版本<xref:System.Xml.XmlWriter.WriteName%2A>，使用相同的功能。</span><span class="sxs-lookup"><span data-stu-id="a221d-783">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteName%2A>, with the same functionality.</span></span> <span data-ttu-id="a221d-784">若要使用此方法，您必須設定<xref:System.Xml.XmlWriterSettings.Async%2A>旗標設為`true`。</span><span class="sxs-lookup"><span data-stu-id="a221d-784">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-785">在未將 <see cref="P:System.Xml.XmlWriterSettings.Async" /> 旗標設為 <see langword="true" />的情況下呼叫了 <see cref="T:System.Xml.XmlWriter" /> 非同步方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-785">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="a221d-786">在此情況下，就會擲回 <see cref="T:System.InvalidOperationException" /> 並顯示訊息「如果您要使用非同步方法，請將 XmlWriterSettings.Async 設為 true」。</span><span class="sxs-lookup"><span data-stu-id="a221d-786">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNmToken">
      <MemberSignature Language="C#" Value="public virtual void WriteNmToken (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteNmToken(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteNmToken(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteNmToken (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteNmToken(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="a221d-787">要寫入的名稱。</span><span class="sxs-lookup"><span data-stu-id="a221d-787">The name to write.</span></span></param>
        <summary><span data-ttu-id="a221d-788">當覆寫衍生類別時，請寫出指定的名稱，以確保它是符合 W3C XML 1.0 建議 (http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name) \(英文\) 的有效 NmToken。</span><span class="sxs-lookup"><span data-stu-id="a221d-788">When overridden in a derived class, writes out the specified name, ensuring it is a valid NmToken according to the W3C XML 1.0 recommendation (http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-789">這個方法的非同步版本，請參閱<xref:System.Xml.XmlWriter.WriteNmTokenAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="a221d-789">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteNmTokenAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a221d-790"><paramref name="name" /> 不是有效的 NmToken，或者 <paramref name="name" /> 是 <see langword="null" /> 或 <see langword="String.Empty" />。</span><span class="sxs-lookup"><span data-stu-id="a221d-790"><paramref name="name" /> is not a valid NmToken; or <paramref name="name" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-791">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-791">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="a221d-792">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span><span class="sxs-lookup"><span data-stu-id="a221d-792">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNmTokenAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteNmTokenAsync (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteNmTokenAsync(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteNmTokenAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteNmTokenAsync (name As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteNmTokenAsync(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="a221d-793">要寫入的名稱。</span><span class="sxs-lookup"><span data-stu-id="a221d-793">The name to write.</span></span></param>
        <summary><span data-ttu-id="a221d-794">非同步地寫出指定的名稱，以確保它是符合 W3C XML 1.0 建議 (http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name) \(英文\) 的有效 NmToken。</span><span class="sxs-lookup"><span data-stu-id="a221d-794">Asynchronously writes out the specified name, ensuring it is a valid NmToken according to the W3C XML 1.0 recommendation (http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</span></span></summary>
        <returns><span data-ttu-id="a221d-795">表示非同步 <see langword="WriteNmToken" /> 作業的工作。</span><span class="sxs-lookup"><span data-stu-id="a221d-795">The task that represents the asynchronous <see langword="WriteNmToken" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-796">這是非同步版本<xref:System.Xml.XmlWriter.WriteNmToken%2A>，使用相同的功能。</span><span class="sxs-lookup"><span data-stu-id="a221d-796">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteNmToken%2A>, with the same functionality.</span></span> <span data-ttu-id="a221d-797">若要使用此方法，您必須設定<xref:System.Xml.XmlWriterSettings.Async%2A>旗標設為`true`。</span><span class="sxs-lookup"><span data-stu-id="a221d-797">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-798">在未將 <see cref="P:System.Xml.XmlWriterSettings.Async" /> 旗標設為 <see langword="true" />的情況下呼叫了 <see cref="T:System.Xml.XmlWriter" /> 非同步方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-798">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="a221d-799">在此情況下，就會擲回 <see cref="T:System.InvalidOperationException" /> 並顯示訊息「如果您要使用非同步方法，請將 XmlWriterSettings.Async 設為 true」。</span><span class="sxs-lookup"><span data-stu-id="a221d-799">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteNode">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-800">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-800">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="a221d-801">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span><span class="sxs-lookup"><span data-stu-id="a221d-801">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <summary><span data-ttu-id="a221d-802">將來源物件中的每個項目複製到目前的寫入器執行個體。</span><span class="sxs-lookup"><span data-stu-id="a221d-802">Copies everything from the source object to the current writer instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-803">這個方法的非同步版本，請參閱<xref:System.Xml.XmlWriter.WriteNodeAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="a221d-803">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteNodeAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteNode">
      <MemberSignature Language="C#" Value="public virtual void WriteNode (System.Xml.XmlReader reader, bool defattr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteNode(class System.Xml.XmlReader reader, bool defattr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteNode (reader As XmlReader, defattr As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteNode(System::Xml::XmlReader ^ reader, bool defattr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="defattr" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="a221d-804">要從其中讀取的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="a221d-804">The <see cref="T:System.Xml.XmlReader" /> to read from.</span></span></param>
        <param name="defattr">
          <span data-ttu-id="a221d-805">若要從 <see langword="true" /> 複製預設屬性，則為 <see langword="XmlReader" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a221d-805"><see langword="true" /> to copy the default attributes from the <see langword="XmlReader" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="a221d-806">在衍生類別中覆寫時，從讀取器複製所有內容至寫入器，並將讀取器移至下一個同層級 (Sibling) 的開頭。</span><span class="sxs-lookup"><span data-stu-id="a221d-806">When overridden in a derived class, copies everything from the reader to the writer and moves the reader to the start of the next sibling.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-807">下表顯示支援的節點型別，此方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-807">The following table shows the supported node types for this method.</span></span>  
  
|<span data-ttu-id="a221d-808">NodeType</span><span class="sxs-lookup"><span data-stu-id="a221d-808">NodeType</span></span>|<span data-ttu-id="a221d-809">WriteNode 行為</span><span class="sxs-lookup"><span data-stu-id="a221d-809">WriteNode Behavior</span></span>|  
|--------------|------------------------|  
|`None`|<span data-ttu-id="a221d-810">寫出不論類型為何的所有節點。</span><span class="sxs-lookup"><span data-stu-id="a221d-810">Writes out all the nodes irrespective of type.</span></span> <span data-ttu-id="a221d-811">也就是寫入器會消耗<xref:System.Xml.XmlReader>並寫出所有節點讀取包括屬性、 處理指示、 註解等等。</span><span class="sxs-lookup"><span data-stu-id="a221d-811">That is, the writer consumes the <xref:System.Xml.XmlReader> and writes out all the nodes read including attributes, processing instructions, comments, and so on.</span></span><br /><br /> <span data-ttu-id="a221d-812">發生這種情況時<xref:System.Xml.XmlReader>處於初始狀態。</span><span class="sxs-lookup"><span data-stu-id="a221d-812">This situation occurs when the <xref:System.Xml.XmlReader> is in an initial state.</span></span> <span data-ttu-id="a221d-813">(<xref:System.Xml.XmlReader.ReadState%2A?displayProperty=nameWithType>屬性會傳回`ReaderState.Initial`)。</span><span class="sxs-lookup"><span data-stu-id="a221d-813">(The <xref:System.Xml.XmlReader.ReadState%2A?displayProperty=nameWithType> property returns `ReaderState.Initial`).</span></span>|  
|`Element`|<span data-ttu-id="a221d-814">寫出項目節點和任何屬性節點。</span><span class="sxs-lookup"><span data-stu-id="a221d-814">Writes out the element node and any attribute nodes.</span></span>|  
|`Attribute`|<span data-ttu-id="a221d-815">無作業。</span><span class="sxs-lookup"><span data-stu-id="a221d-815">No operation.</span></span> <span data-ttu-id="a221d-816">請改用 <xref:System.Xml.XmlWriter.WriteStartAttribute%2A> 或 <xref:System.Xml.XmlWriter.WriteAttributeString%2A>。</span><span class="sxs-lookup"><span data-stu-id="a221d-816">Use <xref:System.Xml.XmlWriter.WriteStartAttribute%2A> or <xref:System.Xml.XmlWriter.WriteAttributeString%2A> instead.</span></span>|  
|`Text`|<span data-ttu-id="a221d-817">寫出文字節點。</span><span class="sxs-lookup"><span data-stu-id="a221d-817">Writes out the text node.</span></span>|  
|`CDATA`|<span data-ttu-id="a221d-818">寫出 CDATA 區段節點。</span><span class="sxs-lookup"><span data-stu-id="a221d-818">Writes out the CDATA section node.</span></span>|  
|`EntityReference`|<span data-ttu-id="a221d-819">寫出實體參考節點。</span><span class="sxs-lookup"><span data-stu-id="a221d-819">Writes out the entity reference node.</span></span>|  
|`ProcessingInstruction`|<span data-ttu-id="a221d-820">寫出處理指示節點。</span><span class="sxs-lookup"><span data-stu-id="a221d-820">Writes out the processing instruction node.</span></span>|  
|`Comment`|<span data-ttu-id="a221d-821">寫出註解節點。</span><span class="sxs-lookup"><span data-stu-id="a221d-821">Writes out the comment node.</span></span>|  
|`DocumentType`|<span data-ttu-id="a221d-822">寫出文件類型節點。</span><span class="sxs-lookup"><span data-stu-id="a221d-822">Writes out the document type node.</span></span>|  
|`SignificantWhitespace`|<span data-ttu-id="a221d-823">寫出顯著泛空白字元節點。</span><span class="sxs-lookup"><span data-stu-id="a221d-823">Writes out the significant white space node.</span></span>|  
|`Whitespace`|<span data-ttu-id="a221d-824">寫出泛空白字元節點。</span><span class="sxs-lookup"><span data-stu-id="a221d-824">Writes out the white space node.</span></span>|  
|`EndElement`|<span data-ttu-id="a221d-825">寫出結尾項目標記。</span><span class="sxs-lookup"><span data-stu-id="a221d-825">Writes out the end element tag.</span></span>|  
|`EndEntity`|<span data-ttu-id="a221d-826">無作業。</span><span class="sxs-lookup"><span data-stu-id="a221d-826">No operation.</span></span>|  
|`XmlDeclaration`|<span data-ttu-id="a221d-827">寫出 XML 宣告節點。</span><span class="sxs-lookup"><span data-stu-id="a221d-827">Writes out the XML declaration node.</span></span>|  
  
 <span data-ttu-id="a221d-828">如果讀取器中的初始狀態，這個方法會將讀取器移至檔案結尾。</span><span class="sxs-lookup"><span data-stu-id="a221d-828">If the reader is in the initial state, this method moves the reader to the end of file.</span></span> <span data-ttu-id="a221d-829">如果讀取器已經在檔案結尾，或處於已關閉狀態，這個方法是無法操作。</span><span class="sxs-lookup"><span data-stu-id="a221d-829">If the reader is already at the end of file or in a closed state, this method is non-operational.</span></span>  
  
 <span data-ttu-id="a221d-830">下列 C# 程式碼會將整個 XML 輸入文件複製到主控台：</span><span class="sxs-lookup"><span data-stu-id="a221d-830">The following C# code copies an entire XML input document to the console:</span></span>  
  
```csharp  
XmlReader reader = XmlReader.Create(myfile);  
XmlWriter writer = XmlWriter.Create(Console.Out);  
writer.WriteNode(reader, false);  
```  
  
 <span data-ttu-id="a221d-831">如果您已關閉的根節點都放置在正確，下列 C# 範例會寫出該節點的文件的其他位置。</span><span class="sxs-lookup"><span data-stu-id="a221d-831">If you have moved off the root node and are positioned elsewhere in the document the following C# example correctly writes out the nodes.</span></span>  
  
```csharp  
XmlReader reader = XmlReader.Create(myfile);  
reader.Read(); // Read PI  
reader.Read(); // Read Comment  
reader.Read(); // Read DOCType  
XmlWriter writer = XmlWriter.Create(Console.Out);  
while (!reader.EOF){  
  writer.WriteNode(reader, false);  
 }  
```  
  
 <span data-ttu-id="a221d-832">如果讀取器設定為會傳回空白字元，而且寫入器已設定為縮排輸出，`WriteNode`可能會產生奇怪的輸出。</span><span class="sxs-lookup"><span data-stu-id="a221d-832">If the reader is configured to return white space and the writer has is configured to indent output, `WriteNode` may produce strange output.</span></span> <span data-ttu-id="a221d-833">您實際上將得到雙精度浮點格式。</span><span class="sxs-lookup"><span data-stu-id="a221d-833">You will essentially be getting double formatting.</span></span>  
  
 <span data-ttu-id="a221d-834">這個方法的非同步版本，請參閱<xref:System.Xml.XmlWriter.WriteNodeAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="a221d-834">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteNodeAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a221d-835">下列範例會寫出至主控台的第一個和最後一個書籍節點。</span><span class="sxs-lookup"><span data-stu-id="a221d-835">The following example writes the first and last book nodes out to the console.</span></span>  
  
 [!code-cpp[XmlWriter.WriteNode#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.WriteNode/CPP/writenode.cpp#1)]
 [!code-csharp[XmlWriter.WriteNode#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteNode/CS/writenode.cs#1)]
 [!code-vb[XmlWriter.WriteNode#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteNode/VB/writenode.vb#1)]  
  
 <span data-ttu-id="a221d-836">此範例會使用該檔案，`books.xml`作為輸入。</span><span class="sxs-lookup"><span data-stu-id="a221d-836">The example uses the file, `books.xml`, as input.</span></span>  
  
 [!code-xml[XmlWriter.WriteNode#2](~/samples/snippets/xml/VS_Snippets_Data/XmlWriter.WriteNode/XML/books.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a221d-837"><paramref name="reader" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a221d-837"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a221d-838"><paramref name="reader" /> 包含無效字元。</span><span class="sxs-lookup"><span data-stu-id="a221d-838"><paramref name="reader" /> contains invalid characters.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-839">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-839">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="a221d-840">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span><span class="sxs-lookup"><span data-stu-id="a221d-840">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNode">
      <MemberSignature Language="C#" Value="public virtual void WriteNode (System.Xml.XPath.XPathNavigator navigator, bool defattr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteNode(class System.Xml.XPath.XPathNavigator navigator, bool defattr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteNode (navigator As XPathNavigator, defattr As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteNode(System::Xml::XPath::XPathNavigator ^ navigator, bool defattr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigator" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="defattr" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="navigator"><span data-ttu-id="a221d-841">要複製的來源 <see cref="T:System.Xml.XPath.XPathNavigator" />。</span><span class="sxs-lookup"><span data-stu-id="a221d-841">The <see cref="T:System.Xml.XPath.XPathNavigator" /> to copy from.</span></span></param>
        <param name="defattr">
          <span data-ttu-id="a221d-842"><see langword="true" /> 表示複製預設屬性，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a221d-842"><see langword="true" /> to copy the default attributes; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="a221d-843">將 <see cref="T:System.Xml.XPath.XPathNavigator" /> 物件中的所有項目複製到寫入器。</span><span class="sxs-lookup"><span data-stu-id="a221d-843">Copies everything from the <see cref="T:System.Xml.XPath.XPathNavigator" /> object to the writer.</span></span> <span data-ttu-id="a221d-844"><see cref="T:System.Xml.XPath.XPathNavigator" /> 的位置保持不變。</span><span class="sxs-lookup"><span data-stu-id="a221d-844">The position of the <see cref="T:System.Xml.XPath.XPathNavigator" /> remains unchanged.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-845">下表顯示支援`XPath`節點型別，這個方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-845">The following table shows the supported `XPath` node types for this method.</span></span>  
  
|<span data-ttu-id="a221d-846">XPathNodeType</span><span class="sxs-lookup"><span data-stu-id="a221d-846">XPathNodeType</span></span>|<span data-ttu-id="a221d-847">WriteNode 行為</span><span class="sxs-lookup"><span data-stu-id="a221d-847">WriteNode Behavior</span></span>|  
|-------------------|------------------------|  
|`Root`|<span data-ttu-id="a221d-848">寫出不論類型為何的所有節點。</span><span class="sxs-lookup"><span data-stu-id="a221d-848">Writes out all the nodes irrespective of type.</span></span> <span data-ttu-id="a221d-849">也就是寫入器會消耗<xref:System.Xml.XPath.XPathNavigator>並寫出所有節點，從根節點 （包括屬性、 處理指示、 註解等等）。</span><span class="sxs-lookup"><span data-stu-id="a221d-849">That is, the writer consumes the <xref:System.Xml.XPath.XPathNavigator> and writes out all the nodes from the root node (including attributes, processing instructions, comments and so on.)</span></span>|  
|`Element`|<span data-ttu-id="a221d-850">寫出項目節點和任何屬性節點。</span><span class="sxs-lookup"><span data-stu-id="a221d-850">Writes out the element node and any attribute nodes.</span></span>|  
|`Attribute`|<span data-ttu-id="a221d-851">無作業。</span><span class="sxs-lookup"><span data-stu-id="a221d-851">No operation.</span></span> <span data-ttu-id="a221d-852">請改用 <xref:System.Xml.XmlWriter.WriteStartAttribute%2A> 或 <xref:System.Xml.XmlWriter.WriteAttributeString%2A>。</span><span class="sxs-lookup"><span data-stu-id="a221d-852">Use <xref:System.Xml.XmlWriter.WriteStartAttribute%2A> or <xref:System.Xml.XmlWriter.WriteAttributeString%2A> instead.</span></span>|  
|`Text`|<span data-ttu-id="a221d-853">寫出文字節點。</span><span class="sxs-lookup"><span data-stu-id="a221d-853">Writes out the text node.</span></span>|  
|`Namespace`|<span data-ttu-id="a221d-854">無作業。</span><span class="sxs-lookup"><span data-stu-id="a221d-854">No operation.</span></span> <span data-ttu-id="a221d-855">使用<xref:System.Xml.XmlWriter.WriteStartAttribute%2A>或<xref:System.Xml.XmlWriter.WriteAttributeString%2A>方法寫入命名空間宣告。</span><span class="sxs-lookup"><span data-stu-id="a221d-855">Use the <xref:System.Xml.XmlWriter.WriteStartAttribute%2A> or <xref:System.Xml.XmlWriter.WriteAttributeString%2A> method to write the namespace declaration.</span></span>|  
|`ProcessingInstruction`|<span data-ttu-id="a221d-856">寫出處理指示節點。</span><span class="sxs-lookup"><span data-stu-id="a221d-856">Writes out the processing instruction node.</span></span>|  
|`Comment`|<span data-ttu-id="a221d-857">寫出註解節點。</span><span class="sxs-lookup"><span data-stu-id="a221d-857">Writes out the comment node.</span></span>|  
|`SignificantWhitespace`|<span data-ttu-id="a221d-858">寫出顯著泛空白字元節點。</span><span class="sxs-lookup"><span data-stu-id="a221d-858">Writes out the significant white space node.</span></span>|  
|`Whitespace`|<span data-ttu-id="a221d-859">寫出泛空白字元節點。</span><span class="sxs-lookup"><span data-stu-id="a221d-859">Writes out the white space node.</span></span>|  
  
 <span data-ttu-id="a221d-860">這個方法的非同步版本，請參閱<xref:System.Xml.XmlWriter.WriteNodeAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="a221d-860">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteNodeAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a221d-861">下列範例會使用<xref:System.Xml.XmlWriter.WriteNode%2A>方法從文件複製第一個書籍節點，並寫入主控台。</span><span class="sxs-lookup"><span data-stu-id="a221d-861">The following example uses the <xref:System.Xml.XmlWriter.WriteNode%2A> method to copy the first book node from a document and write it to the console.</span></span>  
  
 [!code-csharp[XmlWriteNode_nav#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriteNode_nav/CS/XmlWriteNode_nav.cs#1)]
 [!code-vb[XmlWriteNode_nav#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriteNode_nav/VB/XmlWriteNode_nav.vb#1)]  
  
 <span data-ttu-id="a221d-862">此範例會使用將 books.xml 檔案做為輸入。</span><span class="sxs-lookup"><span data-stu-id="a221d-862">The example uses the books.xml file as input.</span></span>  
  
 [!code-xml[XPathXMLExamples#1](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/books.xml#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a221d-863"><paramref name="navigator" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a221d-863"><paramref name="navigator" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-864">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-864">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="a221d-865">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span><span class="sxs-lookup"><span data-stu-id="a221d-865">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteNodeAsync">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-866">在未將 <see cref="P:System.Xml.XmlWriterSettings.Async" /> 旗標設為 <see langword="true" />的情況下呼叫了 <see cref="T:System.Xml.XmlWriter" /> 非同步方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-866">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="a221d-867">在此情況下，就會擲回 <see cref="T:System.InvalidOperationException" /> 並顯示訊息「如果您要使用非同步方法，請將 XmlWriterSettings.Async 設為 true」。</span><span class="sxs-lookup"><span data-stu-id="a221d-867">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <summary><span data-ttu-id="a221d-868">以非同步的方式將來源物件中的每個項目複製到目前的寫入器執行個體。</span><span class="sxs-lookup"><span data-stu-id="a221d-868">Asynchronously copies everything from the source object to the current writer instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-869">這是非同步版本<xref:System.Xml.XmlWriter.WriteNode%2A>，使用相同的功能。</span><span class="sxs-lookup"><span data-stu-id="a221d-869">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteNode%2A>, with the same functionality.</span></span> <span data-ttu-id="a221d-870">若要使用此方法，您必須設定<xref:System.Xml.XmlWriterSettings.Async%2A>旗標設為`true`。</span><span class="sxs-lookup"><span data-stu-id="a221d-870">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteNodeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteNodeAsync (System.Xml.XmlReader reader, bool defattr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteNodeAsync(class System.Xml.XmlReader reader, bool defattr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XmlReader,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteNodeAsync (reader As XmlReader, defattr As Boolean) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteNodeAsync(System::Xml::XmlReader ^ reader, bool defattr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="defattr" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="a221d-871">要從其中讀取的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="a221d-871">The <see cref="T:System.Xml.XmlReader" /> to read from.</span></span></param>
        <param name="defattr">
          <span data-ttu-id="a221d-872">若要從 <see langword="true" /> 複製預設屬性，則為 <see langword="XmlReader" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a221d-872"><see langword="true" /> to copy the default attributes from the <see langword="XmlReader" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="a221d-873">以非同步的方式從讀取器複製所有內容至寫入器，並將讀取器移至下一個同層級 (Sibling) 的開頭。</span><span class="sxs-lookup"><span data-stu-id="a221d-873">Asynchronously copies everything from the reader to the writer and moves the reader to the start of the next sibling.</span></span></summary>
        <returns><span data-ttu-id="a221d-874">表示非同步 <see langword="WriteNode" /> 作業的工作。</span><span class="sxs-lookup"><span data-stu-id="a221d-874">The task that represents the asynchronous <see langword="WriteNode" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-875">這是非同步版本<xref:System.Xml.XmlWriter.WriteNode%2A>，使用相同的功能。</span><span class="sxs-lookup"><span data-stu-id="a221d-875">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteNode%2A>, with the same functionality.</span></span> <span data-ttu-id="a221d-876">若要使用此方法，您必須設定<xref:System.Xml.XmlWriterSettings.Async%2A>旗標設為`true`。</span><span class="sxs-lookup"><span data-stu-id="a221d-876">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-877">在未將 <see cref="P:System.Xml.XmlWriterSettings.Async" /> 旗標設為 <see langword="true" />的情況下呼叫了 <see cref="T:System.Xml.XmlWriter" /> 非同步方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-877">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="a221d-878">在此情況下，就會擲回 <see cref="T:System.InvalidOperationException" /> 並顯示訊息「如果您要使用非同步方法，請將 XmlWriterSettings.Async 設為 true」。</span><span class="sxs-lookup"><span data-stu-id="a221d-878">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNodeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteNodeAsync (System.Xml.XPath.XPathNavigator navigator, bool defattr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteNodeAsync(class System.Xml.XPath.XPathNavigator navigator, bool defattr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XPath.XPathNavigator,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteNodeAsync (navigator As XPathNavigator, defattr As Boolean) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteNodeAsync(System::Xml::XPath::XPathNavigator ^ navigator, bool defattr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.Xml.XmlWriter/&lt;WriteNodeAsync&gt;c__async5))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigator" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="defattr" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="navigator"><span data-ttu-id="a221d-879">要複製的來源 <see cref="T:System.Xml.XPath.XPathNavigator" />。</span><span class="sxs-lookup"><span data-stu-id="a221d-879">The <see cref="T:System.Xml.XPath.XPathNavigator" /> to copy from.</span></span></param>
        <param name="defattr">
          <span data-ttu-id="a221d-880"><see langword="true" /> 表示複製預設屬性，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a221d-880"><see langword="true" /> to copy the default attributes; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="a221d-881">以非同步方式將所有項目從 <see cref="T:System.Xml.XPath.XPathNavigator" /> 物件複製到寫入器。</span><span class="sxs-lookup"><span data-stu-id="a221d-881">Asynchronously copies everything from the <see cref="T:System.Xml.XPath.XPathNavigator" /> object to the writer.</span></span> <span data-ttu-id="a221d-882"><see cref="T:System.Xml.XPath.XPathNavigator" /> 的位置保持不變。</span><span class="sxs-lookup"><span data-stu-id="a221d-882">The position of the <see cref="T:System.Xml.XPath.XPathNavigator" /> remains unchanged.</span></span></summary>
        <returns><span data-ttu-id="a221d-883">表示非同步 <see langword="WriteNode" /> 作業的工作。</span><span class="sxs-lookup"><span data-stu-id="a221d-883">The task that represents the asynchronous <see langword="WriteNode" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-884">這是非同步版本<xref:System.Xml.XmlWriter.WriteNode%2A>，使用相同的功能。</span><span class="sxs-lookup"><span data-stu-id="a221d-884">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteNode%2A>, with the same functionality.</span></span> <span data-ttu-id="a221d-885">若要使用此方法，您必須設定<xref:System.Xml.XmlWriterSettings.Async%2A>旗標設為`true`。</span><span class="sxs-lookup"><span data-stu-id="a221d-885">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-886">在未將 <see cref="P:System.Xml.XmlWriterSettings.Async" /> 旗標設為 <see langword="true" />的情況下呼叫了 <see cref="T:System.Xml.XmlWriter" /> 非同步方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-886">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="a221d-887">在此情況下，就會擲回 <see cref="T:System.InvalidOperationException" /> 並顯示訊息「如果您要使用非同步方法，請將 XmlWriterSettings.Async 設為 true」。</span><span class="sxs-lookup"><span data-stu-id="a221d-887">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteProcessingInstruction">
      <MemberSignature Language="C#" Value="public abstract void WriteProcessingInstruction (string name, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteProcessingInstruction(string name, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteProcessingInstruction(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteProcessingInstruction (name As String, text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteProcessingInstruction(System::String ^ name, System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="a221d-888">處理指示的名稱。</span><span class="sxs-lookup"><span data-stu-id="a221d-888">The name of the processing instruction.</span></span></param>
        <param name="text"><span data-ttu-id="a221d-889">要包含在處理指示中的文字。</span><span class="sxs-lookup"><span data-stu-id="a221d-889">The text to include in the processing instruction.</span></span></param>
        <summary><span data-ttu-id="a221d-890">在衍生類別中覆寫時，寫出名稱與文字之間有空白的處理指示，如下所示：&lt;?name text?&gt;。</span><span class="sxs-lookup"><span data-stu-id="a221d-890">When overridden in a derived class, writes out a processing instruction with a space between the name and text as follows: &lt;?name text?&gt;.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-891">這個方法可以用來撰寫 XML 宣告 (而非<xref:System.Xml.XmlWriter.WriteStartDocument%2A>)。</span><span class="sxs-lookup"><span data-stu-id="a221d-891">This method can be used to write the XML declaration (rather than <xref:System.Xml.XmlWriter.WriteStartDocument%2A>).</span></span> <span data-ttu-id="a221d-892">這可能導致錯誤寫入編碼屬性。</span><span class="sxs-lookup"><span data-stu-id="a221d-892">This could result in the encoding attribute being incorrectly written.</span></span> <span data-ttu-id="a221d-893">例如，下列 C# 程式碼會產生無效的 XML 文件中，因為預設的編碼為 utf-8。</span><span class="sxs-lookup"><span data-stu-id="a221d-893">For example, the following C# code would result in an invalid XML document because the default encoding is UTF-8.</span></span>  
  
```csharp  
XmlWriter writer = XmlWriter.Create("output.xml");  
writer.WriteProcessingInstruction("xml", "version='1.0' encoding='UTF-16'");  
writer.WriteStartElement("root");  
writer.Close();  
```  
  
 <span data-ttu-id="a221d-894">如果`text`是`null`或`String.Empty`，這個方法會寫入`ProcessingInstruction`沒有資料內容，例如\<？ 名稱？ >。</span><span class="sxs-lookup"><span data-stu-id="a221d-894">If `text` is either `null` or `String.Empty`, this method writes a `ProcessingInstruction` with no data content, for example \<?name?>.</span></span>  
  
 <span data-ttu-id="a221d-895">如果文字包含無效的序列"？ >"，<xref:System.Xml.XmlWriter>可以是 throw <xref:System.ArgumentException> (<xref:System.Xml.XmlTextWriter>物件) 或插入空格 」？</span><span class="sxs-lookup"><span data-stu-id="a221d-895">If text contains an invalid sequence of "?>", the <xref:System.Xml.XmlWriter> can either throw an <xref:System.ArgumentException> (<xref:System.Xml.XmlTextWriter> objects) or insert a space "?</span></span> <span data-ttu-id="a221d-896">> 「 若要避免撰寫不正確的 XML (<xref:System.Xml.XmlWriter>所建立的物件<xref:System.Xml.XmlWriter.Create%2A>方法)。</span><span class="sxs-lookup"><span data-stu-id="a221d-896">>" to avoid writing invalid XML (<xref:System.Xml.XmlWriter> objects created by the <xref:System.Xml.XmlWriter.Create%2A> method).</span></span>  
  
 <span data-ttu-id="a221d-897">這個方法的非同步版本，請參閱<xref:System.Xml.XmlWriter.WriteProcessingInstructionAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="a221d-897">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteProcessingInstructionAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a221d-898">下列範例會將 XML 檔案代表活頁簿。</span><span class="sxs-lookup"><span data-stu-id="a221d-898">The following example writes an XML file representing a book.</span></span>  
  
 [!code-csharp[XmlWriter.WriteStartDocument#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteStartDocument/CS/writerbook_v2.cs#1)]
 [!code-vb[XmlWriter.WriteStartDocument#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteStartDocument/VB/writerbook_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a221d-899">此文字會導致非語式正確的 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="a221d-899">The text would result in a non-well formed XML document.</span></span>  
  
 <span data-ttu-id="a221d-900"><paramref name="name" /> 為 <see langword="null" /> 或 <see langword="String.Empty" />。</span><span class="sxs-lookup"><span data-stu-id="a221d-900"><paramref name="name" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span></span>  
  
 <span data-ttu-id="a221d-901">在呼叫 <see cref="M:System.Xml.XmlWriter.WriteStartDocument" /> 之後，使用這個方法來建立 XML 宣告。</span><span class="sxs-lookup"><span data-stu-id="a221d-901">This method is being used to create an XML declaration after <see cref="M:System.Xml.XmlWriter.WriteStartDocument" /> has already been called.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-902">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-902">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="a221d-903">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span><span class="sxs-lookup"><span data-stu-id="a221d-903">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteProcessingInstructionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteProcessingInstructionAsync (string name, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteProcessingInstructionAsync(string name, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteProcessingInstructionAsync(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteProcessingInstructionAsync (name As String, text As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteProcessingInstructionAsync(System::String ^ name, System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="a221d-904">處理指示的名稱。</span><span class="sxs-lookup"><span data-stu-id="a221d-904">The name of the processing instruction.</span></span></param>
        <param name="text"><span data-ttu-id="a221d-905">要包含在處理指示中的文字。</span><span class="sxs-lookup"><span data-stu-id="a221d-905">The text to include in the processing instruction.</span></span></param>
        <summary><span data-ttu-id="a221d-906">以非同步方式寫出名稱與文字之間有空白的處理指示，如下所示：&lt;?name text?&gt;。</span><span class="sxs-lookup"><span data-stu-id="a221d-906">Asynchronously writes out a processing instruction with a space between the name and text as follows: &lt;?name text?&gt;.</span></span></summary>
        <returns><span data-ttu-id="a221d-907">表示非同步 <see langword="WriteProcessingInstruction" /> 作業的工作。</span><span class="sxs-lookup"><span data-stu-id="a221d-907">The task that represents the asynchronous <see langword="WriteProcessingInstruction" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-908">這是非同步版本<xref:System.Xml.XmlWriter.WriteProcessingInstruction%2A>，使用相同的功能。</span><span class="sxs-lookup"><span data-stu-id="a221d-908">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteProcessingInstruction%2A>, with the same functionality.</span></span> <span data-ttu-id="a221d-909">若要使用此方法，您必須設定<xref:System.Xml.XmlWriterSettings.Async%2A>旗標設為`true`。</span><span class="sxs-lookup"><span data-stu-id="a221d-909">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-910">在未將 <see cref="P:System.Xml.XmlWriterSettings.Async" /> 旗標設為 <see langword="true" />的情況下呼叫了 <see cref="T:System.Xml.XmlWriter" /> 非同步方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-910">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="a221d-911">在此情況下，就會擲回 <see cref="T:System.InvalidOperationException" /> 並顯示訊息「如果您要使用非同步方法，請將 XmlWriterSettings.Async 設為 true」。</span><span class="sxs-lookup"><span data-stu-id="a221d-911">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteQualifiedName">
      <MemberSignature Language="C#" Value="public virtual void WriteQualifiedName (string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteQualifiedName(string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteQualifiedName(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteQualifiedName (localName As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteQualifiedName(System::String ^ localName, System::String ^ ns);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="a221d-912">要寫入的區域名稱。</span><span class="sxs-lookup"><span data-stu-id="a221d-912">The local name to write.</span></span></param>
        <param name="ns"><span data-ttu-id="a221d-913">這個名稱的命名空間 URI。</span><span class="sxs-lookup"><span data-stu-id="a221d-913">The namespace URI for the name.</span></span></param>
        <summary><span data-ttu-id="a221d-914">在衍生類別中覆寫時，寫出命名空間限定名稱。</span><span class="sxs-lookup"><span data-stu-id="a221d-914">When overridden in a derived class, writes out the namespace-qualified name.</span></span> <span data-ttu-id="a221d-915">這個方法會查詢在指定之命名空間範圍中的前置詞。</span><span class="sxs-lookup"><span data-stu-id="a221d-915">This method looks up the prefix that is in scope for the given namespace.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-916">如果`ns`產生對應至目前的預設命名空間，沒有前置詞。</span><span class="sxs-lookup"><span data-stu-id="a221d-916">If `ns` maps to the current default namespace, no prefix is generated.</span></span>  
  
 <span data-ttu-id="a221d-917">當寫入屬性值，這個方法會產生前置詞如果`ns`找不到。</span><span class="sxs-lookup"><span data-stu-id="a221d-917">When writing attribute values, this method generates a prefix if `ns` is not found.</span></span> <span data-ttu-id="a221d-918">當寫入項目內容，它會擲回例外狀況如果`ns`找不到。</span><span class="sxs-lookup"><span data-stu-id="a221d-918">When writing element content, it throws an exception if `ns` is not found.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a221d-919">如果類別衍生自<xref:System.Xml.XmlWriter>不會覆寫這個方法`localName`不會檢查為有效的 W3C XML 名稱。</span><span class="sxs-lookup"><span data-stu-id="a221d-919">If a class derived from the <xref:System.Xml.XmlWriter> does not override this method `localName` is not checked to be a valid W3C XML name.</span></span> <span data-ttu-id="a221d-920">在這種情況下，才能呼叫這個方法，該字串的有效性可以檢查<xref:System.Xml.XmlReader.IsName%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-920">In such case, before calling this method, the validity of the string can be checked by <xref:System.Xml.XmlReader.IsName%2A> method.</span></span>  
  
 <span data-ttu-id="a221d-921">這個方法的非同步版本，請參閱<xref:System.Xml.XmlWriter.WriteQualifiedNameAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="a221d-921">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteQualifiedNameAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a221d-922">此範例會將下列項目：</span><span class="sxs-lookup"><span data-stu-id="a221d-922">The example writes the following element:</span></span>  
  
```xml  
<root xmlns:x="urn:abc">  
  <item href="#x:test"/>  
</root>  
```  
  
 [!code-csharp[XmlWriter_v2#5](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter_v2/CS/writer_v2.cs#5)]
 [!code-vb[XmlWriter_v2#5](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter_v2/VB/writer_v2.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a221d-923"><paramref name="localName" /> 為 <see langword="null" /> 或 <see langword="String.Empty" />。</span><span class="sxs-lookup"><span data-stu-id="a221d-923"><paramref name="localName" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span></span>  
  
 <span data-ttu-id="a221d-924"><paramref name="localName" /> 不是有效的名稱。</span><span class="sxs-lookup"><span data-stu-id="a221d-924"><paramref name="localName" /> is not a valid name.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-925">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-925">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="a221d-926">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span><span class="sxs-lookup"><span data-stu-id="a221d-926">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteQualifiedNameAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteQualifiedNameAsync (string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteQualifiedNameAsync(string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteQualifiedNameAsync(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteQualifiedNameAsync (localName As String, ns As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteQualifiedNameAsync(System::String ^ localName, System::String ^ ns);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.Xml.XmlWriter/&lt;WriteQualifiedNameAsync&gt;c__async1))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="a221d-927">要寫入的區域名稱。</span><span class="sxs-lookup"><span data-stu-id="a221d-927">The local name to write.</span></span></param>
        <param name="ns"><span data-ttu-id="a221d-928">這個名稱的命名空間 URI。</span><span class="sxs-lookup"><span data-stu-id="a221d-928">The namespace URI for the name.</span></span></param>
        <summary><span data-ttu-id="a221d-929">以非同步的方式寫出命名空間限定名稱。</span><span class="sxs-lookup"><span data-stu-id="a221d-929">Asynchronously writes out the namespace-qualified name.</span></span> <span data-ttu-id="a221d-930">這個方法會查詢在指定之命名空間範圍中的前置詞。</span><span class="sxs-lookup"><span data-stu-id="a221d-930">This method looks up the prefix that is in scope for the given namespace.</span></span></summary>
        <returns><span data-ttu-id="a221d-931">表示非同步 <see langword="WriteQualifiedName" /> 作業的工作。</span><span class="sxs-lookup"><span data-stu-id="a221d-931">The task that represents the asynchronous <see langword="WriteQualifiedName" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-932">這是非同步版本<xref:System.Xml.XmlWriter.WriteQualifiedName%2A>，使用相同的功能。</span><span class="sxs-lookup"><span data-stu-id="a221d-932">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteQualifiedName%2A>, with the same functionality.</span></span> <span data-ttu-id="a221d-933">若要使用此方法，您必須設定<xref:System.Xml.XmlWriterSettings.Async%2A>旗標設為`true`。</span><span class="sxs-lookup"><span data-stu-id="a221d-933">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-934">在未將 <see cref="P:System.Xml.XmlWriterSettings.Async" /> 旗標設為 <see langword="true" />的情況下呼叫了 <see cref="T:System.Xml.XmlWriter" /> 非同步方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-934">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="a221d-935">在此情況下，就會擲回 <see cref="T:System.InvalidOperationException" /> 並顯示訊息「如果您要使用非同步方法，請將 XmlWriterSettings.Async 設為 true」。</span><span class="sxs-lookup"><span data-stu-id="a221d-935">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteRaw">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-936">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-936">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="a221d-937">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span><span class="sxs-lookup"><span data-stu-id="a221d-937">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <summary><span data-ttu-id="a221d-938">在衍生類別中覆寫時，手動寫入未經處理的標記。</span><span class="sxs-lookup"><span data-stu-id="a221d-938">When overridden in a derived class, writes raw markup manually.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-939">這個方法的非同步版本，請參閱<xref:System.Xml.XmlWriter.WriteRawAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="a221d-939">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteRawAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteRaw">
      <MemberSignature Language="C#" Value="public abstract void WriteRaw (string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteRaw(string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteRaw(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteRaw (data As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteRaw(System::String ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="a221d-940">包含要寫入之文字的字串。</span><span class="sxs-lookup"><span data-stu-id="a221d-940">String containing the text to write.</span></span></param>
        <summary><span data-ttu-id="a221d-941">在衍生類別中覆寫時，從字串手動寫入未經處理的標記 (Raw Markup)。</span><span class="sxs-lookup"><span data-stu-id="a221d-941">When overridden in a derived class, writes raw markup manually from a string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-942">這個方法不會逸出特殊字元。</span><span class="sxs-lookup"><span data-stu-id="a221d-942">This method does not escape special characters.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="a221d-943"><xref:System.Xml.XmlWriter>不會驗證資料傳遞至<xref:System.Xml.XmlWriter.WriteRaw%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-943">The <xref:System.Xml.XmlWriter> does not validate the data that is passed to the <xref:System.Xml.XmlWriter.WriteRaw%2A> method.</span></span> <span data-ttu-id="a221d-944">您不應該將任意資料傳遞至這個方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-944">You should not pass arbitrary data to this method.</span></span>  
  
 <span data-ttu-id="a221d-945">這個方法的非同步版本，請參閱<xref:System.Xml.XmlWriter.WriteRawAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="a221d-945">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteRawAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a221d-946">請參閱<xref:System.Xml.XmlTextWriter.WriteRaw%2A?displayProperty=nameWithType>如需使用此方法的範例。</span><span class="sxs-lookup"><span data-stu-id="a221d-946">See <xref:System.Xml.XmlTextWriter.WriteRaw%2A?displayProperty=nameWithType> for an example using this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a221d-947"><paramref name="data" /> 為 <see langword="null" /> 或 <see langword="String.Empty" />。</span><span class="sxs-lookup"><span data-stu-id="a221d-947"><paramref name="data" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-948">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-948">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="a221d-949">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span><span class="sxs-lookup"><span data-stu-id="a221d-949">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteRaw">
      <MemberSignature Language="C#" Value="public abstract void WriteRaw (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteRaw(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteRaw(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteRaw (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteRaw(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="a221d-950">包含要寫入之文字的字元陣列。</span><span class="sxs-lookup"><span data-stu-id="a221d-950">Character array containing the text to write.</span></span></param>
        <param name="index"><span data-ttu-id="a221d-951">緩衝區中指示要寫入的文字開頭的位置。</span><span class="sxs-lookup"><span data-stu-id="a221d-951">The position within the buffer indicating the start of the text to write.</span></span></param>
        <param name="count"><span data-ttu-id="a221d-952">要寫入的字元數。</span><span class="sxs-lookup"><span data-stu-id="a221d-952">The number of characters to write.</span></span></param>
        <summary><span data-ttu-id="a221d-953">在衍生類別中覆寫時，從字元緩衝區手動寫入未經處理的標記。</span><span class="sxs-lookup"><span data-stu-id="a221d-953">When overridden in a derived class, writes raw markup manually from a character buffer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-954">這個方法不會逸出特殊字元。</span><span class="sxs-lookup"><span data-stu-id="a221d-954">This method does not escape special characters.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="a221d-955"><xref:System.Xml.XmlWriter>不會驗證資料傳遞至<xref:System.Xml.XmlWriter.WriteRaw%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-955">The <xref:System.Xml.XmlWriter> does not validate the data that is passed to the <xref:System.Xml.XmlWriter.WriteRaw%2A> method.</span></span> <span data-ttu-id="a221d-956">您不應該將任意資料傳遞至這個方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-956">You should not pass arbitrary data to this method.</span></span>  
  
 <span data-ttu-id="a221d-957">這個方法的非同步版本，請參閱<xref:System.Xml.XmlWriter.WriteRawAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="a221d-957">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteRawAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a221d-958"><paramref name="buffer" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a221d-958"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a221d-959"><paramref name="index" /> 或 <paramref name="count" /> 小於零。</span><span class="sxs-lookup"><span data-stu-id="a221d-959"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
 <span data-ttu-id="a221d-960">-或-</span><span class="sxs-lookup"><span data-stu-id="a221d-960">-or-</span></span>  
  
 <span data-ttu-id="a221d-961">緩衝區長度減去 <paramref name="index" /> 小於 <paramref name="count" />。</span><span class="sxs-lookup"><span data-stu-id="a221d-961">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-962">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-962">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="a221d-963">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span><span class="sxs-lookup"><span data-stu-id="a221d-963">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteRawAsync">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-964">在未將 <see cref="P:System.Xml.XmlWriterSettings.Async" /> 旗標設為 <see langword="true" />的情況下呼叫了 <see cref="T:System.Xml.XmlWriter" /> 非同步方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-964">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="a221d-965">在此情況下，就會擲回 <see cref="T:System.InvalidOperationException" /> 並顯示訊息「如果您要使用非同步方法，請將 XmlWriterSettings.Async 設為 true」。</span><span class="sxs-lookup"><span data-stu-id="a221d-965">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <summary><span data-ttu-id="a221d-966">以非同步的方式手動寫入未經處理的標記 (Raw Markup)。</span><span class="sxs-lookup"><span data-stu-id="a221d-966">Asynchronously writes raw markup manually.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-967">這是非同步版本<xref:System.Xml.XmlWriter.WriteRaw%2A>，使用相同的功能。</span><span class="sxs-lookup"><span data-stu-id="a221d-967">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteRaw%2A>, with the same functionality.</span></span> <span data-ttu-id="a221d-968">若要使用此方法，您必須設定<xref:System.Xml.XmlWriterSettings.Async%2A>旗標設為`true`。</span><span class="sxs-lookup"><span data-stu-id="a221d-968">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteRawAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteRawAsync (string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteRawAsync(string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteRawAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteRawAsync (data As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteRawAsync(System::String ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="a221d-969">包含要寫入之文字的字串。</span><span class="sxs-lookup"><span data-stu-id="a221d-969">String containing the text to write.</span></span></param>
        <summary><span data-ttu-id="a221d-970">以非同步的方式從字串手動寫入未經處理的標記 (Raw Markup)。</span><span class="sxs-lookup"><span data-stu-id="a221d-970">Asynchronously writes raw markup manually from a string.</span></span></summary>
        <returns><span data-ttu-id="a221d-971">表示非同步 <see langword="WriteRaw" /> 作業的工作。</span><span class="sxs-lookup"><span data-stu-id="a221d-971">The task that represents the asynchronous <see langword="WriteRaw" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-972">這是非同步版本<xref:System.Xml.XmlWriter.WriteRaw%2A>，使用相同的功能。</span><span class="sxs-lookup"><span data-stu-id="a221d-972">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteRaw%2A>, with the same functionality.</span></span> <span data-ttu-id="a221d-973">若要使用此方法，您必須設定<xref:System.Xml.XmlWriterSettings.Async%2A>旗標設為`true`。</span><span class="sxs-lookup"><span data-stu-id="a221d-973">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-974">在未將 <see cref="P:System.Xml.XmlWriterSettings.Async" /> 旗標設為 <see langword="true" />的情況下呼叫了 <see cref="T:System.Xml.XmlWriter" /> 非同步方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-974">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="a221d-975">在此情況下，就會擲回 <see cref="T:System.InvalidOperationException" /> 並顯示訊息「如果您要使用非同步方法，請將 XmlWriterSettings.Async 設為 true」。</span><span class="sxs-lookup"><span data-stu-id="a221d-975">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteRawAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteRawAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteRawAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteRawAsync(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteRawAsync (buffer As Char(), index As Integer, count As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteRawAsync(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="a221d-976">包含要寫入之文字的字元陣列。</span><span class="sxs-lookup"><span data-stu-id="a221d-976">Character array containing the text to write.</span></span></param>
        <param name="index"><span data-ttu-id="a221d-977">緩衝區中指示要寫入的文字開頭的位置。</span><span class="sxs-lookup"><span data-stu-id="a221d-977">The position within the buffer indicating the start of the text to write.</span></span></param>
        <param name="count"><span data-ttu-id="a221d-978">要寫入的字元數。</span><span class="sxs-lookup"><span data-stu-id="a221d-978">The number of characters to write.</span></span></param>
        <summary><span data-ttu-id="a221d-979">以非同步的方式從字元緩衝區手動寫入未經處理的標記。</span><span class="sxs-lookup"><span data-stu-id="a221d-979">Asynchronously writes raw markup manually from a character buffer.</span></span></summary>
        <returns><span data-ttu-id="a221d-980">表示非同步 <see langword="WriteRaw" /> 作業的工作。</span><span class="sxs-lookup"><span data-stu-id="a221d-980">The task that represents the asynchronous <see langword="WriteRaw" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-981">這是非同步版本<xref:System.Xml.XmlWriter.WriteRaw%2A>，使用相同的功能。</span><span class="sxs-lookup"><span data-stu-id="a221d-981">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteRaw%2A>, with the same functionality.</span></span> <span data-ttu-id="a221d-982">若要使用此方法，您必須設定<xref:System.Xml.XmlWriterSettings.Async%2A>旗標設為`true`。</span><span class="sxs-lookup"><span data-stu-id="a221d-982">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-983">在未將 <see cref="P:System.Xml.XmlWriterSettings.Async" /> 旗標設為 <see langword="true" />的情況下呼叫了 <see cref="T:System.Xml.XmlWriter" /> 非同步方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-983">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="a221d-984">在此情況下，就會擲回 <see cref="T:System.InvalidOperationException" /> 並顯示訊息「如果您要使用非同步方法，請將 XmlWriterSettings.Async 設為 true」。</span><span class="sxs-lookup"><span data-stu-id="a221d-984">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteStartAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-985">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-985">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="a221d-986">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span><span class="sxs-lookup"><span data-stu-id="a221d-986">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <summary><span data-ttu-id="a221d-987">在衍生類別中覆寫時，寫入屬性的開頭。</span><span class="sxs-lookup"><span data-stu-id="a221d-987">When overridden in a derived class, writes the start of an attribute.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-988">這個方法的非同步版本，請參閱<xref:System.Xml.XmlWriter.WriteStartAttributeAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="a221d-988">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteStartAttributeAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteStartAttribute">
      <MemberSignature Language="C#" Value="public void WriteStartAttribute (string localName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStartAttribute(string localName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteStartAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStartAttribute (localName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStartAttribute(System::String ^ localName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="a221d-989">屬性的本機名稱。</span><span class="sxs-lookup"><span data-stu-id="a221d-989">The local name of the attribute.</span></span></param>
        <summary><span data-ttu-id="a221d-990">寫入具有指定之區域名稱的屬性開頭。</span><span class="sxs-lookup"><span data-stu-id="a221d-990">Writes the start of an attribute with the specified local name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-991">這個方法可讓您撰寫使用多個寫入方法的值。</span><span class="sxs-lookup"><span data-stu-id="a221d-991">This method enables you to write a value using multiple Write methods.</span></span>  
  
 <span data-ttu-id="a221d-992">這個方法的非同步版本，請參閱<xref:System.Xml.XmlWriter.WriteStartAttributeAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="a221d-992">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteStartAttributeAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-993">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-993">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="a221d-994">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span><span class="sxs-lookup"><span data-stu-id="a221d-994">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="a221d-995">緩衝區中有一個字元，其為有效的 XML 字元，但對輸出編碼而言無效。</span><span class="sxs-lookup"><span data-stu-id="a221d-995">There is a character in the buffer that is a valid XML character but is not valid for the output encoding.</span></span> <span data-ttu-id="a221d-996">比方說如果輸出的編碼方式為 ASCII，您應該在項目與屬性名稱中只使用範圍從 0 至 127 的字元。</span><span class="sxs-lookup"><span data-stu-id="a221d-996">For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names.</span></span> <span data-ttu-id="a221d-997">無效的字元可能是在這個方法的引數中，或在先前已寫入至緩衝區的方法的引數中。</span><span class="sxs-lookup"><span data-stu-id="a221d-997">The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer.</span></span> <span data-ttu-id="a221d-998">字元實體參考會盡可能逸出這類字元 (比方說在文字節點或屬性值中)。</span><span class="sxs-lookup"><span data-stu-id="a221d-998">Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values).</span></span> <span data-ttu-id="a221d-999">不過，在項目與屬性名稱、註解、處理指示或 CDATA 區段中不允許字元實體參考。</span><span class="sxs-lookup"><span data-stu-id="a221d-999">However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartAttribute">
      <MemberSignature Language="C#" Value="public void WriteStartAttribute (string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStartAttribute(string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStartAttribute (localName As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStartAttribute(System::String ^ localName, System::String ^ ns);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="a221d-1000">屬性的本機名稱。</span><span class="sxs-lookup"><span data-stu-id="a221d-1000">The local name of the attribute.</span></span></param>
        <param name="ns"><span data-ttu-id="a221d-1001">屬性的命名空間 URI。</span><span class="sxs-lookup"><span data-stu-id="a221d-1001">The namespace URI of the attribute.</span></span></param>
        <summary><span data-ttu-id="a221d-1002">寫入具有指定之區域名稱和命名空間 URI 之屬性的開頭。</span><span class="sxs-lookup"><span data-stu-id="a221d-1002">Writes the start of an attribute with the specified local name and namespace URI.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-1003">這是更進階的版本<xref:System.Xml.XmlWriter.WriteAttributeString%2A>，可讓您使用多個寫入方法，如屬性值寫入<xref:System.Xml.XmlWriter.WriteString%2A>， <xref:System.Xml.XmlWriter.WriteQualifiedName%2A>，依此類推。</span><span class="sxs-lookup"><span data-stu-id="a221d-1003">This is a more advanced version of <xref:System.Xml.XmlWriter.WriteAttributeString%2A> that allows you to write an attribute value using multiple write methods, such as <xref:System.Xml.XmlWriter.WriteString%2A>, <xref:System.Xml.XmlWriter.WriteQualifiedName%2A>, and so on.</span></span>  
  
 <span data-ttu-id="a221d-1004">這個方法的非同步版本，請參閱<xref:System.Xml.XmlWriter.WriteStartAttributeAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="a221d-1004">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteStartAttributeAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a221d-1005">請參閱<xref:System.Xml.XmlTextWriter.WriteStartAttribute%2A?displayProperty=nameWithType>如需使用此方法的範例。</span><span class="sxs-lookup"><span data-stu-id="a221d-1005">See <xref:System.Xml.XmlTextWriter.WriteStartAttribute%2A?displayProperty=nameWithType> for an example using this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="a221d-1006">緩衝區中有一個字元，其為有效的 XML 字元，但對輸出編碼而言無效。</span><span class="sxs-lookup"><span data-stu-id="a221d-1006">There is a character in the buffer that is a valid XML character but is not valid for the output encoding.</span></span> <span data-ttu-id="a221d-1007">比方說如果輸出的編碼方式為 ASCII，您應該在項目與屬性名稱中只使用範圍從 0 至 127 的字元。</span><span class="sxs-lookup"><span data-stu-id="a221d-1007">For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names.</span></span> <span data-ttu-id="a221d-1008">無效的字元可能是在這個方法的引數中，或在先前已寫入至緩衝區的方法的引數中。</span><span class="sxs-lookup"><span data-stu-id="a221d-1008">The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer.</span></span> <span data-ttu-id="a221d-1009">字元實體參考會盡可能逸出這類字元 (比方說在文字節點或屬性值中)。</span><span class="sxs-lookup"><span data-stu-id="a221d-1009">Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values).</span></span> <span data-ttu-id="a221d-1010">不過，在項目與屬性名稱、註解、處理指示或 CDATA 區段中不允許字元實體參考。</span><span class="sxs-lookup"><span data-stu-id="a221d-1010">However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-1011">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-1011">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="a221d-1012">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span><span class="sxs-lookup"><span data-stu-id="a221d-1012">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <altmember cref="M:System.Xml.XmlWriter.WriteEndAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteStartAttribute">
      <MemberSignature Language="C#" Value="public abstract void WriteStartAttribute (string prefix, string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteStartAttribute(string prefix, string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteStartAttribute (prefix As String, localName As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteStartAttribute(System::String ^ prefix, System::String ^ localName, System::String ^ ns);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="a221d-1013">屬性的命名空間前置詞。</span><span class="sxs-lookup"><span data-stu-id="a221d-1013">The namespace prefix of the attribute.</span></span></param>
        <param name="localName"><span data-ttu-id="a221d-1014">屬性的本機名稱。</span><span class="sxs-lookup"><span data-stu-id="a221d-1014">The local name of the attribute.</span></span></param>
        <param name="ns"><span data-ttu-id="a221d-1015">屬性的命名空間 URI。</span><span class="sxs-lookup"><span data-stu-id="a221d-1015">The namespace URI for the attribute.</span></span></param>
        <summary><span data-ttu-id="a221d-1016">在衍生類別中覆寫時，寫入具有指定的前置詞、區域名稱和命名空間 URI 之屬性的開頭。</span><span class="sxs-lookup"><span data-stu-id="a221d-1016">When overridden in a derived class, writes the start of an attribute with the specified prefix, local name, and namespace URI.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-1017">這個方法可讓您撰寫使用多個寫入方法的值。</span><span class="sxs-lookup"><span data-stu-id="a221d-1017">This method enables you to write a value using multiple Write methods.</span></span>  
  
 <span data-ttu-id="a221d-1018">這個方法的非同步版本，請參閱<xref:System.Xml.XmlWriter.WriteStartAttributeAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="a221d-1018">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteStartAttributeAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="a221d-1019">緩衝區中有一個字元，其為有效的 XML 字元，但對輸出編碼而言無效。</span><span class="sxs-lookup"><span data-stu-id="a221d-1019">There is a character in the buffer that is a valid XML character but is not valid for the output encoding.</span></span> <span data-ttu-id="a221d-1020">比方說如果輸出的編碼方式為 ASCII，您應該在項目與屬性名稱中只使用範圍從 0 至 127 的字元。</span><span class="sxs-lookup"><span data-stu-id="a221d-1020">For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names.</span></span> <span data-ttu-id="a221d-1021">無效的字元可能是在這個方法的引數中，或在先前已寫入至緩衝區的方法的引數中。</span><span class="sxs-lookup"><span data-stu-id="a221d-1021">The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer.</span></span> <span data-ttu-id="a221d-1022">字元實體參考會盡可能逸出這類字元 (比方說在文字節點或屬性值中)。</span><span class="sxs-lookup"><span data-stu-id="a221d-1022">Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values).</span></span> <span data-ttu-id="a221d-1023">不過，在項目與屬性名稱、註解、處理指示或 CDATA 區段中不允許字元實體參考。</span><span class="sxs-lookup"><span data-stu-id="a221d-1023">However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-1024">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-1024">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="a221d-1025">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span><span class="sxs-lookup"><span data-stu-id="a221d-1025">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartAttributeAsync">
      <MemberSignature Language="C#" Value="protected internal virtual System.Threading.Tasks.Task WriteStartAttributeAsync (string prefix, string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Threading.Tasks.Task WriteStartAttributeAsync(string prefix, string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteStartAttributeAsync(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function WriteStartAttributeAsync (prefix As String, localName As String, ns As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Threading::Tasks::Task ^ WriteStartAttributeAsync(System::String ^ prefix, System::String ^ localName, System::String ^ ns);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="a221d-1026">屬性的命名空間前置詞。</span><span class="sxs-lookup"><span data-stu-id="a221d-1026">The namespace prefix of the attribute.</span></span></param>
        <param name="localName"><span data-ttu-id="a221d-1027">屬性的本機名稱。</span><span class="sxs-lookup"><span data-stu-id="a221d-1027">The local name of the attribute.</span></span></param>
        <param name="ns"><span data-ttu-id="a221d-1028">屬性的命名空間 URI。</span><span class="sxs-lookup"><span data-stu-id="a221d-1028">The namespace URI for the attribute.</span></span></param>
        <summary><span data-ttu-id="a221d-1029">以非同步的方式寫入具有指定之前置詞、本機名稱和命名空間 URI 之屬性的開頭。</span><span class="sxs-lookup"><span data-stu-id="a221d-1029">Asynchronously writes the start of an attribute with the specified prefix, local name, and namespace URI.</span></span></summary>
        <returns><span data-ttu-id="a221d-1030">表示非同步 <see langword="WriteStartAttribute" /> 作業的工作。</span><span class="sxs-lookup"><span data-stu-id="a221d-1030">The task that represents the asynchronous <see langword="WriteStartAttribute" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-1031">這是非同步版本<xref:System.Xml.XmlWriter.WriteStartAttribute%2A>，使用相同的功能。</span><span class="sxs-lookup"><span data-stu-id="a221d-1031">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteStartAttribute%2A>, with the same functionality.</span></span> <span data-ttu-id="a221d-1032">若要使用此方法，您必須設定<xref:System.Xml.XmlWriterSettings.Async%2A>旗標設為`true`。</span><span class="sxs-lookup"><span data-stu-id="a221d-1032">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-1033">在未將 <see cref="P:System.Xml.XmlWriterSettings.Async" /> 旗標設為 <see langword="true" />的情況下呼叫了 <see cref="T:System.Xml.XmlWriter" /> 非同步方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-1033">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="a221d-1034">在此情況下，就會擲回 <see cref="T:System.InvalidOperationException" /> 並顯示訊息「如果您要使用非同步方法，請將 XmlWriterSettings.Async 設為 true」。</span><span class="sxs-lookup"><span data-stu-id="a221d-1034">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteStartDocument">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-1035">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-1035">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="a221d-1036">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span><span class="sxs-lookup"><span data-stu-id="a221d-1036">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <summary><span data-ttu-id="a221d-1037">在衍生類別中覆寫時，寫入 XML 宣告。</span><span class="sxs-lookup"><span data-stu-id="a221d-1037">When overridden in a derived class, writes the XML declaration.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-1038">這個方法的非同步版本，請參閱<xref:System.Xml.XmlWriter.WriteStartDocumentAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="a221d-1038">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteStartDocumentAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteStartDocument">
      <MemberSignature Language="C#" Value="public abstract void WriteStartDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteStartDocument() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteStartDocument" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteStartDocument ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteStartDocument();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a221d-1039">在衍生類別中覆寫時，使用「1.0」版寫入 XML 宣告。</span><span class="sxs-lookup"><span data-stu-id="a221d-1039">When overridden in a derived class, writes the XML declaration with the version "1.0".</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-1040">寫入器實作的方式取決於文件的編碼方式的層級。</span><span class="sxs-lookup"><span data-stu-id="a221d-1040">The encoding level of the document is determined by how the writer is implemented.</span></span> <span data-ttu-id="a221d-1041">例如，如果<xref:System.Text.Encoding>中指定物件`XmlTextWriter`建構函式，這會決定編碼屬性的值。</span><span class="sxs-lookup"><span data-stu-id="a221d-1041">For example, if an <xref:System.Text.Encoding> object is specified in the `XmlTextWriter` constructor, this determines the value of the encoding attribute.</span></span> <span data-ttu-id="a221d-1042">這個方法不會建立獨立屬性。</span><span class="sxs-lookup"><span data-stu-id="a221d-1042">This method does not create a standalone attribute.</span></span>  
  
 <span data-ttu-id="a221d-1043">當`WriteStartDocument`呼叫寫入器會驗證您要撰寫是否格式正確的 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="a221d-1043">When `WriteStartDocument` is called the writer validates that what you are writing is a well-formed XML document.</span></span> <span data-ttu-id="a221d-1044">例如，它會檢查 XML 宣告，第一個節點，其中，只能有一個根層級項目存在，以此類推。</span><span class="sxs-lookup"><span data-stu-id="a221d-1044">For example, it checks that the XML declaration is the first node, that one and only one root-level element exists, and so on.</span></span> <span data-ttu-id="a221d-1045">如果未呼叫此方法，則寫入器會假設正在寫入的 XML 片段，並不套用任何根層級的規則。</span><span class="sxs-lookup"><span data-stu-id="a221d-1045">If this method is not called, the writer assumes an XML fragment is being written and applies no root level rules.</span></span>  
  
 <span data-ttu-id="a221d-1046">如果`WriteStartDocument`已經呼叫，然後<xref:System.Xml.XmlWriter.WriteProcessingInstruction%2A>方法可用來建立另一個 XML 宣告，將會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="a221d-1046">If `WriteStartDocument` has been called and then the <xref:System.Xml.XmlWriter.WriteProcessingInstruction%2A> method is used to create another XML declaration, an exception will be thrown.</span></span>  
  
 <span data-ttu-id="a221d-1047">這個方法的非同步版本，請參閱<xref:System.Xml.XmlWriter.WriteStartDocumentAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="a221d-1047">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteStartDocumentAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-1048">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-1048">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="a221d-1049">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span><span class="sxs-lookup"><span data-stu-id="a221d-1049">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartDocument">
      <MemberSignature Language="C#" Value="public abstract void WriteStartDocument (bool standalone);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteStartDocument(bool standalone) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteStartDocument(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteStartDocument (standalone As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteStartDocument(bool standalone);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="standalone" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="standalone"><span data-ttu-id="a221d-1050">如果 <see langword="true" />，它會寫入「standalone=yes」；如果 <see langword="false" />，它會寫入「standalone=no」。</span><span class="sxs-lookup"><span data-stu-id="a221d-1050">If <see langword="true" />, it writes "standalone=yes"; if <see langword="false" />, it writes "standalone=no".</span></span></param>
        <summary><span data-ttu-id="a221d-1051">在衍生類別中覆寫時，使用「1.0」版寫入 XML 宣告與獨立屬性。</span><span class="sxs-lookup"><span data-stu-id="a221d-1051">When overridden in a derived class, writes the XML declaration with the version "1.0" and the standalone attribute.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-1052">寫入器實作的方式取決於文件的編碼方式的層級。</span><span class="sxs-lookup"><span data-stu-id="a221d-1052">The encoding level of the document is determined by how the writer is implemented.</span></span> <span data-ttu-id="a221d-1053">例如，如果<xref:System.Text.Encoding>中指定物件`XmlTextWriter`建構函式，這會決定編碼屬性的值。</span><span class="sxs-lookup"><span data-stu-id="a221d-1053">For example, if an <xref:System.Text.Encoding> object is specified in the `XmlTextWriter` constructor, this determines the value of the encoding attribute.</span></span>  
  
 <span data-ttu-id="a221d-1054">當`WriteStartDocument`是呼叫，寫入器會驗證您要撰寫是否格式正確的 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="a221d-1054">When `WriteStartDocument` is called, the writer validates that what you are writing is a well-formed XML document.</span></span> <span data-ttu-id="a221d-1055">例如，它會檢查 XML 宣告，第一個節點，其中，只能有一個根層級項目存在，以此類推。</span><span class="sxs-lookup"><span data-stu-id="a221d-1055">For example, it checks that the XML declaration is the first node, that one and only one root-level element exists, and so on.</span></span> <span data-ttu-id="a221d-1056">如果未呼叫此方法，則寫入器會假設正在寫入的 XML 片段，並不套用任何根層級的規則。</span><span class="sxs-lookup"><span data-stu-id="a221d-1056">If this method is not called, the writer assumes an XML fragment is being written and applies no root level rules.</span></span>  
  
 <span data-ttu-id="a221d-1057">如果`WriteStartDocument`已經呼叫，然後<xref:System.Xml.XmlWriter.WriteProcessingInstruction%2A>方法可用來建立另一個 XML 宣告，將會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="a221d-1057">If `WriteStartDocument` has been called and then the <xref:System.Xml.XmlWriter.WriteProcessingInstruction%2A> method is used to create another XML declaration, an exception will be thrown.</span></span>  
  
 <span data-ttu-id="a221d-1058">這個方法的非同步版本，請參閱<xref:System.Xml.XmlWriter.WriteStartDocumentAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="a221d-1058">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteStartDocumentAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-1059">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-1059">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="a221d-1060">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span><span class="sxs-lookup"><span data-stu-id="a221d-1060">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteStartDocumentAsync">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-1061">在未將 <see cref="P:System.Xml.XmlWriterSettings.Async" /> 旗標設為 <see langword="true" />的情況下呼叫了 <see cref="T:System.Xml.XmlWriter" /> 非同步方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-1061">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="a221d-1062">在此情況下，就會擲回 <see cref="T:System.InvalidOperationException" /> 並顯示訊息「如果您要使用非同步方法，請將 XmlWriterSettings.Async 設為 true」。</span><span class="sxs-lookup"><span data-stu-id="a221d-1062">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <summary><span data-ttu-id="a221d-1063">以非同步的方式寫入 XML 宣告。</span><span class="sxs-lookup"><span data-stu-id="a221d-1063">Asynchronously writes the XML declaration.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-1064">這是非同步版本<xref:System.Xml.XmlWriter.WriteStartDocument%2A>，使用相同的功能。</span><span class="sxs-lookup"><span data-stu-id="a221d-1064">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteStartDocument%2A>, with the same functionality.</span></span> <span data-ttu-id="a221d-1065">若要使用此方法，您必須設定<xref:System.Xml.XmlWriterSettings.Async%2A>旗標設為`true`。</span><span class="sxs-lookup"><span data-stu-id="a221d-1065">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteStartDocumentAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteStartDocumentAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteStartDocumentAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteStartDocumentAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteStartDocumentAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteStartDocumentAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a221d-1066">以非同步的方式使用「1.0」版寫入 XML 宣告。</span><span class="sxs-lookup"><span data-stu-id="a221d-1066">Asynchronously writes the XML declaration with the version "1.0".</span></span></summary>
        <returns><span data-ttu-id="a221d-1067">表示非同步 <see langword="WriteStartDocument" /> 作業的工作。</span><span class="sxs-lookup"><span data-stu-id="a221d-1067">The task that represents the asynchronous <see langword="WriteStartDocument" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-1068">這是非同步版本<xref:System.Xml.XmlWriter.WriteStartDocument%2A>，使用相同的功能。</span><span class="sxs-lookup"><span data-stu-id="a221d-1068">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteStartDocument%2A>, with the same functionality.</span></span> <span data-ttu-id="a221d-1069">若要使用此方法，您必須設定<xref:System.Xml.XmlWriterSettings.Async%2A>旗標設為`true`。</span><span class="sxs-lookup"><span data-stu-id="a221d-1069">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-1070">在未將 <see cref="P:System.Xml.XmlWriterSettings.Async" /> 旗標設為 <see langword="true" />的情況下呼叫了 <see cref="T:System.Xml.XmlWriter" /> 非同步方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-1070">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="a221d-1071">在此情況下，就會擲回 <see cref="T:System.InvalidOperationException" /> 並顯示訊息「如果您要使用非同步方法，請將 XmlWriterSettings.Async 設為 true」。</span><span class="sxs-lookup"><span data-stu-id="a221d-1071">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartDocumentAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteStartDocumentAsync (bool standalone);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteStartDocumentAsync(bool standalone) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteStartDocumentAsync(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteStartDocumentAsync (standalone As Boolean) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteStartDocumentAsync(bool standalone);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="standalone" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="standalone"><span data-ttu-id="a221d-1072">如果 <see langword="true" />，它會寫入「standalone=yes」；如果 <see langword="false" />，它會寫入「standalone=no」。</span><span class="sxs-lookup"><span data-stu-id="a221d-1072">If <see langword="true" />, it writes "standalone=yes"; if <see langword="false" />, it writes "standalone=no".</span></span></param>
        <summary><span data-ttu-id="a221d-1073">以非同步的方式使用「1.0」版寫入 XML 宣告與獨立屬性。</span><span class="sxs-lookup"><span data-stu-id="a221d-1073">Asynchronously writes the XML declaration with the version "1.0" and the standalone attribute.</span></span></summary>
        <returns><span data-ttu-id="a221d-1074">表示非同步 <see langword="WriteStartDocument" /> 作業的工作。</span><span class="sxs-lookup"><span data-stu-id="a221d-1074">The task that represents the asynchronous <see langword="WriteStartDocument" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-1075">這是非同步版本<xref:System.Xml.XmlWriter.WriteStartDocument%2A>，使用相同的功能。</span><span class="sxs-lookup"><span data-stu-id="a221d-1075">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteStartDocument%2A>, with the same functionality.</span></span> <span data-ttu-id="a221d-1076">若要使用此方法，您必須設定<xref:System.Xml.XmlWriterSettings.Async%2A>旗標設為`true`。</span><span class="sxs-lookup"><span data-stu-id="a221d-1076">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-1077">在未將 <see cref="P:System.Xml.XmlWriterSettings.Async" /> 旗標設為 <see langword="true" />的情況下呼叫了 <see cref="T:System.Xml.XmlWriter" /> 非同步方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-1077">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="a221d-1078">在此情況下，就會擲回 <see cref="T:System.InvalidOperationException" /> 並顯示訊息「如果您要使用非同步方法，請將 XmlWriterSettings.Async 設為 true」。</span><span class="sxs-lookup"><span data-stu-id="a221d-1078">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteStartElement">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-1079">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-1079">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="a221d-1080">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span><span class="sxs-lookup"><span data-stu-id="a221d-1080">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <summary><span data-ttu-id="a221d-1081">在衍生類別中覆寫時，寫入指定的開頭標記。</span><span class="sxs-lookup"><span data-stu-id="a221d-1081">When overridden in a derived class, writes the specified start tag.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-1082">這個方法的非同步版本，請參閱<xref:System.Xml.XmlWriter.WriteStartElementAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="a221d-1082">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteStartElementAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteStartElement">
      <MemberSignature Language="C#" Value="public void WriteStartElement (string localName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStartElement(string localName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteStartElement(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStartElement (localName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStartElement(System::String ^ localName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="a221d-1083">項目的本機名稱。</span><span class="sxs-lookup"><span data-stu-id="a221d-1083">The local name of the element.</span></span></param>
        <summary><span data-ttu-id="a221d-1084">在衍生類別中覆寫時，寫出具有指定之區域名稱的開頭標記。</span><span class="sxs-lookup"><span data-stu-id="a221d-1084">When overridden in a derived class, writes out a start tag with the specified local name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-1085">這個方法的非同步版本，請參閱<xref:System.Xml.XmlWriter.WriteStartElementAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="a221d-1085">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteStartElementAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a221d-1086">下列範例會寫入 XML 節點。</span><span class="sxs-lookup"><span data-stu-id="a221d-1086">The following example writes an XML node.</span></span>  
  
 [!code-cpp[XmlWriter.Close#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.Close/CPP/XmlWriter.Close.cpp#1)]
 [!code-csharp[XmlWriter.Close#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.Close/CS/writeelems.cs#1)]
 [!code-vb[XmlWriter.Close#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.Close/VB/writeelems.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-1087">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-1087">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="a221d-1088">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span><span class="sxs-lookup"><span data-stu-id="a221d-1088">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="a221d-1089">緩衝區中有一個字元，其為有效的 XML 字元，但對輸出編碼而言無效。</span><span class="sxs-lookup"><span data-stu-id="a221d-1089">There is a character in the buffer that is a valid XML character but is not valid for the output encoding.</span></span> <span data-ttu-id="a221d-1090">比方說如果輸出的編碼方式為 ASCII，您應該在項目與屬性名稱中只使用範圍從 0 至 127 的字元。</span><span class="sxs-lookup"><span data-stu-id="a221d-1090">For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names.</span></span> <span data-ttu-id="a221d-1091">無效的字元可能是在這個方法的引數中，或在先前已寫入至緩衝區的方法的引數中。</span><span class="sxs-lookup"><span data-stu-id="a221d-1091">The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer.</span></span> <span data-ttu-id="a221d-1092">字元實體參考會盡可能逸出這類字元 (比方說在文字節點或屬性值中)。</span><span class="sxs-lookup"><span data-stu-id="a221d-1092">Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values).</span></span> <span data-ttu-id="a221d-1093">不過，在項目與屬性名稱、註解、處理指示或 CDATA 區段中不允許字元實體參考。</span><span class="sxs-lookup"><span data-stu-id="a221d-1093">However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartElement">
      <MemberSignature Language="C#" Value="public void WriteStartElement (string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStartElement(string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStartElement (localName As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStartElement(System::String ^ localName, System::String ^ ns);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="a221d-1094">項目的本機名稱。</span><span class="sxs-lookup"><span data-stu-id="a221d-1094">The local name of the element.</span></span></param>
        <param name="ns"><span data-ttu-id="a221d-1095">與項目相關聯的命名空間 URI。</span><span class="sxs-lookup"><span data-stu-id="a221d-1095">The namespace URI to associate with the element.</span></span> <span data-ttu-id="a221d-1096">如果這個命名空間已經在範圍中並具有相關聯的前置詞，則寫入器也會自動寫入前置詞。</span><span class="sxs-lookup"><span data-stu-id="a221d-1096">If this namespace is already in scope and has an associated prefix, the writer automatically writes that prefix also.</span></span></param>
        <summary><span data-ttu-id="a221d-1097">在衍生類別中覆寫時，寫入指定的開頭標記並與指定的命名空間產生關聯。</span><span class="sxs-lookup"><span data-stu-id="a221d-1097">When overridden in a derived class, writes the specified start tag and associates it with the given namespace.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-1098">呼叫這個方法，您可以寫入屬性，或建立後的內容使用<xref:System.Xml.XmlWriter.WriteComment%2A>， <xref:System.Xml.XmlWriter.WriteString%2A>，或`WriteStartElement`子項目。</span><span class="sxs-lookup"><span data-stu-id="a221d-1098">After calling this method you can either write attributes, or create content using <xref:System.Xml.XmlWriter.WriteComment%2A>, <xref:System.Xml.XmlWriter.WriteString%2A>, or `WriteStartElement` for child elements.</span></span> <span data-ttu-id="a221d-1099">您可以關閉其中一種項目<xref:System.Xml.XmlWriter.WriteEndElement%2A>或<xref:System.Xml.XmlWriter.WriteFullEndElement%2A>。</span><span class="sxs-lookup"><span data-stu-id="a221d-1099">You can close the element with either <xref:System.Xml.XmlWriter.WriteEndElement%2A> or <xref:System.Xml.XmlWriter.WriteFullEndElement%2A>.</span></span> <span data-ttu-id="a221d-1100">例如，下列 C# 程式碼：</span><span class="sxs-lookup"><span data-stu-id="a221d-1100">For example, the following C# code:</span></span>  
  
```csharp  
writer.WriteStartElement("item",null);  
writer.WriteString("some text");  
writer.WriteEndElement();  
```  
  
 <span data-ttu-id="a221d-1101">會產生下列輸出：</span><span class="sxs-lookup"><span data-stu-id="a221d-1101">Generates the following output:</span></span>  
  
```xml  
<item>some text</item>  
```  
  
 <span data-ttu-id="a221d-1102">這個方法的非同步版本，請參閱<xref:System.Xml.XmlWriter.WriteStartElementAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="a221d-1102">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteStartElementAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-1103">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-1103">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="a221d-1104">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span><span class="sxs-lookup"><span data-stu-id="a221d-1104">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="a221d-1105">緩衝區中有一個字元，其為有效的 XML 字元，但對輸出編碼而言無效。</span><span class="sxs-lookup"><span data-stu-id="a221d-1105">There is a character in the buffer that is a valid XML character but is not valid for the output encoding.</span></span> <span data-ttu-id="a221d-1106">比方說如果輸出的編碼方式為 ASCII，您應該在項目與屬性名稱中只使用範圍從 0 至 127 的字元。</span><span class="sxs-lookup"><span data-stu-id="a221d-1106">For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names.</span></span> <span data-ttu-id="a221d-1107">無效的字元可能是在這個方法的引數中，或在先前已寫入至緩衝區的方法的引數中。</span><span class="sxs-lookup"><span data-stu-id="a221d-1107">The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer.</span></span> <span data-ttu-id="a221d-1108">字元實體參考會盡可能逸出這類字元 (比方說在文字節點或屬性值中)。</span><span class="sxs-lookup"><span data-stu-id="a221d-1108">Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values).</span></span> <span data-ttu-id="a221d-1109">不過，在項目與屬性名稱、註解、處理指示或 CDATA 區段中不允許字元實體參考。</span><span class="sxs-lookup"><span data-stu-id="a221d-1109">However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartElement">
      <MemberSignature Language="C#" Value="public abstract void WriteStartElement (string prefix, string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteStartElement(string prefix, string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteStartElement (prefix As String, localName As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteStartElement(System::String ^ prefix, System::String ^ localName, System::String ^ ns);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="a221d-1110">項目的命名空間前置詞。</span><span class="sxs-lookup"><span data-stu-id="a221d-1110">The namespace prefix of the element.</span></span></param>
        <param name="localName"><span data-ttu-id="a221d-1111">項目的本機名稱。</span><span class="sxs-lookup"><span data-stu-id="a221d-1111">The local name of the element.</span></span></param>
        <param name="ns"><span data-ttu-id="a221d-1112">與項目相關聯的命名空間 URI。</span><span class="sxs-lookup"><span data-stu-id="a221d-1112">The namespace URI to associate with the element.</span></span></param>
        <summary><span data-ttu-id="a221d-1113">在衍生類別中覆寫時，寫入指定的開頭標記，並與指定的命名空間與前置詞產生關聯。</span><span class="sxs-lookup"><span data-stu-id="a221d-1113">When overridden in a derived class, writes the specified start tag and associates it with the given namespace and prefix.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-1114">這個方法的非同步版本，請參閱<xref:System.Xml.XmlWriter.WriteStartElementAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="a221d-1114">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteStartElementAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a221d-1115">下列範例會寫出 XML 片段。</span><span class="sxs-lookup"><span data-stu-id="a221d-1115">The following example writes out an XML fragment.</span></span>  
  
 [!code-cpp[XmlWriter.WriteElementString#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.WriteElementString/CPP/writeelemstring_v2.cpp#1)]
 [!code-csharp[XmlWriter.WriteElementString#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteElementString/CS/writeelemstring_v2.cs#1)]
 [!code-vb[XmlWriter.WriteElementString#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteElementString/VB/writeelemstring_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-1116">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-1116">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="a221d-1117">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span><span class="sxs-lookup"><span data-stu-id="a221d-1117">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="a221d-1118">緩衝區中有一個字元，其為有效的 XML 字元，但對輸出編碼而言無效。</span><span class="sxs-lookup"><span data-stu-id="a221d-1118">There is a character in the buffer that is a valid XML character but is not valid for the output encoding.</span></span> <span data-ttu-id="a221d-1119">比方說如果輸出的編碼方式為 ASCII，您應該在項目與屬性名稱中只使用範圍從 0 至 127 的字元。</span><span class="sxs-lookup"><span data-stu-id="a221d-1119">For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names.</span></span> <span data-ttu-id="a221d-1120">無效的字元可能是在這個方法的引數中，或在先前已寫入至緩衝區的方法的引數中。</span><span class="sxs-lookup"><span data-stu-id="a221d-1120">The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer.</span></span> <span data-ttu-id="a221d-1121">字元實體參考會盡可能逸出這類字元 (比方說在文字節點或屬性值中)。</span><span class="sxs-lookup"><span data-stu-id="a221d-1121">Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values).</span></span> <span data-ttu-id="a221d-1122">不過，在項目與屬性名稱、註解、處理指示或 CDATA 區段中不允許字元實體參考。</span><span class="sxs-lookup"><span data-stu-id="a221d-1122">However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartElementAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteStartElementAsync (string prefix, string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteStartElementAsync(string prefix, string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteStartElementAsync(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteStartElementAsync (prefix As String, localName As String, ns As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteStartElementAsync(System::String ^ prefix, System::String ^ localName, System::String ^ ns);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="a221d-1123">項目的命名空間前置詞。</span><span class="sxs-lookup"><span data-stu-id="a221d-1123">The namespace prefix of the element.</span></span></param>
        <param name="localName"><span data-ttu-id="a221d-1124">項目的本機名稱。</span><span class="sxs-lookup"><span data-stu-id="a221d-1124">The local name of the element.</span></span></param>
        <param name="ns"><span data-ttu-id="a221d-1125">與項目相關聯的命名空間 URI。</span><span class="sxs-lookup"><span data-stu-id="a221d-1125">The namespace URI to associate with the element.</span></span></param>
        <summary><span data-ttu-id="a221d-1126">以非同步的方式寫入指定的開頭標記，並將它與指定的命名空間與前置詞產生關聯。</span><span class="sxs-lookup"><span data-stu-id="a221d-1126">Asynchronously writes the specified start tag and associates it with the given namespace and prefix.</span></span></summary>
        <returns><span data-ttu-id="a221d-1127">表示非同步 <see langword="WriteStartElement" /> 作業的工作。</span><span class="sxs-lookup"><span data-stu-id="a221d-1127">The task that represents the asynchronous <see langword="WriteStartElement" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-1128">這是非同步版本<xref:System.Xml.XmlWriter.WriteStartElement%2A>，使用相同的功能。</span><span class="sxs-lookup"><span data-stu-id="a221d-1128">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteStartElement%2A>, with the same functionality.</span></span> <span data-ttu-id="a221d-1129">若要使用此方法，您必須設定<xref:System.Xml.XmlWriterSettings.Async%2A>旗標設為`true`。</span><span class="sxs-lookup"><span data-stu-id="a221d-1129">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-1130">在未將 <see cref="P:System.Xml.XmlWriterSettings.Async" /> 旗標設為 <see langword="true" />的情況下呼叫了 <see cref="T:System.Xml.XmlWriter" /> 非同步方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-1130">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="a221d-1131">在此情況下，就會擲回 <see cref="T:System.InvalidOperationException" /> 並顯示訊息「如果您要使用非同步方法，請將 XmlWriterSettings.Async 設為 true」。</span><span class="sxs-lookup"><span data-stu-id="a221d-1131">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteState">
      <MemberSignature Language="C#" Value="public abstract System.Xml.WriteState WriteState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.WriteState WriteState" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriter.WriteState" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property WriteState As WriteState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Xml::WriteState WriteState { System::Xml::WriteState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.WriteState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a221d-1132">在衍生類別中覆寫時，取得寫入器的狀態。</span><span class="sxs-lookup"><span data-stu-id="a221d-1132">When overridden in a derived class, gets the state of the writer.</span></span></summary>
        <value><span data-ttu-id="a221d-1133">其中一個 <see cref="T:System.Xml.WriteState" /> 值。</span><span class="sxs-lookup"><span data-stu-id="a221d-1133">One of the <see cref="T:System.Xml.WriteState" /> values.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-1134">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-1134">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="a221d-1135">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span><span class="sxs-lookup"><span data-stu-id="a221d-1135">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public abstract void WriteString (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteString(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteString (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteString(System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="a221d-1136">要寫入的文字。</span><span class="sxs-lookup"><span data-stu-id="a221d-1136">The text to write.</span></span></param>
        <summary><span data-ttu-id="a221d-1137">在衍生類別中覆寫時，寫入指定的文字內容。</span><span class="sxs-lookup"><span data-stu-id="a221d-1137">When overridden in a derived class, writes the given text content.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-1138">`WriteString` 會執行下列動作：</span><span class="sxs-lookup"><span data-stu-id="a221d-1138">`WriteString` does the following:</span></span>  
  
-   <span data-ttu-id="a221d-1139">字元`&`， `<`，和`>`會取代`&amp;`， `&lt;`，和`&gt;`分別。</span><span class="sxs-lookup"><span data-stu-id="a221d-1139">The characters `&`, `<`, and `>` are replaced with `&amp;`, `&lt;`, and `&gt;`, respectively.</span></span>  
  
-   <span data-ttu-id="a221d-1140">預設行為<xref:System.Xml.XmlWriter>使用建立<xref:System.Xml.XmlWriter.Create%2A>會擲回<xref:System.ArgumentException>時嘗試寫入的字元值範圍從 0 x-0x1F （不含空白字元 0x9、 0xA 和為 0xD） 中。</span><span class="sxs-lookup"><span data-stu-id="a221d-1140">The default behavior of an <xref:System.Xml.XmlWriter> created using <xref:System.Xml.XmlWriter.Create%2A> is to throw an <xref:System.ArgumentException> when attempting to write character values in the range 0x-0x1F (excluding white space characters 0x9, 0xA, and 0xD).</span></span> <span data-ttu-id="a221d-1141">可以寫入這些無效的 XML 字元，藉由建立<xref:System.Xml.XmlWriter>與<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>屬性設定為`false`。</span><span class="sxs-lookup"><span data-stu-id="a221d-1141">These invalid XML characters can be written by creating the <xref:System.Xml.XmlWriter> with the <xref:System.Xml.XmlWriterSettings.CheckCharacters%2A> property set to `false`.</span></span> <span data-ttu-id="a221d-1142">這樣會導致數字字元實體所取代的字元 (（& s)\#0; 透過 & #0x1F)。</span><span class="sxs-lookup"><span data-stu-id="a221d-1142">Doing so will result in the characters being replaced with numeric character entities (&\#0; through &#0x1F).</span></span> <span data-ttu-id="a221d-1143">此外，<xref:System.Xml.XmlTextWriter>以建立`new`運算子將會使用數字字元實體無效的字元取代預設值。</span><span class="sxs-lookup"><span data-stu-id="a221d-1143">Additionally, an <xref:System.Xml.XmlTextWriter> created with the `new` operator will replace the invalid characters with numeric character entities by default.</span></span>  
  
 <span data-ttu-id="a221d-1144">**請注意**Microsoft 不會鼓勵寫入無效的 XML 字元，因為許多取用 XML 的應用程式並非設計來處理無效的字元的作法。</span><span class="sxs-lookup"><span data-stu-id="a221d-1144">**Note** Microsoft does not encourage the practice of writing invalid XML characters since many applications that consume XML are not designed to handle invalid characters.</span></span>  
  
-   <span data-ttu-id="a221d-1145">如果`WriteString`呼叫在屬性值的內容中，以取代 double 和單一引號`&quot;`和`&apos;`分別。</span><span class="sxs-lookup"><span data-stu-id="a221d-1145">If `WriteString` is called in the context of an attribute value, double and single quotes are replaced with `&quot;` and `&apos;` respectively.</span></span>  
  
 <span data-ttu-id="a221d-1146">這在輸入字串，例如`test<item>test`寫出做為</span><span class="sxs-lookup"><span data-stu-id="a221d-1146">For example, this input string `test<item>test` is written out as</span></span>  
  
```  
test&lt;item&gt;test  
```  
  
 <span data-ttu-id="a221d-1147">如果`text`是`null`或`String.Empty`，這個方法會寫入任何資料內容與文字節點。</span><span class="sxs-lookup"><span data-stu-id="a221d-1147">If `text` is either `null` or `String.Empty`, this method writes a text node with no data content.</span></span>  
  
 <span data-ttu-id="a221d-1148">這個方法的非同步版本，請參閱<xref:System.Xml.XmlWriter.WriteStringAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="a221d-1148">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteStringAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a221d-1149">下列範例會寫入 XML 節點。</span><span class="sxs-lookup"><span data-stu-id="a221d-1149">The following example writes an XML node.</span></span>  
  
 [!code-cpp[XmlWriter.Close#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.Close/CPP/XmlWriter.Close.cpp#1)]
 [!code-csharp[XmlWriter.Close#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.Close/CS/writeelems.cs#1)]
 [!code-vb[XmlWriter.Close#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.Close/VB/writeelems.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a221d-1150">文字字串包含無效的 Surrogate 字組。</span><span class="sxs-lookup"><span data-stu-id="a221d-1150">The text string contains an invalid surrogate pair.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-1151">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-1151">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="a221d-1152">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span><span class="sxs-lookup"><span data-stu-id="a221d-1152">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStringAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteStringAsync (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteStringAsync(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteStringAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteStringAsync (text As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteStringAsync(System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="a221d-1153">要寫入的文字。</span><span class="sxs-lookup"><span data-stu-id="a221d-1153">The text to write.</span></span></param>
        <summary><span data-ttu-id="a221d-1154">以非同步的方式寫入指定的文字內容。</span><span class="sxs-lookup"><span data-stu-id="a221d-1154">Asynchronously writes the given text content.</span></span></summary>
        <returns><span data-ttu-id="a221d-1155">表示非同步 <see langword="WriteString" /> 作業的工作。</span><span class="sxs-lookup"><span data-stu-id="a221d-1155">The task that represents the asynchronous <see langword="WriteString" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-1156">這是非同步版本<xref:System.Xml.XmlWriter.WriteString%2A>，使用相同的功能。</span><span class="sxs-lookup"><span data-stu-id="a221d-1156">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteString%2A>, with the same functionality.</span></span> <span data-ttu-id="a221d-1157">若要使用此方法，您必須設定<xref:System.Xml.XmlWriterSettings.Async%2A>旗標設為`true`。</span><span class="sxs-lookup"><span data-stu-id="a221d-1157">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-1158">在未將 <see cref="P:System.Xml.XmlWriterSettings.Async" /> 旗標設為 <see langword="true" />的情況下呼叫了 <see cref="T:System.Xml.XmlWriter" /> 非同步方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-1158">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="a221d-1159">在此情況下，就會擲回 <see cref="T:System.InvalidOperationException" /> 並顯示訊息「如果您要使用非同步方法，請將 XmlWriterSettings.Async 設為 true」。</span><span class="sxs-lookup"><span data-stu-id="a221d-1159">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteSurrogateCharEntity">
      <MemberSignature Language="C#" Value="public abstract void WriteSurrogateCharEntity (char lowChar, char highChar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteSurrogateCharEntity(char lowChar, char highChar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteSurrogateCharEntity(System.Char,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteSurrogateCharEntity (lowChar As Char, highChar As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteSurrogateCharEntity(char lowChar, char highChar);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lowChar" Type="System.Char" />
        <Parameter Name="highChar" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="lowChar"><span data-ttu-id="a221d-1160">低 Surrogate。</span><span class="sxs-lookup"><span data-stu-id="a221d-1160">The low surrogate.</span></span> <span data-ttu-id="a221d-1161">這必須是一個介於 0xDC00 和 0xDFFF 之間的值。</span><span class="sxs-lookup"><span data-stu-id="a221d-1161">This must be a value between 0xDC00 and 0xDFFF.</span></span></param>
        <param name="highChar"><span data-ttu-id="a221d-1162">高 Surrogate。</span><span class="sxs-lookup"><span data-stu-id="a221d-1162">The high surrogate.</span></span> <span data-ttu-id="a221d-1163">這必須一個是介於 0xD800 和 0xDBFF 之間的值。</span><span class="sxs-lookup"><span data-stu-id="a221d-1163">This must be a value between 0xD800 and 0xDBFF.</span></span></param>
        <summary><span data-ttu-id="a221d-1164">在衍生類別中覆寫時，產生和寫入 Surrogate 字元字組的 Surrogate 字元實體。</span><span class="sxs-lookup"><span data-stu-id="a221d-1164">When overridden in a derived class, generates and writes the surrogate character entity for the surrogate character pair.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-1165">這個方法僅適用於使用 utf-16 編碼的系統上。</span><span class="sxs-lookup"><span data-stu-id="a221d-1165">This method is only applicable on systems that use UTF-16 encoding.</span></span>  
  
 <span data-ttu-id="a221d-1166">以十六進位格式寫入 surrogate 字元實體。</span><span class="sxs-lookup"><span data-stu-id="a221d-1166">The surrogate character entity is written in hexadecimal format.</span></span> <span data-ttu-id="a221d-1167">Surrogate 字元的範圍是以 #x10FFFF #x 10000。</span><span class="sxs-lookup"><span data-stu-id="a221d-1167">The range for surrogate characters is #x10000 to #x10FFFF.</span></span> <span data-ttu-id="a221d-1168">下列公式用來產生 surrogate 字元實體: (`highChar` -0xD800) \* 0x400 + (`lowChar` -0xDC00) + 0x10000</span><span class="sxs-lookup"><span data-stu-id="a221d-1168">The following formula is used to generate the surrogate character entity: (`highChar` -0xD800) \* 0x400 + (`lowChar` -0xDC00) + 0x10000</span></span>  
  
 <span data-ttu-id="a221d-1169">HTML 和 XML 文件的字元集 （以及數字字元參考的標記法） 根據 UCS [ISO 10646]。</span><span class="sxs-lookup"><span data-stu-id="a221d-1169">For both HTML and XML, the document character set (and therefore the notation of numeric character references) is based on UCS [ISO-10646].</span></span> <span data-ttu-id="a221d-1170">來源文件中的單一數字字元參考可能因此在某些情況下對應到兩個 16 位元單位數 （為高 surrogate 和低 surrogate） 的字串。</span><span class="sxs-lookup"><span data-stu-id="a221d-1170">A single numeric character reference in a source document may therefore in some cases correspond to two 16-bit units in a string (a high surrogate and a low surrogate).</span></span> <span data-ttu-id="a221d-1171">這些 16 位元的單位稱為 「 surrogate 字組 」。</span><span class="sxs-lookup"><span data-stu-id="a221d-1171">These 16-bit units are referred to as a surrogate pair.</span></span>  
  
 <span data-ttu-id="a221d-1172">如需有關 (instance) 或字元的詳細資訊，請參閱的區段 3.7 Unicode standard 3.0/Unicode 2.0 位於http://www.unicode.org，2.2 小節 W3C XML 1.0 版建議事項位於或http://www.w3.org/TR/REC-xml#charsets。</span><span class="sxs-lookup"><span data-stu-id="a221d-1172">For more information regarding surrogates or characters, refer to section 3.7 of the Unicode 3.0/Unicode 2.0 standard located at http://www.unicode.org, or section 2.2 of the W3C XML 1.0 Recommendation located at http://www.w3.org/TR/REC-xml#charsets.</span></span>  
  
 <span data-ttu-id="a221d-1173">這個方法的非同步版本，請參閱<xref:System.Xml.XmlWriter.WriteSurrogateCharEntityAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="a221d-1173">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteSurrogateCharEntityAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a221d-1174">傳送無效的 Surrogate 字元字組。</span><span class="sxs-lookup"><span data-stu-id="a221d-1174">An invalid surrogate character pair was passed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-1175">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-1175">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="a221d-1176">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span><span class="sxs-lookup"><span data-stu-id="a221d-1176">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteSurrogateCharEntityAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteSurrogateCharEntityAsync (char lowChar, char highChar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteSurrogateCharEntityAsync(char lowChar, char highChar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteSurrogateCharEntityAsync(System.Char,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteSurrogateCharEntityAsync (lowChar As Char, highChar As Char) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteSurrogateCharEntityAsync(char lowChar, char highChar);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lowChar" Type="System.Char" />
        <Parameter Name="highChar" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="lowChar"><span data-ttu-id="a221d-1177">低 Surrogate。</span><span class="sxs-lookup"><span data-stu-id="a221d-1177">The low surrogate.</span></span> <span data-ttu-id="a221d-1178">這必須是一個介於 0xDC00 和 0xDFFF 之間的值。</span><span class="sxs-lookup"><span data-stu-id="a221d-1178">This must be a value between 0xDC00 and 0xDFFF.</span></span></param>
        <param name="highChar"><span data-ttu-id="a221d-1179">高 Surrogate。</span><span class="sxs-lookup"><span data-stu-id="a221d-1179">The high surrogate.</span></span> <span data-ttu-id="a221d-1180">這必須一個是介於 0xD800 和 0xDBFF 之間的值。</span><span class="sxs-lookup"><span data-stu-id="a221d-1180">This must be a value between 0xD800 and 0xDBFF.</span></span></param>
        <summary><span data-ttu-id="a221d-1181">以非同步的方式產生和寫入 Surrogate 字元字組的 Surrogate 字元實體。</span><span class="sxs-lookup"><span data-stu-id="a221d-1181">Asynchronously generates and writes the surrogate character entity for the surrogate character pair.</span></span></summary>
        <returns><span data-ttu-id="a221d-1182">表示非同步 <see langword="WriteSurrogateCharEntity" /> 作業的工作。</span><span class="sxs-lookup"><span data-stu-id="a221d-1182">The task that represents the asynchronous <see langword="WriteSurrogateCharEntity" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-1183">這是非同步版本<xref:System.Xml.XmlWriter.WriteSurrogateCharEntity%2A>，使用相同的功能。</span><span class="sxs-lookup"><span data-stu-id="a221d-1183">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteSurrogateCharEntity%2A>, with the same functionality.</span></span> <span data-ttu-id="a221d-1184">若要使用此方法，您必須設定<xref:System.Xml.XmlWriterSettings.Async%2A>旗標設為`true`。</span><span class="sxs-lookup"><span data-stu-id="a221d-1184">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-1185">在未將 <see cref="P:System.Xml.XmlWriterSettings.Async" /> 旗標設為 <see langword="true" />的情況下呼叫了 <see cref="T:System.Xml.XmlWriter" /> 非同步方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-1185">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="a221d-1186">在此情況下，就會擲回 <see cref="T:System.InvalidOperationException" /> 並顯示訊息「如果您要使用非同步方法，請將 XmlWriterSettings.Async 設為 true」。</span><span class="sxs-lookup"><span data-stu-id="a221d-1186">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteValue">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-1187">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-1187">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="a221d-1188">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span><span class="sxs-lookup"><span data-stu-id="a221d-1188">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <summary><span data-ttu-id="a221d-1189">寫入單一簡單類型的值。</span><span class="sxs-lookup"><span data-stu-id="a221d-1189">Writes a single simple-typed value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-1190"><xref:System.Xml.XmlWriter.WriteValue%2A>方法接受 common language runtime (CLR) 簡單類型值、 將它們轉換成其字串表示法，根據 XML 結構描述定義語言 (XSD) 資料類型轉換規則，以及使用縮小寫入<xref:System.Xml.XmlWriter.WriteString%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-1190">The <xref:System.Xml.XmlWriter.WriteValue%2A> method accepts common language runtime (CLR) simple-typed values, converts them to their string representations according to the XML schema definition language (XSD) data type conversion rules, and writes them out by using the <xref:System.Xml.XmlWriter.WriteString%2A> method.</span></span> <span data-ttu-id="a221d-1191">這可讓您管線與最小重新剖析額外負荷傳遞之間的資料時的簡單型別值<xref:System.Xml.XPath.XPathDocument>， <xref:System.Xml.XmlReader>，和<xref:System.Xml.XmlWriter>物件。</span><span class="sxs-lookup"><span data-stu-id="a221d-1191">This enables you to pipeline simple-type values with minimal reparsing overhead when passing data between <xref:System.Xml.XPath.XPathDocument>, <xref:System.Xml.XmlReader>, and <xref:System.Xml.XmlWriter> objects.</span></span> <span data-ttu-id="a221d-1192">這項功能時也很有用處理 CLR 簡單類型和<xref:System.Xml.XmlWriter>執行個體。</span><span class="sxs-lookup"><span data-stu-id="a221d-1192">This ability is also useful when dealing with CLR simple-types and an <xref:System.Xml.XmlWriter> instance.</span></span> <span data-ttu-id="a221d-1193">您可以呼叫<xref:System.Xml.XmlWriter.WriteValue%2A>方法寫入具類型的值，而非使用中的方法<xref:System.Xml.XmlConvert>類別，以寫出之前，將具類型的資料轉換成字串值。</span><span class="sxs-lookup"><span data-stu-id="a221d-1193">You can call the <xref:System.Xml.XmlWriter.WriteValue%2A> method to write the typed value instead of using the methods in the <xref:System.Xml.XmlConvert> class to convert the typed data to a string value before writing it out.</span></span>  
  
 <span data-ttu-id="a221d-1194">非同步作業，將轉換的傳回值<xref:System.Xml.XmlWriter.WriteValue%2A>到字串，使用<xref:System.Xml.XmlWriter.WriteStringAsync%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-1194">For asynchronous operations, convert the return value of <xref:System.Xml.XmlWriter.WriteValue%2A> to a string and use the <xref:System.Xml.XmlWriter.WriteStringAsync%2A> method.</span></span>  
  
 <span data-ttu-id="a221d-1195">下表顯示的預設 XSD 資料型別對應至 CLR 型別。</span><span class="sxs-lookup"><span data-stu-id="a221d-1195">The following table shows the default XSD data types that correspond to CLR types.</span></span>  
  
 <span data-ttu-id="a221d-1196">如果 CLR 物件是清單型別 (如 <xref:System.Collections.IEnumerable>、<xref:System.Collections.IList> 或 <xref:System.Collections.ICollection>)，則會將其視為數值型別的陣列。</span><span class="sxs-lookup"><span data-stu-id="a221d-1196">If the CLR object is a list type, such as <xref:System.Collections.IEnumerable>, <xref:System.Collections.IList>, or <xref:System.Collections.ICollection>, it is treated as an array of the value type.</span></span>  
  
|<span data-ttu-id="a221d-1197">CLR 類型</span><span class="sxs-lookup"><span data-stu-id="a221d-1197">CLR type</span></span>|<span data-ttu-id="a221d-1198">預設的 XSD 資料類型</span><span class="sxs-lookup"><span data-stu-id="a221d-1198">Default XSD data type</span></span>|  
|--------------|---------------------------|  
|<xref:System.Boolean?displayProperty=nameWithType>|<span data-ttu-id="a221d-1199">xsd:boolean</span><span class="sxs-lookup"><span data-stu-id="a221d-1199">xsd:boolean</span></span>|  
|<xref:System.Byte?displayProperty=nameWithType>**|<span data-ttu-id="a221d-1200">xsd:integer</span><span class="sxs-lookup"><span data-stu-id="a221d-1200">xsd:integer</span></span>|  
|<span data-ttu-id="a221d-1201"><xref:System.Byte?displayProperty=nameWithType> 陣列</span><span class="sxs-lookup"><span data-stu-id="a221d-1201"><xref:System.Byte?displayProperty=nameWithType> array</span></span>|<span data-ttu-id="a221d-1202">xsd:base64Binary</span><span class="sxs-lookup"><span data-stu-id="a221d-1202">xsd:base64Binary</span></span>|  
|<xref:System.Char?displayProperty=nameWithType>**|<span data-ttu-id="a221d-1203">xsd:string</span><span class="sxs-lookup"><span data-stu-id="a221d-1203">xsd:string</span></span>|  
|<xref:System.DateTime?displayProperty=nameWithType>|<span data-ttu-id="a221d-1204">xsd:dateTime</span><span class="sxs-lookup"><span data-stu-id="a221d-1204">xsd:dateTime</span></span>|  
|<xref:System.Decimal?displayProperty=nameWithType>|<span data-ttu-id="a221d-1205">xsd:decimal</span><span class="sxs-lookup"><span data-stu-id="a221d-1205">xsd:decimal</span></span>|  
|<xref:System.Double?displayProperty=nameWithType>|<span data-ttu-id="a221d-1206">xsd:double</span><span class="sxs-lookup"><span data-stu-id="a221d-1206">xsd:double</span></span>|  
|<xref:System.Int16?displayProperty=nameWithType>**|<span data-ttu-id="a221d-1207">xsd:integer</span><span class="sxs-lookup"><span data-stu-id="a221d-1207">xsd:integer</span></span>|  
|<xref:System.Int32?displayProperty=nameWithType>|<span data-ttu-id="a221d-1208">xsd:integer</span><span class="sxs-lookup"><span data-stu-id="a221d-1208">xsd:integer</span></span>|  
|<xref:System.Int64?displayProperty=nameWithType>|<span data-ttu-id="a221d-1209">xsd:integer</span><span class="sxs-lookup"><span data-stu-id="a221d-1209">xsd:integer</span></span>|  
|<xref:System.Single?displayProperty=nameWithType>|<span data-ttu-id="a221d-1210">xsd:float</span><span class="sxs-lookup"><span data-stu-id="a221d-1210">xsd:float</span></span>|  
|<xref:System.String?displayProperty=nameWithType>|<span data-ttu-id="a221d-1211">xsd:string</span><span class="sxs-lookup"><span data-stu-id="a221d-1211">xsd:string</span></span>|  
|<xref:System.IO.TextReader?displayProperty=nameWithType>|<span data-ttu-id="a221d-1212">xsd:string</span><span class="sxs-lookup"><span data-stu-id="a221d-1212">xsd:string</span></span>|  
|<xref:System.IO.BinaryReader?displayProperty=nameWithType>|<span data-ttu-id="a221d-1213">xsd:base64Binary</span><span class="sxs-lookup"><span data-stu-id="a221d-1213">xsd:base64Binary</span></span>|  
  
 <span data-ttu-id="a221d-1214">**這些型別與 CLS 不相容。</span><span class="sxs-lookup"><span data-stu-id="a221d-1214">**These types are not CLS-compliant.</span></span> <span data-ttu-id="a221d-1215">不會具有對應的<xref:System.Xml.XmlWriter.WriteValue%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-1215">They do not have corresponding <xref:System.Xml.XmlWriter.WriteValue%2A> methods.</span></span>  
  
 <span data-ttu-id="a221d-1216">如果連續多次呼叫 <xref:System.Xml.XmlWriter.WriteValue%2A>，則不會使用空格分隔各個值。</span><span class="sxs-lookup"><span data-stu-id="a221d-1216">If <xref:System.Xml.XmlWriter.WriteValue%2A> is called multiple times in succession, the values are not delimited by a space.</span></span> <span data-ttu-id="a221d-1217">您必須在呼叫 <xref:System.Xml.XmlWriter.WriteWhitespace%2A> 之間呼叫 <xref:System.Xml.XmlWriter.WriteValue%2A>，以插入泛空白字元。</span><span class="sxs-lookup"><span data-stu-id="a221d-1217">You must call <xref:System.Xml.XmlWriter.WriteWhitespace%2A> between calls to <xref:System.Xml.XmlWriter.WriteValue%2A> to insert white space.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public virtual void WriteValue (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteValue(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteValue(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteValue (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteValue(bool value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a221d-1218">要寫入的 <see cref="T:System.Boolean" /> 值。</span><span class="sxs-lookup"><span data-stu-id="a221d-1218">The <see cref="T:System.Boolean" /> value to write.</span></span></param>
        <summary><span data-ttu-id="a221d-1219">寫入 <see cref="T:System.Boolean" /> 值。</span><span class="sxs-lookup"><span data-stu-id="a221d-1219">Writes a <see cref="T:System.Boolean" /> value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-1220">這個方法會採用 common language runtime 物件，並將輸入的值轉換成使用 XML 結構描述定義語言 (XSD) 資料類型轉換規則所需的輸出類型。</span><span class="sxs-lookup"><span data-stu-id="a221d-1220">This method takes the common language runtime object and converts the input value to the desired output type using the XML Schema definition language (XSD) data type conversion rules.</span></span>  
  
 <span data-ttu-id="a221d-1221">呼叫 <xref:System.Xml.XmlWriter.WriteValue%2A> 方法時，<xref:System.Xml.XmlWriter> 會根據 XML 結構描述 (XSD) 資料型別規則將值轉換成其字串表示，並使用 <xref:System.Xml.XmlWriter.WriteString%2A> 方法將其寫出。</span><span class="sxs-lookup"><span data-stu-id="a221d-1221">When the <xref:System.Xml.XmlWriter.WriteValue%2A> method is called, the <xref:System.Xml.XmlWriter> converts the value to its string representations according to the XML Schema (XSD) data type rules and writes it out using the <xref:System.Xml.XmlWriter.WriteString%2A> method.</span></span>  
  
 <span data-ttu-id="a221d-1222">如果連續多次呼叫 <xref:System.Xml.XmlWriter.WriteValue%2A>，則不會使用空格分隔各個值。</span><span class="sxs-lookup"><span data-stu-id="a221d-1222">If <xref:System.Xml.XmlWriter.WriteValue%2A> is called multiple times in succession, the values are not delimited by a space.</span></span> <span data-ttu-id="a221d-1223">您必須在呼叫 <xref:System.Xml.XmlWriter.WriteWhitespace%2A> 之間呼叫 <xref:System.Xml.XmlWriter.WriteValue%2A>，以插入泛空白字元。</span><span class="sxs-lookup"><span data-stu-id="a221d-1223">You must call <xref:System.Xml.XmlWriter.WriteWhitespace%2A> between calls to <xref:System.Xml.XmlWriter.WriteValue%2A> to insert white space.</span></span> <span data-ttu-id="a221d-1224">傳遞至陣列型別<xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType>多載以寫出相異值的陣列。</span><span class="sxs-lookup"><span data-stu-id="a221d-1224">Pass an array type to the <xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType> overload to write out an array of distinct values.</span></span>  
  
 <span data-ttu-id="a221d-1225">如果此方法會在呼叫<xref:System.Xml.XmlWriter>純文字，具類型的值序列化成文字，該輸出執行個體。</span><span class="sxs-lookup"><span data-stu-id="a221d-1225">If this method is called on an <xref:System.Xml.XmlWriter> instance that outputs text-only, the typed value is serialized to text.</span></span>  
  
 <span data-ttu-id="a221d-1226">非同步作業，將這個方法的傳回值轉換為字串，並使用<xref:System.Xml.XmlWriter.WriteStringAsync%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-1226">For asynchronous operations, convert the return value of this method to a string and use the <xref:System.Xml.XmlWriter.WriteStringAsync%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a221d-1227">指定了無效的值。</span><span class="sxs-lookup"><span data-stu-id="a221d-1227">An invalid value was specified.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-1228">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-1228">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="a221d-1229">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span><span class="sxs-lookup"><span data-stu-id="a221d-1229">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public virtual void WriteValue (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteValue(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteValue(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteValue (value As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteValue(DateTime value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a221d-1230">要寫入的 <see cref="T:System.DateTime" /> 值。</span><span class="sxs-lookup"><span data-stu-id="a221d-1230">The <see cref="T:System.DateTime" /> value to write.</span></span></param>
        <summary><span data-ttu-id="a221d-1231">寫入 <see cref="T:System.DateTime" /> 值。</span><span class="sxs-lookup"><span data-stu-id="a221d-1231">Writes a <see cref="T:System.DateTime" /> value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-1232">這個方法會採用 common language runtime 物件，並將輸入的值轉換成使用 XML 結構描述定義語言 (XSD) 資料類型轉換規則所需的輸出類型。</span><span class="sxs-lookup"><span data-stu-id="a221d-1232">This method takes the common language runtime object and converts the input value to the desired output type using the XML Schema definition language (XSD) data type conversion rules.</span></span>  
  
 <span data-ttu-id="a221d-1233">呼叫 <xref:System.Xml.XmlWriter.WriteValue%2A> 方法時，<xref:System.Xml.XmlWriter> 會根據 XML 結構描述 (XSD) 資料型別規則將值轉換成其字串表示，並使用 <xref:System.Xml.XmlWriter.WriteString%2A> 方法將其寫出。</span><span class="sxs-lookup"><span data-stu-id="a221d-1233">When the <xref:System.Xml.XmlWriter.WriteValue%2A> method is called, the <xref:System.Xml.XmlWriter> converts the value to its string representations according to the XML Schema (XSD) data type rules and writes it out using the <xref:System.Xml.XmlWriter.WriteString%2A> method.</span></span>  
  
 <span data-ttu-id="a221d-1234">如果連續多次呼叫 <xref:System.Xml.XmlWriter.WriteValue%2A>，則不會使用空格分隔各個值。</span><span class="sxs-lookup"><span data-stu-id="a221d-1234">If <xref:System.Xml.XmlWriter.WriteValue%2A> is called multiple times in succession, the values are not delimited by a space.</span></span> <span data-ttu-id="a221d-1235">您必須在呼叫 <xref:System.Xml.XmlWriter.WriteWhitespace%2A> 之間呼叫 <xref:System.Xml.XmlWriter.WriteValue%2A>，以插入泛空白字元。</span><span class="sxs-lookup"><span data-stu-id="a221d-1235">You must call <xref:System.Xml.XmlWriter.WriteWhitespace%2A> between calls to <xref:System.Xml.XmlWriter.WriteValue%2A> to insert white space.</span></span> <span data-ttu-id="a221d-1236">傳遞至陣列型別<xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType>多載以寫出相異值的陣列。</span><span class="sxs-lookup"><span data-stu-id="a221d-1236">Pass an array type to the <xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType> overload to write out an array of distinct values.</span></span>  
  
 <span data-ttu-id="a221d-1237">如果此方法會在呼叫<xref:System.Xml.XmlWriter>純文字，具類型的值序列化成文字，該輸出執行個體。</span><span class="sxs-lookup"><span data-stu-id="a221d-1237">If this method is called on an <xref:System.Xml.XmlWriter> instance that outputs text-only, the typed value is serialized to text.</span></span>  
  
 <span data-ttu-id="a221d-1238">非同步作業，將這個方法的傳回值轉換為字串，並使用<xref:System.Xml.XmlWriter.WriteStringAsync%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-1238">For asynchronous operations, convert the return value of this method to a string and use the <xref:System.Xml.XmlWriter.WriteStringAsync%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a221d-1239">下列範例會將書籍節點，使用具類型的資料。</span><span class="sxs-lookup"><span data-stu-id="a221d-1239">The following example writes a book node using typed data.</span></span>  
  
 [!code-csharp[XmlWriter_v2#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter_v2/CS/writer_v2.cs#1)]
 [!code-vb[XmlWriter_v2#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter_v2/VB/writer_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a221d-1240">指定了無效的值。</span><span class="sxs-lookup"><span data-stu-id="a221d-1240">An invalid value was specified.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-1241">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-1241">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="a221d-1242">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span><span class="sxs-lookup"><span data-stu-id="a221d-1242">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public virtual void WriteValue (DateTimeOffset value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteValue(valuetype System.DateTimeOffset value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteValue(System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteValue (value As DateTimeOffset)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteValue(DateTimeOffset value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a221d-1243">要寫入的 <see cref="T:System.DateTimeOffset" /> 值。</span><span class="sxs-lookup"><span data-stu-id="a221d-1243">The <see cref="T:System.DateTimeOffset" /> value to write.</span></span></param>
        <summary><span data-ttu-id="a221d-1244">寫入 <see cref="T:System.DateTimeOffset" /> 值。</span><span class="sxs-lookup"><span data-stu-id="a221d-1244">Writes a <see cref="T:System.DateTimeOffset" /> value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-1245">非同步作業，將這個方法的傳回值轉換為字串，並使用<xref:System.Xml.XmlWriter.WriteStringAsync%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-1245">For asynchronous operations, convert the return value of this method to a string and use the <xref:System.Xml.XmlWriter.WriteStringAsync%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-1246">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-1246">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="a221d-1247">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span><span class="sxs-lookup"><span data-stu-id="a221d-1247">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public virtual void WriteValue (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteValue(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteValue(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteValue (value As Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteValue(System::Decimal value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a221d-1248">要寫入的 <see cref="T:System.Decimal" /> 值。</span><span class="sxs-lookup"><span data-stu-id="a221d-1248">The <see cref="T:System.Decimal" /> value to write.</span></span></param>
        <summary><span data-ttu-id="a221d-1249">寫入 <see cref="T:System.Decimal" /> 值。</span><span class="sxs-lookup"><span data-stu-id="a221d-1249">Writes a <see cref="T:System.Decimal" /> value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-1250">這個方法會採用 common language runtime 物件，並將輸入的值轉換成使用 XML 結構描述定義語言 (XSD) 資料類型轉換規則所需的輸出類型。</span><span class="sxs-lookup"><span data-stu-id="a221d-1250">This method takes the common language runtime object and converts the input value to the desired output type using the XML Schema definition language (XSD) data type conversion rules.</span></span>  
  
 <span data-ttu-id="a221d-1251">呼叫 <xref:System.Xml.XmlWriter.WriteValue%2A> 方法時，<xref:System.Xml.XmlWriter> 會根據 XML 結構描述 (XSD) 資料型別規則將值轉換成其字串表示，並使用 <xref:System.Xml.XmlWriter.WriteString%2A> 方法將其寫出。</span><span class="sxs-lookup"><span data-stu-id="a221d-1251">When the <xref:System.Xml.XmlWriter.WriteValue%2A> method is called, the <xref:System.Xml.XmlWriter> converts the value to its string representations according to the XML Schema (XSD) data type rules and writes it out using the <xref:System.Xml.XmlWriter.WriteString%2A> method.</span></span>  
  
 <span data-ttu-id="a221d-1252">如果連續多次呼叫 <xref:System.Xml.XmlWriter.WriteValue%2A>，則不會使用空格分隔各個值。</span><span class="sxs-lookup"><span data-stu-id="a221d-1252">If <xref:System.Xml.XmlWriter.WriteValue%2A> is called multiple times in succession, the values are not delimited by a space.</span></span> <span data-ttu-id="a221d-1253">您必須在呼叫 <xref:System.Xml.XmlWriter.WriteWhitespace%2A> 之間呼叫 <xref:System.Xml.XmlWriter.WriteValue%2A>，以插入泛空白字元。</span><span class="sxs-lookup"><span data-stu-id="a221d-1253">You must call <xref:System.Xml.XmlWriter.WriteWhitespace%2A> between calls to <xref:System.Xml.XmlWriter.WriteValue%2A> to insert white space.</span></span> <span data-ttu-id="a221d-1254">傳遞至陣列型別<xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType>多載以寫出相異值的陣列。</span><span class="sxs-lookup"><span data-stu-id="a221d-1254">Pass an array type to the <xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType> overload to write out an array of distinct values.</span></span>  
  
 <span data-ttu-id="a221d-1255">如果此方法會在呼叫<xref:System.Xml.XmlWriter>純文字，具類型的值序列化成文字，該輸出執行個體。</span><span class="sxs-lookup"><span data-stu-id="a221d-1255">If this method is called on an <xref:System.Xml.XmlWriter> instance that outputs text-only, the typed value is serialized to text.</span></span>  
  
 <span data-ttu-id="a221d-1256">非同步作業，將這個方法的傳回值轉換為字串，並使用<xref:System.Xml.XmlWriter.WriteStringAsync%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-1256">For asynchronous operations, convert the return value of this method to a string and use the <xref:System.Xml.XmlWriter.WriteStringAsync%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a221d-1257">指定了無效的值。</span><span class="sxs-lookup"><span data-stu-id="a221d-1257">An invalid value was specified.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-1258">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-1258">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="a221d-1259">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span><span class="sxs-lookup"><span data-stu-id="a221d-1259">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public virtual void WriteValue (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteValue(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteValue(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteValue (value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteValue(double value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a221d-1260">要寫入的 <see cref="T:System.Double" /> 值。</span><span class="sxs-lookup"><span data-stu-id="a221d-1260">The <see cref="T:System.Double" /> value to write.</span></span></param>
        <summary><span data-ttu-id="a221d-1261">寫入 <see cref="T:System.Double" /> 值。</span><span class="sxs-lookup"><span data-stu-id="a221d-1261">Writes a <see cref="T:System.Double" /> value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-1262">這個方法會採用 common language runtime 物件，並將輸入的值轉換成使用 XML 結構描述定義語言 (XSD) 資料類型轉換規則所需的輸出類型。</span><span class="sxs-lookup"><span data-stu-id="a221d-1262">This method takes the common language runtime object and converts the input value to the desired output type using the XML Schema definition language (XSD) data type conversion rules.</span></span>  
  
 <span data-ttu-id="a221d-1263">呼叫 <xref:System.Xml.XmlWriter.WriteValue%2A> 方法時，<xref:System.Xml.XmlWriter> 會根據 XML 結構描述 (XSD) 資料型別規則將值轉換成其字串表示，並使用 <xref:System.Xml.XmlWriter.WriteString%2A> 方法將其寫出。</span><span class="sxs-lookup"><span data-stu-id="a221d-1263">When the <xref:System.Xml.XmlWriter.WriteValue%2A> method is called, the <xref:System.Xml.XmlWriter> converts the value to its string representations according to the XML Schema (XSD) data type rules and writes it out using the <xref:System.Xml.XmlWriter.WriteString%2A> method.</span></span>  
  
 <span data-ttu-id="a221d-1264">如果連續多次呼叫 <xref:System.Xml.XmlWriter.WriteValue%2A>，則不會使用空格分隔各個值。</span><span class="sxs-lookup"><span data-stu-id="a221d-1264">If <xref:System.Xml.XmlWriter.WriteValue%2A> is called multiple times in succession, the values are not delimited by a space.</span></span> <span data-ttu-id="a221d-1265">您必須在呼叫 <xref:System.Xml.XmlWriter.WriteWhitespace%2A> 之間呼叫 <xref:System.Xml.XmlWriter.WriteValue%2A>，以插入泛空白字元。</span><span class="sxs-lookup"><span data-stu-id="a221d-1265">You must call <xref:System.Xml.XmlWriter.WriteWhitespace%2A> between calls to <xref:System.Xml.XmlWriter.WriteValue%2A> to insert white space.</span></span> <span data-ttu-id="a221d-1266">傳遞至陣列型別<xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType>多載以寫出相異值的陣列。</span><span class="sxs-lookup"><span data-stu-id="a221d-1266">Pass an array type to the <xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType> overload to write out an array of distinct values.</span></span>  
  
 <span data-ttu-id="a221d-1267">如果此方法會在呼叫<xref:System.Xml.XmlWriter>純文字，具類型的值序列化成文字，該輸出執行個體。</span><span class="sxs-lookup"><span data-stu-id="a221d-1267">If this method is called on an <xref:System.Xml.XmlWriter> instance that outputs text-only, the typed value is serialized to text.</span></span>  
  
 <span data-ttu-id="a221d-1268">非同步作業，將這個方法的傳回值轉換為字串，並使用<xref:System.Xml.XmlWriter.WriteStringAsync%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-1268">For asynchronous operations, convert the return value of this method to a string and use the <xref:System.Xml.XmlWriter.WriteStringAsync%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a221d-1269">下列範例會將書籍節點，使用具類型的資料。</span><span class="sxs-lookup"><span data-stu-id="a221d-1269">The following example writes a book node using typed data.</span></span>  
  
 [!code-csharp[XmlWriter_v2#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter_v2/CS/writer_v2.cs#1)]
 [!code-vb[XmlWriter_v2#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter_v2/VB/writer_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a221d-1270">指定了無效的值。</span><span class="sxs-lookup"><span data-stu-id="a221d-1270">An invalid value was specified.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-1271">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-1271">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="a221d-1272">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span><span class="sxs-lookup"><span data-stu-id="a221d-1272">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public virtual void WriteValue (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteValue(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteValue (value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteValue(int value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a221d-1273">要寫入的 <see cref="T:System.Int32" /> 值。</span><span class="sxs-lookup"><span data-stu-id="a221d-1273">The <see cref="T:System.Int32" /> value to write.</span></span></param>
        <summary><span data-ttu-id="a221d-1274">寫入 <see cref="T:System.Int32" /> 值。</span><span class="sxs-lookup"><span data-stu-id="a221d-1274">Writes a <see cref="T:System.Int32" /> value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-1275">這個方法會採用 common language runtime 物件，並將輸入的值轉換成使用 XML 結構描述定義語言 (XSD) 資料類型轉換規則所需的輸出類型。</span><span class="sxs-lookup"><span data-stu-id="a221d-1275">This method takes the common language runtime object and converts the input value to the desired output type using the XML Schema definition language (XSD) data type conversion rules.</span></span>  
  
 <span data-ttu-id="a221d-1276">呼叫 <xref:System.Xml.XmlWriter.WriteValue%2A> 方法時，<xref:System.Xml.XmlWriter> 會根據 XML 結構描述 (XSD) 資料型別規則將值轉換成其字串表示，並使用 <xref:System.Xml.XmlWriter.WriteString%2A> 方法將其寫出。</span><span class="sxs-lookup"><span data-stu-id="a221d-1276">When the <xref:System.Xml.XmlWriter.WriteValue%2A> method is called, the <xref:System.Xml.XmlWriter> converts the value to its string representations according to the XML Schema (XSD) data type rules and writes it out using the <xref:System.Xml.XmlWriter.WriteString%2A> method.</span></span>  
  
 <span data-ttu-id="a221d-1277">如果連續多次呼叫 <xref:System.Xml.XmlWriter.WriteValue%2A>，則不會使用空格分隔各個值。</span><span class="sxs-lookup"><span data-stu-id="a221d-1277">If <xref:System.Xml.XmlWriter.WriteValue%2A> is called multiple times in succession, the values are not delimited by a space.</span></span> <span data-ttu-id="a221d-1278">您必須在呼叫 <xref:System.Xml.XmlWriter.WriteWhitespace%2A> 之間呼叫 <xref:System.Xml.XmlWriter.WriteValue%2A>，以插入泛空白字元。</span><span class="sxs-lookup"><span data-stu-id="a221d-1278">You must call <xref:System.Xml.XmlWriter.WriteWhitespace%2A> between calls to <xref:System.Xml.XmlWriter.WriteValue%2A> to insert white space.</span></span> <span data-ttu-id="a221d-1279">傳遞至陣列型別<xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType>多載以寫出相異值的陣列。</span><span class="sxs-lookup"><span data-stu-id="a221d-1279">Pass an array type to the <xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType> overload to write out an array of distinct values.</span></span>  
  
 <span data-ttu-id="a221d-1280">如果此方法會在呼叫<xref:System.Xml.XmlWriter>純文字，具類型的值序列化成文字，該輸出執行個體。</span><span class="sxs-lookup"><span data-stu-id="a221d-1280">If this method is called on an <xref:System.Xml.XmlWriter> instance that outputs text-only, the typed value is serialized to text.</span></span>  
  
 <span data-ttu-id="a221d-1281">非同步作業，將這個方法的傳回值轉換為字串，並使用<xref:System.Xml.XmlWriter.WriteStringAsync%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-1281">For asynchronous operations, convert the return value of this method to a string and use the <xref:System.Xml.XmlWriter.WriteStringAsync%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a221d-1282">指定了無效的值。</span><span class="sxs-lookup"><span data-stu-id="a221d-1282">An invalid value was specified.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-1283">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-1283">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="a221d-1284">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span><span class="sxs-lookup"><span data-stu-id="a221d-1284">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public virtual void WriteValue (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteValue(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteValue(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteValue (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteValue(long value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a221d-1285">要寫入的 <see cref="T:System.Int64" /> 值。</span><span class="sxs-lookup"><span data-stu-id="a221d-1285">The <see cref="T:System.Int64" /> value to write.</span></span></param>
        <summary><span data-ttu-id="a221d-1286">寫入 <see cref="T:System.Int64" /> 值。</span><span class="sxs-lookup"><span data-stu-id="a221d-1286">Writes a <see cref="T:System.Int64" /> value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-1287">這個方法會採用 common language runtime 物件，並將輸入的值轉換成使用 XML 結構描述定義語言 (XSD) 資料類型轉換規則所需的輸出類型。</span><span class="sxs-lookup"><span data-stu-id="a221d-1287">This method takes the common language runtime object and converts the input value to the desired output type using the XML Schema definition language (XSD) data type conversion rules.</span></span>  
  
 <span data-ttu-id="a221d-1288">呼叫 <xref:System.Xml.XmlWriter.WriteValue%2A> 方法時，<xref:System.Xml.XmlWriter> 會根據 XML 結構描述 (XSD) 資料型別規則將值轉換成其字串表示，並使用 <xref:System.Xml.XmlWriter.WriteString%2A> 方法將其寫出。</span><span class="sxs-lookup"><span data-stu-id="a221d-1288">When the <xref:System.Xml.XmlWriter.WriteValue%2A> method is called, the <xref:System.Xml.XmlWriter> converts the value to its string representations according to the XML Schema (XSD) data type rules and writes it out using the <xref:System.Xml.XmlWriter.WriteString%2A> method.</span></span>  
  
 <span data-ttu-id="a221d-1289">如果連續多次呼叫 <xref:System.Xml.XmlWriter.WriteValue%2A>，則不會使用空格分隔各個值。</span><span class="sxs-lookup"><span data-stu-id="a221d-1289">If <xref:System.Xml.XmlWriter.WriteValue%2A> is called multiple times in succession, the values are not delimited by a space.</span></span> <span data-ttu-id="a221d-1290">您必須在呼叫 <xref:System.Xml.XmlWriter.WriteWhitespace%2A> 之間呼叫 <xref:System.Xml.XmlWriter.WriteValue%2A>，以插入泛空白字元。</span><span class="sxs-lookup"><span data-stu-id="a221d-1290">You must call <xref:System.Xml.XmlWriter.WriteWhitespace%2A> between calls to <xref:System.Xml.XmlWriter.WriteValue%2A> to insert white space.</span></span> <span data-ttu-id="a221d-1291">傳遞至陣列型別<xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType>多載以寫出相異值的陣列。</span><span class="sxs-lookup"><span data-stu-id="a221d-1291">Pass an array type to the <xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType> overload to write out an array of distinct values.</span></span>  
  
 <span data-ttu-id="a221d-1292">如果此方法會在呼叫<xref:System.Xml.XmlWriter>純文字，具類型的值序列化成文字，該輸出執行個體。</span><span class="sxs-lookup"><span data-stu-id="a221d-1292">If this method is called on an <xref:System.Xml.XmlWriter> instance that outputs text-only, the typed value is serialized to text.</span></span>  
  
 <span data-ttu-id="a221d-1293">非同步作業，將這個方法的傳回值轉換為字串，並使用<xref:System.Xml.XmlWriter.WriteStringAsync%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-1293">For asynchronous operations, convert the return value of this method to a string and use the <xref:System.Xml.XmlWriter.WriteStringAsync%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a221d-1294">指定了無效的值。</span><span class="sxs-lookup"><span data-stu-id="a221d-1294">An invalid value was specified.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-1295">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-1295">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="a221d-1296">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span><span class="sxs-lookup"><span data-stu-id="a221d-1296">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public virtual void WriteValue (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteValue(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteValue (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteValue(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a221d-1297">要寫入的物件值。</span><span class="sxs-lookup"><span data-stu-id="a221d-1297">The object value to write.</span></span>  
  
 <span data-ttu-id="a221d-1298">**附註**：使用 .NET Framework 3.5 的版本時，這個方法會接受 <see cref="T:System.DateTimeOffset" /> 作為參數。</span><span class="sxs-lookup"><span data-stu-id="a221d-1298">**Note** With the release of the .NET Framework 3.5, this method accepts <see cref="T:System.DateTimeOffset" /> as a parameter.</span></span></param>
        <summary><span data-ttu-id="a221d-1299">寫入物件值。</span><span class="sxs-lookup"><span data-stu-id="a221d-1299">Writes the object value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-1300">這個方法會採用 common language runtime (CLR) 物件，並將輸入的值轉換成使用 XML 結構描述定義語言 (XSD) 資料類型轉換規則所需的輸出類型。</span><span class="sxs-lookup"><span data-stu-id="a221d-1300">This method takes the common language runtime (CLR) object and converts the input value to the desired output type using the XML Schema definition language (XSD) data type conversion rules.</span></span>  
  
 <span data-ttu-id="a221d-1301">如果 CLR 物件是清單型別如<xref:System.Collections.IEnumerable>， <xref:System.Collections.IList>，或<xref:System.Collections.ICollection>，它會被視為實值類型的陣列。</span><span class="sxs-lookup"><span data-stu-id="a221d-1301">If the CLR object is a list type such as <xref:System.Collections.IEnumerable>, <xref:System.Collections.IList>, or <xref:System.Collections.ICollection>, it is treated as an array of the value type.</span></span> <span data-ttu-id="a221d-1302"><xref:System.Xml.XmlWriter>轉換成其字串表示，根據 XML 結構描述 (XSD) 資料型別值規則，並將它寫出使用<xref:System.Xml.XmlWriter.WriteString%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-1302">The <xref:System.Xml.XmlWriter> converts the value to its string representations according to the XML Schema (XSD) data type rules and writes it out using the <xref:System.Xml.XmlWriter.WriteString%2A> method.</span></span>  
  
 <span data-ttu-id="a221d-1303">如果此方法會在呼叫<xref:System.Xml.XmlWriter>純文字，具類型的值序列化成文字，該輸出執行個體。</span><span class="sxs-lookup"><span data-stu-id="a221d-1303">If this method is called on an <xref:System.Xml.XmlWriter> instance that outputs text-only, the typed value is serialized to text.</span></span>  
  
 <span data-ttu-id="a221d-1304">非同步作業，將這個方法的傳回值轉換為字串，並使用<xref:System.Xml.XmlWriter.WriteStringAsync%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-1304">For asynchronous operations, convert the return value of this method to a string and use the <xref:System.Xml.XmlWriter.WriteStringAsync%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a221d-1305">指定了無效的值。</span><span class="sxs-lookup"><span data-stu-id="a221d-1305">An invalid value was specified.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a221d-1306"><paramref name="value" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a221d-1306">The <paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-1307">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-1307">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="a221d-1308">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span><span class="sxs-lookup"><span data-stu-id="a221d-1308">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public virtual void WriteValue (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteValue(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteValue(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteValue (value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteValue(float value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a221d-1309">要寫入的單精確度浮點數。</span><span class="sxs-lookup"><span data-stu-id="a221d-1309">The single-precision floating-point number to write.</span></span></param>
        <summary><span data-ttu-id="a221d-1310">寫入單精確度浮點數。</span><span class="sxs-lookup"><span data-stu-id="a221d-1310">Writes a single-precision floating-point number.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-1311">這個方法會採用 common language runtime 物件，並將輸入的值轉換成使用 XML 結構描述定義語言 (XSD) 資料類型轉換規則所需的輸出類型。</span><span class="sxs-lookup"><span data-stu-id="a221d-1311">This method takes the common language runtime object and converts the input value to the desired output type using the XML Schema definition language (XSD) data type conversion rules.</span></span>  
  
 <span data-ttu-id="a221d-1312">呼叫 <xref:System.Xml.XmlWriter.WriteValue%2A> 方法時，<xref:System.Xml.XmlWriter> 會根據 XML 結構描述 (XSD) 資料型別規則將值轉換成其字串表示，並使用 <xref:System.Xml.XmlWriter.WriteString%2A> 方法將其寫出。</span><span class="sxs-lookup"><span data-stu-id="a221d-1312">When the <xref:System.Xml.XmlWriter.WriteValue%2A> method is called, the <xref:System.Xml.XmlWriter> converts the value to its string representations according to the XML Schema (XSD) data type rules and writes it out using the <xref:System.Xml.XmlWriter.WriteString%2A> method.</span></span>  
  
 <span data-ttu-id="a221d-1313">如果連續多次呼叫 <xref:System.Xml.XmlWriter.WriteValue%2A>，則不會使用空格分隔各個值。</span><span class="sxs-lookup"><span data-stu-id="a221d-1313">If <xref:System.Xml.XmlWriter.WriteValue%2A> is called multiple times in succession, the values are not delimited by a space.</span></span> <span data-ttu-id="a221d-1314">您必須在呼叫 <xref:System.Xml.XmlWriter.WriteWhitespace%2A> 之間呼叫 <xref:System.Xml.XmlWriter.WriteValue%2A>，以插入泛空白字元。</span><span class="sxs-lookup"><span data-stu-id="a221d-1314">You must call <xref:System.Xml.XmlWriter.WriteWhitespace%2A> between calls to <xref:System.Xml.XmlWriter.WriteValue%2A> to insert white space.</span></span> <span data-ttu-id="a221d-1315">傳遞至陣列型別<xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType>多載以寫出相異值的陣列。</span><span class="sxs-lookup"><span data-stu-id="a221d-1315">Pass an array type to the <xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType> overload to write out an array of distinct values.</span></span>  
  
 <span data-ttu-id="a221d-1316">如果此方法會在呼叫<xref:System.Xml.XmlWriter>純文字，具類型的值序列化成文字，該輸出執行個體。</span><span class="sxs-lookup"><span data-stu-id="a221d-1316">If this method is called on an <xref:System.Xml.XmlWriter> instance that outputs text-only, the typed value is serialized to text.</span></span>  
  
 <span data-ttu-id="a221d-1317">非同步作業，將這個方法的傳回值轉換為字串，並使用<xref:System.Xml.XmlWriter.WriteStringAsync%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-1317">For asynchronous operations, convert the return value of this method to a string and use the <xref:System.Xml.XmlWriter.WriteStringAsync%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a221d-1318">指定了無效的值。</span><span class="sxs-lookup"><span data-stu-id="a221d-1318">An invalid value was specified.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-1319">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-1319">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="a221d-1320">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span><span class="sxs-lookup"><span data-stu-id="a221d-1320">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public virtual void WriteValue (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteValue(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteValue (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteValue(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a221d-1321">要寫入的 <see cref="T:System.String" /> 值。</span><span class="sxs-lookup"><span data-stu-id="a221d-1321">The <see cref="T:System.String" /> value to write.</span></span></param>
        <summary><span data-ttu-id="a221d-1322">寫入 <see cref="T:System.String" /> 值。</span><span class="sxs-lookup"><span data-stu-id="a221d-1322">Writes a <see cref="T:System.String" /> value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-1323">這個方法會採用 common language runtime 物件，並將輸入的值轉換成使用 XML 結構描述定義語言 (XSD) 資料類型轉換規則所需的輸出類型。</span><span class="sxs-lookup"><span data-stu-id="a221d-1323">This method takes the common language runtime object and converts the input value to the desired output type using the XML Schema definition language (XSD) data type conversion rules.</span></span>  
  
 <span data-ttu-id="a221d-1324">如果連續多次呼叫 <xref:System.Xml.XmlWriter.WriteValue%2A>，則不會使用空格分隔各個值。</span><span class="sxs-lookup"><span data-stu-id="a221d-1324">If <xref:System.Xml.XmlWriter.WriteValue%2A> is called multiple times in succession, the values are not delimited by a space.</span></span> <span data-ttu-id="a221d-1325">您必須在呼叫 <xref:System.Xml.XmlWriter.WriteWhitespace%2A> 之間呼叫 <xref:System.Xml.XmlWriter.WriteValue%2A>，以插入泛空白字元。</span><span class="sxs-lookup"><span data-stu-id="a221d-1325">You must call <xref:System.Xml.XmlWriter.WriteWhitespace%2A> between calls to <xref:System.Xml.XmlWriter.WriteValue%2A> to insert white space.</span></span> <span data-ttu-id="a221d-1326">傳遞至陣列型別<xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType>多載以寫出相異值的陣列。</span><span class="sxs-lookup"><span data-stu-id="a221d-1326">Pass an array type to the <xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType> overload to write out an array of distinct values.</span></span>  
  
 <span data-ttu-id="a221d-1327">如果此方法會在呼叫<xref:System.Xml.XmlWriter>純文字，具類型的值序列化成文字，該輸出執行個體。</span><span class="sxs-lookup"><span data-stu-id="a221d-1327">If this method is called on an <xref:System.Xml.XmlWriter> instance that outputs text-only, the typed value is serialized to text.</span></span>  
  
 <span data-ttu-id="a221d-1328">非同步作業，使用<xref:System.Xml.XmlWriter.WriteStringAsync%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-1328">For asynchronous operations, use the <xref:System.Xml.XmlWriter.WriteStringAsync%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a221d-1329">指定了無效的值。</span><span class="sxs-lookup"><span data-stu-id="a221d-1329">An invalid value was specified.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-1330">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-1330">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="a221d-1331">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span><span class="sxs-lookup"><span data-stu-id="a221d-1331">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteWhitespace">
      <MemberSignature Language="C#" Value="public abstract void WriteWhitespace (string ws);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteWhitespace(string ws) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteWhitespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteWhitespace (ws As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteWhitespace(System::String ^ ws);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ws" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ws"><span data-ttu-id="a221d-1332">空白字元的字串。</span><span class="sxs-lookup"><span data-stu-id="a221d-1332">The string of white space characters.</span></span></param>
        <summary><span data-ttu-id="a221d-1333">在衍生類別中覆寫時，寫出指定的空白字元。</span><span class="sxs-lookup"><span data-stu-id="a221d-1333">When overridden in a derived class, writes out the given white space.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-1334">這個方法用來手動格式化文件。</span><span class="sxs-lookup"><span data-stu-id="a221d-1334">This method is used to manually format your document.</span></span>  
  
 <span data-ttu-id="a221d-1335">這個方法的非同步版本，請參閱<xref:System.Xml.XmlWriter.WriteWhitespaceAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="a221d-1335">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteWhitespaceAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a221d-1336">字串包含非泛空白字元。</span><span class="sxs-lookup"><span data-stu-id="a221d-1336">The string contains non-white space characters.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-1337">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-1337">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="a221d-1338">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span><span class="sxs-lookup"><span data-stu-id="a221d-1338">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteWhitespaceAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteWhitespaceAsync (string ws);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteWhitespaceAsync(string ws) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteWhitespaceAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteWhitespaceAsync (ws As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteWhitespaceAsync(System::String ^ ws);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ws" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ws"><span data-ttu-id="a221d-1339">空白字元的字串。</span><span class="sxs-lookup"><span data-stu-id="a221d-1339">The string of white space characters.</span></span></param>
        <summary><span data-ttu-id="a221d-1340">以非同步的方式寫出指定的空白字元。</span><span class="sxs-lookup"><span data-stu-id="a221d-1340">Asynchronously writes out the given white space.</span></span></summary>
        <returns><span data-ttu-id="a221d-1341">表示非同步 <see langword="WriteWhitespace" /> 作業的工作。</span><span class="sxs-lookup"><span data-stu-id="a221d-1341">The task that represents the asynchronous <see langword="WriteWhitespace" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-1342">這是非同步版本<xref:System.Xml.XmlWriter.WriteWhitespace%2A>，使用相同的功能。</span><span class="sxs-lookup"><span data-stu-id="a221d-1342">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteWhitespace%2A>, with the same functionality.</span></span> <span data-ttu-id="a221d-1343">若要使用此方法，您必須設定<xref:System.Xml.XmlWriterSettings.Async%2A>旗標設為`true`。</span><span class="sxs-lookup"><span data-stu-id="a221d-1343">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-1344">在未將 <see cref="P:System.Xml.XmlWriterSettings.Async" /> 旗標設為 <see langword="true" />的情況下呼叫了 <see cref="T:System.Xml.XmlWriter" /> 非同步方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-1344">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="a221d-1345">在此情況下，就會擲回 <see cref="T:System.InvalidOperationException" /> 並顯示訊息「如果您要使用非同步方法，請將 XmlWriterSettings.Async 設為 true」。</span><span class="sxs-lookup"><span data-stu-id="a221d-1345">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="XmlLang">
      <MemberSignature Language="C#" Value="public virtual string XmlLang { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XmlLang" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriter.XmlLang" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property XmlLang As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ XmlLang { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a221d-1346">當在衍生類別中覆寫時，取得目前<see langword="xml:lang" />範圍。</span><span class="sxs-lookup"><span data-stu-id="a221d-1346">When overridden in a derived class, gets the current <see langword="xml:lang" /> scope.</span></span></summary>
        <value><span data-ttu-id="a221d-1347">目前的 <see langword="xml:lang" /> 範圍。</span><span class="sxs-lookup"><span data-stu-id="a221d-1347">The current <see langword="xml:lang" /> scope.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-1348">這個屬性允許一個元件，以找出哪種狀態另一個元件已離開寫入器。</span><span class="sxs-lookup"><span data-stu-id="a221d-1348">This property allows one component to find out in what state another component has left the writer.</span></span> <span data-ttu-id="a221d-1349">例如，可能是一個元件要通知另產生哪一個語言的說明文字。</span><span class="sxs-lookup"><span data-stu-id="a221d-1349">For example, perhaps one component wants to tell another which language help text to generate.</span></span> <span data-ttu-id="a221d-1350">語言資訊藉由撰寫溝通`xml:lang`屬性。</span><span class="sxs-lookup"><span data-stu-id="a221d-1350">The language information is communicated by writing an `xml:lang` attribute.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-1351">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-1351">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="a221d-1352">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span><span class="sxs-lookup"><span data-stu-id="a221d-1352">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="XmlSpace">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlSpace XmlSpace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlSpace XmlSpace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriter.XmlSpace" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property XmlSpace As XmlSpace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlSpace XmlSpace { System::Xml::XmlSpace get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlSpace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a221d-1353">在衍生類別中覆寫時，取得表示目前 <see langword="xml:space" /> 範圍的 <see cref="T:System.Xml.XmlSpace" />。</span><span class="sxs-lookup"><span data-stu-id="a221d-1353">When overridden in a derived class, gets an <see cref="T:System.Xml.XmlSpace" /> representing the current <see langword="xml:space" /> scope.</span></span></summary>
        <value><span data-ttu-id="a221d-1354"><see langword="XmlSpace" />，表示目前的 <see langword="xml:space" /> 範圍。</span><span class="sxs-lookup"><span data-stu-id="a221d-1354">An <see langword="XmlSpace" /> representing the current <see langword="xml:space" /> scope.</span></span>  
  
 <span data-ttu-id="a221d-1355"><list type="table"><listheader><term> 值</span><span class="sxs-lookup"><span data-stu-id="a221d-1355"><list type="table"><listheader><term> Value</span></span>  
  
 <span data-ttu-id="a221d-1356"></term><description> 意義</span><span class="sxs-lookup"><span data-stu-id="a221d-1356"></term><description> Meaning</span></span>  
  
 <span data-ttu-id="a221d-1357"></description></listheader><item><term><see langword="None" /></term><description> 這是預設值，如果沒有<see langword="xml:space" />有範圍。</span><span class="sxs-lookup"><span data-stu-id="a221d-1357"></description></listheader><item><term><see langword="None" /></term><description> This is the default if no <see langword="xml:space" /> scope exists.</span></span>  
  
 <span data-ttu-id="a221d-1358"></description></item><item><term><see langword="Default" /></term><description> 目前的範圍是<see langword="xml:space" />="default"。</span><span class="sxs-lookup"><span data-stu-id="a221d-1358"></description></item><item><term><see langword="Default" /></term><description> The current scope is <see langword="xml:space" />="default".</span></span>  
  
 <span data-ttu-id="a221d-1359"></description></item><item><term><see langword="Preserve" /></term><description> 目前的範圍是<see langword="xml:space" />="preserve"。</span><span class="sxs-lookup"><span data-stu-id="a221d-1359"></description></item><item><term><see langword="Preserve" /></term><description> The current scope is <see langword="xml:space" />="preserve".</span></span>  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a221d-1360">這可讓一個元件，找出另一個元件中的寫入器所處的狀態。</span><span class="sxs-lookup"><span data-stu-id="a221d-1360">This allows one component to find out what state another component has left the writer in.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a221d-1361">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="a221d-1361">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="a221d-1362">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span><span class="sxs-lookup"><span data-stu-id="a221d-1362">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>