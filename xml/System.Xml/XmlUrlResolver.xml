<Type Name="XmlUrlResolver" FullName="System.Xml.XmlUrlResolver">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b8e1fb0158f2e14b50949bfd5f58d984da76d399" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37483025" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlUrlResolver : System.Xml.XmlResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlUrlResolver extends System.Xml.XmlResolver" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlUrlResolver" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlUrlResolver&#xA;Inherits XmlResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlUrlResolver : System::Xml::XmlResolver" />
  <TypeSignature Language="F#" Value="type XmlUrlResolver = class&#xA;    inherit XmlResolver" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.XmlResolver</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="8287f-101">解析由統一資源識別項 (URI) 所命名的外部 XML 資源。</span>
      <span class="sxs-lookup">
        <span data-stu-id="8287f-101">Resolves external XML resources named by a Uniform Resource Identifier (URI).</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8287f-102"><xref:System.Xml.XmlUrlResolver> 用來解析外部 XML 資源，例如文件類型定義 (Dtd) 或結構描述的實體。</span><span class="sxs-lookup"><span data-stu-id="8287f-102"><xref:System.Xml.XmlUrlResolver> is used to resolve external XML resources such as entities, document type definitions (DTDs) or schemas.</span></span> <span data-ttu-id="8287f-103">它也是用來處理程序 include 和 import Extensible StyleSheet Language (XSL) 樣式表或 XML 結構描述定義語言 (XSD) 結構描述中所找到的項目。</span><span class="sxs-lookup"><span data-stu-id="8287f-103">It is also used to process include and import elements found in Extensible StyleSheet Language (XSL) style sheets or XML Schema definition language (XSD) schemas.</span></span>  
  
 <span data-ttu-id="8287f-104"><xref:System.Xml.XmlUrlResolver> 是中的所有類別的預設解析程式<xref:System.Xml>命名空間。</span><span class="sxs-lookup"><span data-stu-id="8287f-104"><xref:System.Xml.XmlUrlResolver> is the default resolver for all classes in the <xref:System.Xml> namespace.</span></span> <span data-ttu-id="8287f-105">它支援 `file://` 及 `http://` 通訊協定，以及 <xref:System.Net.WebRequest> 類別的要求。</span><span class="sxs-lookup"><span data-stu-id="8287f-105">It supports the `file://` and `http://` protocols and requests from the <xref:System.Net.WebRequest> class.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8287f-106"><xref:System.Xml.XmlUrlResolver> 物件可以包含機密資訊 (如使用者認證)。</span><span class="sxs-lookup"><span data-stu-id="8287f-106"><xref:System.Xml.XmlUrlResolver> objects can contain sensitive information such as user credentials.</span></span> <span data-ttu-id="8287f-107">當您快取時應該要小心<xref:System.Xml.XmlUrlResolver>物件，並不應將傳遞<xref:System.Xml.XmlUrlResolver>物件到不受信任的元件。</span><span class="sxs-lookup"><span data-stu-id="8287f-107">You should be careful when you cache <xref:System.Xml.XmlUrlResolver> objects and should not pass <xref:System.Xml.XmlUrlResolver> objects to an untrusted component.</span></span>  
  
## <a name="resolving-dtds"></a><span data-ttu-id="8287f-108">解析 Dtd</span><span class="sxs-lookup"><span data-stu-id="8287f-108">Resolving DTDs</span></span>  
 <span data-ttu-id="8287f-109">如果 XML 讀取器 (<xref:System.Xml.XmlReader>) 會讀取 XML 檔案，其中包含外部 DTD 時，它會呼叫<xref:System.Xml.XmlUrlResolver.GetEntityAsync%2A?displayProperty=nameWithType>方法來取得 DTD 的資料流表示。</span><span class="sxs-lookup"><span data-stu-id="8287f-109">If an XML reader (<xref:System.Xml.XmlReader>) is reading an XML file that contains an external DTD, it calls the <xref:System.Xml.XmlUrlResolver.GetEntityAsync%2A?displayProperty=nameWithType> method to get a stream representation of the DTD.</span></span> <span data-ttu-id="8287f-110">DTD 的 URI 是相對 URI，如果 XML 讀取器會呼叫<xref:System.Xml.XmlUrlResolver.ResolveUri%2A?displayProperty=nameWithType>方法，並傳回絕對 URI 給定`relativeUri`和`baseURi`參數。</span><span class="sxs-lookup"><span data-stu-id="8287f-110">If the URI of the DTD is a relative URI, the XML reader calls the <xref:System.Xml.XmlUrlResolver.ResolveUri%2A?displayProperty=nameWithType> method and returns an absolute URI for the given `relativeUri` and `baseURi` parameters.</span></span> <span data-ttu-id="8287f-111">如果<xref:System.Xml.XmlUrlResolver>並不知道如何解析的 URI，它會傳回`null`。</span><span class="sxs-lookup"><span data-stu-id="8287f-111">If the <xref:System.Xml.XmlUrlResolver> doesn't know how to resolve the URI, it returns `null`.</span></span>  
  
 <span data-ttu-id="8287f-112"><xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=nameWithType> 方法會適當地使用 <xref:System.Xml.XmlUrlResolver.Credentials%2A> 屬性中的資訊來取得資源的存取。</span><span class="sxs-lookup"><span data-stu-id="8287f-112">The <xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=nameWithType> method uses the information in the <xref:System.Xml.XmlUrlResolver.Credentials%2A> property as appropriate to gain access to the resource.</span></span> <span data-ttu-id="8287f-113">由於安全性原因，沒有針對此屬性的 `get` 存取子。</span><span class="sxs-lookup"><span data-stu-id="8287f-113">There is no `get` accessor to this property for security reasons.</span></span> <span data-ttu-id="8287f-114">當覆寫<xref:System.Xml.XmlResolver>， **GetEntity**是方法，它會利用中的認證資訊**認證**屬性。</span><span class="sxs-lookup"><span data-stu-id="8287f-114">When overwriting <xref:System.Xml.XmlResolver>, **GetEntity** is the method that utilizes the credential information in the **Credentials** property.</span></span>  
  
 <span data-ttu-id="8287f-115">解析所有其他 XML 資源與解析 DTD 很相似。</span><span class="sxs-lookup"><span data-stu-id="8287f-115">Resolving all other XML resources is very similar to resolving DTDs.</span></span> <span data-ttu-id="8287f-116"><xref:System.Xml.XmlResolver> 交涉與外部資源的連接，並傳回<xref:System.IO.Stream>內容表示法。</span><span class="sxs-lookup"><span data-stu-id="8287f-116"><xref:System.Xml.XmlResolver> negotiates the connection with the external resource and returns a <xref:System.IO.Stream> representation of the content.</span></span> <span data-ttu-id="8287f-117">正在呼叫的物件<xref:System.Xml.XmlResolver>解譯資料流。</span><span class="sxs-lookup"><span data-stu-id="8287f-117">The object that is making the call to <xref:System.Xml.XmlResolver> interprets the stream.</span></span>  
  
## <a name="extending-the-xmlurlresolver-class"></a><span data-ttu-id="8287f-118">擴充 XmlUrlResolver 類別</span><span class="sxs-lookup"><span data-stu-id="8287f-118">Extending the XmlUrlResolver class</span></span>  
 <span data-ttu-id="8287f-119"><xref:System.Xml.XmlUrlResolver> 類別的預設行為是解析它的來源 (而非快取) 中的 XML 資料資源。</span><span class="sxs-lookup"><span data-stu-id="8287f-119">The default behavior of the <xref:System.Xml.XmlUrlResolver> class is to resolve an XML data resource from its source, not from cache.</span></span> <span data-ttu-id="8287f-120">在某些情況下，解析快取中的資料資源可提高應用程式的效能，因為這樣會節省資料資源伺服器的往來成本。</span><span class="sxs-lookup"><span data-stu-id="8287f-120">In some cases, resolving a data resource from cache can improve the performance of an application by saving a trip to the data resource's server.</span></span> <span data-ttu-id="8287f-121">這裡得到的效能必須針對最新內容的需求來加以考量。</span><span class="sxs-lookup"><span data-stu-id="8287f-121">The performance gains here must be weighed against the need for up-to-date content.</span></span>  
  
 <span data-ttu-id="8287f-122">下列範例會延伸<xref:System.Xml.XmlUrlResolver>並建立新的類別， `XmlCachingResolver`、 從快取擷取資源。</span><span class="sxs-lookup"><span data-stu-id="8287f-122">The following example extends <xref:System.Xml.XmlUrlResolver> and builds a new class, `XmlCachingResolver`, to retrieve resources from the cache.</span></span> <span data-ttu-id="8287f-123">這是透過覆寫 <xref:System.Xml.XmlUrlResolver.Credentials%2A?displayProperty=nameWithType> 屬性和 <xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=nameWithType> 方法來完成。</span><span class="sxs-lookup"><span data-stu-id="8287f-123">This is done by overriding the <xref:System.Xml.XmlUrlResolver.Credentials%2A?displayProperty=nameWithType> property and the <xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=nameWithType> method.</span></span>  
  
 [!code-csharp[XmlCachingResolver_ex#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlCachingResolver_ex/CS/XmlCachingResolver_ex.cs#1)]
 [!code-vb[XmlCachingResolver_ex#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlCachingResolver_ex/VB/XmlCachingResolver_ex.vb#1)]  
  
 <span data-ttu-id="8287f-124">`XmlCachingResolver` 類別的快取行為是在 `GetEntity` 方法中實作。</span><span class="sxs-lookup"><span data-stu-id="8287f-124">The caching behavior of the `XmlCachingResolver` class is implemented in the `GetEntity` method.</span></span> <span data-ttu-id="8287f-125">這是透過建立新的 <xref:System.Net.WebRequest> 和 <xref:System.Net.Cache.HttpRequestCachePolicy> 物件來完成。</span><span class="sxs-lookup"><span data-stu-id="8287f-125">This is done by creating new <xref:System.Net.WebRequest> and <xref:System.Net.Cache.HttpRequestCachePolicy> objects.</span></span> <span data-ttu-id="8287f-126"><xref:System.Net.Cache.HttpRequestCachePolicy> 物件是使用 <xref:System.Net.Cache.HttpRequestCacheLevel.Default> 列舉的 <xref:System.Net.Cache.HttpRequestCacheLevel> 成員所建立。</span><span class="sxs-lookup"><span data-stu-id="8287f-126">The <xref:System.Net.Cache.HttpRequestCachePolicy> object is created using the <xref:System.Net.Cache.HttpRequestCacheLevel.Default> member of the <xref:System.Net.Cache.HttpRequestCacheLevel> enumeration.</span></span>  
  
 <span data-ttu-id="8287f-127"><xref:System.Net.WebRequest.CachePolicy%2A> 物件的 <xref:System.Net.WebRequest> 屬性是使用 <xref:System.Net.Cache.HttpRequestCachePolicy> 物件所設定。</span><span class="sxs-lookup"><span data-stu-id="8287f-127">The <xref:System.Net.WebRequest.CachePolicy%2A> property of the <xref:System.Net.WebRequest> object is set with the <xref:System.Net.Cache.HttpRequestCachePolicy> object.</span></span>  
  
 <span data-ttu-id="8287f-128">`XmlCachingResolver` 類別的執行個體是使用 `Boolean` `enableHttpCaching` 所建立。</span><span class="sxs-lookup"><span data-stu-id="8287f-128">An instance of the `XmlCachingResolver` class is created with the `Boolean` `enableHttpCaching`.</span></span> <span data-ttu-id="8287f-129">當此值設定為`true`，執行個體盡可能解析預設快取中的資源。</span><span class="sxs-lookup"><span data-stu-id="8287f-129">When this value is set to `true`, the instance resolves a resource from the default cache if possible.</span></span> <span data-ttu-id="8287f-130">當`enableHttpCaching`設為`false`，執行個體使用預設行為，並解決從其原始的資源。</span><span class="sxs-lookup"><span data-stu-id="8287f-130">When `enableHttpCaching` is set to `false`, the instance uses the default behavior and resolves resources from their source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8287f-131">此範例會利用.NET Framework 中 XML 類別的擴充性。</span><span class="sxs-lookup"><span data-stu-id="8287f-131">This example leverages the extensibility of the XML classes in the .NET Framework.</span></span> <span data-ttu-id="8287f-132">其他類別可加以擴充和自訂，以符合特定應用程式的需要。</span><span class="sxs-lookup"><span data-stu-id="8287f-132">Other classes can be extended and customized to suit the needs of a particular application.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8287f-133">下列範例會建立<xref:System.Xml.XmlReader>使用<xref:System.Xml.XmlUrlResolver>具有預設認證。</span><span class="sxs-lookup"><span data-stu-id="8287f-133">The following example creates an <xref:System.Xml.XmlReader> that uses an <xref:System.Xml.XmlUrlResolver> with default credentials.</span></span>  
  
 [!code-csharp[XmlResolver_Samples#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlResolver_Samples/CS/XmlResolver_Samples.cs#1)]
 [!code-vb[XmlResolver_Samples#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlResolver_Samples/VB/XmlResolver_Samples.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlUrlResolver ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlUrlResolver.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlUrlResolver();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8287f-134">初始化 <see cref="T:System.Xml.XmlUrlResolver" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8287f-134">Initializes a new instance of the <see cref="T:System.Xml.XmlUrlResolver" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CachePolicy">
      <MemberSignature Language="C#" Value="public System.Net.Cache.RequestCachePolicy CachePolicy { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Cache.RequestCachePolicy CachePolicy" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlUrlResolver.CachePolicy" />
      <MemberSignature Language="VB.NET" Value="Public Property CachePolicy As RequestCachePolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Cache::RequestCachePolicy ^ CachePolicy {  void set(System::Net::Cache::RequestCachePolicy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CachePolicy : System.Net.Cache.RequestCachePolicy" Usage="System.Xml.XmlUrlResolver.CachePolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Cache.RequestCachePolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8287f-135">取得或設定基礎 <see cref="T:System.Net.WebRequest" /> 物件的快取原則。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8287f-135">Gets or sets the cache policy for the underlying <see cref="T:System.Net.WebRequest" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8287f-136">基礎 Web 要求的快取原則。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8287f-136">The cache policy for the underlying web request.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public override System.Net.ICredentials Credentials { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentials Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlUrlResolver.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Credentials As ICredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::ICredentials ^ Credentials {  void set(System::Net::ICredentials ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Credentials : System.Net.ICredentials" Usage="System.Xml.XmlUrlResolver.Credentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ICredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8287f-137">設定用以驗證 Web 要求的認證資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8287f-137">Sets credentials used to authenticate web requests.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8287f-138">用以驗證 Web 要求的認證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8287f-138">The credentials to be used to authenticate web requests.</span>
          </span>
          <span data-ttu-id="8287f-139">如果未設定這個屬性，其值會預設為 <see langword="null" />；也就是說，<see langword="XmlUrlResolver" /> 沒有使用者認證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8287f-139">If this property is not set, the value defaults to <see langword="null" />; that is, the <see langword="XmlUrlResolver" /> has no user credentials.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8287f-140">如果虛擬目錄不需要驗證，這個屬性不必設定。</span><span class="sxs-lookup"><span data-stu-id="8287f-140">If the virtual directory does not require authentication, this property does not need to be set.</span></span> <span data-ttu-id="8287f-141">否則，您必須提供使用者的認證。</span><span class="sxs-lookup"><span data-stu-id="8287f-141">Otherwise, the credentials of the user must be supplied.</span></span>  
  
 <span data-ttu-id="8287f-142">您可以將不同的認證與不同的 Uri 建立關聯，並將它們新增至快取。</span><span class="sxs-lookup"><span data-stu-id="8287f-142">You can associate different credentials with different URIs and add them to a cache.</span></span> <span data-ttu-id="8287f-143">您接著可以使用認證檢查不同 Uri，不論 XML 的原始來源的驗證。</span><span class="sxs-lookup"><span data-stu-id="8287f-143">You can then use the credentials to check authentication for different URIs, regardless of the original source of the XML.</span></span>  
  
 <span data-ttu-id="8287f-144">下列 C# 程式碼示範如何設定<xref:System.Xml.XmlUrlResolver.Credentials%2A>認證快取的屬性。</span><span class="sxs-lookup"><span data-stu-id="8287f-144">The following C# code shows how to set the <xref:System.Xml.XmlUrlResolver.Credentials%2A> property to a credential cache.</span></span>  
  
```csharp  
NetworkCredential myCred = new NetworkCredential(UserName,SecurelyStoredPassword,Domain);   
CredentialCache myCache = new CredentialCache();   
myCache.Add(new Uri("http://www.contoso.com/"), "Basic", myCred);   
myCache.Add(new Uri("http://app.contoso.com/"), "Basic", myCred);  
XmlUrlResolver resolver = new XmlUrlResolver();  
resolver.Credentials = myCache;  
```  
  
   
  
## Examples  
 <span data-ttu-id="8287f-145">下列範例會建立<xref:System.Xml.XmlUrlResolver>物件使用的認證。</span><span class="sxs-lookup"><span data-stu-id="8287f-145">The following example creates an <xref:System.Xml.XmlUrlResolver> object with credentials.</span></span> <span data-ttu-id="8287f-146"><xref:System.Xml.XmlReader>會使用認證<xref:System.Xml.XmlUrlResolver>物件來存取網路資源。</span><span class="sxs-lookup"><span data-stu-id="8287f-146">The <xref:System.Xml.XmlReader> uses the credentials on the <xref:System.Xml.XmlUrlResolver> object to access a network resource.</span></span>  
  
 [!code-csharp[XmlResolver_Samples#2](~/samples/snippets/csharp/VS_Snippets_Data/XmlResolver_Samples/CS/XmlResolver_Samples.cs#2)]
 [!code-vb[XmlResolver_Samples#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlResolver_Samples/VB/XmlResolver_Samples.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
    <Member MemberName="GetEntity">
      <MemberSignature Language="C#" Value="public override object GetEntity (Uri absoluteUri, string role, Type ofObjectToReturn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetEntity(class System.Uri absoluteUri, string role, class System.Type ofObjectToReturn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlUrlResolver.GetEntity(System.Uri,System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEntity (absoluteUri As Uri, role As String, ofObjectToReturn As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetEntity(Uri ^ absoluteUri, System::String ^ role, Type ^ ofObjectToReturn);" />
      <MemberSignature Language="F#" Value="override this.GetEntity : Uri * string * Type -&gt; obj" Usage="xmlUrlResolver.GetEntity (absoluteUri, role, ofObjectToReturn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="absoluteUri" Type="System.Uri" />
        <Parameter Name="role" Type="System.String" />
        <Parameter Name="ofObjectToReturn" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="absoluteUri">
          <span data-ttu-id="8287f-147">自 <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" /> 傳回的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8287f-147">The URI returned from <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" />.</span>
          </span>
        </param>
        <param name="role">
          <span data-ttu-id="8287f-148">目前未使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8287f-148">Currently not used.</span>
          </span>
        </param>
        <param name="ofObjectToReturn">
          <span data-ttu-id="8287f-149">要傳回的物件類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8287f-149">The type of object to return.</span>
          </span>
          <span data-ttu-id="8287f-150">目前的實作只傳回 <see cref="T:System.IO.Stream" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8287f-150">The current implementation only returns <see cref="T:System.IO.Stream" /> objects.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8287f-151">對應 URI 至包含實際資源的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8287f-151">Maps a URI to an object that contains the actual resource.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8287f-152">如果指定的類型並非資料流，則為資料流物件或為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8287f-152">A stream object or <see langword="null" /> if a type other than stream is specified.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8287f-153">呼叫端想要將特定的 URI 對應至物件，包含 URI 所代表的資源時，會使用這個方法。</span><span class="sxs-lookup"><span data-stu-id="8287f-153">This method is used when the caller wants to map a given URI to an object that contains the resource that the URI represents.</span></span>  
  
 <span data-ttu-id="8287f-154">這個方法的非同步版本，請參閱<xref:System.Xml.XmlUrlResolver.GetEntityAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="8287f-154">For the asynchronous version of this method, see <xref:System.Xml.XmlUrlResolver.GetEntityAsync%2A>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8287f-155">您的應用程式可以減輕記憶體阻斷服務威脅<xref:System.Xml.XmlUrlResolver.GetEntity%2A>方法，藉由實作 IStream<xref:System.Runtime.InteropServices.ComTypes.IStream>來限制讀取的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="8287f-155">Your application can mitigate memory denial of service threats to the <xref:System.Xml.XmlUrlResolver.GetEntity%2A> method by implementing IStream <xref:System.Runtime.InteropServices.ComTypes.IStream> to limit the number of bytes read.</span></span> <span data-ttu-id="8287f-156">這有助於防止惡意程式碼嘗試將無限的資料流的位元組傳遞<xref:System.Xml.XmlUrlResolver.GetEntity%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="8287f-156">This helps guard against situations where malicious code attempts to pass an infinite stream of bytes to the <xref:System.Xml.XmlUrlResolver.GetEntity%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8287f-157">下列範例示範`GetEntity`和<xref:System.Xml.XmlResolver.ResolveUri%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="8287f-157">The following example demonstrates the `GetEntity` and <xref:System.Xml.XmlResolver.ResolveUri%2A> methods.</span></span>  
  
 [!code-cpp[Classic WebData XmlUrlResolver.ResolveUri Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlUrlResolver.ResolveUri Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlUrlResolver.ResolveUri Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlUrlResolver.ResolveUri Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlUrlResolver.ResolveUri Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlUrlResolver.ResolveUri Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="8287f-158">
            <paramref name="ofObjectToReturn" /> 既不是 <see langword="null" /> 也不是 <see langword="Stream" /> 型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8287f-158">
              <paramref name="ofObjectToReturn" /> is neither <see langword="null" /> nor a <see langword="Stream" /> type.</span>
          </span>
        </exception>
        <exception cref="T:System.UriFormatException">
          <span data-ttu-id="8287f-159">指定的 URI 並非絕對 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8287f-159">The specified URI is not an absolute URI.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8287f-160">
            <paramref name="absoluteUri" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8287f-160">
              <paramref name="absoluteUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Exception">
          <span data-ttu-id="8287f-161">發生執行階段錯誤 (例如中斷的伺服器連線)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8287f-161">There is a runtime error (for example, an interrupted server connection).</span>
          </span>
        </exception>
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <Member MemberName="GetEntityAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;object&gt; GetEntityAsync (Uri absoluteUri, string role, Type ofObjectToReturn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;object&gt; GetEntityAsync(class System.Uri absoluteUri, string role, class System.Type ofObjectToReturn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlUrlResolver.GetEntityAsync(System.Uri,System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEntityAsync (absoluteUri As Uri, role As String, ofObjectToReturn As Type) As Task(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;System::Object ^&gt; ^ GetEntityAsync(Uri ^ absoluteUri, System::String ^ role, Type ^ ofObjectToReturn);" />
      <MemberSignature Language="F#" Value="override this.GetEntityAsync : Uri * string * Type -&gt; System.Threading.Tasks.Task&lt;obj&gt;" Usage="xmlUrlResolver.GetEntityAsync (absoluteUri, role, ofObjectToReturn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.Xml.XmlUrlResolver/&lt;GetEntityAsync&gt;c__async0))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="absoluteUri" Type="System.Uri" />
        <Parameter Name="role" Type="System.String" />
        <Parameter Name="ofObjectToReturn" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="absoluteUri">
          <span data-ttu-id="8287f-162">自 <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" /> 傳回的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8287f-162">The URI returned from <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" />.</span>
          </span>
        </param>
        <param name="role">
          <span data-ttu-id="8287f-163">目前未使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8287f-163">Currently not used.</span>
          </span>
        </param>
        <param name="ofObjectToReturn">
          <span data-ttu-id="8287f-164">要傳回的物件類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8287f-164">The type of object to return.</span>
          </span>
          <span data-ttu-id="8287f-165">目前的實作只傳回 <see cref="T:System.IO.Stream" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8287f-165">The current implementation only returns <see cref="T:System.IO.Stream" /> objects.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8287f-166">以非同步的方式對應 URI 至包含實際資源的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8287f-166">Asynchronously maps a URI to an object that contains the actual resource.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8287f-167">如果指定的類型並非資料流，則為資料流物件或為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8287f-167">A stream object or <see langword="null" /> if a type other than stream is specified.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Proxy">
      <MemberSignature Language="C#" Value="public System.Net.IWebProxy Proxy { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IWebProxy Proxy" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlUrlResolver.Proxy" />
      <MemberSignature Language="VB.NET" Value="Public Property Proxy As IWebProxy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::IWebProxy ^ Proxy {  void set(System::Net::IWebProxy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Proxy : System.Net.IWebProxy" Usage="System.Xml.XmlUrlResolver.Proxy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IWebProxy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8287f-168">取得或設定基礎 <see cref="T:System.Net.WebRequest" /> 物件的網路 Proxy。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8287f-168">Gets or sets the network proxy for the underlying <see cref="T:System.Net.WebRequest" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8287f-169">用以存取網際網路資源的 <see cref="T:System.Net.IWebProxy" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8287f-169">The <see cref="T:System.Net.IWebProxy" /> to use to access the Internet resource.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveUri">
      <MemberSignature Language="C#" Value="public override Uri ResolveUri (Uri baseUri, string relativeUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Uri ResolveUri(class System.Uri baseUri, string relativeUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlUrlResolver.ResolveUri(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ResolveUri (baseUri As Uri, relativeUri As String) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Uri ^ ResolveUri(Uri ^ baseUri, System::String ^ relativeUri);" />
      <MemberSignature Language="F#" Value="override this.ResolveUri : Uri * string -&gt; Uri" Usage="xmlUrlResolver.ResolveUri (baseUri, relativeUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseUri" Type="System.Uri" />
        <Parameter Name="relativeUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="baseUri">
          <span data-ttu-id="8287f-170">用來解析相對 URI 的基底 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8287f-170">The base URI used to resolve the relative URI.</span>
          </span>
        </param>
        <param name="relativeUri">
          <span data-ttu-id="8287f-171">要解析的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8287f-171">The URI to resolve.</span>
          </span>
          <span data-ttu-id="8287f-172">這個 URI 可為絕對或相對的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8287f-172">The URI can be absolute or relative.</span>
          </span>
          <span data-ttu-id="8287f-173">若是絕對的，這個值實際上會取代 <c>baseUri</c> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8287f-173">If absolute, this value effectively replaces the <c>baseUri</c> value.</span>
          </span>
          <span data-ttu-id="8287f-174">若是相對的，它會結合 <c>baseUri</c> 而成為絕對 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8287f-174">If relative, it combines with the <c>baseUri</c> to make an absolute URI.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8287f-175">從基底和相對 URI 解析絕對 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8287f-175">Resolves the absolute URI from the base and relative URIs.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8287f-176">絕對 URI，如果相對 URI 不能解析，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8287f-176">The absolute URI, or <see langword="null" /> if the relative URI cannot be resolved.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8287f-177">絕對 URI 可用來當做基底 URI 的任何後續的要求，會相對於此 URI 的實體。</span><span class="sxs-lookup"><span data-stu-id="8287f-177">The absolute URI can be used as the base URI for any subsequent requests for entities that are relative to this URI.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8287f-178">
            <paramref name="baseUri" /> 是 <see langword="null" />，或 <paramref name="relativeUri" /> 是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8287f-178">
              <paramref name="baseUri" /> is <see langword="null" /> or <paramref name="relativeUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="8287f-179">
            <para>這個方法有繼承要求。完全信任，才能覆寫<see cref="M:System.Xml.XmlUrlResolver.ResolveUri(System.Uri,System.String)" />方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="8287f-179">
              <para>This method has an inheritance demand. Full trust is required to override the <see cref="M:System.Xml.XmlUrlResolver.ResolveUri(System.Uri,System.String)" /> method.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>