<Type Name="XmlAttribute" FullName="System.Xml.XmlAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="79eaf8d1a1de02c12de661ea76538ee23fd821be" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52239662" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlAttribute : System.Xml.XmlNode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlAttribute extends System.Xml.XmlNode" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlAttribute&#xA;Inherits XmlNode" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlAttribute : System::Xml::XmlNode" />
  <TypeSignature Language="F#" Value="type XmlAttribute = class&#xA;    inherit XmlNode" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlDocument</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.XmlNode</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="81d91-101">代表屬性。</span>
      <span class="sxs-lookup">
        <span data-stu-id="81d91-101">Represents an attribute.</span>
      </span>
      <span data-ttu-id="81d91-102">該屬性的有效和預設值會在文件類型定義 (DTD) 或結構描述中定義。</span>
      <span class="sxs-lookup">
        <span data-stu-id="81d91-102">Valid and default values for the attribute are defined in a document type definition (DTD) or schema.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81d91-103">可以與項目相關聯的屬性。</span><span class="sxs-lookup"><span data-stu-id="81d91-103">Attributes can be associated with an element.</span></span> <span data-ttu-id="81d91-104">使用<xref:System.Xml.XmlAttribute.OwnerElement%2A>屬性來取得<xref:System.Xml.XmlElement>所屬的屬性。</span><span class="sxs-lookup"><span data-stu-id="81d91-104">Use the <xref:System.Xml.XmlAttribute.OwnerElement%2A> property to get the <xref:System.Xml.XmlElement> to which the attribute belongs.</span></span>  
  
 <span data-ttu-id="81d91-105">`XmlElement`類別有數種方法可讓您存取屬性節點 (<xref:System.Xml.XmlElement.GetAttribute%2A?displayProperty=nameWithType>， <xref:System.Xml.XmlElement.SetAttribute%2A?displayProperty=nameWithType>，<xref:System.Xml.XmlElement.RemoveAttribute%2A?displayProperty=nameWithType>等等)。</span><span class="sxs-lookup"><span data-stu-id="81d91-105">The `XmlElement` class has several methods which allow you to access attribute nodes (<xref:System.Xml.XmlElement.GetAttribute%2A?displayProperty=nameWithType>, <xref:System.Xml.XmlElement.SetAttribute%2A?displayProperty=nameWithType>, <xref:System.Xml.XmlElement.RemoveAttribute%2A?displayProperty=nameWithType>, and so on).</span></span> <span data-ttu-id="81d91-106">此外，您可以呼叫<xref:System.Xml.XmlElement.Attributes%2A?displayProperty=nameWithType>屬性，會傳回<xref:System.Xml.XmlAttributeCollection>讓您存取集合中的依名稱或索引的屬性。</span><span class="sxs-lookup"><span data-stu-id="81d91-106">Additionally, you can call the <xref:System.Xml.XmlElement.Attributes%2A?displayProperty=nameWithType> property, which returns an <xref:System.Xml.XmlAttributeCollection> enabling you to access attributes by name or index from the collection.</span></span>  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/ce2df341-a1a4-4e97-8e1b-cd45b8e3e71e">
      <span data-ttu-id="81d91-107">存取 DOM 中的屬性</span>
      <span class="sxs-lookup">
        <span data-stu-id="81d91-107">Accessing Attributes in the DOM</span>
      </span>
    </related>
    <related type="Article" href="https://msdn.microsoft.com/library/2038a90b-92af-4a0a-baaa-08e688d95194">
      <span data-ttu-id="81d91-108">根據名稱或索引擷取的未排序節點</span>
      <span class="sxs-lookup">
        <span data-stu-id="81d91-108">Unordered Node Retrieval by Name or Index</span>
      </span>
    </related>
    <related type="Article" href="https://msdn.microsoft.com/library/b5e52844-4820-47c0-a61d-de2da33e9f54">
      <span data-ttu-id="81d91-109">XML 文件物件模型 (DOM)</span>
      <span class="sxs-lookup">
        <span data-stu-id="81d91-109">XML Document Object Model (DOM)</span>
      </span>
    </related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal XmlAttribute (string prefix, string localName, string namespaceURI, System.Xml.XmlDocument doc);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string prefix, string localName, string namespaceURI, class System.Xml.XmlDocument doc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlAttribute.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (prefix As String, localName As String, namespaceURI As String, doc As XmlDocument)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; XmlAttribute(System::String ^ prefix, System::String ^ localName, System::String ^ namespaceURI, System::Xml::XmlDocument ^ doc);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlAttribute : string * string * string * System.Xml.XmlDocument -&gt; System.Xml.XmlAttribute" Usage="new System.Xml.XmlAttribute (prefix, localName, namespaceURI, doc)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
        <Parameter Name="doc" Type="System.Xml.XmlDocument" />
      </Parameters>
      <Docs>
        <param name="prefix">
          <span data-ttu-id="81d91-110">命名空間前置詞。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-110">The namespace prefix.</span>
          </span>
        </param>
        <param name="localName">
          <span data-ttu-id="81d91-111">屬性的本機名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-111">The local name of the attribute.</span>
          </span>
        </param>
        <param name="namespaceURI">
          <span data-ttu-id="81d91-112">命名空間的統一資源識別元 (URI)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-112">The namespace uniform resource identifier (URI).</span>
          </span>
        </param>
        <param name="doc">
          <span data-ttu-id="81d91-113">父代 XML 文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-113">The parent XML document.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="81d91-114">初始化 <see cref="T:System.Xml.XmlAttribute" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-114">Initializes a new instance of the <see cref="T:System.Xml.XmlAttribute" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81d91-115">請勿執行個體化<xref:System.Xml.XmlAttribute>直接; 相反地，使用方法例如<xref:System.Xml.XmlDocument.CreateAttribute%2A>。</span><span class="sxs-lookup"><span data-stu-id="81d91-115">Do not instantiate an <xref:System.Xml.XmlAttribute> directly; instead, use methods such as <xref:System.Xml.XmlDocument.CreateAttribute%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendChild">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNode AppendChild (System.Xml.XmlNode newChild);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Xml.XmlNode AppendChild(class System.Xml.XmlNode newChild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlAttribute.AppendChild(System.Xml.XmlNode)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function AppendChild (newChild As XmlNode) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Xml::XmlNode ^ AppendChild(System::Xml::XmlNode ^ newChild);" />
      <MemberSignature Language="F#" Value="override this.AppendChild : System.Xml.XmlNode -&gt; System.Xml.XmlNode" Usage="xmlAttribute.AppendChild newChild" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newChild" Type="System.Xml.XmlNode" />
      </Parameters>
      <Docs>
        <param name="newChild">
          <span data-ttu-id="81d91-116">要加入的 <see cref="T:System.Xml.XmlNode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-116">The <see cref="T:System.Xml.XmlNode" /> to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="81d91-117">將指定的節點加入這個節點之子節點清單的結尾。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-117">Adds the specified node to the end of the list of child nodes, of this node.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="81d91-118">所加入的 <see cref="T:System.Xml.XmlNode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-118">The <see cref="T:System.Xml.XmlNode" /> added.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81d91-119">如果`newChild`是已經在樹狀目錄中，則會先移除。</span><span class="sxs-lookup"><span data-stu-id="81d91-119">If the `newChild` is already in the tree, it is first removed.</span></span>  
  
 <span data-ttu-id="81d91-120">如果要插入的節點建立另一個文件中，您可以使用<xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=nameWithType>匯入目前的文件的節點。</span><span class="sxs-lookup"><span data-stu-id="81d91-120">If the node being inserted was created from another document, you can use <xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=nameWithType> to import the node to the current document.</span></span> <span data-ttu-id="81d91-121">匯入的節點則可以插入至目前的文件。</span><span class="sxs-lookup"><span data-stu-id="81d91-121">The imported node can then be inserted into the current document.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="81d91-122">如需<xref:System.Xml.XmlAttribute.AppendChild%2A>方法，請參閱<xref:System.Xml.XmlNode.AppendChild%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="81d91-122">For an example of the <xref:System.Xml.XmlAttribute.AppendChild%2A> method, see the <xref:System.Xml.XmlNode.AppendChild%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="81d91-123">這個節點的型別不允許 <paramref name="newChild" /> 節點型別的子節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-123">This node is of a type that does not allow child nodes of the type of the <paramref name="newChild" /> node.</span>
          </span>
          <span data-ttu-id="81d91-124">
            <paramref name="newChild" /> 是這個節點的上階。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-124">The <paramref name="newChild" /> is an ancestor of this node.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="81d91-125">
            <paramref name="newChild" /> 由不同於建立這個節點的另一份文件所建立。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-125">The <paramref name="newChild" /> was created from a different document than the one that created this node.</span>
          </span>
          <span data-ttu-id="81d91-126">這個節點是唯讀的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-126">This node is read-only.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BaseURI">
      <MemberSignature Language="C#" Value="public override string BaseURI { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseURI" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlAttribute.BaseURI" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property BaseURI As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ BaseURI { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseURI : string" Usage="System.Xml.XmlAttribute.BaseURI" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="81d91-127">取得節點的基底統一資源識別元 (URI)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-127">Gets the base Uniform Resource Identifier (URI) of the node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="81d91-128">節點載入的位置；如果節點沒有基底 URI，則為 String.Empty。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-128">The location from which the node was loaded or String.Empty if the node has no base URI.</span>
          </span>
          <span data-ttu-id="81d91-129">屬性節點的基底 URI 與其擁有人項目的相同。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-129">Attribute nodes have the same base URI as their owner element.</span>
          </span>
          <span data-ttu-id="81d91-130">如果屬性節點沒有擁有人項目，<see langword="BaseURI" /> 會傳回 String.Empty。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-130">If an attribute node does not have an owner element, <see langword="BaseURI" /> returns String.Empty.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81d91-131">網路上的 XML 文件使用不同的 World Wide Web Consortium (W3C) 標準包含機制進行彙總的資料區塊所組成，並因此會包含來自不同位置的節點。</span><span class="sxs-lookup"><span data-stu-id="81d91-131">A networked XML document is comprised of chunks of data aggregated using various World Wide Web Consortium (W3C) standard inclusion mechanisms and therefore contains nodes that come from different places.</span></span> <span data-ttu-id="81d91-132">`BaseURI`會告訴您這些節點的來源。</span><span class="sxs-lookup"><span data-stu-id="81d91-132">The `BaseURI` tells you where these nodes came from.</span></span>  
  
 <span data-ttu-id="81d91-133">如需詳細資訊`BaseURI`以及如何它的行為與其他節點型別，請參閱<xref:System.Xml.XmlNode.BaseURI%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="81d91-133">For additional information on `BaseURI` and how it behaves with other node types, see <xref:System.Xml.XmlNode.BaseURI%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="81d91-134">這個屬性是文件物件模型的 Microsoft 擴充功能。</span><span class="sxs-lookup"><span data-stu-id="81d91-134">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="81d91-135">下列範例會顯示在 [屬性] 節點，包括其基底 URI 資訊。</span><span class="sxs-lookup"><span data-stu-id="81d91-135">The following example displays information on the attribute node, including its base URI.</span></span>  
  
 [!code-cpp[Classic WebData XmlAttribute.BaseURI Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlAttribute.BaseURI Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlAttribute.BaseURI Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlAttribute.BaseURI Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlAttribute.BaseURI Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlAttribute.BaseURI Example/VB/source.vb#1)]  
  
 <span data-ttu-id="81d91-136">此範例會使用該檔案，`baseuri.xml`作為輸入。</span><span class="sxs-lookup"><span data-stu-id="81d91-136">The sample uses the file, `baseuri.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlAttribute.BaseURI Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlAttribute.BaseURI Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.XmlAttribute.OwnerElement" />
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNode CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Xml.XmlNode CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlAttribute.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CloneNode (deep As Boolean) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Xml::XmlNode ^ CloneNode(bool deep);" />
      <MemberSignature Language="F#" Value="override this.CloneNode : bool -&gt; System.Xml.XmlNode" Usage="xmlAttribute.CloneNode deep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">
          <span data-ttu-id="81d91-137">若要在指定的節點下遞迴地複製子樹狀結構，則為 <see langword="true" />，若只要複製節點本身，則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-137">
              <see langword="true" /> to recursively clone the subtree under the specified node; <see langword="false" /> to clone only the node itself</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="81d91-138">建立這個節點的複本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-138">Creates a duplicate of this node.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="81d91-139">重複的節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-139">The duplicate node.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81d91-140">這個方法會做為節點的複製建構函式。</span><span class="sxs-lookup"><span data-stu-id="81d91-140">This method serves as a copy constructor for nodes.</span></span> <span data-ttu-id="81d91-141">複製的節點有沒有父代 (<xref:System.Xml.XmlAttribute.ParentNode%2A>傳回`null`)。</span><span class="sxs-lookup"><span data-stu-id="81d91-141">The cloned node has no parent (<xref:System.Xml.XmlAttribute.ParentNode%2A> returns `null`).</span></span>  
  
 <span data-ttu-id="81d91-142">複製未指定的屬性會傳回指定的屬性 (<xref:System.Xml.XmlAttribute.Specified%2A>傳回`true`)。</span><span class="sxs-lookup"><span data-stu-id="81d91-142">Cloning an unspecified attribute returns a specified attribute (<xref:System.Xml.XmlAttribute.Specified%2A> returns `true`).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="81d91-143">下列範例會使用`CloneNode`將屬性新增至兩個不同的項目節點。</span><span class="sxs-lookup"><span data-stu-id="81d91-143">The following example uses `CloneNode` to add an attribute to two different element nodes.</span></span>  
  
 [!code-cpp[Classic WebData XmlAttribute.CloneNode Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlAttribute.CloneNode Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlAttribute.CloneNode Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlAttribute.CloneNode Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlAttribute.CloneNode Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlAttribute.CloneNode Example/VB/source.vb#1)]  
  
 <span data-ttu-id="81d91-144">此範例會使用該檔案，`2elems.xml`作為輸入。</span><span class="sxs-lookup"><span data-stu-id="81d91-144">The example uses the file, `2elems.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlAttribute.CloneNode Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlAttribute.CloneNode Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlElement" />
      </Docs>
    </Member>
    <Member MemberName="InnerText">
      <MemberSignature Language="C#" Value="public override string InnerText { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InnerText" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlAttribute.InnerText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property InnerText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InnerText {  void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InnerText : string" Usage="System.Xml.XmlAttribute.InnerText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="81d91-145">設定節點的串連值和其所有的子節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-145">Sets the concatenated values of the node and all its children.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="81d91-146">節點的串連值和其所有的子節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-146">The concatenated values of the node and all its children.</span>
          </span>
          <span data-ttu-id="81d91-147">在屬性節點方面，這個屬性的功能與 <see cref="P:System.Xml.XmlAttribute.Value" /> 屬性相同。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-147">For attribute nodes, this property has the same functionality as the <see cref="P:System.Xml.XmlAttribute.Value" /> property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81d91-148">設定這個屬性以指定字串的已剖析內容取代所有子系。</span><span class="sxs-lookup"><span data-stu-id="81d91-148">Setting this property replaces all the children with the parsed contents of the given string.</span></span>  
  
 <span data-ttu-id="81d91-149">這個屬性是文件物件模型的 Microsoft 擴充功能。</span><span class="sxs-lookup"><span data-stu-id="81d91-149">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.XmlAttribute.InnerXml" />
        <altmember cref="P:System.Xml.XmlNode.OuterXml" />
      </Docs>
    </Member>
    <Member MemberName="InnerXml">
      <MemberSignature Language="C#" Value="public override string InnerXml { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InnerXml" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlAttribute.InnerXml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property InnerXml As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InnerXml {  void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InnerXml : string" Usage="System.Xml.XmlAttribute.InnerXml" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="81d91-150">設定屬性值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-150">Sets the value of the attribute.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="81d91-151">屬性值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-151">The attribute value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81d91-152">這個屬性是文件物件模型的 Microsoft 擴充功能。</span><span class="sxs-lookup"><span data-stu-id="81d91-152">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="81d91-153">未正確設定這個屬性之語式時所指定的 XML。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-153">The XML specified when setting this property is not well-formed.</span>
          </span>
        </exception>
        <altmember cref="P:System.Xml.XmlAttribute.InnerText" />
        <altmember cref="P:System.Xml.XmlNode.OuterXml" />
      </Docs>
    </Member>
    <Member MemberName="InsertAfter">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNode InsertAfter (System.Xml.XmlNode newChild, System.Xml.XmlNode refChild);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Xml.XmlNode InsertAfter(class System.Xml.XmlNode newChild, class System.Xml.XmlNode refChild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlAttribute.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function InsertAfter (newChild As XmlNode, refChild As XmlNode) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Xml::XmlNode ^ InsertAfter(System::Xml::XmlNode ^ newChild, System::Xml::XmlNode ^ refChild);" />
      <MemberSignature Language="F#" Value="override this.InsertAfter : System.Xml.XmlNode * System.Xml.XmlNode -&gt; System.Xml.XmlNode" Usage="xmlAttribute.InsertAfter (newChild, refChild)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newChild" Type="System.Xml.XmlNode" />
        <Parameter Name="refChild" Type="System.Xml.XmlNode" />
      </Parameters>
      <Docs>
        <param name="newChild">
          <span data-ttu-id="81d91-154">要插入的 <see cref="T:System.Xml.XmlNode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-154">The <see cref="T:System.Xml.XmlNode" /> to insert.</span>
          </span>
        </param>
        <param name="refChild">
          <span data-ttu-id="81d91-155">
            <see cref="T:System.Xml.XmlNode" /> 為參考節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-155">The <see cref="T:System.Xml.XmlNode" /> that is the reference node.</span>
          </span>
          <span data-ttu-id="81d91-156">
            <paramref name="newChild" /> 會置於 <paramref name="refChild" /> 之後。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-156">The <paramref name="newChild" /> is placed after the <paramref name="refChild" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="81d91-157">在指定的參考節點之後，插入指定的節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-157">Inserts the specified node immediately after the specified reference node.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="81d91-158">所插入的 <see cref="T:System.Xml.XmlNode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-158">The <see cref="T:System.Xml.XmlNode" /> inserted.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81d91-159">如果`refChild`已`null`，插入`newChild`的子節點清單開頭。</span><span class="sxs-lookup"><span data-stu-id="81d91-159">If `refChild` is `null`, insert `newChild` at the beginning of the list of child nodes.</span></span> <span data-ttu-id="81d91-160">如果`newChild`已<xref:System.Xml.XmlDocumentFragment>物件，其所有子節點都插入，以相同的順序之後, `refChild`。</span><span class="sxs-lookup"><span data-stu-id="81d91-160">If `newChild` is an <xref:System.Xml.XmlDocumentFragment> object, its child nodes are inserted, in the same order, after `refChild`.</span></span> <span data-ttu-id="81d91-161">如果`newChild`是已經在樹狀目錄中，則會先移除。</span><span class="sxs-lookup"><span data-stu-id="81d91-161">If the `newChild` is already in the tree, it is first removed.</span></span>  
  
 <span data-ttu-id="81d91-162">如果要插入的節點建立另一個文件中，您可以使用<xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=nameWithType>匯入目前的文件的節點。</span><span class="sxs-lookup"><span data-stu-id="81d91-162">If the node being inserted was created from another document, you can use <xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=nameWithType> to import the node to the current document.</span></span> <span data-ttu-id="81d91-163">匯入的節點則可以插入至目前的文件。</span><span class="sxs-lookup"><span data-stu-id="81d91-163">The imported node can then be inserted into the current document.</span></span>  
  
 <span data-ttu-id="81d91-164">這個方法是 Microsoft 擴充功能文件物件模型 (DOM)。</span><span class="sxs-lookup"><span data-stu-id="81d91-164">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="81d91-165">如需<xref:System.Xml.XmlAttribute.InsertAfter%2A>方法，請參閱<xref:System.Xml.XmlNode.InsertAfter%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="81d91-165">For an example of the <xref:System.Xml.XmlAttribute.InsertAfter%2A> method see the <xref:System.Xml.XmlNode.InsertAfter%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="81d91-166">這個節點的型別不允許 <paramref name="newChild" /> 節點型別的子節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-166">This node is of a type that does not allow child nodes of the type of the <paramref name="newChild" /> node.</span>
          </span>
          <span data-ttu-id="81d91-167">
            <paramref name="newChild" /> 是這個節點的上階。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-167">The <paramref name="newChild" /> is an ancestor of this node.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="81d91-168">
            <paramref name="newChild" /> 由不同於建立這個節點的另一份文件所建立。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-168">The <paramref name="newChild" /> was created from a different document than the one that created this node.</span>
          </span>
          <span data-ttu-id="81d91-169">
            <paramref name="refChild" /> 不是這個節點的子節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-169">The <paramref name="refChild" /> is not a child of this node.</span>
          </span>
          <span data-ttu-id="81d91-170">這個節點是唯讀的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-170">This node is read-only.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="InsertBefore">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNode InsertBefore (System.Xml.XmlNode newChild, System.Xml.XmlNode refChild);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Xml.XmlNode InsertBefore(class System.Xml.XmlNode newChild, class System.Xml.XmlNode refChild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlAttribute.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function InsertBefore (newChild As XmlNode, refChild As XmlNode) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Xml::XmlNode ^ InsertBefore(System::Xml::XmlNode ^ newChild, System::Xml::XmlNode ^ refChild);" />
      <MemberSignature Language="F#" Value="override this.InsertBefore : System.Xml.XmlNode * System.Xml.XmlNode -&gt; System.Xml.XmlNode" Usage="xmlAttribute.InsertBefore (newChild, refChild)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newChild" Type="System.Xml.XmlNode" />
        <Parameter Name="refChild" Type="System.Xml.XmlNode" />
      </Parameters>
      <Docs>
        <param name="newChild">
          <span data-ttu-id="81d91-171">要插入的 <see cref="T:System.Xml.XmlNode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-171">The <see cref="T:System.Xml.XmlNode" /> to insert.</span>
          </span>
        </param>
        <param name="refChild">
          <span data-ttu-id="81d91-172">
            <see cref="T:System.Xml.XmlNode" /> 為參考節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-172">The <see cref="T:System.Xml.XmlNode" /> that is the reference node.</span>
          </span>
          <span data-ttu-id="81d91-173">
            <paramref name="newChild" /> 會置於這個節點之前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-173">The <paramref name="newChild" /> is placed before this node.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="81d91-174">在指定的參考節點之前，插入指定的節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-174">Inserts the specified node immediately before the specified reference node.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="81d91-175">所插入的 <see cref="T:System.Xml.XmlNode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-175">The <see cref="T:System.Xml.XmlNode" /> inserted.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81d91-176">如果`refChild`已`null`，插入`newChild`子節點清單結尾。</span><span class="sxs-lookup"><span data-stu-id="81d91-176">If `refChild` is `null`, insert `newChild` at the end of the list of child nodes.</span></span> <span data-ttu-id="81d91-177">如果`newChild`已<xref:System.Xml.XmlDocumentFragment>物件，其所有子節點都插入，以相同的順序，之前`refChild`。</span><span class="sxs-lookup"><span data-stu-id="81d91-177">If `newChild` is an <xref:System.Xml.XmlDocumentFragment> object, its child nodes are inserted, in the same order, before `refChild`.</span></span> <span data-ttu-id="81d91-178">如果`newChild`是已經在樹狀目錄中，則會先移除。</span><span class="sxs-lookup"><span data-stu-id="81d91-178">If the `newChild` is already in the tree, it is first removed.</span></span>  
  
 <span data-ttu-id="81d91-179">如果要插入的節點建立另一個文件中，您可以使用<xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=nameWithType>匯入目前的文件的節點。</span><span class="sxs-lookup"><span data-stu-id="81d91-179">If the node being inserted was created from another document, you can use <xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=nameWithType> to import the node to the current document.</span></span> <span data-ttu-id="81d91-180">匯入的節點則可以插入至目前的文件。</span><span class="sxs-lookup"><span data-stu-id="81d91-180">The imported node can then be inserted into the current document.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="81d91-181">如需<xref:System.Xml.XmlAttribute.InsertBefore%2A>方法，請參閱<xref:System.Xml.XmlNode.InsertBefore%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="81d91-181">For an example of the <xref:System.Xml.XmlAttribute.InsertBefore%2A> method, see the <xref:System.Xml.XmlNode.InsertBefore%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="81d91-182">目前這種型別的節點不允許 <paramref name="newChild" /> 節點型別的子節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-182">The current node is of a type that does not allow child nodes of the type of the <paramref name="newChild" /> node.</span>
          </span>
          <span data-ttu-id="81d91-183">
            <paramref name="newChild" /> 是這個節點的上階。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-183">The <paramref name="newChild" /> is an ancestor of this node.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="81d91-184">
            <paramref name="newChild" /> 由不同於建立這個節點的另一份文件所建立。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-184">The <paramref name="newChild" /> was created from a different document than the one that created this node.</span>
          </span>
          <span data-ttu-id="81d91-185">
            <paramref name="refChild" /> 不是這個節點的子節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-185">The <paramref name="refChild" /> is not a child of this node.</span>
          </span>
          <span data-ttu-id="81d91-186">這個節點是唯讀的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-186">This node is read-only.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlAttribute.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ LocalName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="System.Xml.XmlAttribute.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="81d91-187">取得節點的區域名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-187">Gets the local name of the node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="81d91-188">已移除前置詞的屬性節點名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-188">The name of the attribute node with the prefix removed.</span>
          </span>
          <span data-ttu-id="81d91-189">在下列範例中&lt;預約 bk:genre = 'novel'&gt;，則<see langword="LocalName" />的屬性是<see langword="genre" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-189">In the following example &lt;book bk:genre= 'novel'&gt;, the <see langword="LocalName" /> of the attribute is <see langword="genre" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81d91-190">如果節點沒有前置詞`LocalName`等同於<xref:System.Xml.XmlAttribute.Name%2A>。</span><span class="sxs-lookup"><span data-stu-id="81d91-190">If the node does not have a prefix, `LocalName` is the same as <xref:System.Xml.XmlAttribute.Name%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="81d91-191">下列範例會顯示在每個屬性集合中之節點上的資訊。</span><span class="sxs-lookup"><span data-stu-id="81d91-191">The following example displays information on each of the nodes in the attribute collection.</span></span>  
  
 [!code-cpp[Classic WebData XmlAttribute.NamespaceURI Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlAttribute.NamespaceURI Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlAttribute.NamespaceURI Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlAttribute.NamespaceURI Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlAttribute.NamespaceURI Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlAttribute.NamespaceURI Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Xml.XmlAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="81d91-192">取得節點的限定名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-192">Gets the qualified name of the node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="81d91-193">屬性節點的限定名稱 (Qualified Name)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-193">The qualified name of the attribute node.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="81d91-194">下列範例會顯示在每個屬性集合中之節點上的資訊。</span><span class="sxs-lookup"><span data-stu-id="81d91-194">The following example displays information on each of the nodes in the attribute collection.</span></span>  
  
 [!code-cpp[Classic WebData XmlAttribute.Name Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlAttribute.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlAttribute.Name Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlAttribute.Name Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlAttribute.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlAttribute.Name Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.XmlAttribute.LocalName" />
      </Docs>
    </Member>
    <Member MemberName="NamespaceURI">
      <MemberSignature Language="C#" Value="public override string NamespaceURI { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NamespaceURI" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlAttribute.NamespaceURI" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NamespaceURI As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ NamespaceURI { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NamespaceURI : string" Usage="System.Xml.XmlAttribute.NamespaceURI" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="81d91-195">取得這個節點的命名空間 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-195">Gets the namespace URI of this node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="81d91-196">這個節點的命名空間 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-196">The namespace URI of this node.</span>
          </span>
          <span data-ttu-id="81d91-197">如果屬性並未明確指定命名空間，這個屬性會傳回 String.Empty。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-197">If the attribute is not explicitly given a namespace, this property returns String.Empty.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81d91-198">屬性不會從附加至項目繼承其命名空間。</span><span class="sxs-lookup"><span data-stu-id="81d91-198">An attribute does not inherit its namespace from the element it is attached to.</span></span> <span data-ttu-id="81d91-199">如果屬性未明確指定命名空間，命名空間 URI 是被視為 String.Empty。</span><span class="sxs-lookup"><span data-stu-id="81d91-199">If an attribute is not explicitly given a namespace, the namespace URI is considered to be String.Empty.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="81d91-200">下列範例會顯示在每個屬性集合中之節點上的資訊。</span><span class="sxs-lookup"><span data-stu-id="81d91-200">The following example displays information on each of the nodes in the attribute collection.</span></span>  
  
 [!code-cpp[Classic WebData XmlAttribute.NamespaceURI Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlAttribute.NamespaceURI Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlAttribute.NamespaceURI Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlAttribute.NamespaceURI Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlAttribute.NamespaceURI Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlAttribute.NamespaceURI Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNodeType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlNodeType NodeType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlAttribute.NodeType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NodeType As XmlNodeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNodeType NodeType { System::Xml::XmlNodeType get(); };" />
      <MemberSignature Language="F#" Value="member this.NodeType : System.Xml.XmlNodeType" Usage="System.Xml.XmlAttribute.NodeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="81d91-201">取得目前節點的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-201">Gets the type of the current node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="81d91-202">
            <see langword="XmlAttribute" /> 節點的節點型別是 XmlNodeType.Attribute。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-202">The node type for <see langword="XmlAttribute" /> nodes is XmlNodeType.Attribute.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Xml.XmlNodeType" />
      </Docs>
    </Member>
    <Member MemberName="OwnerDocument">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlDocument OwnerDocument { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlDocument OwnerDocument" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlAttribute.OwnerDocument" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property OwnerDocument As XmlDocument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlDocument ^ OwnerDocument { System::Xml::XmlDocument ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OwnerDocument : System.Xml.XmlDocument" Usage="System.Xml.XmlAttribute.OwnerDocument" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDocument</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="81d91-203">取得這個節點所屬的 <see cref="T:System.Xml.XmlDocument" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-203">Gets the <see cref="T:System.Xml.XmlDocument" /> to which this node belongs.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="81d91-204">這個節點所屬的 XML 文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-204">An XML document to which this node belongs.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="81d91-205">下列範例會建立屬性，並顯示其`OwnerDocument`。</span><span class="sxs-lookup"><span data-stu-id="81d91-205">The following example creates an attribute and displays its `OwnerDocument`.</span></span>  
  
 [!code-cpp[Classic WebData XmlAttribute.OwnerDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlAttribute.OwnerDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlAttribute.OwnerDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlAttribute.OwnerDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlAttribute.OwnerDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlAttribute.OwnerDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OwnerElement">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlElement OwnerElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlElement OwnerElement" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlAttribute.OwnerElement" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property OwnerElement As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlElement ^ OwnerElement { System::Xml::XmlElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OwnerElement : System.Xml.XmlElement" Usage="System.Xml.XmlAttribute.OwnerElement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="81d91-206">取得屬性所屬的 <see cref="T:System.Xml.XmlElement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-206">Gets the <see cref="T:System.Xml.XmlElement" /> to which the attribute belongs.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="81d91-207">屬性所屬的 <see langword="XmlElement" />；如果這個屬性不是 <see langword="null" /> 的一部分，則為 <see langword="XmlElement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-207">The <see langword="XmlElement" /> that the attribute belongs to or <see langword="null" /> if this attribute is not part of an <see langword="XmlElement" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="81d91-208">下列範例會建立屬性，並顯示`OwnerElement`的屬性。</span><span class="sxs-lookup"><span data-stu-id="81d91-208">The following example creates an attribute and displays the `OwnerElement` of the attribute.</span></span>  
  
 [!code-cpp[Classic WebData XmlAttribute.OwnerElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlAttribute.OwnerElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlAttribute.OwnerElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlAttribute.OwnerElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlAttribute.OwnerElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlAttribute.OwnerElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentNode">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNode ParentNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNode ParentNode" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlAttribute.ParentNode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ParentNode As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNode ^ ParentNode { System::Xml::XmlNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ParentNode : System.Xml.XmlNode" Usage="System.Xml.XmlAttribute.ParentNode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="81d91-209">取得這個節點的父代 (Parent)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-209">Gets the parent of this node.</span>
          </span>
          <span data-ttu-id="81d91-210">對於 <see langword="XmlAttribute" /> 節點，這個屬性永遠傳回 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-210">For <see langword="XmlAttribute" /> nodes, this property always returns <see langword="null" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="81d91-211">對於 <see langword="XmlAttribute" /> 節點，這個屬性永遠傳回 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-211">For <see langword="XmlAttribute" /> nodes, this property always returns <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81d91-212">使用<xref:System.Xml.XmlAttribute.OwnerElement%2A>屬性來取得<xref:System.Xml.XmlElement>所屬的屬性。</span><span class="sxs-lookup"><span data-stu-id="81d91-212">Use the <xref:System.Xml.XmlAttribute.OwnerElement%2A> property to get the <xref:System.Xml.XmlElement> to which the attribute belongs.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Prefix">
      <MemberSignature Language="C#" Value="public override string Prefix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Prefix" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlAttribute.Prefix" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Prefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Prefix { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Prefix : string with get, set" Usage="System.Xml.XmlAttribute.Prefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="81d91-213">取得或設定這個節點的命名空間前置詞。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-213">Gets or sets the namespace prefix of this node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="81d91-214">這個節點的命名空間前置詞。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-214">The namespace prefix of this node.</span>
          </span>
          <span data-ttu-id="81d91-215">如果沒有前置詞，則這個屬性會傳回 String.Empty。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-215">If there is no prefix, this property returns String.Empty.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81d91-216">變更屬性的前置詞不會變更其命名空間 URI，因為變更成具有預設值就是屬性的前置詞不會建立新屬性的預設值與原始的前置詞。</span><span class="sxs-lookup"><span data-stu-id="81d91-216">Because changing the prefix of an attribute does not change its namespace URI, changing the prefix of an attribute that is known to have a default value does not create a new attribute with the default value and the original prefix.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="81d91-217">下列範例會顯示在每個屬性集合中之節點上的資訊。</span><span class="sxs-lookup"><span data-stu-id="81d91-217">The following example displays information on each of the nodes in the attribute collection.</span></span>  
  
 [!code-cpp[Classic WebData XmlAttribute.NamespaceURI Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlAttribute.NamespaceURI Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlAttribute.NamespaceURI Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlAttribute.NamespaceURI Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlAttribute.NamespaceURI Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlAttribute.NamespaceURI Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="81d91-218">這個節點是唯讀的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-218">This node is read-only.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="81d91-219">指定的前置詞包含無效的字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-219">The specified prefix contains an invalid character.</span>
          </span>
          <span data-ttu-id="81d91-220">指定的前置詞格式不正確。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-220">The specified prefix is malformed.</span>
          </span>
          <span data-ttu-id="81d91-221">此節點的 namespaceURI 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-221">The namespaceURI of this node is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="81d91-222">指定的前置詞為 "xml"，且此節點的 namespaceURI 與 "http://www.w3.org/XML/1998/namespace" \(英文\) 的不同。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-222">The specified prefix is "xml", and the namespaceURI of this node is different from "http://www.w3.org/XML/1998/namespace".</span>
          </span>
          <span data-ttu-id="81d91-223">此節點是一個屬性，指定的前置詞是 "xmlns"，且此節點的 namespaceURI 與 "http://www.w3.org/2000/xmlns/" \(英文\) 的不同。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-223">This node is an attribute, the specified prefix is "xmlns", and the namespaceURI of this node is different from "http://www.w3.org/2000/xmlns/".</span>
          </span>
          <span data-ttu-id="81d91-224">這個節點是一個屬性，其 qualifiedName 為 "xmlns" [Namespaces]。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-224">This node is an attribute, and the qualifiedName of this node is "xmlns" [Namespaces].</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="PrependChild">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNode PrependChild (System.Xml.XmlNode newChild);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Xml.XmlNode PrependChild(class System.Xml.XmlNode newChild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlAttribute.PrependChild(System.Xml.XmlNode)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function PrependChild (newChild As XmlNode) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Xml::XmlNode ^ PrependChild(System::Xml::XmlNode ^ newChild);" />
      <MemberSignature Language="F#" Value="override this.PrependChild : System.Xml.XmlNode -&gt; System.Xml.XmlNode" Usage="xmlAttribute.PrependChild newChild" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newChild" Type="System.Xml.XmlNode" />
      </Parameters>
      <Docs>
        <param name="newChild">
          <span data-ttu-id="81d91-225">要加入的 <see cref="T:System.Xml.XmlNode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-225">The <see cref="T:System.Xml.XmlNode" /> to add.</span>
          </span>
          <span data-ttu-id="81d91-226">如果是 <see cref="T:System.Xml.XmlDocumentFragment" />，則文件片段的整個內容都會移入這個節點的子節點清單中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-226">If it is an <see cref="T:System.Xml.XmlDocumentFragment" />, the entire contents of the document fragment are moved into the child list of this node.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="81d91-227">將指定的節點加入這個節點之子節點清單的開頭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-227">Adds the specified node to the beginning of the list of child nodes for this node.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="81d91-228">所加入的 <see cref="T:System.Xml.XmlNode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-228">The <see cref="T:System.Xml.XmlNode" /> added.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81d91-229">如果`newChild`是已經在樹狀目錄中，則會先移除。</span><span class="sxs-lookup"><span data-stu-id="81d91-229">If the `newChild` is already in the tree, it is first removed.</span></span>  
  
 <span data-ttu-id="81d91-230">如果要插入的節點建立另一個文件中，您可以使用<xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=nameWithType>匯入目前的文件的節點。</span><span class="sxs-lookup"><span data-stu-id="81d91-230">If the node being inserted was created from another document, you can use <xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=nameWithType> to import the node to the current document.</span></span> <span data-ttu-id="81d91-231">匯入的節點則可以插入至目前的文件。</span><span class="sxs-lookup"><span data-stu-id="81d91-231">The imported node can then be inserted into the current document.</span></span>  
  
 <span data-ttu-id="81d91-232">這個方法是 Microsoft 擴充功能文件物件模型 (DOM)。</span><span class="sxs-lookup"><span data-stu-id="81d91-232">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="81d91-233">如需<xref:System.Xml.XmlAttribute.PrependChild%2A>方法，請參閱<xref:System.Xml.XmlNode.PrependChild%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="81d91-233">For an example of the <xref:System.Xml.XmlAttribute.PrependChild%2A> method, see the <xref:System.Xml.XmlNode.PrependChild%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="81d91-234">這個節點的型別不允許 <paramref name="newChild" /> 節點型別的子節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-234">This node is of a type that does not allow child nodes of the type of the <paramref name="newChild" /> node.</span>
          </span>
          <span data-ttu-id="81d91-235">
            <paramref name="newChild" /> 是這個節點的上階。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-235">The <paramref name="newChild" /> is an ancestor of this node.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="81d91-236">
            <paramref name="newChild" /> 由不同於建立這個節點的另一份文件所建立。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-236">The <paramref name="newChild" /> was created from a different document than the one that created this node.</span>
          </span>
          <span data-ttu-id="81d91-237">這個節點是唯讀的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-237">This node is read-only.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveChild">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNode RemoveChild (System.Xml.XmlNode oldChild);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Xml.XmlNode RemoveChild(class System.Xml.XmlNode oldChild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlAttribute.RemoveChild(System.Xml.XmlNode)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function RemoveChild (oldChild As XmlNode) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Xml::XmlNode ^ RemoveChild(System::Xml::XmlNode ^ oldChild);" />
      <MemberSignature Language="F#" Value="override this.RemoveChild : System.Xml.XmlNode -&gt; System.Xml.XmlNode" Usage="xmlAttribute.RemoveChild oldChild" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldChild" Type="System.Xml.XmlNode" />
      </Parameters>
      <Docs>
        <param name="oldChild">
          <span data-ttu-id="81d91-238">要移除的 <see cref="T:System.Xml.XmlNode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-238">The <see cref="T:System.Xml.XmlNode" /> to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="81d91-239">移除指定的子節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-239">Removes the specified child node.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="81d91-240">所移除的 <see cref="T:System.Xml.XmlNode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-240">The <see cref="T:System.Xml.XmlNode" /> removed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="81d91-241">如需<xref:System.Xml.XmlAttribute.RemoveChild%2A>方法，請參閱<xref:System.Xml.XmlNode.RemoveChild%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="81d91-241">For an example of the <xref:System.Xml.XmlAttribute.RemoveChild%2A> method, see the <xref:System.Xml.XmlNode.RemoveChild%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="81d91-242">
            <paramref name="oldChild" /> 不是這個節點的子節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-242">The <paramref name="oldChild" /> is not a child of this node.</span>
          </span>
          <span data-ttu-id="81d91-243">或者這個節點是唯讀的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-243">Or this node is read-only.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReplaceChild">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNode ReplaceChild (System.Xml.XmlNode newChild, System.Xml.XmlNode oldChild);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Xml.XmlNode ReplaceChild(class System.Xml.XmlNode newChild, class System.Xml.XmlNode oldChild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlAttribute.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReplaceChild (newChild As XmlNode, oldChild As XmlNode) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Xml::XmlNode ^ ReplaceChild(System::Xml::XmlNode ^ newChild, System::Xml::XmlNode ^ oldChild);" />
      <MemberSignature Language="F#" Value="override this.ReplaceChild : System.Xml.XmlNode * System.Xml.XmlNode -&gt; System.Xml.XmlNode" Usage="xmlAttribute.ReplaceChild (newChild, oldChild)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newChild" Type="System.Xml.XmlNode" />
        <Parameter Name="oldChild" Type="System.Xml.XmlNode" />
      </Parameters>
      <Docs>
        <param name="newChild">
          <span data-ttu-id="81d91-244">新的子 <see cref="T:System.Xml.XmlNode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-244">The new child <see cref="T:System.Xml.XmlNode" />.</span>
          </span>
        </param>
        <param name="oldChild">
          <span data-ttu-id="81d91-245">要取代的 <see cref="T:System.Xml.XmlNode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-245">The <see cref="T:System.Xml.XmlNode" /> to replace.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="81d91-246">用指定的新子節點取代指定的子節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-246">Replaces the child node specified with the new child node specified.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="81d91-247">所取代的 <see cref="T:System.Xml.XmlNode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-247">The <see cref="T:System.Xml.XmlNode" /> replaced.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81d91-248">如果`newChild`是已經在樹狀目錄中，則會先移除。</span><span class="sxs-lookup"><span data-stu-id="81d91-248">If the `newChild` is already in the tree, it is first removed.</span></span>  
  
 <span data-ttu-id="81d91-249">如果`newChild`建立另一個文件，您可以使用<xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=nameWithType>匯入目前的文件的節點。</span><span class="sxs-lookup"><span data-stu-id="81d91-249">If the `newChild` was created from another document, you can use <xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=nameWithType> to import the node to the current document.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="81d91-250">如需<xref:System.Xml.XmlAttribute.ReplaceChild%2A>方法，請參閱<xref:System.Xml.XmlNode.ReplaceChild%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="81d91-250">For an example of the <xref:System.Xml.XmlAttribute.ReplaceChild%2A> method, see the <xref:System.Xml.XmlNode.ReplaceChild%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="81d91-251">這個節點的型別不允許 <paramref name="newChild" /> 節點型別的子節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-251">This node is of a type that does not allow child nodes of the type of the <paramref name="newChild" /> node.</span>
          </span>
          <span data-ttu-id="81d91-252">
            <paramref name="newChild" /> 是這個節點的上階。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-252">The <paramref name="newChild" /> is an ancestor of this node.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="81d91-253">
            <paramref name="newChild" /> 由不同於建立這個節點的另一份文件所建立。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-253">The <paramref name="newChild" /> was created from a different document than the one that created this node.</span>
          </span>
          <span data-ttu-id="81d91-254">這個節點是唯讀的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-254">This node is read-only.</span>
          </span>
          <span data-ttu-id="81d91-255">
            <paramref name="oldChild" /> 不是這個節點的子節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-255">The <paramref name="oldChild" /> is not a child of this node.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SchemaInfo">
      <MemberSignature Language="C#" Value="public override System.Xml.Schema.IXmlSchemaInfo SchemaInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.IXmlSchemaInfo SchemaInfo" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlAttribute.SchemaInfo" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SchemaInfo As IXmlSchemaInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::Schema::IXmlSchemaInfo ^ SchemaInfo { System::Xml::Schema::IXmlSchemaInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SchemaInfo : System.Xml.Schema.IXmlSchemaInfo" Usage="System.Xml.XmlAttribute.SchemaInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.IXmlSchemaInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="81d91-256">取得後結構描述驗證資訊集，在結構描述驗證之後已將其指派給這個節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-256">Gets the post-schema-validation-infoset that has been assigned to this node as a result of schema validation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="81d91-257">
            <see cref="T:System.Xml.Schema.IXmlSchemaInfo" />，包含這個節點的後結構描述驗證資訊集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-257">An <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> containing the post-schema-validation-infoset of this node.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81d91-258"><xref:System.Xml.XmlAttribute.SchemaInfo%2A>時驗證此節點設定屬性。</span><span class="sxs-lookup"><span data-stu-id="81d91-258">The <xref:System.Xml.XmlAttribute.SchemaInfo%2A> property is set when this node is validated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Specified">
      <MemberSignature Language="C#" Value="public virtual bool Specified { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Specified" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlAttribute.Specified" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Specified As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Specified { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Specified : bool" Usage="System.Xml.XmlAttribute.Specified" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="81d91-259">取得值，表示是否明確設定屬性值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-259">Gets a value indicating whether the attribute value was explicitly set.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="81d91-260">如果在原始執行個體文件中明確指定了這個屬性的值，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-260">
              <see langword="true" /> if this attribute was explicitly given a value in the original instance document; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="81d91-261">
            <see langword="false" /> 值指示屬性的值是來自 DTD。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-261">A value of <see langword="false" /> indicates that the value of the attribute came from the DTD.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81d91-262">實作會負責這個屬性，而非使用者。</span><span class="sxs-lookup"><span data-stu-id="81d91-262">The implementation is in charge of this property, not the user.</span></span> <span data-ttu-id="81d91-263">如果使用者變更 （即使它最後都會有相同的值做為預設/固定值） 屬性的值，然後指定的旗標會自動翻轉至`true`。</span><span class="sxs-lookup"><span data-stu-id="81d91-263">If the user changes the value of the attribute (even if it ends up having the same value as the default/fixed value), then the specified flag is automatically flipped to `true`.</span></span> <span data-ttu-id="81d91-264">若要重新指定做為 DTD 中的預設/固定值的屬性，使用者必須刪除屬性。</span><span class="sxs-lookup"><span data-stu-id="81d91-264">To re-specify the attribute as the default/fixed value from the DTD, the user must delete the attribute.</span></span> <span data-ttu-id="81d91-265">實作接著會使用指定的集合的新屬性`false`及預設/固定值 （如果有的話）。</span><span class="sxs-lookup"><span data-stu-id="81d91-265">The implementation then makes a new attribute available with specified set to `false` and the default/fixed value (if one exists).</span></span>  
  
 <span data-ttu-id="81d91-266">歸納起來：</span><span class="sxs-lookup"><span data-stu-id="81d91-266">In summary:</span></span>  
  
1.  <span data-ttu-id="81d91-267">如果屬性在文件中具有指派的值`Specified`是`true`，而值是指派的值。</span><span class="sxs-lookup"><span data-stu-id="81d91-267">If the attribute has an assigned value in the document, `Specified` is `true`, and the value is the assigned value.</span></span>  
  
2.  <span data-ttu-id="81d91-268">如果屬性文件中沒有任何指派的值，且在 DTD 中，具有預設/固定數值`Specified`是`false`，而值是在 DTD 中的預設/固定值。</span><span class="sxs-lookup"><span data-stu-id="81d91-268">If the attribute has no assigned value in the document and has a default/fixed value in the DTD, `Specified` is `false`, and the value is the default/fixed value in the DTD.</span></span>  
  
3.  <span data-ttu-id="81d91-269">否則，屬性不會不會出現在文件的結構模型。</span><span class="sxs-lookup"><span data-stu-id="81d91-269">Otherwise, the attribute does not appear in the structure model of the document.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public override string Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlAttribute.Value" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Value { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : string with get, set" Usage="System.Xml.XmlAttribute.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="81d91-270">取得或設定節點的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-270">Gets or sets the value of the node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="81d91-271">傳回值需視節點的 <see cref="P:System.Xml.XmlNode.NodeType" /> 而定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-271">The value returned depends on the <see cref="P:System.Xml.XmlNode.NodeType" /> of the node.</span>
          </span>
          <span data-ttu-id="81d91-272">至於 <see langword="XmlAttribute" /> 節點，這個屬性 (Property) 是屬性 (Attribute) 的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-272">For <see langword="XmlAttribute" /> nodes, this property is the value of attribute.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="81d91-273">下列範例會顯示在每個屬性集合中之節點上的資訊。</span><span class="sxs-lookup"><span data-stu-id="81d91-273">The following example displays information on each of the nodes in the attribute collection.</span></span>  
  
 [!code-cpp[Classic WebData XmlAttribute.NamespaceURI Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlAttribute.NamespaceURI Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlAttribute.NamespaceURI Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlAttribute.NamespaceURI Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlAttribute.NamespaceURI Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlAttribute.NamespaceURI Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="81d91-274">節點為唯讀，並會呼叫設定作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-274">The node is read-only and a set operation is called.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteContentTo">
      <MemberSignature Language="C#" Value="public override void WriteContentTo (System.Xml.XmlWriter w);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteContentTo(class System.Xml.XmlWriter w) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlAttribute.WriteContentTo(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteContentTo (w As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteContentTo(System::Xml::XmlWriter ^ w);" />
      <MemberSignature Language="F#" Value="override this.WriteContentTo : System.Xml.XmlWriter -&gt; unit" Usage="xmlAttribute.WriteContentTo w" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="w" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="w">
          <span data-ttu-id="81d91-275">要儲存的目標 <see langword="XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-275">The <see langword="XmlWriter" /> to which you want to save.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="81d91-276">將此節點的所有子系儲存到指定的 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-276">Saves all the children of the node to the specified <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81d91-277">這個方法是 Microsoft 擴充功能文件物件模型 (DOM)。</span><span class="sxs-lookup"><span data-stu-id="81d91-277">This method is a Microsoft extension to the Document Object Model (DOM).</span></span> <span data-ttu-id="81d91-278">它相當於<xref:System.Xml.XmlAttribute.InnerXml%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="81d91-278">It is functionally equivalent to the <xref:System.Xml.XmlAttribute.InnerXml%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteTo">
      <MemberSignature Language="C#" Value="public override void WriteTo (System.Xml.XmlWriter w);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteTo(class System.Xml.XmlWriter w) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlAttribute.WriteTo(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteTo (w As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteTo(System::Xml::XmlWriter ^ w);" />
      <MemberSignature Language="F#" Value="override this.WriteTo : System.Xml.XmlWriter -&gt; unit" Usage="xmlAttribute.WriteTo w" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="w" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="w">
          <span data-ttu-id="81d91-279">要儲存的目標 <see langword="XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-279">The <see langword="XmlWriter" /> to which you want to save.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="81d91-280">將節點儲存至指定的 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d91-280">Saves the node to the specified <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81d91-281">這個方法是 Microsoft 擴充功能文件物件模型 (DOM)。</span><span class="sxs-lookup"><span data-stu-id="81d91-281">This method is a Microsoft extension to the Document Object Model (DOM).</span></span> <span data-ttu-id="81d91-282">它相當於<xref:System.Xml.XmlNode.OuterXml%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="81d91-282">It is functionally equivalent to the <xref:System.Xml.XmlNode.OuterXml%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>