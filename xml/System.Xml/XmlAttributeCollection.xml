<Type Name="XmlAttributeCollection" FullName="System.Xml.XmlAttributeCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="678fea5f4cce901ecaee2fc8a2f620515ed0cb13" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58702062" /></Metadata><TypeSignature Language="C#" Value="public sealed class XmlAttributeCollection : System.Xml.XmlNamedNodeMap, System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XmlAttributeCollection extends System.Xml.XmlNamedNodeMap implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlAttributeCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XmlAttributeCollection&#xA;Inherits XmlNamedNodeMap&#xA;Implements ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlAttributeCollection sealed : System::Xml::XmlNamedNodeMap, System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type XmlAttributeCollection = class&#xA;    inherit XmlNamedNodeMap&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlDocument</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.XmlNamedNodeMap</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="9ab50-101">表示可用名稱或索引存取的屬性 (Attribute) 集合。</span><span class="sxs-lookup"><span data-stu-id="9ab50-101">Represents a collection of attributes that can be accessed by name or index.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ab50-102">`XmlAttributeCollection` 擴充<xref:System.Xml.XmlNamedNodeMap>類別加上強型別協助程式方法。</span><span class="sxs-lookup"><span data-stu-id="9ab50-102">`XmlAttributeCollection` extends the <xref:System.Xml.XmlNamedNodeMap> class by adding strongly typed helper methods.</span></span> <span data-ttu-id="9ab50-103">您可以使用這個類別來新增、 移除或修改集合中的屬性。</span><span class="sxs-lookup"><span data-stu-id="9ab50-103">You can use this class to add, remove, or modify attributes in the collection.</span></span> <span data-ttu-id="9ab50-104">`XmlAttributeCollection` 由<xref:System.Xml.XmlElement.Attributes%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="9ab50-104">`XmlAttributeCollection` is returned by the <xref:System.Xml.XmlElement.Attributes%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.XmlAttribute" />
    <altmember cref="T:System.Xml.XmlElement" />
    <related type="Article" href="https://msdn.microsoft.com/library/ce2df341-a1a4-4e97-8e1b-cd45b8e3e71e"><span data-ttu-id="9ab50-105">存取 DOM 中的屬性</span><span class="sxs-lookup"><span data-stu-id="9ab50-105">Accessing Attributes in the DOM</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/2038a90b-92af-4a0a-baaa-08e688d95194"><span data-ttu-id="9ab50-106">根據名稱或索引擷取的未排序節點</span><span class="sxs-lookup"><span data-stu-id="9ab50-106">Unordered Node Retrieval by Name or Index</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/b5e52844-4820-47c0-a61d-de2da33e9f54"><span data-ttu-id="9ab50-107">XML 文件物件模型 (DOM)</span><span class="sxs-lookup"><span data-stu-id="9ab50-107">XML Document Object Model (DOM)</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.Xml.XmlAttribute Append (System.Xml.XmlAttribute node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlAttribute Append(class System.Xml.XmlAttribute node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlAttributeCollection.Append(System.Xml.XmlAttribute)" />
      <MemberSignature Language="VB.NET" Value="Public Function Append (node As XmlAttribute) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlAttribute ^ Append(System::Xml::XmlAttribute ^ node);" />
      <MemberSignature Language="F#" Value="member this.Append : System.Xml.XmlAttribute -&gt; System.Xml.XmlAttribute" Usage="xmlAttributeCollection.Append node" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Xml.XmlAttribute" />
      </Parameters>
      <Docs>
        <param name="node"><span data-ttu-id="9ab50-108">要插入的屬性。</span><span class="sxs-lookup"><span data-stu-id="9ab50-108">The attribute to insert.</span></span></param>
        <summary><span data-ttu-id="9ab50-109">插入指定的屬性做為集合的最後一個節點。</span><span class="sxs-lookup"><span data-stu-id="9ab50-109">Inserts the specified attribute as the last node in the collection.</span></span></summary>
        <returns><span data-ttu-id="9ab50-110"><see langword="XmlAttribute" />，要附加至集合。</span><span class="sxs-lookup"><span data-stu-id="9ab50-110">The <see langword="XmlAttribute" /> to append to the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ab50-111">如果具有相同名稱的屬性已經存在集合中，原始的屬性從集合中移除和`node`加入至集合結尾。</span><span class="sxs-lookup"><span data-stu-id="9ab50-111">If an attribute with the same name is already present in the collection, the original attribute is removed from the collection and `node` is added to the end of the collection.</span></span>  
  
 <span data-ttu-id="9ab50-112">這個方法是 Microsoft 擴充功能文件物件模型 (DOM)。</span><span class="sxs-lookup"><span data-stu-id="9ab50-112">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9ab50-113">下列範例會將新屬性加入至文件。</span><span class="sxs-lookup"><span data-stu-id="9ab50-113">The following example adds a new attribute to a document.</span></span>  
  
 [!code-cpp[Classic WebData XmlAttributeCollection.Append Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.Append Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlAttributeCollection.Append Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.Append Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlAttributeCollection.Append Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlAttributeCollection.Append Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9ab50-114"><paramref name="node" /> 由不同於建立這個集合的另一個文件所建立。</span><span class="sxs-lookup"><span data-stu-id="9ab50-114"><paramref name="node" /> was created from a document different from the one that created this collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Xml.XmlAttribute[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Xml.XmlAttribute[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlAttributeCollection.CopyTo(System.Xml.XmlAttribute[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As XmlAttribute(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Xml::XmlAttribute ^&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : System.Xml.XmlAttribute[] * int -&gt; unit" Usage="xmlAttributeCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Xml.XmlAttribute[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="9ab50-115">陣列，是從這個集合所複製的物件的目的端。</span><span class="sxs-lookup"><span data-stu-id="9ab50-115">The array that is the destination of the objects copied from this collection.</span></span></param>
        <param name="index"><span data-ttu-id="9ab50-116">在複製開始的所在陣列中的索引。</span><span class="sxs-lookup"><span data-stu-id="9ab50-116">The index in the array where copying begins.</span></span></param>
        <summary><span data-ttu-id="9ab50-117">從這個集合中複製所有 <see cref="T:System.Xml.XmlAttribute" /> 物件至指定的陣列中。</span><span class="sxs-lookup"><span data-stu-id="9ab50-117">Copies all the <see cref="T:System.Xml.XmlAttribute" /> objects from this collection into the given array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ab50-118">這個方法是 Microsoft 擴充功能文件物件模型 (DOM)。</span><span class="sxs-lookup"><span data-stu-id="9ab50-118">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9ab50-119">下列範例會使用`CopyTo`將所有屬性都複製到陣列集合中。</span><span class="sxs-lookup"><span data-stu-id="9ab50-119">The following example uses `CopyTo` to copy all the attributes in the collection into an array.</span></span>  
  
 [!code-cpp[Classic WebData XmlAttributeCollection.CopyTo Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.CopyTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlAttributeCollection.CopyTo Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.CopyTo Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlAttributeCollection.CopyTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlAttributeCollection.CopyTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertAfter">
      <MemberSignature Language="C#" Value="public System.Xml.XmlAttribute InsertAfter (System.Xml.XmlAttribute newNode, System.Xml.XmlAttribute refNode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlAttribute InsertAfter(class System.Xml.XmlAttribute newNode, class System.Xml.XmlAttribute refNode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlAttributeCollection.InsertAfter(System.Xml.XmlAttribute,System.Xml.XmlAttribute)" />
      <MemberSignature Language="VB.NET" Value="Public Function InsertAfter (newNode As XmlAttribute, refNode As XmlAttribute) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlAttribute ^ InsertAfter(System::Xml::XmlAttribute ^ newNode, System::Xml::XmlAttribute ^ refNode);" />
      <MemberSignature Language="F#" Value="member this.InsertAfter : System.Xml.XmlAttribute * System.Xml.XmlAttribute -&gt; System.Xml.XmlAttribute" Usage="xmlAttributeCollection.InsertAfter (newNode, refNode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newNode" Type="System.Xml.XmlAttribute" />
        <Parameter Name="refNode" Type="System.Xml.XmlAttribute" />
      </Parameters>
      <Docs>
        <param name="newNode"><span data-ttu-id="9ab50-120">要插入的屬性。</span><span class="sxs-lookup"><span data-stu-id="9ab50-120">The attribute to insert.</span></span></param>
        <param name="refNode"><span data-ttu-id="9ab50-121">參考屬性。</span><span class="sxs-lookup"><span data-stu-id="9ab50-121">The reference attribute.</span></span> <span data-ttu-id="9ab50-122"><paramref name="newNode" /> 會置於 <paramref name="refNode" /> 之後。</span><span class="sxs-lookup"><span data-stu-id="9ab50-122"><paramref name="newNode" /> is placed after the <paramref name="refNode" />.</span></span></param>
        <summary><span data-ttu-id="9ab50-123">在指定的參考屬性之後，立即插入指定的屬性。</span><span class="sxs-lookup"><span data-stu-id="9ab50-123">Inserts the specified attribute immediately after the specified reference attribute.</span></span></summary>
        <returns><span data-ttu-id="9ab50-124">要插入至集合的 <see langword="XmlAttribute" />。</span><span class="sxs-lookup"><span data-stu-id="9ab50-124">The <see langword="XmlAttribute" /> to insert into the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ab50-125">如果具有相同名稱的屬性已經存在集合中，原始的屬性從集合中移除和`newNode`插入至集合。</span><span class="sxs-lookup"><span data-stu-id="9ab50-125">If an attribute with the same name is already present in the collection, the original attribute is removed from the collection and `newNode` is inserted into the collection.</span></span> <span data-ttu-id="9ab50-126">如果`refNode`已`null`，`newNode`插入集合的開頭。</span><span class="sxs-lookup"><span data-stu-id="9ab50-126">If `refNode` is `null`, `newNode` is inserted at the beginning of the collection.</span></span>  
  
 <span data-ttu-id="9ab50-127">這個方法是 Microsoft 擴充功能文件物件模型 (DOM)。</span><span class="sxs-lookup"><span data-stu-id="9ab50-127">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9ab50-128">下列範例會將新屬性加入至文件。</span><span class="sxs-lookup"><span data-stu-id="9ab50-128">The following example adds a new attribute to a document.</span></span>  
  
 [!code-cpp[Classic WebData XmlAttributeCollection.InsertAfter Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.InsertAfter Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlAttributeCollection.InsertAfter Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.InsertAfter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlAttributeCollection.InsertAfter Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlAttributeCollection.InsertAfter Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9ab50-129"><paramref name="newNode" /> 由不同於建立這個集合的另一個文件所建立。</span><span class="sxs-lookup"><span data-stu-id="9ab50-129">The <paramref name="newNode" /> was created from a document different from the one that created this collection.</span></span> <span data-ttu-id="9ab50-130">或者 <paramref name="refNode" /> 並非這個集合的成員。</span><span class="sxs-lookup"><span data-stu-id="9ab50-130">Or the <paramref name="refNode" /> is not a member of this collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="InsertBefore">
      <MemberSignature Language="C#" Value="public System.Xml.XmlAttribute InsertBefore (System.Xml.XmlAttribute newNode, System.Xml.XmlAttribute refNode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlAttribute InsertBefore(class System.Xml.XmlAttribute newNode, class System.Xml.XmlAttribute refNode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlAttributeCollection.InsertBefore(System.Xml.XmlAttribute,System.Xml.XmlAttribute)" />
      <MemberSignature Language="VB.NET" Value="Public Function InsertBefore (newNode As XmlAttribute, refNode As XmlAttribute) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlAttribute ^ InsertBefore(System::Xml::XmlAttribute ^ newNode, System::Xml::XmlAttribute ^ refNode);" />
      <MemberSignature Language="F#" Value="member this.InsertBefore : System.Xml.XmlAttribute * System.Xml.XmlAttribute -&gt; System.Xml.XmlAttribute" Usage="xmlAttributeCollection.InsertBefore (newNode, refNode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newNode" Type="System.Xml.XmlAttribute" />
        <Parameter Name="refNode" Type="System.Xml.XmlAttribute" />
      </Parameters>
      <Docs>
        <param name="newNode"><span data-ttu-id="9ab50-131">要插入的屬性。</span><span class="sxs-lookup"><span data-stu-id="9ab50-131">The attribute to insert.</span></span></param>
        <param name="refNode"><span data-ttu-id="9ab50-132">參考屬性。</span><span class="sxs-lookup"><span data-stu-id="9ab50-132">The reference attribute.</span></span> <span data-ttu-id="9ab50-133"><paramref name="newNode" /> 會置於 <paramref name="refNode" /> 之前。</span><span class="sxs-lookup"><span data-stu-id="9ab50-133"><paramref name="newNode" /> is placed before the <paramref name="refNode" />.</span></span></param>
        <summary><span data-ttu-id="9ab50-134">在指定的參考屬性之前，立即插入指定的屬性。</span><span class="sxs-lookup"><span data-stu-id="9ab50-134">Inserts the specified attribute immediately before the specified reference attribute.</span></span></summary>
        <returns><span data-ttu-id="9ab50-135">要插入至集合的 <see langword="XmlAttribute" />。</span><span class="sxs-lookup"><span data-stu-id="9ab50-135">The <see langword="XmlAttribute" /> to insert into the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ab50-136">如果具有相同名稱的屬性已經存在集合中，原始的屬性從集合中移除和`newNode`插入至集合。</span><span class="sxs-lookup"><span data-stu-id="9ab50-136">If an attribute with the same name is already present in the collection, the original attribute is removed from the collection and `newNode` is inserted into the collection.</span></span> <span data-ttu-id="9ab50-137">如果`refNode`已`null`，`newNode`插入集合的結尾。</span><span class="sxs-lookup"><span data-stu-id="9ab50-137">If `refNode` is `null`, `newNode` is inserted at the end of the collection.</span></span>  
  
 <span data-ttu-id="9ab50-138">這個方法是 Microsoft 擴充功能文件物件模型 (DOM)。</span><span class="sxs-lookup"><span data-stu-id="9ab50-138">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9ab50-139">下列範例會將新屬性加入至文件。</span><span class="sxs-lookup"><span data-stu-id="9ab50-139">The following example adds a new attribute to a document.</span></span>  
  
 [!code-cpp[Classic WebData XmlAttributeCollection.InsertBefore Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.InsertBefore Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlAttributeCollection.InsertBefore Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.InsertBefore Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlAttributeCollection.InsertBefore Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlAttributeCollection.InsertBefore Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9ab50-140"><paramref name="newNode" /> 由不同於建立這個集合的另一個文件所建立。</span><span class="sxs-lookup"><span data-stu-id="9ab50-140">The <paramref name="newNode" /> was created from a document different from the one that created this collection.</span></span> <span data-ttu-id="9ab50-141">或者 <paramref name="refNode" /> 並非這個集合的成員。</span><span class="sxs-lookup"><span data-stu-id="9ab50-141">Or the <paramref name="refNode" /> is not a member of this collection.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ItemOf">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9ab50-142">取得具有指定名稱或索引的屬性。</span><span class="sxs-lookup"><span data-stu-id="9ab50-142">Gets the attribute with the specified name or index.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ItemOf">
      <MemberSignature Language="C#" Value="public System.Xml.XmlAttribute this[int i] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlAttribute ItemOf(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlAttributeCollection.ItemOf(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property ItemOf(i As Integer) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlAttribute ^ default[int] { System::Xml::XmlAttribute ^ get(int i); };" />
      <MemberSignature Language="F#" Value="member this.ItemOf(int) : System.Xml.XmlAttribute" Usage="System.Xml.XmlAttributeCollection.ItemOf" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="9ab50-143">屬性的索引。</span><span class="sxs-lookup"><span data-stu-id="9ab50-143">The index of the attribute.</span></span></param>
        <summary><span data-ttu-id="9ab50-144">取得具有指定索引的屬性。</span><span class="sxs-lookup"><span data-stu-id="9ab50-144">Gets the attribute with the specified index.</span></span></summary>
        <value><span data-ttu-id="9ab50-145">在指定索引的屬性。</span><span class="sxs-lookup"><span data-stu-id="9ab50-145">The attribute at the specified index.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ab50-146">這個屬性是文件物件模型的 Microsoft 擴充功能。</span><span class="sxs-lookup"><span data-stu-id="9ab50-146">This property is a Microsoft extension to the Document Object Model (DOM).</span></span> <span data-ttu-id="9ab50-147">它相當於呼叫<xref:System.Xml.XmlNamedNodeMap.Item%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="9ab50-147">It is equivalent to calling <xref:System.Xml.XmlNamedNodeMap.Item%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9ab50-148">下列範例會顯示集合中的所有屬性。</span><span class="sxs-lookup"><span data-stu-id="9ab50-148">The following example displays all the attributes in the collection.</span></span>  
  
 [!code-cpp[Classic WebData XmlAttributeCollection.this Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.this Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlAttributeCollection.this Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.this Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlAttributeCollection.this Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlAttributeCollection.this Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="9ab50-149">傳入的索引超出範圍。</span><span class="sxs-lookup"><span data-stu-id="9ab50-149">The index being passed in is out of range.</span></span></exception>
        <altmember cref="M:System.Xml.XmlNamedNodeMap.Item(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ItemOf">
      <MemberSignature Language="C#" Value="public System.Xml.XmlAttribute this[string name] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlAttribute ItemOf(string)" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlAttributeCollection.ItemOf(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property ItemOf(name As String) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlAttribute ^ default[System::String ^] { System::Xml::XmlAttribute ^ get(System::String ^ name); };" />
      <MemberSignature Language="F#" Value="member this.ItemOf(string) : System.Xml.XmlAttribute" Usage="System.Xml.XmlAttributeCollection.ItemOf" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="9ab50-150">屬性的限定名稱 (Qualified Name)。</span><span class="sxs-lookup"><span data-stu-id="9ab50-150">The qualified name of the attribute.</span></span></param>
        <summary><span data-ttu-id="9ab50-151">取得具有指定名稱的屬性。</span><span class="sxs-lookup"><span data-stu-id="9ab50-151">Gets the attribute with the specified name.</span></span></summary>
        <value><span data-ttu-id="9ab50-152">具有指定名稱的屬性。</span><span class="sxs-lookup"><span data-stu-id="9ab50-152">The attribute with the specified name.</span></span> <span data-ttu-id="9ab50-153">如果屬性 (attribute) 不存在，這個屬性 (property) 會傳回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9ab50-153">If the attribute does not exist, this property returns <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ab50-154">這個屬性是文件物件模型的 Microsoft 擴充功能。</span><span class="sxs-lookup"><span data-stu-id="9ab50-154">This property is a Microsoft extension to the Document Object Model (DOM).</span></span> <span data-ttu-id="9ab50-155">它相當於呼叫<xref:System.Xml.XmlNamedNodeMap.GetNamedItem%2A>。</span><span class="sxs-lookup"><span data-stu-id="9ab50-155">It is equivalent to calling <xref:System.Xml.XmlNamedNodeMap.GetNamedItem%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9ab50-156">下列範例會移除文件中的屬性。</span><span class="sxs-lookup"><span data-stu-id="9ab50-156">The following example removes an attribute from the document.</span></span>  
  
 [!code-cpp[Classic WebData XmlAttributeCollection.Remove Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.Remove Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlAttributeCollection.Remove Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.Remove Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlAttributeCollection.Remove Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlAttributeCollection.Remove Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemOf">
      <MemberSignature Language="C#" Value="public System.Xml.XmlAttribute this[string localName, string namespaceURI] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlAttribute ItemOf(string, string)" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlAttributeCollection.ItemOf(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property ItemOf(localName As String, namespaceURI As String) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlAttribute ^ default[System::String ^, System::String ^] { System::Xml::XmlAttribute ^ get(System::String ^ localName, System::String ^ namespaceURI); };" />
      <MemberSignature Language="F#" Value="member this.ItemOf(string * string) : System.Xml.XmlAttribute" Usage="System.Xml.XmlAttributeCollection.ItemOf" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="9ab50-157">屬性的本機名稱。</span><span class="sxs-lookup"><span data-stu-id="9ab50-157">The local name of the attribute.</span></span></param>
        <param name="namespaceURI"><span data-ttu-id="9ab50-158">屬性的命名空間 URI。</span><span class="sxs-lookup"><span data-stu-id="9ab50-158">The namespace URI of the attribute.</span></span></param>
        <summary><span data-ttu-id="9ab50-159">取得指定的區域名稱和命名空間統一資源識別元 (URI) 之屬性。</span><span class="sxs-lookup"><span data-stu-id="9ab50-159">Gets the attribute with the specified local name and namespace Uniform Resource Identifier (URI).</span></span></summary>
        <value><span data-ttu-id="9ab50-160">具有指定區域名稱和命名空間 URI 的屬性。</span><span class="sxs-lookup"><span data-stu-id="9ab50-160">The attribute with the specified local name and namespace URI.</span></span> <span data-ttu-id="9ab50-161">如果屬性 (attribute) 不存在，這個屬性 (property) 會傳回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9ab50-161">If the attribute does not exist, this property returns <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ab50-162">這個屬性是文件物件模型的 Microsoft 擴充功能。</span><span class="sxs-lookup"><span data-stu-id="9ab50-162">This property is a Microsoft extension to the Document Object Model (DOM).</span></span> <span data-ttu-id="9ab50-163">它相當於呼叫<xref:System.Xml.XmlNamedNodeMap.GetNamedItem%2A>。</span><span class="sxs-lookup"><span data-stu-id="9ab50-163">It is equivalent to calling <xref:System.Xml.XmlNamedNodeMap.GetNamedItem%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Prepend">
      <MemberSignature Language="C#" Value="public System.Xml.XmlAttribute Prepend (System.Xml.XmlAttribute node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlAttribute Prepend(class System.Xml.XmlAttribute node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlAttributeCollection.Prepend(System.Xml.XmlAttribute)" />
      <MemberSignature Language="VB.NET" Value="Public Function Prepend (node As XmlAttribute) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlAttribute ^ Prepend(System::Xml::XmlAttribute ^ node);" />
      <MemberSignature Language="F#" Value="member this.Prepend : System.Xml.XmlAttribute -&gt; System.Xml.XmlAttribute" Usage="xmlAttributeCollection.Prepend node" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Xml.XmlAttribute" />
      </Parameters>
      <Docs>
        <param name="node"><span data-ttu-id="9ab50-164">要插入的屬性。</span><span class="sxs-lookup"><span data-stu-id="9ab50-164">The attribute to insert.</span></span></param>
        <summary><span data-ttu-id="9ab50-165">插入指定的屬性做為集合的第一個節點。</span><span class="sxs-lookup"><span data-stu-id="9ab50-165">Inserts the specified attribute as the first node in the collection.</span></span></summary>
        <returns><span data-ttu-id="9ab50-166">要加入至集合中的 <see langword="XmlAttribute" />。</span><span class="sxs-lookup"><span data-stu-id="9ab50-166">The <see langword="XmlAttribute" /> added to the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ab50-167">如果具有相同名稱的屬性已經存在集合中，原始的屬性從集合中移除和`node`加入至集合的開頭。</span><span class="sxs-lookup"><span data-stu-id="9ab50-167">If an attribute with the same name is already present in the collection, the original attribute is removed from the collection and `node` is added to the beginning of the collection.</span></span>  
  
 <span data-ttu-id="9ab50-168">這個方法是 Microsoft 擴充功能文件物件模型 (DOM)。</span><span class="sxs-lookup"><span data-stu-id="9ab50-168">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9ab50-169">下列範例會將新屬性加入至文件。</span><span class="sxs-lookup"><span data-stu-id="9ab50-169">The following example adds a new attribute to a document.</span></span>  
  
 [!code-cpp[Classic WebData XmlAttributeCollection.Prepend Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.Prepend Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlAttributeCollection.Prepend Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.Prepend Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlAttributeCollection.Prepend Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlAttributeCollection.Prepend Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public System.Xml.XmlAttribute Remove (System.Xml.XmlAttribute node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlAttribute Remove(class System.Xml.XmlAttribute node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlAttributeCollection.Remove(System.Xml.XmlAttribute)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (node As XmlAttribute) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlAttribute ^ Remove(System::Xml::XmlAttribute ^ node);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Xml.XmlAttribute -&gt; System.Xml.XmlAttribute" Usage="xmlAttributeCollection.Remove node" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Xml.XmlAttribute" />
      </Parameters>
      <Docs>
        <param name="node"><span data-ttu-id="9ab50-170">要移除的屬性。</span><span class="sxs-lookup"><span data-stu-id="9ab50-170">The attribute to remove.</span></span></param>
        <summary><span data-ttu-id="9ab50-171">從集合中移除指定的屬性。</span><span class="sxs-lookup"><span data-stu-id="9ab50-171">Removes the specified attribute from the collection.</span></span></summary>
        <returns><span data-ttu-id="9ab50-172">這個節點將會移除，如果集合中找不到這個節點，則為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9ab50-172">The node removed or <see langword="null" /> if it is not found in the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ab50-173">這個方法是 Microsoft 擴充功能文件物件模型 (DOM)。</span><span class="sxs-lookup"><span data-stu-id="9ab50-173">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9ab50-174">下列範例會移除文件中的屬性。</span><span class="sxs-lookup"><span data-stu-id="9ab50-174">The following example removes an attribute from the document.</span></span>  
  
 [!code-cpp[Classic WebData XmlAttributeCollection.Remove Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.Remove Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlAttributeCollection.Remove Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.Remove Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlAttributeCollection.Remove Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlAttributeCollection.Remove Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAll">
      <MemberSignature Language="C#" Value="public void RemoveAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlAttributeCollection.RemoveAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAll();" />
      <MemberSignature Language="F#" Value="member this.RemoveAll : unit -&gt; unit" Usage="xmlAttributeCollection.RemoveAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9ab50-175">從集合移除所有的屬性。</span><span class="sxs-lookup"><span data-stu-id="9ab50-175">Removes all attributes from the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ab50-176">這個方法是 Microsoft 擴充功能文件物件模型 (DOM)。</span><span class="sxs-lookup"><span data-stu-id="9ab50-176">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9ab50-177">下列範例會移除文件中的所有屬性。</span><span class="sxs-lookup"><span data-stu-id="9ab50-177">The following example removes all attributes from the document.</span></span>  
  
 [!code-cpp[Classic WebData XmlAttributeCollection.RemoveAll Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.RemoveAll Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlAttributeCollection.RemoveAll Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.RemoveAll Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlAttributeCollection.RemoveAll Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlAttributeCollection.RemoveAll Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public System.Xml.XmlAttribute RemoveAt (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlAttribute RemoveAt(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlAttributeCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAt (i As Integer) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlAttribute ^ RemoveAt(int i);" />
      <MemberSignature Language="F#" Value="member this.RemoveAt : int -&gt; System.Xml.XmlAttribute" Usage="xmlAttributeCollection.RemoveAt i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="9ab50-178">要移除的節點的索引。</span><span class="sxs-lookup"><span data-stu-id="9ab50-178">The index of the node to remove.</span></span> <span data-ttu-id="9ab50-179">第一個節點的索引為 0。</span><span class="sxs-lookup"><span data-stu-id="9ab50-179">The first node has index 0.</span></span></param>
        <summary><span data-ttu-id="9ab50-180">從集合中移除對應指定索引的屬性。</span><span class="sxs-lookup"><span data-stu-id="9ab50-180">Removes the attribute corresponding to the specified index from the collection.</span></span></summary>
        <returns><span data-ttu-id="9ab50-181">如果在指定的索引處並無屬性，則傳回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9ab50-181">Returns <see langword="null" /> if there is no attribute at the specified index.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ab50-182">這個方法是 Microsoft 擴充功能文件物件模型 (DOM)。</span><span class="sxs-lookup"><span data-stu-id="9ab50-182">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9ab50-183">下列範例會移除文件中的屬性。</span><span class="sxs-lookup"><span data-stu-id="9ab50-183">The following example removes an attribute from the document.</span></span>  
  
 [!code-cpp[Classic WebData XmlAttributeCollection.RemoveAt Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.RemoveAt Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlAttributeCollection.RemoveAt Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.RemoveAt Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlAttributeCollection.RemoveAt Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlAttributeCollection.RemoveAt Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetNamedItem">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNode SetNamedItem (System.Xml.XmlNode node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Xml.XmlNode SetNamedItem(class System.Xml.XmlNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlAttributeCollection.SetNamedItem(System.Xml.XmlNode)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function SetNamedItem (node As XmlNode) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Xml::XmlNode ^ SetNamedItem(System::Xml::XmlNode ^ node);" />
      <MemberSignature Language="F#" Value="override this.SetNamedItem : System.Xml.XmlNode -&gt; System.Xml.XmlNode" Usage="xmlAttributeCollection.SetNamedItem node" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Xml.XmlNode" />
      </Parameters>
      <Docs>
        <param name="node"><span data-ttu-id="9ab50-184">儲存在這個集合中的屬性節點。</span><span class="sxs-lookup"><span data-stu-id="9ab50-184">An attribute node to store in this collection.</span></span> <span data-ttu-id="9ab50-185">這個節點稍後可用節點名稱來存取。</span><span class="sxs-lookup"><span data-stu-id="9ab50-185">The node will later be accessible using the name of the node.</span></span> <span data-ttu-id="9ab50-186">如果集合中已經有這個名稱的節點，它將會被新的節點取代；否則，這個節點就會附加在集合的結尾。</span><span class="sxs-lookup"><span data-stu-id="9ab50-186">If a node with that name is already present in the collection, it is replaced by the new one; otherwise, the node is appended to the end of the collection.</span></span></param>
        <summary><span data-ttu-id="9ab50-187">使用其 <see cref="T:System.Xml.XmlNode" /> 屬性加入 <see cref="P:System.Xml.XmlNode.Name" />。</span><span class="sxs-lookup"><span data-stu-id="9ab50-187">Adds a <see cref="T:System.Xml.XmlNode" /> using its <see cref="P:System.Xml.XmlNode.Name" /> property</span></span></summary>
        <returns><span data-ttu-id="9ab50-188">如果 <paramref name="node" /> 取代同名的現有節點，則傳回舊節點；否則傳回所加入的節點。</span><span class="sxs-lookup"><span data-stu-id="9ab50-188">If the <paramref name="node" /> replaces an existing node with the same name, the old node is returned; otherwise, the added node is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9ab50-189">下列範例會將新屬性加入至文件。</span><span class="sxs-lookup"><span data-stu-id="9ab50-189">The following example adds a new attribute to a document.</span></span>  
  
 [!code-cpp[Classic WebData XmlAttributeCollection.SetNamedItem Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.SetNamedItem Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlAttributeCollection.SetNamedItem Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.SetNamedItem Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlAttributeCollection.SetNamedItem Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlAttributeCollection.SetNamedItem Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9ab50-190"><paramref name="node" /> 由不同於建立這個集合的另一個 <see cref="T:System.Xml.XmlDocument" /> 所建立。</span><span class="sxs-lookup"><span data-stu-id="9ab50-190"><paramref name="node" /> was created from a different <see cref="T:System.Xml.XmlDocument" /> than the one that created this collection.</span></span>  
  
<span data-ttu-id="9ab50-191">這個 <see langword="XmlAttributeCollection" /> 是唯讀的。</span><span class="sxs-lookup"><span data-stu-id="9ab50-191">This <see langword="XmlAttributeCollection" /> is read-only.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9ab50-192"><paramref name="node" /> 是已經成為另一個 <see cref="T:System.Xml.XmlAttribute" /> 物件屬性的 <see cref="T:System.Xml.XmlElement" />。</span><span class="sxs-lookup"><span data-stu-id="9ab50-192"><paramref name="node" /> is an <see cref="T:System.Xml.XmlAttribute" /> that is already an attribute of another <see cref="T:System.Xml.XmlElement" /> object.</span></span> <span data-ttu-id="9ab50-193">若要重複使用其他項目中的屬性，您必須複製 (Clone) 想要重複使用的 <see langword="XmlAttribute" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="9ab50-193">To re-use attributes in other elements, you must clone the <see langword="XmlAttribute" /> objects you want to re-use.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlAttributeCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="9ab50-194">陣列，是從這個集合所複製的物件的目的端。</span><span class="sxs-lookup"><span data-stu-id="9ab50-194">The array that is the destination of the objects copied from this collection.</span></span></param>
        <param name="index"><span data-ttu-id="9ab50-195">在複製開始的所在陣列中的索引。</span><span class="sxs-lookup"><span data-stu-id="9ab50-195">The index in the array where copying begins.</span></span></param>
        <summary><span data-ttu-id="9ab50-196">如需這個成員的說明，請參閱 <see cref="M:System.Xml.XmlAttributeCollection.CopyTo(System.Xml.XmlAttribute[],System.Int32)" />。</span><span class="sxs-lookup"><span data-stu-id="9ab50-196">For a description of this member, see <see cref="M:System.Xml.XmlAttributeCollection.CopyTo(System.Xml.XmlAttribute[],System.Int32)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ab50-197">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="9ab50-197">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9ab50-198">只有在 <xref:System.Xml.XmlAttributeCollection> 執行個體轉換成 <xref:System.Collections.ICollection> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="9ab50-198">It can be used only when the <xref:System.Xml.XmlAttributeCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.Count">
      <MemberSignature Language="C#" Value="int System.Collections.ICollection.Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Collections.ICollection.Count" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#Count" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Count As Integer Implements ICollection.Count" />
      <MemberSignature Language="C++ CLI" Value="property int System::Collections::ICollection::Count { int get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9ab50-199">如需這個成員的說明，請參閱 <see cref="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#Count" />。</span><span class="sxs-lookup"><span data-stu-id="9ab50-199">For a description of this member, see <see cref="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#Count" />.</span></span></summary>
        <value><span data-ttu-id="9ab50-200"><see langword="int" /> ，包含屬性的計數。</span><span class="sxs-lookup"><span data-stu-id="9ab50-200">An <see langword="int" /> that contains the count of the attributes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ab50-201">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="9ab50-201">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9ab50-202">只有在 <xref:System.Xml.XmlAttributeCollection> 執行個體轉換成 <xref:System.Collections.ICollection> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="9ab50-202">It can be used only when the <xref:System.Xml.XmlAttributeCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9ab50-203">如需這個成員的說明，請參閱 <see cref="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#IsSynchronized" />。</span><span class="sxs-lookup"><span data-stu-id="9ab50-203">For a description of this member, see <see cref="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#IsSynchronized" />.</span></span></summary>
        <value><span data-ttu-id="9ab50-204"><see langword="true" /> 如果集合已同步處理。</span><span class="sxs-lookup"><span data-stu-id="9ab50-204"><see langword="true" /> if the collection is synchronized.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ab50-205">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="9ab50-205">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9ab50-206">只有在 <xref:System.Xml.XmlAttributeCollection> 執行個體轉換成 <xref:System.Collections.ICollection> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="9ab50-206">It can be used only when the <xref:System.Xml.XmlAttributeCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9ab50-207">如需這個成員的說明，請參閱 <see cref="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#SyncRoot" />。</span><span class="sxs-lookup"><span data-stu-id="9ab50-207">For a description of this member, see <see cref="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#SyncRoot" />.</span></span></summary>
        <value><span data-ttu-id="9ab50-208"><see cref="T:System.Object" />也就是集合的根。</span><span class="sxs-lookup"><span data-stu-id="9ab50-208">The <see cref="T:System.Object" /> that is the root of the collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ab50-209">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="9ab50-209">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9ab50-210">只有在 <xref:System.Xml.XmlAttributeCollection> 執行個體轉換成 <xref:System.Collections.ICollection> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="9ab50-210">It can be used only when the <xref:System.Xml.XmlAttributeCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>