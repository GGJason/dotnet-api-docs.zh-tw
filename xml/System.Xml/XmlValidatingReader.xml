<Type Name="XmlValidatingReader" FullName="System.Xml.XmlValidatingReader">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b2799c74b5d9f360a02646bb795ab2a0debce9d9" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="64996581" /></Metadata><TypeSignature Language="C#" Value="public class XmlValidatingReader : System.Xml.XmlReader, System.Xml.IXmlLineInfo, System.Xml.IXmlNamespaceResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlValidatingReader extends System.Xml.XmlReader implements class System.Xml.IXmlLineInfo, class System.Xml.IXmlNamespaceResolver" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlValidatingReader" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlValidatingReader&#xA;Inherits XmlReader&#xA;Implements IXmlLineInfo, IXmlNamespaceResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlValidatingReader : System::Xml::XmlReader, System::Xml::IXmlLineInfo, System::Xml::IXmlNamespaceResolver" />
  <TypeSignature Language="F#" Value="type XmlValidatingReader = class&#xA;    inherit XmlReader&#xA;    interface IXmlLineInfo&#xA;    interface IXmlNamespaceResolver" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.XmlReader</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Xml.IXmlLineInfo</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Xml.IXmlNamespaceResolver</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
      <AttributeName>System.Obsolete("Use XmlReader created by XmlReader.Create() method using appropriate XmlReaderSettings instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
      <AttributeName>System.Obsolete("Use XmlReader created by XmlReader.Create() method using appropriate XmlReaderSettings instead. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="eed29-101">表示讀取器，其提供文件類型定義 (DTD)、XML-Data Reduced (XDR) 結構描述，以及 XML 結構描述定義語言 (XSD) 驗證。</span><span class="sxs-lookup"><span data-stu-id="eed29-101">Represents a reader that provides document type definition (DTD), XML-Data Reduced (XDR) schema, and XML Schema definition language (XSD) validation.</span></span>  
  
<span data-ttu-id="eed29-102">這個類別已經過時。</span><span class="sxs-lookup"><span data-stu-id="eed29-102">This class is obsolete.</span></span> <span data-ttu-id="eed29-103">從 .NET Framework 2.0 開始，我們建議使用 <see cref="T:System.Xml.XmlReaderSettings" /> 類別及 <see cref="Overload:System.Xml.XmlReader.Create" /> 方法，來建立驗證 XML 讀取器。</span><span class="sxs-lookup"><span data-stu-id="eed29-103">Starting with the .NET Framework 2.0, we recommend that you use the <see cref="T:System.Xml.XmlReaderSettings" /> class and the <see cref="Overload:System.Xml.XmlReader.Create" /> method to create a validating XML reader.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eed29-104">`XmlValidatingReader` 實作<xref:System.Xml.XmlReader>類別，並提供資料的驗證支援。</span><span class="sxs-lookup"><span data-stu-id="eed29-104">`XmlValidatingReader` implements the <xref:System.Xml.XmlReader> class and provides support for data validation.</span></span> <span data-ttu-id="eed29-105">使用<xref:System.Xml.XmlValidatingReader.Schemas%2A>屬性，讓讀取器使用會快取中的結構描述檔案來驗證<xref:System.Xml.Schema.XmlSchemaCollection>。</span><span class="sxs-lookup"><span data-stu-id="eed29-105">Use the <xref:System.Xml.XmlValidatingReader.Schemas%2A> property to have the reader validate by using schema files that are cached in an <xref:System.Xml.Schema.XmlSchemaCollection>.</span></span> <span data-ttu-id="eed29-106"><xref:System.Xml.XmlValidatingReader.ValidationType%2A>屬性會指定讀取器應該執行哪一種驗證。</span><span class="sxs-lookup"><span data-stu-id="eed29-106">The <xref:System.Xml.XmlValidatingReader.ValidationType%2A> property specifies what type of validation the reader should perform.</span></span> <span data-ttu-id="eed29-107">將屬性設定為 ValidationType.None 建立非驗證讀取器。</span><span class="sxs-lookup"><span data-stu-id="eed29-107">Setting the property to ValidationType.None creates a non-validating reader.</span></span>  
  
 <span data-ttu-id="eed29-108"><xref:System.Xml.XmlValidatingReader> 會擲回<xref:System.Xml.XmlException>xml 剖析錯誤。</span><span class="sxs-lookup"><span data-stu-id="eed29-108"><xref:System.Xml.XmlValidatingReader> throws an <xref:System.Xml.XmlException> on XML parse errors.</span></span> <span data-ttu-id="eed29-109">擲回例外狀況之後是無法預測的讀取器的狀態。</span><span class="sxs-lookup"><span data-stu-id="eed29-109">After an exception is thrown the state of the reader is not predictable.</span></span> <span data-ttu-id="eed29-110">例如，回報的節點型別可能不同於目前節點的實際節點型別。</span><span class="sxs-lookup"><span data-stu-id="eed29-110">For example, the reported node type may be different than the actual node type of the current node.</span></span> <span data-ttu-id="eed29-111">使用<xref:System.Xml.XmlValidatingReader.ReadState%2A>檢查讀取器是否處於錯誤狀態的屬性。</span><span class="sxs-lookup"><span data-stu-id="eed29-111">Use the <xref:System.Xml.XmlValidatingReader.ReadState%2A> property to check whether a reader is in error state.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eed29-112"><xref:System.Xml.XmlValidatingReader>類別中已過時[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="eed29-112">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="eed29-113">您可以建立驗證<xref:System.Xml.XmlReader>使用的執行個體<xref:System.Xml.XmlReaderSettings>類別和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="eed29-113">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="eed29-114">如需詳細資訊，請參閱 <xref:System.Xml.XmlReader> 參考頁面的＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="eed29-114">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="eed29-115">這個類別具有繼承要求。</span><span class="sxs-lookup"><span data-stu-id="eed29-115">This class has an inheritance demand.</span></span> <span data-ttu-id="eed29-116">完全信任，才能繼承自<see langword="XmlValidatingReader" />。</span><span class="sxs-lookup"><span data-stu-id="eed29-116">Full trust is required to inherit from <see langword="XmlValidatingReader" />.</span></span></para></block>
    <altmember cref="T:System.Xml.XmlReader" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eed29-117">初始化 <see langword="XmlValidatingReader" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="eed29-117">Initializes a new instance of the <see langword="XmlValidatingReader" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlValidatingReader (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.#ctor(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (reader As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlValidatingReader(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlValidatingReader : System.Xml.XmlReader -&gt; System.Xml.XmlValidatingReader" Usage="new System.Xml.XmlValidatingReader reader" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="eed29-118">在驗證時要自其讀取的 <see langword="XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="eed29-118">The <see langword="XmlReader" /> to read from while validating.</span></span> <span data-ttu-id="eed29-119">目前的實作只支援 <see cref="T:System.Xml.XmlTextReader" />。</span><span class="sxs-lookup"><span data-stu-id="eed29-119">The current implementation supports only <see cref="T:System.Xml.XmlTextReader" />.</span></span></param>
        <summary><span data-ttu-id="eed29-120">初始化驗證從指定的 <see cref="T:System.Xml.XmlReader" /> 傳回之內容的 <see langword="XmlValidatingReader" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="eed29-120">Initializes a new instance of the <see langword="XmlValidatingReader" /> class that validates the content returned from the given <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="eed29-121"><xref:System.Xml.XmlValidatingReader>類別中已過時[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="eed29-121">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="eed29-122">您可以建立驗證<xref:System.Xml.XmlReader>使用的執行個體<xref:System.Xml.XmlReaderSettings>類別和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="eed29-122">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="eed29-123">如需詳細資訊，請參閱 <xref:System.Xml.XmlReader> 參考頁面的＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="eed29-123">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="eed29-124">從傳回的所有節點指定`XmlReader`也會傳回從這個驗證讀取器，因此程序中不會遺失任何資訊。</span><span class="sxs-lookup"><span data-stu-id="eed29-124">All nodes returned from the given `XmlReader` are also returned from this validating reader, so there is no information loss in the process.</span></span> <span data-ttu-id="eed29-125">未從基礎讀取器傳回的新節點可能會加入此讀取器 （例如，預設屬性和實體參考的子系）。</span><span class="sxs-lookup"><span data-stu-id="eed29-125">New nodes not returned from the underlying reader may be added by this reader (for example, default attributes and the children of an entity reference).</span></span> <span data-ttu-id="eed29-126">設定任何屬性指定`XmlTextReader`也適用於此驗證讀取器。</span><span class="sxs-lookup"><span data-stu-id="eed29-126">Any properties set on the given `XmlTextReader` also apply to this validating reader.</span></span> <span data-ttu-id="eed29-127">例如，如果提供的讀取器有 Xmlwhitespace 組，此驗證讀取器也會忽略泛空白字元。</span><span class="sxs-lookup"><span data-stu-id="eed29-127">For example, if the supplied reader had WhitespaceHandling.None set, this validating reader also ignores white space.</span></span>  
  
 <span data-ttu-id="eed29-128">當外部文件類型定義 (Dtd) 或結構描述所需的驗證<xref:System.Xml.XmlValidatingReader.XmlResolver%2A>屬性會設定<xref:System.Xml.XmlResolver>来用來解析外部資源的物件。</span><span class="sxs-lookup"><span data-stu-id="eed29-128">When external document type definitions (DTDs) or schemas are needed for validation, the <xref:System.Xml.XmlValidatingReader.XmlResolver%2A> property sets the <xref:System.Xml.XmlResolver> object to use for resolving external resources.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eed29-129">下列範例會驗證兩個文件。</span><span class="sxs-lookup"><span data-stu-id="eed29-129">The following example validates two documents.</span></span>  
  
 [!code-cpp[XmlValidatingReader.Cctor#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlValidatingReader.Cctor/CPP/valid_xsd2.cpp#1)]
 [!code-csharp[XmlValidatingReader.Cctor#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlValidatingReader.Cctor/CS/valid_xsd2.cs#1)]
 [!code-vb[XmlValidatingReader.Cctor#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlValidatingReader.Cctor/VB/valid_xsd2.vb#1)]  
  
 <span data-ttu-id="eed29-130">此範例會使用下列的輸入的檔案：</span><span class="sxs-lookup"><span data-stu-id="eed29-130">The sample uses the following input files:</span></span>  
  
 `notValidXSD.xml`  
  
 [!code-xml[XmlValidatingReader.Cctor#2](~/samples/snippets/xml/VS_Snippets_Data/XmlValidatingReader.Cctor/XML/notvalidxsd.xml#2)]  
  
 `books.xsd`  
  
 [!code-xml[XmlValidatingReader.Cctor#3](~/samples/snippets/xml/VS_Snippets_Data/XmlValidatingReader.Cctor/XML/books.xsd#3)]  
  
 `inlineXSD.xml`  
  
 [!code-xml[XmlValidatingReader.Cctor#4](~/samples/snippets/xml/VS_Snippets_Data/XmlValidatingReader.Cctor/XML/inlinexsd.xml#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eed29-131">指定的讀取器不是<see langword="XmlTextReader" />。</span><span class="sxs-lookup"><span data-stu-id="eed29-131">The reader specified is not an <see langword="XmlTextReader" />.</span></span></exception>
        <altmember cref="T:System.Xml.XmlTextReader" />
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlValidatingReader (System.IO.Stream xmlFragment, System.Xml.XmlNodeType fragType, System.Xml.XmlParserContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream xmlFragment, valuetype System.Xml.XmlNodeType fragType, class System.Xml.XmlParserContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xmlFragment As Stream, fragType As XmlNodeType, context As XmlParserContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlValidatingReader(System::IO::Stream ^ xmlFragment, System::Xml::XmlNodeType fragType, System::Xml::XmlParserContext ^ context);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlValidatingReader : System.IO.Stream * System.Xml.XmlNodeType * System.Xml.XmlParserContext -&gt; System.Xml.XmlValidatingReader" Usage="new System.Xml.XmlValidatingReader (xmlFragment, fragType, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlFragment" Type="System.IO.Stream" />
        <Parameter Name="fragType" Type="System.Xml.XmlNodeType" />
        <Parameter Name="context" Type="System.Xml.XmlParserContext" />
      </Parameters>
      <Docs>
        <param name="xmlFragment"><span data-ttu-id="eed29-132">包含要剖析之 XML 片段的資料流。</span><span class="sxs-lookup"><span data-stu-id="eed29-132">The stream containing the XML fragment to parse.</span></span></param>
        <param name="fragType"><span data-ttu-id="eed29-133">XML 片段的 <see cref="T:System.Xml.XmlNodeType" />。</span><span class="sxs-lookup"><span data-stu-id="eed29-133">The <see cref="T:System.Xml.XmlNodeType" /> of the XML fragment.</span></span> <span data-ttu-id="eed29-134">這可以決定 XML 片段會包含哪些內容 (請參閱下表)。</span><span class="sxs-lookup"><span data-stu-id="eed29-134">This determines what the fragment can contain (see table below).</span></span></param>
        <param name="context"><span data-ttu-id="eed29-135">要剖析的 XML 片段位置所在的 <see cref="T:System.Xml.XmlParserContext" />。</span><span class="sxs-lookup"><span data-stu-id="eed29-135">The <see cref="T:System.Xml.XmlParserContext" /> in which the XML fragment is to be parsed.</span></span> <span data-ttu-id="eed29-136">它包括要使用的 <see cref="T:System.Xml.XmlNameTable" />、編碼方式、命名空間範圍、目前的 <see langword="xml:lang" /> 和 <see langword="xml:space" /> 範圍。</span><span class="sxs-lookup"><span data-stu-id="eed29-136">This includes the <see cref="T:System.Xml.XmlNameTable" /> to use, encoding, namespace scope, current <see langword="xml:lang" />, and <see langword="xml:space" /> scope.</span></span></param>
        <summary><span data-ttu-id="eed29-137">使用指定的值，初始化 <see langword="XmlValidatingReader" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="eed29-137">Initializes a new instance of the <see langword="XmlValidatingReader" /> class with the specified values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="eed29-138"><xref:System.Xml.XmlValidatingReader>類別中已過時[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="eed29-138">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="eed29-139">您可以建立驗證<xref:System.Xml.XmlReader>使用的執行個體<xref:System.Xml.XmlReaderSettings>類別和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="eed29-139">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="eed29-140">如需詳細資訊，請參閱 <xref:System.Xml.XmlReader> 參考頁面的＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="eed29-140">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="eed29-141">這個建構函式會將指定的字串剖析為 XML 片段。</span><span class="sxs-lookup"><span data-stu-id="eed29-141">This constructor parses the given string as a fragment of XML.</span></span> <span data-ttu-id="eed29-142">如果項目或屬性的 XML 片段，您可以略過語式正確的 XML 文件的根層級規則。</span><span class="sxs-lookup"><span data-stu-id="eed29-142">If the XML fragment is an element or attribute, you can bypass the root level rules for well-formed XML documents.</span></span>  
  
 <span data-ttu-id="eed29-143">下表列出有效的值，如`fragType`和如何讀取器會剖析每個不同的節點型別。</span><span class="sxs-lookup"><span data-stu-id="eed29-143">The following table lists valid values for `fragType` and how the reader parses each of the different node types.</span></span>  
  
|<span data-ttu-id="eed29-144">XmlNodeType</span><span class="sxs-lookup"><span data-stu-id="eed29-144">XmlNodeType</span></span>|<span data-ttu-id="eed29-145">片段可能包含</span><span class="sxs-lookup"><span data-stu-id="eed29-145">Fragment May Contain</span></span>|  
|-----------------|--------------------------|  
|<span data-ttu-id="eed29-146">項目</span><span class="sxs-lookup"><span data-stu-id="eed29-146">Element</span></span>|<span data-ttu-id="eed29-147">任何有效的項目內容 （例如，項目、 註解、 處理指示、 cdata、 文字和實體參考的任何組合）。</span><span class="sxs-lookup"><span data-stu-id="eed29-147">Any valid element content (for example, any combination of elements, comments, processing instructions, cdata, text, and entity references).</span></span>|  
|<span data-ttu-id="eed29-148">屬性</span><span class="sxs-lookup"><span data-stu-id="eed29-148">Attribute</span></span>|<span data-ttu-id="eed29-149">屬性 （在引號內的部分） 的值。</span><span class="sxs-lookup"><span data-stu-id="eed29-149">The value of an attribute (the part inside the quotes).</span></span>|  
|<span data-ttu-id="eed29-150">文件</span><span class="sxs-lookup"><span data-stu-id="eed29-150">Document</span></span>|<span data-ttu-id="eed29-151">內容的整個 XML 文件;這會強制執行文件層級的規則。</span><span class="sxs-lookup"><span data-stu-id="eed29-151">The contents of an entire XML document; this enforces document level rules.</span></span>|  
  
 <span data-ttu-id="eed29-152">讀取器會使用下列步驟，以判斷資料流的編碼方式：</span><span class="sxs-lookup"><span data-stu-id="eed29-152">The reader uses the following steps to determine the encoding of the stream:</span></span>  
  
1.  <span data-ttu-id="eed29-153">檢查<xref:System.Xml.XmlParserContext.Encoding%2A?displayProperty=nameWithType>屬性來判斷的編碼方式。</span><span class="sxs-lookup"><span data-stu-id="eed29-153">Checks the <xref:System.Xml.XmlParserContext.Encoding%2A?displayProperty=nameWithType> property to determine the encoding.</span></span>  
  
2.  <span data-ttu-id="eed29-154">如果`Encoding`屬性是`null`，讀取器已檢查的資料流開頭的位元組順序標記。</span><span class="sxs-lookup"><span data-stu-id="eed29-154">If the `Encoding` property is `null`, the reader checks for a byte-order mark at the beginning of the stream.</span></span>  
  
3.  <span data-ttu-id="eed29-155">如果`Encoding`屬性是`null`，並在找到無位元組順序標示，讀取器會假設資料流以 utf-8 編碼。</span><span class="sxs-lookup"><span data-stu-id="eed29-155">If the `Encoding` property is `null`, and no byte-order mark is found, the reader assumes the stream is encoded in UTF-8.</span></span>  
  
 <span data-ttu-id="eed29-156">如果這個讀取器會使用文件類型定義 (DTD) 驗證 (亦即<xref:System.Xml.XmlValidatingReader.ValidationType%2A>設為 ValidationType.DTD 或 ValidationType.Auto)，則`XmlParserContext`中指定建構函式必須提供所有必要的 DocumentType 資訊。</span><span class="sxs-lookup"><span data-stu-id="eed29-156">If this reader will be validating using document type definition (DTD) (that is, <xref:System.Xml.XmlValidatingReader.ValidationType%2A> is set to ValidationType.DTD or ValidationType.Auto), the `XmlParserContext` specified in the constructor must supply all the necessary DocumentType information.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eed29-157">您不可能使用 DTD 驗證片段。</span><span class="sxs-lookup"><span data-stu-id="eed29-157">It is not possible to validate a fragment by using a DTD.</span></span> <span data-ttu-id="eed29-158">根據定義的 DTD 會需要驗證載入整份文件。</span><span class="sxs-lookup"><span data-stu-id="eed29-158">By definition a DTD requires an entire document to be loaded for validation.</span></span>  
  
 <span data-ttu-id="eed29-159">如果這個讀取器會驗證使用 XML 資料精簡 (XDR) 或 XML 結構描述定義語言 (XSD) 結構描述中，使用<xref:System.Xml.XmlValidatingReader.Schemas%2A>屬性來指定<xref:System.Xml.Schema.XmlSchemaCollection>所包含的結構描述 (也就是`XmlParserContext`不需要提供DocumentType 資訊）。</span><span class="sxs-lookup"><span data-stu-id="eed29-159">If this reader will be validating by using XML-Data Reduced (XDR) or XML Schema definition language (XSD) schemas, use the <xref:System.Xml.XmlValidatingReader.Schemas%2A> property to specify the <xref:System.Xml.Schema.XmlSchemaCollection> that contains the schemas (that is, the `XmlParserContext` does not need to supply the DocumentType information).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="eed29-160"><paramref name="fragType" /> 不是其中一個下表所列的節點類型。</span><span class="sxs-lookup"><span data-stu-id="eed29-160"><paramref name="fragType" /> is not one of the node types listed in the table below.</span></span></exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlValidatingReader (string xmlFragment, System.Xml.XmlNodeType fragType, System.Xml.XmlParserContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string xmlFragment, valuetype System.Xml.XmlNodeType fragType, class System.Xml.XmlParserContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xmlFragment As String, fragType As XmlNodeType, context As XmlParserContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlValidatingReader(System::String ^ xmlFragment, System::Xml::XmlNodeType fragType, System::Xml::XmlParserContext ^ context);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlValidatingReader : string * System.Xml.XmlNodeType * System.Xml.XmlParserContext -&gt; System.Xml.XmlValidatingReader" Usage="new System.Xml.XmlValidatingReader (xmlFragment, fragType, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlFragment" Type="System.String" />
        <Parameter Name="fragType" Type="System.Xml.XmlNodeType" />
        <Parameter Name="context" Type="System.Xml.XmlParserContext" />
      </Parameters>
      <Docs>
        <param name="xmlFragment"><span data-ttu-id="eed29-161">包含要剖析之 XML 片段的字串。</span><span class="sxs-lookup"><span data-stu-id="eed29-161">The string containing the XML fragment to parse.</span></span></param>
        <param name="fragType"><span data-ttu-id="eed29-162">XML 片段的 <see cref="T:System.Xml.XmlNodeType" />。</span><span class="sxs-lookup"><span data-stu-id="eed29-162">The <see cref="T:System.Xml.XmlNodeType" /> of the XML fragment.</span></span> <span data-ttu-id="eed29-163">這也可以決定 XML 片段字串將會包含哪些內容 (請參閱下表)。</span><span class="sxs-lookup"><span data-stu-id="eed29-163">This also determines what the fragment string can contain (see table below).</span></span></param>
        <param name="context"><span data-ttu-id="eed29-164">要剖析的 XML 片段位置所在的 <see cref="T:System.Xml.XmlParserContext" />。</span><span class="sxs-lookup"><span data-stu-id="eed29-164">The <see cref="T:System.Xml.XmlParserContext" /> in which the XML fragment is to be parsed.</span></span> <span data-ttu-id="eed29-165">它包括要使用的 <see cref="T:System.Xml.NameTable" />、編碼方式、命名空間範圍、目前的 xml:lang 和 xml:space 範圍。</span><span class="sxs-lookup"><span data-stu-id="eed29-165">This includes the <see cref="T:System.Xml.NameTable" /> to use, encoding, namespace scope, current xml:lang, and xml:space scope.</span></span></param>
        <summary><span data-ttu-id="eed29-166">使用指定的值，初始化 <see langword="XmlValidatingReader" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="eed29-166">Initializes a new instance of the <see langword="XmlValidatingReader" /> class with the specified values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="eed29-167"><xref:System.Xml.XmlValidatingReader>類別中已過時[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="eed29-167">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="eed29-168">您可以建立驗證<xref:System.Xml.XmlReader>使用的執行個體<xref:System.Xml.XmlReaderSettings>類別和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="eed29-168">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="eed29-169">如需詳細資訊，請參閱 <xref:System.Xml.XmlReader> 參考頁面的＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="eed29-169">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="eed29-170">這個建構函式會將指定的字串剖析為 XML 片段。</span><span class="sxs-lookup"><span data-stu-id="eed29-170">This constructor parses the given string as a fragment of XML.</span></span> <span data-ttu-id="eed29-171">如果項目或屬性的 XML 片段，您可以略過語式正確的 XML 文件的根層級規則。</span><span class="sxs-lookup"><span data-stu-id="eed29-171">If the XML fragment is an element or attribute, you can bypass the root level rules for well-formed XML documents.</span></span> <span data-ttu-id="eed29-172">這個建構函式可以處理從傳回的字串<xref:System.Xml.XmlReader.ReadInnerXml%2A>。</span><span class="sxs-lookup"><span data-stu-id="eed29-172">This constructor can handle strings returned from <xref:System.Xml.XmlReader.ReadInnerXml%2A>.</span></span>  
  
 <span data-ttu-id="eed29-173">下表列出有效的值，如`fragType`和如何讀取器會剖析每個不同的節點型別。</span><span class="sxs-lookup"><span data-stu-id="eed29-173">The following table lists valid values for `fragType` and how the reader parses each of the different node types.</span></span>  
  
|<span data-ttu-id="eed29-174">XmlNodeType</span><span class="sxs-lookup"><span data-stu-id="eed29-174">XmlNodeType</span></span>|<span data-ttu-id="eed29-175">片段可能包含</span><span class="sxs-lookup"><span data-stu-id="eed29-175">Fragment May Contain</span></span>|  
|-----------------|--------------------------|  
|<span data-ttu-id="eed29-176">項目</span><span class="sxs-lookup"><span data-stu-id="eed29-176">Element</span></span>|<span data-ttu-id="eed29-177">任何有效的項目內容 （例如，項目、 註解、 處理指示、 cdata、 文字和實體參考的任何組合）。</span><span class="sxs-lookup"><span data-stu-id="eed29-177">Any valid element content (for example, any combination of elements, comments, processing instructions, cdata, text, and entity references).</span></span>|  
|<span data-ttu-id="eed29-178">屬性</span><span class="sxs-lookup"><span data-stu-id="eed29-178">Attribute</span></span>|<span data-ttu-id="eed29-179">屬性 （在引號內的部分） 的值。</span><span class="sxs-lookup"><span data-stu-id="eed29-179">The value of an attribute (the part inside the quotes).</span></span>|  
|<span data-ttu-id="eed29-180">文件</span><span class="sxs-lookup"><span data-stu-id="eed29-180">Document</span></span>|<span data-ttu-id="eed29-181">內容的整個 XML 文件;這會強制執行文件層級的規則。</span><span class="sxs-lookup"><span data-stu-id="eed29-181">The contents of an entire XML document; this enforces document level rules.</span></span>|  
  
 <span data-ttu-id="eed29-182">如果這個讀取器會驗證使用文件類型定義 (DTD) (亦即<xref:System.Xml.XmlValidatingReader.ValidationType%2A>設為 ValidationType.DTD 或 ValidationType.Auto)，則`XmlParserContext`中指定建構函式必須提供所有必要的 DocumentType 資訊。</span><span class="sxs-lookup"><span data-stu-id="eed29-182">If this reader will be validating by using document type definition (DTD) (that is, <xref:System.Xml.XmlValidatingReader.ValidationType%2A> is set to ValidationType.DTD or ValidationType.Auto), the `XmlParserContext` specified in the constructor must supply all the necessary DocumentType information.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eed29-183">您不可能使用 DTD 驗證片段。</span><span class="sxs-lookup"><span data-stu-id="eed29-183">It is not possible to validate a fragment by using DTD.</span></span> <span data-ttu-id="eed29-184">根據定義 DTD 會要求驗證載入整份文件。</span><span class="sxs-lookup"><span data-stu-id="eed29-184">By definition DTD requires an entire document to be loaded for validation.</span></span>  
  
 <span data-ttu-id="eed29-185">如果這個讀取器會驗證使用 XML 資料精簡 (XDR) 或 XML 結構描述定義語言 (XSD) 結構描述中，使用<xref:System.Xml.XmlValidatingReader.Schemas%2A>屬性來指定<xref:System.Xml.Schema.XmlSchemaCollection>所包含的結構描述 (`XmlParserContext`不需要提供 DocumentType資訊）。</span><span class="sxs-lookup"><span data-stu-id="eed29-185">If this reader will be validating by using XML-Data Reduced (XDR) or XML Schema definition language (XSD) schemas, use the <xref:System.Xml.XmlValidatingReader.Schemas%2A> property to specify the <xref:System.Xml.Schema.XmlSchemaCollection> that contains the schemas (the `XmlParserContext` does not need to supply the DocumentType information).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eed29-186">下列範例會讀取 XML 片段。</span><span class="sxs-lookup"><span data-stu-id="eed29-186">The following example reads an XML fragment.</span></span> <span data-ttu-id="eed29-187">它會使用`XmlParserContext`及其<xref:System.Xml.XmlNamespaceManager>處理命名空間相符。</span><span class="sxs-lookup"><span data-stu-id="eed29-187">It uses an `XmlParserContext` and its <xref:System.Xml.XmlNamespaceManager> to handle namespace matching.</span></span>  
  
 [!code-csharp[Classic WebData XmlParserContext.XmlParserContext Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlParserContext.XmlParserContext Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlParserContext.XmlParserContext Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlParserContext.XmlParserContext Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="eed29-188"><paramref name="fragType" /> 不是其中一個下表所列的節點類型。</span><span class="sxs-lookup"><span data-stu-id="eed29-188"><paramref name="fragType" /> is not one of the node types listed in the table below.</span></span></exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="AttributeCount">
      <MemberSignature Language="C#" Value="public override int AttributeCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AttributeCount" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.AttributeCount" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AttributeCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int AttributeCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.AttributeCount : int" Usage="System.Xml.XmlValidatingReader.AttributeCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eed29-189">取得目前節點的屬性數目。</span><span class="sxs-lookup"><span data-stu-id="eed29-189">Gets the number of attributes on the current node.</span></span></summary>
        <value><span data-ttu-id="eed29-190">目前節點的屬性數目。</span><span class="sxs-lookup"><span data-stu-id="eed29-190">The number of attributes on the current node.</span></span> <span data-ttu-id="eed29-191">這個數目包括預設屬性。</span><span class="sxs-lookup"><span data-stu-id="eed29-191">This number includes default attributes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="eed29-192"><xref:System.Xml.XmlValidatingReader>類別中已過時[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="eed29-192">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="eed29-193">您可以建立驗證<xref:System.Xml.XmlReader>使用的執行個體<xref:System.Xml.XmlReaderSettings>類別和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="eed29-193">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="eed29-194">如需詳細資訊，請參閱 <xref:System.Xml.XmlReader> 參考頁面的＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="eed29-194">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="eed29-195">這個屬性無關`Element`， `DocumentType`，和`XmlDeclaration`僅限節點。</span><span class="sxs-lookup"><span data-stu-id="eed29-195">This property is relevant to `Element`, `DocumentType`, and `XmlDeclaration` nodes only.</span></span> <span data-ttu-id="eed29-196">（其他節點型別並沒有屬性。）</span><span class="sxs-lookup"><span data-stu-id="eed29-196">(Other node types do not have attributes.)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eed29-197">下列範例會讀取在根節點上的所有項目。</span><span class="sxs-lookup"><span data-stu-id="eed29-197">The following example reads all the elements on the root node.</span></span>  
  
 [!code-cpp[Classic WebData XmlValidatingReader.AttributeCount Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.AttributeCount Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.AttributeCount Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.AttributeCount Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.AttributeCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.AttributeCount Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="BaseURI">
      <MemberSignature Language="C#" Value="public override string BaseURI { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseURI" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.BaseURI" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property BaseURI As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ BaseURI { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseURI : string" Usage="System.Xml.XmlValidatingReader.BaseURI" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eed29-198">取得目前節點的基底 (Base) URI。</span><span class="sxs-lookup"><span data-stu-id="eed29-198">Gets the base URI of the current node.</span></span></summary>
        <value><span data-ttu-id="eed29-199">目前節點的基底 URI。</span><span class="sxs-lookup"><span data-stu-id="eed29-199">The base URI of the current node.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="eed29-200"><xref:System.Xml.XmlValidatingReader>類別中已過時[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="eed29-200">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="eed29-201">您可以建立驗證<xref:System.Xml.XmlReader>使用的執行個體<xref:System.Xml.XmlReaderSettings>類別和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="eed29-201">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="eed29-202">如需詳細資訊，請參閱 <xref:System.Xml.XmlReader> 參考頁面的＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="eed29-202">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="eed29-203">網路上的 XML 文件透過使用各種不同的 World Wide Web Consortium (W3C) 標準包含機制進行彙總的資料區塊所組成，並因此會包含來自不同位置的節點。</span><span class="sxs-lookup"><span data-stu-id="eed29-203">A networked XML document is comprised of chunks of data aggregated by using various World Wide Web Consortium (W3C) standard inclusion mechanisms and therefore contains nodes that come from different places.</span></span> <span data-ttu-id="eed29-204">文件類型定義 (DTD) 的實體範例，但這並不限於使用 Dtd。</span><span class="sxs-lookup"><span data-stu-id="eed29-204">document type definition (DTD) entities are an example of this, but this is not limited to DTDs.</span></span> <span data-ttu-id="eed29-205">基底 URI 會告訴您這些節點的來源。</span><span class="sxs-lookup"><span data-stu-id="eed29-205">The base URI tells you where these nodes came from.</span></span> <span data-ttu-id="eed29-206">是否要傳回的節點沒有基底 URI （例如，它們已從字串中剖析記憶體中），會傳回 String.Empty。</span><span class="sxs-lookup"><span data-stu-id="eed29-206">If there is no base URI for the nodes being returned (for example, they were parsed from an in-memory string), String.Empty is returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eed29-207">下列範例會剖析檔案，並顯示每個節點的基底 URI。</span><span class="sxs-lookup"><span data-stu-id="eed29-207">The following example parses a file and displays the base URI of each node.</span></span>  
  
 [!code-cpp[Classic WebData XmlValidatingReader.BaseURI Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.BaseURI Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.BaseURI Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.BaseURI Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.BaseURI Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.BaseURI Example/VB/source.vb#1)]  
  
 <span data-ttu-id="eed29-208">此範例會使用該檔案，`uri.xml`作為輸入。</span><span class="sxs-lookup"><span data-stu-id="eed29-208">The example uses the file, `uri.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlValidatingReader.BaseURI Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.BaseURI Example/XML/source.xml#2)]  
  
 <span data-ttu-id="eed29-209">`style.xml`檔案包含的 XML 文字`<style>hardcover</style>`。</span><span class="sxs-lookup"><span data-stu-id="eed29-209">The `style.xml` file contains the XML text `<style>hardcover</style>`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="CanReadBinaryContent">
      <MemberSignature Language="C#" Value="public override bool CanReadBinaryContent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanReadBinaryContent" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.CanReadBinaryContent" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanReadBinaryContent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanReadBinaryContent { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanReadBinaryContent : bool" Usage="System.Xml.XmlValidatingReader.CanReadBinaryContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eed29-210">取得值，這個值表示 <see cref="T:System.Xml.XmlValidatingReader" /> 是否會實作二進位內容讀取方法。</span><span class="sxs-lookup"><span data-stu-id="eed29-210">Gets a value indicating whether the <see cref="T:System.Xml.XmlValidatingReader" /> implements the binary content read methods.</span></span></summary>
        <value><span data-ttu-id="eed29-211">如果實作二進位內容讀取方法，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="eed29-211"><see langword="true" /> if the binary content read methods are implemented; otherwise <see langword="false" />.</span></span> <span data-ttu-id="eed29-212"><see cref="T:System.Xml.XmlValidatingReader" /> 類別會傳回 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="eed29-212">The <see cref="T:System.Xml.XmlValidatingReader" /> class returns <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="eed29-213"><xref:System.Xml.XmlValidatingReader>類別中已過時[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="eed29-213">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="eed29-214">您可以建立驗證<xref:System.Xml.XmlReader>使用的執行個體<xref:System.Xml.XmlReaderSettings>類別和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="eed29-214">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="eed29-215">如需詳細資訊，請參閱 <xref:System.Xml.XmlReader> 參考頁面的＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="eed29-215">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span> 
  
 <span data-ttu-id="eed29-216">二進位內容讀取方法包括<xref:System.Xml.XmlValidatingReader.ReadContentAsBase64%2A>， <xref:System.Xml.XmlValidatingReader.ReadContentAsBinHex%2A>， <xref:System.Xml.XmlValidatingReader.ReadElementContentAsBase64%2A>，和<xref:System.Xml.XmlValidatingReader.ReadElementContentAsBinHex%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="eed29-216">The binary content read methods include the <xref:System.Xml.XmlValidatingReader.ReadContentAsBase64%2A>, <xref:System.Xml.XmlValidatingReader.ReadContentAsBinHex%2A>, <xref:System.Xml.XmlValidatingReader.ReadElementContentAsBase64%2A>, and <xref:System.Xml.XmlValidatingReader.ReadElementContentAsBinHex%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="CanResolveEntity">
      <MemberSignature Language="C#" Value="public override bool CanResolveEntity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanResolveEntity" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.CanResolveEntity" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanResolveEntity As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanResolveEntity { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanResolveEntity : bool" Usage="System.Xml.XmlValidatingReader.CanResolveEntity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eed29-217">取得值，指出這個讀取器是否可以剖析和解析實體。</span><span class="sxs-lookup"><span data-stu-id="eed29-217">Gets a value indicating whether this reader can parse and resolve entities.</span></span></summary>
        <value><span data-ttu-id="eed29-218">如果讀取器可以剖析和解析實體，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="eed29-218"><see langword="true" /> if the reader can parse and resolve entities; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="eed29-219"><see langword="XmlValidatingReader" /> 永遠傳回 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="eed29-219"><see langword="XmlValidatingReader" /> always returns <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="eed29-220"><xref:System.Xml.XmlValidatingReader>類別中已過時[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="eed29-220">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="eed29-221">您可以建立驗證<xref:System.Xml.XmlReader>使用的執行個體<xref:System.Xml.XmlReaderSettings>類別和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="eed29-221">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="eed29-222">如需詳細資訊，請參閱 <xref:System.Xml.XmlReader> 參考頁面的＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="eed29-222">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="xmlValidatingReader.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="eed29-223">將 <see cref="P:System.Xml.XmlReader.ReadState" /> 變更為 Closed。</span><span class="sxs-lookup"><span data-stu-id="eed29-223">Changes the <see cref="P:System.Xml.XmlReader.ReadState" /> to Closed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="eed29-224"><xref:System.Xml.XmlValidatingReader>類別中已過時[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="eed29-224">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="eed29-225">您可以建立驗證<xref:System.Xml.XmlReader>使用的執行個體<xref:System.Xml.XmlReaderSettings>類別和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="eed29-225">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="eed29-226">如需詳細資訊，請參閱 <xref:System.Xml.XmlReader> 參考頁面的＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="eed29-226">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="eed29-227">這個方法也會釋放讀取時所保留的任何資源。</span><span class="sxs-lookup"><span data-stu-id="eed29-227">This method also releases any resources held while reading.</span></span> <span data-ttu-id="eed29-228">如果這個讀取器使用建構<xref:System.Xml.XmlTextReader>，這個方法也會呼叫`Close`基礎讀取器上。</span><span class="sxs-lookup"><span data-stu-id="eed29-228">If this reader was constructed by using an <xref:System.Xml.XmlTextReader>, this method also calls `Close` on the underlying reader.</span></span> <span data-ttu-id="eed29-229">如果這個讀取器使用資料流建構，這個方法也會呼叫`Close`在基礎資料流。</span><span class="sxs-lookup"><span data-stu-id="eed29-229">If this reader was constructed by using a stream, this method also calls `Close` on the underlying stream.</span></span>  
  
 <span data-ttu-id="eed29-230">如果`Close`已經被呼叫，會執行任何動作。</span><span class="sxs-lookup"><span data-stu-id="eed29-230">If `Close` has already been called, no action is performed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Depth">
      <MemberSignature Language="C#" Value="public override int Depth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Depth" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.Depth" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Depth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Depth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Depth : int" Usage="System.Xml.XmlValidatingReader.Depth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eed29-231">取得 XML 文件中目前節點的深度。</span><span class="sxs-lookup"><span data-stu-id="eed29-231">Gets the depth of the current node in the XML document.</span></span></summary>
        <value><span data-ttu-id="eed29-232">XML 文件中目前節點的深度。</span><span class="sxs-lookup"><span data-stu-id="eed29-232">The depth of the current node in the XML document.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="eed29-233"><xref:System.Xml.XmlValidatingReader>類別中已過時[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="eed29-233">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="eed29-234">您可以建立驗證<xref:System.Xml.XmlReader>使用的執行個體<xref:System.Xml.XmlReaderSettings>類別和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="eed29-234">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="eed29-235">如需詳細資訊，請參閱 <xref:System.Xml.XmlReader> 參考頁面的＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="eed29-235">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eed29-236">下列範例會顯示每個節點，包括其深度、 行號和行位置。</span><span class="sxs-lookup"><span data-stu-id="eed29-236">The following example displays each node including its depth, line number, and line position.</span></span>  
  
 [!code-cpp[IXmlLineInfo#1](~/samples/snippets/cpp/VS_Snippets_Data/IXmlLineInfo/CPP/lineinfo.cpp#1)]
 [!code-csharp[IXmlLineInfo#1](~/samples/snippets/csharp/VS_Snippets_Data/IXmlLineInfo/CS/lineinfo.cs#1)]
 [!code-vb[IXmlLineInfo#1](~/samples/snippets/visualbasic/VS_Snippets_Data/IXmlLineInfo/VB/lineinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.IXmlLineInfo" />
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding Encoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Encoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ Encoding { System::Text::Encoding ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Encoding : System.Text.Encoding" Usage="System.Xml.XmlValidatingReader.Encoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eed29-237">取得文件的編碼屬性。</span><span class="sxs-lookup"><span data-stu-id="eed29-237">Gets the encoding attribute for the document.</span></span></summary>
        <value><span data-ttu-id="eed29-238">編碼值。</span><span class="sxs-lookup"><span data-stu-id="eed29-238">The encoding value.</span></span> <span data-ttu-id="eed29-239">如果編碼屬性不存在，而且沒有位元組順序標記，則會預設為 UTF-8。</span><span class="sxs-lookup"><span data-stu-id="eed29-239">If no encoding attribute exists, and there is not byte-order mark, this defaults to UTF-8.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="eed29-240"><xref:System.Xml.XmlValidatingReader>類別中已過時[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="eed29-240">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="eed29-241">您可以建立驗證<xref:System.Xml.XmlReader>使用的執行個體<xref:System.Xml.XmlReaderSettings>類別和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="eed29-241">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="eed29-242">如需詳細資訊，請參閱 <xref:System.Xml.XmlReader> 參考頁面的＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="eed29-242">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="eed29-243">讀取任何外部參照 （例如擴充的文件類型定義 (DTD) 檔案中的實體，或讀取結構描述檔案） 時編碼屬性設為外部參考的編碼值。</span><span class="sxs-lookup"><span data-stu-id="eed29-243">When any external reference is read (such as expanding an entity in a document type definition (DTD) file or reading a schema file) the encoding property is set to the encoding value of the external reference.</span></span> <span data-ttu-id="eed29-244">如果在外部參考中，未指定編碼方式，而且沒有位元組順序標記，則會預設值為 utf-8。</span><span class="sxs-lookup"><span data-stu-id="eed29-244">If encoding is not specified in the external reference, and there is no byte-order mark, this defaults to UTF-8.</span></span>  
  
 <span data-ttu-id="eed29-245">支援所有基礎作業系統支援的編碼標準。</span><span class="sxs-lookup"><span data-stu-id="eed29-245">All the encoding standards that the underlying operating system supports are supported.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="EntityHandling">
      <MemberSignature Language="C#" Value="public System.Xml.EntityHandling EntityHandling { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.EntityHandling EntityHandling" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.EntityHandling" />
      <MemberSignature Language="VB.NET" Value="Public Property EntityHandling As EntityHandling" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::EntityHandling EntityHandling { System::Xml::EntityHandling get(); void set(System::Xml::EntityHandling value); };" />
      <MemberSignature Language="F#" Value="member this.EntityHandling : System.Xml.EntityHandling with get, set" Usage="System.Xml.XmlValidatingReader.EntityHandling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.EntityHandling</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eed29-246">取得或設定值，表示讀取器如何處理實體。</span><span class="sxs-lookup"><span data-stu-id="eed29-246">Gets or sets a value that specifies how the reader handles entities.</span></span></summary>
        <value><span data-ttu-id="eed29-247">其中一個 <see cref="T:System.Xml.EntityHandling" /> 值。</span><span class="sxs-lookup"><span data-stu-id="eed29-247">One of the <see cref="T:System.Xml.EntityHandling" /> values.</span></span> <span data-ttu-id="eed29-248">若未指定 <see langword="EntityHandling" />，則會預設為 EntityHandling.ExpandEntities。</span><span class="sxs-lookup"><span data-stu-id="eed29-248">If no <see langword="EntityHandling" /> is specified, it defaults to EntityHandling.ExpandEntities.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="eed29-249"><xref:System.Xml.XmlValidatingReader>類別中已過時[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="eed29-249">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="eed29-250">您可以建立驗證<xref:System.Xml.XmlReader>使用的執行個體<xref:System.Xml.XmlReaderSettings>類別和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="eed29-250">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="eed29-251">如需詳細資訊，請參閱 <xref:System.Xml.XmlReader> 參考頁面的＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="eed29-251">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="eed29-252">這個屬性可以變更，而且下一步 之後才會生效<xref:System.Xml.XmlValidatingReader.Read%2A>呼叫。</span><span class="sxs-lookup"><span data-stu-id="eed29-252">This property can be changed and takes effect after the next <xref:System.Xml.XmlValidatingReader.Read%2A> call.</span></span>  
  
 <span data-ttu-id="eed29-253">當`EntityHandling`設為`ExpandCharEntities`，屬性值僅部分會正規化。</span><span class="sxs-lookup"><span data-stu-id="eed29-253">When `EntityHandling` is set to `ExpandCharEntities`, attribute values are only partially normalized.</span></span> <span data-ttu-id="eed29-254">讀取器會正規化每個個別文字節點，獨立於相鄰的實體參考節點的內容。</span><span class="sxs-lookup"><span data-stu-id="eed29-254">The reader normalizes each individual text node independently from the content of adjacent entity reference nodes.</span></span>  
  
 <span data-ttu-id="eed29-255">為了說明實體之間的差異處理模式，請考量下列 XML:</span><span class="sxs-lookup"><span data-stu-id="eed29-255">To illustrate the difference between the entity handling modes consider the following XML:</span></span>  
  
```xml  
<!DOCTYPE doc [<!ENTITY num "123">]>  
 <doc> &#65; &num; </doc>  
```  
  
 <span data-ttu-id="eed29-256">當`EntityHandling`設為`ExpandEntities`"doc"項目節點包含一個文字節點具有展開的實體文字：</span><span class="sxs-lookup"><span data-stu-id="eed29-256">When `EntityHandling` is set to `ExpandEntities` the "doc" element node contains one text node with the expanded entity text:</span></span>  
  
|<span data-ttu-id="eed29-257">深度</span><span class="sxs-lookup"><span data-stu-id="eed29-257">Depth</span></span>|<span data-ttu-id="eed29-258">NodeType</span><span class="sxs-lookup"><span data-stu-id="eed29-258">NodeType</span></span>|<span data-ttu-id="eed29-259">名稱</span><span class="sxs-lookup"><span data-stu-id="eed29-259">Name</span></span>|<span data-ttu-id="eed29-260">值</span><span class="sxs-lookup"><span data-stu-id="eed29-260">Value</span></span>|  
|-----------|--------------|----------|-----------|  
|<span data-ttu-id="eed29-261">1</span><span class="sxs-lookup"><span data-stu-id="eed29-261">1</span></span>|<span data-ttu-id="eed29-262">文字</span><span class="sxs-lookup"><span data-stu-id="eed29-262">Text</span></span>||<span data-ttu-id="eed29-263">A 123</span><span class="sxs-lookup"><span data-stu-id="eed29-263">A 123</span></span>|  
  
 <span data-ttu-id="eed29-264">當`EntityHandling`設定為`ExpandCharEntities`，和<xref:System.Xml.XmlTextReader.WhitespaceHandling%2A>設為有效或所有項目，「 文件 」 項目展開字元實體，並傳回一般實體做為節點：</span><span class="sxs-lookup"><span data-stu-id="eed29-264">When `EntityHandling` is set to `ExpandCharEntities`, and <xref:System.Xml.XmlTextReader.WhitespaceHandling%2A> is set to Significant or All, the "doc" element expands the character entity and returns the general entity as a node:</span></span>  
  
|<span data-ttu-id="eed29-265">深度</span><span class="sxs-lookup"><span data-stu-id="eed29-265">Depth</span></span>|<span data-ttu-id="eed29-266">NodeType</span><span class="sxs-lookup"><span data-stu-id="eed29-266">NodeType</span></span>|<span data-ttu-id="eed29-267">名稱</span><span class="sxs-lookup"><span data-stu-id="eed29-267">Name</span></span>|<span data-ttu-id="eed29-268">值</span><span class="sxs-lookup"><span data-stu-id="eed29-268">Value</span></span>|  
|-----------|--------------|----------|-----------|  
|<span data-ttu-id="eed29-269">1</span><span class="sxs-lookup"><span data-stu-id="eed29-269">1</span></span>|<span data-ttu-id="eed29-270">文字</span><span class="sxs-lookup"><span data-stu-id="eed29-270">Text</span></span>||<span data-ttu-id="eed29-271">A</span><span class="sxs-lookup"><span data-stu-id="eed29-271">A</span></span>|  
|<span data-ttu-id="eed29-272">1</span><span class="sxs-lookup"><span data-stu-id="eed29-272">1</span></span>|<span data-ttu-id="eed29-273">EntityReference</span><span class="sxs-lookup"><span data-stu-id="eed29-273">EntityReference</span></span>|<span data-ttu-id="eed29-274">num</span><span class="sxs-lookup"><span data-stu-id="eed29-274">num</span></span>||  
|<span data-ttu-id="eed29-275">1</span><span class="sxs-lookup"><span data-stu-id="eed29-275">1</span></span>|<span data-ttu-id="eed29-276">SignificantWhitespace</span><span class="sxs-lookup"><span data-stu-id="eed29-276">SignificantWhitespace</span></span>|||  
  
   
  
## Examples  
 <span data-ttu-id="eed29-277">下列範例會使用`ResolveEntity`展開一般實體的方法。</span><span class="sxs-lookup"><span data-stu-id="eed29-277">The following example uses the `ResolveEntity` method to expand a general entity.</span></span>  
  
 [!code-cpp[Classic WebData XmlValidatingReader.ResolveEntity Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.ResolveEntity Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.ResolveEntity Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.ResolveEntity Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.ResolveEntity Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.ResolveEntity Example/VB/source.vb#1)]  
  
 <span data-ttu-id="eed29-278">此範例會使用該檔案，`book1.xml`作為輸入。</span><span class="sxs-lookup"><span data-stu-id="eed29-278">The example uses the file, `book1.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlValidatingReader.ResolveEntity Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.ResolveEntity Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="eed29-279">指定無效的值。</span><span class="sxs-lookup"><span data-stu-id="eed29-279">Invalid value was specified.</span></span></exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="EOF">
      <MemberSignature Language="C#" Value="public override bool EOF { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EOF" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.EOF" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property EOF As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EOF { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.EOF : bool" Usage="System.Xml.XmlValidatingReader.EOF" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eed29-280">取得值，表示讀取器是否位於資料流結尾。</span><span class="sxs-lookup"><span data-stu-id="eed29-280">Gets a value indicating whether the reader is positioned at the end of the stream.</span></span></summary>
        <value><span data-ttu-id="eed29-281">如果讀取器定位於資料流結尾，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="eed29-281"><see langword="true" /> if the reader is positioned at the end of the stream; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="eed29-282"><xref:System.Xml.XmlValidatingReader>類別中已過時[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="eed29-282">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="eed29-283">您可以建立驗證<xref:System.Xml.XmlReader>使用的執行個體<xref:System.Xml.XmlReaderSettings>類別和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="eed29-283">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="eed29-284">如需詳細資訊，請參閱 <xref:System.Xml.XmlReader> 參考頁面的＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="eed29-284">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eed29-285">取得屬性值。</span><span class="sxs-lookup"><span data-stu-id="eed29-285">Gets the value of an attribute.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAttribute">
      <MemberSignature Language="C#" Value="public override string GetAttribute (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetAttribute(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.GetAttribute(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAttribute (i As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetAttribute(int i);" />
      <MemberSignature Language="F#" Value="override this.GetAttribute : int -&gt; string" Usage="xmlValidatingReader.GetAttribute i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="eed29-286">屬性的索引。</span><span class="sxs-lookup"><span data-stu-id="eed29-286">The index of the attribute.</span></span> <span data-ttu-id="eed29-287">索引以零為起始。</span><span class="sxs-lookup"><span data-stu-id="eed29-287">The index is zero-based.</span></span> <span data-ttu-id="eed29-288">(第一個屬性的索引為 0。)</span><span class="sxs-lookup"><span data-stu-id="eed29-288">(The first attribute has index 0.)</span></span></param>
        <summary><span data-ttu-id="eed29-289">取得具有指定索引的屬性值。</span><span class="sxs-lookup"><span data-stu-id="eed29-289">Gets the value of the attribute with the specified index.</span></span></summary>
        <returns><span data-ttu-id="eed29-290">指定的屬性值。</span><span class="sxs-lookup"><span data-stu-id="eed29-290">The value of the specified attribute.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eed29-291">這個方法不會移動讀取器。</span><span class="sxs-lookup"><span data-stu-id="eed29-291">This method does not move the reader.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eed29-292"><xref:System.Xml.XmlValidatingReader>類別中已過時[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="eed29-292">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="eed29-293">您可以建立驗證<xref:System.Xml.XmlReader>使用的執行個體<xref:System.Xml.XmlReaderSettings>類別和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="eed29-293">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="eed29-294">如需詳細資訊，請參閱 <xref:System.Xml.XmlReader> 參考頁面的＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="eed29-294">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="eed29-295"><paramref name="i" /> 參數小於 0，或大於或等於 <see cref="P:System.Xml.XmlValidatingReader.AttributeCount" />。</span><span class="sxs-lookup"><span data-stu-id="eed29-295">The <paramref name="i" /> parameter is less than 0 or greater than or equal to <see cref="P:System.Xml.XmlValidatingReader.AttributeCount" />.</span></span></exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="GetAttribute">
      <MemberSignature Language="C#" Value="public override string GetAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetAttribute(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.GetAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAttribute (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetAttribute(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.GetAttribute : string -&gt; string" Usage="xmlValidatingReader.GetAttribute name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="eed29-296">屬性的限定名稱 (Qualified Name)。</span><span class="sxs-lookup"><span data-stu-id="eed29-296">The qualified name of the attribute.</span></span></param>
        <summary><span data-ttu-id="eed29-297">取得具有指定名稱的屬性值。</span><span class="sxs-lookup"><span data-stu-id="eed29-297">Gets the value of the attribute with the specified name.</span></span></summary>
        <returns><span data-ttu-id="eed29-298">指定的屬性值。</span><span class="sxs-lookup"><span data-stu-id="eed29-298">The value of the specified attribute.</span></span> <span data-ttu-id="eed29-299">如果找不到屬性，會傳回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="eed29-299">If the attribute is not found, <see langword="null" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="eed29-300"><xref:System.Xml.XmlValidatingReader>類別中已過時[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="eed29-300">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="eed29-301">您可以建立驗證<xref:System.Xml.XmlReader>使用的執行個體<xref:System.Xml.XmlReaderSettings>類別和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="eed29-301">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="eed29-302">如需詳細資訊，請參閱 <xref:System.Xml.XmlReader> 參考頁面的＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="eed29-302">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="eed29-303">這個方法不會移動讀取器。</span><span class="sxs-lookup"><span data-stu-id="eed29-303">This method does not move the reader.</span></span>  
  
 <span data-ttu-id="eed29-304">如果讀取器置於`DocumentType` 節點，這個方法可用來取得的 PUBLIC 和 SYSTEM 常值，例如， `reader.GetAttribute("PUBLIC")`</span><span class="sxs-lookup"><span data-stu-id="eed29-304">If the reader is positioned on a `DocumentType` node, this method can be used to get the PUBLIC and SYSTEM literals, for example, `reader.GetAttribute("PUBLIC")`</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eed29-305">下列範例會取得 ISBN 屬性的值。</span><span class="sxs-lookup"><span data-stu-id="eed29-305">The following example gets the value of the ISBN attribute.</span></span>  
  
 [!code-cpp[Classic WebData XmlValidatingReader.GetAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.GetAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.GetAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.GetAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.GetAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.GetAttribute Example/VB/source.vb#1)]  
  
 <span data-ttu-id="eed29-306">此範例會使用該檔案，`attrs.xml`作為輸入。</span><span class="sxs-lookup"><span data-stu-id="eed29-306">The example uses the file, `attrs.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlValidatingReader.GetAttribute Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.GetAttribute Example/XML/attrs.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="GetAttribute">
      <MemberSignature Language="C#" Value="public override string GetAttribute (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetAttribute(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.GetAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAttribute (localName As String, namespaceURI As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetAttribute(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="override this.GetAttribute : string * string -&gt; string" Usage="xmlValidatingReader.GetAttribute (localName, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="eed29-307">屬性的本機名稱。</span><span class="sxs-lookup"><span data-stu-id="eed29-307">The local name of the attribute.</span></span></param>
        <param name="namespaceURI"><span data-ttu-id="eed29-308">屬性的命名空間 URI。</span><span class="sxs-lookup"><span data-stu-id="eed29-308">The namespace URI of the attribute.</span></span></param>
        <summary><span data-ttu-id="eed29-309">針對具有指定的區域名稱和命名空間「統一資源識別元 (URI)」的屬性，取得其值。</span><span class="sxs-lookup"><span data-stu-id="eed29-309">Gets the value of the attribute with the specified local name and namespace Uniform Resource Identifier (URI).</span></span></summary>
        <returns><span data-ttu-id="eed29-310">指定的屬性值。</span><span class="sxs-lookup"><span data-stu-id="eed29-310">The value of the specified attribute.</span></span> <span data-ttu-id="eed29-311">如果找不到屬性，會傳回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="eed29-311">If the attribute is not found, <see langword="null" /> is returned.</span></span> <span data-ttu-id="eed29-312">這個方法不會移動讀取器。</span><span class="sxs-lookup"><span data-stu-id="eed29-312">This method does not move the reader.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="eed29-313"><xref:System.Xml.XmlValidatingReader>類別中已過時[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="eed29-313">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="eed29-314">您可以建立驗證<xref:System.Xml.XmlReader>使用的執行個體<xref:System.Xml.XmlReaderSettings>類別和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="eed29-314">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="eed29-315">如需詳細資訊，請參閱 <xref:System.Xml.XmlReader> 參考頁面的＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="eed29-315">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="eed29-316">下列 XML 會包含特定的命名空間中的屬性：</span><span class="sxs-lookup"><span data-stu-id="eed29-316">The following XML contains an attribute in a specific namespace:</span></span>  
  
```xml  
<test xmlns:dt="urn:datatypes" dt:type="int"/>  
```  
  
 <span data-ttu-id="eed29-317">您可以查閱`dt:type`使用一個引數 （前置詞和本機名稱） 或兩個引數 （區域名稱和命名空間 URI） 的屬性：</span><span class="sxs-lookup"><span data-stu-id="eed29-317">You can look up the `dt:type` attribute by using one argument (prefix and local name) or two arguments (local name and namespace URI):</span></span>  
  
```csharp  
String dt = reader.GetAttribute("dt:type");  
String dt2 = reader.GetAttribute("type","urn:datatypes");  
```  
  
 <span data-ttu-id="eed29-318">若要查閱`xmlns:dt`屬性，請使用下列引數的其中一個：</span><span class="sxs-lookup"><span data-stu-id="eed29-318">To look up the `xmlns:dt` attribute, use one of the following arguments:</span></span>  
  
```csharp  
String dt3 = reader.GetAttribute("xmlns:dt");  
String dt4 = reader.GetAttribute("dt",http://www.w3.org/2000/xmlns/);  
```  
  
 <span data-ttu-id="eed29-319">您也可以使用，取得這項資訊<xref:System.Xml.XmlValidatingReader.Prefix%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="eed29-319">You can also get this information by using the <xref:System.Xml.XmlValidatingReader.Prefix%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="HasLineInfo">
      <MemberSignature Language="C#" Value="public bool HasLineInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasLineInfo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.HasLineInfo" />
      <MemberSignature Language="VB.NET" Value="Public Function HasLineInfo () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool HasLineInfo();" />
      <MemberSignature Language="F#" Value="abstract member HasLineInfo : unit -&gt; bool&#xA;override this.HasLineInfo : unit -&gt; bool" Usage="xmlValidatingReader.HasLineInfo " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlLineInfo.HasLineInfo</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="eed29-320">取得值，這個值指出類別是否可以傳回行資訊。</span><span class="sxs-lookup"><span data-stu-id="eed29-320">Gets a value indicating whether the class can return line information.</span></span></summary>
        <returns><span data-ttu-id="eed29-321">如果類別可以傳回行資訊，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="eed29-321"><see langword="true" /> if the class can return line information; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="eed29-322"><xref:System.Xml.XmlValidatingReader>類別中已過時[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="eed29-322">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="eed29-323">您可以建立驗證<xref:System.Xml.XmlReader>使用的執行個體<xref:System.Xml.XmlReaderSettings>類別和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="eed29-323">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="eed29-324">如需詳細資訊，請參閱 <xref:System.Xml.XmlReader> 參考頁面的＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="eed29-324">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="HasValue">
      <MemberSignature Language="C#" Value="public override bool HasValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasValue" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.HasValue" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property HasValue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasValue { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasValue : bool" Usage="System.Xml.XmlValidatingReader.HasValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eed29-325">取得值，表示目前的節點是否可以具有 String.Empty 之外的其他 <see cref="P:System.Xml.XmlValidatingReader.Value" />。</span><span class="sxs-lookup"><span data-stu-id="eed29-325">Gets a value indicating whether the current node can have a <see cref="P:System.Xml.XmlValidatingReader.Value" /> other than String.Empty.</span></span></summary>
        <value><span data-ttu-id="eed29-326">如果讀取器目前所在節點具有 <see langword="Value" />，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="eed29-326"><see langword="true" /> if the node on which the reader is currently positioned can have a <see langword="Value" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="eed29-327"><xref:System.Xml.XmlValidatingReader>類別中已過時[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="eed29-327">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="eed29-328">您可以建立驗證<xref:System.Xml.XmlReader>使用的執行個體<xref:System.Xml.XmlReaderSettings>類別和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="eed29-328">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="eed29-329">如需詳細資訊，請參閱 <xref:System.Xml.XmlReader> 參考頁面的＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="eed29-329">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="eed29-330">下表列出具有傳回值的節點類型。</span><span class="sxs-lookup"><span data-stu-id="eed29-330">The following table lists node types that have a value to return.</span></span>  
  
|<span data-ttu-id="eed29-331">節點類型</span><span class="sxs-lookup"><span data-stu-id="eed29-331">Node Type</span></span>|<span data-ttu-id="eed29-332">值</span><span class="sxs-lookup"><span data-stu-id="eed29-332">Value</span></span>|  
|---------------|-----------|  
|`Attribute`|<span data-ttu-id="eed29-333">屬性的值。</span><span class="sxs-lookup"><span data-stu-id="eed29-333">The value of the attribute.</span></span>|  
|`CDATA`|<span data-ttu-id="eed29-334">CDATA 區段的內容。</span><span class="sxs-lookup"><span data-stu-id="eed29-334">The content of the CDATA section.</span></span>|  
|`Comment`|<span data-ttu-id="eed29-335">註解的內容。</span><span class="sxs-lookup"><span data-stu-id="eed29-335">The content of the comment.</span></span>|  
|`DocumentType`|<span data-ttu-id="eed29-336">內部子集。</span><span class="sxs-lookup"><span data-stu-id="eed29-336">The internal subset.</span></span>|  
|`ProcessingInstruction`|<span data-ttu-id="eed29-337">全部內容 (目標除外)。</span><span class="sxs-lookup"><span data-stu-id="eed29-337">The entire content, excluding the target.</span></span>|  
|`SignificantWhitespace`|<span data-ttu-id="eed29-338">在混合內容模型中標記間的泛空白字元。</span><span class="sxs-lookup"><span data-stu-id="eed29-338">The white space between markup in a mixed content model.</span></span>|  
|`Text`|<span data-ttu-id="eed29-339">文字節點的內容。</span><span class="sxs-lookup"><span data-stu-id="eed29-339">The content of the text node.</span></span>|  
|`Whitespace`|<span data-ttu-id="eed29-340">標記之間的泛空白字元。</span><span class="sxs-lookup"><span data-stu-id="eed29-340">The white space between markup.</span></span>|  
|`XmlDeclaration`|<span data-ttu-id="eed29-341">宣告的內容。</span><span class="sxs-lookup"><span data-stu-id="eed29-341">The content of the declaration.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="eed29-342">下列範例會讀取各種資料類型的 XML，並顯示每個節點。</span><span class="sxs-lookup"><span data-stu-id="eed29-342">The following example reads in XML with various data types and displays each of the nodes.</span></span>  
  
 [!code-cpp[Classic WebData XmlValidatingReader.HasValue Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.HasValue Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.HasValue Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.HasValue Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.HasValue Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.HasValue Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="IsDefault">
      <MemberSignature Language="C#" Value="public override bool IsDefault { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDefault" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.IsDefault" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsDefault As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsDefault { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDefault : bool" Usage="System.Xml.XmlValidatingReader.IsDefault" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eed29-343">取得值，表示目前的節點是否為文件類型定義 (DTD)，或結構描述中定義之預設值所產生的屬性。</span><span class="sxs-lookup"><span data-stu-id="eed29-343">Gets a value indicating whether the current node is an attribute that was generated from the default value defined in the document type definition (DTD) or schema.</span></span></summary>
        <value><span data-ttu-id="eed29-344">如果目前節點是 DTD 或結構描述中定義的預設值所產生的屬性，則為 <see langword="true" />，如果已經明確設定屬性值，則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="eed29-344"><see langword="true" /> if the current node is an attribute whose value was generated from the default value defined in the DTD or schema; <see langword="false" /> if the attribute value was explicitly set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eed29-345">這個屬性只適用於屬性節點。</span><span class="sxs-lookup"><span data-stu-id="eed29-345">This property applies only to an attribute node.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eed29-346"><xref:System.Xml.XmlValidatingReader>類別中已過時[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="eed29-346">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="eed29-347">您可以建立驗證<xref:System.Xml.XmlReader>使用的執行個體<xref:System.Xml.XmlReaderSettings>類別和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="eed29-347">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="eed29-348">如需詳細資訊，請參閱 <xref:System.Xml.XmlReader> 參考頁面的＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="eed29-348">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eed29-349">下列範例會顯示屬性的所有節點上的根項目。</span><span class="sxs-lookup"><span data-stu-id="eed29-349">The following example displays all attributes nodes on the root element.</span></span>  
  
 [!code-cpp[XmlValidatingReader.IsDefault#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlValidatingReader.IsDefault/CPP/readdefattr.cpp#1)]
 [!code-csharp[XmlValidatingReader.IsDefault#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlValidatingReader.IsDefault/CS/readdefattr.cs#1)]
 [!code-vb[XmlValidatingReader.IsDefault#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlValidatingReader.IsDefault/VB/readdefattr.vb#1)]  
  
 <span data-ttu-id="eed29-350">此範例會使用下列的檔案，做為輸入。</span><span class="sxs-lookup"><span data-stu-id="eed29-350">The example uses the following files as input.</span></span>  
  
 `book4.xml`  
  
 [!code-xml[XmlValidatingReader.IsDefault#2](~/samples/snippets/xml/VS_Snippets_Data/XmlValidatingReader.IsDefault/XML/book4.xml#2)]  
  
 `book.dtd`  
  
 [!code-xml[XmlValidatingReader.IsDefault#3](~/samples/snippets/xml/VS_Snippets_Data/XmlValidatingReader.IsDefault/XML/book.dtd#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="IsEmptyElement">
      <MemberSignature Language="C#" Value="public override bool IsEmptyElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmptyElement" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.IsEmptyElement" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsEmptyElement As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsEmptyElement { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEmptyElement : bool" Usage="System.Xml.XmlValidatingReader.IsEmptyElement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eed29-351">取得值，指出目前的節點是否為空項目 (例如 <c>&lt;MyElement/&gt;</c>)。</span><span class="sxs-lookup"><span data-stu-id="eed29-351">Gets a value indicating whether the current node is an empty element (for example, <c>&lt;MyElement/&gt;</c>).</span></span></summary>
        <value><span data-ttu-id="eed29-352"><see langword="true" /> 如果目前節點是項目 (<see cref="P:System.Xml.XmlValidatingReader.NodeType" />等於<see langword="XmlNodeType.Element" />) 結尾<c>/ &gt;</c>否則<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="eed29-352"><see langword="true" /> if the current node is an element (<see cref="P:System.Xml.XmlValidatingReader.NodeType" /> equals <see langword="XmlNodeType.Element" />) that ends with <c>/&gt;</c>; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="eed29-353"><xref:System.Xml.XmlValidatingReader>類別中已過時[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="eed29-353">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="eed29-354">您可以建立驗證<xref:System.Xml.XmlReader>使用的執行個體<xref:System.Xml.XmlReaderSettings>類別和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="eed29-354">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="eed29-355">如需詳細資訊，請參閱 <xref:System.Xml.XmlReader> 參考頁面的＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="eed29-355">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="eed29-356">此屬性可讓您判斷下列各項目之間的差異：</span><span class="sxs-lookup"><span data-stu-id="eed29-356">This property enables you to determine the difference between the following:</span></span>  
  
 <span data-ttu-id="eed29-357">`<item num="123"/>` (`IsEmptyElement`是`true`)。</span><span class="sxs-lookup"><span data-stu-id="eed29-357">`<item num="123"/>` (`IsEmptyElement` is `true`).</span></span>  
  
 <span data-ttu-id="eed29-358">`<item num="123">` (`IsEmptyElement`是`false`，不過是空的項目內容)。</span><span class="sxs-lookup"><span data-stu-id="eed29-358">`<item num="123">` (`IsEmptyElement` is `false`, although element content is empty).</span></span>  
  
 <span data-ttu-id="eed29-359">對應`EndElement`節點並不會產生空的項目。</span><span class="sxs-lookup"><span data-stu-id="eed29-359">A corresponding `EndElement` node is not generated for empty elements.</span></span>  
  
 <span data-ttu-id="eed29-360">如果預設的內容已加入的項目，因為結構描述的驗證，所以`IsEmptyElement`仍會傳回`true`。</span><span class="sxs-lookup"><span data-stu-id="eed29-360">If default content has been added to an element due to schema validation, `IsEmptyElement` still returns `true`.</span></span> <span data-ttu-id="eed29-361">它具有在項目具有預設值並無任何影響。</span><span class="sxs-lookup"><span data-stu-id="eed29-361">It has no bearing on whether or not the element has a default value.</span></span> <span data-ttu-id="eed29-362">換句話說，`IsEmptyElement`只會報告是否在來源文件中的項目具有結尾項目標記。</span><span class="sxs-lookup"><span data-stu-id="eed29-362">In other words, `IsEmptyElement` simply reports whether or not the element in the source document had an end element tag.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eed29-363">下列範例會顯示每個項目的文字內容。</span><span class="sxs-lookup"><span data-stu-id="eed29-363">The following example displays the text content of each element.</span></span>  
  
 [!code-cpp[Classic WebData XmlValidatingReader.IsEmptyElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.IsEmptyElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.IsEmptyElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.IsEmptyElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.IsEmptyElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.IsEmptyElement Example/VB/source.vb#1)]  
  
 <span data-ttu-id="eed29-364">此範例會使用該檔案，`elems.xml`作為輸入。</span><span class="sxs-lookup"><span data-stu-id="eed29-364">The example uses the file, `elems.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlValidatingReader.IsEmptyElement Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.IsEmptyElement Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override string this[int i] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides ReadOnly Property Item(i As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ default[int] { System::String ^ get(int i); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : string" Usage="System.Xml.XmlValidatingReader.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" Index="0" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="eed29-365">屬性的索引。</span><span class="sxs-lookup"><span data-stu-id="eed29-365">The index of the attribute.</span></span></param>
        <summary><span data-ttu-id="eed29-366">取得具有指定索引的屬性值。</span><span class="sxs-lookup"><span data-stu-id="eed29-366">Gets the value of the attribute with the specified index.</span></span></summary>
        <value><span data-ttu-id="eed29-367">指定的屬性值。</span><span class="sxs-lookup"><span data-stu-id="eed29-367">The value of the specified attribute.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override string this[string name] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides ReadOnly Property Item(name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ default[System::String ^] { System::String ^ get(System::String ^ name); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : string" Usage="System.Xml.XmlValidatingReader.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override string this[string name, string namespaceURI] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(string, string)" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.Item(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides ReadOnly Property Item(name As String, namespaceURI As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ default[System::String ^, System::String ^] { System::String ^ get(System::String ^ name, System::String ^ namespaceURI); };" />
      <MemberSignature Language="F#" Value="member this.Item(string * string) : string" Usage="System.Xml.XmlValidatingReader.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="namespaceURI" Type="System.String" Index="1" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="eed29-368">屬性的本機名稱。</span><span class="sxs-lookup"><span data-stu-id="eed29-368">The local name of the attribute.</span></span></param>
        <param name="namespaceURI"><span data-ttu-id="eed29-369">屬性的命名空間 URI。</span><span class="sxs-lookup"><span data-stu-id="eed29-369">The namespace URI of the attribute.</span></span></param>
        <summary><span data-ttu-id="eed29-370">取得具有指定的區域名稱和命名空間 URI 的屬性值。</span><span class="sxs-lookup"><span data-stu-id="eed29-370">Gets the value of the attribute with the specified local name and namespace URI.</span></span></summary>
        <value><span data-ttu-id="eed29-371">指定的屬性值。</span><span class="sxs-lookup"><span data-stu-id="eed29-371">The value of the specified attribute.</span></span> <span data-ttu-id="eed29-372">如果找不到屬性，會傳回<see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="eed29-372">If the attribute is not found, returns <see langword="null" />.</span></span></value>
        <remarks><span data-ttu-id="eed29-373">這個屬性不會移動讀取器。</span><span class="sxs-lookup"><span data-stu-id="eed29-373">This property does not move the reader.</span></span></remarks>
      </Docs>
    </Member>
    <Member MemberName="LineNumber">
      <MemberSignature Language="C#" Value="public int LineNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LineNumber" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.LineNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LineNumber As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LineNumber { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LineNumber : int" Usage="System.Xml.XmlValidatingReader.LineNumber" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Xml.IXmlLineInfo.LineNumber</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eed29-374">取得目前的行號。</span><span class="sxs-lookup"><span data-stu-id="eed29-374">Gets the current line number.</span></span></summary>
        <value><span data-ttu-id="eed29-375">目前的行號。</span><span class="sxs-lookup"><span data-stu-id="eed29-375">The current line number.</span></span> <span data-ttu-id="eed29-376">這個屬性的起始值為 1。</span><span class="sxs-lookup"><span data-stu-id="eed29-376">The starting value for this property is 1.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="eed29-377"><xref:System.Xml.XmlValidatingReader>類別中已過時[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="eed29-377">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="eed29-378">您可以建立驗證<xref:System.Xml.XmlReader>使用的執行個體<xref:System.Xml.XmlReaderSettings>類別和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="eed29-378">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="eed29-379">如需詳細資訊，請參閱 <xref:System.Xml.XmlReader> 參考頁面的＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="eed29-379">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="eed29-380">此屬性來報告錯誤，最常用，但可在任何時間加以呼叫。</span><span class="sxs-lookup"><span data-stu-id="eed29-380">This property is most commonly used for error reporting, but can be called at any time.</span></span> <span data-ttu-id="eed29-381">這個屬性的起始值為 1。</span><span class="sxs-lookup"><span data-stu-id="eed29-381">The starting value for this property is 1.</span></span> <span data-ttu-id="eed29-382">結合<xref:System.Xml.XmlValidatingReader.LinePosition%2A>，值為 1，1 表示文件開頭。</span><span class="sxs-lookup"><span data-stu-id="eed29-382">Combined with <xref:System.Xml.XmlValidatingReader.LinePosition%2A>, a value of 1,1 indicates the start of the document.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="LinePosition">
      <MemberSignature Language="C#" Value="public int LinePosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LinePosition" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.LinePosition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LinePosition As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LinePosition { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LinePosition : int" Usage="System.Xml.XmlValidatingReader.LinePosition" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Xml.IXmlLineInfo.LinePosition</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eed29-383">取得目前的行位置。</span><span class="sxs-lookup"><span data-stu-id="eed29-383">Gets the current line position.</span></span></summary>
        <value><span data-ttu-id="eed29-384">目前的行位置。</span><span class="sxs-lookup"><span data-stu-id="eed29-384">The current line position.</span></span> <span data-ttu-id="eed29-385">這個屬性的起始值為 1。</span><span class="sxs-lookup"><span data-stu-id="eed29-385">The starting value for this property is 1.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="eed29-386"><xref:System.Xml.XmlValidatingReader>類別中已過時[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="eed29-386">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="eed29-387">您可以建立驗證<xref:System.Xml.XmlReader>使用的執行個體<xref:System.Xml.XmlReaderSettings>類別和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="eed29-387">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="eed29-388">如需詳細資訊，請參閱 <xref:System.Xml.XmlReader> 參考頁面的＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="eed29-388">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="eed29-389">此屬性來報告錯誤，最常用，但可在任何時間加以呼叫。</span><span class="sxs-lookup"><span data-stu-id="eed29-389">This property is most commonly used for error reporting, but can be called at any time.</span></span> <span data-ttu-id="eed29-390">這個屬性的起始值`1`。</span><span class="sxs-lookup"><span data-stu-id="eed29-390">The starting value for this property is `1`.</span></span>  
  
 <span data-ttu-id="eed29-391">指定的位置是文字的在標記中的第一個字元。</span><span class="sxs-lookup"><span data-stu-id="eed29-391">The position indicated is the first character of text in the markup.</span></span>  
  
```xml  
<root>  
 abc<tag/>  
</root>  
```  
  
 <span data-ttu-id="eed29-392">上述的 XML 文字，第一行`LinePosition`的`2`對應至所`r`; 第二行中，在`LinePosition`的`5`對應至所`t`; 和第三行，也就是`LinePosition`的`3`對應至所`r`。</span><span class="sxs-lookup"><span data-stu-id="eed29-392">On the first line of the preceding XML text, a `LinePosition` of `2` corresponds to the character `r`; on the second line, a `LinePosition` of `5` corresponds to the character `t`; and on the third line, a `LinePosition` of `3` corresponds to the character `r`.</span></span>  
  
 <span data-ttu-id="eed29-393">結合<xref:System.Xml.XmlValidatingReader.LineNumber%2A>，值為`1,1`表示文件的開頭。</span><span class="sxs-lookup"><span data-stu-id="eed29-393">Combined with <xref:System.Xml.XmlValidatingReader.LineNumber%2A>, a value of `1,1` indicates the start of the document.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ LocalName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="System.Xml.XmlValidatingReader.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eed29-394">取得目前節點的區域名稱。</span><span class="sxs-lookup"><span data-stu-id="eed29-394">Gets the local name of the current node.</span></span></summary>
        <value><span data-ttu-id="eed29-395">目前節點名稱的前置詞被移除。</span><span class="sxs-lookup"><span data-stu-id="eed29-395">The name of the current node with the prefix removed.</span></span> <span data-ttu-id="eed29-396">例如，<see langword="LocalName" />已<see langword="book" />項目的<c>&lt;bk: book&amp;gt&gt;</c>。</span><span class="sxs-lookup"><span data-stu-id="eed29-396">For example, <see langword="LocalName" /> is <see langword="book" /> for the element <c>&lt;bk:book&gt;</c>.</span></span>  
  
<span data-ttu-id="eed29-397">對於沒有名稱的節點類型 (如 <see langword="Text" />、<see langword="Comment" /> 等)，這個屬性會傳回 String.Empty。</span><span class="sxs-lookup"><span data-stu-id="eed29-397">For node types that do not have a name (like <see langword="Text" />, <see langword="Comment" />, and so on), this property returns String.Empty.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="eed29-398"><xref:System.Xml.XmlValidatingReader>類別中已過時[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="eed29-398">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="eed29-399">您可以建立驗證<xref:System.Xml.XmlReader>使用的執行個體<xref:System.Xml.XmlReaderSettings>類別和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="eed29-399">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="eed29-400">如需詳細資訊，請參閱 <xref:System.Xml.XmlReader> 參考頁面的＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="eed29-400">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eed29-401">下列範例會讀取 XML 片段。</span><span class="sxs-lookup"><span data-stu-id="eed29-401">The following example reads an XML fragment.</span></span>  
  
 [!code-csharp[Classic WebData XmlParserContext.XmlParserContext Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlParserContext.XmlParserContext Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlParserContext.XmlParserContext Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlParserContext.XmlParserContext Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="LookupNamespace">
      <MemberSignature Language="C#" Value="public override string LookupNamespace (string prefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string LookupNamespace(string prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.LookupNamespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function LookupNamespace (prefix As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ LookupNamespace(System::String ^ prefix);" />
      <MemberSignature Language="F#" Value="override this.LookupNamespace : string -&gt; string" Usage="xmlValidatingReader.LookupNamespace prefix" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="eed29-402">前置詞，您要解析其命名空間「統一資源識別元 (URI)」。</span><span class="sxs-lookup"><span data-stu-id="eed29-402">The prefix whose namespace Uniform Resource Identifier (URI) you want to resolve.</span></span> <span data-ttu-id="eed29-403">若要符合預設命名空間，請傳送空字串。</span><span class="sxs-lookup"><span data-stu-id="eed29-403">To match the default namespace, pass an empty string.</span></span></param>
        <summary><span data-ttu-id="eed29-404">解析目前項目範圍中的命名空間前置詞。</span><span class="sxs-lookup"><span data-stu-id="eed29-404">Resolves a namespace prefix in the current element's scope.</span></span></summary>
        <returns><span data-ttu-id="eed29-405">前置詞對應的命名空間 URI，如果找不到符合的前置詞，則為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="eed29-405">The namespace URI to which the prefix maps or <see langword="null" /> if no matching prefix is found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="eed29-406"><xref:System.Xml.XmlValidatingReader>類別中已過時[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="eed29-406">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="eed29-407">您可以建立驗證<xref:System.Xml.XmlReader>使用的執行個體<xref:System.Xml.XmlReaderSettings>類別和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="eed29-407">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="eed29-408">如需詳細資訊，請參閱 <xref:System.Xml.XmlReader> 參考頁面的＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="eed29-408">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span> 
  
 <span data-ttu-id="eed29-409">在下列 XML 字串，如果讀取器置於`href`屬性，前置詞`a`藉由呼叫會解析`reader.LookupNamespace("a", true)`。</span><span class="sxs-lookup"><span data-stu-id="eed29-409">In the following XML string, if the reader is positioned on the `href` attribute, the prefix `a` is resolved by calling `reader.LookupNamespace("a", true)`.</span></span> <span data-ttu-id="eed29-410">傳回的字串是`urn:456`。</span><span class="sxs-lookup"><span data-stu-id="eed29-410">The returned string is `urn:456`.</span></span>  
  
```xml  
<root xmlns:a="urn:456">  
 <item>  
 <ref href="a:b"/>  
 </item>  
</root>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <MemberGroup MemberName="MoveToAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eed29-411">移至指定屬性。</span><span class="sxs-lookup"><span data-stu-id="eed29-411">Moves to the specified attribute.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MoveToAttribute">
      <MemberSignature Language="C#" Value="public override void MoveToAttribute (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void MoveToAttribute(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.MoveToAttribute(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub MoveToAttribute (i As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void MoveToAttribute(int i);" />
      <MemberSignature Language="F#" Value="override this.MoveToAttribute : int -&gt; unit" Usage="xmlValidatingReader.MoveToAttribute i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="eed29-412">屬性的索引。</span><span class="sxs-lookup"><span data-stu-id="eed29-412">The index of the attribute.</span></span></param>
        <summary><span data-ttu-id="eed29-413">移至具有指定索引的屬性。</span><span class="sxs-lookup"><span data-stu-id="eed29-413">Moves to the attribute with the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="eed29-414"><xref:System.Xml.XmlValidatingReader>類別中已過時[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="eed29-414">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="eed29-415">您可以建立驗證<xref:System.Xml.XmlReader>使用的執行個體<xref:System.Xml.XmlReaderSettings>類別和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="eed29-415">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="eed29-416">如需詳細資訊，請參閱 <xref:System.Xml.XmlReader> 參考頁面的＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="eed29-416">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eed29-417">下列範例會讀取在根節點上的所有項目。</span><span class="sxs-lookup"><span data-stu-id="eed29-417">The following example reads all the elements on the root node.</span></span>  
  
 [!code-cpp[Classic WebData XmlValidatingReader.AttributeCount Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.AttributeCount Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.AttributeCount Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.AttributeCount Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.AttributeCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.AttributeCount Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="eed29-418"><paramref name="i" /> 參數小於 0，或大於或等於 <see cref="P:System.Xml.XmlReader.AttributeCount" />。</span><span class="sxs-lookup"><span data-stu-id="eed29-418">The <paramref name="i" /> parameter is less than 0 or greater than or equal to <see cref="P:System.Xml.XmlReader.AttributeCount" />.</span></span></exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="MoveToAttribute">
      <MemberSignature Language="C#" Value="public override bool MoveToAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MoveToAttribute(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.MoveToAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MoveToAttribute (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MoveToAttribute(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.MoveToAttribute : string -&gt; bool" Usage="xmlValidatingReader.MoveToAttribute name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="eed29-419">屬性的限定名稱 (Qualified Name)。</span><span class="sxs-lookup"><span data-stu-id="eed29-419">The qualified name of the attribute.</span></span></param>
        <summary><span data-ttu-id="eed29-420">移至具有指定名稱的屬性。</span><span class="sxs-lookup"><span data-stu-id="eed29-420">Moves to the attribute with the specified name.</span></span></summary>
        <returns><span data-ttu-id="eed29-421">如果找到屬性，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="eed29-421"><see langword="true" /> if the attribute is found; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="eed29-422">如果 <see langword="false" />，則不會變更讀取器的位置。</span><span class="sxs-lookup"><span data-stu-id="eed29-422">If <see langword="false" />, the position of the reader does not change.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="eed29-423"><xref:System.Xml.XmlValidatingReader>類別中已過時[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="eed29-423">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="eed29-424">您可以建立驗證<xref:System.Xml.XmlReader>使用的執行個體<xref:System.Xml.XmlReaderSettings>類別和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="eed29-424">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="eed29-425">如需詳細資訊，請參閱 <xref:System.Xml.XmlReader> 參考頁面的＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="eed29-425">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="eed29-426">呼叫這個方法中之後, <xref:System.Xml.XmlValidatingReader.Name%2A>， <xref:System.Xml.XmlValidatingReader.NamespaceURI%2A>，和<xref:System.Xml.XmlValidatingReader.Prefix%2A>屬性會反映該屬性的屬性。</span><span class="sxs-lookup"><span data-stu-id="eed29-426">After calling this method, the <xref:System.Xml.XmlValidatingReader.Name%2A>, <xref:System.Xml.XmlValidatingReader.NamespaceURI%2A>, and <xref:System.Xml.XmlValidatingReader.Prefix%2A> properties reflect the properties of that attribute.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eed29-427">下列範例會讀取文字與實體參考節點的屬性。</span><span class="sxs-lookup"><span data-stu-id="eed29-427">The following example reads an attribute with text and entity reference nodes.</span></span>  
  
 [!code-cpp[Classic WebData XmlValidatingReader.MoveToAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.MoveToAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.MoveToAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.MoveToAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.MoveToAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.MoveToAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="MoveToAttribute">
      <MemberSignature Language="C#" Value="public override bool MoveToAttribute (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MoveToAttribute(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.MoveToAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MoveToAttribute (localName As String, namespaceURI As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MoveToAttribute(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="override this.MoveToAttribute : string * string -&gt; bool" Usage="xmlValidatingReader.MoveToAttribute (localName, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="eed29-428">屬性的本機名稱。</span><span class="sxs-lookup"><span data-stu-id="eed29-428">The local name of the attribute.</span></span></param>
        <param name="namespaceURI"><span data-ttu-id="eed29-429">屬性的命名空間 URI。</span><span class="sxs-lookup"><span data-stu-id="eed29-429">The namespace URI of the attribute.</span></span></param>
        <summary><span data-ttu-id="eed29-430">移至具有指定區域名稱和命名空間「統一資源識別元 (URI)」的屬性。</span><span class="sxs-lookup"><span data-stu-id="eed29-430">Moves to the attribute with the specified local name and namespace Uniform Resource Identifier (URI).</span></span></summary>
        <returns><span data-ttu-id="eed29-431">如果找到屬性，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="eed29-431"><see langword="true" /> if the attribute is found; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="eed29-432">如果 <see langword="false" />，則不會變更讀取器的位置。</span><span class="sxs-lookup"><span data-stu-id="eed29-432">If <see langword="false" />, the position of the reader does not change.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="eed29-433"><xref:System.Xml.XmlValidatingReader>類別中已過時[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="eed29-433">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="eed29-434">您可以建立驗證<xref:System.Xml.XmlReader>使用的執行個體<xref:System.Xml.XmlReaderSettings>類別和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="eed29-434">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="eed29-435">如需詳細資訊，請參閱 <xref:System.Xml.XmlReader> 參考頁面的＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="eed29-435">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="eed29-436">呼叫這個方法中之後, <xref:System.Xml.XmlValidatingReader.Name%2A>， <xref:System.Xml.XmlValidatingReader.NamespaceURI%2A>，和<xref:System.Xml.XmlValidatingReader.Prefix%2A>屬性會反映該屬性的屬性。</span><span class="sxs-lookup"><span data-stu-id="eed29-436">After calling this method, the <xref:System.Xml.XmlValidatingReader.Name%2A>, <xref:System.Xml.XmlValidatingReader.NamespaceURI%2A>, and <xref:System.Xml.XmlValidatingReader.Prefix%2A> properties reflect the properties of that attribute.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="MoveToElement">
      <MemberSignature Language="C#" Value="public override bool MoveToElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MoveToElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.MoveToElement" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MoveToElement () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MoveToElement();" />
      <MemberSignature Language="F#" Value="override this.MoveToElement : unit -&gt; bool" Usage="xmlValidatingReader.MoveToElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="eed29-437">移至包含目前屬性節點的項目。</span><span class="sxs-lookup"><span data-stu-id="eed29-437">Moves to the element that contains the current attribute node.</span></span></summary>
        <returns><span data-ttu-id="eed29-438">如果讀取器位於屬性 (讀取器移至擁有該屬性的項目) 上，則為 <see langword="true" />，如果讀取器不在屬性 (不會變更讀取器的位置)，則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="eed29-438"><see langword="true" /> if the reader is positioned on an attribute (the reader moves to the element that owns the attribute); <see langword="false" /> if the reader is not positioned on an attribute (the position of the reader does not change).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="eed29-439"><xref:System.Xml.XmlValidatingReader>類別中已過時[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="eed29-439">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="eed29-440">您可以建立驗證<xref:System.Xml.XmlReader>使用的執行個體<xref:System.Xml.XmlReaderSettings>類別和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="eed29-440">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="eed29-441">如需詳細資訊，請參閱 <xref:System.Xml.XmlReader> 參考頁面的＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="eed29-441">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="eed29-442">使用這個方法傳回的項目之後瀏覽其屬性。</span><span class="sxs-lookup"><span data-stu-id="eed29-442">Use this method to return to an element after navigating through its attributes.</span></span> <span data-ttu-id="eed29-443">這個方法會將讀取器移至下列節點類型的其中一個： `Element`， `DocumentType`，或`XmlDeclaration`。</span><span class="sxs-lookup"><span data-stu-id="eed29-443">This method moves the reader to one of the following node types: `Element`, `DocumentType`, or `XmlDeclaration`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eed29-444">下列範例會讀取在根節點上的所有項目。</span><span class="sxs-lookup"><span data-stu-id="eed29-444">The following example reads all the elements on the root node.</span></span>  
  
 [!code-cpp[Classic WebData XmlValidatingReader.AttributeCount Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.AttributeCount Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.AttributeCount Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.AttributeCount Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.AttributeCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.AttributeCount Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="MoveToFirstAttribute">
      <MemberSignature Language="C#" Value="public override bool MoveToFirstAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MoveToFirstAttribute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.MoveToFirstAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MoveToFirstAttribute () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MoveToFirstAttribute();" />
      <MemberSignature Language="F#" Value="override this.MoveToFirstAttribute : unit -&gt; bool" Usage="xmlValidatingReader.MoveToFirstAttribute " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="eed29-445">移至第一個屬性。</span><span class="sxs-lookup"><span data-stu-id="eed29-445">Moves to the first attribute.</span></span></summary>
        <returns><span data-ttu-id="eed29-446">如果屬性存在 (讀取器移至第一個屬性)，則為 <see langword="true" />，否則為 <see langword="false" /> (不會變更讀取器的位置)。</span><span class="sxs-lookup"><span data-stu-id="eed29-446"><see langword="true" /> if an attribute exists (the reader moves to the first attribute); otherwise, <see langword="false" /> (the position of the reader does not change).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="eed29-447"><xref:System.Xml.XmlValidatingReader>類別中已過時[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="eed29-447">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="eed29-448">您可以建立驗證<xref:System.Xml.XmlReader>使用的執行個體<xref:System.Xml.XmlReaderSettings>類別和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="eed29-448">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="eed29-449">如需詳細資訊，請參閱 <xref:System.Xml.XmlReader> 參考頁面的＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="eed29-449">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eed29-450">下列範例會讀取 XML 片段。</span><span class="sxs-lookup"><span data-stu-id="eed29-450">The following example reads an XML fragment.</span></span>  
  
 [!code-cpp[Classic WebData XmlValidatingReader.MoveToFirstAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.MoveToFirstAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.MoveToFirstAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.MoveToFirstAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.MoveToFirstAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.MoveToFirstAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="MoveToNextAttribute">
      <MemberSignature Language="C#" Value="public override bool MoveToNextAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MoveToNextAttribute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.MoveToNextAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MoveToNextAttribute () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MoveToNextAttribute();" />
      <MemberSignature Language="F#" Value="override this.MoveToNextAttribute : unit -&gt; bool" Usage="xmlValidatingReader.MoveToNextAttribute " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="eed29-451">移至下一個屬性。</span><span class="sxs-lookup"><span data-stu-id="eed29-451">Moves to the next attribute.</span></span></summary>
        <returns><span data-ttu-id="eed29-452">如果有下一個屬性，則為 <see langword="true" />，如果沒有其他屬性，則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="eed29-452"><see langword="true" /> if there is a next attribute; <see langword="false" /> if there are no more attributes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="eed29-453"><xref:System.Xml.XmlValidatingReader>類別中已過時[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="eed29-453">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="eed29-454">您可以建立驗證<xref:System.Xml.XmlReader>使用的執行個體<xref:System.Xml.XmlReaderSettings>類別和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="eed29-454">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="eed29-455">如需詳細資訊，請參閱 <xref:System.Xml.XmlReader> 參考頁面的＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="eed29-455">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="eed29-456">如果目前的節點是項目節點，這個方法就相當於<xref:System.Xml.XmlValidatingReader.MoveToFirstAttribute%2A>。</span><span class="sxs-lookup"><span data-stu-id="eed29-456">If the current node is an element node, this method is equivalent to <xref:System.Xml.XmlValidatingReader.MoveToFirstAttribute%2A>.</span></span> <span data-ttu-id="eed29-457">如果`MoveToNextAttribute`傳回`true`，讀取器移至下一個屬性，讀取器位置不會變更的否則為。</span><span class="sxs-lookup"><span data-stu-id="eed29-457">If `MoveToNextAttribute` returns `true`, the reader moves to the next attribute; otherwise, the position of the reader does not change.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eed29-458">下列範例會讀取 XML 片段。</span><span class="sxs-lookup"><span data-stu-id="eed29-458">The following example reads an XML fragment.</span></span>  
  
 [!code-cpp[Classic WebData XmlValidatingReader.MoveToFirstAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.MoveToFirstAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.MoveToFirstAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.MoveToFirstAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.MoveToFirstAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.MoveToFirstAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Xml.XmlValidatingReader.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eed29-459">取得目前節點的限定名稱 (Qualified Name)。</span><span class="sxs-lookup"><span data-stu-id="eed29-459">Gets the qualified name of the current node.</span></span></summary>
        <value><span data-ttu-id="eed29-460">目前節點的限定名稱。</span><span class="sxs-lookup"><span data-stu-id="eed29-460">The qualified name of the current node.</span></span> <span data-ttu-id="eed29-461">例如，<see langword="Name" />已<see langword="bk:book" />項目的<c>&lt;bk: book&amp;gt&gt;</c>。</span><span class="sxs-lookup"><span data-stu-id="eed29-461">For example, <see langword="Name" /> is <see langword="bk:book" /> for the element <c>&lt;bk:book&gt;</c>.</span></span>  
  
<span data-ttu-id="eed29-462">傳回的名稱需視節點的 <see cref="P:System.Xml.XmlValidatingReader.NodeType" /> 而定：</span><span class="sxs-lookup"><span data-stu-id="eed29-462">The name returned is dependent on the <see cref="P:System.Xml.XmlValidatingReader.NodeType" /> of the node.</span></span> <span data-ttu-id="eed29-463">下列節點類型會傳回所列的值。</span><span class="sxs-lookup"><span data-stu-id="eed29-463">The following node types return the listed values.</span></span> <span data-ttu-id="eed29-464">其他所有節點類型都會傳回空字串。</span><span class="sxs-lookup"><span data-stu-id="eed29-464">All other node types return an empty string.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="eed29-465">節點類型</span><span class="sxs-lookup"><span data-stu-id="eed29-465">Node Type</span></span> 
 </term><description> <span data-ttu-id="eed29-466">名稱</span><span class="sxs-lookup"><span data-stu-id="eed29-466">Name</span></span> 
 </description></listheader><item><term><see langword="Attribute" /></term><description> <span data-ttu-id="eed29-467">屬性的名稱。</span><span class="sxs-lookup"><span data-stu-id="eed29-467">The name of the attribute.</span></span>  
  
 </description></item><item><term><see langword="DocumentType" /></term><description> <span data-ttu-id="eed29-468">文件類型名稱。</span><span class="sxs-lookup"><span data-stu-id="eed29-468">The document type name.</span></span>  
  
 </description></item><item><term><see langword="Element" /></term><description> <span data-ttu-id="eed29-469">標記名稱。</span><span class="sxs-lookup"><span data-stu-id="eed29-469">The tag name.</span></span>  
  
 </description></item><item><term><see langword="EntityReference" /></term><description> <span data-ttu-id="eed29-470">所參考的實體名稱。</span><span class="sxs-lookup"><span data-stu-id="eed29-470">The name of the entity referenced.</span></span>  
  
 </description></item><item><term><see langword="ProcessingInstruction" /></term><description> <span data-ttu-id="eed29-471">處理指示的目標。</span><span class="sxs-lookup"><span data-stu-id="eed29-471">The target of the processing instruction.</span></span>  
  
 </description></item><item><term><see langword="XmlDeclaration" /></term><description> <span data-ttu-id="eed29-472">常值字串<see langword="xml" />。</span><span class="sxs-lookup"><span data-stu-id="eed29-472">The literal string <see langword="xml" />.</span></span>  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="eed29-473"><xref:System.Xml.XmlValidatingReader>類別中已過時[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="eed29-473">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="eed29-474">您可以建立驗證<xref:System.Xml.XmlReader>使用的執行個體<xref:System.Xml.XmlReaderSettings>類別和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="eed29-474">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="eed29-475">如需詳細資訊，請參閱 <xref:System.Xml.XmlReader> 參考頁面的＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="eed29-475">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eed29-476">下列範例會讀取 XML 檔案，並顯示每個節點。</span><span class="sxs-lookup"><span data-stu-id="eed29-476">The following example reads an XML file and displays each of the nodes.</span></span>  
  
 [!code-cpp[Classic WebData XmlValidatingReader.Name Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.Name Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/VB/source.vb#1)]  
  
 <span data-ttu-id="eed29-477">此範例會使用該檔案，`items.xml`作為輸入。</span><span class="sxs-lookup"><span data-stu-id="eed29-477">The example uses the file, `items.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlValidatingReader.Name Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Namespaces">
      <MemberSignature Language="C#" Value="public bool Namespaces { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Namespaces" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.Namespaces" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespaces As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Namespaces { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Namespaces : bool with get, set" Usage="System.Xml.XmlValidatingReader.Namespaces" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eed29-478">取得或設定值，指出是否支援命名空間。</span><span class="sxs-lookup"><span data-stu-id="eed29-478">Gets or sets a value indicating whether to do namespace support.</span></span></summary>
        <value><span data-ttu-id="eed29-479">如果支援命名空間，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="eed29-479"><see langword="true" /> to do namespace support; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="eed29-480">預設為 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="eed29-480">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="eed29-481"><xref:System.Xml.XmlValidatingReader>類別中已過時[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="eed29-481">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="eed29-482">您可以建立驗證<xref:System.Xml.XmlReader>使用的執行個體<xref:System.Xml.XmlReaderSettings>類別和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="eed29-482">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="eed29-483">如需詳細資訊，請參閱 <xref:System.Xml.XmlReader> 參考頁面的＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="eed29-483">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="NamespaceURI">
      <MemberSignature Language="C#" Value="public override string NamespaceURI { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NamespaceURI" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.NamespaceURI" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NamespaceURI As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ NamespaceURI { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NamespaceURI : string" Usage="System.Xml.XmlValidatingReader.NamespaceURI" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eed29-484">取得讀取器所在之節點的命名空間「統一資源識別元 (URI)」(如全球資訊網協會 (W3C) 命名空間規格所定義)。</span><span class="sxs-lookup"><span data-stu-id="eed29-484">Gets the namespace Uniform Resource Identifier (URI) (as defined in the World Wide Web Consortium (W3C) Namespace specification) of the node on which the reader is positioned.</span></span></summary>
        <value><span data-ttu-id="eed29-485">目前節點的命名空間 URI，否則為空字串。</span><span class="sxs-lookup"><span data-stu-id="eed29-485">The namespace URI of the current node; otherwise an empty string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eed29-486">這個屬性無關`Element`和`Attribute`僅限節點。</span><span class="sxs-lookup"><span data-stu-id="eed29-486">This property is relevant to `Element` and `Attribute` nodes only.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eed29-487"><xref:System.Xml.XmlValidatingReader>類別中已過時[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="eed29-487">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="eed29-488">您可以建立驗證<xref:System.Xml.XmlReader>使用的執行個體<xref:System.Xml.XmlReaderSettings>類別和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="eed29-488">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="eed29-489">如需詳細資訊，請參閱 <xref:System.Xml.XmlReader> 參考頁面的＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="eed29-489">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eed29-490">下列範例會讀取 XML 片段。</span><span class="sxs-lookup"><span data-stu-id="eed29-490">The following example reads an XML fragment.</span></span>  
  
 [!code-csharp[Classic WebData XmlParserContext.XmlParserContext Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlParserContext.XmlParserContext Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlParserContext.XmlParserContext Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlParserContext.XmlParserContext Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="NameTable">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNameTable NameTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNameTable NameTable" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.NameTable" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NameTable As XmlNameTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNameTable ^ NameTable { System::Xml::XmlNameTable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NameTable : System.Xml.XmlNameTable" Usage="System.Xml.XmlValidatingReader.NameTable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNameTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eed29-491">取得與這個實作關聯的 <see cref="T:System.Xml.XmlNameTable" />。</span><span class="sxs-lookup"><span data-stu-id="eed29-491">Gets the <see cref="T:System.Xml.XmlNameTable" /> associated with this implementation.</span></span></summary>
        <value><span data-ttu-id="eed29-492"><see langword="XmlNameTable" />，可讓您取得節點內字串的擷取版本。</span><span class="sxs-lookup"><span data-stu-id="eed29-492"><see langword="XmlNameTable" /> that enables you to get the atomized version of a string within the node.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="eed29-493"><xref:System.Xml.XmlValidatingReader>類別中已過時[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="eed29-493">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="eed29-494">您可以建立驗證<xref:System.Xml.XmlReader>使用的執行個體<xref:System.Xml.XmlReaderSettings>類別和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="eed29-494">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="eed29-495">如需詳細資訊，請參閱 <xref:System.Xml.XmlReader> 參考頁面的＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="eed29-495">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="eed29-496">從傳回的所有節點和屬性名稱<xref:System.Xml.XmlValidatingReader>會使用不可部分完成`NameTable`。</span><span class="sxs-lookup"><span data-stu-id="eed29-496">All node and attribute names returned from <xref:System.Xml.XmlValidatingReader> are atomized by using the `NameTable`.</span></span> <span data-ttu-id="eed29-497">相同的名稱傳回多次時 (例如`Customer`)，相同`String`物件就會傳回該名稱。</span><span class="sxs-lookup"><span data-stu-id="eed29-497">When the same name is returned multiple times (for example, `Customer`), the same `String` object will be returned for that name.</span></span> <span data-ttu-id="eed29-498">這項功能可讓您撰寫有效率的程式碼，進行物件比較，對這些字串，而不是昂貴的字串比較。</span><span class="sxs-lookup"><span data-stu-id="eed29-498">This makes it possible for you to write efficient code that does object comparisons on these strings instead of expensive string comparisons.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlNameTable" />
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNodeType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlNodeType NodeType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.NodeType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NodeType As XmlNodeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNodeType NodeType { System::Xml::XmlNodeType get(); };" />
      <MemberSignature Language="F#" Value="member this.NodeType : System.Xml.XmlNodeType" Usage="System.Xml.XmlValidatingReader.NodeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eed29-499">取得目前節點的類型。</span><span class="sxs-lookup"><span data-stu-id="eed29-499">Gets the type of the current node.</span></span></summary>
        <value><span data-ttu-id="eed29-500"><see cref="T:System.Xml.XmlNodeType" /> 值之一，代表目前節點的類型。</span><span class="sxs-lookup"><span data-stu-id="eed29-500">One of the <see cref="T:System.Xml.XmlNodeType" /> values representing the type of the current node.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="eed29-501"><xref:System.Xml.XmlValidatingReader>類別中已過時[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="eed29-501">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="eed29-502">您可以建立驗證<xref:System.Xml.XmlReader>使用的執行個體<xref:System.Xml.XmlReaderSettings>類別和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="eed29-502">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="eed29-503">如需詳細資訊，請參閱 <xref:System.Xml.XmlReader> 參考頁面的＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="eed29-503">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="eed29-504">這個屬性永遠不會傳回下列`XmlNodeType`類型： `Document`， `DocumentFragment`， `Entity`，或`Notation`。</span><span class="sxs-lookup"><span data-stu-id="eed29-504">This property never returns the following `XmlNodeType` types: `Document`, `DocumentFragment`, `Entity`, or `Notation`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eed29-505">下列範例會讀取 XML 檔案，並顯示每個節點。</span><span class="sxs-lookup"><span data-stu-id="eed29-505">The following example reads an XML file and displays each of the nodes.</span></span>  
  
 [!code-cpp[Classic WebData XmlValidatingReader.Name Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.Name Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/VB/source.vb#1)]  
  
 <span data-ttu-id="eed29-506">此範例會使用該檔案，`items.xml`作為輸入。</span><span class="sxs-lookup"><span data-stu-id="eed29-506">The example uses the file, `items.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlValidatingReader.Name Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Prefix">
      <MemberSignature Language="C#" Value="public override string Prefix { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Prefix" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.Prefix" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Prefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Prefix { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Prefix : string" Usage="System.Xml.XmlValidatingReader.Prefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eed29-507">取得與目前節點相關聯的命名空間前置詞。</span><span class="sxs-lookup"><span data-stu-id="eed29-507">Gets the namespace prefix associated with the current node.</span></span></summary>
        <value><span data-ttu-id="eed29-508">與目前節點相關聯的命名空間前置詞。</span><span class="sxs-lookup"><span data-stu-id="eed29-508">The namespace prefix associated with the current node.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="eed29-509"><xref:System.Xml.XmlValidatingReader>類別中已過時[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="eed29-509">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="eed29-510">您可以建立驗證<xref:System.Xml.XmlReader>使用的執行個體<xref:System.Xml.XmlReaderSettings>類別和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="eed29-510">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="eed29-511">如需詳細資訊，請參閱 <xref:System.Xml.XmlReader> 參考頁面的＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="eed29-511">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eed29-512">下列範例會讀取 XML 片段。</span><span class="sxs-lookup"><span data-stu-id="eed29-512">The following example reads an XML fragment.</span></span>  
  
 [!code-csharp[Classic WebData XmlParserContext.XmlParserContext Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlParserContext.XmlParserContext Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlParserContext.XmlParserContext Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlParserContext.XmlParserContext Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="QuoteChar">
      <MemberSignature Language="C#" Value="public override char QuoteChar { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char QuoteChar" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.QuoteChar" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property QuoteChar As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property char QuoteChar { char get(); };" />
      <MemberSignature Language="F#" Value="member this.QuoteChar : char" Usage="System.Xml.XmlValidatingReader.QuoteChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eed29-513">取得用來括住屬性節點值的引號字元。</span><span class="sxs-lookup"><span data-stu-id="eed29-513">Gets the quotation mark character used to enclose the value of an attribute node.</span></span></summary>
        <value><span data-ttu-id="eed29-514">用來括住屬性節點值的引號字元 (" 或 ')。</span><span class="sxs-lookup"><span data-stu-id="eed29-514">The quotation mark character (" or ') used to enclose the value of an attribute node.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eed29-515">這個屬性只適用於屬性節點。</span><span class="sxs-lookup"><span data-stu-id="eed29-515">This property applies only to an attribute node.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eed29-516"><xref:System.Xml.XmlValidatingReader>類別中已過時[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="eed29-516">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="eed29-517">您可以建立驗證<xref:System.Xml.XmlReader>使用的執行個體<xref:System.Xml.XmlReaderSettings>類別和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="eed29-517">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="eed29-518">如需詳細資訊，請參閱 <xref:System.Xml.XmlReader> 參考頁面的＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="eed29-518">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override bool Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Read();" />
      <MemberSignature Language="F#" Value="override this.Read : unit -&gt; bool" Usage="xmlValidatingReader.Read " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="eed29-519">從資料流讀取下一個節點。</span><span class="sxs-lookup"><span data-stu-id="eed29-519">Reads the next node from the stream.</span></span></summary>
        <returns><span data-ttu-id="eed29-520">如果成功讀取下一個節點，則為 <see langword="true" />，如果沒有其他節點可讀取，則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="eed29-520"><see langword="true" /> if the next node was read successfully; <see langword="false" /> if there are no more nodes to read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="eed29-521"><xref:System.Xml.XmlValidatingReader>類別中已過時[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="eed29-521">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="eed29-522">您可以建立驗證<xref:System.Xml.XmlReader>使用的執行個體<xref:System.Xml.XmlReaderSettings>類別和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="eed29-522">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="eed29-523">如需詳細資訊，請參閱 <xref:System.Xml.XmlReader> 參考頁面的＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="eed29-523">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="eed29-524">當讀取器第一次建立並初始化時，沒有資訊可用。</span><span class="sxs-lookup"><span data-stu-id="eed29-524">When a reader is first created and initialized, there is no information available.</span></span> <span data-ttu-id="eed29-525">您必須呼叫`Read`讀取的第一個節點。</span><span class="sxs-lookup"><span data-stu-id="eed29-525">You must call `Read` to read the first node.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eed29-526">下列範例會讀取 XML 檔案，並顯示每個節點。</span><span class="sxs-lookup"><span data-stu-id="eed29-526">The following example reads an XML file and displays each node.</span></span>  
  
 [!code-cpp[Classic WebData XmlValidatingReader.Name Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.Name Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/VB/source.vb#1)]  
  
 <span data-ttu-id="eed29-527">此範例會使用該檔案，`items.xml`作為輸入。</span><span class="sxs-lookup"><span data-stu-id="eed29-527">The example uses the file, `items.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlValidatingReader.Name Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="ReadAttributeValue">
      <MemberSignature Language="C#" Value="public override bool ReadAttributeValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ReadAttributeValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.ReadAttributeValue" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadAttributeValue () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ReadAttributeValue();" />
      <MemberSignature Language="F#" Value="override this.ReadAttributeValue : unit -&gt; bool" Usage="xmlValidatingReader.ReadAttributeValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="eed29-528">將屬性值剖析成一或多個 <see langword="Text" />、<see langword="EntityReference" /> 或 <see langword="EndEntity" /> 節點。</span><span class="sxs-lookup"><span data-stu-id="eed29-528">Parses the attribute value into one or more <see langword="Text" />, <see langword="EntityReference" />, or <see langword="EndEntity" /> nodes.</span></span></summary>
        <returns><span data-ttu-id="eed29-529">如果傳回的是節點，則為 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="eed29-529"><see langword="true" /> if there are nodes to return.</span></span>  
  
 <span data-ttu-id="eed29-530">如果在初次呼叫時讀取器不位於屬性節點上，或已讀取所有屬性值，則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="eed29-530"><see langword="false" /> if the reader is not positioned on an attribute node when the initial call is made or if all the attribute values have been read.</span></span>  
  
<span data-ttu-id="eed29-531">空白的屬性 (例如 <c>misc=""</c>) 會對含有 String.Empty 值的單一節點傳回 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="eed29-531">An empty attribute, such as, <c>misc=""</c>, returns <see langword="true" /> with a single node with a value of String.Empty.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="eed29-532"><xref:System.Xml.XmlValidatingReader>類別中已過時[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="eed29-532">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="eed29-533">您可以建立驗證<xref:System.Xml.XmlReader>使用的執行個體<xref:System.Xml.XmlReaderSettings>類別和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="eed29-533">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="eed29-534">如需詳細資訊，請參閱 <xref:System.Xml.XmlReader> 參考頁面的＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="eed29-534">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="eed29-535">使用這個方法之後呼叫<xref:System.Xml.XmlValidatingReader.MoveToAttribute%2A>閱讀的文字或實體參考節點的屬性值所組成。</span><span class="sxs-lookup"><span data-stu-id="eed29-535">Use this method after calling <xref:System.Xml.XmlValidatingReader.MoveToAttribute%2A> to read through the text or entity reference nodes that make up the attribute value.</span></span> <span data-ttu-id="eed29-536"><xref:System.Xml.XmlReader.Depth%2A>的屬性值的節點是一個加上屬性節點的深度。</span><span class="sxs-lookup"><span data-stu-id="eed29-536">The <xref:System.Xml.XmlReader.Depth%2A> of the attribute value nodes is one plus the depth of the attribute node.</span></span> <span data-ttu-id="eed29-537">`Depth`遞增和遞減 1 當您逐步執行和跳離一般實體參考。</span><span class="sxs-lookup"><span data-stu-id="eed29-537">The `Depth` increments and decrements by one when you step into and out of general entity references.</span></span>  
  
 <span data-ttu-id="eed29-538">例如，假設您有下列 XML: `<test name="a &b; c"/>`</span><span class="sxs-lookup"><span data-stu-id="eed29-538">For example, suppose you have the following XML: `<test name="a &b; c"/>`</span></span>  
  
 <span data-ttu-id="eed29-539">其中實體`b`定義於文件類型定義 (DTD)，如下所示： `<!ENTITY b "123">`</span><span class="sxs-lookup"><span data-stu-id="eed29-539">where the entity `b` is defined in the document type definition (DTD) as follows: `<!ENTITY b "123">`</span></span>  
  
 <span data-ttu-id="eed29-540">如果<xref:System.Xml.XmlValidatingReader.EntityHandling%2A>設為`ExpandCharEntities`，下列 C# 程式碼傳回屬性值為兩個文字節點和一個實體參考節點：</span><span class="sxs-lookup"><span data-stu-id="eed29-540">If <xref:System.Xml.XmlValidatingReader.EntityHandling%2A> is set to `ExpandCharEntities`, the following C# code returns the attribute value as two text nodes and one entity reference node:</span></span>  
  
```csharp  
reader.MoveToAttribute("name");  
  while (reader.ReadAttributeValue())  
  {  
  if (reader.NodeType == XmlNodeType.Text)  
  {  
  // at this point reader.Value == "a " or " c"  
  }  
  else if (reader.NodeType == XmlNodeType.EntityReference)  
  {  
  // at this point reader.Name == "b"  
  reader.ResolveEntity();  
  while (reader.ReadAttributeValue() &&  
  reader.NodeType != XmlNodeType.EndEntity)  
  {  
  // reader.Value == "123"  
  }  
  }  
    }  
```  
  
   
  
## Examples  
 <span data-ttu-id="eed29-541">下列範例會讀取文字與實體參考節點的屬性。</span><span class="sxs-lookup"><span data-stu-id="eed29-541">The following example reads an attribute with text and entity reference nodes.</span></span>  
  
 [!code-cpp[Classic WebData XmlValidatingReader.MoveToAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.MoveToAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.MoveToAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.MoveToAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.MoveToAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.MoveToAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsBase64">
      <MemberSignature Language="C#" Value="public override int ReadContentAsBase64 (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadContentAsBase64(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadContentAsBase64 (buffer As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ReadContentAsBase64(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.ReadContentAsBase64 : byte[] * int * int -&gt; int" Usage="xmlValidatingReader.ReadContentAsBase64 (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="eed29-542">將產生的文字複製到其中的緩衝區。</span><span class="sxs-lookup"><span data-stu-id="eed29-542">The buffer into which to copy the resulting text.</span></span> <span data-ttu-id="eed29-543">這個值不能是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="eed29-543">This value cannot be <see langword="null" />.</span></span></param>
        <param name="index"><span data-ttu-id="eed29-544">緩衝區中開始複製結果的位移。</span><span class="sxs-lookup"><span data-stu-id="eed29-544">The offset into the buffer where to start copying the result.</span></span></param>
        <param name="count"><span data-ttu-id="eed29-545">要複製至緩衝區中的最大位元組數目。</span><span class="sxs-lookup"><span data-stu-id="eed29-545">The maximum number of bytes to copy into the buffer.</span></span> <span data-ttu-id="eed29-546">從這個方法傳回所複製的實際位元組數目。</span><span class="sxs-lookup"><span data-stu-id="eed29-546">The actual number of bytes copied is returned from this method.</span></span></param>
        <summary><span data-ttu-id="eed29-547">讀取內容，並傳回 Base64 已解碼的二進位位元組。</span><span class="sxs-lookup"><span data-stu-id="eed29-547">Reads the content and returns the Base64 decoded binary bytes.</span></span></summary>
        <returns><span data-ttu-id="eed29-548">寫入緩衝區的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="eed29-548">The number of bytes written to the buffer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="eed29-549"><xref:System.Xml.XmlValidatingReader>類別中已過時[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="eed29-549">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="eed29-550">您可以建立驗證<xref:System.Xml.XmlReader>使用的執行個體<xref:System.Xml.XmlReaderSettings>類別和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="eed29-550">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="eed29-551">如需詳細資訊，請參閱 <xref:System.Xml.XmlReader> 參考頁面的＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="eed29-551">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span> 
  
 <span data-ttu-id="eed29-552">這個方法內容串流、 解碼 Base64 內容，並傳回已解碼二進位位元組 （例如，內嵌 Base64 編碼 GIF 影像） 到緩衝區。</span><span class="sxs-lookup"><span data-stu-id="eed29-552">This method streams the content, decodes the Base64 content, and returns the decoded binary bytes (for example, an inline Base64 encoded GIF image) into the buffer.</span></span> <span data-ttu-id="eed29-553">可以連續呼叫這個方法來讀取內嵌文字的大量資料流。</span><span class="sxs-lookup"><span data-stu-id="eed29-553">This method can be called successively to read large streams of embedded text.</span></span> <span data-ttu-id="eed29-554">如需詳細資訊，請參閱 RFC 1521"MIME （多用途網際網路郵件延伸標準） 第一個：機制來指定及描述網際網路訊息內文的格式 」。</span><span class="sxs-lookup"><span data-stu-id="eed29-554">For more information, see RFC 1521, "MIME (Multipurpose Internet Mail Extensions) Part One: Mechanisms for Specifying and Describing the Format of Internet Message Bodies".</span></span> <span data-ttu-id="eed29-555">您可以取得從 Rfc[註解的網站要求](https://www.rfc-editor.org)。</span><span class="sxs-lookup"><span data-stu-id="eed29-555">You can obtain RFCs from the [Request for Comments Web site](https://www.rfc-editor.org).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eed29-556">您不應該存取的任何呼叫之間的讀取器屬性<xref:System.Xml.XmlValidatingReader.ReadContentAsBase64%2A>方法，直到這個方法傳回值 0。</span><span class="sxs-lookup"><span data-stu-id="eed29-556">You should not access any of the reader properties between calls to the <xref:System.Xml.XmlValidatingReader.ReadContentAsBase64%2A> method until the method returns the value 0.</span></span>  
  
 <span data-ttu-id="eed29-557">這個方法有下列行為：</span><span class="sxs-lookup"><span data-stu-id="eed29-557">This method has the following behavior:</span></span>  
  
-   <span data-ttu-id="eed29-558"><xref:System.Xml.XmlValidatingReader.ReadContentAsBase64%2A> 當它到達它正在操作的位元組資料流結尾時，會傳回 0 值。</span><span class="sxs-lookup"><span data-stu-id="eed29-558"><xref:System.Xml.XmlValidatingReader.ReadContentAsBase64%2A> returns the value 0 when it has reached the end of the byte stream it was operating on.</span></span> <span data-ttu-id="eed29-559">讀取器定位於第一個非內容節點上。</span><span class="sxs-lookup"><span data-stu-id="eed29-559">The reader is positioned on the first non-content node.</span></span>  
  
-   <span data-ttu-id="eed29-560">如果您尋求更少，或超過會留在資料流讀取位元組的確切數目，會保留在其目前的位置。</span><span class="sxs-lookup"><span data-stu-id="eed29-560">If you ask for fewer, or the exact number, of bytes than are left in the stream, the reader remains in its current position.</span></span>  
  
-   <span data-ttu-id="eed29-561"><xref:System.Xml.XmlValidatingReader.ReadContentAsBase64%2A> 不支援下列的 XML 節點類型：項目、 XmlDeclaration，None、 文件、 DocumentType、 標記法、 實體和 DocumentFragment。</span><span class="sxs-lookup"><span data-stu-id="eed29-561"><xref:System.Xml.XmlValidatingReader.ReadContentAsBase64%2A> is not supported on the following XML node types:  Element, XmlDeclaration, None, Document, DocumentType, Notation, Entity, and DocumentFragment.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eed29-562"><paramref name="buffer" /> 值為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="eed29-562">The <paramref name="buffer" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eed29-563">目前的節點不支援 <see cref="M:System.Xml.XmlValidatingReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" />。</span><span class="sxs-lookup"><span data-stu-id="eed29-563"><see cref="M:System.Xml.XmlValidatingReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" /> is not supported on the current node.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="eed29-564">緩衝區的索引或是索引 + 計數大於所配置的緩衝區大小。</span><span class="sxs-lookup"><span data-stu-id="eed29-564">The index into the buffer or index + count is larger than the allocated buffer size.</span></span></exception>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlValidatingReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="T:System.Xml.XmlNodeType" />
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsBinHex">
      <MemberSignature Language="C#" Value="public override int ReadContentAsBinHex (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadContentAsBinHex(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadContentAsBinHex (buffer As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ReadContentAsBinHex(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.ReadContentAsBinHex : byte[] * int * int -&gt; int" Usage="xmlValidatingReader.ReadContentAsBinHex (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="eed29-565">將產生的文字複製到其中的緩衝區。</span><span class="sxs-lookup"><span data-stu-id="eed29-565">The buffer into which to copy the resulting text.</span></span> <span data-ttu-id="eed29-566">這個值不能是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="eed29-566">This value cannot be <see langword="null" />.</span></span></param>
        <param name="index"><span data-ttu-id="eed29-567">緩衝區中開始複製結果的位移。</span><span class="sxs-lookup"><span data-stu-id="eed29-567">The offset into the buffer where to start copying the result.</span></span></param>
        <param name="count"><span data-ttu-id="eed29-568">要複製至緩衝區中的最大位元組數目。</span><span class="sxs-lookup"><span data-stu-id="eed29-568">The maximum number of bytes to copy into the buffer.</span></span> <span data-ttu-id="eed29-569">從這個方法傳回所複製的實際位元組數目。</span><span class="sxs-lookup"><span data-stu-id="eed29-569">The actual number of bytes copied is returned from this method.</span></span></param>
        <summary><span data-ttu-id="eed29-570">讀取內容，並傳回 BinHex 已解碼的二進位資料。</span><span class="sxs-lookup"><span data-stu-id="eed29-570">Reads the content and returns the BinHex decoded binary bytes.</span></span></summary>
        <returns><span data-ttu-id="eed29-571">寫入緩衝區的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="eed29-571">The number of bytes written to the buffer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="eed29-572"><xref:System.Xml.XmlValidatingReader>類別中已過時[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="eed29-572">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="eed29-573">您可以建立驗證<xref:System.Xml.XmlReader>使用的執行個體<xref:System.Xml.XmlReaderSettings>類別和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="eed29-573">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="eed29-574">如需詳細資訊，請參閱 <xref:System.Xml.XmlReader> 參考頁面的＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="eed29-574">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span> 
  
 <span data-ttu-id="eed29-575">這個方法內容串流、 解碼 BinHex 內容，並傳回已解碼二進位位元組 （例如，內嵌 BinHex 編碼 GIF 影像） 到緩衝區。</span><span class="sxs-lookup"><span data-stu-id="eed29-575">This method streams the content, decodes the BinHex content, and returns the decoded binary bytes (for example, an inline BinHex encoded GIF image) into the buffer.</span></span> <span data-ttu-id="eed29-576">可以連續呼叫這個方法來讀取內嵌文字的大量資料流。</span><span class="sxs-lookup"><span data-stu-id="eed29-576">This method can be called successively to read large streams of embedded text.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eed29-577">您不應該存取的任何呼叫之間的讀取器屬性<xref:System.Xml.XmlValidatingReader.ReadContentAsBinHex%2A>方法，直到這個方法傳回值 0。</span><span class="sxs-lookup"><span data-stu-id="eed29-577">You should not access any of the reader properties between calls to the <xref:System.Xml.XmlValidatingReader.ReadContentAsBinHex%2A> method until the method returns the value 0.</span></span>  
  
 <span data-ttu-id="eed29-578">這個方法有下列行為：</span><span class="sxs-lookup"><span data-stu-id="eed29-578">This method has the following behavior:</span></span>  
  
-   <span data-ttu-id="eed29-579"><xref:System.Xml.XmlValidatingReader.ReadContentAsBinHex%2A> 當它到達它正在操作的位元組資料流結尾時，會傳回 0 值。</span><span class="sxs-lookup"><span data-stu-id="eed29-579"><xref:System.Xml.XmlValidatingReader.ReadContentAsBinHex%2A> returns the value 0 when it has reached the end of the byte stream it was operating on.</span></span> <span data-ttu-id="eed29-580">讀取器定位於第一個非內容節點上。</span><span class="sxs-lookup"><span data-stu-id="eed29-580">The reader is positioned on the first non-content node.</span></span>  
  
-   <span data-ttu-id="eed29-581">如果您尋求更少，或超過會留在資料流讀取位元組的確切數目，會保留在其目前的位置。</span><span class="sxs-lookup"><span data-stu-id="eed29-581">If you ask for fewer, or the exact number, of bytes than are left in the stream, the reader remains in its current position.</span></span>  
  
-   <span data-ttu-id="eed29-582"><xref:System.Xml.XmlValidatingReader.ReadContentAsBinHex%2A> 不支援下列的 XML 節點類型：項目、 XmlDeclaration，None、 文件、 DocumentType、 標記法、 實體和 DocumentFragment。</span><span class="sxs-lookup"><span data-stu-id="eed29-582"><xref:System.Xml.XmlValidatingReader.ReadContentAsBinHex%2A> is not supported on the following XML node types:  Element, XmlDeclaration, None, Document, DocumentType, Notation, Entity, and DocumentFragment.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eed29-583"><paramref name="buffer" /> 值為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="eed29-583">The <paramref name="buffer" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eed29-584">目前的節點不支援 <see cref="M:System.Xml.XmlValidatingReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />。</span><span class="sxs-lookup"><span data-stu-id="eed29-584"><see cref="M:System.Xml.XmlValidatingReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" /> is not supported on the current node.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="eed29-585">緩衝區的索引或是索引 + 計數大於所配置的緩衝區大小。</span><span class="sxs-lookup"><span data-stu-id="eed29-585">The index into the buffer or index + count is larger than the allocated buffer size.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="eed29-586"><see cref="T:System.Xml.XmlValidatingReader" /> 實作不支援這個方法。</span><span class="sxs-lookup"><span data-stu-id="eed29-586">The <see cref="T:System.Xml.XmlValidatingReader" /> implementation does not support this method.</span></span></exception>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlValidatingReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="T:System.Xml.XmlNodeType" />
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsBase64">
      <MemberSignature Language="C#" Value="public override int ReadElementContentAsBase64 (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadElementContentAsBase64(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadElementContentAsBase64 (buffer As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ReadElementContentAsBase64(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.ReadElementContentAsBase64 : byte[] * int * int -&gt; int" Usage="xmlValidatingReader.ReadElementContentAsBase64 (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="eed29-587">將產生的文字複製到其中的緩衝區。</span><span class="sxs-lookup"><span data-stu-id="eed29-587">The buffer into which to copy the resulting text.</span></span> <span data-ttu-id="eed29-588">這個值不能是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="eed29-588">This value cannot be <see langword="null" />.</span></span></param>
        <param name="index"><span data-ttu-id="eed29-589">緩衝區中開始複製結果的位移。</span><span class="sxs-lookup"><span data-stu-id="eed29-589">The offset into the buffer where to start copying the result.</span></span></param>
        <param name="count"><span data-ttu-id="eed29-590">要複製至緩衝區中的最大位元組數目。</span><span class="sxs-lookup"><span data-stu-id="eed29-590">The maximum number of bytes to copy into the buffer.</span></span> <span data-ttu-id="eed29-591">從這個方法傳回所複製的實際位元組數目。</span><span class="sxs-lookup"><span data-stu-id="eed29-591">The actual number of bytes copied is returned from this method.</span></span></param>
        <summary><span data-ttu-id="eed29-592">讀取項目，並將 Base64 內容解碼。</span><span class="sxs-lookup"><span data-stu-id="eed29-592">Reads the element and decodes the Base64 content.</span></span></summary>
        <returns><span data-ttu-id="eed29-593">寫入緩衝區的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="eed29-593">The number of bytes written to the buffer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="eed29-594"><xref:System.Xml.XmlValidatingReader>類別中已過時[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="eed29-594">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="eed29-595">您可以建立驗證<xref:System.Xml.XmlReader>使用的執行個體<xref:System.Xml.XmlReaderSettings>類別和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="eed29-595">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="eed29-596">如需詳細資訊，請參閱 <xref:System.Xml.XmlReader> 參考頁面的＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="eed29-596">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="eed29-597">這個方法讀取項目內容、 使用 Base64 編碼方式，將其解碼，並傳回已解碼二進位位元組 （例如，內嵌 Base64 編碼 GIF 影像） 到緩衝區。</span><span class="sxs-lookup"><span data-stu-id="eed29-597">This method reads the element content, decodes it using Base64 encoding, and returns the decoded binary bytes (for example, an inline Base64 encoded GIF image) into the buffer.</span></span> <span data-ttu-id="eed29-598">如需詳細資訊，請參閱 RFC 1521"MIME （多用途網際網路郵件延伸標準） 第一個：機制來指定及描述網際網路訊息內文的格式 」。</span><span class="sxs-lookup"><span data-stu-id="eed29-598">For more information, see RFC 1521, "MIME (Multipurpose Internet Mail Extensions) Part One: Mechanisms for Specifying and Describing the Format of Internet Message Bodies".</span></span> <span data-ttu-id="eed29-599">您可以取得從 Rfc[註解的網站要求](https://www.rfc-editor.org)。</span><span class="sxs-lookup"><span data-stu-id="eed29-599">You can obtain RFCs from the [Request for Comments Web site](https://www.rfc-editor.org).</span></span>  
  
 <span data-ttu-id="eed29-600">這個方法可以讀取只簡單內容的項目。</span><span class="sxs-lookup"><span data-stu-id="eed29-600">This method can read only simple-content elements.</span></span> <span data-ttu-id="eed29-601">元素可以包含文字、 泛空白字元、 顯著泛空白字元、 CDATA 區段、 註解，以及處理指示。</span><span class="sxs-lookup"><span data-stu-id="eed29-601">The element can contain text, white space, significant white space, CDATA sections, comments, and processing instructions.</span></span> <span data-ttu-id="eed29-602">它也可以包含實體參考，會自動展開。</span><span class="sxs-lookup"><span data-stu-id="eed29-602">It can also contain entity references, which are automatically expanded.</span></span> <span data-ttu-id="eed29-603">項目不能有子項目。</span><span class="sxs-lookup"><span data-stu-id="eed29-603">The element cannot have child elements.</span></span>  
  
 <span data-ttu-id="eed29-604">此方式非常類似於<xref:System.Xml.XmlValidatingReader.ReadContentAsBase64%2A>可以只在項目節點類型上呼叫只是它的方法。</span><span class="sxs-lookup"><span data-stu-id="eed29-604">This method is very similar to the <xref:System.Xml.XmlValidatingReader.ReadContentAsBase64%2A> method except that it can be called only on element node types.</span></span>  
  
 <span data-ttu-id="eed29-605">如果`count`值高於在文件中的位元組數目是否等於在文件中的位元組數目或<xref:System.Xml.XmlValidatingReader>讀取文件中所有剩餘的位元組，並傳回讀取的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="eed29-605">If the `count` value is higher than the number of bytes in the document, or if it is equal to the number of bytes in the document, the <xref:System.Xml.XmlValidatingReader> reads all the remaining bytes in the document and returns the number of bytes read.</span></span> <span data-ttu-id="eed29-606">下一步<xref:System.Xml.XmlValidatingReader>方法呼叫會傳回零，並將讀取器移至節點下列<xref:System.Xml.XmlNodeType.EndElement>。</span><span class="sxs-lookup"><span data-stu-id="eed29-606">The next <xref:System.Xml.XmlValidatingReader> method call returns a zero and moves the reader to the node following the <xref:System.Xml.XmlNodeType.EndElement>.</span></span>  
  
 <span data-ttu-id="eed29-607">如果您呼叫<xref:System.Xml.XmlValidatingReader.Read%2A>會使用所有的項目內容之前，讀取器可能彷彿已在使用第一次的內容，然後<xref:System.Xml.XmlValidatingReader.Read%2A>呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="eed29-607">If you call <xref:System.Xml.XmlValidatingReader.Read%2A> before all of the element content is consumed, the reader may behave as if the first content was consumed and then the <xref:System.Xml.XmlValidatingReader.Read%2A> method was called.</span></span> <span data-ttu-id="eed29-608">這表示讀取器會讀取所有文字，直到遇到結束的項目。</span><span class="sxs-lookup"><span data-stu-id="eed29-608">This means that the reader will read all the text until the end element is encountered.</span></span> <span data-ttu-id="eed29-609">它接著讀取結束標記節點，讀取下一個節點，並接著將本身置於下一個後續節點。</span><span class="sxs-lookup"><span data-stu-id="eed29-609">It will then read the end tag node, read the next node, and then position itself on the next subsequent node.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eed29-610"><paramref name="buffer" /> 值為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="eed29-610">The <paramref name="buffer" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eed29-611">目前的節點不是項目節點。</span><span class="sxs-lookup"><span data-stu-id="eed29-611">The current node is not an element node.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="eed29-612">緩衝區的索引或是索引 + 計數大於所配置的緩衝區大小。</span><span class="sxs-lookup"><span data-stu-id="eed29-612">The index into the buffer or index + count is larger than the allocated buffer size.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="eed29-613"><see cref="T:System.Xml.XmlValidatingReader" /> 實作不支援這個方法。</span><span class="sxs-lookup"><span data-stu-id="eed29-613">The <see cref="T:System.Xml.XmlValidatingReader" /> implementation does not support this method.</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="eed29-614">項目包含混合內容。</span><span class="sxs-lookup"><span data-stu-id="eed29-614">The element contains mixed-content.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="eed29-615">內容無法轉換成要求的類型。</span><span class="sxs-lookup"><span data-stu-id="eed29-615">The content cannot be converted to the requested type.</span></span></exception>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlValidatingReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsBinHex">
      <MemberSignature Language="C#" Value="public override int ReadElementContentAsBinHex (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadElementContentAsBinHex(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadElementContentAsBinHex (buffer As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ReadElementContentAsBinHex(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.ReadElementContentAsBinHex : byte[] * int * int -&gt; int" Usage="xmlValidatingReader.ReadElementContentAsBinHex (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="eed29-616">將產生的文字複製到其中的緩衝區。</span><span class="sxs-lookup"><span data-stu-id="eed29-616">The buffer into which to copy the resulting text.</span></span> <span data-ttu-id="eed29-617">這個值不能是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="eed29-617">This value cannot be <see langword="null" />.</span></span></param>
        <param name="index"><span data-ttu-id="eed29-618">緩衝區中開始複製結果的位移。</span><span class="sxs-lookup"><span data-stu-id="eed29-618">The offset into the buffer where to start copying the result.</span></span></param>
        <param name="count"><span data-ttu-id="eed29-619">要複製至緩衝區中的最大位元組數目。</span><span class="sxs-lookup"><span data-stu-id="eed29-619">The maximum number of bytes to copy into the buffer.</span></span> <span data-ttu-id="eed29-620">從這個方法傳回所複製的實際位元組數目。</span><span class="sxs-lookup"><span data-stu-id="eed29-620">The actual number of bytes copied is returned from this method.</span></span></param>
        <summary><span data-ttu-id="eed29-621">讀取項目，並將 BinHex 內容解碼。</span><span class="sxs-lookup"><span data-stu-id="eed29-621">Reads the element and decodes the BinHex content.</span></span></summary>
        <returns><span data-ttu-id="eed29-622">寫入緩衝區的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="eed29-622">The number of bytes written to the buffer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="eed29-623"><xref:System.Xml.XmlValidatingReader>類別中已過時[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="eed29-623">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="eed29-624">您可以建立驗證<xref:System.Xml.XmlReader>使用的執行個體<xref:System.Xml.XmlReaderSettings>類別和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="eed29-624">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="eed29-625">如需詳細資訊，請參閱 <xref:System.Xml.XmlReader> 參考頁面的＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="eed29-625">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="eed29-626">這個方法讀取項目內容、 使用 BinHex 編碼方式，將其解碼，並傳回已解碼二進位位元組 （例如，內嵌 BinHex 編碼 GIF 影像） 到緩衝區。</span><span class="sxs-lookup"><span data-stu-id="eed29-626">This method reads the element content, decodes it using BinHex encoding, and returns the decoded binary bytes (for example, an inline BinHex encoded GIF image) into the buffer.</span></span>  
  
 <span data-ttu-id="eed29-627">這個方法可以讀取只簡單內容的項目。</span><span class="sxs-lookup"><span data-stu-id="eed29-627">This method can read only simple-content elements.</span></span> <span data-ttu-id="eed29-628">元素可以包含文字、 泛空白字元、 顯著泛空白字元、 CDATA 區段、 註解，以及處理指示。</span><span class="sxs-lookup"><span data-stu-id="eed29-628">The element can contain text, white space, significant white space, CDATA sections, comments, and processing instructions.</span></span> <span data-ttu-id="eed29-629">它也可以包含實體參考，會自動展開。</span><span class="sxs-lookup"><span data-stu-id="eed29-629">It can also contain entity references, which are automatically expanded.</span></span> <span data-ttu-id="eed29-630">項目不能有子項目。</span><span class="sxs-lookup"><span data-stu-id="eed29-630">The element cannot have child elements.</span></span>  
  
 <span data-ttu-id="eed29-631">此方式非常類似於<xref:System.Xml.XmlValidatingReader.ReadContentAsBinHex%2A>可以只在項目節點類型上呼叫只是它的方法。</span><span class="sxs-lookup"><span data-stu-id="eed29-631">This method is very similar to the <xref:System.Xml.XmlValidatingReader.ReadContentAsBinHex%2A> method except that it can be called only on element node types.</span></span>  
  
 <span data-ttu-id="eed29-632">如果`count`值高於在文件中的位元組數目是否等於在文件中的位元組數目或<xref:System.Xml.XmlValidatingReader>讀取文件中所有剩餘的位元組，並傳回讀取的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="eed29-632">If the `count` value is higher than the number of bytes in the document, or if it is equal to the number of bytes in the document, the <xref:System.Xml.XmlValidatingReader> reads all the remaining bytes in the document and returns the number of bytes read.</span></span> <span data-ttu-id="eed29-633">下一步<xref:System.Xml.XmlValidatingReader>方法呼叫會傳回零，並將讀取器移至節點下列<xref:System.Xml.XmlNodeType.EndElement>。</span><span class="sxs-lookup"><span data-stu-id="eed29-633">The next <xref:System.Xml.XmlValidatingReader> method call returns a zero and moves the reader to the node following the <xref:System.Xml.XmlNodeType.EndElement>.</span></span>  
  
 <span data-ttu-id="eed29-634">如果您呼叫<xref:System.Xml.XmlValidatingReader.Read%2A>會使用所有的項目內容之前，讀取器可能彷彿已在使用第一次的內容，然後<xref:System.Xml.XmlValidatingReader.Read%2A>呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="eed29-634">If you call <xref:System.Xml.XmlValidatingReader.Read%2A> before all of the element content is consumed, the reader may behave as if the first content was consumed and then the <xref:System.Xml.XmlValidatingReader.Read%2A> method was called.</span></span> <span data-ttu-id="eed29-635">這表示讀取器會讀取所有文字，直到遇到結束的項目。</span><span class="sxs-lookup"><span data-stu-id="eed29-635">This means that the reader will read all the text until the end element is encountered.</span></span> <span data-ttu-id="eed29-636">它接著讀取結束標記節點，讀取下一個節點，並接著將本身置於下一個後續節點。</span><span class="sxs-lookup"><span data-stu-id="eed29-636">It will then read the end tag node, read the next node, and then position itself on the next subsequent node.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eed29-637"><paramref name="buffer" /> 值為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="eed29-637">The <paramref name="buffer" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eed29-638">目前的節點不是項目節點。</span><span class="sxs-lookup"><span data-stu-id="eed29-638">The current node is not an element node.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="eed29-639">緩衝區的索引或是索引 + 計數大於所配置的緩衝區大小。</span><span class="sxs-lookup"><span data-stu-id="eed29-639">The index into the buffer or index + count is larger than the allocated buffer size.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="eed29-640"><see cref="T:System.Xml.XmlValidatingReader" /> 實作不支援這個方法。</span><span class="sxs-lookup"><span data-stu-id="eed29-640">The <see cref="T:System.Xml.XmlValidatingReader" /> implementation does not support this method.</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="eed29-641">項目包含混合內容。</span><span class="sxs-lookup"><span data-stu-id="eed29-641">The element contains mixed-content.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="eed29-642">內容無法轉換成要求的類型。</span><span class="sxs-lookup"><span data-stu-id="eed29-642">The content cannot be converted to the requested type.</span></span></exception>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlValidatingReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Reader">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Reader { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlReader Reader" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.Reader" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Reader As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlReader ^ Reader { System::Xml::XmlReader ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Reader : System.Xml.XmlReader" Usage="System.Xml.XmlValidatingReader.Reader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eed29-643">取得用來建構這個 <see langword="XmlValidatingReader" /> 的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="eed29-643">Gets the <see cref="T:System.Xml.XmlReader" /> used to construct this <see langword="XmlValidatingReader" />.</span></span></summary>
        <value><span data-ttu-id="eed29-644">建構函式中指定的 <see langword="XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="eed29-644">The <see langword="XmlReader" /> specified in the constructor.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="eed29-645"><xref:System.Xml.XmlValidatingReader>類別中已過時[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="eed29-645">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="eed29-646">您可以建立驗證<xref:System.Xml.XmlReader>使用的執行個體<xref:System.Xml.XmlReaderSettings>類別和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="eed29-646">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="eed29-647">如需詳細資訊，請參閱 <xref:System.Xml.XmlReader> 參考頁面的＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="eed29-647">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="eed29-648">這個屬性可讓使用者存取所提供的讀取器的特定屬性。</span><span class="sxs-lookup"><span data-stu-id="eed29-648">This property allows the user to access properties specific to the supplied reader.</span></span> <span data-ttu-id="eed29-649">它會傳回具型別`XmlReader`。</span><span class="sxs-lookup"><span data-stu-id="eed29-649">It returns a typed `XmlReader`.</span></span> <span data-ttu-id="eed29-650">使用者應該查詢類型，再轉型。</span><span class="sxs-lookup"><span data-stu-id="eed29-650">The user should query for the type before casting.</span></span>  
  
 <span data-ttu-id="eed29-651">變更傳回的讀取器 （例如，呼叫其中一個讀取的方法） 的狀態可能會導致無法預期的結果。</span><span class="sxs-lookup"><span data-stu-id="eed29-651">Changing the state of the returned reader (for example, calling one of the read methods) can lead to unpredictable results.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="ReadState">
      <MemberSignature Language="C#" Value="public override System.Xml.ReadState ReadState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.ReadState ReadState" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.ReadState" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ReadState As ReadState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::ReadState ReadState { System::Xml::ReadState get(); };" />
      <MemberSignature Language="F#" Value="member this.ReadState : System.Xml.ReadState" Usage="System.Xml.XmlValidatingReader.ReadState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.ReadState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eed29-652">取得讀取器的狀態。</span><span class="sxs-lookup"><span data-stu-id="eed29-652">Gets the state of the reader.</span></span></summary>
        <value><span data-ttu-id="eed29-653">其中一個 <see cref="T:System.Xml.ReadState" /> 值。</span><span class="sxs-lookup"><span data-stu-id="eed29-653">One of the <see cref="T:System.Xml.ReadState" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="eed29-654"><xref:System.Xml.XmlValidatingReader>類別中已過時[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="eed29-654">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="eed29-655">您可以建立驗證<xref:System.Xml.XmlReader>使用的執行個體<xref:System.Xml.XmlReaderSettings>類別和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="eed29-655">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="eed29-656">如需詳細資訊，請參閱 <xref:System.Xml.XmlReader> 參考頁面的＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="eed29-656">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="ReadString">
      <MemberSignature Language="C#" Value="public override string ReadString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ReadString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.ReadString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ReadString();" />
      <MemberSignature Language="F#" Value="override this.ReadString : unit -&gt; string" Usage="xmlValidatingReader.ReadString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="eed29-657">將項目或文字節點的內容當做字串讀取。</span><span class="sxs-lookup"><span data-stu-id="eed29-657">Reads the contents of an element or text node as a string.</span></span></summary>
        <returns><span data-ttu-id="eed29-658">項目或文字節點的內容。</span><span class="sxs-lookup"><span data-stu-id="eed29-658">The contents of the element or text node.</span></span> <span data-ttu-id="eed29-659">如果讀取器不在項目或文字節點上，或目前內容中沒有其他可傳回的文字內容，則可為空字串。</span><span class="sxs-lookup"><span data-stu-id="eed29-659">This can be an empty string if the reader is positioned on something other than an element or text node, or if there is no more text content to return in the current context.</span></span>  
  
 <block subset="none" type="note"><para>  
 <span data-ttu-id="eed29-660">文字節點可為項目或屬性文字節點。</span><span class="sxs-lookup"><span data-stu-id="eed29-660">The text node can be either an element or an attribute text node.</span></span>  
  
</para></block></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="eed29-661"><xref:System.Xml.XmlValidatingReader>類別中已過時[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="eed29-661">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="eed29-662">您可以建立驗證<xref:System.Xml.XmlReader>使用的執行個體<xref:System.Xml.XmlReaderSettings>類別和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="eed29-662">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="eed29-663">如需詳細資訊，請參閱 <xref:System.Xml.XmlReader> 參考頁面的＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="eed29-663">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="eed29-664">如果置於項目，`ReadString`串連所有文字、 顯著泛空白字元、 泛空白字元和 CDATA 區段節點類型，並傳回串連的資料，做為項目內容。</span><span class="sxs-lookup"><span data-stu-id="eed29-664">If positioned on an element, `ReadString` concatenates all text, significant white space, white space, and CDATA section node types together and returns the concatenated data as the element content.</span></span> <span data-ttu-id="eed29-665">讀取器會停止時遇到任何標記，包括註解和處理指示。</span><span class="sxs-lookup"><span data-stu-id="eed29-665">The reader stops when any markup is encountered, including comments and processing instructions.</span></span> <span data-ttu-id="eed29-666">這可能會發生於混合內容模型中，或是讀取項目結束標記時。</span><span class="sxs-lookup"><span data-stu-id="eed29-666">This could occur in a mixed content model, or when an element end tag is read.</span></span>  
  
 <span data-ttu-id="eed29-667">如果在文字節點，`ReadString`加入項目結束標記中，執行從文字節點的相同串連。</span><span class="sxs-lookup"><span data-stu-id="eed29-667">If positioned on a text node, `ReadString` performs the same concatenation from the text node to the element end tag.</span></span> <span data-ttu-id="eed29-668">如果讀取器定位於屬性文字節點上，則 `ReadString` 具有相同的功能，就像讀取器定位於項目開始標記上一樣。</span><span class="sxs-lookup"><span data-stu-id="eed29-668">If the reader is positioned on an attribute text node, `ReadString` has the same functionality as if the reader were position on the element start tag.</span></span> <span data-ttu-id="eed29-669">它會傳回所有串連的項目文字節點。</span><span class="sxs-lookup"><span data-stu-id="eed29-669">It returns all the concatenated element text nodes.</span></span>  
  
 <span data-ttu-id="eed29-670"><xref:System.Xml.XmlValidatingReader.EntityHandling%2A>屬性會決定如何`ReadString`的運作方式如下：</span><span class="sxs-lookup"><span data-stu-id="eed29-670">The <xref:System.Xml.XmlValidatingReader.EntityHandling%2A> property determines how `ReadString` works as follows:</span></span>  
  
|<span data-ttu-id="eed29-671">值</span><span class="sxs-lookup"><span data-stu-id="eed29-671">Value</span></span>|<span data-ttu-id="eed29-672">描述</span><span class="sxs-lookup"><span data-stu-id="eed29-672">Description</span></span>|  
|-----------|-----------------|  
|<span data-ttu-id="eed29-673">ExpandEntities</span><span class="sxs-lookup"><span data-stu-id="eed29-673">ExpandEntities</span></span>|<span data-ttu-id="eed29-674">傳回擴充的字元以及一般實體。</span><span class="sxs-lookup"><span data-stu-id="eed29-674">Returns expanded character and general entities.</span></span> <span data-ttu-id="eed29-675">這是預設值。</span><span class="sxs-lookup"><span data-stu-id="eed29-675">This is the default.</span></span>|  
|<span data-ttu-id="eed29-676">ExpandCharEntities</span><span class="sxs-lookup"><span data-stu-id="eed29-676">ExpandCharEntities</span></span>|<span data-ttu-id="eed29-677">傳回的文字內容，但不是包括一般實體參考。</span><span class="sxs-lookup"><span data-stu-id="eed29-677">Returns the text content up to but not including a general entity reference.</span></span> <span data-ttu-id="eed29-678">這表示一般的實體會導致 ReadString 停止。</span><span class="sxs-lookup"><span data-stu-id="eed29-678">This means a general entity causes ReadString to stop.</span></span> <span data-ttu-id="eed29-679">您必須呼叫`Read`進入實體參考。</span><span class="sxs-lookup"><span data-stu-id="eed29-679">You must call `Read` to step over the entity reference.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="eed29-680">下列範例會顯示每個元素的文字內容。</span><span class="sxs-lookup"><span data-stu-id="eed29-680">The following example displays the text content of each of the elements.</span></span>  
  
 [!code-cpp[Classic WebData XmlValidatingReader.IsEmptyElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.IsEmptyElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.IsEmptyElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.IsEmptyElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.IsEmptyElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.IsEmptyElement Example/VB/source.vb#1)]  
  
 <span data-ttu-id="eed29-681">此範例會使用該檔案，`elems.xml`作為輸入。</span><span class="sxs-lookup"><span data-stu-id="eed29-681">The example uses the file, `elems.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlValidatingReader.IsEmptyElement Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.IsEmptyElement Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="ReadTypedValue">
      <MemberSignature Language="C#" Value="public object ReadTypedValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ReadTypedValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.ReadTypedValue" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadTypedValue () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ReadTypedValue();" />
      <MemberSignature Language="F#" Value="member this.ReadTypedValue : unit -&gt; obj" Usage="xmlValidatingReader.ReadTypedValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="eed29-682">取得指定的 XML 結構描述定義語言 (XSD) 類型的 Common Language Runtime 類型。</span><span class="sxs-lookup"><span data-stu-id="eed29-682">Gets the common language runtime type for the specified XML Schema definition language (XSD) type.</span></span></summary>
        <returns><span data-ttu-id="eed29-683">指定 XML 結構描述類型的 Common Language Runtime 類型。</span><span class="sxs-lookup"><span data-stu-id="eed29-683">The common language runtime type for the specified XML Schema type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="eed29-684"><xref:System.Xml.XmlValidatingReader>類別中已過時[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="eed29-684">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="eed29-685">您可以建立驗證<xref:System.Xml.XmlReader>使用的執行個體<xref:System.Xml.XmlReaderSettings>類別和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="eed29-685">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="eed29-686">如需詳細資訊，請參閱 <xref:System.Xml.XmlReader> 參考頁面的＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="eed29-686">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="eed29-687">比方說，如果結構描述型別指`xsd:int`，執行階段型別`int32`傳回物件。</span><span class="sxs-lookup"><span data-stu-id="eed29-687">For example, if the schema type is defined as `xsd:int`, the runtime type `int32` is returned for the object.</span></span> <span data-ttu-id="eed29-688">這可以使用測試<xref:System.Object.GetType%2A>方法，並轉換適當。</span><span class="sxs-lookup"><span data-stu-id="eed29-688">This can be tested using the <xref:System.Object.GetType%2A> method and cast accordingly.</span></span> <span data-ttu-id="eed29-689"><xref:System.Xml.XmlValidatingReader.ReadTypedValue%2A>方法一律會傳回衍生自類型<xref:System.Object>類別。</span><span class="sxs-lookup"><span data-stu-id="eed29-689">The <xref:System.Xml.XmlValidatingReader.ReadTypedValue%2A> method always returns a type that is derived from the <xref:System.Object> class.</span></span> <span data-ttu-id="eed29-690">它永遠不會傳回<xref:System.Object>型別。</span><span class="sxs-lookup"><span data-stu-id="eed29-690">It never returns the <xref:System.Object> type.</span></span>  
  
 <span data-ttu-id="eed29-691">如果讀取器定位於屬性，這個方法會傳回執行階段型別的物件，但不會變更讀取器的位置。</span><span class="sxs-lookup"><span data-stu-id="eed29-691">If the reader is positioned on an attribute, this method returns the runtime typed object, but does not change the position of the reader.</span></span> <span data-ttu-id="eed29-692">如果讀取器定位於項目，`ReadTypedValue`讀取任何 CDATA、 文字、 泛空白字元、 顯著的泛空白字元和註解節點，傳回執行階段型別的物件，並將讀取器置於結束標記上。</span><span class="sxs-lookup"><span data-stu-id="eed29-692">If the reader is positioned on an element, `ReadTypedValue` reads any CDATA, text, white space, significant white space, and comment nodes, returns the runtime typed object and positions the reader on the end tag.</span></span> <span data-ttu-id="eed29-693">並沒有直接的對應，例如任何型別`NMTOKENS`，會以字串形式傳回。</span><span class="sxs-lookup"><span data-stu-id="eed29-693">Any types that do not have a direct mapping, for example `NMTOKENS`, are returned as strings.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eed29-694">如果<xref:System.Xml.XmlValidatingReader.ValidationType%2A>byla nastavena ValidationType.None，以資料型別資訊未提供從結構描述或文件類型定義 (Dtd)。</span><span class="sxs-lookup"><span data-stu-id="eed29-694">If <xref:System.Xml.XmlValidatingReader.ValidationType%2A> has been set to ValidationType.None, data type information is not provided from either schemas or document type definitions (DTDs).</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="eed29-695">之後呼叫<xref:System.Xml.XmlValidatingReader.Close%2A>，`ReadTypedValue`會傳回`null`。</span><span class="sxs-lookup"><span data-stu-id="eed29-695">After calling <xref:System.Xml.XmlValidatingReader.Close%2A>, `ReadTypedValue` will return `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eed29-696">下列範例顯示 XML 文件中的每個元素的類型資訊。</span><span class="sxs-lookup"><span data-stu-id="eed29-696">The following example displays the type information for each of the elements in the XML document.</span></span>  
  
 [!code-cpp[XmlValidatingReader.SchemaType#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlValidatingReader.SchemaType/CPP/schematype.cpp#1)]
 [!code-csharp[XmlValidatingReader.SchemaType#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlValidatingReader.SchemaType/CS/schematype.cs#1)]
 [!code-vb[XmlValidatingReader.SchemaType#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlValidatingReader.SchemaType/VB/schematype.vb#1)]  
  
 <span data-ttu-id="eed29-697">此範例會使用下列的輸入的檔案。</span><span class="sxs-lookup"><span data-stu-id="eed29-697">The example uses the following input files.</span></span>  
  
 `booksSchema.xml`  
  
 [!code-xml[XmlValidatingReader.SchemaType#2](~/samples/snippets/xml/VS_Snippets_Data/XmlValidatingReader.SchemaType/XML/booksschema.xml#2)]  
  
 `books.xsd`  
  
 [!code-xml[XmlValidatingReader.SchemaType#3](~/samples/snippets/xml/VS_Snippets_Data/XmlValidatingReader.SchemaType/XML/books.xsd#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="ResolveEntity">
      <MemberSignature Language="C#" Value="public override void ResolveEntity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ResolveEntity() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.ResolveEntity" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ResolveEntity ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ResolveEntity();" />
      <MemberSignature Language="F#" Value="override this.ResolveEntity : unit -&gt; unit" Usage="xmlValidatingReader.ResolveEntity " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="eed29-698">解析 <see langword="EntityReference" /> 節點的實體參考。</span><span class="sxs-lookup"><span data-stu-id="eed29-698">Resolves the entity reference for <see langword="EntityReference" /> nodes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="eed29-699"><xref:System.Xml.XmlValidatingReader>類別中已過時[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="eed29-699">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="eed29-700">您可以建立驗證<xref:System.Xml.XmlReader>使用的執行個體<xref:System.Xml.XmlReaderSettings>類別和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="eed29-700">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="eed29-701">如需詳細資訊，請參閱 <xref:System.Xml.XmlReader> 參考頁面的＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="eed29-701">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="eed29-702">如果讀取器置於`EntityReference`節點 (`XmlNodeType.EntityReference`)，如果<xref:System.Xml.XmlValidatingReader.Read%2A>之後的呼叫此方法中，實體取代的文字會剖析。</span><span class="sxs-lookup"><span data-stu-id="eed29-702">If the reader is positioned on an `EntityReference` node (`XmlNodeType.EntityReference`), if <xref:System.Xml.XmlValidatingReader.Read%2A> is called after calling this method, the entity replacement text is parsed.</span></span> <span data-ttu-id="eed29-703">實體取代的文字完成後，`EndEntity`節點會傳回關閉的實體參考的範圍。</span><span class="sxs-lookup"><span data-stu-id="eed29-703">After the entity replacement text is finished, an `EndEntity` node is returned to close the entity reference scope.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eed29-704">之後呼叫這個方法，如果實體是組件的屬性值，您必須呼叫<xref:System.Xml.XmlValidatingReader.ReadAttributeValue%2A>逐步執行至實體。</span><span class="sxs-lookup"><span data-stu-id="eed29-704">After calling this method, if the entity is part of an attribute value, you must call <xref:System.Xml.XmlValidatingReader.ReadAttributeValue%2A> to step into the entity.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eed29-705">下列範例會使用`ResolveEntity`展開一般實體。</span><span class="sxs-lookup"><span data-stu-id="eed29-705">The following example uses `ResolveEntity` to expand a general entity.</span></span>  
  
 [!code-cpp[Classic WebData XmlValidatingReader.ResolveEntity Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.ResolveEntity Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.ResolveEntity Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.ResolveEntity Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.ResolveEntity Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.ResolveEntity Example/VB/source.vb#1)]  
  
 <span data-ttu-id="eed29-706">此範例會使用該檔案，`book1.xml`作為輸入。</span><span class="sxs-lookup"><span data-stu-id="eed29-706">The example uses the file, `book1.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlValidatingReader.ResolveEntity Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.ResolveEntity Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eed29-707">讀取器不位於<see langword="EntityReference" />節點。</span><span class="sxs-lookup"><span data-stu-id="eed29-707">The reader is not positioned on an <see langword="EntityReference" /> node.</span></span></exception>
        <altmember cref="T:System.Xml.EntityHandling" />
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Schemas">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaCollection Schemas { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.XmlSchemaCollection Schemas" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.Schemas" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Schemas As XmlSchemaCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaCollection ^ Schemas { System::Xml::Schema::XmlSchemaCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Schemas : System.Xml.Schema.XmlSchemaCollection" Usage="System.Xml.XmlValidatingReader.Schemas" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eed29-708">取得用來驗證的 <see cref="T:System.Xml.Schema.XmlSchemaCollection" />。</span><span class="sxs-lookup"><span data-stu-id="eed29-708">Gets a <see cref="T:System.Xml.Schema.XmlSchemaCollection" /> to use for validation.</span></span></summary>
        <value><span data-ttu-id="eed29-709">用來驗證的 <see langword="XmlSchemaCollection" />。</span><span class="sxs-lookup"><span data-stu-id="eed29-709">The <see langword="XmlSchemaCollection" /> to use for validation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="eed29-710"><xref:System.Xml.XmlValidatingReader>類別中已過時[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="eed29-710">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="eed29-711">您可以建立驗證<xref:System.Xml.XmlReader>使用的執行個體<xref:System.Xml.XmlReaderSettings>類別和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="eed29-711">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="eed29-712">如需詳細資訊，請參閱 <xref:System.Xml.XmlReader> 參考頁面的＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="eed29-712">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="eed29-713">`XmlSchemaCollection`保留預先載入的 XML 資料精簡 (XDR) 和 XML 結構描述定義語言 (XSD) 結構描述。</span><span class="sxs-lookup"><span data-stu-id="eed29-713">The `XmlSchemaCollection` holds pre-loaded XML-Data Reduced (XDR) and XML Schema definition language (XSD) schemas.</span></span> <span data-ttu-id="eed29-714">這個屬性的結構描述快取，讓讀取者存取權，並允許驗證，而不需要每次重新載入結構描述。</span><span class="sxs-lookup"><span data-stu-id="eed29-714">This property gives the reader access to the cache of schemas and allows it to validate without having to re-load schemas every time.</span></span> <span data-ttu-id="eed29-715">讀取器不會新增任何項目`XmlSchemaCollection`。</span><span class="sxs-lookup"><span data-stu-id="eed29-715">The reader does not add anything to the `XmlSchemaCollection`.</span></span>  
  
 <span data-ttu-id="eed29-716">如果`XmlSchemaCollection`包含 XML 結構描述 (XSD) 所在`include`或`import`參考其他命名空間的結構描述，這些命名空間是僅供驗證載入的項目。</span><span class="sxs-lookup"><span data-stu-id="eed29-716">If the `XmlSchemaCollection` includes an XML schema (XSD) which contains `include` or `import` elements that reference other namespaces, the schemas for these other namespaces are loaded for validation purposes only.</span></span> <span data-ttu-id="eed29-717">這些結構描述已明確加入至結構描述集合，除非他們將無法存取使用任何集合方法或屬性。</span><span class="sxs-lookup"><span data-stu-id="eed29-717">Unless these schemas were explicitly added to the schema collection, they will not be accessible using any of the collection methods or properties.</span></span> <span data-ttu-id="eed29-718">例如，如果集合包含的結構描述檔案`a.xsd`，其中包含結構描述檔案的參考`b.xsd`，您必須新增`b.xsd`結構描述集合才能使用任何集合方法或屬性加以存取。</span><span class="sxs-lookup"><span data-stu-id="eed29-718">For example, if the collection contains the schema file `a.xsd`, which contains a reference to the schema file `b.xsd`, you must add `b.xsd` to the schema collection before you can access it using any of the collection methods or properties.</span></span>  
  
 <span data-ttu-id="eed29-719">當`XmlSchemaCollection`使用來存取`Schemas`屬性，<xref:System.Xml.Schema.XmlSchemaCollection.Add%2A?displayProperty=nameWithType>方法會使用<xref:System.Xml.XmlResolver>所指定<xref:System.Xml.XmlValidatingReader.XmlResolver%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="eed29-719">When the `XmlSchemaCollection` is accessed using the `Schemas` property, the <xref:System.Xml.Schema.XmlSchemaCollection.Add%2A?displayProperty=nameWithType> method uses the <xref:System.Xml.XmlResolver> specified by the <xref:System.Xml.XmlValidatingReader.XmlResolver%2A?displayProperty=nameWithType> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eed29-720">結構描述必須加入至`XmlSchemaCollection`之前，先`Read`呼叫。</span><span class="sxs-lookup"><span data-stu-id="eed29-720">The schemas must be added to the `XmlSchemaCollection` before the first `Read` call.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eed29-721">下列範例會驗證使用儲存在 XmlSchemaCollection 結構描述的三個 XML 檔案。</span><span class="sxs-lookup"><span data-stu-id="eed29-721">The following example validates three XML files using schemas stored in the XmlSchemaCollection.</span></span>  
  
 [!code-cpp[Classic WebData XmlValidatingReader.Schemas Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.Schemas Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.Schemas Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.Schemas Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.Schemas Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.Schemas Example/VB/source.vb#1)]  
  
 <span data-ttu-id="eed29-722">此範例會使用下列的 5 個輸入的檔案：</span><span class="sxs-lookup"><span data-stu-id="eed29-722">The sample uses the following five input files:</span></span>  
  
 `booksSchema.xml`  
  
 [!code-xml[Classic WebData XmlValidatingReader.Schemas Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.Schemas Example/XML/source.xml#2)]  
  
 `booksSchemaFail.xml`  
  
 [!code-xml[Classic WebData XmlValidatingReader.Schemas Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.Schemas Example/XML/source.xml#3)]  
  
 `newbooks.xml`  
  
 [!code-xml[Classic WebData XmlValidatingReader.Schemas Example#4](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.Schemas Example/XML/source.xml#4)]  
  
 `books.xsd`  
  
 [!code-xml[Classic WebData XmlValidatingReader.Schemas Example#5](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.Schemas Example/XML/source.xml#5)]  
  
 `schema1.xdr`  
  
 [!code-xml[Classic WebData XmlValidatingReader.Schemas Example#6](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.Schemas Example/XML/source.xml#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="SchemaType">
      <MemberSignature Language="C#" Value="public object SchemaType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SchemaType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.SchemaType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SchemaType As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SchemaType { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SchemaType : obj" Usage="System.Xml.XmlValidatingReader.SchemaType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eed29-723">取得結構描述類型物件。</span><span class="sxs-lookup"><span data-stu-id="eed29-723">Gets a schema type object.</span></span></summary>
        <value><span data-ttu-id="eed29-724"><see cref="T:System.Xml.Schema.XmlSchemaDatatype" />、<see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> 或 <see cref="T:System.Xml.Schema.XmlSchemaComplexType" />，視節點值為內建的 XML 結構描述定義語言 (XSD) 類型或使用者自訂的 simpleType 或 complexType 而定，如果目前節點沒有結構描述類型，則為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="eed29-724"><see cref="T:System.Xml.Schema.XmlSchemaDatatype" />, <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" />, or <see cref="T:System.Xml.Schema.XmlSchemaComplexType" /> depending whether the node value is a built in XML Schema definition language (XSD) type or a user defined simpleType or complexType; <see langword="null" /> if the current node has no schema type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="eed29-725"><xref:System.Xml.XmlValidatingReader>類別中已過時[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="eed29-725">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="eed29-726">您可以建立驗證<xref:System.Xml.XmlReader>使用的執行個體<xref:System.Xml.XmlReaderSettings>類別和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="eed29-726">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="eed29-727">如需詳細資訊，請參閱 <xref:System.Xml.XmlReader> 參考頁面的＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="eed29-727">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="eed29-728">使用者需要測試傳回的型別。</span><span class="sxs-lookup"><span data-stu-id="eed29-728">The user needs to test for the returned type.</span></span> <span data-ttu-id="eed29-729">例如，套用至物件的</span><span class="sxs-lookup"><span data-stu-id="eed29-729">For example,</span></span>  
  
```csharp  
object obj = vreader.SchemaType;  
 if (obj is XmlSchemaType)  
 {  
   XmlSchemaType st = (XmlSchemaType)obj;  
   // use XmlSchemaType object  
 }  
 if (obj is XmlSchemaDatatype)  
 {  
   XmlSchemaDatatype sd = (XmlSchemaDatatype)obj;  
   Type vt = sd.ValueType;  
   // use XmlSchemaDatatype object  
       }  
```  
  
 <span data-ttu-id="eed29-730">執行 XML 結構描述驗證時，如果`XmlSchemaType`或`XmlSchemaDatatype`對應至所讀取的目前項目。</span><span class="sxs-lookup"><span data-stu-id="eed29-730">If XML Schema validation is being performed, the `XmlSchemaType` or `XmlSchemaDatatype` corresponds to the current element being read.</span></span> <span data-ttu-id="eed29-731">如果正在執行文件類型定義 （DTD 驗證），則這個屬性會傳回`null`。</span><span class="sxs-lookup"><span data-stu-id="eed29-731">If document type definition (DTD validation) is being performed, this property returns `null`.</span></span>  
  
 <span data-ttu-id="eed29-732">`XmlSchemaDatatype` 會傳回目前的項目或屬性，如果是簡單類型，可以指定的簡單型別，例如最小和最大的特殊的驗證條件約束。</span><span class="sxs-lookup"><span data-stu-id="eed29-732">`XmlSchemaDatatype` is returned if the current element, or attribute, is a simple type that can specify special validation constraints on the simple types, like min and max.</span></span>  
  
 <span data-ttu-id="eed29-733">`XmlSchemaSimpleType` 會傳回目前的項目或屬性，如果是使用者定義的簡單型別。</span><span class="sxs-lookup"><span data-stu-id="eed29-733">`XmlSchemaSimpleType` is returned if the current element, or attribute, is a user defined simpleType.</span></span>  
  
 <span data-ttu-id="eed29-734">`XmlSchemaComplexType` 會傳回目前的項目是否使用者定義的 complexType。</span><span class="sxs-lookup"><span data-stu-id="eed29-734">`XmlSchemaComplexType` is returned if the current element is a user defined complexType.</span></span> <span data-ttu-id="eed29-735">此類型不能傳回屬性。</span><span class="sxs-lookup"><span data-stu-id="eed29-735">This type cannot be returned by attributes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eed29-736">如果<xref:System.Xml.XmlValidatingReader.ValidationType%2A>byla nastavena ValidationType.None，為了從結構描述或 Dtd 提供任何資料型別資訊。</span><span class="sxs-lookup"><span data-stu-id="eed29-736">If <xref:System.Xml.XmlValidatingReader.ValidationType%2A> has been set to ValidationType.None, no data type information is provided from either schemas or DTDs.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="eed29-737">之後呼叫<xref:System.Xml.XmlValidatingReader.Close%2A>，SchemaType 將會傳回 Null。</span><span class="sxs-lookup"><span data-stu-id="eed29-737">After calling <xref:System.Xml.XmlValidatingReader.Close%2A>, SchemaType will return Null.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eed29-738">下列範例顯示 XML 文件中的每個元素的類型資訊。</span><span class="sxs-lookup"><span data-stu-id="eed29-738">The following example displays the type information for each of the elements in the XML document.</span></span>  
  
 [!code-cpp[XmlValidatingReader.SchemaType#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlValidatingReader.SchemaType/CPP/schematype.cpp#1)]
 [!code-csharp[XmlValidatingReader.SchemaType#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlValidatingReader.SchemaType/CS/schematype.cs#1)]
 [!code-vb[XmlValidatingReader.SchemaType#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlValidatingReader.SchemaType/VB/schematype.vb#1)]  
  
 <span data-ttu-id="eed29-739">此範例會使用下列的輸入的檔案。</span><span class="sxs-lookup"><span data-stu-id="eed29-739">The example uses the following input files.</span></span>  
  
 `booksSchema.xml`  
  
 [!code-xml[XmlValidatingReader.SchemaType#2](~/samples/snippets/xml/VS_Snippets_Data/XmlValidatingReader.SchemaType/XML/booksschema.xml#2)]  
  
 `books.xsd`  
  
 [!code-xml[XmlValidatingReader.SchemaType#3](~/samples/snippets/xml/VS_Snippets_Data/XmlValidatingReader.SchemaType/XML/books.xsd#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Settings">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlReaderSettings Settings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlReaderSettings Settings" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.Settings" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Settings As XmlReaderSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlReaderSettings ^ Settings { System::Xml::XmlReaderSettings ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Settings : System.Xml.XmlReaderSettings" Usage="System.Xml.XmlValidatingReader.Settings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReaderSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eed29-740">取得 <see cref="T:System.Xml.XmlReaderSettings" /> 物件，用於建立這個 <see cref="T:System.Xml.XmlValidatingReader" /> 執行個體。</span><span class="sxs-lookup"><span data-stu-id="eed29-740">Gets the <see cref="T:System.Xml.XmlReaderSettings" /> object that was used to create this <see cref="T:System.Xml.XmlValidatingReader" /> instance.</span></span></summary>
        <value><span data-ttu-id="eed29-741">因為未使用 <see cref="T:System.Xml.XmlReaderSettings" /> 類別和 <see cref="Overload:System.Xml.XmlReader.Create" /> 方法具現化 <see cref="T:System.Xml.XmlValidatingReader" /> 物件，所以為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="eed29-741"><see langword="null" /> because <see cref="T:System.Xml.XmlValidatingReader" /> objects are not instantiated using the <see cref="T:System.Xml.XmlReaderSettings" /> class and the <see cref="Overload:System.Xml.XmlReader.Create" /> method.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  

> [!NOTE]
> <span data-ttu-id="eed29-742">在 .NET Framework 2.0 版中，<xref:System.Xml.XmlValidatingReader> 類別已過時。</span><span class="sxs-lookup"><span data-stu-id="eed29-742">The <xref:System.Xml.XmlValidatingReader> class is obsolete in .NET Framework version 2.0.</span></span> <span data-ttu-id="eed29-743">您可以建立驗證<xref:System.Xml.XmlReader>使用的執行個體<xref:System.Xml.XmlReaderSettings>類別和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="eed29-743">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="eed29-744">如需詳細資訊，請參閱 <<c0> [ 使用 XmlReader 驗證 XML 資料](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/hdf992b8(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="eed29-744">For more information, see [Validating XML Data with XmlReader](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/hdf992b8(v=vs.100)).</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Xml.IXmlLineInfo.HasLineInfo">
      <MemberSignature Language="C#" Value="bool IXmlLineInfo.HasLineInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Xml.IXmlLineInfo.HasLineInfo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.System#Xml#IXmlLineInfo#HasLineInfo" />
      <MemberSignature Language="VB.NET" Value="Function HasLineInfo () As Boolean Implements IXmlLineInfo.HasLineInfo" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Xml.IXmlLineInfo.HasLineInfo() = System::Xml::IXmlLineInfo::HasLineInfo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlLineInfo.HasLineInfo</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="eed29-745">取得值，這個值指出類別是否可以傳回行資訊。</span><span class="sxs-lookup"><span data-stu-id="eed29-745">Gets a value indicating whether the class can return line information.</span></span></summary>
        <returns><span data-ttu-id="eed29-746">如果可以提供 <see cref="P:System.Xml.IXmlLineInfo.LineNumber" /> 和 <see cref="P:System.Xml.IXmlLineInfo.LinePosition" />，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="eed29-746"><see langword="true" /> if <see cref="P:System.Xml.IXmlLineInfo.LineNumber" /> and <see cref="P:System.Xml.IXmlLineInfo.LinePosition" /> can be provided; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Xml.IXmlNamespaceResolver.GetNamespacesInScope">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IDictionary&lt;string,string&gt; IXmlNamespaceResolver.GetNamespacesInScope (System.Xml.XmlNamespaceScope scope);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(valuetype System.Xml.XmlNamespaceScope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.System#Xml#IXmlNamespaceResolver#GetNamespacesInScope(System.Xml.XmlNamespaceScope)" />
      <MemberSignature Language="VB.NET" Value="Function GetNamespacesInScope (scope As XmlNamespaceScope) As IDictionary(Of String, String) Implements IXmlNamespaceResolver.GetNamespacesInScope" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System::Xml::XmlNamespaceScope scope) = System::Xml::IXmlNamespaceResolver::GetNamespacesInScope;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.Xml.XmlNamespaceScope" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="scope"><span data-ttu-id="eed29-747">識別讀取器之範圍的 <see cref="T:System.Xml.XmlNamespaceScope" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="eed29-747">An <see cref="T:System.Xml.XmlNamespaceScope" /> object that identifies the scope of the reader.</span></span></param>
        <summary><span data-ttu-id="eed29-748">如需這個成員的說明，請參閱 <see cref="M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)" />。</span><span class="sxs-lookup"><span data-stu-id="eed29-748">For a description of this member, see <see cref="M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)" />.</span></span></summary>
        <returns><span data-ttu-id="eed29-749">識別範圍內之命名空間的 T:System.Collections.IDictionary 物件。</span><span class="sxs-lookup"><span data-stu-id="eed29-749">An T:System.Collections.IDictionary object that identifies the namespaces in scope.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eed29-750">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="eed29-750">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="eed29-751">只有在 <xref:System.Xml.XmlValidatingReader> 執行個體轉換成 <xref:System.Xml.IXmlNamespaceResolver> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="eed29-751">It can be used only when the <xref:System.Xml.XmlValidatingReader> instance is cast to an <xref:System.Xml.IXmlNamespaceResolver> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Xml.IXmlNamespaceResolver.LookupNamespace">
      <MemberSignature Language="C#" Value="string IXmlNamespaceResolver.LookupNamespace (string prefix);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.Xml.IXmlNamespaceResolver.LookupNamespace(string prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.System#Xml#IXmlNamespaceResolver#LookupNamespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function LookupNamespace (prefix As String) As String Implements IXmlNamespaceResolver.LookupNamespace" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.Xml.IXmlNamespaceResolver.LookupNamespace(System::String ^ prefix) = System::Xml::IXmlNamespaceResolver::LookupNamespace;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="eed29-752">命名空間前置詞。</span><span class="sxs-lookup"><span data-stu-id="eed29-752">The namespace prefix.</span></span></param>
        <summary><span data-ttu-id="eed29-753">如需這個成員的說明，請參閱 <see cref="M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)" />。</span><span class="sxs-lookup"><span data-stu-id="eed29-753">For a description of this member, see <see cref="M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)" />.</span></span></summary>
        <returns><span data-ttu-id="eed29-754">字串值，包含與前置詞相關聯的命名空間 URI。</span><span class="sxs-lookup"><span data-stu-id="eed29-754">A string value that contains the namespace Uri that is associated with the prefix.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eed29-755">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="eed29-755">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="eed29-756">只有在 <xref:System.Xml.XmlValidatingReader> 執行個體轉換成 <xref:System.Xml.IXmlNamespaceResolver> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="eed29-756">It can be used only when the <xref:System.Xml.XmlValidatingReader> instance is cast to an <xref:System.Xml.IXmlNamespaceResolver> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="System.Xml.IXmlNamespaceResolver.LookupPrefix">
      <MemberSignature Language="C#" Value="string IXmlNamespaceResolver.LookupPrefix (string namespaceName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.Xml.IXmlNamespaceResolver.LookupPrefix(string namespaceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.System#Xml#IXmlNamespaceResolver#LookupPrefix(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function LookupPrefix (namespaceName As String) As String Implements IXmlNamespaceResolver.LookupPrefix" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.Xml.IXmlNamespaceResolver.LookupPrefix(System::String ^ namespaceName) = System::Xml::IXmlNamespaceResolver::LookupPrefix;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="namespaceName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="namespaceName"><span data-ttu-id="eed29-757">與前置詞相關聯的命名空間。</span><span class="sxs-lookup"><span data-stu-id="eed29-757">The namespace that is associated with the prefix.</span></span></param>
        <summary><span data-ttu-id="eed29-758">如需這個成員的說明，請參閱 <see cref="M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)" />。</span><span class="sxs-lookup"><span data-stu-id="eed29-758">For a description of this member, see <see cref="M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)" />.</span></span></summary>
        <returns><span data-ttu-id="eed29-759">字串值，包含與 <paramref name="namespaceName" /> 相關聯的命名空間前置詞。</span><span class="sxs-lookup"><span data-stu-id="eed29-759">A string value that contains the namespace prefix that is associated with the <paramref name="namespaceName" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eed29-760">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="eed29-760">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="eed29-761">只有在 <xref:System.Xml.XmlValidatingReader> 執行個體轉換成 <xref:System.Xml.IXmlNamespaceResolver> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="eed29-761">It can be used only when the <xref:System.Xml.XmlValidatingReader> instance is cast to an <xref:System.Xml.IXmlNamespaceResolver> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationEventHandler">
      <MemberSignature Language="C#" Value="public event System.Xml.Schema.ValidationEventHandler ValidationEventHandler;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Xml.Schema.ValidationEventHandler ValidationEventHandler" />
      <MemberSignature Language="DocId" Value="E:System.Xml.XmlValidatingReader.ValidationEventHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Xml::Schema::ValidationEventHandler ^ ValidationEventHandler;" />
      <MemberSignature Language="F#" Value="member this.ValidationEventHandler : System.Xml.Schema.ValidationEventHandler " Usage="member this.ValidationEventHandler : System.Xml.Schema.ValidationEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.ValidationEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eed29-762">設定事件處理常式，用於接收文件類型定義 (DTD)、XML-Data Reduced (XDR) 結構描述和 XML 結構描述定義語言 (XSD) 結構描述驗證錯誤的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="eed29-762">Sets an event handler for receiving information about document type definition (DTD), XML-Data Reduced (XDR) schema, and XML Schema definition language (XSD) schema validation errors.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="eed29-763"><xref:System.Xml.XmlValidatingReader>類別中已過時[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="eed29-763">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="eed29-764">您可以建立驗證<xref:System.Xml.XmlReader>使用的執行個體<xref:System.Xml.XmlReaderSettings>類別和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="eed29-764">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="eed29-765">如需詳細資訊，請參閱 <xref:System.Xml.XmlReader> 參考頁面的＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="eed29-765">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="eed29-766">這些事件發生期間<xref:System.Xml.XmlValidatingReader.Read%2A>，並且唯有<xref:System.Xml.XmlValidatingReader.ValidationType%2A>的 DTD、 XDR、 結構描述或自動指定。</span><span class="sxs-lookup"><span data-stu-id="eed29-766">These events occur during <xref:System.Xml.XmlValidatingReader.Read%2A> and only if a <xref:System.Xml.XmlValidatingReader.ValidationType%2A> of DTD, XDR, Schema, or Auto is specified.</span></span>  
  
 <span data-ttu-id="eed29-767">如果未不提供任何事件處理常式，則<xref:System.Xml.XmlException>（嚴重性 XmlSeverityType.Error 等於） 第一個驗證錯誤時擲回。</span><span class="sxs-lookup"><span data-stu-id="eed29-767">If no event handler is provided, an <xref:System.Xml.XmlException> is thrown on the first validation error (Severity is equal to XmlSeverityType.Error).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eed29-768">如果項目會報告驗證錯誤，不會驗證該元素的內容模型的其餘部分，不過會驗證它的子系。</span><span class="sxs-lookup"><span data-stu-id="eed29-768">If an element reports a validation error, the rest of the content model for that element is not validated, however, its children are validated.</span></span> <span data-ttu-id="eed29-769">讀取器只會報告指定元素的第一個錯誤。</span><span class="sxs-lookup"><span data-stu-id="eed29-769">The reader only reports the first error for a given element.</span></span>  
  
 <span data-ttu-id="eed29-770">回呼處理常式可以使用<xref:System.Xml.Schema.ValidationEventArgs.Severity%2A?displayProperty=nameWithType>保證，針對結構描述驗證 XML 執行個體文件的屬性。</span><span class="sxs-lookup"><span data-stu-id="eed29-770">The callback handler can use the <xref:System.Xml.Schema.ValidationEventArgs.Severity%2A?displayProperty=nameWithType> property to guarantee that an XML instance document is validated against a schema.</span></span> <span data-ttu-id="eed29-771">`Severity`屬性可讓您區別 （嚴重性 XmlSeverityType.Error 等於），表示發生嚴重錯誤時，驗證錯誤和驗證警告 （嚴重性 XmlSeverityType.Warning 等於） 表示沒有結構描述提供的資訊。</span><span class="sxs-lookup"><span data-stu-id="eed29-771">The `Severity` property allows you to distinguish between validation errors (Severity is equal to XmlSeverityType.Error) that indicate a fatal error, and validation warnings (Severity is equal to XmlSeverityType.Warning) that indicate that no schema information is available.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eed29-772">下列範例會驗證 XML 結構描述檔案。</span><span class="sxs-lookup"><span data-stu-id="eed29-772">The following example validates a file against an XML Schema.</span></span>  
  
 [!code-cpp[Classic WebData XmlValidatingReader.ValidationEventHandler Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.ValidationEventHandler Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.ValidationEventHandler Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.ValidationEventHandler Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.ValidationEventHandler Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.ValidationEventHandler Example/VB/source.vb#1)]  
  
 <span data-ttu-id="eed29-773">此範例會使用下列兩個輸入的檔案：</span><span class="sxs-lookup"><span data-stu-id="eed29-773">The sample uses the following two input files:</span></span>  
  
 <span data-ttu-id="eed29-774">`notValidXSD.xml` (`xsi:schemaLocation`屬性會識別要讀取 XML 結構描述。)</span><span class="sxs-lookup"><span data-stu-id="eed29-774">`notValidXSD.xml` (The `xsi:schemaLocation` attribute identifies the XML Schema for the reader.)</span></span>  
  
 [!code-xml[Classic WebData XmlValidatingReader.ValidationEventHandler Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.ValidationEventHandler Example/XML/source.xml#2)]  
  
 `books.xsd`  
  
 [!code-xml[Classic WebData XmlValidatingReader.ValidationEventHandler Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.ValidationEventHandler Example/XML/source.xml#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Schema.XmlSeverityType" />
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="ValidationType">
      <MemberSignature Language="C#" Value="public System.Xml.ValidationType ValidationType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.ValidationType ValidationType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.ValidationType" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidationType As ValidationType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::ValidationType ValidationType { System::Xml::ValidationType get(); void set(System::Xml::ValidationType value); };" />
      <MemberSignature Language="F#" Value="member this.ValidationType : System.Xml.ValidationType with get, set" Usage="System.Xml.XmlValidatingReader.ValidationType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.ValidationType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eed29-775">取得或設定數值，表示要執行的驗證類型。</span><span class="sxs-lookup"><span data-stu-id="eed29-775">Gets or sets a value indicating the type of validation to perform.</span></span></summary>
        <value><span data-ttu-id="eed29-776">其中一個 <see cref="T:System.Xml.ValidationType" /> 值。</span><span class="sxs-lookup"><span data-stu-id="eed29-776">One of the <see cref="T:System.Xml.ValidationType" /> values.</span></span> <span data-ttu-id="eed29-777">若未設定這個屬性，則預設為 ValidationType.Auto。</span><span class="sxs-lookup"><span data-stu-id="eed29-777">If this property is not set, it defaults to ValidationType.Auto.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="eed29-778"><xref:System.Xml.XmlValidatingReader>類別中已過時[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="eed29-778">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="eed29-779">您可以建立驗證<xref:System.Xml.XmlReader>使用的執行個體<xref:System.Xml.XmlReaderSettings>類別和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="eed29-779">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="eed29-780">如需詳細資訊，請參閱 <xref:System.Xml.XmlReader> 參考頁面的＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="eed29-780">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="eed29-781">此屬性必須設定的第一個呼叫之前<xref:System.Xml.XmlValidatingReader.Read%2A>。</span><span class="sxs-lookup"><span data-stu-id="eed29-781">This property must be set before the first call to <xref:System.Xml.XmlValidatingReader.Read%2A>.</span></span> <span data-ttu-id="eed29-782">將此屬性設定為 ValidationType.None 建立非驗證讀取器。</span><span class="sxs-lookup"><span data-stu-id="eed29-782">Setting this property to ValidationType.None creates a non-validating reader.</span></span>  
  
 <span data-ttu-id="eed29-783">如果外部的文件類型定義 (Dtd) 或結構描述所需的驗證，<xref:System.Xml.XmlResolver>用。</span><span class="sxs-lookup"><span data-stu-id="eed29-783">If external document type definitions (DTDs) or schemas are needed for validation, the <xref:System.Xml.XmlResolver> is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eed29-784">下列範例會驗證兩個檔案。</span><span class="sxs-lookup"><span data-stu-id="eed29-784">The following example validates two files.</span></span>  
  
 [!code-cpp[Classic WebData XmlValidatingReader.ValidationType Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.ValidationType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.ValidationType Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.ValidationType Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.ValidationType Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.ValidationType Example/VB/source.vb#1)]  
  
 <span data-ttu-id="eed29-785">此範例會使用下列四個輸入的檔案：</span><span class="sxs-lookup"><span data-stu-id="eed29-785">The sample uses the following four input files:</span></span>  
  
 <span data-ttu-id="eed29-786">`notValid.xml` (「 X-結構描述:"前置詞識別讀取器的 XML 資料精簡 (XDR) 結構描述。)</span><span class="sxs-lookup"><span data-stu-id="eed29-786">`notValid.xml` (The "x-schema:" prefix identifies the XML-Data Reduced (XDR) schema for the reader.)</span></span>  
  
 [!code-xml[Classic WebData XmlValidatingReader.ValidationType Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.ValidationType Example/XML/source.xml#2)]  
  
 `schema1.xdr`  
  
 [!code-xml[Classic WebData XmlValidatingReader.ValidationType Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.ValidationType Example/XML/source.xml#3)]  
  
 `cdDTD.xml`  
  
 [!code-xml[Classic WebData XmlValidatingReader.ValidationType Example#4](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.ValidationType Example/XML/source.xml#4)]  
  
 `book1.xml`  
  
 [!code-xml[Classic WebData XmlValidatingReader.ValidationType Example#5](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.ValidationType Example/XML/source.xml#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eed29-787">在呼叫 Read 之後，請設定屬性。</span><span class="sxs-lookup"><span data-stu-id="eed29-787">Setting the property after a Read has been called.</span></span></exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public override string Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.Value" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Value { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : string" Usage="System.Xml.XmlValidatingReader.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eed29-788">取得目前節點的文字值。</span><span class="sxs-lookup"><span data-stu-id="eed29-788">Gets the text value of the current node.</span></span></summary>
        <value><span data-ttu-id="eed29-789">傳回值需視節點的 <see cref="P:System.Xml.XmlValidatingReader.NodeType" /> 而定。</span><span class="sxs-lookup"><span data-stu-id="eed29-789">The value returned depends on the <see cref="P:System.Xml.XmlValidatingReader.NodeType" /> of the node.</span></span> <span data-ttu-id="eed29-790">下表列出具有傳回值的節點類型。</span><span class="sxs-lookup"><span data-stu-id="eed29-790">The following table lists node types that have a value to return.</span></span> <span data-ttu-id="eed29-791">其他所有節點類型都會傳回 String.Empty。</span><span class="sxs-lookup"><span data-stu-id="eed29-791">All other node types return String.Empty.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="eed29-792">節點類型</span><span class="sxs-lookup"><span data-stu-id="eed29-792">Node Type</span></span> 
 </term><description> <span data-ttu-id="eed29-793">值</span><span class="sxs-lookup"><span data-stu-id="eed29-793">Value</span></span> 
 </description></listheader><item><term><see langword="Attribute" /></term><description> <span data-ttu-id="eed29-794">屬性的值。</span><span class="sxs-lookup"><span data-stu-id="eed29-794">The value of the attribute.</span></span>  
  
 </description></item><item><term><see langword="CDATA" /></term><description> <span data-ttu-id="eed29-795">CDATA 區段的內容。</span><span class="sxs-lookup"><span data-stu-id="eed29-795">The content of the CDATA section.</span></span>  
  
 </description></item><item><term><see langword="Comment" /></term><description> <span data-ttu-id="eed29-796">註解的內容。</span><span class="sxs-lookup"><span data-stu-id="eed29-796">The content of the comment.</span></span>  
  
 </description></item><item><term><see langword="DocumentType" /></term><description> <span data-ttu-id="eed29-797">內部子集。</span><span class="sxs-lookup"><span data-stu-id="eed29-797">The internal subset.</span></span>  
  
 </description></item><item><term><see langword="ProcessingInstruction" /></term><description> <span data-ttu-id="eed29-798">全部內容 (目標除外)。</span><span class="sxs-lookup"><span data-stu-id="eed29-798">The entire content, excluding the target.</span></span>  
  
 </description></item><item><term><see langword="SignificantWhitespace" /></term><description> <span data-ttu-id="eed29-799">在混合內容模型中標記間的泛空白字元。</span><span class="sxs-lookup"><span data-stu-id="eed29-799">The white space between markup in a mixed content model.</span></span>  
  
 </description></item><item><term><see langword="Text" /></term><description> <span data-ttu-id="eed29-800">文字節點的內容。</span><span class="sxs-lookup"><span data-stu-id="eed29-800">The content of the text node.</span></span>  
  
 </description></item><item><term><see langword="Whitespace" /></term><description> <span data-ttu-id="eed29-801">標記之間的泛空白字元。</span><span class="sxs-lookup"><span data-stu-id="eed29-801">The white space between markup.</span></span>  
  
 </description></item><item><term><see langword="XmlDeclaration" /></term><description> <span data-ttu-id="eed29-802">宣告的內容。</span><span class="sxs-lookup"><span data-stu-id="eed29-802">The content of the declaration.</span></span>  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="eed29-803"><xref:System.Xml.XmlValidatingReader>類別中已過時[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="eed29-803">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="eed29-804">您可以建立驗證<xref:System.Xml.XmlReader>使用的執行個體<xref:System.Xml.XmlReaderSettings>類別和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="eed29-804">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="eed29-805">如需詳細資訊，請參閱 <xref:System.Xml.XmlReader> 參考頁面的＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="eed29-805">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eed29-806">下列範例會讀取 XML 檔案，並顯示每個節點。</span><span class="sxs-lookup"><span data-stu-id="eed29-806">The following example reads an XML file and displays each node.</span></span>  
  
 [!code-cpp[Classic WebData XmlValidatingReader.Name Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.Name Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/VB/source.vb#1)]  
  
 <span data-ttu-id="eed29-807">此範例會使用該檔案，`items.xml`作為輸入。</span><span class="sxs-lookup"><span data-stu-id="eed29-807">The example uses the file, `items.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlValidatingReader.Name Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="XmlLang">
      <MemberSignature Language="C#" Value="public override string XmlLang { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XmlLang" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.XmlLang" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property XmlLang As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ XmlLang { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlLang : string" Usage="System.Xml.XmlValidatingReader.XmlLang" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eed29-808">取得目前的 <see langword="xml:lang" /> 範圍。</span><span class="sxs-lookup"><span data-stu-id="eed29-808">Gets the current <see langword="xml:lang" /> scope.</span></span></summary>
        <value><span data-ttu-id="eed29-809">目前的 <see langword="xml:lang" /> 範圍。</span><span class="sxs-lookup"><span data-stu-id="eed29-809">The current <see langword="xml:lang" /> scope.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="eed29-810"><xref:System.Xml.XmlValidatingReader>類別中已過時[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="eed29-810">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="eed29-811">您可以建立驗證<xref:System.Xml.XmlReader>使用的執行個體<xref:System.Xml.XmlReaderSettings>類別和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="eed29-811">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="eed29-812">如需詳細資訊，請參閱 <xref:System.Xml.XmlReader> 參考頁面的＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="eed29-812">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="eed29-813">這個屬性表示在其中目前的節點所在的 xml: lang 範圍。</span><span class="sxs-lookup"><span data-stu-id="eed29-813">This property represents the xml:lang scope within which the current node resides.</span></span> <span data-ttu-id="eed29-814">例如，以下是使用 XML 片段`xml:lang`設定為美國英文中的根項目：</span><span class="sxs-lookup"><span data-stu-id="eed29-814">For example, here is an XML fragment with `xml:lang` set to U.S. English in the root element:</span></span>  
  
```xml  
<root xml:lang="en-us">   
<name>Fred</name>   
</root>   
```  
  
 <span data-ttu-id="eed29-815">當讀取器定位於上`name`項目，您可以使用這個屬性來尋找它位於美國的範圍內英文`xml:lang`屬性。</span><span class="sxs-lookup"><span data-stu-id="eed29-815">When the reader is positioned on the `name` element, you can use this property to find that it is in the scope of a U.S. English `xml:lang` attribute.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="XmlResolver">
      <MemberSignature Language="C#" Value="public System.Xml.XmlResolver XmlResolver { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlResolver XmlResolver" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.XmlResolver" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlResolver As XmlResolver" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlResolver ^ XmlResolver {  void set(System::Xml::XmlResolver ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlResolver : System.Xml.XmlResolver" Usage="System.Xml.XmlValidatingReader.XmlResolver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eed29-816">設定 <see cref="T:System.Xml.XmlResolver" />，用於解析外部文件類型定義 (DTD) 和結構描述位置參考。</span><span class="sxs-lookup"><span data-stu-id="eed29-816">Sets the <see cref="T:System.Xml.XmlResolver" /> used for resolving external document type definition (DTD) and schema location references.</span></span> <span data-ttu-id="eed29-817"><see langword="XmlResolver" /> 也可用來處理在 XML 結構描述定義語言 (XSD) 結構描述中找到的任何 Import 或 Include 項目。</span><span class="sxs-lookup"><span data-stu-id="eed29-817">The <see langword="XmlResolver" /> is also used to handle any import or include elements found in XML Schema definition language (XSD) schemas.</span></span></summary>
        <value><span data-ttu-id="eed29-818">要使用的 <see langword="XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="eed29-818">The <see langword="XmlResolver" /> to use.</span></span> <span data-ttu-id="eed29-819">如果設定為 <see langword="null" />，就不會解析外部資源。</span><span class="sxs-lookup"><span data-stu-id="eed29-819">If set to <see langword="null" />, external resources are not resolved.</span></span>  
  
<span data-ttu-id="eed29-820">在 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 的 1.1 版中，必須完全信任呼叫端才能指定 <see langword="XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="eed29-820">In version 1.1 of the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)], the caller must be fully trusted to specify an <see langword="XmlResolver" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="eed29-821"><xref:System.Xml.XmlValidatingReader>類別中已過時[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="eed29-821">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="eed29-822">您可以建立驗證<xref:System.Xml.XmlReader>使用的執行個體<xref:System.Xml.XmlReaderSettings>類別和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="eed29-822">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="eed29-823">如需詳細資訊，請參閱 <xref:System.Xml.XmlReader> 參考頁面的＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="eed29-823">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="eed29-824">`XmlResolver`用來載入任何 Dtd、 實體或完成驗證程序所需的結構描述。</span><span class="sxs-lookup"><span data-stu-id="eed29-824">The `XmlResolver` is used to load any DTDs, entities, or schemas needed to complete the validation process.</span></span>  
  
 <span data-ttu-id="eed29-825">可以隨時設定這個屬性，並且會影響在下一步 後<xref:System.Xml.XmlValidatingReader.Read%2A>呼叫。</span><span class="sxs-lookup"><span data-stu-id="eed29-825">This property can be set at any time and takes affect after the next <xref:System.Xml.XmlValidatingReader.Read%2A> call.</span></span> <span data-ttu-id="eed29-826">如果這個屬性設定為`null`，讀取器會假設使用者不想要在解析外部參考。</span><span class="sxs-lookup"><span data-stu-id="eed29-826">If this property is set to `null`, the reader assumes the user is not interested in resolving external references.</span></span> <span data-ttu-id="eed29-827">在此情況下，讀取器只會驗證對內部資源，資源是否存在。</span><span class="sxs-lookup"><span data-stu-id="eed29-827">In this case, the reader only validates against internal resources, if the resource is present.</span></span>  
  
 <span data-ttu-id="eed29-828">1.1 版中[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]，如果未設定這個屬性，應用程式的信任層級會決定的預設行為。</span><span class="sxs-lookup"><span data-stu-id="eed29-828">In version 1.1 of [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] , if this property is not set, the trust level of the application determines the default behavior.</span></span>  
  
 <span data-ttu-id="eed29-829">`Fully trusted code:` 讀取器使用的預設值<xref:System.Xml.XmlUrlResolver>與不具使用者認證。</span><span class="sxs-lookup"><span data-stu-id="eed29-829">`Fully trusted code:` The reader uses a default <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="eed29-830">如果存取網路資源需要驗證，使用`XmlResolver`屬性來指定`XmlResolver`具有必要認證。</span><span class="sxs-lookup"><span data-stu-id="eed29-830">If authentication is required to access a network resource, use the `XmlResolver` property to specify an `XmlResolver` with the necessary credentials.</span></span>  
  
 <span data-ttu-id="eed29-831">`Semi-trusted code:` `XmlResolver`屬性設定為`null`。</span><span class="sxs-lookup"><span data-stu-id="eed29-831">`Semi-trusted code:` The `XmlResolver` property is set to `null`.</span></span> <span data-ttu-id="eed29-832">不會解析外部資源。</span><span class="sxs-lookup"><span data-stu-id="eed29-832">External resources are not resolved.</span></span>  
  
 <span data-ttu-id="eed29-833">驗證時使用的結構描述，您可以藉由提供避免耗費資源的載入程序<xref:System.Xml.Schema.XmlSchemaCollection>使用<xref:System.Xml.XmlValidatingReader.Schemas%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="eed29-833">When validating using schemas, you can avoid the expensive load process by providing an <xref:System.Xml.Schema.XmlSchemaCollection> using the <xref:System.Xml.XmlValidatingReader.Schemas%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eed29-834">下列範例會使用`XmlResolver`屬性來指定存取網路上的 DTD 檔案所需的認證。</span><span class="sxs-lookup"><span data-stu-id="eed29-834">The following example uses the `XmlResolver` property to specify the credentials necessary to access the networked DTD file.</span></span>  
  
 [!code-cpp[XmlValidatingReader.XmlResolver#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlValidatingReader.XmlResolver/CPP/vrdr_resolver.cpp#1)]
 [!code-csharp[XmlValidatingReader.XmlResolver#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlValidatingReader.XmlResolver/CS/vrdr_resolver.cs#1)]
 [!code-vb[XmlValidatingReader.XmlResolver#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlValidatingReader.XmlResolver/VB/vrdr_resolver.vb#1)]  
  
 <span data-ttu-id="eed29-835">此範例會使用下列的檔案，做為輸入。</span><span class="sxs-lookup"><span data-stu-id="eed29-835">The example uses the following files as input.</span></span>  
  
 `book5.xml`  
  
 [!code-xml[XmlValidatingReader.XmlResolver#2](~/samples/snippets/xml/VS_Snippets_Data/XmlValidatingReader.XmlResolver/XML/book5.xml#2)]  
  
 `books.dtd`  
  
 [!code-xml[XmlValidatingReader.XmlResolver#3](~/samples/snippets/xml/VS_Snippets_Data/XmlValidatingReader.XmlResolver/XML/books.dtd#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.XmlUrlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="XmlSpace">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlSpace XmlSpace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlSpace XmlSpace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.XmlSpace" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property XmlSpace As XmlSpace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlSpace XmlSpace { System::Xml::XmlSpace get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlSpace : System.Xml.XmlSpace" Usage="System.Xml.XmlValidatingReader.XmlSpace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlSpace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eed29-836">取得目前的 <see langword="xml:space" /> 範圍。</span><span class="sxs-lookup"><span data-stu-id="eed29-836">Gets the current <see langword="xml:space" /> scope.</span></span></summary>
        <value><span data-ttu-id="eed29-837">其中一個 <see cref="T:System.Xml.XmlSpace" /> 值。</span><span class="sxs-lookup"><span data-stu-id="eed29-837">One of the <see cref="T:System.Xml.XmlSpace" /> values.</span></span> <span data-ttu-id="eed29-838">如果 <see langword="xml:space" /> 範圍不存在，這個屬性預設值為 <see langword="XmlSpace.None" />。</span><span class="sxs-lookup"><span data-stu-id="eed29-838">If no <see langword="xml:space" /> scope exists, this property defaults to <see langword="XmlSpace.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="eed29-839"><xref:System.Xml.XmlValidatingReader>類別中已過時[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="eed29-839">The <xref:System.Xml.XmlValidatingReader> class is obsolete in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="eed29-840">您可以建立驗證<xref:System.Xml.XmlReader>使用的執行個體<xref:System.Xml.XmlReaderSettings>類別和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="eed29-840">You can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="eed29-841">如需詳細資訊，請參閱 <xref:System.Xml.XmlReader> 參考頁面的＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="eed29-841">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
  </Members>
</Type>