<Type Name="XmlDocument" FullName="System.Xml.XmlDocument">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c56bc51e3721ee6938993785c4e5fb8a5e1016f6" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36436434" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlDocument : System.Xml.XmlNode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlDocument extends System.Xml.XmlNode" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlDocument" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlDocument&#xA;Inherits XmlNode" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlDocument : System::Xml::XmlNode" />
  <TypeSignature Language="F#" Value="type XmlDocument = class&#xA;    inherit XmlNode" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlDocument</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.XmlNode</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="f9fca-101">表示 XML 文件。</span>
      <span class="sxs-lookup">
        <span data-stu-id="f9fca-101">Represents an XML document.</span>
      </span>
      <span data-ttu-id="f9fca-102">您可以於文件中使用這個類別來載入、驗證、編輯、加入和置放 XML。</span>
      <span class="sxs-lookup">
        <span data-stu-id="f9fca-102">You can use this class to load, validate, edit, add, and position XML in a document.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="Remarks"></a> <span data-ttu-id="f9fca-103"><xref:System.Xml.XmlDocument>類別是記憶體中表示的 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="f9fca-103">The <xref:System.Xml.XmlDocument> class is an in-memory representation of an XML document.</span></span> <span data-ttu-id="f9fca-104">它會實作 W3C [XML 文件物件模型 (DOM)](~/docs/standard/data/xml/xml-document-object-model-dom.md)層級 1 核心及核心 DOM 層級 2。</span><span class="sxs-lookup"><span data-stu-id="f9fca-104">It implements the W3C [XML Document Object Model (DOM)](~/docs/standard/data/xml/xml-document-object-model-dom.md) Level 1 Core and the Core DOM Level 2.</span></span>  
  
 <span data-ttu-id="f9fca-105">*DOM*代表*文件物件模型*。</span><span class="sxs-lookup"><span data-stu-id="f9fca-105">*DOM* stands for *document object model*.</span></span> <span data-ttu-id="f9fca-106">若要閱讀更多詳細資訊，請參閱[XML 文件物件模型 (DOM)](~/docs/standard/data/xml/xml-document-object-model-dom.md)。</span><span class="sxs-lookup"><span data-stu-id="f9fca-106">To read more about it, see [XML Document Object Model (DOM)](~/docs/standard/data/xml/xml-document-object-model-dom.md).</span></span>  
  
 <span data-ttu-id="f9fca-107">您可以載入 XML DOM 使用<xref:System.Xml.XmlDocument>類別，以程式設計方式讀取、 修改，然後移除 XML 文件中。</span><span class="sxs-lookup"><span data-stu-id="f9fca-107">You can load XML into the DOM by using the <xref:System.Xml.XmlDocument> class, and then programmatically read, modify, and remove XML in the document.</span></span>  
  
 <span data-ttu-id="f9fca-108">如果您想要撬開啟<xref:System.Xml.XmlDocument>類別，請參閱實作方式，請參閱[參考來源](https://referencesource.microsoft.com/#System.Xml/Xml/System/Xml/Dom/XmlDocument.cs#f82a4c1bd1f0ee12)。</span><span class="sxs-lookup"><span data-stu-id="f9fca-108">If you want to pry open the <xref:System.Xml.XmlDocument> class and see how it’s implemented, see the [Reference Source](https://referencesource.microsoft.com/#System.Xml/Xml/System/Xml/Dom/XmlDocument.cs#f82a4c1bd1f0ee12).</span></span>  
  
<a name="Common"></a>   
## <a name="tasks"></a><span data-ttu-id="f9fca-109">工作</span><span class="sxs-lookup"><span data-stu-id="f9fca-109">Tasks</span></span>  
  
-   [<span data-ttu-id="f9fca-110">將 XML 載入文件物件模型</span><span class="sxs-lookup"><span data-stu-id="f9fca-110">Load XML into the document object model</span></span>](#Load)  
  
-   [<span data-ttu-id="f9fca-111">針對結構描述進行驗證</span><span class="sxs-lookup"><span data-stu-id="f9fca-111">Validate it against a schema</span></span>](#Validation)  
  
-   [<span data-ttu-id="f9fca-112">瀏覽文件樹狀結構</span><span class="sxs-lookup"><span data-stu-id="f9fca-112">Navigate the document tree</span></span>](#Navigate)  
  
-   [<span data-ttu-id="f9fca-113">尋找節點</span><span class="sxs-lookup"><span data-stu-id="f9fca-113">Find nodes</span></span>](#Find)  
  
-   [<span data-ttu-id="f9fca-114">編輯節點</span><span class="sxs-lookup"><span data-stu-id="f9fca-114">Edit nodes</span></span>](#Edit)  
  
-   [<span data-ttu-id="f9fca-115">加入節點</span><span class="sxs-lookup"><span data-stu-id="f9fca-115">Add nodes</span></span>](#Add)  
  
-   [<span data-ttu-id="f9fca-116">移除節點</span><span class="sxs-lookup"><span data-stu-id="f9fca-116">Remove nodes</span></span>](#Remove)  
  
-   [<span data-ttu-id="f9fca-117">位置節點</span><span class="sxs-lookup"><span data-stu-id="f9fca-117">Position nodes</span></span>](#Position)  
  
<a name="Load"></a>   
## <a name="load-xml-into-the-document-object-model"></a><span data-ttu-id="f9fca-118">將 XML 載入文件物件模型</span><span class="sxs-lookup"><span data-stu-id="f9fca-118">Load XML into the document object model</span></span>  
 <span data-ttu-id="f9fca-119">下面類似的 XML 文件的開頭。</span><span class="sxs-lookup"><span data-stu-id="f9fca-119">Start with an XML document like this one.</span></span> <span data-ttu-id="f9fca-120">它是集合中的幾個書籍。</span><span class="sxs-lookup"><span data-stu-id="f9fca-120">It’s just a few books in a collection.</span></span> <span data-ttu-id="f9fca-121">但是它不會包含您會在任何 XML 文件中找到的基本事項命名空間中，代表資料的元素和屬性描述的資料。</span><span class="sxs-lookup"><span data-stu-id="f9fca-121">But it does contain the basic things that you’d find in any XML document; a namespace, elements that represent data and attributes that describe the data.</span></span>  
  
```xml  
<?xml version="1.0" encoding="utf-8"?>  
<books xmlns="http://www.contoso.com/books">  
  <book genre="novel" ISBN="1-861001-57-8" publicationdate="1823-01-28">  
    <title>Pride And Prejudice</title>  
    <price>24.95</price>  
  </book>  
  <book genre="novel" ISBN="1-861002-30-1" publicationdate="1985-01-01">  
    <title>The Handmaid's Tale</title>  
    <price>29.95</price>  
  </book>  
  <book genre="novel" ISBN="1-861001-45-3" publicationdate="1811-01-01">  
    <title>Sense and Sensibility</title>  
    <price>19.95</price>  
  </book>  
</books>  
```  
  
 <span data-ttu-id="f9fca-122">接下來，此資料載入 DOM，因此您可以使用它在記憶體中。</span><span class="sxs-lookup"><span data-stu-id="f9fca-122">Next, load this data into the DOM so that you can work with it in memory.</span></span> <span data-ttu-id="f9fca-123">最常見的方法是在本機電腦上或在網路上的檔案參考。</span><span class="sxs-lookup"><span data-stu-id="f9fca-123">The most popular way to do this is refer to a file on your local computer or on a network.</span></span>  
  
 <span data-ttu-id="f9fca-124">這個範例會從檔案載入 XML。</span><span class="sxs-lookup"><span data-stu-id="f9fca-124">This example loads XML from a file.</span></span> <span data-ttu-id="f9fca-125">如果檔案不存在，它只會產生一些 XML，並載入。</span><span class="sxs-lookup"><span data-stu-id="f9fca-125">If the file doesn’t exist, it just generates some XML and loads that.</span></span>  
  
 [!code-cpp[XMLProcessingApp#1](~/samples/snippets/cpp/VS_Snippets_Data/xmlprocessingapp/cpp/xmldomprocessing.cpp#1)]
 [!code-csharp[XMLProcessingApp#1](~/samples/snippets/csharp/VS_Snippets_Data/xmlprocessingapp/cs/xmlhelpermethods.cs#1)]
 [!code-vb[XMLProcessingApp#1](~/samples/snippets/visualbasic/VS_Snippets_Data/xmlprocessingapp/vb/xmlhelpermethods.vb#1)]  
  
 <span data-ttu-id="f9fca-126">**完整的範例：** [管理記憶體中的 XML 使用 XmlDocument 類別和其他相關型別](https://code.msdn.microsoft.com/windowsdesktop/Manipulate-XML-in-memory-4b612d6b/view/SourceCode)</span><span class="sxs-lookup"><span data-stu-id="f9fca-126">**Complete sample:** [Manipulate XML in-Memory by using the XmlDocument class and other related types](https://code.msdn.microsoft.com/windowsdesktop/Manipulate-XML-in-memory-4b612d6b/view/SourceCode)</span></span>  
  
 <span data-ttu-id="f9fca-127">**進一步了解：** [讀入 DOM 的 XML 文件](~/docs/standard/data/xml/reading-an-xml-document-into-the-dom.md)</span><span class="sxs-lookup"><span data-stu-id="f9fca-127">**Learn more:** [Reading an XML Document into the DOM](~/docs/standard/data/xml/reading-an-xml-document-into-the-dom.md)</span></span>  
  
<a name="Validation"></a>   
## <a name="validate-it-against-a-schema"></a><span data-ttu-id="f9fca-128">針對結構描述進行驗證</span><span class="sxs-lookup"><span data-stu-id="f9fca-128">Validate it against a schema</span></span>  
 <span data-ttu-id="f9fca-129">這類 XML 結構描述的開頭。</span><span class="sxs-lookup"><span data-stu-id="f9fca-129">Start with an XML schema like this one.</span></span> <span data-ttu-id="f9fca-130">此結構描述定義 XML 中的資料類型，而且需要哪些屬性。</span><span class="sxs-lookup"><span data-stu-id="f9fca-130">This schema defines the data types in the XML and which attributes are required.</span></span>  
  
```xml  
<?xml version="1.0" encoding="utf-8"?>  
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"  
  attributeFormDefault="unqualified"   
  elementFormDefault="qualified"  
  targetNamespace="http://www.contoso.com/books">   
  <xs:element name="books">  
    <xs:complexType>  
      <xs:sequence>  
        <xs:element maxOccurs="unbounded" name="book">  
          <xs:complexType>  
            <xs:sequence>  
              <xs:element name="title" type="xs:string" />  
              <xs:element name="price" type="xs:decimal" />  
            </xs:sequence>  
            <xs:attribute name="genre" type="xs:string" use="required" />  
            <xs:attribute name="ISBN" type="xs:string" use="required" />  
            <xs:attribute name="publicationdate" type="xs:date" use="required" />  
          </xs:complexType>  
        </xs:element>  
      </xs:sequence>  
    </xs:complexType>  
  </xs:element>  
</xs:schema>  
```  
  
 <span data-ttu-id="f9fca-131">建立<xref:System.Xml.XmlReader>使用您的結構描述物件，並再將該物件載入 DOM</span><span class="sxs-lookup"><span data-stu-id="f9fca-131">Create an <xref:System.Xml.XmlReader> object by using your schema, and then load that object into the DOM.</span></span> <span data-ttu-id="f9fca-132">建立事件處理常式程式碼嘗試修改的違反規則的結構描述的方式將 XML 檔時執行。</span><span class="sxs-lookup"><span data-stu-id="f9fca-132">Create an event handler that executes when code attempts to modify your XML file in ways that violate the rules of the schema.</span></span>  
  
 <span data-ttu-id="f9fca-133">這些程式碼區塊顯示完成上述動作的 helper 方法。</span><span class="sxs-lookup"><span data-stu-id="f9fca-133">These blocks of code show helper methods that do all of this.</span></span>  
  
 [!code-cpp[XMLProcessingApp#2](~/samples/snippets/cpp/VS_Snippets_Data/xmlprocessingapp/cpp/xmldomprocessing.cpp#2)]
 [!code-csharp[XMLProcessingApp#2](~/samples/snippets/csharp/VS_Snippets_Data/xmlprocessingapp/cs/xmlhelpermethods.cs#2)]
 [!code-vb[XMLProcessingApp#2](~/samples/snippets/visualbasic/VS_Snippets_Data/xmlprocessingapp/vb/xmlhelpermethods.vb#2)]  
  
 <span data-ttu-id="f9fca-134">**完整的範例：** [管理記憶體中的 XML 使用 XmlDocument 類別和其他相關型別](https://code.msdn.microsoft.com/windowsdesktop/Manipulate-XML-in-memory-4b612d6b/view/SourceCode)</span><span class="sxs-lookup"><span data-stu-id="f9fca-134">**Complete sample:** [Manipulate XML in-Memory by using the XmlDocument class and other related types](https://code.msdn.microsoft.com/windowsdesktop/Manipulate-XML-in-memory-4b612d6b/view/SourceCode)</span></span>  
  
 <span data-ttu-id="f9fca-135">**進一步了解：** [驗證 DOM 中的 XML 文件](~/docs/standard/data/xml/validating-an-xml-document-in-the-dom.md)</span><span class="sxs-lookup"><span data-stu-id="f9fca-135">**Learn more:** [Validating an XML Document in the DOM](~/docs/standard/data/xml/validating-an-xml-document-in-the-dom.md)</span></span>  
  
<a name="Navigate"></a>   
## <a name="navigate-the-document-tree"></a><span data-ttu-id="f9fca-136">瀏覽文件樹狀結構</span><span class="sxs-lookup"><span data-stu-id="f9fca-136">Navigate the document tree</span></span>  
 <span data-ttu-id="f9fca-137">您可以使用屬性瀏覽 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="f9fca-137">You can use properties to navigate around an XML document.</span></span> <span data-ttu-id="f9fca-138">但是，您可以使用任何語言之前，請讓我們快速檢閱幾個詞彙。</span><span class="sxs-lookup"><span data-stu-id="f9fca-138">But before you use any of them, let’s quickly review a few terms.</span></span> <span data-ttu-id="f9fca-139">您的文件是由節點所組成。</span><span class="sxs-lookup"><span data-stu-id="f9fca-139">Your document is composed of nodes.</span></span> <span data-ttu-id="f9fca-140">每個節點都當做單一*父*正上方的節點。</span><span class="sxs-lookup"><span data-stu-id="f9fca-140">Each node has as single *parent* node directly above it.</span></span> <span data-ttu-id="f9fca-141">唯一沒有父節點的節點是文件根，因為它是最上層節點。</span><span class="sxs-lookup"><span data-stu-id="f9fca-141">The only node that does not have a parent node is the document root, as it is the top-level node.</span></span> <span data-ttu-id="f9fca-142">大多數的節點可以有*子*節點，就是正下方的節點。</span><span class="sxs-lookup"><span data-stu-id="f9fca-142">Most nodes can have *child* nodes, which are nodes directly below them.</span></span> <span data-ttu-id="f9fca-143">在相同層級的節點都*同層級*。</span><span class="sxs-lookup"><span data-stu-id="f9fca-143">Nodes that are at the same level are *siblings*.</span></span>  
  
 <span data-ttu-id="f9fca-144">下列範例中，為您示範如何取得根節點、 跳到第一個子節點的根節點、 存取其子節點的任何、 回到的父節點，然後瀏覽到同層級節點。</span><span class="sxs-lookup"><span data-stu-id="f9fca-144">The following examples, show you how to obtain the root node, jump to the first child node of the root node, access any of its child nodes, get back out to the parent node, and then navigate across sibling nodes.</span></span>  
  
 <span data-ttu-id="f9fca-145">**根節點的開頭**</span><span class="sxs-lookup"><span data-stu-id="f9fca-145">**Start with the root node**</span></span>  
  
 <span data-ttu-id="f9fca-146">本範例會取得的根節點，然後以輸出主控台的文件的內容中使用該節點。</span><span class="sxs-lookup"><span data-stu-id="f9fca-146">This example gets the root node and then uses that node to output the contents of the document to the console.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.DocumentElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.DocumentElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.DocumentElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.DocumentElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.DocumentElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.DocumentElement Example/VB/source.vb#1)]  
  
 <span data-ttu-id="f9fca-147">**取得子節點**</span><span class="sxs-lookup"><span data-stu-id="f9fca-147">**Get child nodes**</span></span>  
  
 <span data-ttu-id="f9fca-148">這個範例會跳到第一個子節點的根節點，並接著逐一該節點的子節點，如果有的話。</span><span class="sxs-lookup"><span data-stu-id="f9fca-148">This example jumps to the first child node of the root node and then iterates through the child nodes of that node if any exist.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.HasChildNodes Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.HasChildNodes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.HasChildNodes Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.HasChildNodes Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.HasChildNodes Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.HasChildNodes Example/VB/source.vb#1)]  
  
 <span data-ttu-id="f9fca-149">**回到父節點**</span><span class="sxs-lookup"><span data-stu-id="f9fca-149">**Get back to the parent node**</span></span>  
  
 <span data-ttu-id="f9fca-150">請使用 <xref:System.Xml.XmlDocument.ParentNode%2A> 屬性。</span><span class="sxs-lookup"><span data-stu-id="f9fca-150">Use the <xref:System.Xml.XmlDocument.ParentNode%2A> property.</span></span>  
  
 <span data-ttu-id="f9fca-151">**參考到最後一個子節點**</span><span class="sxs-lookup"><span data-stu-id="f9fca-151">**Refer to the last child node**</span></span>  
  
 <span data-ttu-id="f9fca-152">這個範例會將書籍價格寫入主控台 （這是最後一個子節點的書籍節點）。</span><span class="sxs-lookup"><span data-stu-id="f9fca-152">This example writes the price of a book to the console (which is the last child node of a book node).</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.LastChild Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.LastChild Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.LastChild Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.LastChild Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.LastChild Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.LastChild Example/VB/source.vb#1)]  
  
 <span data-ttu-id="f9fca-153">**向前巡覽同層級之間**</span><span class="sxs-lookup"><span data-stu-id="f9fca-153">**Navigate forward across siblings**</span></span>  
  
 <span data-ttu-id="f9fca-154">這個範例將往前移動書籍活頁簿。</span><span class="sxs-lookup"><span data-stu-id="f9fca-154">This example moves forward from book to book.</span></span> <span data-ttu-id="f9fca-155">活頁簿的節點是另一個同層級。</span><span class="sxs-lookup"><span data-stu-id="f9fca-155">Book nodes are siblings to one another.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.NextSibling Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.NextSibling Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.NextSibling Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.NextSibling Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.NextSibling Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.NextSibling Example/VB/source.vb#1)]  
  
 <span data-ttu-id="f9fca-156">**同層級之間的回溯瀏覽**</span><span class="sxs-lookup"><span data-stu-id="f9fca-156">**Navigate backwards across siblings**</span></span>  
  
 <span data-ttu-id="f9fca-157">本範例會將向後從活頁簿至活頁簿。</span><span class="sxs-lookup"><span data-stu-id="f9fca-157">This example moves backwards from book to book.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.PreviousSibling Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.PreviousSibling Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.PreviousSibling Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.PreviousSibling Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.PreviousSibling Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.PreviousSibling Example/VB/source.vb#1)]  
  
<a name="Find"></a>   
## <a name="find-nodes"></a><span data-ttu-id="f9fca-158">尋找節點</span><span class="sxs-lookup"><span data-stu-id="f9fca-158">Find nodes</span></span>  
 <span data-ttu-id="f9fca-159">最常見的方式來尋找一個或多個節點的資料是使用 XPath 查詢字串，但另外還有不需要的方法。</span><span class="sxs-lookup"><span data-stu-id="f9fca-159">The most popular way to find one or more nodes of data is to use an XPath query string, but there are also methods that don’t require one.</span></span>  
  
 <span data-ttu-id="f9fca-160">**取得單一節點**</span><span class="sxs-lookup"><span data-stu-id="f9fca-160">**Get a single node**</span></span>  
  
 <span data-ttu-id="f9fca-161">此範例中找出活頁簿使用 ISBN 編號。</span><span class="sxs-lookup"><span data-stu-id="f9fca-161">This example locates a book by using the ISBN number.</span></span>  
  
 [!code-cpp[XMLProcessingApp#3](~/samples/snippets/cpp/VS_Snippets_Data/xmlprocessingapp/cpp/xmldomprocessing.cpp#3)]
 [!code-csharp[XMLProcessingApp#3](~/samples/snippets/csharp/VS_Snippets_Data/xmlprocessingapp/cs/xmlhelpermethods.cs#3)]
 [!code-vb[XMLProcessingApp#3](~/samples/snippets/visualbasic/VS_Snippets_Data/xmlprocessingapp/vb/xmlhelpermethods.vb#3)]  
  
 <span data-ttu-id="f9fca-162">此範例中使用的字串為 Xpath 查詢。</span><span class="sxs-lookup"><span data-stu-id="f9fca-162">The string used in this example is an Xpath query.</span></span> <span data-ttu-id="f9fca-163">您可以找到更多範例的方式在這裡： [XPath 範例](https://msdn.microsoft.com/library/ms256086.aspx)。</span><span class="sxs-lookup"><span data-stu-id="f9fca-163">You can find more examples of them here:   [XPath examples](https://msdn.microsoft.com/library/ms256086.aspx).</span></span>  
  
 <span data-ttu-id="f9fca-164">您也可以使用<xref:System.Xml.XmlDocument.GetElementById%2A>擷取節點。</span><span class="sxs-lookup"><span data-stu-id="f9fca-164">You can also use the <xref:System.Xml.XmlDocument.GetElementById%2A> to retrieve nodes.</span></span> <span data-ttu-id="f9fca-165">若要使用此方法，您必須定義中宣告文件類型定義 XML 檔案的識別碼。</span><span class="sxs-lookup"><span data-stu-id="f9fca-165">To use this approach, you’ll have to define ID’s in the document type definition declarations of your XML file.</span></span>  
  
 <span data-ttu-id="f9fca-166">取得節點之後，您會取得的屬性或子節點的值。</span><span class="sxs-lookup"><span data-stu-id="f9fca-166">After you get a node, you get the value of attributes or child nodes.</span></span> <span data-ttu-id="f9fca-167">此範例會執行，與書籍節點。</span><span class="sxs-lookup"><span data-stu-id="f9fca-167">This example does that with a book node.</span></span>  
  
 [!code-cpp[XMLProcessingApp#4](~/samples/snippets/cpp/VS_Snippets_Data/xmlprocessingapp/cpp/xmldomprocessing.cpp#4)]
 [!code-csharp[XMLProcessingApp#4](~/samples/snippets/csharp/VS_Snippets_Data/xmlprocessingapp/cs/xmlhelpermethods.cs#4)]
 [!code-vb[XMLProcessingApp#4](~/samples/snippets/visualbasic/VS_Snippets_Data/xmlprocessingapp/vb/xmlhelpermethods.vb#4)]  
  
 <span data-ttu-id="f9fca-168">**取得節點的集合**</span><span class="sxs-lookup"><span data-stu-id="f9fca-168">**Get a collection of nodes**</span></span>  
  
 <span data-ttu-id="f9fca-169">這個範例會選取所有書籍的作者姓氏所在**Austen**，然後再變更的書籍的價格。</span><span class="sxs-lookup"><span data-stu-id="f9fca-169">This example selects all books where the author's last name is **Austen**, and then changes the price of those books.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.SelectNodes Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.SelectNodes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.SelectNodes Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.SelectNodes Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.SelectNodes Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.SelectNodes Example/VB/source.vb#1)]  
  
 <span data-ttu-id="f9fca-170">您也可以使用節點名稱，以取得節點的集合。</span><span class="sxs-lookup"><span data-stu-id="f9fca-170">You can also get a collection of nodes by using the name of the node.</span></span> <span data-ttu-id="f9fca-171">例如，這個範例會取得所有書籍標題的集合。</span><span class="sxs-lookup"><span data-stu-id="f9fca-171">For example, this example gets a collection of all book titles.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.GetElementsByTagName Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.GetElementsByTagName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.GetElementsByTagName Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.GetElementsByTagName Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.GetElementsByTagName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.GetElementsByTagName Example/VB/source.vb#1)]  
  
 <span data-ttu-id="f9fca-172">**完整的範例：** [管理記憶體中的 XML 使用 XmlDocument 類別和其他相關型別](https://code.msdn.microsoft.com/windowsdesktop/Manipulate-XML-in-memory-4b612d6b/view/SourceCode)</span><span class="sxs-lookup"><span data-stu-id="f9fca-172">**Complete sample:** [Manipulate XML in-Memory by using the XmlDocument class and other related types](https://code.msdn.microsoft.com/windowsdesktop/Manipulate-XML-in-memory-4b612d6b/view/SourceCode)</span></span>  
  
 <span data-ttu-id="f9fca-173">**進一步了解：** [選取節點使用 XPath 巡覽](~/docs/standard/data/xml/select-nodes-using-xpath-navigation.md)</span><span class="sxs-lookup"><span data-stu-id="f9fca-173">**Learn more:** [Select Nodes Using XPath Navigation](~/docs/standard/data/xml/select-nodes-using-xpath-navigation.md)</span></span>  
  
<a name="Edit"></a>   
## <a name="edit-nodes"></a><span data-ttu-id="f9fca-174">編輯節點</span><span class="sxs-lookup"><span data-stu-id="f9fca-174">Edit nodes</span></span>  
 <span data-ttu-id="f9fca-175">這個範例會編輯書籍節點和其屬性。</span><span class="sxs-lookup"><span data-stu-id="f9fca-175">This example edits a book node and its attributes.</span></span>  
  
 [!code-cpp[XMLProcessingApp#7](~/samples/snippets/cpp/VS_Snippets_Data/xmlprocessingapp/cpp/xmldomprocessing.cpp#7)]
 [!code-csharp[XMLProcessingApp#7](~/samples/snippets/csharp/VS_Snippets_Data/xmlprocessingapp/cs/xmlhelpermethods.cs#7)]
 [!code-vb[XMLProcessingApp#7](~/samples/snippets/visualbasic/VS_Snippets_Data/xmlprocessingapp/vb/xmlhelpermethods.vb#7)]  
  
 <span data-ttu-id="f9fca-176">**進一步了解：** [修改節點、 內容和 XML 文件中的值](~/docs/standard/data/xml/modifying-nodes-content-and-values-in-an-xml-document.md)</span><span class="sxs-lookup"><span data-stu-id="f9fca-176">**Learn more:** [Modifying Nodes, Content, and Values in an XML Document](~/docs/standard/data/xml/modifying-nodes-content-and-values-in-an-xml-document.md)</span></span>  
  
 <span data-ttu-id="f9fca-177">**完整的範例：** [管理記憶體中的 XML 使用 XmlDocument 類別和其他相關型別](https://code.msdn.microsoft.com/windowsdesktop/Manipulate-XML-in-memory-4b612d6b/view/SourceCode)</span><span class="sxs-lookup"><span data-stu-id="f9fca-177">**Complete sample:** [Manipulate XML in-Memory by using the XmlDocument class and other related types](https://code.msdn.microsoft.com/windowsdesktop/Manipulate-XML-in-memory-4b612d6b/view/SourceCode)</span></span>  
  
<a name="Add"></a>   
## <a name="add-nodes"></a><span data-ttu-id="f9fca-178">加入節點</span><span class="sxs-lookup"><span data-stu-id="f9fca-178">Add nodes</span></span>  
 <span data-ttu-id="f9fca-179">若要加入的節點，使用<xref:System.Xml.XmlDocument.CreateElement%2A>方法或<xref:System.Xml.XmlDocument.CreateNode%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f9fca-179">To add a node, use the <xref:System.Xml.XmlDocument.CreateElement%2A> method or the <xref:System.Xml.XmlDocument.CreateNode%2A> method.</span></span>  
  
 <span data-ttu-id="f9fca-180">若要新增的資料節點，例如活頁簿，請使用<xref:System.Xml.XmlDocument.CreateElement%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f9fca-180">To add a data node such as a book, use the <xref:System.Xml.XmlDocument.CreateElement%2A> method.</span></span>  
  
 <span data-ttu-id="f9fca-181">任何其他類型的節點，例如註解、 泛空白字元節點或 CDATA 節點使用<xref:System.Xml.XmlDocument.CreateNode%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f9fca-181">For any other type of node such as a comment, whitespace node, or CDATA node, use the <xref:System.Xml.XmlDocument.CreateNode%2A> method.</span></span>  
  
 <span data-ttu-id="f9fca-182">這個範例會建立書籍節點、 attrubutes 加入該節點，並再將該節點加入至文件。</span><span class="sxs-lookup"><span data-stu-id="f9fca-182">This example creates a book node, adds attrubutes to that node, and then adds that node to the document.</span></span>  
  
 [!code-cpp[XMLProcessingApp#5](~/samples/snippets/cpp/VS_Snippets_Data/xmlprocessingapp/cpp/xmldomprocessing.cpp#5)]
 [!code-csharp[XMLProcessingApp#5](~/samples/snippets/csharp/VS_Snippets_Data/xmlprocessingapp/cs/xmlhelpermethods.cs#5)]
 [!code-vb[XMLProcessingApp#5](~/samples/snippets/visualbasic/VS_Snippets_Data/xmlprocessingapp/vb/xmlhelpermethods.vb#5)]  
  
 <span data-ttu-id="f9fca-183">**完整的範例：** [管理記憶體中的 XML 使用 XmlDocument 類別和其他相關型別](https://code.msdn.microsoft.com/windowsdesktop/Manipulate-XML-in-memory-4b612d6b/view/SourceCode)</span><span class="sxs-lookup"><span data-stu-id="f9fca-183">**Complete sample:** [Manipulate XML in-Memory by using the XmlDocument class and other related types](https://code.msdn.microsoft.com/windowsdesktop/Manipulate-XML-in-memory-4b612d6b/view/SourceCode)</span></span>  
  
 <span data-ttu-id="f9fca-184">**進一步了解：** [將節點插入 XML 文件](~/docs/standard/data/xml/inserting-nodes-into-an-xml-document.md)</span><span class="sxs-lookup"><span data-stu-id="f9fca-184">**Learn more:** [Inserting Nodes into an XML Document](~/docs/standard/data/xml/inserting-nodes-into-an-xml-document.md)</span></span>  
  
<a name="Remove"></a>   
## <a name="remove-nodes"></a><span data-ttu-id="f9fca-185">移除節點</span><span class="sxs-lookup"><span data-stu-id="f9fca-185">Remove nodes</span></span>  
 <span data-ttu-id="f9fca-186">若要移除的節點，請使用<xref:System.Xml.XmlNode.RemoveChild%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f9fca-186">To remove a node, use the <xref:System.Xml.XmlNode.RemoveChild%2A> method.</span></span>  
  
 <span data-ttu-id="f9fca-187">此範例會移除活頁簿，從文件和之前的書籍節點會出現任何空白字元。</span><span class="sxs-lookup"><span data-stu-id="f9fca-187">This example removes a book from the document and any whitespace that appears just before the book node.</span></span>  
  
 [!code-cpp[XMLProcessingApp#6](~/samples/snippets/cpp/VS_Snippets_Data/xmlprocessingapp/cpp/xmldomprocessing.cpp#6)]
 [!code-csharp[XMLProcessingApp#6](~/samples/snippets/csharp/VS_Snippets_Data/xmlprocessingapp/cs/xmlhelpermethods.cs#6)]
 [!code-vb[XMLProcessingApp#6](~/samples/snippets/visualbasic/VS_Snippets_Data/xmlprocessingapp/vb/xmlhelpermethods.vb#6)]  
  
 <span data-ttu-id="f9fca-188">**完整的範例：** [管理記憶體中的 XML 使用 XmlDocument 類別和其他相關型別](https://code.msdn.microsoft.com/windowsdesktop/Manipulate-XML-in-memory-4b612d6b/view/SourceCode)</span><span class="sxs-lookup"><span data-stu-id="f9fca-188">**Complete sample:** [Manipulate XML in-Memory by using the XmlDocument class and other related types](https://code.msdn.microsoft.com/windowsdesktop/Manipulate-XML-in-memory-4b612d6b/view/SourceCode)</span></span>  
  
 <span data-ttu-id="f9fca-189">**進一步了解：** [移除節點、 內容和值從 XML 文件](~/docs/standard/data/xml/removing-nodes-content-and-values-from-an-xml-document.md)</span><span class="sxs-lookup"><span data-stu-id="f9fca-189">**Learn more:** [Removing Nodes, Content, and Values from an XML Document](~/docs/standard/data/xml/removing-nodes-content-and-values-from-an-xml-document.md)</span></span>  
  
<a name="Position"></a>   
## <a name="position-nodes"></a><span data-ttu-id="f9fca-190">位置節點</span><span class="sxs-lookup"><span data-stu-id="f9fca-190">Position nodes</span></span>  
 <span data-ttu-id="f9fca-191">您可以選擇想要使用文件中出現的節點<xref:System.Xml.XmlNode.InsertBefore%2A>和<xref:System.Xml.XmlNode.InsertAfter%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f9fca-191">You can choose where you want a node to appear in your document by using the <xref:System.Xml.XmlNode.InsertBefore%2A> and <xref:System.Xml.XmlNode.InsertAfter%2A> methods.</span></span>  
  
 <span data-ttu-id="f9fca-192">此範例示範兩個 helper 方法。</span><span class="sxs-lookup"><span data-stu-id="f9fca-192">This example shows two helper methods.</span></span> <span data-ttu-id="f9fca-193">其中一個在清單中移動較高的節點。</span><span class="sxs-lookup"><span data-stu-id="f9fca-193">One of them moves a node higher in a list.</span></span> <span data-ttu-id="f9fca-194">另一個移動較低的節點。</span><span class="sxs-lookup"><span data-stu-id="f9fca-194">The other one moves a node lower.</span></span>  
  
 <span data-ttu-id="f9fca-195">這些方法無法用於應用程式可讓使用者在書籍清單中向上和向下移動書籍。</span><span class="sxs-lookup"><span data-stu-id="f9fca-195">These methods could be used in an application that enables users to move books up and down in a list of books.</span></span> <span data-ttu-id="f9fca-196">當使用者選擇活頁簿，並按下向上或向下按鈕時，您的程式碼可以呼叫方法，這些位置對應的書籍節點之前或之後的其他書籍節點。</span><span class="sxs-lookup"><span data-stu-id="f9fca-196">When a user chooses a book and presses an up or down button, your code could call methods like these to position the corresponding book node before or after other book nodes.</span></span>  
  
 [!code-cpp[XMLProcessingApp#8](~/samples/snippets/cpp/VS_Snippets_Data/xmlprocessingapp/cpp/xmldomprocessing.cpp#8)]
 [!code-csharp[XMLProcessingApp#8](~/samples/snippets/csharp/VS_Snippets_Data/xmlprocessingapp/cs/xmlhelpermethods.cs#8)]
 [!code-vb[XMLProcessingApp#8](~/samples/snippets/visualbasic/VS_Snippets_Data/xmlprocessingapp/vb/xmlhelpermethods.vb#8)]  
  
 <span data-ttu-id="f9fca-197">**完整的範例：** [管理記憶體中的 XML 使用 XmlDocument 類別和其他相關型別](https://code.msdn.microsoft.com/windowsdesktop/Manipulate-XML-in-memory-4b612d6b/view/SourceCode)</span><span class="sxs-lookup"><span data-stu-id="f9fca-197">**Complete sample:** [Manipulate XML in-Memory by using the XmlDocument class and other related types](https://code.msdn.microsoft.com/windowsdesktop/Manipulate-XML-in-memory-4b612d6b/view/SourceCode)</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.XmlNodeChangedEventHandler" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f9fca-198">初始化 <see cref="T:System.Xml.XmlDocument" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-198">Initializes a new instance of the <see cref="T:System.Xml.XmlDocument" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlDocument();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f9fca-199">初始化 <see cref="T:System.Xml.XmlDocument" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-199">Initializes a new instance of the <see cref="T:System.Xml.XmlDocument" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f9fca-200">以下是範例的載入時間驗證。</span><span class="sxs-lookup"><span data-stu-id="f9fca-200">The following is an example of load-time validation.</span></span> <span data-ttu-id="f9fca-201">文件類型定義 (DTD) 驗證<xref:System.Xml.XmlReader>傳遞至<xref:System.Xml.XmlDocument.Load%2A>方法和<xref:System.Xml.Schema.ValidationEventHandler>提供通知的任何驗證錯誤的使用者。</span><span class="sxs-lookup"><span data-stu-id="f9fca-201">A document type definition (DTD) validating <xref:System.Xml.XmlReader> is passed to the <xref:System.Xml.XmlDocument.Load%2A> method and a <xref:System.Xml.Schema.ValidationEventHandler> is provided to notify users of any validation errors.</span></span> <span data-ttu-id="f9fca-202">在此範例中找到驗證錯誤，但仍在載入文件。</span><span class="sxs-lookup"><span data-stu-id="f9fca-202">In this example a validation error is found, but the document is still loaded.</span></span> <span data-ttu-id="f9fca-203">或者，您可以定義驗證<xref:System.Xml.XmlReader>擲回例外狀況，並在不指定發現驗證錯誤時停止載入處理序<xref:System.Xml.Schema.ValidationEventHandler>。</span><span class="sxs-lookup"><span data-stu-id="f9fca-203">Alternatively, you can define a validating <xref:System.Xml.XmlReader> to throw an exception and stop the load process when a validation error is found by not specifying the <xref:System.Xml.Schema.ValidationEventHandler>.</span></span> <span data-ttu-id="f9fca-204">如需驗證 XML 資料的詳細資訊，請參閱 <xref:System.Xml.XmlReader> 參考頁面的＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="f9fca-204">For more information about validating XML data, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 [!code-cpp[XmlDocument.cctor#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlDocument.cctor/CPP/docload.cpp#1)]
 [!code-csharp[XmlDocument.cctor#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlDocument.cctor/CS/docload.cs#1)]
 [!code-vb[XmlDocument.cctor#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlDocument.cctor/VB/docload.vb#1)]  
  
 <span data-ttu-id="f9fca-205">該範例使用 `bookDTD.xml` 檔案做為輸入。</span><span class="sxs-lookup"><span data-stu-id="f9fca-205">The example uses the `bookDTD.xml` file as input.</span></span>  
  
 [!code-xml[XmlDocument.cctor#2](~/samples/snippets/xml/VS_Snippets_Data/XmlDocument.cctor/XML/bookdtd.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlDocument.Load(System.String)" />
        <altmember cref="M:System.Xml.XmlDocument.LoadXml(System.String)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal XmlDocument (System.Xml.XmlImplementation imp);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlImplementation imp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.#ctor(System.Xml.XmlImplementation)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (imp As XmlImplementation)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; XmlDocument(System::Xml::XmlImplementation ^ imp);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlDocument : System.Xml.XmlImplementation -&gt; System.Xml.XmlDocument" Usage="new System.Xml.XmlDocument imp" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="imp" Type="System.Xml.XmlImplementation" />
      </Parameters>
      <Docs>
        <param name="imp">
          <span data-ttu-id="f9fca-206">要使用的 <see langword="XmlImplementation" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-206">The <see langword="XmlImplementation" /> to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9fca-207">使用指定的 <see langword="XmlDocument" /> 初始化 <see cref="T:System.Xml.XmlImplementation" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-207">Initializes a new instance of the <see langword="XmlDocument" /> class with the specified <see cref="T:System.Xml.XmlImplementation" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlDocument (System.Xml.XmlNameTable nt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlNameTable nt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.#ctor(System.Xml.XmlNameTable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (nt As XmlNameTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlDocument(System::Xml::XmlNameTable ^ nt);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlDocument : System.Xml.XmlNameTable -&gt; System.Xml.XmlDocument" Usage="new System.Xml.XmlDocument nt" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="nt" Type="System.Xml.XmlNameTable" />
      </Parameters>
      <Docs>
        <param name="nt">
          <span data-ttu-id="f9fca-208">要使用的 <see langword="XmlNameTable" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-208">The <see langword="XmlNameTable" /> to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9fca-209">使用指定的 <see langword="XmlDocument" /> 初始化 <see cref="T:System.Xml.XmlNameTable" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-209">Initializes a new instance of the <see langword="XmlDocument" /> class with the specified <see cref="T:System.Xml.XmlNameTable" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseURI">
      <MemberSignature Language="C#" Value="public override string BaseURI { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseURI" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlDocument.BaseURI" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property BaseURI As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ BaseURI { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseURI : string" Usage="System.Xml.XmlDocument.BaseURI" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9fca-210">取得目前節點的基底 (Base) URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-210">Gets the base URI of the current node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9fca-211">節點載入的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-211">The location from which the node was loaded.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9fca-212">網路的 XML 文件由使用各種 W3C 標準包含機制彙總的資料區塊組成，因此包含來自不同位置的節點。</span><span class="sxs-lookup"><span data-stu-id="f9fca-212">A networked XML document is comprised of chunks of data aggregated using various W3C standard inclusion mechanisms and therefore contains nodes that come from different places.</span></span> <span data-ttu-id="f9fca-213">`BaseURI`會告訴您這些節點的來源。</span><span class="sxs-lookup"><span data-stu-id="f9fca-213">The `BaseURI` tells you where these nodes came from.</span></span>  
  
 <span data-ttu-id="f9fca-214">文件節點`BaseURI`傳回的 XML 文件的位置。</span><span class="sxs-lookup"><span data-stu-id="f9fca-214">For Document nodes, `BaseURI` returns the location of the XML document.</span></span> <span data-ttu-id="f9fca-215">例如，如果`XmlDocument`使用下列呼叫文件已載入。負載 (「http://server/mydata.xml")，則`BaseURI`文件節點是http://server/mydata.xml。</span><span class="sxs-lookup"><span data-stu-id="f9fca-215">For example, if the `XmlDocument` was loaded using the following call doc.Load("http://server/mydata.xml"), the `BaseURI` for the document node is http://server/mydata.xml.</span></span> <span data-ttu-id="f9fca-216">不過，如果<xref:System.Xml.XmlDocument.Load%2A>方法會被重新導向至不同的 URI，伺服器`BaseURI`傳回傳遞至與原始 URI`Load`方法。</span><span class="sxs-lookup"><span data-stu-id="f9fca-216">However, if the <xref:System.Xml.XmlDocument.Load%2A> method is redirected by server to a different URI, `BaseURI` returns the original URI passed to the `Load` method.</span></span>  
  
 <span data-ttu-id="f9fca-217">這個屬性是文件物件模型的 Microsoft 擴充功能。</span><span class="sxs-lookup"><span data-stu-id="f9fca-217">This property is a Microsoft extension to the Document Object Model (DOM).</span></span> <span data-ttu-id="f9fca-218">如需有關`BaseURI`以及如何其行為與其他節點型別，請參閱<xref:System.Xml.XmlNode.BaseURI%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="f9fca-218">For additional information on `BaseURI` and how it behaves with other node types, see <xref:System.Xml.XmlNode.BaseURI%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNode CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Xml.XmlNode CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CloneNode (deep As Boolean) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Xml::XmlNode ^ CloneNode(bool deep);" />
      <MemberSignature Language="F#" Value="override this.CloneNode : bool -&gt; System.Xml.XmlNode" Usage="xmlDocument.CloneNode deep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">
          <span data-ttu-id="f9fca-219">若要在指定的節點下遞迴地複製子樹狀結構，則為 <see langword="true" />；若只要複製節點本身，則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-219">
              <see langword="true" /> to recursively clone the subtree under the specified node; <see langword="false" /> to clone only the node itself.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9fca-220">建立這個節點的複本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-220">Creates a duplicate of this node.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9fca-221">複製的 <see langword="XmlDocument" /> 節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-221">The cloned <see langword="XmlDocument" /> node.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9fca-222">這個方法可做為節點的複製建構函式。</span><span class="sxs-lookup"><span data-stu-id="f9fca-222">This method serves as a copy constructor for nodes.</span></span> <span data-ttu-id="f9fca-223">複製的節點有沒有父代 (<xref:System.Xml.XmlNode.ParentNode%2A>傳回`null`)。</span><span class="sxs-lookup"><span data-stu-id="f9fca-223">The cloned node has no parent (<xref:System.Xml.XmlNode.ParentNode%2A> returns `null`).</span></span>  
  
 <span data-ttu-id="f9fca-224">如果`deep`是`true`，複製的節點包含所有子節點，否則只有`XmlDocument`節點會複製。</span><span class="sxs-lookup"><span data-stu-id="f9fca-224">If `deep` is `true`, the cloned node includes all the child nodes, otherwise only the `XmlDocument` node is cloned.</span></span> <span data-ttu-id="f9fca-225">請參閱<xref:System.Xml.XmlNode.CloneNode%2A?displayProperty=nameWithType>方法以查看此方法在其他節點型別上的運作方式。</span><span class="sxs-lookup"><span data-stu-id="f9fca-225">See the <xref:System.Xml.XmlNode.CloneNode%2A?displayProperty=nameWithType> method to see how this method behaves on other node types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9fca-226">下列範例顯示深層和淺層複製之間的差異。</span><span class="sxs-lookup"><span data-stu-id="f9fca-226">The following example shows the difference between a deep and shallow clone.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.CloneNode Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.CloneNode Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.CloneNode Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.CloneNode Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.CloneNode Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.CloneNode Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f9fca-227">建立具有指定名稱的 <see cref="T:System.Xml.XmlAttribute" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-227">Creates an <see cref="T:System.Xml.XmlAttribute" /> with the specified name.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateAttribute">
      <MemberSignature Language="C#" Value="public System.Xml.XmlAttribute CreateAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlAttribute CreateAttribute(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateAttribute (name As String) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlAttribute ^ CreateAttribute(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.CreateAttribute : string -&gt; System.Xml.XmlAttribute" Usage="xmlDocument.CreateAttribute name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="f9fca-228">屬性的限定名稱 (Qualified Name)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-228">The qualified name of the attribute.</span>
          </span>
          <span data-ttu-id="f9fca-229">如果名稱包含冒號，<see cref="P:System.Xml.XmlNode.Prefix" /> 屬性會反映第一個冒號之前的名稱部分，而 <see cref="P:System.Xml.XmlDocument.LocalName" /> 屬性會反映第一個冒號之後的名稱部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-229">If the name contains a colon, the <see cref="P:System.Xml.XmlNode.Prefix" /> property reflects the part of the name preceding the first colon and the <see cref="P:System.Xml.XmlDocument.LocalName" /> property reflects the part of the name following the first colon.</span>
          </span>
          <span data-ttu-id="f9fca-230">除非前置詞能夠辨認為內建前置詞 (例如 xmlns)，否則 <see cref="P:System.Xml.XmlNode.NamespaceURI" /> 會保持空白。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-230">The <see cref="P:System.Xml.XmlNode.NamespaceURI" /> remains empty unless the prefix is a recognized built-in prefix such as xmlns.</span>
          </span>
          <span data-ttu-id="f9fca-231">在此情況下，<see langword="NamespaceURI" /> 的值為 http://www.w3.org/2000/xmlns/。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-231">In this case <see langword="NamespaceURI" /> has a value of http://www.w3.org/2000/xmlns/.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9fca-232">建立具有指定 <see cref="P:System.Xml.XmlDocument.Name" /> 的 <see cref="T:System.Xml.XmlAttribute" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-232">Creates an <see cref="T:System.Xml.XmlAttribute" /> with the specified <see cref="P:System.Xml.XmlDocument.Name" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9fca-233">新的 <see langword="XmlAttribute" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-233">The new <see langword="XmlAttribute" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9fca-234">`XmlAttribute`可以加入至<xref:System.Xml.XmlElement>使用<xref:System.Xml.XmlElement.SetAttributeNode%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f9fca-234">The `XmlAttribute` can be added to an <xref:System.Xml.XmlElement> using the <xref:System.Xml.XmlElement.SetAttributeNode%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9fca-235">下列建立屬性，並將它加入至 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="f9fca-235">The following creates an attribute and adds it to an XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.CreateAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.CreateAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.CreateAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.CreateAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.CreateAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.CreateAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAttribute">
      <MemberSignature Language="C#" Value="public System.Xml.XmlAttribute CreateAttribute (string qualifiedName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlAttribute CreateAttribute(string qualifiedName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateAttribute (qualifiedName As String, namespaceURI As String) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlAttribute ^ CreateAttribute(System::String ^ qualifiedName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="member this.CreateAttribute : string * string -&gt; System.Xml.XmlAttribute" Usage="xmlDocument.CreateAttribute (qualifiedName, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="qualifiedName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="qualifiedName">
          <span data-ttu-id="f9fca-236">屬性的限定名稱 (Qualified Name)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-236">The qualified name of the attribute.</span>
          </span>
          <span data-ttu-id="f9fca-237">如果名稱包含冒號，<see cref="P:System.Xml.XmlNode.Prefix" /> 屬性會反映冒號前面的名稱部分，而  <see cref="P:System.Xml.XmlDocument.LocalName" /> 屬性會反映冒號後面的名稱部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-237">If the name contains a colon then the <see cref="P:System.Xml.XmlNode.Prefix" /> property will reflect the part of the name preceding the colon and the <see cref="P:System.Xml.XmlDocument.LocalName" /> property will reflect the part of the name after the colon.</span>
          </span>
        </param>
        <param name="namespaceURI">
          <span data-ttu-id="f9fca-238">屬性的命名空間 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-238">The namespaceURI of the attribute.</span>
          </span>
          <span data-ttu-id="f9fca-239">如果限定名稱包含 xmlns 前置詞，則此參數必須是 http://www.w3.org/2000/xmlns/。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-239">If the qualified name includes a prefix of xmlns, then this parameter must be http://www.w3.org/2000/xmlns/.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9fca-240">建立具有指定限定名稱和 <see cref="P:System.Xml.XmlNode.NamespaceURI" /> 的 <see cref="T:System.Xml.XmlAttribute" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-240">Creates an <see cref="T:System.Xml.XmlAttribute" /> with the specified qualified name and <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9fca-241">新的 <see langword="XmlAttribute" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-241">The new <see langword="XmlAttribute" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9fca-242">`XmlAttribute`可以加入至<xref:System.Xml.XmlElement>使用<xref:System.Xml.XmlElement.SetAttributeNode%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f9fca-242">The `XmlAttribute` can be added to an <xref:System.Xml.XmlElement> using the <xref:System.Xml.XmlElement.SetAttributeNode%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAttribute">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlAttribute CreateAttribute (string prefix, string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlAttribute CreateAttribute(string prefix, string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateAttribute(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateAttribute (prefix As String, localName As String, namespaceURI As String) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlAttribute ^ CreateAttribute(System::String ^ prefix, System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="abstract member CreateAttribute : string * string * string -&gt; System.Xml.XmlAttribute&#xA;override this.CreateAttribute : string * string * string -&gt; System.Xml.XmlAttribute" Usage="xmlDocument.CreateAttribute (prefix, localName, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">
          <span data-ttu-id="f9fca-243">屬性的前置詞 (如有此項)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-243">The prefix of the attribute (if any).</span>
          </span>
          <span data-ttu-id="f9fca-244">String.Empty 與 <see langword="null" /> 相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-244">String.Empty and <see langword="null" /> are equivalent.</span>
          </span>
        </param>
        <param name="localName">
          <span data-ttu-id="f9fca-245">屬性的本機名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-245">The local name of the attribute.</span>
          </span>
        </param>
        <param name="namespaceURI">
          <span data-ttu-id="f9fca-246">屬性的命名空間 URI (如有此項)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-246">The namespace URI of the attribute (if any).</span>
          </span>
          <span data-ttu-id="f9fca-247">String.Empty 與 <see langword="null" /> 相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-247">String.Empty and <see langword="null" /> are equivalent.</span>
          </span>
          <span data-ttu-id="f9fca-248">如果「前置詞」<c></c>是 xmlns，則這個參數必須是 http://www.w3.org/2000/xmlns/，否則會擲回例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-248">If <c>prefix</c> is xmlns, then this parameter must be http://www.w3.org/2000/xmlns/; otherwise an exception is thrown.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9fca-249">建立具有指定的 <see cref="P:System.Xml.XmlNode.Prefix" />、<see cref="P:System.Xml.XmlDocument.LocalName" /> 和 <see cref="P:System.Xml.XmlNode.NamespaceURI" /> 的 <see cref="T:System.Xml.XmlAttribute" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-249">Creates an <see cref="T:System.Xml.XmlAttribute" /> with the specified <see cref="P:System.Xml.XmlNode.Prefix" />, <see cref="P:System.Xml.XmlDocument.LocalName" />, and <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9fca-250">新的 <see langword="XmlAttribute" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-250">The new <see langword="XmlAttribute" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9fca-251">`XmlAttribute`可以加入至<xref:System.Xml.XmlElement>使用<xref:System.Xml.XmlElement.SetAttributeNode%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f9fca-251">The `XmlAttribute` can be added to an <xref:System.Xml.XmlElement> using the <xref:System.Xml.XmlElement.SetAttributeNode%2A> method.</span></span>  
  
 <span data-ttu-id="f9fca-252">這個方法是 Microsoft 擴充功能的文件物件模型 (DOM)。</span><span class="sxs-lookup"><span data-stu-id="f9fca-252">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCDataSection">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlCDataSection CreateCDataSection (string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlCDataSection CreateCDataSection(string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateCDataSection(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateCDataSection (data As String) As XmlCDataSection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlCDataSection ^ CreateCDataSection(System::String ^ data);" />
      <MemberSignature Language="F#" Value="abstract member CreateCDataSection : string -&gt; System.Xml.XmlCDataSection&#xA;override this.CreateCDataSection : string -&gt; System.Xml.XmlCDataSection" Usage="xmlDocument.CreateCDataSection data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlCDataSection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="f9fca-253">新 <see langword="XmlCDataSection" /> 的內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-253">The content of the new <see langword="XmlCDataSection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9fca-254">建立包含指定資料的 <see cref="T:System.Xml.XmlCDataSection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-254">Creates an <see cref="T:System.Xml.XmlCDataSection" /> containing the specified data.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9fca-255">新的 <see langword="XmlCDataSection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-255">The new <see langword="XmlCDataSection" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9fca-256">雖然這個方法會在文件的內容中建立新的物件，它不會自動將新的物件至文件樹狀結構。</span><span class="sxs-lookup"><span data-stu-id="f9fca-256">Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</span></span> <span data-ttu-id="f9fca-257">若要加入新的物件，您必須明確呼叫其中一個節點插入方法。</span><span class="sxs-lookup"><span data-stu-id="f9fca-257">To add the new object, you must explicitly call one of the node insert methods.</span></span>  
  
 <span data-ttu-id="f9fca-258">根據 W3C 可延伸標記語言 (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210) CDataSection 節點時，允許在項目節點和 EntityReference 節點 EntityReference 節點不是屬性節點的子系.</span><span class="sxs-lookup"><span data-stu-id="f9fca-258">According to the W3C Extensible Markup Language (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210), CDataSection nodes are allowed within Element nodes and in EntityReference nodes when the EntityReference node is not a child of an Attribute node.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9fca-259">下列範例會建立 CDATA 節點，並將它加入至文件。</span><span class="sxs-lookup"><span data-stu-id="f9fca-259">The following example creates a CDATA node and adds it to the document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.CreateCDataSection Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.CreateCDataSection Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.CreateCDataSection Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.CreateCDataSection Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.CreateCDataSection Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.CreateCDataSection Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateComment">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlComment CreateComment (string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlComment CreateComment(string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateComment(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateComment (data As String) As XmlComment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlComment ^ CreateComment(System::String ^ data);" />
      <MemberSignature Language="F#" Value="abstract member CreateComment : string -&gt; System.Xml.XmlComment&#xA;override this.CreateComment : string -&gt; System.Xml.XmlComment" Usage="xmlDocument.CreateComment data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlComment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="f9fca-260">新 <see langword="XmlComment" /> 的內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-260">The content of the new <see langword="XmlComment" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9fca-261">建立包含指定資料的 <see cref="T:System.Xml.XmlComment" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-261">Creates an <see cref="T:System.Xml.XmlComment" /> containing the specified data.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9fca-262">新的 <see langword="XmlComment" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-262">The new <see langword="XmlComment" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9fca-263">雖然這個方法會在文件的內容中建立新的物件，它不會自動將新的物件至文件樹狀結構。</span><span class="sxs-lookup"><span data-stu-id="f9fca-263">Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</span></span> <span data-ttu-id="f9fca-264">若要加入新的物件，您必須明確呼叫其中一個節點插入方法。</span><span class="sxs-lookup"><span data-stu-id="f9fca-264">To add the new object, you must explicitly call one of the node insert methods.</span></span>  
  
 <span data-ttu-id="f9fca-265">根據 W3C 可延伸標記語言 (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210) 中，註解節點時，才允許文件、 元素和 EntityReference 節點內 EntityReference 節點不是屬性的子系節點。</span><span class="sxs-lookup"><span data-stu-id="f9fca-265">According to the W3C Extensible Markup Language (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210), Comment nodes are only allowed within Document, Element and EntityReference nodes, when the EntityReference node is not a child of an Attribute node.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9fca-266">下列範例會建立註解，並將它加入至 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="f9fca-266">The following example creates a comment and adds it to an XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.CreateComment Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.CreateComment Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.CreateComment Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.CreateComment Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.CreateComment Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.CreateComment Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDefaultAttribute">
      <MemberSignature Language="C#" Value="protected internal virtual System.Xml.XmlAttribute CreateDefaultAttribute (string prefix, string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Xml.XmlAttribute CreateDefaultAttribute(string prefix, string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateDefaultAttribute(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CreateDefaultAttribute (prefix As String, localName As String, namespaceURI As String) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Xml::XmlAttribute ^ CreateDefaultAttribute(System::String ^ prefix, System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="abstract member CreateDefaultAttribute : string * string * string -&gt; System.Xml.XmlAttribute&#xA;override this.CreateDefaultAttribute : string * string * string -&gt; System.Xml.XmlAttribute" Usage="xmlDocument.CreateDefaultAttribute (prefix, localName, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">
          <span data-ttu-id="f9fca-267">屬性的前置詞 (如有此項)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-267">The prefix of the attribute (if any).</span>
          </span>
        </param>
        <param name="localName">
          <span data-ttu-id="f9fca-268">屬性的本機名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-268">The local name of the attribute.</span>
          </span>
        </param>
        <param name="namespaceURI">
          <span data-ttu-id="f9fca-269">屬性的命名空間 URI (如有此項)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-269">The namespace URI of the attribute (if any).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9fca-270">建立具有指定前置詞、區域名稱和命名空間 URI 的預設屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-270">Creates a default attribute with the specified prefix, local name and namespace URI.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9fca-271">新的 <see cref="T:System.Xml.XmlAttribute" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-271">The new <see cref="T:System.Xml.XmlAttribute" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9fca-272">這個方法是 Microsoft 擴充功能的文件物件模型 (DOM)。</span><span class="sxs-lookup"><span data-stu-id="f9fca-272">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDocumentFragment">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlDocumentFragment CreateDocumentFragment ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlDocumentFragment CreateDocumentFragment() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateDocumentFragment" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateDocumentFragment () As XmlDocumentFragment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlDocumentFragment ^ CreateDocumentFragment();" />
      <MemberSignature Language="F#" Value="abstract member CreateDocumentFragment : unit -&gt; System.Xml.XmlDocumentFragment&#xA;override this.CreateDocumentFragment : unit -&gt; System.Xml.XmlDocumentFragment" Usage="xmlDocument.CreateDocumentFragment " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDocumentFragment</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f9fca-273">建立 <see cref="T:System.Xml.XmlDocumentFragment" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-273">Creates an <see cref="T:System.Xml.XmlDocumentFragment" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9fca-274">新的 <see langword="XmlDocumentFragment" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-274">The new <see langword="XmlDocumentFragment" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9fca-275">DocumentFragment 節點無法插入至文件。</span><span class="sxs-lookup"><span data-stu-id="f9fca-275">DocumentFragment nodes cannot be inserted into a document.</span></span> <span data-ttu-id="f9fca-276">不過，您可以將 DocumentFragment 節點的子節點插入文件。</span><span class="sxs-lookup"><span data-stu-id="f9fca-276">However, you can insert children of the DocumentFragment node into a document.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9fca-277">下列範例會將新節點加入至 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="f9fca-277">The following example adds new nodes to an XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.CreateDocumentFragment Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.CreateDocumentFragment Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.CreateDocumentFragment Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.CreateDocumentFragment Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.CreateDocumentFragment Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.CreateDocumentFragment Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDocumentType">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlDocumentType CreateDocumentType (string name, string publicId, string systemId, string internalSubset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlDocumentType CreateDocumentType(string name, string publicId, string systemId, string internalSubset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateDocumentType(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateDocumentType (name As String, publicId As String, systemId As String, internalSubset As String) As XmlDocumentType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlDocumentType ^ CreateDocumentType(System::String ^ name, System::String ^ publicId, System::String ^ systemId, System::String ^ internalSubset);" />
      <MemberSignature Language="F#" Value="abstract member CreateDocumentType : string * string * string * string -&gt; System.Xml.XmlDocumentType&#xA;override this.CreateDocumentType : string * string * string * string -&gt; System.Xml.XmlDocumentType" Usage="xmlDocument.CreateDocumentType (name, publicId, systemId, internalSubset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDocumentType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="publicId" Type="System.String" />
        <Parameter Name="systemId" Type="System.String" />
        <Parameter Name="internalSubset" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="f9fca-278">文件類型的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-278">Name of the document type.</span>
          </span>
        </param>
        <param name="publicId">
          <span data-ttu-id="f9fca-279">文件類型的公用識別項或 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-279">The public identifier of the document type or <see langword="null" />.</span>
          </span>
          <span data-ttu-id="f9fca-280">您可以指定公用 URI 及系統識別項，以識別外部 DTD 子集的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-280">You can specify a public URI and also a system identifier to identify the location of the external DTD subset.</span>
          </span>
        </param>
        <param name="systemId">
          <span data-ttu-id="f9fca-281">文件類型的系統識別項或 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-281">The system identifier of the document type or <see langword="null" />.</span>
          </span>
          <span data-ttu-id="f9fca-282">指定外部 DTD 子集之檔案位置的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-282">Specifies the URL of the file location for the external DTD subset.</span>
          </span>
        </param>
        <param name="internalSubset">
          <span data-ttu-id="f9fca-283">文件類型的 DTD 內部子集或 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-283">The DTD internal subset of the document type or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9fca-284">傳回新的 <see cref="T:System.Xml.XmlDocumentType" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-284">Returns a new <see cref="T:System.Xml.XmlDocumentType" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9fca-285">新的 <see langword="XmlDocumentType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-285">The new <see langword="XmlDocumentType" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9fca-286">傳回的節點將有剖析<xref:System.Xml.XmlDocumentType.Entities%2A>和<xref:System.Xml.XmlDocumentType.Notations%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="f9fca-286">The returned node will have parsed <xref:System.Xml.XmlDocumentType.Entities%2A> and <xref:System.Xml.XmlDocumentType.Notations%2A> collections.</span></span>  
  
 <span data-ttu-id="f9fca-287">雖然這個方法會在文件的內容中建立新的物件，它不會自動將新的物件至文件樹狀結構。</span><span class="sxs-lookup"><span data-stu-id="f9fca-287">Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</span></span> <span data-ttu-id="f9fca-288">若要加入新的物件，您必須明確呼叫其中一個節點插入方法。</span><span class="sxs-lookup"><span data-stu-id="f9fca-288">To add the new object, you must explicitly call one of the node insert methods.</span></span>  
  
 <span data-ttu-id="f9fca-289">根據 W3C 可延伸標記語言 (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210) DocumentType 節點之內，才允許文件節點。</span><span class="sxs-lookup"><span data-stu-id="f9fca-289">According to the W3C Extensible Markup Language (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210), DocumentType nodes are only allowed within Document nodes.</span></span> <span data-ttu-id="f9fca-290">每個<xref:System.Xml.XmlDocument>可以有只有一個 DocumentType 節點。</span><span class="sxs-lookup"><span data-stu-id="f9fca-290">Each <xref:System.Xml.XmlDocument> can have only one DocumentType node.</span></span> <span data-ttu-id="f9fca-291">DocumentType 節點也必須的根項目之前插入`XmlDocument`（如果文件已經有根項目，您無法加入 DocumentType 節點）。</span><span class="sxs-lookup"><span data-stu-id="f9fca-291">The DocumentType node must also be inserted before the root element of the `XmlDocument` (if the document already has a root element, you cannot add a DocumentType node).</span></span>  
  
 <span data-ttu-id="f9fca-292">如果傳遞的參數不會合併來建置有效`XmlDocumentType`，擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="f9fca-292">If the passed parameters do not combine to build a valid `XmlDocumentType`, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9fca-293">下列範例會建立 DocumentType 節點，並將它加入至 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="f9fca-293">The following example creates a DocumentType node and adds it to an XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.CreateDocumentType Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.CreateDocumentType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.CreateDocumentType Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.CreateDocumentType Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.CreateDocumentType Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.CreateDocumentType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="f9fca-294">
            <para>這個方法沒有繼承要求。完全信任，才能覆寫<see langword="CreateDocumentType" />方法。這個方法是 Microsoft 擴充功能的文件物件模型 (DOM)。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-294">
              <para>This method has an inheritance demand. Full trust is required to override the <see langword="CreateDocumentType" /> method.  This method is a Microsoft extension to the Document Object Model (DOM).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateElement">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f9fca-295">建立 <see cref="T:System.Xml.XmlElement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-295">Creates an <see cref="T:System.Xml.XmlElement" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateElement">
      <MemberSignature Language="C#" Value="public System.Xml.XmlElement CreateElement (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlElement CreateElement(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateElement(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateElement (name As String) As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlElement ^ CreateElement(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.CreateElement : string -&gt; System.Xml.XmlElement" Usage="xmlDocument.CreateElement name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="f9fca-296">項目的限定名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-296">The qualified name of the element.</span>
          </span>
          <span data-ttu-id="f9fca-297">如果名稱包含冒號，<see cref="P:System.Xml.XmlNode.Prefix" /> 屬性會反映冒號之前的名稱部分，而 <see cref="P:System.Xml.XmlDocument.LocalName" /> 屬性會反映冒號之後的名稱部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-297">If the name contains a colon then the <see cref="P:System.Xml.XmlNode.Prefix" /> property reflects the part of the name preceding the colon and the <see cref="P:System.Xml.XmlDocument.LocalName" /> property reflects the part of the name after the colon.</span>
          </span>
          <span data-ttu-id="f9fca-298">限定名稱不能包含 'xmlns' 前置詞。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-298">The qualified name cannot include a prefix of'xmlns'.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9fca-299">建立具有指定名稱的項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-299">Creates an element with the specified name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9fca-300">新的 <see langword="XmlElement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-300">The new <see langword="XmlElement" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9fca-301">請注意執行個體，傳回實作`XmlElement`介面，以便直接在傳回的物件上建立預設屬性。</span><span class="sxs-lookup"><span data-stu-id="f9fca-301">Note that the instance returned implements the `XmlElement` interface, so default attributes would be created directly on the returned object.</span></span>  
  
 <span data-ttu-id="f9fca-302">雖然這個方法會在文件的內容中建立新的物件，它不會自動將新的物件至文件樹狀結構。</span><span class="sxs-lookup"><span data-stu-id="f9fca-302">Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</span></span> <span data-ttu-id="f9fca-303">若要加入新的物件，您必須明確呼叫其中一個節點插入方法。</span><span class="sxs-lookup"><span data-stu-id="f9fca-303">To add the new object, you must explicitly call one of the node insert methods.</span></span>  
  
 <span data-ttu-id="f9fca-304">根據 W3C 可延伸標記語言 (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210) 中，元素節點時，允許在文件和項目節點和 EntityReference 節點 EntityReference 節點不是子系屬性節點。</span><span class="sxs-lookup"><span data-stu-id="f9fca-304">According to the W3C Extensible Markup Language (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210), Element nodes are allowed within Document and Element nodes, and in EntityReference nodes when the EntityReference node is not a child of an Attribute node.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9fca-305">下列範例會建立新的項目，並將它加入至文件。</span><span class="sxs-lookup"><span data-stu-id="f9fca-305">The following example creates a new element and adds it to the document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.CreateElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.CreateElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.CreateElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.CreateElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.CreateElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.CreateElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateElement">
      <MemberSignature Language="C#" Value="public System.Xml.XmlElement CreateElement (string qualifiedName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlElement CreateElement(string qualifiedName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateElement(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateElement (qualifiedName As String, namespaceURI As String) As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlElement ^ CreateElement(System::String ^ qualifiedName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="member this.CreateElement : string * string -&gt; System.Xml.XmlElement" Usage="xmlDocument.CreateElement (qualifiedName, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="qualifiedName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="qualifiedName">
          <span data-ttu-id="f9fca-306">項目的限定名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-306">The qualified name of the element.</span>
          </span>
          <span data-ttu-id="f9fca-307">如果名稱包含冒號，<see cref="P:System.Xml.XmlNode.Prefix" /> 屬性會反映冒號前面的名稱部分，而  <see cref="P:System.Xml.XmlDocument.LocalName" /> 屬性會反映冒號後面的名稱部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-307">If the name contains a colon then the <see cref="P:System.Xml.XmlNode.Prefix" /> property will reflect the part of the name preceding the colon and the <see cref="P:System.Xml.XmlDocument.LocalName" /> property will reflect the part of the name after the colon.</span>
          </span>
          <span data-ttu-id="f9fca-308">限定名稱不能包含 'xmlns' 前置詞。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-308">The qualified name cannot include a prefix of'xmlns'.</span>
          </span>
        </param>
        <param name="namespaceURI">
          <span data-ttu-id="f9fca-309">項目的命名空間 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-309">The namespace URI of the element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9fca-310">建立具有限定名稱和 <see cref="P:System.Xml.XmlNode.NamespaceURI" /> 的 <see cref="T:System.Xml.XmlElement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-310">Creates an <see cref="T:System.Xml.XmlElement" /> with the qualified name and <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9fca-311">新的 <see langword="XmlElement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-311">The new <see langword="XmlElement" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9fca-312">下列 C# 程式碼</span><span class="sxs-lookup"><span data-stu-id="f9fca-312">The following C# code</span></span>  
  
```csharp  
XmlElement elem;  
elem=doc.CreateElement("xy:item", "urn:abc");  
```  
  
 <span data-ttu-id="f9fca-313">相當於下列 XML 文字的項目中的結果。</span><span class="sxs-lookup"><span data-stu-id="f9fca-313">results in an element that is equivalent to the following XML text.</span></span>  
  
```  
<xy:item  
       xmlns:xy="urn:abc"/>  
```  
  
 <span data-ttu-id="f9fca-314">雖然這個方法會在文件的內容中建立新的物件，它不會自動將新的物件至文件樹狀結構。</span><span class="sxs-lookup"><span data-stu-id="f9fca-314">Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</span></span> <span data-ttu-id="f9fca-315">若要加入新的物件，您必須明確呼叫其中一個節點插入方法。</span><span class="sxs-lookup"><span data-stu-id="f9fca-315">To add the new object, you must explicitly call one of the node insert methods.</span></span>  
  
 <span data-ttu-id="f9fca-316">根據 W3C 可延伸標記語言 (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210) 中，元素節點時，允許在文件和項目節點和 EntityReference 節點 EntityReference 節點不是子系屬性節點。</span><span class="sxs-lookup"><span data-stu-id="f9fca-316">According to the W3C Extensible Markup Language (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210), Element nodes are allowed within Document and Element nodes, and in EntityReference nodes when the EntityReference node is not a child of an Attribute node.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateElement">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlElement CreateElement (string prefix, string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlElement CreateElement(string prefix, string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateElement(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateElement (prefix As String, localName As String, namespaceURI As String) As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlElement ^ CreateElement(System::String ^ prefix, System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="abstract member CreateElement : string * string * string -&gt; System.Xml.XmlElement&#xA;override this.CreateElement : string * string * string -&gt; System.Xml.XmlElement" Usage="xmlDocument.CreateElement (prefix, localName, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">
          <span data-ttu-id="f9fca-317">新項目的前置詞 (如有此項)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-317">The prefix of the new element (if any).</span>
          </span>
          <span data-ttu-id="f9fca-318">String.Empty 與 <see langword="null" /> 相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-318">String.Empty and <see langword="null" /> are equivalent.</span>
          </span>
        </param>
        <param name="localName">
          <span data-ttu-id="f9fca-319">新項目的本機名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-319">The local name of the new element.</span>
          </span>
        </param>
        <param name="namespaceURI">
          <span data-ttu-id="f9fca-320">新項目的命名空間 URI (如有此項)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-320">The namespace URI of the new element (if any).</span>
          </span>
          <span data-ttu-id="f9fca-321">String.Empty 與 <see langword="null" /> 相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-321">String.Empty and <see langword="null" /> are equivalent.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9fca-322">建立具有指定之 <see cref="P:System.Xml.XmlNode.Prefix" />、<see cref="P:System.Xml.XmlDocument.LocalName" /> 和 <see cref="P:System.Xml.XmlNode.NamespaceURI" /> 的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-322">Creates an element with the specified <see cref="P:System.Xml.XmlNode.Prefix" />, <see cref="P:System.Xml.XmlDocument.LocalName" />, and <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9fca-323">新的 <see cref="T:System.Xml.XmlElement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-323">The new <see cref="T:System.Xml.XmlElement" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9fca-324">下列 C# 程式碼</span><span class="sxs-lookup"><span data-stu-id="f9fca-324">The following C# code</span></span>  
  
```csharp  
XmlElement elem;  
elem=doc.CreateElement("xy", "item", "urn:abc");  
```  
  
 <span data-ttu-id="f9fca-325">建立的項目相當於下列 XML 文字：</span><span class="sxs-lookup"><span data-stu-id="f9fca-325">creates an element equivalent to the following XML text:</span></span>  
  
```  
<xy:item xmlns:xy="urn:abc"/>  
```  
  
 <span data-ttu-id="f9fca-326">雖然這個方法會在文件的內容中建立新的物件，它不會自動將新的物件至文件樹狀結構。</span><span class="sxs-lookup"><span data-stu-id="f9fca-326">Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</span></span> <span data-ttu-id="f9fca-327">若要加入新的物件，您必須明確呼叫其中一個節點插入方法。</span><span class="sxs-lookup"><span data-stu-id="f9fca-327">To add the new object, you must explicitly call one of the node insert methods.</span></span>  
  
 <span data-ttu-id="f9fca-328">根據 W3C 可延伸標記語言 (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210) 中，元素節點時，允許在文件和項目節點和 EntityReference 節點 EntityReference 超出屬性節點。</span><span class="sxs-lookup"><span data-stu-id="f9fca-328">According to the W3C Extensible Markup Language (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210), Element nodes are allowed within Document and Element nodes, and in EntityReference nodes when the EntityReference is outside an Attribute node.</span></span>  
  
 <span data-ttu-id="f9fca-329">這個方法是 Microsoft 擴充功能的文件物件模型 (DOM)。</span><span class="sxs-lookup"><span data-stu-id="f9fca-329">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9fca-330">下列範例會將新的項目至現有的 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="f9fca-330">The following example adds a new element to the existing XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.CreateElement2 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.CreateElement2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.CreateElement2 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.CreateElement2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.CreateElement2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.CreateElement2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateEntityReference">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlEntityReference CreateEntityReference (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlEntityReference CreateEntityReference(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateEntityReference(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateEntityReference (name As String) As XmlEntityReference" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlEntityReference ^ CreateEntityReference(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member CreateEntityReference : string -&gt; System.Xml.XmlEntityReference&#xA;override this.CreateEntityReference : string -&gt; System.Xml.XmlEntityReference" Usage="xmlDocument.CreateEntityReference name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlEntityReference</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="f9fca-331">實體參考的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-331">The name of the entity reference.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9fca-332">建立具有指定名稱的 <see cref="T:System.Xml.XmlEntityReference" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-332">Creates an <see cref="T:System.Xml.XmlEntityReference" /> with the specified name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9fca-333">新的 <see langword="XmlEntityReference" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-333">The new <see langword="XmlEntityReference" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9fca-334">如果受參考的實體為已知的子清單`XmlEntityReference`節點進行對應的相同<xref:System.Xml.XmlEntity>節點。</span><span class="sxs-lookup"><span data-stu-id="f9fca-334">If the referenced entity is known, the child list of the `XmlEntityReference` node is made the same as that of the corresponding <xref:System.Xml.XmlEntity> node.</span></span>  
  
 <span data-ttu-id="f9fca-335">實體參考取代文字中使用的命名空間繫結時 （例如，實體參考節點插入文件） 時，會先設定實體參照節點的父系。</span><span class="sxs-lookup"><span data-stu-id="f9fca-335">The namespaces used in the replacement text for the entity reference are bound at the time the parent of the entity reference node is first set (for example, when the entity reference node is inserted into the document).</span></span> <span data-ttu-id="f9fca-336">例如，給定以下實體：</span><span class="sxs-lookup"><span data-stu-id="f9fca-336">For example, given the following entity:</span></span>  
  
```  
<!ENTITY a "<b>test</b>">  
```  
  
 <span data-ttu-id="f9fca-337">如果您呼叫`CreateEntityReference("a")`您會回到類型的 EntityReference 的單一節點，不含子系。</span><span class="sxs-lookup"><span data-stu-id="f9fca-337">If you call `CreateEntityReference("a")` you get back a single node of type EntityReference with no children.</span></span> <span data-ttu-id="f9fca-338">如果您將這個節點附加的下列節點中，子系</span><span class="sxs-lookup"><span data-stu-id="f9fca-338">If you append this node as a child of the following node,</span></span>  
  
```  
<item xmlns="urn:1"/>  
```  
  
 <span data-ttu-id="f9fca-339">然後，在呼叫時<xref:System.Xml.XmlNode.AppendChild%2A>、 設定新建立的實體參考節點的父系和子系會展開這個命名空間內容中。</span><span class="sxs-lookup"><span data-stu-id="f9fca-339">then, at the time of calling <xref:System.Xml.XmlNode.AppendChild%2A>, the parent of the newly created entity reference node is set and the children are expanded in this namespace context.</span></span> <span data-ttu-id="f9fca-340">子項目節點`b`必須等於 NamespaceURI `urn:1`。</span><span class="sxs-lookup"><span data-stu-id="f9fca-340">The child element node `b` will have NamespaceURI equal to `urn:1`.</span></span> <span data-ttu-id="f9fca-341">實體參考的子節點維持不變，即使您移動實體參考至具有不同的預設命名空間內容的文件中的位置。</span><span class="sxs-lookup"><span data-stu-id="f9fca-341">The child nodes of the entity reference remain the same even if you move the entity reference to a place in the document that has a different default namespace context.</span></span> <span data-ttu-id="f9fca-342">這時不會針對現有的實體參考節點或移除，並將其插入的實體參考，您再製與<xref:System.Xml.XmlDocument.CloneNode%2A>。</span><span class="sxs-lookup"><span data-stu-id="f9fca-342">This does not happen for existing entity reference nodes when you remove and insert them or for entity references that you clone with <xref:System.Xml.XmlDocument.CloneNode%2A>.</span></span> <span data-ttu-id="f9fca-343">它只會發生之新建立的實體參考。</span><span class="sxs-lookup"><span data-stu-id="f9fca-343">It only happens for newly created entity references.</span></span>  
  
 <span data-ttu-id="f9fca-344">如果對應的實體中未定義 DocumentType 加入實體參考節點之後，因為未定義的實體參考，其唯一的子節點會是空白文字節點。</span><span class="sxs-lookup"><span data-stu-id="f9fca-344">If the corresponding entity is not defined in the DocumentType when the entity reference node is added, because the entity reference is not defined, its only child node will be an empty text node.</span></span>  
  
 <span data-ttu-id="f9fca-345">也允許內建的實體 amp、 lt、 gt、 a p o s 和 q u o t，而且會有一個文字子節點以展開適當的字元值。</span><span class="sxs-lookup"><span data-stu-id="f9fca-345">The built-in entities amp, lt, gt, apos, and quot are also allowed, and they will have a child text node with the appropriate expanded character value.</span></span>  
  
 <span data-ttu-id="f9fca-346">雖然這個方法會在文件的內容中建立新的物件，它不會自動將新的物件至文件樹狀結構。</span><span class="sxs-lookup"><span data-stu-id="f9fca-346">Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</span></span> <span data-ttu-id="f9fca-347">若要加入新的物件，您必須明確呼叫其中一個節點插入方法。</span><span class="sxs-lookup"><span data-stu-id="f9fca-347">To add the new object, you must explicitly call one of the node insert methods.</span></span>  
  
 <span data-ttu-id="f9fca-348">根據 W3C 可延伸標記語言 (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210) EntityReference 節點之內，才允許項目、 屬性和 EntityReference 節點。</span><span class="sxs-lookup"><span data-stu-id="f9fca-348">According to the W3C Extensible Markup Language (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210), EntityReference nodes are only allowed within Element, Attribute and EntityReference nodes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9fca-349">下列範例會建立兩個實體參考節點，並將它們插入到 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="f9fca-349">The following example creates two entity reference nodes and inserts them into an XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.CreateEntityReference Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.CreateEntityReference Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.CreateEntityReference Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.CreateEntityReference Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.CreateEntityReference Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.CreateEntityReference Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9fca-350">不正確的名稱 (例如以 '#' 開頭的名稱無效)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-350">The name is invalid (for example, names starting with'#' are invalid.)</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateNavigator">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f9fca-351">建立巡覽這份文件的新 <see cref="T:System.Xml.XPath.XPathNavigator" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-351">Creates a new <see cref="T:System.Xml.XPath.XPathNavigator" /> object for navigating this document.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateNavigator">
      <MemberSignature Language="C#" Value="public override System.Xml.XPath.XPathNavigator CreateNavigator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Xml.XPath.XPathNavigator CreateNavigator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateNavigator" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateNavigator () As XPathNavigator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Xml::XPath::XPathNavigator ^ CreateNavigator();" />
      <MemberSignature Language="F#" Value="override this.CreateNavigator : unit -&gt; System.Xml.XPath.XPathNavigator" Usage="xmlDocument.CreateNavigator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNavigator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f9fca-352">建立巡覽這份文件的新 <see cref="T:System.Xml.XPath.XPathNavigator" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-352">Creates a new <see cref="T:System.Xml.XPath.XPathNavigator" /> object for navigating this document.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9fca-353">
            <see cref="T:System.Xml.XPath.XPathNavigator" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-353">An <see cref="T:System.Xml.XPath.XPathNavigator" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9fca-354">這個方法是 Microsoft 擴充功能的文件物件模型 (DOM)。</span><span class="sxs-lookup"><span data-stu-id="f9fca-354">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9fca-355">請參閱<xref:System.Xml.XmlNode.CreateNavigator%2A?displayProperty=nameWithType>如需使用此方法的範例。</span><span class="sxs-lookup"><span data-stu-id="f9fca-355">See <xref:System.Xml.XmlNode.CreateNavigator%2A?displayProperty=nameWithType> for an example using this method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateNavigator">
      <MemberSignature Language="C#" Value="protected internal virtual System.Xml.XPath.XPathNavigator CreateNavigator (System.Xml.XmlNode node);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Xml.XPath.XPathNavigator CreateNavigator(class System.Xml.XmlNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateNavigator(System.Xml.XmlNode)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CreateNavigator (node As XmlNode) As XPathNavigator" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Xml::XPath::XPathNavigator ^ CreateNavigator(System::Xml::XmlNode ^ node);" />
      <MemberSignature Language="F#" Value="override this.CreateNavigator : System.Xml.XmlNode -&gt; System.Xml.XPath.XPathNavigator" Usage="xmlDocument.CreateNavigator node" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNavigator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Xml.XmlNode" />
      </Parameters>
      <Docs>
        <param name="node">
          <span data-ttu-id="f9fca-356">您希望巡覽器一開始定位所在的 <see cref="T:System.Xml.XmlNode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-356">The <see cref="T:System.Xml.XmlNode" /> you want the navigator initially positioned on.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9fca-357">建立 <see cref="T:System.Xml.XPath.XPathNavigator" /> 物件，用於巡覽位於指定之 <see cref="T:System.Xml.XmlNode" /> 上的這個文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-357">Creates an <see cref="T:System.Xml.XPath.XPathNavigator" /> object for navigating this document positioned on the <see cref="T:System.Xml.XmlNode" /> specified.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9fca-358">
            <see cref="T:System.Xml.XPath.XPathNavigator" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-358">An <see cref="T:System.Xml.XPath.XPathNavigator" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9fca-359">這個方法是 Microsoft 擴充功能的文件物件模型 (DOM)。</span><span class="sxs-lookup"><span data-stu-id="f9fca-359">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9fca-360">請參閱<xref:System.Xml.XmlNode.CreateNavigator%2A?displayProperty=nameWithType>如需使用此方法的範例。</span><span class="sxs-lookup"><span data-stu-id="f9fca-360">See <xref:System.Xml.XmlNode.CreateNavigator%2A?displayProperty=nameWithType> for an example using this method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateNode">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f9fca-361">建立 <see cref="T:System.Xml.XmlNode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-361">Creates an <see cref="T:System.Xml.XmlNode" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateNode">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode CreateNode (string nodeTypeString, string name, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode CreateNode(string nodeTypeString, string name, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateNode(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateNode (nodeTypeString As String, name As String, namespaceURI As String) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ CreateNode(System::String ^ nodeTypeString, System::String ^ name, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="abstract member CreateNode : string * string * string -&gt; System.Xml.XmlNode&#xA;override this.CreateNode : string * string * string -&gt; System.Xml.XmlNode" Usage="xmlDocument.CreateNode (nodeTypeString, name, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeTypeString" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="nodeTypeString">
          <span data-ttu-id="f9fca-362">新節點的 <see cref="T:System.Xml.XmlNodeType" /> 的字串版本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-362">String version of the <see cref="T:System.Xml.XmlNodeType" /> of the new node.</span>
          </span>
          <span data-ttu-id="f9fca-363">這個參數必須是下表中所列的其中一個值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-363">This parameter must be one of the values listed in the table below.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="f9fca-364">新節點的限定名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-364">The qualified name of the new node.</span>
          </span>
          <span data-ttu-id="f9fca-365">如果名稱包含冒號，將會剖析為 <see cref="P:System.Xml.XmlNode.Prefix" /> 和 <see cref="P:System.Xml.XmlDocument.LocalName" /> 元件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-365">If the name contains a colon, it is parsed into <see cref="P:System.Xml.XmlNode.Prefix" /> and <see cref="P:System.Xml.XmlDocument.LocalName" /> components.</span>
          </span>
        </param>
        <param name="namespaceURI">
          <span data-ttu-id="f9fca-366">新節點的命名空間 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-366">The namespace URI of the new node.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9fca-367">建立具有指定節點類型、<see cref="P:System.Xml.XmlDocument.Name" /> 和 <see cref="P:System.Xml.XmlNode.NamespaceURI" /> 的 <see cref="T:System.Xml.XmlNode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-367">Creates an <see cref="T:System.Xml.XmlNode" /> with the specified node type, <see cref="P:System.Xml.XmlDocument.Name" />, and <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9fca-368">新的 <see langword="XmlNode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-368">The new <see langword="XmlNode" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9fca-369">`nodeTypeString`參數會區分大小寫，且必須是下表中值的其中一個。</span><span class="sxs-lookup"><span data-stu-id="f9fca-369">The `nodeTypeString` parameter is case sensitive and must be one of the values in the following table.</span></span>  
  
|<span data-ttu-id="f9fca-370">nodeTypeString</span><span class="sxs-lookup"><span data-stu-id="f9fca-370">nodeTypeString</span></span>|<span data-ttu-id="f9fca-371">XmlNodeType</span><span class="sxs-lookup"><span data-stu-id="f9fca-371">XmlNodeType</span></span>|  
|--------------------|-----------------|  
|<span data-ttu-id="f9fca-372">屬性</span><span class="sxs-lookup"><span data-stu-id="f9fca-372">attribute</span></span>|<span data-ttu-id="f9fca-373">屬性</span><span class="sxs-lookup"><span data-stu-id="f9fca-373">Attribute</span></span>|  
|<span data-ttu-id="f9fca-374">cdatasection</span><span class="sxs-lookup"><span data-stu-id="f9fca-374">cdatasection</span></span>|<span data-ttu-id="f9fca-375">CDATA</span><span class="sxs-lookup"><span data-stu-id="f9fca-375">CDATA</span></span>|  
|<span data-ttu-id="f9fca-376">註解</span><span class="sxs-lookup"><span data-stu-id="f9fca-376">comment</span></span>|<span data-ttu-id="f9fca-377">註解</span><span class="sxs-lookup"><span data-stu-id="f9fca-377">Comment</span></span>|  
|<span data-ttu-id="f9fca-378">文件</span><span class="sxs-lookup"><span data-stu-id="f9fca-378">document</span></span>|<span data-ttu-id="f9fca-379">文件</span><span class="sxs-lookup"><span data-stu-id="f9fca-379">Document</span></span>|  
|<span data-ttu-id="f9fca-380">documentfragment</span><span class="sxs-lookup"><span data-stu-id="f9fca-380">documentfragment</span></span>|<span data-ttu-id="f9fca-381">DocumentFragment</span><span class="sxs-lookup"><span data-stu-id="f9fca-381">DocumentFragment</span></span>|  
|<span data-ttu-id="f9fca-382">documenttype</span><span class="sxs-lookup"><span data-stu-id="f9fca-382">documenttype</span></span>|<span data-ttu-id="f9fca-383">DocumentType</span><span class="sxs-lookup"><span data-stu-id="f9fca-383">DocumentType</span></span>|  
|<span data-ttu-id="f9fca-384">項目</span><span class="sxs-lookup"><span data-stu-id="f9fca-384">element</span></span>|<span data-ttu-id="f9fca-385">元素</span><span class="sxs-lookup"><span data-stu-id="f9fca-385">Element</span></span>|  
|<span data-ttu-id="f9fca-386">entityreference</span><span class="sxs-lookup"><span data-stu-id="f9fca-386">entityreference</span></span>|<span data-ttu-id="f9fca-387">EntityReference</span><span class="sxs-lookup"><span data-stu-id="f9fca-387">EntityReference</span></span>|  
|<span data-ttu-id="f9fca-388">processinginstruction</span><span class="sxs-lookup"><span data-stu-id="f9fca-388">processinginstruction</span></span>|<span data-ttu-id="f9fca-389">ProcessingInstruction</span><span class="sxs-lookup"><span data-stu-id="f9fca-389">ProcessingInstruction</span></span>|  
|<span data-ttu-id="f9fca-390">significantwhitespace</span><span class="sxs-lookup"><span data-stu-id="f9fca-390">significantwhitespace</span></span>|<span data-ttu-id="f9fca-391">SignificantWhitespace</span><span class="sxs-lookup"><span data-stu-id="f9fca-391">SignificantWhitespace</span></span>|  
|<span data-ttu-id="f9fca-392">文字</span><span class="sxs-lookup"><span data-stu-id="f9fca-392">text</span></span>|<span data-ttu-id="f9fca-393">Text</span><span class="sxs-lookup"><span data-stu-id="f9fca-393">Text</span></span>|  
|<span data-ttu-id="f9fca-394">whitespace</span><span class="sxs-lookup"><span data-stu-id="f9fca-394">whitespace</span></span>|<span data-ttu-id="f9fca-395">Whitespace</span><span class="sxs-lookup"><span data-stu-id="f9fca-395">Whitespace</span></span>|  
  
 <span data-ttu-id="f9fca-396">雖然這個方法會在文件的內容中建立新的物件，它不會自動將新的物件至文件樹狀結構。</span><span class="sxs-lookup"><span data-stu-id="f9fca-396">Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</span></span> <span data-ttu-id="f9fca-397">若要加入新的物件，您必須明確呼叫其中一個節點插入方法。</span><span class="sxs-lookup"><span data-stu-id="f9fca-397">To add the new object, you must explicitly call one of the node insert methods.</span></span>  
  
 <span data-ttu-id="f9fca-398">下表會顯示何種節點類型 [資料列] 允許其他 NodeType [資料行]，根據 W3C 可延伸標記語言 (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210) 內。</span><span class="sxs-lookup"><span data-stu-id="f9fca-398">The following table shows you what NodeType[row] is allowed inside another NodeType[column] according to the W3C Extensible Markup Language (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210).</span></span>  
  
||<span data-ttu-id="f9fca-399">文件</span><span class="sxs-lookup"><span data-stu-id="f9fca-399">Document</span></span>|<span data-ttu-id="f9fca-400">DocumentType</span><span class="sxs-lookup"><span data-stu-id="f9fca-400">DocumentType</span></span>|<span data-ttu-id="f9fca-401">XmlDeclaration</span><span class="sxs-lookup"><span data-stu-id="f9fca-401">XmlDeclaration</span></span>|<span data-ttu-id="f9fca-402">元素</span><span class="sxs-lookup"><span data-stu-id="f9fca-402">Element</span></span>|<span data-ttu-id="f9fca-403">屬性</span><span class="sxs-lookup"><span data-stu-id="f9fca-403">Attribute</span></span>|<span data-ttu-id="f9fca-404">Text</span><span class="sxs-lookup"><span data-stu-id="f9fca-404">Text</span></span>|<span data-ttu-id="f9fca-405">CDATA</span><span class="sxs-lookup"><span data-stu-id="f9fca-405">CDATA</span></span>|<span data-ttu-id="f9fca-406">標記</span><span class="sxs-lookup"><span data-stu-id="f9fca-406">Markup</span></span>|<span data-ttu-id="f9fca-407">EntityReference</span><span class="sxs-lookup"><span data-stu-id="f9fca-407">EntityReference</span></span>|  
|------|--------------|------------------|--------------------|-------------|---------------|----------|-----------|------------|---------------------|  
|`Document`|<span data-ttu-id="f9fca-408">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-408">no</span></span>|<span data-ttu-id="f9fca-409">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-409">no</span></span>|<span data-ttu-id="f9fca-410">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-410">no</span></span>|<span data-ttu-id="f9fca-411">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-411">no</span></span>|<span data-ttu-id="f9fca-412">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-412">no</span></span>|<span data-ttu-id="f9fca-413">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-413">no</span></span>|<span data-ttu-id="f9fca-414">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-414">no</span></span>|<span data-ttu-id="f9fca-415">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-415">no</span></span>|<span data-ttu-id="f9fca-416">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-416">no</span></span>|  
|`DocumentType`|<span data-ttu-id="f9fca-417">是</span><span class="sxs-lookup"><span data-stu-id="f9fca-417">yes</span></span>|<span data-ttu-id="f9fca-418">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-418">no</span></span>|<span data-ttu-id="f9fca-419">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-419">no</span></span>|<span data-ttu-id="f9fca-420">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-420">no</span></span>|<span data-ttu-id="f9fca-421">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-421">no</span></span>|<span data-ttu-id="f9fca-422">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-422">no</span></span>|<span data-ttu-id="f9fca-423">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-423">no</span></span>|<span data-ttu-id="f9fca-424">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-424">no</span></span>|<span data-ttu-id="f9fca-425">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-425">no</span></span>|  
|`XmlDeclaration`|<span data-ttu-id="f9fca-426">[是] \*</span><span class="sxs-lookup"><span data-stu-id="f9fca-426">yes\*</span></span>|<span data-ttu-id="f9fca-427">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-427">no</span></span>|<span data-ttu-id="f9fca-428">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-428">no</span></span>|<span data-ttu-id="f9fca-429">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-429">no</span></span>|<span data-ttu-id="f9fca-430">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-430">no</span></span>|<span data-ttu-id="f9fca-431">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-431">no</span></span>|<span data-ttu-id="f9fca-432">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-432">no</span></span>|<span data-ttu-id="f9fca-433">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-433">no</span></span>|<span data-ttu-id="f9fca-434">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-434">no</span></span>|  
|`Element`|<span data-ttu-id="f9fca-435">是</span><span class="sxs-lookup"><span data-stu-id="f9fca-435">yes</span></span>|<span data-ttu-id="f9fca-436">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-436">no</span></span>|<span data-ttu-id="f9fca-437">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-437">no</span></span>|<span data-ttu-id="f9fca-438">是</span><span class="sxs-lookup"><span data-stu-id="f9fca-438">yes</span></span>|<span data-ttu-id="f9fca-439">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-439">no</span></span>|<span data-ttu-id="f9fca-440">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-440">no</span></span>|<span data-ttu-id="f9fca-441">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-441">no</span></span>|<span data-ttu-id="f9fca-442">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-442">no</span></span>|<span data-ttu-id="f9fca-443">[是] \* \* \*</span><span class="sxs-lookup"><span data-stu-id="f9fca-443">yes\*\*\*</span></span>|  
|`Attribute`|<span data-ttu-id="f9fca-444">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-444">no</span></span>|<span data-ttu-id="f9fca-445">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-445">no</span></span>|<span data-ttu-id="f9fca-446">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-446">no</span></span>|<span data-ttu-id="f9fca-447">[是] \* \* \*</span><span class="sxs-lookup"><span data-stu-id="f9fca-447">yes****</span></span>|<span data-ttu-id="f9fca-448">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-448">no</span></span>|<span data-ttu-id="f9fca-449">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-449">no</span></span>|<span data-ttu-id="f9fca-450">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-450">no</span></span>|<span data-ttu-id="f9fca-451">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-451">no</span></span>|<span data-ttu-id="f9fca-452">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-452">no</span></span>|  
|`Text`|<span data-ttu-id="f9fca-453">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-453">no</span></span>|<span data-ttu-id="f9fca-454">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-454">no</span></span>|<span data-ttu-id="f9fca-455">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-455">no</span></span>|<span data-ttu-id="f9fca-456">是</span><span class="sxs-lookup"><span data-stu-id="f9fca-456">yes</span></span>|<span data-ttu-id="f9fca-457">是</span><span class="sxs-lookup"><span data-stu-id="f9fca-457">yes</span></span>|<span data-ttu-id="f9fca-458">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-458">no</span></span>|<span data-ttu-id="f9fca-459">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-459">no</span></span>|<span data-ttu-id="f9fca-460">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-460">no</span></span>|<span data-ttu-id="f9fca-461">是</span><span class="sxs-lookup"><span data-stu-id="f9fca-461">yes</span></span>|  
|`CDATA`|<span data-ttu-id="f9fca-462">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-462">no</span></span>|<span data-ttu-id="f9fca-463">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-463">no</span></span>|<span data-ttu-id="f9fca-464">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-464">no</span></span>|<span data-ttu-id="f9fca-465">是</span><span class="sxs-lookup"><span data-stu-id="f9fca-465">yes</span></span>|<span data-ttu-id="f9fca-466">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-466">no</span></span>|<span data-ttu-id="f9fca-467">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-467">no</span></span>|<span data-ttu-id="f9fca-468">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-468">no</span></span>|<span data-ttu-id="f9fca-469">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-469">no</span></span>|<span data-ttu-id="f9fca-470">[是] \* \* \*</span><span class="sxs-lookup"><span data-stu-id="f9fca-470">yes\*\*\*</span></span>|  
|`Markup**`|<span data-ttu-id="f9fca-471">是</span><span class="sxs-lookup"><span data-stu-id="f9fca-471">yes</span></span>|<span data-ttu-id="f9fca-472">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-472">no</span></span>|<span data-ttu-id="f9fca-473">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-473">no</span></span>|<span data-ttu-id="f9fca-474">是</span><span class="sxs-lookup"><span data-stu-id="f9fca-474">yes</span></span>|<span data-ttu-id="f9fca-475">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-475">no</span></span>|<span data-ttu-id="f9fca-476">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-476">no</span></span>|<span data-ttu-id="f9fca-477">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-477">no</span></span>|<span data-ttu-id="f9fca-478">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-478">no</span></span>|<span data-ttu-id="f9fca-479">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-479">no</span></span>|  
|`EntityReference`|<span data-ttu-id="f9fca-480">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-480">no</span></span>|<span data-ttu-id="f9fca-481">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-481">no</span></span>|<span data-ttu-id="f9fca-482">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-482">no</span></span>|<span data-ttu-id="f9fca-483">是</span><span class="sxs-lookup"><span data-stu-id="f9fca-483">yes</span></span>|<span data-ttu-id="f9fca-484">是</span><span class="sxs-lookup"><span data-stu-id="f9fca-484">yes</span></span>|<span data-ttu-id="f9fca-485">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-485">no</span></span>|<span data-ttu-id="f9fca-486">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-486">no</span></span>|<span data-ttu-id="f9fca-487">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-487">no</span></span>|<span data-ttu-id="f9fca-488">是</span><span class="sxs-lookup"><span data-stu-id="f9fca-488">yes</span></span>|  
  
 <span data-ttu-id="f9fca-489">\* Xml 宣告節點必須是文件節點的第一個子系。</span><span class="sxs-lookup"><span data-stu-id="f9fca-489">\* The XmlDeclaration node must be the first child of the Document node.</span></span>  
  
 <span data-ttu-id="f9fca-490">* * 標記包含 ProcessingInstruction 和註解節點。</span><span class="sxs-lookup"><span data-stu-id="f9fca-490">** Markup includes ProcessingInstruction and Comment nodes.</span></span>  
  
 <span data-ttu-id="f9fca-491">EntityReference 節點不是屬性節點的子系時，項目和 CDATA 節點才允許 EntityReference 節點中。</span><span class="sxs-lookup"><span data-stu-id="f9fca-491">\*\*\* Element and CDATA nodes are only allowed in EntityReference nodes when the EntityReference node is not a child of an Attribute node.</span></span>  
  
 <span data-ttu-id="f9fca-492">屬性不是元素節點子系。</span><span class="sxs-lookup"><span data-stu-id="f9fca-492">**** Attributes are not children of an Element node.</span></span> <span data-ttu-id="f9fca-493">屬性包含在屬於項目節點的屬性集合。</span><span class="sxs-lookup"><span data-stu-id="f9fca-493">Attributes are contained inside an attribute collection that belongs to an Element node.</span></span>  
  
 <span data-ttu-id="f9fca-494">這個方法是 Microsoft 擴充功能的文件物件模型 (DOM)。</span><span class="sxs-lookup"><span data-stu-id="f9fca-494">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9fca-495">下列範例會建立新的項目，並將它插入至文件。</span><span class="sxs-lookup"><span data-stu-id="f9fca-495">The following example creates a new element and inserts it into the document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.CreateNode1 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.CreateNode1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.CreateNode1 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.CreateNode1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.CreateNode1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.CreateNode1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9fca-496">未提供名稱且 <see langword="XmlNodeType" /> 需要名稱；或者 <paramref name="nodeTypeString" /> 不是下列字串之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-496">The name was not provided and the <see langword="XmlNodeType" /> requires a name; or <paramref name="nodeTypeString" /> is not one of the strings listed below.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateNode">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode CreateNode (System.Xml.XmlNodeType type, string name, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode CreateNode(valuetype System.Xml.XmlNodeType type, string name, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateNode(System.Xml.XmlNodeType,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateNode (type As XmlNodeType, name As String, namespaceURI As String) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ CreateNode(System::Xml::XmlNodeType type, System::String ^ name, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="abstract member CreateNode : System.Xml.XmlNodeType * string * string -&gt; System.Xml.XmlNode&#xA;override this.CreateNode : System.Xml.XmlNodeType * string * string -&gt; System.Xml.XmlNode" Usage="xmlDocument.CreateNode (type, name, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Xml.XmlNodeType" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="f9fca-497">新節點的 <see langword="XmlNodeType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-497">The <see langword="XmlNodeType" /> of the new node.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="f9fca-498">新節點的限定名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-498">The qualified name of the new node.</span>
          </span>
          <span data-ttu-id="f9fca-499">如果名稱包含冒號，將會剖析為 <see cref="P:System.Xml.XmlNode.Prefix" /> 和 <see cref="P:System.Xml.XmlDocument.LocalName" /> 元件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-499">If the name contains a colon then it is parsed into <see cref="P:System.Xml.XmlNode.Prefix" /> and <see cref="P:System.Xml.XmlDocument.LocalName" /> components.</span>
          </span>
        </param>
        <param name="namespaceURI">
          <span data-ttu-id="f9fca-500">新節點的命名空間 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-500">The namespace URI of the new node.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9fca-501">建立具有指定的 <see cref="T:System.Xml.XmlNodeType" />、<see cref="P:System.Xml.XmlDocument.Name" /> 和 <see cref="P:System.Xml.XmlNode.NamespaceURI" /> 的 <see cref="T:System.Xml.XmlNode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-501">Creates an <see cref="T:System.Xml.XmlNode" /> with the specified <see cref="T:System.Xml.XmlNodeType" />, <see cref="P:System.Xml.XmlDocument.Name" />, and <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9fca-502">新的 <see langword="XmlNode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-502">The new <see langword="XmlNode" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9fca-503">雖然這個方法會在文件的內容中建立新的物件，它不會自動將新的物件至文件樹狀結構。</span><span class="sxs-lookup"><span data-stu-id="f9fca-503">Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</span></span> <span data-ttu-id="f9fca-504">若要加入新的物件，您必須明確呼叫其中一個節點插入方法。</span><span class="sxs-lookup"><span data-stu-id="f9fca-504">To add the new object, you must explicitly call one of the node insert methods.</span></span>  
  
 <span data-ttu-id="f9fca-505">下表會顯示何種節點類型 [資料列] 允許其他 NodeType [資料行]，根據 W3C 可延伸標記語言 (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210) 內。</span><span class="sxs-lookup"><span data-stu-id="f9fca-505">The following table shows you what NodeType[row] is allowed inside another NodeType[column] according to the W3C Extensible Markup Language (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210).</span></span>  
  
||<span data-ttu-id="f9fca-506">文件</span><span class="sxs-lookup"><span data-stu-id="f9fca-506">Document</span></span>|<span data-ttu-id="f9fca-507">DocumentType</span><span class="sxs-lookup"><span data-stu-id="f9fca-507">DocumentType</span></span>|<span data-ttu-id="f9fca-508">XmlDeclaration</span><span class="sxs-lookup"><span data-stu-id="f9fca-508">XmlDeclaration</span></span>|<span data-ttu-id="f9fca-509">元素</span><span class="sxs-lookup"><span data-stu-id="f9fca-509">Element</span></span>|<span data-ttu-id="f9fca-510">屬性</span><span class="sxs-lookup"><span data-stu-id="f9fca-510">Attribute</span></span>|<span data-ttu-id="f9fca-511">Text</span><span class="sxs-lookup"><span data-stu-id="f9fca-511">Text</span></span>|<span data-ttu-id="f9fca-512">CDATA</span><span class="sxs-lookup"><span data-stu-id="f9fca-512">CDATA</span></span>|<span data-ttu-id="f9fca-513">標記</span><span class="sxs-lookup"><span data-stu-id="f9fca-513">Markup</span></span>|<span data-ttu-id="f9fca-514">EntityReference</span><span class="sxs-lookup"><span data-stu-id="f9fca-514">EntityReference</span></span>|  
|------|--------------|------------------|--------------------|-------------|---------------|----------|-----------|------------|---------------------|  
|`Document`|<span data-ttu-id="f9fca-515">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-515">no</span></span>|<span data-ttu-id="f9fca-516">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-516">no</span></span>|<span data-ttu-id="f9fca-517">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-517">no</span></span>|<span data-ttu-id="f9fca-518">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-518">no</span></span>|<span data-ttu-id="f9fca-519">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-519">no</span></span>|<span data-ttu-id="f9fca-520">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-520">no</span></span>|<span data-ttu-id="f9fca-521">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-521">no</span></span>|<span data-ttu-id="f9fca-522">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-522">no</span></span>|<span data-ttu-id="f9fca-523">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-523">no</span></span>|  
|`DocumentType`|<span data-ttu-id="f9fca-524">是</span><span class="sxs-lookup"><span data-stu-id="f9fca-524">yes</span></span>|<span data-ttu-id="f9fca-525">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-525">no</span></span>|<span data-ttu-id="f9fca-526">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-526">no</span></span>|<span data-ttu-id="f9fca-527">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-527">no</span></span>|<span data-ttu-id="f9fca-528">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-528">no</span></span>|<span data-ttu-id="f9fca-529">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-529">no</span></span>|<span data-ttu-id="f9fca-530">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-530">no</span></span>|<span data-ttu-id="f9fca-531">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-531">no</span></span>|<span data-ttu-id="f9fca-532">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-532">no</span></span>|  
|`XmlDeclaration`|<span data-ttu-id="f9fca-533">[是] \*</span><span class="sxs-lookup"><span data-stu-id="f9fca-533">yes\*</span></span>|<span data-ttu-id="f9fca-534">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-534">no</span></span>|<span data-ttu-id="f9fca-535">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-535">no</span></span>|<span data-ttu-id="f9fca-536">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-536">no</span></span>|<span data-ttu-id="f9fca-537">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-537">no</span></span>|<span data-ttu-id="f9fca-538">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-538">no</span></span>|<span data-ttu-id="f9fca-539">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-539">no</span></span>|<span data-ttu-id="f9fca-540">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-540">no</span></span>|<span data-ttu-id="f9fca-541">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-541">no</span></span>|  
|`Element`|<span data-ttu-id="f9fca-542">是</span><span class="sxs-lookup"><span data-stu-id="f9fca-542">yes</span></span>|<span data-ttu-id="f9fca-543">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-543">no</span></span>|<span data-ttu-id="f9fca-544">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-544">no</span></span>|<span data-ttu-id="f9fca-545">是</span><span class="sxs-lookup"><span data-stu-id="f9fca-545">yes</span></span>|<span data-ttu-id="f9fca-546">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-546">no</span></span>|<span data-ttu-id="f9fca-547">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-547">no</span></span>|<span data-ttu-id="f9fca-548">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-548">no</span></span>|<span data-ttu-id="f9fca-549">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-549">no</span></span>|<span data-ttu-id="f9fca-550">[是] \* \* \*</span><span class="sxs-lookup"><span data-stu-id="f9fca-550">yes\*\*\*</span></span>|  
|`Attribute`|<span data-ttu-id="f9fca-551">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-551">no</span></span>|<span data-ttu-id="f9fca-552">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-552">no</span></span>|<span data-ttu-id="f9fca-553">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-553">no</span></span>|<span data-ttu-id="f9fca-554">[是] \* \* \*</span><span class="sxs-lookup"><span data-stu-id="f9fca-554">yes****</span></span>|<span data-ttu-id="f9fca-555">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-555">no</span></span>|<span data-ttu-id="f9fca-556">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-556">no</span></span>|<span data-ttu-id="f9fca-557">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-557">no</span></span>|<span data-ttu-id="f9fca-558">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-558">no</span></span>|<span data-ttu-id="f9fca-559">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-559">no</span></span>|  
|`Text`|<span data-ttu-id="f9fca-560">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-560">no</span></span>|<span data-ttu-id="f9fca-561">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-561">no</span></span>|<span data-ttu-id="f9fca-562">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-562">no</span></span>|<span data-ttu-id="f9fca-563">是</span><span class="sxs-lookup"><span data-stu-id="f9fca-563">yes</span></span>|<span data-ttu-id="f9fca-564">是</span><span class="sxs-lookup"><span data-stu-id="f9fca-564">yes</span></span>|<span data-ttu-id="f9fca-565">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-565">no</span></span>|<span data-ttu-id="f9fca-566">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-566">no</span></span>|<span data-ttu-id="f9fca-567">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-567">no</span></span>|<span data-ttu-id="f9fca-568">是</span><span class="sxs-lookup"><span data-stu-id="f9fca-568">yes</span></span>|  
|`CDATA`|<span data-ttu-id="f9fca-569">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-569">no</span></span>|<span data-ttu-id="f9fca-570">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-570">no</span></span>|<span data-ttu-id="f9fca-571">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-571">no</span></span>|<span data-ttu-id="f9fca-572">是</span><span class="sxs-lookup"><span data-stu-id="f9fca-572">yes</span></span>|<span data-ttu-id="f9fca-573">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-573">no</span></span>|<span data-ttu-id="f9fca-574">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-574">no</span></span>|<span data-ttu-id="f9fca-575">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-575">no</span></span>|<span data-ttu-id="f9fca-576">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-576">no</span></span>|<span data-ttu-id="f9fca-577">[是] \* \* \*</span><span class="sxs-lookup"><span data-stu-id="f9fca-577">yes\*\*\*</span></span>|  
|`Markup**`|<span data-ttu-id="f9fca-578">是</span><span class="sxs-lookup"><span data-stu-id="f9fca-578">yes</span></span>|<span data-ttu-id="f9fca-579">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-579">no</span></span>|<span data-ttu-id="f9fca-580">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-580">no</span></span>|<span data-ttu-id="f9fca-581">是</span><span class="sxs-lookup"><span data-stu-id="f9fca-581">yes</span></span>|<span data-ttu-id="f9fca-582">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-582">no</span></span>|<span data-ttu-id="f9fca-583">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-583">no</span></span>|<span data-ttu-id="f9fca-584">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-584">no</span></span>|<span data-ttu-id="f9fca-585">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-585">no</span></span>|<span data-ttu-id="f9fca-586">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-586">no</span></span>|  
|`EntityReference`|<span data-ttu-id="f9fca-587">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-587">no</span></span>|<span data-ttu-id="f9fca-588">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-588">no</span></span>|<span data-ttu-id="f9fca-589">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-589">no</span></span>|<span data-ttu-id="f9fca-590">是</span><span class="sxs-lookup"><span data-stu-id="f9fca-590">yes</span></span>|<span data-ttu-id="f9fca-591">是</span><span class="sxs-lookup"><span data-stu-id="f9fca-591">yes</span></span>|<span data-ttu-id="f9fca-592">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-592">no</span></span>|<span data-ttu-id="f9fca-593">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-593">no</span></span>|<span data-ttu-id="f9fca-594">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-594">no</span></span>|<span data-ttu-id="f9fca-595">是</span><span class="sxs-lookup"><span data-stu-id="f9fca-595">yes</span></span>|  
  
 <span data-ttu-id="f9fca-596">\* Xml 宣告節點必須是文件節點的第一個子系。</span><span class="sxs-lookup"><span data-stu-id="f9fca-596">\* The XmlDeclaration node must be the first child of the Document node.</span></span>  
  
 <span data-ttu-id="f9fca-597">* * 標記包含 ProcessingInstruction 和註解節點。</span><span class="sxs-lookup"><span data-stu-id="f9fca-597">** Markup includes ProcessingInstruction and Comment nodes.</span></span>  
  
 <span data-ttu-id="f9fca-598">EntityReference 節點不是屬性節點的子系時，項目和 CDATA 節點才允許 EntityReference 節點中。</span><span class="sxs-lookup"><span data-stu-id="f9fca-598">\*\*\* Element and CDATA nodes are only allowed in EntityReference nodes when the EntityReference node is not a child of an Attribute node.</span></span>  
  
 <span data-ttu-id="f9fca-599">屬性不是元素節點子系。</span><span class="sxs-lookup"><span data-stu-id="f9fca-599">**** Attributes are not children of an Element node.</span></span> <span data-ttu-id="f9fca-600">屬性包含在屬於項目節點的屬性集合。</span><span class="sxs-lookup"><span data-stu-id="f9fca-600">Attributes are contained inside an attribute collection that belongs to an Element node.</span></span>  
  
 <span data-ttu-id="f9fca-601">這個方法是 Microsoft 擴充功能的文件物件模型 (DOM)。</span><span class="sxs-lookup"><span data-stu-id="f9fca-601">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9fca-602">下列範例會建立新的項目，並將它插入至 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="f9fca-602">The following example creates a new element and inserts it into an XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.CreateNode Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.CreateNode Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.CreateNode Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.CreateNode Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.CreateNode Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.CreateNode Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9fca-603">未提供名稱且 <see langword="XmlNodeType" /> 需要名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-603">The name was not provided and the <see langword="XmlNodeType" /> requires a name.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateNode">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode CreateNode (System.Xml.XmlNodeType type, string prefix, string name, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode CreateNode(valuetype System.Xml.XmlNodeType type, string prefix, string name, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateNode(System.Xml.XmlNodeType,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateNode (type As XmlNodeType, prefix As String, name As String, namespaceURI As String) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ CreateNode(System::Xml::XmlNodeType type, System::String ^ prefix, System::String ^ name, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="abstract member CreateNode : System.Xml.XmlNodeType * string * string * string -&gt; System.Xml.XmlNode&#xA;override this.CreateNode : System.Xml.XmlNodeType * string * string * string -&gt; System.Xml.XmlNode" Usage="xmlDocument.CreateNode (type, prefix, name, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Xml.XmlNodeType" />
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="f9fca-604">新節點的 <see langword="XmlNodeType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-604">The <see langword="XmlNodeType" /> of the new node.</span>
          </span>
        </param>
        <param name="prefix">
          <span data-ttu-id="f9fca-605">新節點的前置詞。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-605">The prefix of the new node.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="f9fca-606">新節點的區域名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-606">The local name of the new node.</span>
          </span>
        </param>
        <param name="namespaceURI">
          <span data-ttu-id="f9fca-607">新節點的命名空間 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-607">The namespace URI of the new node.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9fca-608">建立具有指定之 <see cref="T:System.Xml.XmlNodeType" />、<see cref="P:System.Xml.XmlNode.Prefix" />、<see cref="P:System.Xml.XmlDocument.Name" /> 和 <see cref="P:System.Xml.XmlNode.NamespaceURI" /> 的 <see cref="T:System.Xml.XmlNode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-608">Creates a <see cref="T:System.Xml.XmlNode" /> with the specified <see cref="T:System.Xml.XmlNodeType" />, <see cref="P:System.Xml.XmlNode.Prefix" />, <see cref="P:System.Xml.XmlDocument.Name" />, and <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9fca-609">新的 <see langword="XmlNode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-609">The new <see langword="XmlNode" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9fca-610">雖然這個方法會在文件的內容中建立新的物件，它不會自動將新的物件至文件樹狀結構。</span><span class="sxs-lookup"><span data-stu-id="f9fca-610">Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</span></span> <span data-ttu-id="f9fca-611">若要加入新的物件，您必須明確呼叫其中一個節點插入方法。</span><span class="sxs-lookup"><span data-stu-id="f9fca-611">To add the new object, you must explicitly call one of the node insert methods.</span></span>  
  
 <span data-ttu-id="f9fca-612">下表會顯示何種節點類型 [資料列] 允許其他 NodeType [資料行]，根據 W3C 可延伸標記語言 (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210) 內。</span><span class="sxs-lookup"><span data-stu-id="f9fca-612">The following table shows you what NodeType[row] is allowed inside another NodeType[column] according to the W3C Extensible Markup Language (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210).</span></span>  
  
||<span data-ttu-id="f9fca-613">文件</span><span class="sxs-lookup"><span data-stu-id="f9fca-613">Document</span></span>|<span data-ttu-id="f9fca-614">DocumentType</span><span class="sxs-lookup"><span data-stu-id="f9fca-614">DocumentType</span></span>|<span data-ttu-id="f9fca-615">XmlDeclaration</span><span class="sxs-lookup"><span data-stu-id="f9fca-615">XmlDeclaration</span></span>|<span data-ttu-id="f9fca-616">元素</span><span class="sxs-lookup"><span data-stu-id="f9fca-616">Element</span></span>|<span data-ttu-id="f9fca-617">屬性</span><span class="sxs-lookup"><span data-stu-id="f9fca-617">Attribute</span></span>|<span data-ttu-id="f9fca-618">Text</span><span class="sxs-lookup"><span data-stu-id="f9fca-618">Text</span></span>|<span data-ttu-id="f9fca-619">CDATA</span><span class="sxs-lookup"><span data-stu-id="f9fca-619">CDATA</span></span>|<span data-ttu-id="f9fca-620">標記</span><span class="sxs-lookup"><span data-stu-id="f9fca-620">Markup</span></span>|<span data-ttu-id="f9fca-621">EntityReference</span><span class="sxs-lookup"><span data-stu-id="f9fca-621">EntityReference</span></span>|  
|------|--------------|------------------|--------------------|-------------|---------------|----------|-----------|------------|---------------------|  
|`Document`|<span data-ttu-id="f9fca-622">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-622">no</span></span>|<span data-ttu-id="f9fca-623">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-623">no</span></span>|<span data-ttu-id="f9fca-624">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-624">no</span></span>|<span data-ttu-id="f9fca-625">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-625">no</span></span>|<span data-ttu-id="f9fca-626">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-626">no</span></span>|<span data-ttu-id="f9fca-627">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-627">no</span></span>|<span data-ttu-id="f9fca-628">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-628">no</span></span>|<span data-ttu-id="f9fca-629">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-629">no</span></span>|<span data-ttu-id="f9fca-630">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-630">no</span></span>|  
|`DocumentType`|<span data-ttu-id="f9fca-631">是</span><span class="sxs-lookup"><span data-stu-id="f9fca-631">yes</span></span>|<span data-ttu-id="f9fca-632">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-632">no</span></span>|<span data-ttu-id="f9fca-633">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-633">no</span></span>|<span data-ttu-id="f9fca-634">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-634">no</span></span>|<span data-ttu-id="f9fca-635">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-635">no</span></span>|<span data-ttu-id="f9fca-636">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-636">no</span></span>|<span data-ttu-id="f9fca-637">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-637">no</span></span>|<span data-ttu-id="f9fca-638">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-638">no</span></span>|<span data-ttu-id="f9fca-639">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-639">no</span></span>|  
|`XmlDeclaration`|<span data-ttu-id="f9fca-640">[是] \*</span><span class="sxs-lookup"><span data-stu-id="f9fca-640">yes\*</span></span>|<span data-ttu-id="f9fca-641">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-641">no</span></span>|<span data-ttu-id="f9fca-642">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-642">no</span></span>|<span data-ttu-id="f9fca-643">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-643">no</span></span>|<span data-ttu-id="f9fca-644">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-644">no</span></span>|<span data-ttu-id="f9fca-645">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-645">no</span></span>|<span data-ttu-id="f9fca-646">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-646">no</span></span>|<span data-ttu-id="f9fca-647">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-647">no</span></span>|<span data-ttu-id="f9fca-648">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-648">no</span></span>|  
|`Element`|<span data-ttu-id="f9fca-649">是</span><span class="sxs-lookup"><span data-stu-id="f9fca-649">yes</span></span>|<span data-ttu-id="f9fca-650">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-650">no</span></span>|<span data-ttu-id="f9fca-651">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-651">no</span></span>|<span data-ttu-id="f9fca-652">是</span><span class="sxs-lookup"><span data-stu-id="f9fca-652">yes</span></span>|<span data-ttu-id="f9fca-653">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-653">no</span></span>|<span data-ttu-id="f9fca-654">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-654">no</span></span>|<span data-ttu-id="f9fca-655">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-655">no</span></span>|<span data-ttu-id="f9fca-656">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-656">no</span></span>|<span data-ttu-id="f9fca-657">[是] \* \* \*</span><span class="sxs-lookup"><span data-stu-id="f9fca-657">yes\*\*\*</span></span>|  
|`Attribute`|<span data-ttu-id="f9fca-658">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-658">no</span></span>|<span data-ttu-id="f9fca-659">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-659">no</span></span>|<span data-ttu-id="f9fca-660">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-660">no</span></span>|<span data-ttu-id="f9fca-661">[是] \* \* \*</span><span class="sxs-lookup"><span data-stu-id="f9fca-661">yes****</span></span>|<span data-ttu-id="f9fca-662">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-662">no</span></span>|<span data-ttu-id="f9fca-663">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-663">no</span></span>|<span data-ttu-id="f9fca-664">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-664">no</span></span>|<span data-ttu-id="f9fca-665">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-665">no</span></span>|<span data-ttu-id="f9fca-666">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-666">no</span></span>|  
|`Text`|<span data-ttu-id="f9fca-667">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-667">no</span></span>|<span data-ttu-id="f9fca-668">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-668">no</span></span>|<span data-ttu-id="f9fca-669">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-669">no</span></span>|<span data-ttu-id="f9fca-670">是</span><span class="sxs-lookup"><span data-stu-id="f9fca-670">yes</span></span>|<span data-ttu-id="f9fca-671">是</span><span class="sxs-lookup"><span data-stu-id="f9fca-671">yes</span></span>|<span data-ttu-id="f9fca-672">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-672">no</span></span>|<span data-ttu-id="f9fca-673">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-673">no</span></span>|<span data-ttu-id="f9fca-674">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-674">no</span></span>|<span data-ttu-id="f9fca-675">是</span><span class="sxs-lookup"><span data-stu-id="f9fca-675">yes</span></span>|  
|`CDATA`|<span data-ttu-id="f9fca-676">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-676">no</span></span>|<span data-ttu-id="f9fca-677">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-677">no</span></span>|<span data-ttu-id="f9fca-678">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-678">no</span></span>|<span data-ttu-id="f9fca-679">是</span><span class="sxs-lookup"><span data-stu-id="f9fca-679">yes</span></span>|<span data-ttu-id="f9fca-680">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-680">no</span></span>|<span data-ttu-id="f9fca-681">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-681">no</span></span>|<span data-ttu-id="f9fca-682">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-682">no</span></span>|<span data-ttu-id="f9fca-683">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-683">no</span></span>|<span data-ttu-id="f9fca-684">[是] \* \* \*</span><span class="sxs-lookup"><span data-stu-id="f9fca-684">yes\*\*\*</span></span>|  
|`Markup**`|<span data-ttu-id="f9fca-685">是</span><span class="sxs-lookup"><span data-stu-id="f9fca-685">yes</span></span>|<span data-ttu-id="f9fca-686">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-686">no</span></span>|<span data-ttu-id="f9fca-687">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-687">no</span></span>|<span data-ttu-id="f9fca-688">是</span><span class="sxs-lookup"><span data-stu-id="f9fca-688">yes</span></span>|<span data-ttu-id="f9fca-689">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-689">no</span></span>|<span data-ttu-id="f9fca-690">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-690">no</span></span>|<span data-ttu-id="f9fca-691">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-691">no</span></span>|<span data-ttu-id="f9fca-692">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-692">no</span></span>|<span data-ttu-id="f9fca-693">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-693">no</span></span>|  
|`EntityReference`|<span data-ttu-id="f9fca-694">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-694">no</span></span>|<span data-ttu-id="f9fca-695">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-695">no</span></span>|<span data-ttu-id="f9fca-696">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-696">no</span></span>|<span data-ttu-id="f9fca-697">是</span><span class="sxs-lookup"><span data-stu-id="f9fca-697">yes</span></span>|<span data-ttu-id="f9fca-698">是</span><span class="sxs-lookup"><span data-stu-id="f9fca-698">yes</span></span>|<span data-ttu-id="f9fca-699">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-699">no</span></span>|<span data-ttu-id="f9fca-700">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-700">no</span></span>|<span data-ttu-id="f9fca-701">否</span><span class="sxs-lookup"><span data-stu-id="f9fca-701">no</span></span>|<span data-ttu-id="f9fca-702">是</span><span class="sxs-lookup"><span data-stu-id="f9fca-702">yes</span></span>|  
  
 <span data-ttu-id="f9fca-703">\* Xml 宣告節點必須是文件節點的第一個子系。</span><span class="sxs-lookup"><span data-stu-id="f9fca-703">\* The XmlDeclaration node must be the first child of the Document node.</span></span>  
  
 <span data-ttu-id="f9fca-704">* * 標記包含 ProcessingInstruction 和註解節點。</span><span class="sxs-lookup"><span data-stu-id="f9fca-704">** Markup includes ProcessingInstruction and Comment nodes.</span></span>  
  
 <span data-ttu-id="f9fca-705">EntityReference 節點不是屬性節點的子系時，項目和 CDATA 節點才允許 EntityReference 節點中。</span><span class="sxs-lookup"><span data-stu-id="f9fca-705">\*\*\* Element and CDATA nodes are only allowed in EntityReference nodes when the EntityReference node is not a child of an Attribute node.</span></span>  
  
 <span data-ttu-id="f9fca-706">屬性不是元素節點子系。</span><span class="sxs-lookup"><span data-stu-id="f9fca-706">**** Attributes are not children of an Element node.</span></span> <span data-ttu-id="f9fca-707">屬性包含在屬於項目節點的屬性集合。</span><span class="sxs-lookup"><span data-stu-id="f9fca-707">Attributes are contained inside an attribute collection that belongs to the Element node.</span></span>  
  
 <span data-ttu-id="f9fca-708">這個方法是 Microsoft 擴充功能的文件物件模型 (DOM)。</span><span class="sxs-lookup"><span data-stu-id="f9fca-708">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9fca-709">下列範例會將新的項目加入文件。</span><span class="sxs-lookup"><span data-stu-id="f9fca-709">The following example adds a new element to the document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.CreateNode2 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.CreateNode2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.CreateNode2 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.CreateNode2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.CreateNode2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.CreateNode2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9fca-710">未提供名稱且 <see langword="XmlNodeType" /> 需要名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-710">The name was not provided and the <see langword="XmlNodeType" /> requires a name.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateProcessingInstruction">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlProcessingInstruction CreateProcessingInstruction (string target, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlProcessingInstruction CreateProcessingInstruction(string target, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateProcessingInstruction(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateProcessingInstruction (target As String, data As String) As XmlProcessingInstruction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlProcessingInstruction ^ CreateProcessingInstruction(System::String ^ target, System::String ^ data);" />
      <MemberSignature Language="F#" Value="abstract member CreateProcessingInstruction : string * string -&gt; System.Xml.XmlProcessingInstruction&#xA;override this.CreateProcessingInstruction : string * string -&gt; System.Xml.XmlProcessingInstruction" Usage="xmlDocument.CreateProcessingInstruction (target, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlProcessingInstruction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="f9fca-711">處理指示的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-711">The name of the processing instruction.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="f9fca-712">處理指示的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-712">The data for the processing instruction.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9fca-713">建立具有指定名稱和資料的 <see cref="T:System.Xml.XmlProcessingInstruction" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-713">Creates an <see cref="T:System.Xml.XmlProcessingInstruction" /> with the specified name and data.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9fca-714">新的 <see langword="XmlProcessingInstruction" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-714">The new <see langword="XmlProcessingInstruction" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9fca-715">雖然這個方法會在文件的內容中建立新的物件，它不會自動將新的物件至文件樹狀結構。</span><span class="sxs-lookup"><span data-stu-id="f9fca-715">Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</span></span> <span data-ttu-id="f9fca-716">若要加入新的物件，您必須明確呼叫其中一個節點插入方法。</span><span class="sxs-lookup"><span data-stu-id="f9fca-716">To add the new object, you must explicitly call one of the node insert methods.</span></span>  
  
 <span data-ttu-id="f9fca-717">根據 W3C 可延伸標記語言 (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210) ProcessingInstruction 節點時，才允許文件、 項目和 EntityReference 節點內 EntityReference 節點不是子系屬性節點。</span><span class="sxs-lookup"><span data-stu-id="f9fca-717">According to the W3C Extensible Markup Language (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210), ProcessingInstruction nodes are only allowed within Document, Element, and EntityReference nodes, when the EntityReference node is not a child of an Attribute node.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9fca-718">下列範例會建立 ProcessingInstruction 節點，並將它加入至文件。</span><span class="sxs-lookup"><span data-stu-id="f9fca-718">The following example creates a ProcessingInstruction node and adds it to the document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.CreateProcessingInstruction Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.CreateProcessingInstruction Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.CreateProcessingInstruction Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.CreateProcessingInstruction Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.CreateProcessingInstruction Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.CreateProcessingInstruction Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSignificantWhitespace">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlSignificantWhitespace CreateSignificantWhitespace (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlSignificantWhitespace CreateSignificantWhitespace(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateSignificantWhitespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateSignificantWhitespace (text As String) As XmlSignificantWhitespace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlSignificantWhitespace ^ CreateSignificantWhitespace(System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member CreateSignificantWhitespace : string -&gt; System.Xml.XmlSignificantWhitespace&#xA;override this.CreateSignificantWhitespace : string -&gt; System.Xml.XmlSignificantWhitespace" Usage="xmlDocument.CreateSignificantWhitespace text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlSignificantWhitespace</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="f9fca-719">字串必須只包含下列字元：&amp;#20; &amp;#10; &amp;#13; 和 &amp;#9;</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-719">The string must contain only the following characters &amp;#20; &amp;#10; &amp;#13; and &amp;#9;</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9fca-720">建立 <see cref="T:System.Xml.XmlSignificantWhitespace" /> 節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-720">Creates an <see cref="T:System.Xml.XmlSignificantWhitespace" /> node.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9fca-721">新的 <see langword="XmlSignificantWhitespace" /> 節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-721">A new <see langword="XmlSignificantWhitespace" /> node.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9fca-722">這個方法是 Microsoft 擴充功能的文件物件模型 (DOM)。</span><span class="sxs-lookup"><span data-stu-id="f9fca-722">This method is a Microsoft extension to the Document Object Model (DOM).</span></span> <span data-ttu-id="f9fca-723">您想要以手動方式格式化文件時使用它。</span><span class="sxs-lookup"><span data-stu-id="f9fca-723">It is used when you want to manually format your document.</span></span>  
  
 <span data-ttu-id="f9fca-724">雖然這個方法會在文件的內容中建立新的物件，它不會自動將新的物件至文件樹狀結構。</span><span class="sxs-lookup"><span data-stu-id="f9fca-724">Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</span></span> <span data-ttu-id="f9fca-725">若要加入新的物件，您必須明確呼叫其中一個節點插入方法。</span><span class="sxs-lookup"><span data-stu-id="f9fca-725">To add the new object, you must explicitly call one of the node insert methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9fca-726">下列範例會將文件中的顯著泛空白字元。</span><span class="sxs-lookup"><span data-stu-id="f9fca-726">The following example adds significant white space to the document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.CreateSignificantWhitespace Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.CreateSignificantWhitespace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.CreateSignificantWhitespace Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.CreateSignificantWhitespace Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.CreateSignificantWhitespace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.CreateSignificantWhitespace Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTextNode">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlText CreateTextNode (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlText CreateTextNode(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateTextNode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateTextNode (text As String) As XmlText" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlText ^ CreateTextNode(System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member CreateTextNode : string -&gt; System.Xml.XmlText&#xA;override this.CreateTextNode : string -&gt; System.Xml.XmlText" Usage="xmlDocument.CreateTextNode text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlText</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="f9fca-727">Text 節點的文字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-727">The text for the Text node.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9fca-728">建立具有指定文字的 <see cref="T:System.Xml.XmlText" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-728">Creates an <see cref="T:System.Xml.XmlText" /> with the specified text.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9fca-729">新的  <see langword="XmlText" /> 節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-729">The new <see langword="XmlText" /> node.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9fca-730">雖然這個方法會在文件的內容中建立新的物件，它不會自動將新的物件至文件樹狀結構。</span><span class="sxs-lookup"><span data-stu-id="f9fca-730">Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</span></span> <span data-ttu-id="f9fca-731">若要加入新的物件，您必須明確呼叫其中一個節點插入方法。</span><span class="sxs-lookup"><span data-stu-id="f9fca-731">To add the new object, you must explicitly call one of the node insert methods.</span></span>  
  
 <span data-ttu-id="f9fca-732">根據 W3C 可延伸標記語言 (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210) 中，文字節點之內，才允許項目、 屬性和 EntityReference 節點。</span><span class="sxs-lookup"><span data-stu-id="f9fca-732">According to the W3C Extensible Markup Language (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210), Text nodes are only allowed within Element, Attribute and EntityReference nodes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9fca-733">下列範例會建立新的項目，並將它加入至文件。</span><span class="sxs-lookup"><span data-stu-id="f9fca-733">The following example creates a new element and adds it to the document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.CreateElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.CreateElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.CreateElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.CreateElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.CreateElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.CreateElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateWhitespace">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlWhitespace CreateWhitespace (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlWhitespace CreateWhitespace(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateWhitespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateWhitespace (text As String) As XmlWhitespace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlWhitespace ^ CreateWhitespace(System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member CreateWhitespace : string -&gt; System.Xml.XmlWhitespace&#xA;override this.CreateWhitespace : string -&gt; System.Xml.XmlWhitespace" Usage="xmlDocument.CreateWhitespace text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWhitespace</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="f9fca-734">字串必須只包含下列字元：&amp;#20; &amp;#10; &amp;#13; 和 &amp;#9;</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-734">The string must contain only the following characters &amp;#20; &amp;#10; &amp;#13; and &amp;#9;</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9fca-735">建立 <see cref="T:System.Xml.XmlWhitespace" /> 節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-735">Creates an <see cref="T:System.Xml.XmlWhitespace" /> node.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9fca-736">新的 <see langword="XmlWhitespace" /> 節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-736">A new <see langword="XmlWhitespace" /> node.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9fca-737">這個方法是 Microsoft 擴充功能的文件物件模型 (DOM)。</span><span class="sxs-lookup"><span data-stu-id="f9fca-737">This method is a Microsoft extension to the Document Object Model (DOM).</span></span> <span data-ttu-id="f9fca-738">您想要以手動方式格式化文件時使用它。</span><span class="sxs-lookup"><span data-stu-id="f9fca-738">It is used when you want to manually format your document.</span></span>  
  
 <span data-ttu-id="f9fca-739">雖然這個方法會在文件的內容中建立新的物件，它不會自動將新的物件至文件樹狀結構。</span><span class="sxs-lookup"><span data-stu-id="f9fca-739">Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</span></span> <span data-ttu-id="f9fca-740">若要加入新的物件，您必須明確呼叫其中一個節點插入方法。</span><span class="sxs-lookup"><span data-stu-id="f9fca-740">To add the new object, you must explicitly call one of the node insert methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9fca-741">下列範例會將文件的泛空白字元。</span><span class="sxs-lookup"><span data-stu-id="f9fca-741">The following example adds white space to the document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.CreateWhitespace Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.CreateWhitespace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.CreateWhitespace Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.CreateWhitespace Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.CreateWhitespace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.CreateWhitespace Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateXmlDeclaration">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlDeclaration CreateXmlDeclaration (string version, string encoding, string standalone);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlDeclaration CreateXmlDeclaration(string version, string encoding, string standalone) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateXmlDeclaration(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateXmlDeclaration (version As String, encoding As String, standalone As String) As XmlDeclaration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlDeclaration ^ CreateXmlDeclaration(System::String ^ version, System::String ^ encoding, System::String ^ standalone);" />
      <MemberSignature Language="F#" Value="abstract member CreateXmlDeclaration : string * string * string -&gt; System.Xml.XmlDeclaration&#xA;override this.CreateXmlDeclaration : string * string * string -&gt; System.Xml.XmlDeclaration" Usage="xmlDocument.CreateXmlDeclaration (version, encoding, standalone)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDeclaration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="version" Type="System.String" />
        <Parameter Name="encoding" Type="System.String" />
        <Parameter Name="standalone" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="version">
          <span data-ttu-id="f9fca-742">版本必須是 "1.0"。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-742">The version must be "1.0".</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="f9fca-743">編碼屬性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-743">The value of the encoding attribute.</span>
          </span>
          <span data-ttu-id="f9fca-744">這是在您將 <see cref="T:System.Xml.XmlDocument" /> 儲存至檔案或資料流時使用的編碼方式，因此，必須設定為 <see cref="T:System.Text.Encoding" /> 類別支援的字串，否則 <see cref="M:System.Xml.XmlDocument.Save(System.String)" /> 會失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-744">This is the encoding that is used when you save the <see cref="T:System.Xml.XmlDocument" /> to a file or a stream; therefore, it must be set to a string supported by the <see cref="T:System.Text.Encoding" /> class, otherwise <see cref="M:System.Xml.XmlDocument.Save(System.String)" /> fails.</span>
          </span>
          <span data-ttu-id="f9fca-745">如果這是 <see langword="null" /> 或 String.Empty，<see langword="Save" /> 方法不會在 XML 宣告上寫入編碼屬性，因此會使用預設編碼方式 UTF-8。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-745">If this is <see langword="null" /> or String.Empty, the <see langword="Save" /> method does not write an encoding attribute on the XML declaration and therefore the default encoding, UTF-8, is used.</span>
          </span>
          <span data-ttu-id="f9fca-746">注意：如果 <see langword="XmlDocument" /> 儲存至 <see cref="T:System.IO.TextWriter" /> 或 <see cref="T:System.Xml.XmlTextWriter" />，則會捨棄這個編碼值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-746">Note: If the <see langword="XmlDocument" /> is saved to either a <see cref="T:System.IO.TextWriter" /> or an <see cref="T:System.Xml.XmlTextWriter" />, this encoding value is discarded.</span>
          </span>
          <span data-ttu-id="f9fca-747">改用 <see langword="TextWriter" /> 或 <see langword="XmlTextWriter" /> 的編碼方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-747">Instead, the encoding of the <see langword="TextWriter" /> or the <see langword="XmlTextWriter" /> is used.</span>
          </span>
          <span data-ttu-id="f9fca-748">這可以確保寫出的 XML 可以使用正碼的編碼方式讀回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-748">This ensures that the XML written out can be read back using the correct encoding.</span>
          </span>
        </param>
        <param name="standalone">
          <span data-ttu-id="f9fca-749">值必須為「是」或「否」。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-749">The value must be either "yes" or "no".</span>
          </span>
          <span data-ttu-id="f9fca-750">如果這是 <see langword="null" /> 或 String.Empty，<see langword="Save" /> 方法不會在 XML 宣告上寫入獨立屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-750">If this is <see langword="null" /> or String.Empty, the <see langword="Save" /> method does not write a standalone attribute on the XML declaration.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9fca-751">建立具有指定值的 <see cref="T:System.Xml.XmlDeclaration" /> 節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-751">Creates an <see cref="T:System.Xml.XmlDeclaration" /> node with the specified values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9fca-752">新的  <see langword="XmlDeclaration" /> 節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-752">The new <see langword="XmlDeclaration" /> node.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9fca-753">屬性會公開為特殊的屬性上`XmlDeclaration` 節點，而不是<xref:System.Xml.XmlAttribute>節點。</span><span class="sxs-lookup"><span data-stu-id="f9fca-753">The attributes are exposed as special properties on the `XmlDeclaration` node, and not as <xref:System.Xml.XmlAttribute> nodes.</span></span>  
  
 <span data-ttu-id="f9fca-754">雖然這個方法會在文件的內容中建立新的物件，它不會自動將新的物件至文件樹狀結構。</span><span class="sxs-lookup"><span data-stu-id="f9fca-754">Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</span></span> <span data-ttu-id="f9fca-755">若要加入新的物件，您必須明確呼叫其中一個節點插入方法。</span><span class="sxs-lookup"><span data-stu-id="f9fca-755">To add the new object, you must explicitly call one of the node insert methods.</span></span>  
  
 <span data-ttu-id="f9fca-756">根據 W3C 可延伸標記語言 (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210)，`XmlDeclaration`節點必須是文件中的第一個節點。</span><span class="sxs-lookup"><span data-stu-id="f9fca-756">According to the W3C Extensible Markup Language (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210), the `XmlDeclaration` node must be the first node in the document.</span></span>  
  
 <span data-ttu-id="f9fca-757">這個方法是 Microsoft 擴充功能的文件物件模型 (DOM)。</span><span class="sxs-lookup"><span data-stu-id="f9fca-757">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9fca-758">下列範例會建立 XML 宣告，並將它加入至文件。</span><span class="sxs-lookup"><span data-stu-id="f9fca-758">The following example creates an XML declaration and adds it to the document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.CreateXmlDeclaration Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.CreateXmlDeclaration Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.CreateXmlDeclaration Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.CreateXmlDeclaration Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.CreateXmlDeclaration Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.CreateXmlDeclaration Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9fca-759">
            <paramref name="version" /> 或 <paramref name="standalone" /> 的值非上述指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-759">The values of <paramref name="version" /> or <paramref name="standalone" /> are something other than the ones specified above.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlDeclaration" />
      </Docs>
    </Member>
    <Member MemberName="DocumentElement">
      <MemberSignature Language="C#" Value="public System.Xml.XmlElement DocumentElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlElement DocumentElement" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlDocument.DocumentElement" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DocumentElement As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlElement ^ DocumentElement { System::Xml::XmlElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DocumentElement : System.Xml.XmlElement" Usage="System.Xml.XmlDocument.DocumentElement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9fca-760">取得文件的根 <see cref="T:System.Xml.XmlElement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-760">Gets the root <see cref="T:System.Xml.XmlElement" /> for the document.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9fca-761">表示 XML 文件樹狀結構之根的 <see langword="XmlElement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-761">The <see langword="XmlElement" /> that represents the root of the XML document tree.</span>
          </span>
          <span data-ttu-id="f9fca-762">如果有根，會傳回 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-762">If no root exists, <see langword="null" /> is returned.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f9fca-763">下列範例顯示 XML 文件的根項目。</span><span class="sxs-lookup"><span data-stu-id="f9fca-763">The following example displays the root element of the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.DocumentElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.DocumentElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.DocumentElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.DocumentElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.DocumentElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.DocumentElement Example/VB/source.vb#1)]  
  
 <span data-ttu-id="f9fca-764">**輸出：**</span><span class="sxs-lookup"><span data-stu-id="f9fca-764">**Output:**</span></span>  
  
```  
<book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book>   
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DocumentType">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlDocumentType DocumentType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlDocumentType DocumentType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlDocument.DocumentType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DocumentType As XmlDocumentType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlDocumentType ^ DocumentType { System::Xml::XmlDocumentType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DocumentType : System.Xml.XmlDocumentType" Usage="System.Xml.XmlDocument.DocumentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDocumentType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9fca-765">取得包含 DOCTYPE 宣告的節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-765">Gets the node containing the DOCTYPE declaration.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9fca-766">包含 DocumentType (DOCTYPE 宣告) 的 <see cref="T:System.Xml.XmlNode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-766">The <see cref="T:System.Xml.XmlNode" /> containing the DocumentType (DOCTYPE declaration).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9fca-767">`XmlDocument`可以有只有一個子系<xref:System.Xml.XmlNodeType>等於 DocumentType。</span><span class="sxs-lookup"><span data-stu-id="f9fca-767">An `XmlDocument` can have one and only one child with <xref:System.Xml.XmlNodeType> equal to DocumentType.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f9fca-768">這個屬性是唯讀的。</span><span class="sxs-lookup"><span data-stu-id="f9fca-768">This property is read-only.</span></span> <span data-ttu-id="f9fca-769">若要變更 DocumentType 節點，請刪除現有的節點，建立新一個使用<xref:System.Xml.XmlDocument.CreateDocumentType%2A>方法，並將新節點加入至文件。</span><span class="sxs-lookup"><span data-stu-id="f9fca-769">To change the DocumentType node, delete the existing node, create a new one using the <xref:System.Xml.XmlDocument.CreateDocumentType%2A> method, and add the new node to the document.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9fca-770">下列範例會取得並顯示文件的 DOCTYPE 宣告。</span><span class="sxs-lookup"><span data-stu-id="f9fca-770">The following example gets and displays the DOCTYPE declaration for the document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.DocumentType Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.DocumentType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.DocumentType Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.DocumentType Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.DocumentType Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.DocumentType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlDocumentType" />
      </Docs>
    </Member>
    <Member MemberName="GetElementById">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlElement GetElementById (string elementId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlElement GetElementById(string elementId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.GetElementById(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetElementById (elementId As String) As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlElement ^ GetElementById(System::String ^ elementId);" />
      <MemberSignature Language="F#" Value="abstract member GetElementById : string -&gt; System.Xml.XmlElement&#xA;override this.GetElementById : string -&gt; System.Xml.XmlElement" Usage="xmlDocument.GetElementById elementId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="elementId">
          <span data-ttu-id="f9fca-771">要比對的屬性 ID。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-771">The attribute ID to match.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9fca-772">取得具有指定 ID 的 <see cref="T:System.Xml.XmlElement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-772">Gets the <see cref="T:System.Xml.XmlElement" /> with the specified ID.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9fca-773">具有相符 ID 的 <see langword="XmlElement" />；如果找不到相符的項目，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-773">The <see langword="XmlElement" /> with the matching ID or <see langword="null" /> if no matching element is found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9fca-774">如果文件有多個具有相符 ID 的項目，這個方法會傳回文件中的第一個相符的項目。</span><span class="sxs-lookup"><span data-stu-id="f9fca-774">If the document has multiple elements with the matching ID, this method returns the first matching element in the document.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f9fca-775">DOM 實作必須具有定義的屬性都屬於類型識別碼。</span><span class="sxs-lookup"><span data-stu-id="f9fca-775">The DOM implementation must have information which defines which attributes are of type ID.</span></span> <span data-ttu-id="f9fca-776">雖然型別 ID 的屬性可以定義 XSD 結構描述或 Dtd 中，產品版本只支援 Dtd 中所定義。</span><span class="sxs-lookup"><span data-stu-id="f9fca-776">Although attributes of type ID can be defined in either XSD schemas or DTDs, this version of the product only supports those defined in DTDs.</span></span> <span data-ttu-id="f9fca-777">除非因此 DTD 中所定義，具有 「 識別碼 」 不是名稱的屬性類型識別碼。</span><span class="sxs-lookup"><span data-stu-id="f9fca-777">Attributes with the name "ID" are not of type ID unless so defined in the DTD.</span></span> <span data-ttu-id="f9fca-778">其中是未知的屬性是否為型別 ID 的實作都應傳回`null`。</span><span class="sxs-lookup"><span data-stu-id="f9fca-778">Implementations where it is unknown whether the attributes are of type ID are expected to return `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9fca-779">下列範例使用 `GetElementById` 方法。</span><span class="sxs-lookup"><span data-stu-id="f9fca-779">The following example uses the `GetElementById` method.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.GetElementById Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.GetElementById Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.GetElementById Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.GetElementById Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.GetElementById Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.GetElementById Example/VB/source.vb#1)]  
  
 <span data-ttu-id="f9fca-780">此範例會使用該檔案，`ids.xml`作為輸入。</span><span class="sxs-lookup"><span data-stu-id="f9fca-780">The example uses the file, `ids.xml`, as input.</span></span>  
  
```xml  
<!DOCTYPE root [  
  <!ELEMENT root ANY>   
  <!ELEMENT Person ANY>   
  <!ELEMENT Customer EMPTY>  
  <!ELEMENT Team EMPTY>  
  <!ATTLIST Person SSN ID #REQUIRED>  
  <!ATTLIST Customer id IDREF #REQUIRED >  
  <!ATTLIST Team members IDREFS #REQUIRED]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetElementsByTagName">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f9fca-781">傳回 <see cref="T:System.Xml.XmlNodeList" />，其中包含符合指定名稱之所有子代 (Descendant) 項目清單。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-781">Returns an <see cref="T:System.Xml.XmlNodeList" /> containing a list of all descendant elements that match the specified name.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetElementsByTagName">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNodeList GetElementsByTagName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNodeList GetElementsByTagName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.GetElementsByTagName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetElementsByTagName (name As String) As XmlNodeList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNodeList ^ GetElementsByTagName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetElementsByTagName : string -&gt; System.Xml.XmlNodeList&#xA;override this.GetElementsByTagName : string -&gt; System.Xml.XmlNodeList" Usage="xmlDocument.GetElementsByTagName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="f9fca-782">要相符的限定名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-782">The qualified name to match.</span>
          </span>
          <span data-ttu-id="f9fca-783">它會與符合節點的 <see langword="Name" /> 屬性比對。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-783">It is matched against the <see langword="Name" /> property of the matching node.</span>
          </span>
          <span data-ttu-id="f9fca-784">特殊值 "\*" 與所有標記相符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-784">The special value "\*" matches all tags.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9fca-785">傳回 <see cref="T:System.Xml.XmlNodeList" />，其中包含符合指定 <see cref="P:System.Xml.XmlDocument.Name" /> 之所有子代 (Descendant) 項目的清單。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-785">Returns an <see cref="T:System.Xml.XmlNodeList" /> containing a list of all descendant elements that match the specified <see cref="P:System.Xml.XmlDocument.Name" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9fca-786">
            <see cref="T:System.Xml.XmlNodeList" />，包含所有符合節點的清單。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-786">An <see cref="T:System.Xml.XmlNodeList" /> containing a list of all matching nodes.</span>
          </span>
          <span data-ttu-id="f9fca-787">如果沒有節點符合 <paramref name="name" />，就會傳回空的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-787">If no nodes match <paramref name="name" />, the returned collection will be empty.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9fca-788">節點會放置在其中發生文件中的順序。</span><span class="sxs-lookup"><span data-stu-id="f9fca-788">The nodes are placed in the order in which they would be encountered in the document.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f9fca-789">建議您改用<xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=nameWithType>或<xref:System.Xml.XmlNode.SelectSingleNode%2A?displayProperty=nameWithType>方法，而非<xref:System.Xml.XmlDocument.GetElementsByTagName%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f9fca-789">It is recommended that you use the <xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=nameWithType> or <xref:System.Xml.XmlNode.SelectSingleNode%2A?displayProperty=nameWithType> method instead of the <xref:System.Xml.XmlDocument.GetElementsByTagName%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9fca-790">下列範例會建立`XmlDocument`物件，並使用`GetElementsByTagName`方法，並產生<xref:System.Xml.XmlNodeList>物件，以顯示所有的書名。</span><span class="sxs-lookup"><span data-stu-id="f9fca-790">The following example creates a `XmlDocument` object and uses the `GetElementsByTagName` method and the resulting <xref:System.Xml.XmlNodeList> object to display all the book titles.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.GetElementsByTagName Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.GetElementsByTagName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.GetElementsByTagName Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.GetElementsByTagName Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.GetElementsByTagName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.GetElementsByTagName Example/VB/source.vb#1)]  
  
 <span data-ttu-id="f9fca-791">該範例使用 `books.xml` 檔案做為輸入。</span><span class="sxs-lookup"><span data-stu-id="f9fca-791">The example uses the `books.xml` file as input.</span></span>  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetElementsByTagName">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNodeList GetElementsByTagName (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNodeList GetElementsByTagName(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.GetElementsByTagName(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetElementsByTagName (localName As String, namespaceURI As String) As XmlNodeList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNodeList ^ GetElementsByTagName(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="abstract member GetElementsByTagName : string * string -&gt; System.Xml.XmlNodeList&#xA;override this.GetElementsByTagName : string * string -&gt; System.Xml.XmlNodeList" Usage="xmlDocument.GetElementsByTagName (localName, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">
          <span data-ttu-id="f9fca-792">要相符的 LocalName。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-792">The LocalName to match.</span>
          </span>
          <span data-ttu-id="f9fca-793">特殊值 "\*" 與所有標記相符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-793">The special value "\*" matches all tags.</span>
          </span>
        </param>
        <param name="namespaceURI">
          <span data-ttu-id="f9fca-794">要比對的 NamespaceURI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-794">NamespaceURI to match.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9fca-795">傳回 <see cref="T:System.Xml.XmlNodeList" />，其中包含符合指定之 <see cref="P:System.Xml.XmlDocument.LocalName" /> 和 <see cref="P:System.Xml.XmlNode.NamespaceURI" /> 的所有子代元素的清單。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-795">Returns an <see cref="T:System.Xml.XmlNodeList" /> containing a list of all descendant elements that match the specified <see cref="P:System.Xml.XmlDocument.LocalName" /> and <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9fca-796">
            <see cref="T:System.Xml.XmlNodeList" />，包含所有符合節點的清單。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-796">An <see cref="T:System.Xml.XmlNodeList" /> containing a list of all matching nodes.</span>
          </span>
          <span data-ttu-id="f9fca-797">如果沒有節點符合指定的 <paramref name="localName" /> 及 <paramref name="namespaceURI" />，就會傳回空的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-797">If no nodes match the specified <paramref name="localName" /> and <paramref name="namespaceURI" />, the returned collection will be empty.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9fca-798">節點會放置在其中發生在文件樹狀目錄中的順序。</span><span class="sxs-lookup"><span data-stu-id="f9fca-798">The nodes are placed in the order in which they would be encountered in the document tree.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f9fca-799">建議您改用<xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=nameWithType>或<xref:System.Xml.XmlNode.SelectSingleNode%2A?displayProperty=nameWithType>方法，而非<xref:System.Xml.XmlDocument.GetElementsByTagName%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f9fca-799">It is recommended that you use the <xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=nameWithType> or <xref:System.Xml.XmlNode.SelectSingleNode%2A?displayProperty=nameWithType> method instead of the <xref:System.Xml.XmlDocument.GetElementsByTagName%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Implementation">
      <MemberSignature Language="C#" Value="public System.Xml.XmlImplementation Implementation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlImplementation Implementation" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlDocument.Implementation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Implementation As XmlImplementation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlImplementation ^ Implementation { System::Xml::XmlImplementation ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Implementation : System.Xml.XmlImplementation" Usage="System.Xml.XmlDocument.Implementation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlImplementation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9fca-800">取得目前文件的 <see cref="T:System.Xml.XmlImplementation" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-800">Gets the <see cref="T:System.Xml.XmlImplementation" /> object for the current document.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9fca-801">目前文件的 <see langword="XmlImplementation" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-801">The <see langword="XmlImplementation" /> object for the current document.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9fca-802">`XmlDocument` 建立從相同物件`XmlImplementation`共用相同<xref:System.Xml.XmlNameTable>。</span><span class="sxs-lookup"><span data-stu-id="f9fca-802">`XmlDocument` objects created from the same `XmlImplementation` share the same <xref:System.Xml.XmlNameTable>.</span></span> <span data-ttu-id="f9fca-803">這可讓使用者做為物件，而不是字串比較的屬性和項目名稱。</span><span class="sxs-lookup"><span data-stu-id="f9fca-803">This allows users to compare attribute and element names as objects rather than strings.</span></span>  
  
 <span data-ttu-id="f9fca-804">雖然`XmlDocument`物件共用相同的實作，以將節點從一份文件移到另一個則必須使用<xref:System.Xml.XmlDocument.ImportNode%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f9fca-804">Although the `XmlDocument` objects share the same implementation, to move nodes from one document to another you must use the <xref:System.Xml.XmlDocument.ImportNode%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9fca-805">下列範例會建立新`XmlDocument`使用另一個文件的實作。</span><span class="sxs-lookup"><span data-stu-id="f9fca-805">The following example creates a new `XmlDocument` using another document's implementation.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.Implementation Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.Implementation Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.Implementation Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.Implementation Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.Implementation Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.Implementation Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportNode">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode ImportNode (System.Xml.XmlNode node, bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode ImportNode(class System.Xml.XmlNode node, bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.ImportNode(System.Xml.XmlNode,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ImportNode (node As XmlNode, deep As Boolean) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ ImportNode(System::Xml::XmlNode ^ node, bool deep);" />
      <MemberSignature Language="F#" Value="abstract member ImportNode : System.Xml.XmlNode * bool -&gt; System.Xml.XmlNode&#xA;override this.ImportNode : System.Xml.XmlNode * bool -&gt; System.Xml.XmlNode" Usage="xmlDocument.ImportNode (node, deep)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Xml.XmlNode" />
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="node">
          <span data-ttu-id="f9fca-806">匯入的節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-806">The node being imported.</span>
          </span>
        </param>
        <param name="deep">
          <span data-ttu-id="f9fca-807">
            <see langword="true" /> 以執行深層複製；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-807">
              <see langword="true" /> to perform a deep clone; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9fca-808">從其他文件匯入節點至目前的文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-808">Imports a node from another document to the current document.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9fca-809">匯入的 <see cref="T:System.Xml.XmlNode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-809">The imported <see cref="T:System.Xml.XmlNode" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9fca-810">傳回的節點有沒有父代。</span><span class="sxs-lookup"><span data-stu-id="f9fca-810">The returned node has no parent.</span></span> <span data-ttu-id="f9fca-811">來源節點不改變或移除原始文件。`ImportNode`建立來源節點的複本。</span><span class="sxs-lookup"><span data-stu-id="f9fca-811">The source node is not altered or removed from the original document; `ImportNode` creates a copy of the source node.</span></span>  
  
 <span data-ttu-id="f9fca-812">匯入的節點會建立`XmlNode`物件與所匯入的文件中，擁有<xref:System.Xml.XmlNode.Name%2A>和<xref:System.Xml.XmlNode.NodeType%2A>來源節點相同。</span><span class="sxs-lookup"><span data-stu-id="f9fca-812">Importing a node creates an `XmlNode` object owned by the importing document, with <xref:System.Xml.XmlNode.Name%2A> and <xref:System.Xml.XmlNode.NodeType%2A> identical to the source node.</span></span> <span data-ttu-id="f9fca-813">新的物件也有命名空間與相關的屬性 (<xref:System.Xml.XmlNode.Prefix%2A>， <xref:System.Xml.XmlNode.LocalName%2A>，和<xref:System.Xml.XmlNode.NamespaceURI%2A>)。</span><span class="sxs-lookup"><span data-stu-id="f9fca-813">The new object also has the attributes related to namespaces (<xref:System.Xml.XmlNode.Prefix%2A>, <xref:System.Xml.XmlNode.LocalName%2A>, and <xref:System.Xml.XmlNode.NamespaceURI%2A>).</span></span>  
  
 <span data-ttu-id="f9fca-814">根據節點類型的值匯入的節點以及`deep`參數，其他資訊會適當的複製。</span><span class="sxs-lookup"><span data-stu-id="f9fca-814">Depending on the node type of the imported node and the value of the `deep` parameter, additional information is copied as appropriate.</span></span> <span data-ttu-id="f9fca-815">這個方法會嘗試預期的行為，如果 XML 或 HTML 來源的片段從一份文件複製到另一個鏡像 （可辨識在 XML 案例中，兩份文件可能有不同的 Dtd）。</span><span class="sxs-lookup"><span data-stu-id="f9fca-815">This method attempts to mirror the behavior expected if a fragment of XML or HTML source was copied from one document to another (recognizing that, in the XML case, the two documents could have different DTDs).</span></span>  
  
 <span data-ttu-id="f9fca-816">下表描述每項特定行為<xref:System.Xml.XmlNodeType>。</span><span class="sxs-lookup"><span data-stu-id="f9fca-816">The following table describes the specific behavior for each <xref:System.Xml.XmlNodeType>.</span></span>  
  
|<span data-ttu-id="f9fca-817">XmlNodeType</span><span class="sxs-lookup"><span data-stu-id="f9fca-817">XmlNodeType</span></span>|<span data-ttu-id="f9fca-818">ImportNode(true)</span><span class="sxs-lookup"><span data-stu-id="f9fca-818">ImportNode(true)</span></span>|<span data-ttu-id="f9fca-819">ImportNode(false)</span><span class="sxs-lookup"><span data-stu-id="f9fca-819">ImportNode(false)</span></span>|  
|-----------------|------------------------|-------------------------|  
|<span data-ttu-id="f9fca-820">屬性</span><span class="sxs-lookup"><span data-stu-id="f9fca-820">Attribute</span></span>|<span data-ttu-id="f9fca-821"><xref:System.Xml.XmlAttribute.Specified%2A>屬性設定為`true`產生<xref:System.Xml.XmlAttribute>。</span><span class="sxs-lookup"><span data-stu-id="f9fca-821">The <xref:System.Xml.XmlAttribute.Specified%2A> property is set to `true` on the generated <xref:System.Xml.XmlAttribute>.</span></span> <span data-ttu-id="f9fca-822">來源的下階`XmlAttribute`會遞迴匯入與產生的節點會重組以形成對應的樹狀子目錄。</span><span class="sxs-lookup"><span data-stu-id="f9fca-822">The descendants of the source `XmlAttribute` are recursively imported and the resulting nodes reassembled to form the corresponding subtree.</span></span>|<span data-ttu-id="f9fca-823">`deep`參數不適用於`XmlAttribute`節點; 它們永遠執行具有匯入時及其子系。</span><span class="sxs-lookup"><span data-stu-id="f9fca-823">The `deep` parameter does not apply to `XmlAttribute` nodes; they always carry their children with them when imported.</span></span>|  
|<span data-ttu-id="f9fca-824">CData</span><span class="sxs-lookup"><span data-stu-id="f9fca-824">CData</span></span>|<span data-ttu-id="f9fca-825">複製節點，包含其資料。</span><span class="sxs-lookup"><span data-stu-id="f9fca-825">Copies the node, including its data.</span></span>|<span data-ttu-id="f9fca-826">複製節點，包含其資料。</span><span class="sxs-lookup"><span data-stu-id="f9fca-826">Copies the node, including its data.</span></span>|  
|<span data-ttu-id="f9fca-827">註解</span><span class="sxs-lookup"><span data-stu-id="f9fca-827">Comment</span></span>|<span data-ttu-id="f9fca-828">複製節點，包含其資料。</span><span class="sxs-lookup"><span data-stu-id="f9fca-828">Copies the node, including its data.</span></span>|<span data-ttu-id="f9fca-829">複製節點，包含其資料。</span><span class="sxs-lookup"><span data-stu-id="f9fca-829">Copies the node, including its data.</span></span>|  
|<span data-ttu-id="f9fca-830">DocumentFragment</span><span class="sxs-lookup"><span data-stu-id="f9fca-830">DocumentFragment</span></span>|<span data-ttu-id="f9fca-831">來源節點的子代會遞迴匯入，而且產生的節點會重組以形成對應的樹狀子目錄。</span><span class="sxs-lookup"><span data-stu-id="f9fca-831">The descendants of the source node are recursively imported and the resulting nodes reassembled to form the corresponding subtree.</span></span>|<span data-ttu-id="f9fca-832">空白<xref:System.Xml.XmlDocumentFragment>產生。</span><span class="sxs-lookup"><span data-stu-id="f9fca-832">An empty <xref:System.Xml.XmlDocumentFragment> is generated.</span></span>|  
|<span data-ttu-id="f9fca-833">DocumentType</span><span class="sxs-lookup"><span data-stu-id="f9fca-833">DocumentType</span></span>|<span data-ttu-id="f9fca-834">複製節點，包含其 data.\*</span><span class="sxs-lookup"><span data-stu-id="f9fca-834">Copies the node, including its data.\*</span></span>|<span data-ttu-id="f9fca-835">複製節點，包含其 data.\*</span><span class="sxs-lookup"><span data-stu-id="f9fca-835">Copies the node, including its data.\*</span></span>|  
|<span data-ttu-id="f9fca-836">元素</span><span class="sxs-lookup"><span data-stu-id="f9fca-836">Element</span></span>|<span data-ttu-id="f9fca-837">來源項目和其指定的屬性節點的子代會遞迴匯入與產生的節點會重組以形成對應的樹狀子目錄。</span><span class="sxs-lookup"><span data-stu-id="f9fca-837">The descendants of the source element and its specified attribute nodes are recursively imported and the resulting nodes reassembled to form the corresponding subtree.</span></span><br /><br /> <span data-ttu-id="f9fca-838">附註： 預設不會複製屬性。</span><span class="sxs-lookup"><span data-stu-id="f9fca-838">Note: Default attributes are not copied.</span></span> <span data-ttu-id="f9fca-839">如果要匯入的文件定義這個項目名稱的預設屬性，就會指派這些屬性。</span><span class="sxs-lookup"><span data-stu-id="f9fca-839">If the document being imported into defines default attributes for this element name, those are assigned.</span></span>|<span data-ttu-id="f9fca-840">指定匯入的來源項目節點、 屬性和產生`XmlAttribute`節點會附加至所產生<xref:System.Xml.XmlElement>。</span><span class="sxs-lookup"><span data-stu-id="f9fca-840">Specified attribute nodes of the source element are imported, and the generated `XmlAttribute` nodes are attached to the generated <xref:System.Xml.XmlElement>.</span></span><br /><br /> <span data-ttu-id="f9fca-841">附註： 預設不會複製屬性。</span><span class="sxs-lookup"><span data-stu-id="f9fca-841">Note: Default attributes are not copied.</span></span> <span data-ttu-id="f9fca-842">如果要匯入的文件定義這個項目名稱的預設屬性，就會指派這些屬性。</span><span class="sxs-lookup"><span data-stu-id="f9fca-842">If the document being imported into defines default attributes for this element name, those are assigned.</span></span>|  
|<span data-ttu-id="f9fca-843">EntityReference</span><span class="sxs-lookup"><span data-stu-id="f9fca-843">EntityReference</span></span>|<span data-ttu-id="f9fca-844">因為來源和目的文件可以擁有定義不同的實體，這個方法只會複製<xref:System.Xml.XmlEntityReference>節點。</span><span class="sxs-lookup"><span data-stu-id="f9fca-844">Because the source and destination documents could have the entities defined differently, this method only copies the <xref:System.Xml.XmlEntityReference> node.</span></span> <span data-ttu-id="f9fca-845">不包括取代文字。</span><span class="sxs-lookup"><span data-stu-id="f9fca-845">The replacement text is not included.</span></span> <span data-ttu-id="f9fca-846">如果目的文件有定義的實體，就會指派它的值。</span><span class="sxs-lookup"><span data-stu-id="f9fca-846">If the destination document has the entity defined, its value is assigned.</span></span>|<span data-ttu-id="f9fca-847">因為來源和目的文件可以擁有定義不同的實體，這個方法只會複製<xref:System.Xml.XmlEntityReference>節點。</span><span class="sxs-lookup"><span data-stu-id="f9fca-847">Because the source and destination documents could have the entities defined differently, this method only copies the <xref:System.Xml.XmlEntityReference> node.</span></span> <span data-ttu-id="f9fca-848">不包括取代文字。</span><span class="sxs-lookup"><span data-stu-id="f9fca-848">The replacement text is not included.</span></span> <span data-ttu-id="f9fca-849">如果目的文件有定義的實體，就會指派它的值。</span><span class="sxs-lookup"><span data-stu-id="f9fca-849">If the destination document has the entity defined, its value is assigned.</span></span>|  
|<span data-ttu-id="f9fca-850">ProcessingInstruction</span><span class="sxs-lookup"><span data-stu-id="f9fca-850">ProcessingInstruction</span></span>|<span data-ttu-id="f9fca-851">從匯入的節點複製目標和資料值。</span><span class="sxs-lookup"><span data-stu-id="f9fca-851">Copies the target and data value from the imported node.</span></span>|<span data-ttu-id="f9fca-852">從匯入的節點複製目標和資料值。</span><span class="sxs-lookup"><span data-stu-id="f9fca-852">Copies the target and data value from the imported node.</span></span>|  
|<span data-ttu-id="f9fca-853">Text</span><span class="sxs-lookup"><span data-stu-id="f9fca-853">Text</span></span>|<span data-ttu-id="f9fca-854">複製節點，包含其資料。</span><span class="sxs-lookup"><span data-stu-id="f9fca-854">Copies the node, including its data.</span></span>|<span data-ttu-id="f9fca-855">複製節點，包含其資料。</span><span class="sxs-lookup"><span data-stu-id="f9fca-855">Copies the node, including its data.</span></span>|  
|<span data-ttu-id="f9fca-856">SignificantWhitespace</span><span class="sxs-lookup"><span data-stu-id="f9fca-856">SignificantWhitespace</span></span>|<span data-ttu-id="f9fca-857">複製節點，包含其資料。</span><span class="sxs-lookup"><span data-stu-id="f9fca-857">Copies the node, including its data.</span></span>|<span data-ttu-id="f9fca-858">複製節點，包含其資料。</span><span class="sxs-lookup"><span data-stu-id="f9fca-858">Copies the node, including its data.</span></span>|  
|<span data-ttu-id="f9fca-859">Whitespace</span><span class="sxs-lookup"><span data-stu-id="f9fca-859">Whitespace</span></span>|<span data-ttu-id="f9fca-860">複製節點，包含其資料。</span><span class="sxs-lookup"><span data-stu-id="f9fca-860">Copies the node, including its data.</span></span>|<span data-ttu-id="f9fca-861">複製節點，包含其資料。</span><span class="sxs-lookup"><span data-stu-id="f9fca-861">Copies the node, including its data.</span></span>|  
|<span data-ttu-id="f9fca-862">XmlDeclaration</span><span class="sxs-lookup"><span data-stu-id="f9fca-862">XmlDeclaration</span></span>|<span data-ttu-id="f9fca-863">從匯入的節點複製目標和資料值。</span><span class="sxs-lookup"><span data-stu-id="f9fca-863">Copies the target and data value from the imported node.</span></span>|<span data-ttu-id="f9fca-864">從匯入的節點複製目標和資料值。</span><span class="sxs-lookup"><span data-stu-id="f9fca-864">Copies the target and data value from the imported node.</span></span>|  
|<span data-ttu-id="f9fca-865">其他所有節點類型。</span><span class="sxs-lookup"><span data-stu-id="f9fca-865">All other node types.</span></span>|<span data-ttu-id="f9fca-866">這些節點型別不會匯入。</span><span class="sxs-lookup"><span data-stu-id="f9fca-866">These node types cannot be imported.</span></span>|<span data-ttu-id="f9fca-867">這些節點型別不會匯入。</span><span class="sxs-lookup"><span data-stu-id="f9fca-867">These node types cannot be imported.</span></span>|  
  
 <span data-ttu-id="f9fca-868">\* 雖然 DocumentType 節點可以匯入，文件只能有一個 DocumentType。</span><span class="sxs-lookup"><span data-stu-id="f9fca-868">\*Although DocumentType nodes can be imported, a document can only have one DocumentType.</span></span> <span data-ttu-id="f9fca-869">如果目前文件會具有 DocumenType 節點，必須將它移除之前新增一個新。</span><span class="sxs-lookup"><span data-stu-id="f9fca-869">If the document currently has a DocumenType node, it must be removed before adding a new one.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9fca-870">下列範例的第二個 XML 文件從匯入書籍節點，原始的 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="f9fca-870">The following example imports a book node from a second XML document into the original XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.ImportNode Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.ImportNode Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.ImportNode Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.ImportNode Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.ImportNode Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.ImportNode Example/VB/source.vb#1)]  
  
 <span data-ttu-id="f9fca-871">此範例會使用該檔案，`books.xml`作為輸入。</span><span class="sxs-lookup"><span data-stu-id="f9fca-871">The example uses the file, `books.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f9fca-872">在無法匯入的節點類型上呼叫這個方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-872">Calling this method on a node type which cannot be imported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="InnerText">
      <MemberSignature Language="C#" Value="public override string InnerText { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InnerText" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlDocument.InnerText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property InnerText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InnerText {  void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InnerText : string" Usage="System.Xml.XmlDocument.InnerText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9fca-873">在所有情況下都擲回 <see cref="T:System.InvalidOperationException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-873">Throws an <see cref="T:System.InvalidOperationException" /> in all cases.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9fca-874">節點和其所有子節點的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-874">The values of the node and all its child nodes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9fca-875">這個屬性未實作。</span><span class="sxs-lookup"><span data-stu-id="f9fca-875">This property is not implemented.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f9fca-876">在所有情況下。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-876">In all cases.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="InnerXml">
      <MemberSignature Language="C#" Value="public override string InnerXml { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InnerXml" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlDocument.InnerXml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property InnerXml As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InnerXml { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InnerXml : string with get, set" Usage="System.Xml.XmlDocument.InnerXml" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9fca-877">取得或設定表示目前節點子系的標記。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-877">Gets or sets the markup representing the children of the current node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9fca-878">目前節點子系的標記。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-878">The markup of the children of the current node.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9fca-879">設定這個屬性指定字串的已剖析內容取代節點的子系。</span><span class="sxs-lookup"><span data-stu-id="f9fca-879">Setting this property replaces the children of the node with the parsed contents of the given string.</span></span> <span data-ttu-id="f9fca-880">剖析會在目前命名空間內容中完成。</span><span class="sxs-lookup"><span data-stu-id="f9fca-880">The parsing is done in the current namespace context.</span></span>  
  
 <span data-ttu-id="f9fca-881">`InnerXml` 移除多餘的命名空間宣告。</span><span class="sxs-lookup"><span data-stu-id="f9fca-881">`InnerXml` removes redundant namespace declarations.</span></span> <span data-ttu-id="f9fca-882">因此，大量的剪貼作業並不會因為有多餘的命名空間宣告，而增加文件大小。</span><span class="sxs-lookup"><span data-stu-id="f9fca-882">As a result, numerous cut and paste operations do not increase the size of your document with redundant namespace declarations.</span></span> <span data-ttu-id="f9fca-883">請考慮下列 XSL 文件：</span><span class="sxs-lookup"><span data-stu-id="f9fca-883">Consider the following XSL document:</span></span>  
  
```xml  
<xsl:stylesheet version="1.0"   
      xmlns:xsl="http://www.w3.org/1999/XSL/Transform">  
     <xsl:template match="stock">  
         ...  
     </xsl:template>  
    </xsl:stylesheet>  
```  
  
 <span data-ttu-id="f9fca-884">`InnerXml`樣式表節點上的屬性會傳回下列字串：</span><span class="sxs-lookup"><span data-stu-id="f9fca-884">The `InnerXml` property on the stylesheet node returns the following string:</span></span>  
  
```xml  
<xsl:template match="stock"   
      xmlns:xsl="http://www.w3.org/1999/XSL/Transform">  
     ...  
    </xsl:template>  
```  
  
 <span data-ttu-id="f9fca-885">請注意其他 xmlns:xsl 命名空間宣告用來保留節點的身分識別。</span><span class="sxs-lookup"><span data-stu-id="f9fca-885">Notice the additional xmlns:xsl namespace declaration which is used to preserve the node identity.</span></span> <span data-ttu-id="f9fca-886">如果您重新插入此內部的 XML 字串，您將會傳回原始文件。</span><span class="sxs-lookup"><span data-stu-id="f9fca-886">If you re-insert this inner XML string, you will get back your original document.</span></span> <span data-ttu-id="f9fca-887">換句話說，`InnerXml`辨識 xmlns:xsl 命名空間宣告為備援，，假設父 xsl: stylesheet 項目已經有 xmlns:xsl 命名空間 delcaration 中，並因此將它移除。</span><span class="sxs-lookup"><span data-stu-id="f9fca-887">In other words, `InnerXml` recognizes that the xmlns:xsl namespace declaration is redundant, given that the parent xsl:stylesheet element already has the xmlns:xsl namespace delcaration, and therefore removes it.</span></span>  
  
 <span data-ttu-id="f9fca-888">如果您移動`InnerXml`稍有不同的行為是預設命名空間加入文件沒有預設命名空間與文件中。</span><span class="sxs-lookup"><span data-stu-id="f9fca-888">If you move `InnerXml` from a document with no default namespace to a document with a default namespace, the behavior is a little different.</span></span> <span data-ttu-id="f9fca-889">請考慮下列的 XML 字串：</span><span class="sxs-lookup"><span data-stu-id="f9fca-889">Consider the following XML string:</span></span>  
  
```xml  
<test>  
      <item>123</item>  
    </test>  
```  
  
 <span data-ttu-id="f9fca-890">`InnerXml` 會傳回純文字 XML 字串有沒有命名空間宣告：</span><span class="sxs-lookup"><span data-stu-id="f9fca-890">`InnerXml` returns a plain XML string with no namespace declarations:</span></span>  
  
```xml  
<item>123</item>  
```  
  
 <span data-ttu-id="f9fca-891">如果您接著將此字串插入文件，沒有預設的命名空間，如下所示：</span><span class="sxs-lookup"><span data-stu-id="f9fca-891">If you then insert this string into a document that does have a default namespace, such as the following:</span></span>  
  
```xml  
<test2 xmlns="urn:1">  
    </test>  
```  
  
 <span data-ttu-id="f9fca-892">`InnerXml` 剖析內容和新的節點中的字串挑選 urn: 1 命名空間。</span><span class="sxs-lookup"><span data-stu-id="f9fca-892">`InnerXml` parses the string in context, and the new nodes pick up the urn:1 namespace.</span></span> <span data-ttu-id="f9fca-893">結果看起來像這樣：</span><span class="sxs-lookup"><span data-stu-id="f9fca-893">The result looks like this:</span></span>  
  
```xml  
<test2 xmlns="urn:1">  
      <item>123</item>  
    </test>  
```  
  
 <span data-ttu-id="f9fca-894">現在當您尋求`InnerXml`您會回到下列：</span><span class="sxs-lookup"><span data-stu-id="f9fca-894">Now when you ask for the `InnerXml` you get back the following:</span></span>  
  
```xml  
<item xmlns="urn:1">123</item>  
```  
  
 <span data-ttu-id="f9fca-895">您是否明確插入的項目能夠保留它來自文件已沒有命名空間，則您必須手動加入 xmlns =""宣告，並且插入產生的字串：</span><span class="sxs-lookup"><span data-stu-id="f9fca-895">If you explicitly want the inserted item to preserve the fact that it came from a document that had no namespace then you need to manually add an xmlns= "" declaration and insert the resulting string:</span></span>  
  
```xml  
<item xmlns="">123</item>  
```  
  
 <span data-ttu-id="f9fca-896">所有這如下所示的結果：</span><span class="sxs-lookup"><span data-stu-id="f9fca-896">The net effect of all this is as follows:</span></span>  
  
1.  <span data-ttu-id="f9fca-897">剪下和貼上`InnerXml`之間的文件，請勿使用命名空間清楚且簡單，而不會建立"xmlns"備援性在字串中。</span><span class="sxs-lookup"><span data-stu-id="f9fca-897">Cutting and pasting `InnerXml` among documents that do not use namespaces is clean and simple and does not create "xmlns" redundancy in your strings.</span></span>  
  
2.  <span data-ttu-id="f9fca-898">`InnerXml` 也可以用來剪下並貼上之間有一個以上的命名空間 （亦即 XSL 樣式表） 的文件。</span><span class="sxs-lookup"><span data-stu-id="f9fca-898">`InnerXml` can also be used to cut and paste between documents which have more than one namespace (that is XSL stylesheets).</span></span>  
  
3.  <span data-ttu-id="f9fca-899">xmlns:xsl 宣告自動出現在您的字串，而且節點階層中消失。</span><span class="sxs-lookup"><span data-stu-id="f9fca-899">xmlns:xsl declarations automatically appear in your strings and disappear in your node hierarchies.</span></span>  
  
4.  <span data-ttu-id="f9fca-900">在您所移動的情況下`InnerXml`從沒有預設的命名空間的文件沒有預設命名空間的文件中，新的節點會收取新的預設命名空間。</span><span class="sxs-lookup"><span data-stu-id="f9fca-900">In the case where you are moving `InnerXml` from a document that has no default namespace to a document that does have a default namespace, the new nodes will pick up the new default namespace.</span></span>  
  
 <span data-ttu-id="f9fca-901">如果`InnerXml`設定文字中包含目前未定義文件中的實體參考，結果樹狀結構會包含空白的 EntityReference 節點。</span><span class="sxs-lookup"><span data-stu-id="f9fca-901">If `InnerXml` is set with text containing entity references that are not currently defined in the document, the resulting tree will contain empty EntityReference nodes.</span></span>  
  
 <span data-ttu-id="f9fca-902">這個屬性是文件物件模型的 Microsoft 擴充功能。</span><span class="sxs-lookup"><span data-stu-id="f9fca-902">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="f9fca-903">未正確設定這個屬性之語式時所指定的 XML。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-903">The XML specified when setting this property is not well-formed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public override bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlDocument.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Xml.XmlDocument.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9fca-904">取得值，指示目前節點是否為唯讀。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-904">Gets a value indicating whether the current node is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9fca-905">如果目前節點為唯讀，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-905">
              <see langword="true" /> if the current node is read-only; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="f9fca-906">
            <see langword="XmlDocument" /> 節點永遠傳回 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-906">
              <see langword="XmlDocument" /> nodes always return <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9fca-907">無法變更其屬性、 屬性或子系是唯讀的節點。</span><span class="sxs-lookup"><span data-stu-id="f9fca-907">A read-only node is one whose properties, attributes, or children cannot be changed.</span></span> <span data-ttu-id="f9fca-908">您可以從樹狀目錄移除唯讀節點，然後插入該子其他地方。</span><span class="sxs-lookup"><span data-stu-id="f9fca-908">You can remove a read-only node from the tree and insert it somewhere else.</span></span>  
  
 <span data-ttu-id="f9fca-909">這個屬性是文件物件模型的 Microsoft 擴充功能。</span><span class="sxs-lookup"><span data-stu-id="f9fca-909">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9fca-910">下列範例將示範如何使用 `IsReadOnly` 屬性。</span><span class="sxs-lookup"><span data-stu-id="f9fca-910">The following example shows how to use the `IsReadOnly` property.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.IsReadOnly Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.IsReadOnly Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.IsReadOnly Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.IsReadOnly Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.IsReadOnly Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.IsReadOnly Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f9fca-911">從 <see cref="T:System.IO.Stream" />、URL、<see cref="T:System.IO.TextReader" /> 或 <see cref="T:System.Xml.XmlReader" /> 載入指定的 XML 資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-911">Loads the specified XML data from a <see cref="T:System.IO.Stream" />, a URL, a <see cref="T:System.IO.TextReader" />, or an <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public virtual void Load (System.IO.Stream inStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Load(class System.IO.Stream inStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.Load(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Load (inStream As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Load(System::IO::Stream ^ inStream);" />
      <MemberSignature Language="F#" Value="abstract member Load : System.IO.Stream -&gt; unit&#xA;override this.Load : System.IO.Stream -&gt; unit" Usage="xmlDocument.Load inStream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="inStream">
          <span data-ttu-id="f9fca-912">包含要載入之 XML 文件的資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-912">The stream containing the XML document to load.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9fca-913">從指定的資料流載入 XML 文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-913">Loads the XML document from the specified stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="f9fca-914">`Load`方法一律會保留顯著泛空白字元。</span><span class="sxs-lookup"><span data-stu-id="f9fca-914">The `Load` method always preserves significant white space.</span></span> <span data-ttu-id="f9fca-915"><xref:System.Xml.XmlDocument.PreserveWhitespace%2A>屬性會決定是否要保留不顯著泛空白字元的項目內容中的空白字元。</span><span class="sxs-lookup"><span data-stu-id="f9fca-915">The <xref:System.Xml.XmlDocument.PreserveWhitespace%2A> property determines whether or not insignificant white space, that is white space in element content, is preserved.</span></span> <span data-ttu-id="f9fca-916">預設值是`false`; 不會保留項目內容中的空白字元。</span><span class="sxs-lookup"><span data-stu-id="f9fca-916">The default is `false`; white space in element content is not preserved.</span></span>  
  
 <span data-ttu-id="f9fca-917">如果您想進行驗證，您可以建立對其進行驗證<xref:System.Xml.XmlReader>所使用的執行個體<xref:System.Xml.XmlReaderSettings>類別和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f9fca-917">If you want validation to occur, you can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="f9fca-918">如需詳細資訊，請參閱 <xref:System.Xml.XmlReader> 參考頁面的＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="f9fca-918">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="f9fca-919">這個方法是 Microsoft 擴充功能的文件物件模型 (DOM)。</span><span class="sxs-lookup"><span data-stu-id="f9fca-919">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 <span data-ttu-id="f9fca-920">這個方法會自動偵測輸入 （例如，utf-8、 ANSI、 等等） 的 XML 字串的格式。</span><span class="sxs-lookup"><span data-stu-id="f9fca-920">This method automatically detects the string format of the input XML (for example, UTF-8, ANSI, and so on).</span></span> <span data-ttu-id="f9fca-921">如果您的應用程式必須知道哪一種編碼會用來讀取資料流，請考慮使用<xref:System.Xml.XmlTextReader>來讀取資料流，物件，然後使用<xref:System.Xml.XmlTextReader.Encoding%2A?displayProperty=nameWithType>屬性來判斷的編碼方式。</span><span class="sxs-lookup"><span data-stu-id="f9fca-921">If your application needs to know which encoding is used to read the stream, consider using an <xref:System.Xml.XmlTextReader> object to read the stream, and then use the <xref:System.Xml.XmlTextReader.Encoding%2A?displayProperty=nameWithType> property to determine the encoding.</span></span> <span data-ttu-id="f9fca-922">如果您需要使用<xref:System.Xml.XmlDocument>物件來處理的 XML，您可以使用<xref:System.Xml.XmlTextReader>建立一個物件。</span><span class="sxs-lookup"><span data-stu-id="f9fca-922">If you need to use a <xref:System.Xml.XmlDocument> object to work with XML, you can use the <xref:System.Xml.XmlTextReader> object to create one.</span></span> <span data-ttu-id="f9fca-923">如需詳細資訊，請參閱[使用 XPathDocument 及 XmlDocument 讀取 XML 資料](~/docs/standard/data/xml/reading-xml-data-using-xpathdocument-and-xmldocument.md)。</span><span class="sxs-lookup"><span data-stu-id="f9fca-923">For more information, see [Reading XML Data using XPathDocument and XmlDocument](~/docs/standard/data/xml/reading-xml-data-using-xpathdocument-and-xmldocument.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="f9fca-924">XML 中發生載入或剖析錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-924">There is a load or parse error in the XML.</span>
          </span>
          <span data-ttu-id="f9fca-925">在這種情況下，就會引發 <see cref="T:System.IO.FileNotFoundException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-925">In this case, a <see cref="T:System.IO.FileNotFoundException" /> is raised.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.Schema.ValidationEventArgs" />
        <altmember cref="T:System.Xml.Schema.XmlSeverityType" />
        <altmember cref="P:System.Xml.XmlValidatingReader.Schemas" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public virtual void Load (System.IO.TextReader txtReader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Load(class System.IO.TextReader txtReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.Load(System.IO.TextReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Load (txtReader As TextReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Load(System::IO::TextReader ^ txtReader);" />
      <MemberSignature Language="F#" Value="abstract member Load : System.IO.TextReader -&gt; unit&#xA;override this.Load : System.IO.TextReader -&gt; unit" Usage="xmlDocument.Load txtReader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="txtReader" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <param name="txtReader">
          <span data-ttu-id="f9fca-926">用於將 XML 資料送入文件中的 <see langword="TextReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-926">The <see langword="TextReader" /> used to feed the XML data into the document.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9fca-927">從指定的 <see cref="T:System.IO.TextReader" /> 載入 XML 文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-927">Loads the XML document from the specified <see cref="T:System.IO.TextReader" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="f9fca-928">`Load`方法一律會保留顯著泛空白字元。</span><span class="sxs-lookup"><span data-stu-id="f9fca-928">The `Load` method always preserves significant white space.</span></span> <span data-ttu-id="f9fca-929"><xref:System.Xml.XmlDocument.PreserveWhitespace%2A>屬性會決定是否要保留不顯著泛空白字元的項目內容中的空白字元。</span><span class="sxs-lookup"><span data-stu-id="f9fca-929">The <xref:System.Xml.XmlDocument.PreserveWhitespace%2A> property determines whether or not insignificant white space, that is white space in element content, is preserved.</span></span> <span data-ttu-id="f9fca-930">預設值是`false`; 不會保留項目內容中的空白字元。</span><span class="sxs-lookup"><span data-stu-id="f9fca-930">The default is `false`; white space in element content is not preserved.</span></span>  
  
 <span data-ttu-id="f9fca-931">如果您想進行驗證，您可以建立對其進行驗證<xref:System.Xml.XmlReader>所使用的執行個體<xref:System.Xml.XmlReaderSettings>類別和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f9fca-931">If you want validation to occur, you can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="f9fca-932">如需詳細資訊，請參閱 <xref:System.Xml.XmlReader> 參考頁面的＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="f9fca-932">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="f9fca-933">這個方法是 Microsoft 擴充功能的文件物件模型 (DOM)。</span><span class="sxs-lookup"><span data-stu-id="f9fca-933">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9fca-934">下列範例會使用<xref:System.IO.StringReader>類別載入的 XML 資料轉換成字串`XmlDocument`物件。</span><span class="sxs-lookup"><span data-stu-id="f9fca-934">The following example uses the <xref:System.IO.StringReader> class to load a string of XML data into the `XmlDocument` object.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.CreateElement2 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.CreateElement2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.CreateElement2 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.CreateElement2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.CreateElement2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.CreateElement2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="f9fca-935">XML 中發生載入或剖析錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-935">There is a load or parse error in the XML.</span>
          </span>
          <span data-ttu-id="f9fca-936">在這種情況下，文件會保持空白。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-936">In this case, the document remains empty.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.StreamReader" />
        <altmember cref="T:System.Xml.Schema.ValidationEventArgs" />
        <altmember cref="T:System.Xml.Schema.XmlSeverityType" />
        <altmember cref="P:System.Xml.XmlValidatingReader.Schemas" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public virtual void Load (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Load(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.Load(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Load (filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Load(System::String ^ filename);" />
      <MemberSignature Language="F#" Value="abstract member Load : string -&gt; unit&#xA;override this.Load : string -&gt; unit" Usage="xmlDocument.Load filename" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename">
          <span data-ttu-id="f9fca-937">包含要載入之 XML 文件的檔案的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-937">URL for the file containing the XML document to load.</span>
          </span>
          <span data-ttu-id="f9fca-938">這個 URL 可以是本機檔案，也可以是 HTTP URL (網址)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-938">The URL can be either a local file or an HTTP URL (a Web address).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9fca-939">從指定的 URL 載入 XML 文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-939">Loads the XML document from the specified URL.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="f9fca-940">`Load`方法一律會保留顯著泛空白字元。</span><span class="sxs-lookup"><span data-stu-id="f9fca-940">The `Load` method always preserves significant white space.</span></span> <span data-ttu-id="f9fca-941"><xref:System.Xml.XmlDocument.PreserveWhitespace%2A>屬性會決定是否要保留不顯著泛空白字元的項目內容中的空白字元。</span><span class="sxs-lookup"><span data-stu-id="f9fca-941">The <xref:System.Xml.XmlDocument.PreserveWhitespace%2A> property determines whether or not insignificant white space, that is white space in element content, is preserved.</span></span> <span data-ttu-id="f9fca-942">預設值是`false`; 不會保留項目內容中的空白字元。</span><span class="sxs-lookup"><span data-stu-id="f9fca-942">The default is `false`; white space in element content is not preserved.</span></span>  
  
 <span data-ttu-id="f9fca-943">如果您想進行驗證，您可以建立對其進行驗證<xref:System.Xml.XmlReader>所使用的執行個體<xref:System.Xml.XmlReaderSettings>類別和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f9fca-943">If you want validation to occur, you can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="f9fca-944">如需詳細資訊，請參閱 <xref:System.Xml.XmlReader> 參考頁面的＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="f9fca-944">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="f9fca-945">這個方法是 Microsoft 擴充功能的文件物件模型 (DOM)。</span><span class="sxs-lookup"><span data-stu-id="f9fca-945">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="f9fca-946">XML 中發生載入或剖析錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-946">There is a load or parse error in the XML.</span>
          </span>
          <span data-ttu-id="f9fca-947">在這種情況下，就會引發 <see cref="T:System.IO.FileNotFoundException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-947">In this case, a <see cref="T:System.IO.FileNotFoundException" /> is raised.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9fca-948">
            <paramref name="filename" /> 為零長度字串，只包含空格，或包含一或多個如 <see cref="F:System.IO.Path.InvalidPathChars" /> 所定義的無效字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-948">
              <paramref name="filename" /> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9fca-949">
            <paramref name="filename" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-949">
              <paramref name="filename" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="f9fca-950">指定的路徑、檔案名稱，或兩者都超出系統定義的長度上限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-950">The specified path, file name, or both exceed the system-defined maximum length.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="f9fca-951">指定的路徑無效 (例如，它位於未對應的磁碟機上)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-951">The specified path is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="f9fca-952">開啟檔案時發生 I/O 錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-952">An I/O error occurred while opening the file.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="f9fca-953">
            <paramref name="filename" /> 指定了唯讀的檔案。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-953">
              <paramref name="filename" /> specified a file that is read-only.</span>
          </span>
          <span data-ttu-id="f9fca-954">-或-  這個作業在目前平台不受支援。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-954">-or-  This operation is not supported on the current platform.</span>
          </span>
          <span data-ttu-id="f9fca-955">-或-  <paramref name="filename" /> 指定了目錄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-955">-or-  <paramref name="filename" /> specified a directory.</span>
          </span>
          <span data-ttu-id="f9fca-956">-或-  呼叫端沒有必要的權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-956">-or-  The caller does not have the required permission.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="f9fca-957">找不到在 <paramref name="filename" /> 中指定的檔案。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-957">The file specified in <paramref name="filename" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f9fca-958">
            <paramref name="filename" /> 格式無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-958">
              <paramref name="filename" /> is in an invalid format.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="f9fca-959">呼叫端沒有必要的權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-959">The caller does not have the required permission.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.Schema.ValidationEventArgs" />
        <altmember cref="T:System.Xml.Schema.XmlSeverityType" />
        <altmember cref="P:System.Xml.XmlValidatingReader.Schemas" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public virtual void Load (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Load(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.Load(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Load (reader As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Load(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member Load : System.Xml.XmlReader -&gt; unit&#xA;override this.Load : System.Xml.XmlReader -&gt; unit" Usage="xmlDocument.Load reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="f9fca-960">用於將 XML 資料送入文件中的 <see langword="XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-960">The <see langword="XmlReader" /> used to feed the XML data into the document.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9fca-961">從指定的 <see cref="T:System.Xml.XmlReader" /> 載入 XML 文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-961">Loads the XML document from the specified <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="f9fca-962">`Load`方法一律會保留顯著泛空白字元。</span><span class="sxs-lookup"><span data-stu-id="f9fca-962">The `Load` method always preserves significant white space.</span></span> <span data-ttu-id="f9fca-963"><xref:System.Xml.XmlDocument.PreserveWhitespace%2A>屬性會決定是否要保留不顯著泛空白字元的項目內容中的空白字元。</span><span class="sxs-lookup"><span data-stu-id="f9fca-963">The <xref:System.Xml.XmlDocument.PreserveWhitespace%2A> property determines whether or not insignificant white space, that is white space in element content, is preserved.</span></span> <span data-ttu-id="f9fca-964">預設值是`false`; 不會保留項目內容中的空白字元。</span><span class="sxs-lookup"><span data-stu-id="f9fca-964">The default is `false`; white space in element content is not preserved.</span></span>  
  
 <span data-ttu-id="f9fca-965">如果讀取器中的初始狀態 (<xref:System.Xml.XmlReader.ReadState%2A> = 為 ReadState.Initial)，`Load`取用讀取器的整個內容，並建置它所找到的 DOM。</span><span class="sxs-lookup"><span data-stu-id="f9fca-965">If the reader is in the initial state (<xref:System.Xml.XmlReader.ReadState%2A> =ReadState.Initial), `Load` consumes the entire contents of the reader and builds the DOM from what it finds.</span></span>  
  
 <span data-ttu-id="f9fca-966">如果讀取器已經位於某個節點的深度"n"，這個方法會載入該節點和所有後續的同層級直到關閉深度"n"的結束標記。</span><span class="sxs-lookup"><span data-stu-id="f9fca-966">If the reader is already positioned on some node at depth "n", this method loads that node and all subsequent siblings up to the end tag that closes depth "n".</span></span> <span data-ttu-id="f9fca-967">這有下列結果。</span><span class="sxs-lookup"><span data-stu-id="f9fca-967">This has the following results.</span></span>  
  
 <span data-ttu-id="f9fca-968">如果目前節點和其同層級看起來如下所示：</span><span class="sxs-lookup"><span data-stu-id="f9fca-968">If the current node and its siblings look like the following:</span></span>  
  
```xml  
<!--comment--><element1>one</element1><element2>two</element2>  
```  
  
 <span data-ttu-id="f9fca-969">`Load` 因為文件不能有兩個根層級元素，會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="f9fca-969">`Load` throws an exception because a document cannot have two root level elements.</span></span> <span data-ttu-id="f9fca-970">如果目前節點和其同層級看起來如下所示：</span><span class="sxs-lookup"><span data-stu-id="f9fca-970">If the current node and its siblings look like the following:</span></span>  
  
```xml  
<!--comment--><?process instruction?><!--comment--></endtag>  
```  
  
 <span data-ttu-id="f9fca-971">`Load` 成功，因為沒有任何根層級元素，但不完整的 DOM 樹狀目錄。</span><span class="sxs-lookup"><span data-stu-id="f9fca-971">`Load` succeeds, but you have an incomplete DOM tree because there is no root level element.</span></span> <span data-ttu-id="f9fca-972">儲存文件之前，必須將根層級元素，否則<xref:System.Xml.XmlDocument.Save%2A>將會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="f9fca-972">Before you save the document, you must add a root level element, otherwise <xref:System.Xml.XmlDocument.Save%2A> will throw an exception.</span></span>  
  
 <span data-ttu-id="f9fca-973">如果讀取器定位於分葉節點的文件，例如空白字元或屬性節點的根層級而言是無效的讀取器會繼續讀取，直到將其置於可用於在節點上。</span><span class="sxs-lookup"><span data-stu-id="f9fca-973">If the reader is positioned on a leaf node that is invalid for the root level of a document, for example a white space or attribute node, the reader continues to read until it is positioned on a node that can be used for the root.</span></span> <span data-ttu-id="f9fca-974">此時文件會開始載入。</span><span class="sxs-lookup"><span data-stu-id="f9fca-974">The document begins loading at this point.</span></span>  
  
 <span data-ttu-id="f9fca-975">如果您想進行驗證，您可以建立對其進行驗證<xref:System.Xml.XmlReader>所使用的執行個體<xref:System.Xml.XmlReaderSettings>類別和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f9fca-975">If you want validation to occur, you can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="f9fca-976">如需詳細資訊，請參閱 <xref:System.Xml.XmlReader> 參考頁面的＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="f9fca-976">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="f9fca-977">這個方法是 Microsoft 擴充功能的文件物件模型 (DOM)。</span><span class="sxs-lookup"><span data-stu-id="f9fca-977">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9fca-978">下列範例會載入的最後一個書籍節點`books.xml`插入 XML 文件中的檔案。</span><span class="sxs-lookup"><span data-stu-id="f9fca-978">The following example loads the last book node of the `books.xml` file into the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.Load2 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.Load2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.Load2 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.Load2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.Load2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.Load2 Example/VB/source.vb#1)]  
  
 <span data-ttu-id="f9fca-979">此範例會使用該檔案，`books.xml`作為輸入。</span><span class="sxs-lookup"><span data-stu-id="f9fca-979">The example uses the file, `books.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="f9fca-980">XML 中發生載入或剖析錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-980">There is a load or parse error in the XML.</span>
          </span>
          <span data-ttu-id="f9fca-981">在這種情況下，文件會保持空白。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-981">In this case, the document remains empty.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.Schema.ValidationEventArgs" />
        <altmember cref="T:System.Xml.Schema.XmlSeverityType" />
        <altmember cref="P:System.Xml.XmlValidatingReader.Schemas" />
      </Docs>
    </Member>
    <Member MemberName="LoadXml">
      <MemberSignature Language="C#" Value="public virtual void LoadXml (string xml);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadXml(string xml) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.LoadXml(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub LoadXml (xml As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void LoadXml(System::String ^ xml);" />
      <MemberSignature Language="F#" Value="abstract member LoadXml : string -&gt; unit&#xA;override this.LoadXml : string -&gt; unit" Usage="xmlDocument.LoadXml xml" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xml" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xml">
          <span data-ttu-id="f9fca-982">包含要載入之 XML 文件的字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-982">String containing the XML document to load.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9fca-983">從指定的字串載入 XML 文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-983">Loads the XML document from the specified string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9fca-984">根據預設`LoadXml`方法不會保留泛空白字元或顯著泛空白字元。</span><span class="sxs-lookup"><span data-stu-id="f9fca-984">By default the `LoadXml` method does not preserve white space or significant white space.</span></span>  
  
 <span data-ttu-id="f9fca-985">這個方法會剖析 Dtd，但不會執行 DTD 或結構描述驗證。</span><span class="sxs-lookup"><span data-stu-id="f9fca-985">This method parses DTDs, but does not do DTD or Schema validation.</span></span> <span data-ttu-id="f9fca-986">如果您想進行驗證，您可以建立對其進行驗證<xref:System.Xml.XmlReader>所使用的執行個體<xref:System.Xml.XmlReaderSettings>類別和<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f9fca-986">If you want validation to occur, you can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="f9fca-987">如需詳細資訊，請參閱 <xref:System.Xml.XmlReader> 參考頁面的＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="f9fca-987">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="f9fca-988">如果您想要從載入<xref:System.IO.Stream>， <xref:System.String>， <xref:System.IO.TextReader>，或<xref:System.Xml.XmlReader>，而不是此方法使用 Load 方法。</span><span class="sxs-lookup"><span data-stu-id="f9fca-988">If you want to load from a <xref:System.IO.Stream>, <xref:System.String>, <xref:System.IO.TextReader>, or <xref:System.Xml.XmlReader>, use the Load method instead of this method.</span></span>  
  
 <span data-ttu-id="f9fca-989">這個方法是 Microsoft 擴充功能的文件物件模型 (DOM)。</span><span class="sxs-lookup"><span data-stu-id="f9fca-989">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9fca-990">下列範例會載入到 XML`XmlDocument`物件，並將它儲存至檔案。</span><span class="sxs-lookup"><span data-stu-id="f9fca-990">The following example loads XML into an `XmlDocument` object and saves it out to a file.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.LoadXml Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.LoadXml Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.LoadXml Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.LoadXml Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.LoadXml Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.LoadXml Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="f9fca-991">XML 中發生載入或剖析錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-991">There is a load or parse error in the XML.</span>
          </span>
          <span data-ttu-id="f9fca-992">在這種情況下，文件會保持空白。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-992">In this case, the document remains empty.</span>
          </span>
        </exception>
        <altmember cref="P:System.Xml.XmlDocument.PreserveWhitespace" />
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlDocument.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ LocalName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="System.Xml.XmlDocument.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9fca-993">取得節點的區域名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-993">Gets the local name of the node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9fca-994">對於 <see langword="XmlDocument" /> 節點，區域名稱為 #document。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-994">For <see langword="XmlDocument" /> nodes, the local name is #document.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9fca-995">傳回的本機名稱，取決於<xref:System.Xml.XmlDocument.NodeType%2A>的節點。</span><span class="sxs-lookup"><span data-stu-id="f9fca-995">The local name returned depends on the <xref:System.Xml.XmlDocument.NodeType%2A> of the node.</span></span> <span data-ttu-id="f9fca-996">若要查看描述傳回的每個節點類型的本機名稱的資料表，請參閱<xref:System.Xml.XmlNode.LocalName%2A>屬性<xref:System.Xml.XmlNode>類別。</span><span class="sxs-lookup"><span data-stu-id="f9fca-996">To see a table describing the local name returned for each of the node types, see the <xref:System.Xml.XmlNode.LocalName%2A> property in the <xref:System.Xml.XmlNode> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlDocument.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Xml.XmlDocument.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9fca-997">取得節點的限定名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-997">Gets the qualified name of the node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9fca-998">對於  <see langword="XmlDocument" /> 節點，名稱為 #document。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-998">For <see langword="XmlDocument" /> nodes, the name is #document.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9fca-999">傳回的名稱取決於<xref:System.Xml.XmlDocument.NodeType%2A>的節點。</span><span class="sxs-lookup"><span data-stu-id="f9fca-999">The name returned depends on the <xref:System.Xml.XmlDocument.NodeType%2A> of the node.</span></span> <span data-ttu-id="f9fca-1000">若要查看資料表，描述傳回的每個節點類型的名稱，請參閱<xref:System.Xml.XmlNode.Name%2A>屬性<xref:System.Xml.XmlNode>類別。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1000">To see a table describing the name returned for each of the node types, see the <xref:System.Xml.XmlNode.Name%2A> property in the <xref:System.Xml.XmlNode> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NameTable">
      <MemberSignature Language="C#" Value="public System.Xml.XmlNameTable NameTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNameTable NameTable" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlDocument.NameTable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NameTable As XmlNameTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlNameTable ^ NameTable { System::Xml::XmlNameTable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NameTable : System.Xml.XmlNameTable" Usage="System.Xml.XmlDocument.NameTable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNameTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9fca-1001">取得與這個實作關聯的 <see cref="T:System.Xml.XmlNameTable" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-1001">Gets the <see cref="T:System.Xml.XmlNameTable" /> associated with this implementation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9fca-1002">
            <see langword="XmlNameTable" />，可讓您取得文件中字串之擷取版本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-1002">An <see langword="XmlNameTable" /> enabling you to get the atomized version of a string within the document.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9fca-1003">每個`XmlDocument`物件具有<xref:System.Xml.NameTable>物件。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1003">Each `XmlDocument` object has a <xref:System.Xml.NameTable> object.</span></span> <span data-ttu-id="f9fca-1004">元素和屬性名稱會儲存在`NameTable`原子化字串的形式。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1004">Element and attribute names are stored in the `NameTable` as atomized strings.</span></span> <span data-ttu-id="f9fca-1005">這表示，即使參考文件中的名稱多次它會儲存一次在`NameTable`。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1005">This means that even if a name is referenced in the document multiple times it is stored only once in the `NameTable`.</span></span> <span data-ttu-id="f9fca-1006">例如，如果文件有多個名稱為 「 客戶 」 項目`NameTable`傳回相同的物件，每當它接收的要求，該名稱。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1006">For example, if the document had multiple elements with the name "Customer", `NameTable` returns the same object whenever it receives a request for that name.</span></span> <span data-ttu-id="f9fca-1007">如此一來，使用者可以撰寫程式碼使用這些字串，而不是更耗費資源的字串比較的物件比較。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1007">As a result, users can write code using object comparisons on these strings rather than the more expensive string comparisons.</span></span>  
  
 <span data-ttu-id="f9fca-1008">如需已儘量縮減之字串的詳細資訊，請參閱 <xref:System.Xml.XmlNameTable>。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1008">For more information on atomized strings, see <xref:System.Xml.XmlNameTable>.</span></span>  
  
 <span data-ttu-id="f9fca-1009">這個方法是 Microsoft 擴充功能的文件物件模型 (DOM)。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1009">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlNameTable" />
      </Docs>
    </Member>
    <Member MemberName="NodeChanged">
      <MemberSignature Language="C#" Value="public event System.Xml.XmlNodeChangedEventHandler NodeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Xml.XmlNodeChangedEventHandler NodeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Xml.XmlDocument.NodeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NodeChanged As XmlNodeChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Xml::XmlNodeChangedEventHandler ^ NodeChanged;" />
      <MemberSignature Language="F#" Value="member this.NodeChanged : System.Xml.XmlNodeChangedEventHandler " Usage="member this.NodeChanged : System.Xml.XmlNodeChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9fca-1010">發生於屬於這份文件之節點的 <see cref="P:System.Xml.XmlNode.Value" /> 變更時。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-1010">Occurs when the <see cref="P:System.Xml.XmlNode.Value" /> of a node belonging to this document has been changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9fca-1011">此事件僅適用於具有值的節點。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1011">This event only applies to nodes that have a value.</span></span>  
  
 <span data-ttu-id="f9fca-1012">在此事件會包含本文件中，不論是否已插入到文件，建立的所有節點。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1012">All nodes created by this document, whether or not they have been inserted into the document, are included in this event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlNodeChangedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="NodeChanging">
      <MemberSignature Language="C#" Value="public event System.Xml.XmlNodeChangedEventHandler NodeChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Xml.XmlNodeChangedEventHandler NodeChanging" />
      <MemberSignature Language="DocId" Value="E:System.Xml.XmlDocument.NodeChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NodeChanging As XmlNodeChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Xml::XmlNodeChangedEventHandler ^ NodeChanging;" />
      <MemberSignature Language="F#" Value="member this.NodeChanging : System.Xml.XmlNodeChangedEventHandler " Usage="member this.NodeChanging : System.Xml.XmlNodeChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9fca-1013">發生於屬於這份文件之節點的 <see cref="P:System.Xml.XmlNode.Value" /> 即將變更時。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-1013">Occurs when the <see cref="P:System.Xml.XmlNode.Value" /> of a node belonging to this document is about to be changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9fca-1014">此事件可讓使用者進行額外的檢查，而且必要時，會擲回例外狀況，無法停止作業。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1014">This event allows the user to do extra checking and, if necessary, throw an exception to stop the operation.</span></span> <span data-ttu-id="f9fca-1015">如果擲回例外狀況`XmlDocument`回到其原始狀態。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1015">If an exception is thrown the `XmlDocument` returns to its original state.</span></span> <span data-ttu-id="f9fca-1016">此事件僅適用於具有值的節點。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1016">This event only applies to nodes that have a value.</span></span>  
  
 <span data-ttu-id="f9fca-1017">在此事件會包含本文件中，不論是否已插入到文件，建立的所有節點。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1017">All nodes created by this document, whether or not they have been inserted into the document, are included in this event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlNodeChangedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="NodeInserted">
      <MemberSignature Language="C#" Value="public event System.Xml.XmlNodeChangedEventHandler NodeInserted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Xml.XmlNodeChangedEventHandler NodeInserted" />
      <MemberSignature Language="DocId" Value="E:System.Xml.XmlDocument.NodeInserted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NodeInserted As XmlNodeChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Xml::XmlNodeChangedEventHandler ^ NodeInserted;" />
      <MemberSignature Language="F#" Value="member this.NodeInserted : System.Xml.XmlNodeChangedEventHandler " Usage="member this.NodeInserted : System.Xml.XmlNodeChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9fca-1018">發生於屬於這份文件的節點插入另一個節點時。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-1018">Occurs when a node belonging to this document has been inserted into another node.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9fca-1019">在此事件會包含本文件中，不論是否已插入到文件，建立的所有節點。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1019">All nodes created by this document, whether or not they have been inserted into the document, are included in this event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlNodeChangedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="NodeInserting">
      <MemberSignature Language="C#" Value="public event System.Xml.XmlNodeChangedEventHandler NodeInserting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Xml.XmlNodeChangedEventHandler NodeInserting" />
      <MemberSignature Language="DocId" Value="E:System.Xml.XmlDocument.NodeInserting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NodeInserting As XmlNodeChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Xml::XmlNodeChangedEventHandler ^ NodeInserting;" />
      <MemberSignature Language="F#" Value="member this.NodeInserting : System.Xml.XmlNodeChangedEventHandler " Usage="member this.NodeInserting : System.Xml.XmlNodeChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9fca-1020">發生於屬於這份文件的節點將要插入另一個節點時。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-1020">Occurs when a node belonging to this document is about to be inserted into another node.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9fca-1021">此事件可讓使用者進行額外的檢查，而且必要時，會擲回例外狀況，無法停止作業。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1021">This event allows the user to do extra checking and, if necessary, throw an exception to stop the operation.</span></span> <span data-ttu-id="f9fca-1022">如果擲回例外狀況`XmlDocument`回到其原始狀態。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1022">If an exception is thrown the `XmlDocument` returns to its original state.</span></span>  
  
 <span data-ttu-id="f9fca-1023">在此事件會包含本文件中，不論是否已插入到文件，建立的所有節點。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1023">All nodes created by this document, whether or not they have been inserted into the document, are included in this event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlNodeChangedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="NodeRemoved">
      <MemberSignature Language="C#" Value="public event System.Xml.XmlNodeChangedEventHandler NodeRemoved;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Xml.XmlNodeChangedEventHandler NodeRemoved" />
      <MemberSignature Language="DocId" Value="E:System.Xml.XmlDocument.NodeRemoved" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NodeRemoved As XmlNodeChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Xml::XmlNodeChangedEventHandler ^ NodeRemoved;" />
      <MemberSignature Language="F#" Value="member this.NodeRemoved : System.Xml.XmlNodeChangedEventHandler " Usage="member this.NodeRemoved : System.Xml.XmlNodeChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9fca-1024">發生於屬於這份文件的節點從其父代 (Parent) 移除時。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-1024">Occurs when a node belonging to this document has been removed from its parent.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9fca-1025">在此事件會包含本文件中，不論是否已插入到文件，建立的所有節點。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1025">All nodes created by this document, whether or not they have been inserted into the document, are included in this event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlNodeChangedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="NodeRemoving">
      <MemberSignature Language="C#" Value="public event System.Xml.XmlNodeChangedEventHandler NodeRemoving;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Xml.XmlNodeChangedEventHandler NodeRemoving" />
      <MemberSignature Language="DocId" Value="E:System.Xml.XmlDocument.NodeRemoving" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NodeRemoving As XmlNodeChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Xml::XmlNodeChangedEventHandler ^ NodeRemoving;" />
      <MemberSignature Language="F#" Value="member this.NodeRemoving : System.Xml.XmlNodeChangedEventHandler " Usage="member this.NodeRemoving : System.Xml.XmlNodeChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9fca-1026">發生於屬於這份文件的節點即將從文件中移除時。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-1026">Occurs when a node belonging to this document is about to be removed from the document.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9fca-1027">此事件可讓使用者進行額外的檢查，而且必要時，會擲回例外狀況，無法停止作業。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1027">This event allows the user to do extra checking and, if necessary, throw an exception to stop the operation.</span></span> <span data-ttu-id="f9fca-1028">如果擲回例外狀況`XmlDocument`回到其原始狀態。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1028">If an exception is thrown the `XmlDocument` returns to its original state.</span></span>  
  
 <span data-ttu-id="f9fca-1029">在此事件會包含本文件中，不論是否已插入到文件，建立的所有節點。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1029">All nodes created by this document, whether or not they have been inserted into the document, are included in this event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlNodeChangedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNodeType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlNodeType NodeType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlDocument.NodeType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NodeType As XmlNodeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNodeType NodeType { System::Xml::XmlNodeType get(); };" />
      <MemberSignature Language="F#" Value="member this.NodeType : System.Xml.XmlNodeType" Usage="System.Xml.XmlDocument.NodeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9fca-1030">取得目前節點的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-1030">Gets the type of the current node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9fca-1031">節點類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-1031">The node type.</span>
          </span>
          <span data-ttu-id="f9fca-1032">對於 <see langword="XmlDocument" /> 節點，此值為 XmlNodeType.Document。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-1032">For <see langword="XmlDocument" /> nodes, this value is XmlNodeType.Document.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Xml.XmlNodeType" />
      </Docs>
    </Member>
    <Member MemberName="OwnerDocument">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlDocument OwnerDocument { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlDocument OwnerDocument" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlDocument.OwnerDocument" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property OwnerDocument As XmlDocument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlDocument ^ OwnerDocument { System::Xml::XmlDocument ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OwnerDocument : System.Xml.XmlDocument" Usage="System.Xml.XmlDocument.OwnerDocument" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDocument</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9fca-1033">取得目前節點所屬的 <see cref="T:System.Xml.XmlDocument" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-1033">Gets the <see cref="T:System.Xml.XmlDocument" /> to which the current node belongs.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9fca-1034">對於 <see langword="XmlDocument" /> 節點 (<see cref="P:System.Xml.XmlDocument.NodeType" /> 等於 XmlNodeType.Document)，此屬性一律會傳回 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-1034">For <see langword="XmlDocument" /> nodes (<see cref="P:System.Xml.XmlDocument.NodeType" /> equals XmlNodeType.Document), this property always returns <see langword="null" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentNode">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNode ParentNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNode ParentNode" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlDocument.ParentNode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ParentNode As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNode ^ ParentNode { System::Xml::XmlNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ParentNode : System.Xml.XmlNode" Usage="System.Xml.XmlDocument.ParentNode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9fca-1035">取得這個節點的父節點 (針對可以具有父代的節點而言)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-1035">Gets the parent node of this node (for nodes that can have parents).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9fca-1036">一律傳回 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-1036">Always returns <see langword="null" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreserveWhitespace">
      <MemberSignature Language="C#" Value="public bool PreserveWhitespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PreserveWhitespace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlDocument.PreserveWhitespace" />
      <MemberSignature Language="VB.NET" Value="Public Property PreserveWhitespace As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PreserveWhitespace { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PreserveWhitespace : bool with get, set" Usage="System.Xml.XmlDocument.PreserveWhitespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9fca-1037">取得或設定值，指出是否要保留項目內容中的空白字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-1037">Gets or sets a value indicating whether to preserve white space in element content.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9fca-1038">若要保留空白字元，則為 <see langword="true" />；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-1038">
              <see langword="true" /> to preserve white space; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="f9fca-1039">預設值為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-1039">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9fca-1040">這個屬性決定如何在載入時處理泛空白字元，並儲存程序。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1040">This property determines how white space is handled during the load and save process.</span></span>  
  
 <span data-ttu-id="f9fca-1041">如果`PreserveWhitespace`是`true`之前<xref:System.Xml.XmlDocument.Load%2A>或<xref:System.Xml.XmlDocument.LoadXml%2A>是呼叫，泛空白字元節點會保留; 否則如果這個屬性是`false`顯著泛空白字元會保留，不是空白字元。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1041">If `PreserveWhitespace` is `true` before <xref:System.Xml.XmlDocument.Load%2A> or <xref:System.Xml.XmlDocument.LoadXml%2A> is called, white space nodes are preserved; otherwise, if this property is `false`, significant white space is preserved, white space is not.</span></span>  
  
 <span data-ttu-id="f9fca-1042">如果`PreserveWhitespace`是`true`之前<xref:System.Xml.XmlDocument.Save%2A>是稱為，文件中的泛空白字元是保留在輸出中; 否則如果這個屬性是`false`，`XmlDocument`自動縮排輸出。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1042">If `PreserveWhitespace` is `true` before <xref:System.Xml.XmlDocument.Save%2A> is called, white space in the document is preserved in the output; otherwise, if this property is `false`, `XmlDocument` auto-indents the output.</span></span>  
  
 <span data-ttu-id="f9fca-1043">這個方法是 Microsoft 擴充功能的文件物件模型 (DOM)。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1043">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9fca-1044">下列範例示範如何刪除空白檔案。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1044">The following example shows how to strip white space from a file.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.PreserveWhitespace Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.PreserveWhitespace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.PreserveWhitespace Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.PreserveWhitespace Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.PreserveWhitespace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.PreserveWhitespace Example/VB/source.vb#1)]  
  
 <span data-ttu-id="f9fca-1045">此範例會使用檔案`book.xml`做為輸入。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1045">The example uses the file `book.xml` as input.</span></span>  
  
 [!code-xml[Classic WebData XmlDocument.PreserveWhitespace Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlDocument.PreserveWhitespace Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadNode">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode ReadNode (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode ReadNode(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.ReadNode(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadNode (reader As XmlReader) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ ReadNode(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member ReadNode : System.Xml.XmlReader -&gt; System.Xml.XmlNode&#xA;override this.ReadNode : System.Xml.XmlReader -&gt; System.Xml.XmlNode" Usage="xmlDocument.ReadNode reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="f9fca-1046">XML 來源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-1046">The XML source</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9fca-1047">根據 <see cref="T:System.Xml.XmlReader" /> 中的資訊建立一個 <see cref="T:System.Xml.XmlNode" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-1047">Creates an <see cref="T:System.Xml.XmlNode" /> object based on the information in the <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
          <span data-ttu-id="f9fca-1048">讀取器必須定位在節點或屬性上。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-1048">The reader must be positioned on a node or attribute.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9fca-1049">新的 <see langword="XmlNode" />；如果沒有其他節點，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-1049">The new <see langword="XmlNode" /> or <see langword="null" /> if no more nodes exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9fca-1050">讀取一`XmlNode`從指定的讀取器，並將讀取器置於下一個節點上。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1050">Reads one `XmlNode` from the given reader and positions the reader on the next node.</span></span> <span data-ttu-id="f9fca-1051">這個方法建立的型別`XmlNode`比對<xref:System.Xml.XmlNode.NodeType%2A>讀取器目前所在。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1051">This method creates the type of `XmlNode` matching the <xref:System.Xml.XmlNode.NodeType%2A> on which the reader is currently positioned.</span></span> <span data-ttu-id="f9fca-1052">(如果讀取器中的初始狀態，`ReadNode`使讀取器前進至第一個節點，然後在該節點上運作。)</span><span class="sxs-lookup"><span data-stu-id="f9fca-1052">(If the reader is in the initial state, `ReadNode` advances the reader to the first node and then operates on that node.)</span></span>  
  
 <span data-ttu-id="f9fca-1053">如果讀取器位於項目，開頭`ReadNode`讀取所有屬性和任何子節點，以及目前節點的結束標記。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1053">If the reader is positioned on the start of an element, `ReadNode` reads all the attributes and any child nodes, up to and including the end tag of the current node.</span></span> <span data-ttu-id="f9fca-1054">`XmlNode`傳回包含子樹狀結構表示所有項目讀取。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1054">The `XmlNode` returned contains the sub-tree representing everything read.</span></span> <span data-ttu-id="f9fca-1055">讀取器定位於結束標記的後面。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1055">The reader is positioned immediately after the end tag.</span></span>  
  
 <span data-ttu-id="f9fca-1056">`ReadNode` 也可以讀取屬性，但在此情況下它並不使讀取器前進至下一個屬性。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1056">`ReadNode` can also read attributes, but in this case it does not advance the reader to the next attribute.</span></span> <span data-ttu-id="f9fca-1057">這可讓您撰寫下列 C# 程式碼：</span><span class="sxs-lookup"><span data-stu-id="f9fca-1057">This allows you to write the following C# code:</span></span>  
  
```csharp  
XmlDocument doc = new XmlDocument();  
while (reader.MoveToNextAttribute())  
{  
  XmlNode a = doc.ReadNode(reader);  
  // Do some more processing.  
}  
```  
  
 <span data-ttu-id="f9fca-1058">`ReadNode` 會耗用屬性值，這表示在呼叫`ReadNode`屬性，<xref:System.Xml.XmlReader.ReadAttributeValue%2A?displayProperty=nameWithType>傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1058">`ReadNode` does consume the attribute value though, which means after calling `ReadNode` on an attribute, <xref:System.Xml.XmlReader.ReadAttributeValue%2A?displayProperty=nameWithType> returns `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9fca-1059">下列範例會使用`ReadNode`來建立新的節點，然後插入新節點插入文件中。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1059">The following example uses `ReadNode` to create a new node and then inserts the new node into the document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.ReadNode Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.ReadNode Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.ReadNode Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.ReadNode Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.ReadNode Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.ReadNode Example/VB/source.vb#1)]  
  
 <span data-ttu-id="f9fca-1060">此範例會使用該檔案，`cd.xml`作為輸入。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1060">The example uses the file, `cd.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlDocument.ReadNode Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlDocument.ReadNode Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="f9fca-1061">此讀取器置於節點類型上，該類型不會轉譯為有效的 DOM 節點 (例如 EndElement 或 EndEntity)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-1061">The reader is positioned on a node type that does not translate to a valid DOM node (for example, EndElement or EndEntity).</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="f9fca-1062">
            <para>這個方法沒有繼承要求。完全信任，才能覆寫<see langword="ReadNode" />方法。這個方法是 Microsoft 擴充功能的文件物件模型 (DOM)。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-1062">
              <para>This method has an inheritance demand. Full trust is required to override the <see langword="ReadNode" /> method.  This method is a Microsoft extension to the Document Object Model (DOM).</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlDocument.ImportNode(System.Xml.XmlNode,System.Boolean)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Save">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f9fca-1063">將 XML 文件儲存至指定的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-1063">Saves the XML document to the specified location.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public virtual void Save (System.IO.Stream outStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save(class System.IO.Stream outStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.Save(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Save (outStream As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Save(System::IO::Stream ^ outStream);" />
      <MemberSignature Language="F#" Value="abstract member Save : System.IO.Stream -&gt; unit&#xA;override this.Save : System.IO.Stream -&gt; unit" Usage="xmlDocument.Save outStream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="outStream">
          <span data-ttu-id="f9fca-1064">要在其中儲存的資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-1064">The stream to which you want to save.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9fca-1065">將 XML 文件儲存至指定的資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-1065">Saves the XML document to the specified stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9fca-1066">只有當保留空白字元<xref:System.Xml.XmlDocument.PreserveWhitespace%2A>設`true`。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1066">White space is preserved only if <xref:System.Xml.XmlDocument.PreserveWhitespace%2A> is set to `true`.</span></span>  
  
 <span data-ttu-id="f9fca-1067">目前的 XmlDeclaration`XmlDocument`物件可以決定所儲存的文件中的編碼屬性。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1067">The XmlDeclaration of the current `XmlDocument` object determines the encoding attribute in the saved document.</span></span> <span data-ttu-id="f9fca-1068">編碼屬性的值取自<xref:System.Xml.XmlDeclaration.Encoding%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1068">The value of the encoding attribute is taken from the <xref:System.Xml.XmlDeclaration.Encoding%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="f9fca-1069">如果`XmlDocument`並沒有 xml 宣告，或如果 XmlDeclaration 沒有編碼方式的屬性，儲存的文件不會有一個是。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1069">If the `XmlDocument` does not have an XmlDeclaration, or if the XmlDeclaration does not have an encoding attribute, the saved document will not have one either.</span></span>  
  
 <span data-ttu-id="f9fca-1070">儲存文件時，會產生 xmlns 屬性正確保存 （區域名稱 + 命名空間 URI） 的節點識別。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1070">When the document is saved, xmlns attributes are generated to persist the node identity (local name + namespace URI) correctly.</span></span> <span data-ttu-id="f9fca-1071">例如，下列 C# 程式碼</span><span class="sxs-lookup"><span data-stu-id="f9fca-1071">For example, the following C# code</span></span>  
  
```csharp  
XmlDocument doc = new XmlDocument();  
doc.AppendChild(doc.CreateElement("item","urn:1"));  
doc.Save(Console.Out);  
```  
  
 <span data-ttu-id="f9fca-1072">產生此 xml 屬性`<item xmls="urn:1"/>`。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1072">generates this xmls attribute `<item xmls="urn:1"/>`.</span></span>  
  
 <span data-ttu-id="f9fca-1073">這個方法是 Microsoft 擴充功能的文件物件模型 (DOM)。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1073">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 <span data-ttu-id="f9fca-1074">請注意，只有<xref:System.Xml.XmlDocument.Save%2A>方法會強制語式正確的 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1074">Note that only the <xref:System.Xml.XmlDocument.Save%2A> method enforces a well-formed XML document.</span></span> <span data-ttu-id="f9fca-1075">所有其他`Save`多載只會保證語式正確的片段。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1075">All other `Save` overloads only guarantee a well-formed fragment.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="f9fca-1076">作業不會產生格式正確的 XML 文件 (例如，沒有文件項目或有重複的 XML 宣告)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-1076">The operation would not result in a well formed XML document (for example, no document element or duplicate XML declarations).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public virtual void Save (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.Save(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Save (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Save(System::IO::TextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member Save : System.IO.TextWriter -&gt; unit&#xA;override this.Save : System.IO.TextWriter -&gt; unit" Usage="xmlDocument.Save writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="f9fca-1077">要儲存的目標 <see langword="TextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-1077">The <see langword="TextWriter" /> to which you want to save.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9fca-1078">將 XML 文件儲存至指定的 <see cref="T:System.IO.TextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-1078">Saves the XML document to the specified <see cref="T:System.IO.TextWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9fca-1079">上的編碼`TextWriter`判斷會寫出的編碼方式 (的編碼方式編碼的 xml 宣告節點取代`TextWriter`)。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1079">The encoding on the `TextWriter` determines the encoding that is written out (The encoding of the XmlDeclaration node is replaced by the encoding of the `TextWriter`).</span></span> <span data-ttu-id="f9fca-1080">如果沒有指定在沒有編碼`TextWriter`、`XmlDocument`儲存沒有編碼方式的屬性。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1080">If there was no encoding specified on the `TextWriter`, the `XmlDocument` is saved without an encoding attribute.</span></span>  
  
 <span data-ttu-id="f9fca-1081">這個方法是 Microsoft 擴充功能的文件物件模型 (DOM)。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1081">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 <span data-ttu-id="f9fca-1082">請注意，只有<xref:System.Xml.XmlDocument.Save%2A>方法會強制語式正確的 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1082">Note that only the <xref:System.Xml.XmlDocument.Save%2A> method enforces a well-formed XML document.</span></span> <span data-ttu-id="f9fca-1083">所有其他`Save`多載只會保證語式正確的片段。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1083">All other `Save` overloads only guarantee a well-formed fragment.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="f9fca-1084">作業不會產生格式正確的 XML 文件 (例如，沒有文件項目或有重複的 XML 宣告)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-1084">The operation would not result in a well formed XML document (for example, no document element or duplicate XML declarations).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public virtual void Save (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.Save(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Save (filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Save(System::String ^ filename);" />
      <MemberSignature Language="F#" Value="abstract member Save : string -&gt; unit&#xA;override this.Save : string -&gt; unit" Usage="xmlDocument.Save filename" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename">
          <span data-ttu-id="f9fca-1085">您要儲存文件的目標檔案位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-1085">The location of the file where you want to save the document.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9fca-1086">將 XML 文件儲存至指定的檔案。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-1086">Saves the XML document to the specified file.</span>
          </span>
          <span data-ttu-id="f9fca-1087">如果指定的檔案存在，則這個方法會覆寫該檔案。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-1087">If the specified file exists, this method overwrites it.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9fca-1088">輸出的檔案才會在中，會保留空白字元<xref:System.Xml.XmlDocument.PreserveWhitespace%2A>設`true`。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1088">White space is preserved in the output file only if <xref:System.Xml.XmlDocument.PreserveWhitespace%2A> is set to `true`.</span></span>  
  
 <span data-ttu-id="f9fca-1089">目前的 XmlDeclaration`XmlDocument`物件可以決定所儲存的文件中的編碼屬性。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1089">The XmlDeclaration of the current `XmlDocument` object determines the encoding attribute in the saved document.</span></span> <span data-ttu-id="f9fca-1090">編碼屬性的值取自<xref:System.Xml.XmlDeclaration.Encoding%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1090">The value of the encoding attribute is taken from the <xref:System.Xml.XmlDeclaration.Encoding%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="f9fca-1091">如果`XmlDocument`並沒有 xml 宣告，或如果 XmlDeclaration 沒有編碼方式的屬性，儲存的文件不會有一個是。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1091">If the `XmlDocument` does not have an XmlDeclaration, or if the XmlDeclaration does not have an encoding attribute, the saved document will not have one either.</span></span>  
  
 <span data-ttu-id="f9fca-1092">儲存文件時，會產生 xmlns 屬性正確保存 （區域名稱 + 命名空間 URI） 的節點識別。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1092">When the document is saved, xmlns attributes are generated to persist the node identity (local name + namespace URI) correctly.</span></span> <span data-ttu-id="f9fca-1093">例如，下列 C# 程式碼</span><span class="sxs-lookup"><span data-stu-id="f9fca-1093">For example, the following C# code</span></span>  
  
```csharp  
XmlDocument doc = new XmlDocument();  
doc.AppendChild(doc.CreateElement("item","urn:1"));  
doc.Save(Console.Out);  
```  
  
 <span data-ttu-id="f9fca-1094">產生此 xml 屬性`<item xmls="urn:1"/>`。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1094">generates this xmls attribute `<item xmls="urn:1"/>`.</span></span>  
  
 <span data-ttu-id="f9fca-1095">這個方法是 Microsoft 擴充功能的文件物件模型 (DOM)。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1095">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 <span data-ttu-id="f9fca-1096">請注意，只有<xref:System.Xml.XmlDocument.Save%2A>方法會強制語式正確的 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1096">Note that only the <xref:System.Xml.XmlDocument.Save%2A> method enforces a well-formed XML document.</span></span> <span data-ttu-id="f9fca-1097">所有其他`Save`多載只會保證語式正確的片段。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1097">All other `Save` overloads only guarantee a well-formed fragment.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9fca-1098">下列範例會將 XML 載入至 XmlDocument 物件、 加以修改，以及然後將它儲存到名為 data.xml。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1098">The following example loads XML into an XmlDocument object, modifies it, and then saves it to a file named data.xml.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.Save Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.Save Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.Save Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.Save Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.Save Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.Save Example/VB/source.vb#1)]  
  
 <span data-ttu-id="f9fca-1099">Data.xml 檔案會包含下列 XML: `<item><name>wrench</name><price>10.95</price></item>`。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1099">The data.xml file will contain the following XML: `<item><name>wrench</name><price>10.95</price></item>`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="f9fca-1100">作業不會產生格式正確的 XML 文件 (例如，沒有文件項目或有重複的 XML 宣告)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-1100">The operation would not result in a well formed XML document (for example, no document element or duplicate XML declarations).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public virtual void Save (System.Xml.XmlWriter w);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save(class System.Xml.XmlWriter w) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.Save(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Save (w As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Save(System::Xml::XmlWriter ^ w);" />
      <MemberSignature Language="F#" Value="abstract member Save : System.Xml.XmlWriter -&gt; unit&#xA;override this.Save : System.Xml.XmlWriter -&gt; unit" Usage="xmlDocument.Save w" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="w" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="w">
          <span data-ttu-id="f9fca-1101">要儲存的目標 <see langword="XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-1101">The <see langword="XmlWriter" /> to which you want to save.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9fca-1102">將 XML 文件儲存至指定的 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-1102">Saves the XML document to the specified <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9fca-1103">只有當保留空白字元<xref:System.Xml.XmlDocument.PreserveWhitespace%2A>設`true`。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1103">White space is preserved only if <xref:System.Xml.XmlDocument.PreserveWhitespace%2A> is set to `true`.</span></span>  
  
 <span data-ttu-id="f9fca-1104">上的編碼`XmlWriter`判斷會寫出的編碼方式 (的編碼方式編碼的 xml 宣告節點取代`XmlWriter`)。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1104">The encoding on the `XmlWriter` determines the encoding that is written out (The encoding of the XmlDeclaration node is replaced by the encoding of the `XmlWriter`).</span></span> <span data-ttu-id="f9fca-1105">如果沒有指定在沒有編碼`XmlWriter`、`XmlDocument`儲存沒有編碼方式的屬性。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1105">If there was no encoding specified on the `XmlWriter`, the `XmlDocument` is saved without an encoding attribute.</span></span>  
  
 <span data-ttu-id="f9fca-1106">儲存文件時，會產生 xmlns 屬性正確保存 （LocalName + NamespaceURI） 的節點識別。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1106">When the document is saved, xmlns attributes are generated to persist the node identity (LocalName + NamespaceURI) correctly.</span></span> <span data-ttu-id="f9fca-1107">例如，下列 C# 程式碼</span><span class="sxs-lookup"><span data-stu-id="f9fca-1107">For example, the following C# code</span></span>  
  
```csharp  
XmlDocument doc = new XmlDocument();  
doc.AppendChild(doc.CreateElement("item","urn:1"));  
doc.Save(Console.Out);  
```  
  
 <span data-ttu-id="f9fca-1108">會產生此 xml 屬性：</span><span class="sxs-lookup"><span data-stu-id="f9fca-1108">generates this xmls attribute:</span></span>  
  
```xml  
<item  
    xmls="urn:1"/>  
```  
  
 <span data-ttu-id="f9fca-1109">這個方法是 Microsoft 擴充功能的文件物件模型 (DOM)。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1109">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 <span data-ttu-id="f9fca-1110">請注意，只有<xref:System.Xml.XmlDocument.Save%2A>方法會強制語式正確的 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1110">Note that only the <xref:System.Xml.XmlDocument.Save%2A> method enforces a well-formed XML document.</span></span> <span data-ttu-id="f9fca-1111">所有其他`Save`多載只會保證語式正確的片段。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1111">All other `Save` overloads only guarantee a well-formed fragment.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9fca-1112">下列範例會載入到 XML`XmlDocument`物件，並將它儲存至檔案。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1112">The following example loads XML into an `XmlDocument` object and saves it out to a file.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.LoadXml Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.LoadXml Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.LoadXml Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.LoadXml Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.LoadXml Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.LoadXml Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="f9fca-1113">作業不會產生格式正確的 XML 文件 (例如，沒有文件項目或有重複的 XML 宣告)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-1113">The operation would not result in a well formed XML document (for example, no document element or duplicate XML declarations).</span>
          </span>
        </exception>
        <altmember cref="P:System.Xml.XmlTextWriter.Formatting" />
      </Docs>
    </Member>
    <Member MemberName="SchemaInfo">
      <MemberSignature Language="C#" Value="public override System.Xml.Schema.IXmlSchemaInfo SchemaInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.IXmlSchemaInfo SchemaInfo" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlDocument.SchemaInfo" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SchemaInfo As IXmlSchemaInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::Schema::IXmlSchemaInfo ^ SchemaInfo { System::Xml::Schema::IXmlSchemaInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SchemaInfo : System.Xml.Schema.IXmlSchemaInfo" Usage="System.Xml.XmlDocument.SchemaInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.IXmlSchemaInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9fca-1114">傳回節點的後結構描述驗證資訊集 (PSVI)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-1114">Returns the Post-Schema-Validation-Infoset (PSVI) of the node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9fca-1115">
            <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> 物件，表示節點的 PSVI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-1115">The <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> object representing the PSVI of the node.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9fca-1116">節點已通過驗證後，會設定這個屬性的 PSVI 內容。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1116">The PSVI contents of this property are set after the node has been validated.</span></span>  
  
 <span data-ttu-id="f9fca-1117">這個屬性是文件物件模型的 Microsoft 擴充功能。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1117">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Schemas">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaSet Schemas { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.XmlSchemaSet Schemas" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlDocument.Schemas" />
      <MemberSignature Language="VB.NET" Value="Public Property Schemas As XmlSchemaSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaSet ^ Schemas { System::Xml::Schema::XmlSchemaSet ^ get(); void set(System::Xml::Schema::XmlSchemaSet ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Schemas : System.Xml.Schema.XmlSchemaSet with get, set" Usage="System.Xml.XmlDocument.Schemas" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9fca-1118">取得或設定與這個 <see cref="T:System.Xml.XmlDocument" /> 相關聯的 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-1118">Gets or sets the <see cref="T:System.Xml.Schema.XmlSchemaSet" /> object associated with this <see cref="T:System.Xml.XmlDocument" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9fca-1119">
            <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 物件，包含與這個 <see cref="T:System.Xml.XmlDocument" /> 相關聯的 XML 結構描述定義語言 (XSD) 結構描述；否則為空白的 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-1119">An <see cref="T:System.Xml.Schema.XmlSchemaSet" /> object containing the XML Schema Definition Language (XSD) schemas associated with this <see cref="T:System.Xml.XmlDocument" />; otherwise, an empty <see cref="T:System.Xml.Schema.XmlSchemaSet" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9fca-1120">中包含的結構描述<xref:System.Xml.Schema.XmlSchemaSet>物件相關聯<xref:System.Xml.XmlDocument>物件會用於驗證時<xref:System.Xml.XmlDocument.Validate%2A>方法<xref:System.Xml.XmlDocument>執行。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1120">The schemas contained in an <xref:System.Xml.Schema.XmlSchemaSet> object associated with an <xref:System.Xml.XmlDocument> object are used for validation when the <xref:System.Xml.XmlDocument.Validate%2A> method of an <xref:System.Xml.XmlDocument> is executed.</span></span>  
  
 <span data-ttu-id="f9fca-1121">當<xref:System.Xml.XmlDocument>物件會使用來自 XML 資料初始化<xref:System.Xml.XmlReader>物件，<xref:System.Xml.Schema.XmlSchemaSet>從已載入物件<xref:System.Xml.XmlReaderSettings.Schemas%2A>屬性<xref:System.Xml.XmlReader>物件。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1121">When an <xref:System.Xml.XmlDocument> object is initialized with XML data from an <xref:System.Xml.XmlReader> object, the <xref:System.Xml.Schema.XmlSchemaSet> object is loaded from the <xref:System.Xml.XmlReaderSettings.Schemas%2A> property of the <xref:System.Xml.XmlReader> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Xml.XmlDocument.Validate" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Validate">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f9fca-1122">根據 <see cref="P:System.Xml.XmlDocument.Schemas" /> 屬性中包含的 XML 結構描述定義語言 (XSD) 結構描述，驗證 <see cref="T:System.Xml.XmlDocument" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-1122">Validates the <see cref="T:System.Xml.XmlDocument" /> against the XML Schema Definition Language (XSD) schemas contained in the <see cref="P:System.Xml.XmlDocument.Schemas" /> property.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public void Validate (System.Xml.Schema.ValidationEventHandler validationEventHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Validate(class System.Xml.Schema.ValidationEventHandler validationEventHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.Validate(System.Xml.Schema.ValidationEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Validate(System::Xml::Schema::ValidationEventHandler ^ validationEventHandler);" />
      <MemberSignature Language="F#" Value="member this.Validate : System.Xml.Schema.ValidationEventHandler -&gt; unit" Usage="xmlDocument.Validate validationEventHandler" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="validationEventHandler" Type="System.Xml.Schema.ValidationEventHandler" />
      </Parameters>
      <Docs>
        <param name="validationEventHandler">
          <span data-ttu-id="f9fca-1123">
            <see cref="T:System.Xml.Schema.ValidationEventHandler" /> 物件，可接收有關結構描述驗證警告和錯誤的資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-1123">The <see cref="T:System.Xml.Schema.ValidationEventHandler" /> object that receives information about schema validation warnings and errors.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9fca-1124">根據 <see cref="P:System.Xml.XmlDocument.Schemas" /> 屬性中包含的 XML 結構描述定義語言 (XSD) 結構描述，驗證 <see cref="T:System.Xml.XmlDocument" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-1124">Validates the <see cref="T:System.Xml.XmlDocument" /> against the XML Schema Definition Language (XSD) schemas contained in the <see cref="P:System.Xml.XmlDocument.Schemas" /> property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9fca-1125"><xref:System.Xml.XmlDocument.Validate%2A>方法會驗證 XML 資料的<xref:System.Xml.XmlDocument>中包含的結構描述<xref:System.Xml.XmlDocument.Schemas%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1125">The <xref:System.Xml.XmlDocument.Validate%2A> method validates the XML data in the <xref:System.Xml.XmlDocument> against the schemas contained in the <xref:System.Xml.XmlDocument.Schemas%2A> property.</span></span> <span data-ttu-id="f9fca-1126"><xref:System.Xml.XmlDocument.Validate%2A>方法執行資訊集增加。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1126">The <xref:System.Xml.XmlDocument.Validate%2A> method performs infoset augmentation.</span></span> <span data-ttu-id="f9fca-1127">具體而言，在驗證成功之後會套用結構描述預設值、 文字值會轉換成在必要時，不可部份完成值和類型資訊已驗證的資訊項目相關聯。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1127">Specifically, after successful validation, schema defaults are applied, text values are converted to atomic values as necessary, and type information is associated with validated information items.</span></span> <span data-ttu-id="f9fca-1128">結果是以先前不具型別的的 XML 子樹狀結構中<xref:System.Xml.XmlDocument>取代具類型的子樹狀結構。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1128">The result is a previously un-typed XML sub-tree in the <xref:System.Xml.XmlDocument> replaced with a typed sub-tree.</span></span>  
  
 <span data-ttu-id="f9fca-1129">以下是使用時要考慮的重要注意事項<xref:System.Xml.XmlDocument.Validate%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1129">The following are important notes to consider when using the <xref:System.Xml.XmlDocument.Validate%2A> method.</span></span>  
  
-   <span data-ttu-id="f9fca-1130">結構描述位置提示喜歡`xsi:schemaLocation`或`xsi:noNamespaceSchemaLocation`都會被忽略。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1130">Schema location hints like `xsi:schemaLocation` or `xsi:noNamespaceSchemaLocation` are ignored.</span></span>  
  
-   <span data-ttu-id="f9fca-1131">內嵌結構描述都會被忽略。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1131">Inline schemas are ignored.</span></span>  
  
-   <span data-ttu-id="f9fca-1132">如果在驗證期間發生的結構描述驗證錯誤<xref:System.Xml.XmlDocument>部分會變成驗證與以正確的類型資訊的某些節點有些則沒有。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1132">If schema validation errors occur during validation the <xref:System.Xml.XmlDocument> becomes partially validated with some nodes with correct type information and some without.</span></span>  
  
-   <span data-ttu-id="f9fca-1133">驗證程序包括檢查唯一性和參考條件約束 (`xs:ID`， `xs:IDREF`， `xs:key`， `xs:keyref`，和`xs:unique`)。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1133">The validation process includes checking for uniqueness and reference constraints (`xs:ID`, `xs:IDREF`, `xs:key`, `xs:keyref`, and `xs:unique`).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9fca-1134">下列範例將示範如何使用 <xref:System.Xml.XmlDocument.Validate%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1134">The following example illustrates use of the <xref:System.Xml.XmlDocument.Validate%2A> method.</span></span> <span data-ttu-id="f9fca-1135">此範例會建立<xref:System.Xml.XmlDocument>，其中包含相關聯的 XSD 結構描述使用<xref:System.Xml.XmlReaderSettings>和<xref:System.Xml.XmlReader>物件。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1135">The example creates an <xref:System.Xml.XmlDocument> that contains an associated XSD schema using the <xref:System.Xml.XmlReaderSettings> and <xref:System.Xml.XmlReader> objects.</span></span> <span data-ttu-id="f9fca-1136">然後此範例使用<xref:System.Xml.XPath.XPathNavigator>類別以不正確地修改產生結構描述驗證錯誤的 XML 文件中項目的具類型的值。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1136">The example then uses the <xref:System.Xml.XPath.XPathNavigator> class to incorrectly modify the typed value of an element in the XML document generating a schema validation error.</span></span>  
  
 [!code-cpp[XPathValidation#1](~/samples/snippets/cpp/VS_Snippets_Data/XPathValidation/CPP/XPathValidation.cpp#1)]
 [!code-csharp[XPathValidation#1](~/samples/snippets/csharp/VS_Snippets_Data/XPathValidation/CS/XPathValidation.cs#1)]
 [!code-vb[XPathValidation#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathValidation/VB/XPathValidation.vb#1)]  
  
 <span data-ttu-id="f9fca-1137">該範例採用`contosoBooks.xml`和`contosoBooks.xsd`檔案做為輸入。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1137">The example takes the `contosoBooks.xml` and `contosoBooks.xsd` files as input.</span></span>  
  
 [!code-xml[XPathXMLExamples#2](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xml#2)]  
  
 [!code-xml[XPathXMLExamples#3](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xsd#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">
          <span data-ttu-id="f9fca-1138">發生了結構描述驗證事件，且未指定任何 <see cref="T:System.Xml.Schema.ValidationEventHandler" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-1138">A schema validation event occurred and no <see cref="T:System.Xml.Schema.ValidationEventHandler" /> object was specified.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public void Validate (System.Xml.Schema.ValidationEventHandler validationEventHandler, System.Xml.XmlNode nodeToValidate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Validate(class System.Xml.Schema.ValidationEventHandler validationEventHandler, class System.Xml.XmlNode nodeToValidate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.Validate(System.Xml.Schema.ValidationEventHandler,System.Xml.XmlNode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Validate(System::Xml::Schema::ValidationEventHandler ^ validationEventHandler, System::Xml::XmlNode ^ nodeToValidate);" />
      <MemberSignature Language="F#" Value="member this.Validate : System.Xml.Schema.ValidationEventHandler * System.Xml.XmlNode -&gt; unit" Usage="xmlDocument.Validate (validationEventHandler, nodeToValidate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="validationEventHandler" Type="System.Xml.Schema.ValidationEventHandler" />
        <Parameter Name="nodeToValidate" Type="System.Xml.XmlNode" />
      </Parameters>
      <Docs>
        <param name="validationEventHandler">
          <span data-ttu-id="f9fca-1139">
            <see cref="T:System.Xml.Schema.ValidationEventHandler" /> 物件，可接收有關結構描述驗證警告和錯誤的資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-1139">The <see cref="T:System.Xml.Schema.ValidationEventHandler" /> object that receives information about schema validation warnings and errors.</span>
          </span>
        </param>
        <param name="nodeToValidate">
          <span data-ttu-id="f9fca-1140">從要驗證的 <see cref="T:System.Xml.XmlDocument" /> 所建立的 <see cref="T:System.Xml.XmlNode" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-1140">The <see cref="T:System.Xml.XmlNode" /> object created from an <see cref="T:System.Xml.XmlDocument" /> to validate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9fca-1141">根據 <see cref="P:System.Xml.XmlDocument.Schemas" /> 屬性中包含的 XML 結構描述定義語言 (XSD) 結構描述，驗證指定的 <see cref="T:System.Xml.XmlNode" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-1141">Validates the <see cref="T:System.Xml.XmlNode" /> object specified against the XML Schema Definition Language (XSD) schemas in the <see cref="P:System.Xml.XmlDocument.Schemas" /> property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9fca-1142"><xref:System.Xml.XmlDocument.Validate%2A>方法會驗證 XML 資料的<xref:System.Xml.XmlNode>物件中包含的結構描述<xref:System.Xml.XmlDocument.Schemas%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1142">The <xref:System.Xml.XmlDocument.Validate%2A> method validates the XML data in the <xref:System.Xml.XmlNode> object against the schemas contained in the <xref:System.Xml.XmlDocument.Schemas%2A> property.</span></span> <span data-ttu-id="f9fca-1143"><xref:System.Xml.XmlDocument.Validate%2A>方法執行資訊集增加。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1143">The <xref:System.Xml.XmlDocument.Validate%2A> method performs infoset augmentation.</span></span> <span data-ttu-id="f9fca-1144">具體而言，在驗證成功之後會套用結構描述預設值、 文字值會轉換成在必要時，不可部份完成值和類型資訊已驗證的資訊項目相關聯。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1144">Specifically, after successful validation, schema defaults are applied, text values are converted to atomic values as necessary, and type information is associated with validated information items.</span></span> <span data-ttu-id="f9fca-1145">結果是以先前不具型別的的 XML 子樹狀結構中<xref:System.Xml.XmlDocument>取代具類型的子樹狀結構。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1145">The result is a previously un-typed XML sub-tree in the <xref:System.Xml.XmlDocument> replaced with a typed sub-tree.</span></span>  
  
 <span data-ttu-id="f9fca-1146">以下是使用時要考慮的重要注意事項<xref:System.Xml.XmlDocument.Validate%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1146">The following are important notes to consider when using the <xref:System.Xml.XmlDocument.Validate%2A> method.</span></span>  
  
-   <span data-ttu-id="f9fca-1147">結構描述位置提示喜歡`xsi:schemaLocation`或`xsi:noNamespaceSchemaLocation`都會被忽略。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1147">Schema location hints like `xsi:schemaLocation` or `xsi:noNamespaceSchemaLocation` are ignored.</span></span>  
  
-   <span data-ttu-id="f9fca-1148">內嵌結構描述都會被忽略。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1148">Inline schemas are ignored.</span></span>  
  
-   <span data-ttu-id="f9fca-1149">如果在驗證期間發生的結構描述驗證錯誤<xref:System.Xml.XmlDocument>部分會變成驗證與以正確的類型資訊的某些節點有些則沒有。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1149">If schema validation errors occur during validation the <xref:System.Xml.XmlDocument> becomes partially validated with some nodes with correct type information and some without.</span></span>  
  
 <span data-ttu-id="f9fca-1150">如果要驗證的節點是根節點，驗證程序包括檢查唯一性和參考條件約束 (`xs:ID`， `xs:IDREF`， `xs:key`， `xs:keyref`，和`xs:unique`)，否則唯一性和參考條件約束會省略。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1150">If the node to validate is the root node, the validation process includes checking for uniqueness and reference constraints (`xs:ID`, `xs:IDREF`, `xs:key`, `xs:keyref`, and `xs:unique`); otherwise, uniqueness and reference constraints are omitted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9fca-1151">如需<xref:System.Xml.XmlDocument.Validate%2A>方法，請參閱<xref:System.Xml.XmlDocument.Validate%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1151">For an example of the <xref:System.Xml.XmlDocument.Validate%2A> method, see the <xref:System.Xml.XmlDocument.Validate%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9fca-1152">
            <see cref="T:System.Xml.XmlNode" /> 物件參數不是從 <see cref="T:System.Xml.XmlDocument" /> 建立而來。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-1152">The <see cref="T:System.Xml.XmlNode" /> object parameter was not created from an <see cref="T:System.Xml.XmlDocument" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f9fca-1153">
            <see cref="T:System.Xml.XmlNode" /> 物件參數不是項目、屬性、文件片段或根節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-1153">The <see cref="T:System.Xml.XmlNode" /> object parameter is not an element, attribute, document fragment, or the root node.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">
          <span data-ttu-id="f9fca-1154">發生了結構描述驗證事件，且未指定任何 <see cref="T:System.Xml.Schema.ValidationEventHandler" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-1154">A schema validation event occurred and no <see cref="T:System.Xml.Schema.ValidationEventHandler" /> object was specified.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteContentTo">
      <MemberSignature Language="C#" Value="public override void WriteContentTo (System.Xml.XmlWriter xw);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteContentTo(class System.Xml.XmlWriter xw) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.WriteContentTo(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteContentTo (xw As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteContentTo(System::Xml::XmlWriter ^ xw);" />
      <MemberSignature Language="F#" Value="override this.WriteContentTo : System.Xml.XmlWriter -&gt; unit" Usage="xmlDocument.WriteContentTo xw" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xw" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="xw">
          <span data-ttu-id="f9fca-1155">要儲存的目標 <see langword="XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-1155">The <see langword="XmlWriter" /> to which you want to save.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9fca-1156">將 <see langword="XmlDocument" /> 節點的所有子系儲存到指定的 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-1156">Saves all the children of the <see langword="XmlDocument" /> node to the specified <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9fca-1157">這個方法是 Microsoft 擴充功能的文件物件模型 (DOM)。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1157">This method is a Microsoft extension to the Document Object Model (DOM).</span></span> <span data-ttu-id="f9fca-1158">它在功能上等於<xref:System.Xml.XmlDocument.InnerXml%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1158">It is functionally equivalent to the <xref:System.Xml.XmlDocument.InnerXml%2A> property.</span></span>  
  
 <span data-ttu-id="f9fca-1159"><xref:System.Xml.XmlDeclaration.Encoding%2A?displayProperty=nameWithType>屬性會決定會寫出的編碼方式。如果`Encoding`屬性沒有值，`XmlDocument`編碼屬性不會寫出。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1159">The <xref:System.Xml.XmlDeclaration.Encoding%2A?displayProperty=nameWithType> property determines the encoding that is written out. If the `Encoding` property does not have a value, the `XmlDocument` is written out without an encoding attribute.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9fca-1160">下列範例會顯示在螢幕上的文件。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1160">The following example displays the document onscreen.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.WriteContentTo Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.WriteContentTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.WriteContentTo Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.WriteContentTo Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.WriteContentTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.WriteContentTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteTo">
      <MemberSignature Language="C#" Value="public override void WriteTo (System.Xml.XmlWriter w);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteTo(class System.Xml.XmlWriter w) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.WriteTo(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteTo (w As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteTo(System::Xml::XmlWriter ^ w);" />
      <MemberSignature Language="F#" Value="override this.WriteTo : System.Xml.XmlWriter -&gt; unit" Usage="xmlDocument.WriteTo w" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="w" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="w">
          <span data-ttu-id="f9fca-1161">要儲存的目標 <see langword="XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-1161">The <see langword="XmlWriter" /> to which you want to save.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9fca-1162">將 <see langword="XmlDocument" /> 節點儲存至指定的 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-1162">Saves the <see langword="XmlDocument" /> node to the specified <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9fca-1163">這個方法是 Microsoft 擴充功能的文件物件模型 (DOM)。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1163">This method is a Microsoft extension to the Document Object Model (DOM).</span></span> <span data-ttu-id="f9fca-1164">它在功能上等於<xref:System.Xml.XmlNode.OuterXml%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1164">It is functionally equivalent to the <xref:System.Xml.XmlNode.OuterXml%2A> property.</span></span>  
  
 <span data-ttu-id="f9fca-1165"><xref:System.Xml.XmlDeclaration.Encoding%2A?displayProperty=nameWithType>屬性會決定會寫出的編碼方式。如果`Encoding`屬性沒有值，`XmlDocument`編碼屬性不會寫出。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1165">The <xref:System.Xml.XmlDeclaration.Encoding%2A?displayProperty=nameWithType> property determines the encoding that is written out. If the `Encoding` property does not have a value, the `XmlDocument` is written out without an encoding attribute.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9fca-1166">下列範例會顯示在螢幕上的文件。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1166">The following example displays the document onscreen.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.WriteTo Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.WriteTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.WriteTo Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.WriteTo Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.WriteTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.WriteTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlResolver">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlResolver XmlResolver { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlResolver XmlResolver" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlDocument.XmlResolver" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property XmlResolver As XmlResolver" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlResolver ^ XmlResolver {  void set(System::Xml::XmlResolver ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlResolver : System.Xml.XmlResolver" Usage="System.Xml.XmlDocument.XmlResolver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9fca-1167">設定用於解析外部資源的 <see cref="T:System.Xml.XmlResolver" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-1167">Sets the <see cref="T:System.Xml.XmlResolver" /> to use for resolving external resources.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9fca-1168">要使用的 <see langword="XmlResolver" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-1168">The <see langword="XmlResolver" /> to use.</span>
          </span>
          <span data-ttu-id="f9fca-1169">在 .NET Framework 1.1 中，必須完全信任呼叫端，才能指定 <see langword="XmlResolver" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-1169">In version 1.1 of the.NET Framework, the caller must be fully trusted in order to specify an <see langword="XmlResolver" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9fca-1170">`XmlResolver`可用來載入 Dtd 或擴充實體參考。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1170">The `XmlResolver` can be used to load DTDs or expand entity references.</span></span> <span data-ttu-id="f9fca-1171">使用<xref:System.Xml.XmlResolver.Credentials%2A?displayProperty=nameWithType>屬性，您可以在設定認證`XmlResolver`存取儲存在安全的網路資源上的資源。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1171">Using the <xref:System.Xml.XmlResolver.Credentials%2A?displayProperty=nameWithType> property, you can set credentials on the `XmlResolver` to access resources stored on a secure network resource.</span></span>  
  
-   <span data-ttu-id="f9fca-1172">如果使用未載入文件<xref:System.Xml.XmlReader>（亦即，如果它使用資料流載入，檔案，等等）`XmlResolver`上`XmlDocument`一律使用。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1172">If the document was not loaded using an <xref:System.Xml.XmlReader> (that is, if it was loaded using a stream, file, and so on) the `XmlResolver` on the `XmlDocument` is always used.</span></span>  
  
-   <span data-ttu-id="f9fca-1173">如果文件已載入與<xref:System.Xml.XmlTextReader>，解析`XmlTextReader`用來解析 DTD 中的任何參考 DocumentType 節點。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1173">If the document was loaded with an <xref:System.Xml.XmlTextReader>, the resolver on the `XmlTextReader` is used to resolve any DTD references in the DocumentType node.</span></span> <span data-ttu-id="f9fca-1174">在解析程式`XmlDocument`用來展開實體的任何參考。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1174">The resolver on the `XmlDocument` is used to expand any entity references.</span></span>  
  
-   <span data-ttu-id="f9fca-1175">如果文件已載入與<xref:System.Xml.XmlValidatingReader>，解析`XmlDocument`從未使用過。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1175">If the document was loaded with an <xref:System.Xml.XmlValidatingReader>, the resolver on the `XmlDocument` is never used.</span></span>  
  
-   <span data-ttu-id="f9fca-1176">如果使用該類別可擴充載入文件`XmlReader`和`XmlReader`無法解析實體 (<xref:System.Xml.XmlReader.CanResolveEntity%2A>傳回`false`)、`XmlResolver`上`XmlDocument`用來解析 DocumentType 節點中的任何參考以展開實體的任何參考。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1176">If the document was loaded with a class that extends `XmlReader` and the `XmlReader` cannot resolve entities (<xref:System.Xml.XmlReader.CanResolveEntity%2A> returns `false`), the `XmlResolver` on the `XmlDocument` is used to resolve any references in the DocumentType node and to expand any entity references.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f9fca-1177">如果`XmlDocument`使用載入<xref:System.Xml.XmlReader>其中有`XmlResolver`設，`XmlResolver`上`XmlReader`不會快取用`XmlDocument`之後<xref:System.Xml.XmlDocument.Load%2A>完成。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1177">If the `XmlDocument` is loaded using an <xref:System.Xml.XmlReader> which had an `XmlResolver` set to it, the `XmlResolver` on the `XmlReader` is not cached by the `XmlDocument` after <xref:System.Xml.XmlDocument.Load%2A> completes.</span></span>  
  
 <span data-ttu-id="f9fca-1178">在 1.1 版的.net Framework，如果未設定這個屬性，應用程式的信任層級會決定預設的行為。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1178">In version 1.1 of the.NET Framework, if this property is not set, the trust level of the application determines the default behavior.</span></span>  
  
 <span data-ttu-id="f9fca-1179">`Fully trusted code:` 文件會使用預設值<xref:System.Xml.XmlUrlResolver>不具使用者認證。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1179">`Fully trusted code:` The document uses a default <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="f9fca-1180">如果驗證才能存取網路資源，使用`XmlResolver`屬性來指定`XmlResolver`具有必要認證。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1180">If authentication is required to access a network resource, use the `XmlResolver` property to specify an `XmlResolver` with the necessary credentials.</span></span>  
  
 <span data-ttu-id="f9fca-1181">`Semi-trusted code:` `XmlResolver`屬性設定為`null`。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1181">`Semi-trusted code:` The `XmlResolver` property is set to `null`.</span></span> <span data-ttu-id="f9fca-1182">不會解析外部資源。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1182">External resources are not resolved.</span></span>  
  
 <span data-ttu-id="f9fca-1183">如需有關安全性和`XmlResolver`屬性，請參閱[解析外部資源](~/docs/standard/data/xml/resolving-external-resources.md)。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1183">For more information on security and the `XmlResolver` property, see [Resolving External Resources](~/docs/standard/data/xml/resolving-external-resources.md).</span></span>  
  
 <span data-ttu-id="f9fca-1184">這個屬性是文件物件模型的 Microsoft 擴充功能。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1184">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9fca-1185">下列範例會載入 XML 文件包括 DTD 檔案的參考。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1185">The following example loads an XML document which includes a reference to a DTD file.</span></span> <span data-ttu-id="f9fca-1186">`XmlResolver`屬性用來設定存取網路資源所需的認證。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1186">The `XmlResolver` property is used to set the credentials necessary to access the network resource.</span></span>  
  
 [!code-cpp[XmlDocument.XmlResolver#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlDocument.XmlResolver/CPP/docresolver.cpp#1)]
 [!code-csharp[XmlDocument.XmlResolver#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlDocument.XmlResolver/CS/docresolver.cs#1)]
 [!code-vb[XmlDocument.XmlResolver#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlDocument.XmlResolver/VB/docresolver.vb#1)]  
  
 <span data-ttu-id="f9fca-1187">這個範例會使用下列的資料檔案，做為輸入。</span><span class="sxs-lookup"><span data-stu-id="f9fca-1187">The example uses the following data files as input.</span></span>  
  
 `book5.xml`  
  
 [!code-xml[XmlDocument.XmlResolver#2](~/samples/snippets/xml/VS_Snippets_Data/XmlDocument.XmlResolver/XML/book5.xml#2)]  
  
 `books.dtd`  
  
 [!code-xml[XmlDocument.XmlResolver#3](~/samples/snippets/xml/VS_Snippets_Data/XmlDocument.XmlResolver/XML/books.dtd#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="f9fca-1188">這個屬性設定為 <see langword="null" />，但是遇到外部 DTD 或實體 (Entity)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9fca-1188">This property is set to <see langword="null" /> and an external DTD or entity is encountered.</span>
          </span>
        </exception>
        <altmember cref="P:System.Xml.XmlUrlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
      </Docs>
    </Member>
  </Members>
</Type>