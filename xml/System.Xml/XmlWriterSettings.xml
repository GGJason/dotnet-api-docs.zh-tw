<Type Name="XmlWriterSettings" FullName="System.Xml.XmlWriterSettings">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7860161af0480191bd26b797987d160249630be6" />
    <Meta Name="ms.sourcegitcommit" Value="1654a92bac785a221098172d9cacd405ceaac9b7" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="12/01/2018" />
    <Meta Name="ms.locfileid" Value="52734574" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class XmlWriterSettings" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XmlWriterSettings extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlWriterSettings" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XmlWriterSettings" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlWriterSettings sealed" />
  <TypeSignature Language="F#" Value="type XmlWriterSettings = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="78584-101">指定要在由 <see cref="T:System.Xml.XmlWriter" /> 方法建立的 <see cref="Overload:System.Xml.XmlWriter.Create" /> 物件上支援的一組功能。</span>
      <span class="sxs-lookup">
        <span data-stu-id="78584-101">Specifies a set of features to support on the <see cref="T:System.Xml.XmlWriter" /> object created by the <see cref="Overload:System.Xml.XmlWriter.Create" /> method.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78584-102"><xref:System.Xml.XmlWriter.Create%2A>方法是慣用的機制，以取得<xref:System.Xml.XmlWriter>執行個體。</span><span class="sxs-lookup"><span data-stu-id="78584-102">The <xref:System.Xml.XmlWriter.Create%2A> method is the preferred mechanism for obtaining <xref:System.Xml.XmlWriter> instances.</span></span> <span data-ttu-id="78584-103"><xref:System.Xml.XmlWriter.Create%2A>方法會使用<xref:System.Xml.XmlWriterSettings>類別，以指定要在實作哪些功能<xref:System.Xml.XmlWriter>所建立的物件。</span><span class="sxs-lookup"><span data-stu-id="78584-103">The <xref:System.Xml.XmlWriter.Create%2A> method uses the <xref:System.Xml.XmlWriterSettings> class to specify which features to implement in the <xref:System.Xml.XmlWriter> object that is created.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="78584-104">如果您使用<xref:System.Xml.XmlWriter>物件<xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>方法，您應該使用<xref:System.Xml.Xsl.XslCompiledTransform.OutputSettings%2A>屬性，以取得<xref:System.Xml.XmlWriterSettings>具有正確的設定物件。</span><span class="sxs-lookup"><span data-stu-id="78584-104">If you're using the <xref:System.Xml.XmlWriter> object with the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method, you should use the <xref:System.Xml.Xsl.XslCompiledTransform.OutputSettings%2A> property to obtain an <xref:System.Xml.XmlWriterSettings> object with the correct settings.</span></span> <span data-ttu-id="78584-105">如此可確保所建立的 <xref:System.Xml.XmlWriter> 物件具有正確的輸出設定。</span><span class="sxs-lookup"><span data-stu-id="78584-105">This ensures that the created <xref:System.Xml.XmlWriter> object has the correct output settings.</span></span>  
  
 <span data-ttu-id="78584-106"><xref:System.Xml.XmlWriterSettings>類別提供屬性，控制資料一致性和輸出格式。</span><span class="sxs-lookup"><span data-stu-id="78584-106">The <xref:System.Xml.XmlWriterSettings> class provides properties that control data conformance and output format.</span></span>  
  
 <span data-ttu-id="78584-107">資料一致性檢查和自動更正，請使用這些屬性：</span><span class="sxs-lookup"><span data-stu-id="78584-107">For data conformance checks and auto-corrections, use these properties:</span></span>  
  
|<span data-ttu-id="78584-108">屬性</span><span class="sxs-lookup"><span data-stu-id="78584-108">Property</span></span>|<span data-ttu-id="78584-109">指定</span><span class="sxs-lookup"><span data-stu-id="78584-109">Specifies</span></span>|<span data-ttu-id="78584-110">值</span><span class="sxs-lookup"><span data-stu-id="78584-110">Value</span></span>|<span data-ttu-id="78584-111">預設</span><span class="sxs-lookup"><span data-stu-id="78584-111">Default</span></span>|  
|--------------|---------------|-----------|-------------|  
|<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>|<span data-ttu-id="78584-112">是否要檢查的字元會在合法的 XML 字元集，如 W3C 所定義。</span><span class="sxs-lookup"><span data-stu-id="78584-112">Whether to check that characters are in the legal XML character set, as defined by W3C.</span></span>|<span data-ttu-id="78584-113">`true` 或 `false`</span><span class="sxs-lookup"><span data-stu-id="78584-113">`true` or `false`</span></span>|`true`|  
|<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>|<span data-ttu-id="78584-114">是否要檢查輸出是否格式正確的 XML 1.0 文件或片段。</span><span class="sxs-lookup"><span data-stu-id="78584-114">Whether to check that output is a well-formed XML 1.0 document or fragment.</span></span>|<span data-ttu-id="78584-115"><xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType> （文件層級）、 <xref:System.Xml.ConformanceLevel.Fragment> （片段層級），或<xref:System.Xml.ConformanceLevel.Auto>（自動偵測）</span><span class="sxs-lookup"><span data-stu-id="78584-115"><xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType> (document-level), <xref:System.Xml.ConformanceLevel.Fragment> (fragment-level), or <xref:System.Xml.ConformanceLevel.Auto> (auto-detection)</span></span>|<span data-ttu-id="78584-116"><xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType> （文件層級的一致性）</span><span class="sxs-lookup"><span data-stu-id="78584-116"><xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType> (document-level conformance)</span></span>|  
|<xref:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose%2A>|<span data-ttu-id="78584-117">是否要將結尾標記加入至所有未封閉的項目時<xref:System.Xml.XmlWriter.Close%2A>呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="78584-117">Whether to add closing tags to all unclosed elements when the <xref:System.Xml.XmlWriter.Close%2A> method is called.</span></span>|<span data-ttu-id="78584-118">`true` 或 `false`</span><span class="sxs-lookup"><span data-stu-id="78584-118">`true` or `false`</span></span>|`true`|  
  
 <span data-ttu-id="78584-119">若要指定輸出格式，請使用這些屬性：</span><span class="sxs-lookup"><span data-stu-id="78584-119">To specify output format, use these properties:</span></span>  
  
|<span data-ttu-id="78584-120">屬性</span><span class="sxs-lookup"><span data-stu-id="78584-120">Property</span></span>|<span data-ttu-id="78584-121">指定</span><span class="sxs-lookup"><span data-stu-id="78584-121">Specifies</span></span>|<span data-ttu-id="78584-122">值</span><span class="sxs-lookup"><span data-stu-id="78584-122">Value</span></span>|<span data-ttu-id="78584-123">預設</span><span class="sxs-lookup"><span data-stu-id="78584-123">Default</span></span>|  
|--------------|---------------|-----------|-------------|  
|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|<span data-ttu-id="78584-124">若要使用的編碼方式的文字。</span><span class="sxs-lookup"><span data-stu-id="78584-124">Text encoding to use.</span></span>|<span data-ttu-id="78584-125"><xref:System.Text.Encoding?displayProperty=nameWithType> 值</span><span class="sxs-lookup"><span data-stu-id="78584-125"><xref:System.Text.Encoding?displayProperty=nameWithType> value</span></span>|<xref:System.Text.Encoding.UTF8?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Indent%2A>|<span data-ttu-id="78584-126">是否要縮排項目</span><span class="sxs-lookup"><span data-stu-id="78584-126">Whether to indent elements</span></span>|<span data-ttu-id="78584-127">`true` 或 `false`</span><span class="sxs-lookup"><span data-stu-id="78584-127">`true` or `false`</span></span>|<span data-ttu-id="78584-128">`false` （沒有縮排）</span><span class="sxs-lookup"><span data-stu-id="78584-128">`false` (no indentation)</span></span>|  
|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|<span data-ttu-id="78584-129">字元縮排時使用的字串 (使用的時機<xref:System.Xml.XmlWriterSettings.Indent%2A>設為`true`)。</span><span class="sxs-lookup"><span data-stu-id="78584-129">Character string to use when indenting (used when <xref:System.Xml.XmlWriterSettings.Indent%2A> is set to `true`).</span></span>|<span data-ttu-id="78584-130">String</span><span class="sxs-lookup"><span data-stu-id="78584-130">String</span></span>|<span data-ttu-id="78584-131">兩個空格</span><span class="sxs-lookup"><span data-stu-id="78584-131">Two spaces</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|<span data-ttu-id="78584-132">要用於分行符號的字元字串。</span><span class="sxs-lookup"><span data-stu-id="78584-132">Character string to use for line breaks.</span></span>|<span data-ttu-id="78584-133">String</span><span class="sxs-lookup"><span data-stu-id="78584-133">String</span></span>|<span data-ttu-id="78584-134">`\r\n` （歸位字元、 換行字元）</span><span class="sxs-lookup"><span data-stu-id="78584-134">`\r\n` (carriage return, line feed)</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|<span data-ttu-id="78584-135">如何處理新行字元。</span><span class="sxs-lookup"><span data-stu-id="78584-135">How to handle newline characters.</span></span>|<span data-ttu-id="78584-136"><xref:System.Xml.NewLineHandling?displayProperty=nameWithType> 值： <xref:System.Xml.NewLineHandling.Entitize> （標準化） <xref:System.Xml.NewLineHandling.Replace> （取代），或<xref:System.Xml.NewLineHandling.None>（保持不變）</span><span class="sxs-lookup"><span data-stu-id="78584-136"><xref:System.Xml.NewLineHandling?displayProperty=nameWithType> value: <xref:System.Xml.NewLineHandling.Entitize> (normalize), <xref:System.Xml.NewLineHandling.Replace> (replace), or <xref:System.Xml.NewLineHandling.None> (leave unchanged)</span></span>|<span data-ttu-id="78584-137"><xref:System.Xml.NewLineHandling.Replace> (所指定的字元取代<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>)</span><span class="sxs-lookup"><span data-stu-id="78584-137"><xref:System.Xml.NewLineHandling.Replace> (replace with characters specified by <xref:System.Xml.XmlWriterSettings.NewLineChars%2A>)</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|<span data-ttu-id="78584-138">是否要在個別行上寫入屬性 (不含任何時生效<xref:System.Xml.XmlWriterSettings.Indent%2A>是`false`)。</span><span class="sxs-lookup"><span data-stu-id="78584-138">Whether to write attributes on individual lines (has no effect when <xref:System.Xml.XmlWriterSettings.Indent%2A> is `false`).</span></span>|<span data-ttu-id="78584-139">`true` 或 `false`</span><span class="sxs-lookup"><span data-stu-id="78584-139">`true` or `false`</span></span>|`false`|  
|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|<span data-ttu-id="78584-140">是否要寫入 XML 宣告。</span><span class="sxs-lookup"><span data-stu-id="78584-140">Whether to write an XML declaration.</span></span>|<span data-ttu-id="78584-141">`true` 或 `false`</span><span class="sxs-lookup"><span data-stu-id="78584-141">`true` or `false`</span></span>|`false`|  
  
   
  
## Examples  
 <span data-ttu-id="78584-142">下列範例會建立<xref:System.Xml.XmlWriter>，寫入至 XML 檔案，並寫入新行上的每個屬性。</span><span class="sxs-lookup"><span data-stu-id="78584-142">The following example creates an <xref:System.Xml.XmlWriter> that writes to an XML file and writes each attribute on a new line.</span></span>  
  
 [!code-csharp[XmlWriterSettings.NewLineOnAttributes#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.NewLineOnAttributes/CS/writenewlineattrs.cs#1)]
 [!code-vb[XmlWriterSettings.NewLineOnAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.NewLineOnAttributes/VB/writenewlineattrs.vb#1)]  
  
 <span data-ttu-id="78584-143">此範例會產生下列輸出：</span><span class="sxs-lookup"><span data-stu-id="78584-143">The sample produces the following output:</span></span>  
  
```xml  
<order  
  orderID="367A54"  
  date="2001-05-03">  
  <price>19.95</price>  
</order>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlWriterSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriterSettings.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlWriterSettings();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="78584-144">初始化 <see cref="T:System.Xml.XmlWriterSettings" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="78584-144">Initializes a new instance of the <see cref="T:System.Xml.XmlWriterSettings" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78584-145">下表顯示的執行個體的初始屬性值<xref:System.Xml.XmlWriterSettings>。</span><span class="sxs-lookup"><span data-stu-id="78584-145">The following table shows initial property values for an instance of <xref:System.Xml.XmlWriterSettings>.</span></span>  
  
|<span data-ttu-id="78584-146">屬性</span><span class="sxs-lookup"><span data-stu-id="78584-146">Property</span></span>|<span data-ttu-id="78584-147">初始值</span><span class="sxs-lookup"><span data-stu-id="78584-147">Initial Value</span></span>|  
|--------------|-------------------|  
|<xref:System.Xml.XmlWriterSettings.Async%2A>|<span data-ttu-id="78584-148">`false`.</span><span class="sxs-lookup"><span data-stu-id="78584-148">`false`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>|<span data-ttu-id="78584-149">`true`.</span><span class="sxs-lookup"><span data-stu-id="78584-149">`true`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.CloseOutput%2A>|<span data-ttu-id="78584-150">`false`.</span><span class="sxs-lookup"><span data-stu-id="78584-150">`false`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>|<span data-ttu-id="78584-151"><xref:System.Xml.ConformanceLevel.Document>.</span><span class="sxs-lookup"><span data-stu-id="78584-151"><xref:System.Xml.ConformanceLevel.Document>.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|<span data-ttu-id="78584-152">`Encoding.UTF8`.</span><span class="sxs-lookup"><span data-stu-id="78584-152">`Encoding.UTF8`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.Indent%2A>|<span data-ttu-id="78584-153">`false`.</span><span class="sxs-lookup"><span data-stu-id="78584-153">`false`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|<span data-ttu-id="78584-154">兩個空格。</span><span class="sxs-lookup"><span data-stu-id="78584-154">Two spaces.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|<span data-ttu-id="78584-155">`\r\n` （歸位字元、 新行）。</span><span class="sxs-lookup"><span data-stu-id="78584-155">`\r\n` (carriage return, new line).</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|<span data-ttu-id="78584-156"><xref:System.Xml.NewLineHandling.Replace>.</span><span class="sxs-lookup"><span data-stu-id="78584-156"><xref:System.Xml.NewLineHandling.Replace>.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|<span data-ttu-id="78584-157">`false`.</span><span class="sxs-lookup"><span data-stu-id="78584-157">`false`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|<span data-ttu-id="78584-158">`false`.</span><span class="sxs-lookup"><span data-stu-id="78584-158">`false`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose%2A>|<span data-ttu-id="78584-159">`true`.</span><span class="sxs-lookup"><span data-stu-id="78584-159">`true`.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="78584-160">下列範例會建立<xref:System.Xml.XmlWriter>用於縮排的定位點字元的物件。</span><span class="sxs-lookup"><span data-stu-id="78584-160">The following example creates an <xref:System.Xml.XmlWriter> object that uses the TAB character for indentation.</span></span>  
  
 [!code-csharp[XmlWriterSettings.Indent#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.Indent/CS/writeindent.cs#1)]
 [!code-vb[XmlWriterSettings.Indent#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.Indent/VB/writeindent.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Async">
      <MemberSignature Language="C#" Value="public bool Async { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Async" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.Async" />
      <MemberSignature Language="VB.NET" Value="Public Property Async As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Async { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Async : bool with get, set" Usage="System.Xml.XmlWriterSettings.Async" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="78584-161">取得或設定值，指出非同步 <see cref="T:System.Xml.XmlWriter" /> 方法是否可以用於特定 <see cref="T:System.Xml.XmlWriter" /> 執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="78584-161">Gets or sets a value that indicates whether asynchronous <see cref="T:System.Xml.XmlWriter" /> methods can be used on a particular <see cref="T:System.Xml.XmlWriter" /> instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="78584-162">如果可以使用非同步方法，則為 <see langword="true" />，否則為<see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="78584-162">
              <see langword="true" /> if asynchronous methods can be used; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78584-163">您必須將此值設定為`true`當您建立新<xref:System.Xml.XmlWriter>執行個體，如果您想要使用非同步<xref:System.Xml.XmlWriter>該執行個體上的方法。</span><span class="sxs-lookup"><span data-stu-id="78584-163">You must set this value to `true` when you create a new <xref:System.Xml.XmlWriter> instance if you want to use asynchronous <xref:System.Xml.XmlWriter> methods on that instance.</span></span> <span data-ttu-id="78584-164">在後<xref:System.Xml.XmlWriter>會建立執行個體，<xref:System.Xml.XmlWriterSettings.Async%2A>屬性是唯讀的。</span><span class="sxs-lookup"><span data-stu-id="78584-164">After the <xref:System.Xml.XmlWriter> instance is created, the <xref:System.Xml.XmlWriterSettings.Async%2A> property is read-only.</span></span> <span data-ttu-id="78584-165">此屬性的預設值為 `false`。</span><span class="sxs-lookup"><span data-stu-id="78584-165">The default value of this property is `false`.</span></span>  
  
 <span data-ttu-id="78584-166">這個旗標會忽略<xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType>多載。</span><span class="sxs-lookup"><span data-stu-id="78584-166">This flag is ignored by the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> overload.</span></span> <span data-ttu-id="78584-167">這表示，如果您建立新<xref:System.Xml.XmlWriter>根據現有<xref:System.Xml.XmlWriter>，取決於輸入的非同步行為<xref:System.Xml.XmlWriter>，而且您無法使用<xref:System.Xml.XmlWriterSettings.Async%2A>變更非同步行為的旗標。</span><span class="sxs-lookup"><span data-stu-id="78584-167">This means that if you create a new <xref:System.Xml.XmlWriter> based on an existing <xref:System.Xml.XmlWriter>, the async behavior depends on the input <xref:System.Xml.XmlWriter>, and you cannot use the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to change the async behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7">
          <span data-ttu-id="78584-168">使用 Async 和 Await 設計非同步程式 (C# 和 Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="78584-168">Asynchronous Programming with Async and Await (C# and Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="CheckCharacters">
      <MemberSignature Language="C#" Value="public bool CheckCharacters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CheckCharacters" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.CheckCharacters" />
      <MemberSignature Language="VB.NET" Value="Public Property CheckCharacters As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CheckCharacters { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CheckCharacters : bool with get, set" Usage="System.Xml.XmlWriterSettings.CheckCharacters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="78584-169">取得或設定值，這個值表示 XML 寫入器是否應該檢查以確定文件中的所有字元都符合 W3C [XML 1.0 Recommendation](https://www.w3.org/TR/REC-xml/#charsets) 中的 "2.2 Characters" 一節。</span>
          <span class="sxs-lookup">
            <span data-stu-id="78584-169">Gets or sets a value that indicates whether the XML writer should check to ensure that all characters in the document conform to the "2.2 Characters" section of the W3C [XML 1.0 Recommendation](https://www.w3.org/TR/REC-xml/#charsets).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="78584-170">
            <see langword="true" /> 表示執行字元檢查，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="78584-170">
              <see langword="true" /> to do character checking; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="78584-171">預設值為 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="78584-171">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78584-172">如果<xref:System.Xml.XmlWriter>物件支援的字元檢查，它會擲回例外狀況，W3C 的 < 2.2 字元 > 一節所指定的合法 XML 字元範圍以外的任何字元是否[XML 1.0 建議事項](https://www.w3.org/TR/REC-xml/#charsets)。</span><span class="sxs-lookup"><span data-stu-id="78584-172">If the <xref:System.Xml.XmlWriter> object supports character checking, it throws an exception if any characters are outside the range of legal XML characters specified by the "2.2 Characters" section of the W3C [XML 1.0 Recommendation](https://www.w3.org/TR/REC-xml/#charsets).</span></span>  
  
 <span data-ttu-id="78584-173">字元檢查不包括檢查 XML 名稱中不合法的字元，或檢查所有的 XML 名稱有效。</span><span class="sxs-lookup"><span data-stu-id="78584-173">Character checking does not include checking for illegal characters in XML names or checking that all XML names are valid.</span></span> <span data-ttu-id="78584-174">這些檢查是一致性檢查的一部分，並且一律會執行。</span><span class="sxs-lookup"><span data-stu-id="78584-174">These checks are part of conformance checking and are always performed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Xml.XmlWriterSettings Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlWriterSettings Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriterSettings.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As XmlWriterSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlWriterSettings ^ Clone();" />
      <MemberSignature Language="F#" Value="member this.Clone : unit -&gt; System.Xml.XmlWriterSettings" Usage="xmlWriterSettings.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriterSettings</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="78584-175">建立 <see cref="T:System.Xml.XmlWriterSettings" /> 執行個體的複本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="78584-175">Creates a copy of the <see cref="T:System.Xml.XmlWriterSettings" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="78584-176">複製的 <see cref="T:System.Xml.XmlWriterSettings" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="78584-176">The cloned <see cref="T:System.Xml.XmlWriterSettings" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78584-177">複製<xref:System.Xml.XmlWriterSettings>可以修改物件，而不會影響原始物件上的設定。</span><span class="sxs-lookup"><span data-stu-id="78584-177">The cloned <xref:System.Xml.XmlWriterSettings> object can be modified without affecting the settings on the original object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseOutput">
      <MemberSignature Language="C#" Value="public bool CloseOutput { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CloseOutput" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.CloseOutput" />
      <MemberSignature Language="VB.NET" Value="Public Property CloseOutput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CloseOutput { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CloseOutput : bool with get, set" Usage="System.Xml.XmlWriterSettings.CloseOutput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="78584-178">取得或設定值，指出呼叫 <see cref="T:System.Xml.XmlWriter" /> 方法時，<see cref="T:System.IO.TextWriter" /> 是否也應該關閉基礎資料流或 <see cref="M:System.Xml.XmlWriter.Close" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="78584-178">Gets or sets a value indicating whether the <see cref="T:System.Xml.XmlWriter" /> should also close the underlying stream or <see cref="T:System.IO.TextWriter" /> when the <see cref="M:System.Xml.XmlWriter.Close" /> method is called.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="78584-179">
            <see langword="true" /> 表示也關閉基礎資料流或 <see cref="T:System.IO.TextWriter" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="78584-179">
              <see langword="true" /> to also close the underlying stream or <see cref="T:System.IO.TextWriter" />; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="78584-180">預設值為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="78584-180">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78584-181">當您想要寫入 XML 資料流，然後將額外的資訊新增至後資料流結尾時，此設定非常有用<xref:System.Xml.XmlWriter>已完成寫入。</span><span class="sxs-lookup"><span data-stu-id="78584-181">This setting is useful when you wish to write XML to a stream, and then add extra information to the end of the stream after the <xref:System.Xml.XmlWriter> has finished writing.</span></span>  
  
 <span data-ttu-id="78584-182">此屬性只適用於<xref:System.Xml.XmlWriter>輸出 XML 的執行個體內容的資料流或<xref:System.IO.TextWriter>，否則會忽略此設定。</span><span class="sxs-lookup"><span data-stu-id="78584-182">This property only applies to <xref:System.Xml.XmlWriter> instances that output XML content to a stream or <xref:System.IO.TextWriter>; otherwise, this setting is ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="78584-183">下列範例會將 XML 片段寫入記憶體資料流。</span><span class="sxs-lookup"><span data-stu-id="78584-183">The following example writes an XML fragment to a memory stream.</span></span>  
  
 [!code-csharp[XmlWriterSettings.CloseOutput#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.CloseOutput/CS/writestream2.cs#1)]
 [!code-vb[XmlWriterSettings.CloseOutput#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.CloseOutput/VB/writestream2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConformanceLevel">
      <MemberSignature Language="C#" Value="public System.Xml.ConformanceLevel ConformanceLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.ConformanceLevel ConformanceLevel" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.ConformanceLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property ConformanceLevel As ConformanceLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::ConformanceLevel ConformanceLevel { System::Xml::ConformanceLevel get(); void set(System::Xml::ConformanceLevel value); };" />
      <MemberSignature Language="F#" Value="member this.ConformanceLevel : System.Xml.ConformanceLevel with get, set" Usage="System.Xml.XmlWriterSettings.ConformanceLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.ConformanceLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="78584-184">取得或設定 XML 寫入器檢查 XML 輸出的一致性層級。</span>
          <span class="sxs-lookup">
            <span data-stu-id="78584-184">Gets or sets the level of conformance that the XML writer checks the XML output for.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="78584-185">其中一個指定一致性層級 (文件、片段或自動偵測) 的列舉值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="78584-185">One of the enumeration values that specifies the level of conformance (document, fragment, or automatic detection).</span>
          </span>
          <span data-ttu-id="78584-186">預設值為 <see cref="F:System.Xml.ConformanceLevel.Document" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="78584-186">The default is <see cref="F:System.Xml.ConformanceLevel.Document" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78584-187"><xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A?displayProperty=nameWithType>屬性會設定 XML 寫入器，以檢查並確保所寫入的資料流遵守一組特定規則。</span><span class="sxs-lookup"><span data-stu-id="78584-187">The <xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A?displayProperty=nameWithType> property configures the XML writer to check and guarantee that the stream being written complies with a certain set of rules.</span></span> <span data-ttu-id="78584-188">XML 資料可以檢查以查看它符合格式正確的 XML 1.0 文件或文件片段的規則。</span><span class="sxs-lookup"><span data-stu-id="78584-188">The XML data can be checked to see that it conforms to the rules for a well-formed XML 1.0 document or a document fragment.</span></span> <span data-ttu-id="78584-189">下表描述三個設定。</span><span class="sxs-lookup"><span data-stu-id="78584-189">The following table describes the three settings.</span></span> <span data-ttu-id="78584-190">預設為文件層級一致性。</span><span class="sxs-lookup"><span data-stu-id="78584-190">The default is document-level conformance.</span></span>  
  
|<span data-ttu-id="78584-191">設定</span><span class="sxs-lookup"><span data-stu-id="78584-191">Setting</span></span>|<span data-ttu-id="78584-192">描述</span><span class="sxs-lookup"><span data-stu-id="78584-192">Description</span></span>|  
|-------------|-----------------|  
|<xref:System.Xml.ConformanceLevel.Document>|<span data-ttu-id="78584-193">可確保 XML 輸出符合[語式正確的 XML 1.0 文件規則](https://www.w3.org/TR/REC-xml/#sec-well-formed)，並且可以處理任何符合的處理器。</span><span class="sxs-lookup"><span data-stu-id="78584-193">Ensures that the XML output conforms to the [rules for a well-formed XML 1.0 document](https://www.w3.org/TR/REC-xml/#sec-well-formed) and can be processed by any conforming processor.</span></span><br /><br /> <span data-ttu-id="78584-194">文件一致性檢查包含大部分的片段層級檢查，並也請確定下列：</span><span class="sxs-lookup"><span data-stu-id="78584-194">The document conformance checks include most of the fragment-level checks and also ensure the following:</span></span><br /><br /> <span data-ttu-id="78584-195">-最上層項目沒有 XML 宣告、 DTD、 項目、 註解、 泛空白字元或處理指示以外的任何節點。</span><span class="sxs-lookup"><span data-stu-id="78584-195">-   The top-level item doesn't have any nodes other than XML Declaration, DTD, element, comment, white space, or processing instruction.</span></span><br /><span data-ttu-id="78584-196">-XML 資料都只能有一個最上層項目節點。</span><span class="sxs-lookup"><span data-stu-id="78584-196">-   The XML data has one and only one top-level element node.</span></span><br /><br /> <span data-ttu-id="78584-197">XML 寫入器不會剖析 DTD 資訊寫入。</span><span class="sxs-lookup"><span data-stu-id="78584-197">The XML writer doesn't parse DTD information that is written.</span></span> <span data-ttu-id="78584-198">使用者會負責確保 DTD 格式正確的。</span><span class="sxs-lookup"><span data-stu-id="78584-198">The user is responsible for ensuring that the DTD is well-formed.</span></span>|  
|<xref:System.Xml.ConformanceLevel.Fragment>|<span data-ttu-id="78584-199">可確保 XML 輸出符合[語式正確的 XML 1.0 文件片段的規則](https://www.w3.org/TR/REC-xml/#wf-entities)。</span><span class="sxs-lookup"><span data-stu-id="78584-199">Ensures that the XML output conforms to the [rules for a well-formed XML 1.0 document fragment](https://www.w3.org/TR/REC-xml/#wf-entities).</span></span><br /><br /> <span data-ttu-id="78584-200">此設定可接受的最上層有多個根項目或文字節點的 XML 資料。</span><span class="sxs-lookup"><span data-stu-id="78584-200">This setting accepts XML data that has multiple root elements or text nodes at the top level.</span></span> <span data-ttu-id="78584-201">此檢查層級可確保任何處理器都可使用做為 XML 1.0 外部剖析實體讀取的資料流。</span><span class="sxs-lookup"><span data-stu-id="78584-201">This level of checking ensures that any processor can consume the stream being read as an XML 1.0 external parsed entity.</span></span><br /><br /> <span data-ttu-id="78584-202">在文件片段，不允許 DTD 資訊。</span><span class="sxs-lookup"><span data-stu-id="78584-202">DTD information isn't allowed in document fragments.</span></span>|  
|<xref:System.Xml.ConformanceLevel.Auto>|<span data-ttu-id="78584-203">指定的 XML 寫入器應該決定根據內送資料的一致性檢查的層級。</span><span class="sxs-lookup"><span data-stu-id="78584-203">Specifies that the XML writer should determine the level of conformance checking based on the incoming data.</span></span> <span data-ttu-id="78584-204">當您不知道是否格式正確的 XML 文件或片段，將會產生的 XML 時，此設定很有用。</span><span class="sxs-lookup"><span data-stu-id="78584-204">This setting can be useful when you don't know whether the generated XML will be a well-formed XML document or a fragment.</span></span><br /><br /> <span data-ttu-id="78584-205">文件一致性檢查適用於下列情況：</span><span class="sxs-lookup"><span data-stu-id="78584-205">Document conformance checking is applied in the following cases:</span></span><br /><br /> <span data-ttu-id="78584-206">-如果<xref:System.Xml.XmlWriter.WriteStartDocument%2A>呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="78584-206">-   If the <xref:System.Xml.XmlWriter.WriteStartDocument%2A> method is called.</span></span><br /><span data-ttu-id="78584-207">-如果寫入 DTD 資訊。</span><span class="sxs-lookup"><span data-stu-id="78584-207">-   If DTD information is written.</span></span><br /><br /> <span data-ttu-id="78584-208">如果 XML 資料包含其中一種，則會套用片段一致性檢查：</span><span class="sxs-lookup"><span data-stu-id="78584-208">Fragment conformance checking is applied if the XML data contains one of these:</span></span><br /><br /> <span data-ttu-id="78584-209">根層級的文字、 CDATA 或 EntityReference 節點。</span><span class="sxs-lookup"><span data-stu-id="78584-209">-   Text, CDATA, or EntityReference node at the root level.</span></span><br /><span data-ttu-id="78584-210">-多個項目根層級。</span><span class="sxs-lookup"><span data-stu-id="78584-210">-   More than one element at the root level.</span></span><br /><span data-ttu-id="78584-211">-沒有根層級的項目。</span><span class="sxs-lookup"><span data-stu-id="78584-211">-   No element at the root level.</span></span><br /><br /> <span data-ttu-id="78584-212">如果出現衝突 (如當您嘗試在根層級寫入 Text 節點及 DTD 時)，則會擲回 <xref:System.Xml.XmlException>。</span><span class="sxs-lookup"><span data-stu-id="78584-212">An <xref:System.Xml.XmlException> is thrown if there is a conflict, such as when you try to write a text node and a DTD at the root level.</span></span><br /><br /> <span data-ttu-id="78584-213">如果您包裝其他<xref:System.Xml.XmlWriter>物件，則外部物件不會執行任何其他的一致性檢查，這會保留給基礎的物件。</span><span class="sxs-lookup"><span data-stu-id="78584-213">If you are wrapping another <xref:System.Xml.XmlWriter> object, the outer object doesn't do any additional conformance checking; this is left to the underlying object.</span></span>|  
  
 <span data-ttu-id="78584-214">如果 XML 寫入器偵測到違反指定的一致性層級的任何資訊，它會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="78584-214">If the XML writer detects any information that would violate the specified level of conformance, it throws an exception.</span></span> <span data-ttu-id="78584-215">在某些情況下，XML 寫入器會自動修正一致性錯誤。</span><span class="sxs-lookup"><span data-stu-id="78584-215">In some cases, the XML writer automatically corrects the conformance error.</span></span> <span data-ttu-id="78584-216">比方說，寫入器會關閉未封閉的屬性，而不擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="78584-216">For example, the writer closes an unclosed attribute without throwing an exception.</span></span> <span data-ttu-id="78584-217">下表顯示不同的合規性違規的處理中的每個設定。</span><span class="sxs-lookup"><span data-stu-id="78584-217">The following table shows how various conformance violations are handled in each setting.</span></span>  
  
|<span data-ttu-id="78584-218">條件</span><span class="sxs-lookup"><span data-stu-id="78584-218">Condition</span></span>|<xref:System.Xml.ConformanceLevel.Document>|<xref:System.Xml.ConformanceLevel.Fragment>|<xref:System.Xml.ConformanceLevel.Auto>|  
|---------------|---------------------------------------------------------------------------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------|  
|<span data-ttu-id="78584-219">找到的 DTD 資訊。</span><span class="sxs-lookup"><span data-stu-id="78584-219">DTD information is found.</span></span>|<span data-ttu-id="78584-220">不是違反這項設定。</span><span class="sxs-lookup"><span data-stu-id="78584-220">Not a violation for this setting.</span></span> <span data-ttu-id="78584-221">不過，XML 寫入器並不會檢查 DTD;使用者必須確保 DTD 格式正確。</span><span class="sxs-lookup"><span data-stu-id="78584-221">However, the XML writer doesn't check the DTD; the user must ensure that the DTD is well-formed.</span></span>|<span data-ttu-id="78584-222"><xref:System.Xml.XmlException> 會擲回。</span><span class="sxs-lookup"><span data-stu-id="78584-222"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="78584-223">套用文件一致性檢查。</span><span class="sxs-lookup"><span data-stu-id="78584-223">Document conformance checking is applied.</span></span>|  
|<span data-ttu-id="78584-224">呼叫 <xref:System.Xml.XmlWriter.WriteStartDocument%2A>。</span><span class="sxs-lookup"><span data-stu-id="78584-224"><xref:System.Xml.XmlWriter.WriteStartDocument%2A> is called.</span></span>|<span data-ttu-id="78584-225">不會視為違規情形，這項設定。</span><span class="sxs-lookup"><span data-stu-id="78584-225">Not considered a violation for this setting.</span></span>|<span data-ttu-id="78584-226"><xref:System.Xml.XmlException> 會擲回。</span><span class="sxs-lookup"><span data-stu-id="78584-226"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="78584-227">套用文件一致性檢查。</span><span class="sxs-lookup"><span data-stu-id="78584-227">Document conformance checking is applied.</span></span>|  
|<span data-ttu-id="78584-228">多次呼叫 <xref:System.Xml.XmlWriter.WriteStartDocument%2A>。</span><span class="sxs-lookup"><span data-stu-id="78584-228"><xref:System.Xml.XmlWriter.WriteStartDocument%2A> is called multiple times.</span></span>|<span data-ttu-id="78584-229"><xref:System.Xml.XmlException> 會擲回。</span><span class="sxs-lookup"><span data-stu-id="78584-229"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="78584-230"><xref:System.Xml.XmlException> 會擲回。</span><span class="sxs-lookup"><span data-stu-id="78584-230"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="78584-231"><xref:System.Xml.XmlException> 會擲回。</span><span class="sxs-lookup"><span data-stu-id="78584-231"><xref:System.Xml.XmlException> is thrown.</span></span>|  
|<span data-ttu-id="78584-232">文字值會出現在最高層級 （不是下方的項目或屬性的節點）。</span><span class="sxs-lookup"><span data-stu-id="78584-232">A text value appears at the top level (not below an element or attribute node).</span></span>|<span data-ttu-id="78584-233"><xref:System.Xml.XmlException> 會擲回。</span><span class="sxs-lookup"><span data-stu-id="78584-233"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="78584-234">不會視為違規。</span><span class="sxs-lookup"><span data-stu-id="78584-234">Not considered a violation.</span></span>|<span data-ttu-id="78584-235">套用片段一致性檢查。</span><span class="sxs-lookup"><span data-stu-id="78584-235">Fragment conformance checking is applied.</span></span>|  
|<span data-ttu-id="78584-236">多個項目或沒有項目會出現在最上層。</span><span class="sxs-lookup"><span data-stu-id="78584-236">Multiple elements or no elements appear at the top level.</span></span>|<span data-ttu-id="78584-237"><xref:System.Xml.XmlException> 會擲回。</span><span class="sxs-lookup"><span data-stu-id="78584-237"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="78584-238">不會視為違規。</span><span class="sxs-lookup"><span data-stu-id="78584-238">Not considered a violation.</span></span>|<span data-ttu-id="78584-239">套用片段一致性檢查。</span><span class="sxs-lookup"><span data-stu-id="78584-239">Fragment conformance checking is applied.</span></span>|  
|<span data-ttu-id="78584-240">最上層項目是泛空白字元。</span><span class="sxs-lookup"><span data-stu-id="78584-240">Top-level item is white space.</span></span>|<span data-ttu-id="78584-241">不會視為違規。</span><span class="sxs-lookup"><span data-stu-id="78584-241">Not considered a violation.</span></span>|<span data-ttu-id="78584-242">不會視為違規。</span><span class="sxs-lookup"><span data-stu-id="78584-242">Not considered a violation.</span></span>|<span data-ttu-id="78584-243">不會視為違規。</span><span class="sxs-lookup"><span data-stu-id="78584-243">Not considered a violation.</span></span>|  
|<span data-ttu-id="78584-244"><xref:System.Xml.XmlWriter.WriteEndAttribute%2A> 不被呼叫來結束屬性節點。</span><span class="sxs-lookup"><span data-stu-id="78584-244"><xref:System.Xml.XmlWriter.WriteEndAttribute%2A> isn't called to end an attribute node.</span></span>|<span data-ttu-id="78584-245">修正 XML 寫入器。</span><span class="sxs-lookup"><span data-stu-id="78584-245">Fixed by XML writer.</span></span>|<span data-ttu-id="78584-246">修正 XML 寫入器。</span><span class="sxs-lookup"><span data-stu-id="78584-246">Fixed by XML writer.</span></span>|<span data-ttu-id="78584-247">修正 XML 寫入器。</span><span class="sxs-lookup"><span data-stu-id="78584-247">Fixed by XML writer.</span></span>|  
|<span data-ttu-id="78584-248">XML 寫入器處於不正確的巢狀狀態 (例如<xref:System.Xml.XmlWriter.WriteStartElement%2A>呼叫後面<xref:System.Xml.XmlWriter.WriteEndAttribute%2A>)。</span><span class="sxs-lookup"><span data-stu-id="78584-248">The XML writer is in an improperly nested state (for example, a <xref:System.Xml.XmlWriter.WriteStartElement%2A> call is followed by a <xref:System.Xml.XmlWriter.WriteEndAttribute%2A>).</span></span>|<span data-ttu-id="78584-249"><xref:System.Xml.XmlException> 會擲回。</span><span class="sxs-lookup"><span data-stu-id="78584-249"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="78584-250"><xref:System.Xml.XmlException> 會擲回。</span><span class="sxs-lookup"><span data-stu-id="78584-250"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="78584-251"><xref:System.Xml.XmlException> 會擲回。</span><span class="sxs-lookup"><span data-stu-id="78584-251"><xref:System.Xml.XmlException> is thrown.</span></span>|  
|<span data-ttu-id="78584-252">最上層的項目是屬性。</span><span class="sxs-lookup"><span data-stu-id="78584-252">Top-level item is an attribute.</span></span>|<span data-ttu-id="78584-253"><xref:System.Xml.XmlException> 會擲回。</span><span class="sxs-lookup"><span data-stu-id="78584-253"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="78584-254"><xref:System.Xml.XmlException> 會擲回。</span><span class="sxs-lookup"><span data-stu-id="78584-254"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="78584-255"><xref:System.Xml.XmlException> 會擲回。</span><span class="sxs-lookup"><span data-stu-id="78584-255"><xref:System.Xml.XmlException> is thrown.</span></span>|  
|<span data-ttu-id="78584-256">找到多個連續的文字節點。</span><span class="sxs-lookup"><span data-stu-id="78584-256">Multiple, contiguous text nodes are found.</span></span>|<span data-ttu-id="78584-257">不被視為發生違規，但要串連文字節點之使用者的責任。</span><span class="sxs-lookup"><span data-stu-id="78584-257">Not considered a violation, but it's the responsibility of the user to concatenate the text nodes.</span></span>|<span data-ttu-id="78584-258">不被視為發生違規，但要串連文字節點之使用者的責任。</span><span class="sxs-lookup"><span data-stu-id="78584-258">Not considered a violation, but it's the responsibility of the user to concatenate the text nodes.</span></span>|<span data-ttu-id="78584-259">不被視為發生違規，但要串連文字節點之使用者的責任。</span><span class="sxs-lookup"><span data-stu-id="78584-259">Not considered a violation, but it's the responsibility of the user to concatenate the text nodes.</span></span>|  
|<span data-ttu-id="78584-260">同一命名空間前置詞在一個項目中宣告兩次。</span><span class="sxs-lookup"><span data-stu-id="78584-260">The same namespace prefix is declared twice in an element.</span></span>|<span data-ttu-id="78584-261">XML 寫入器會產生新的前置詞，第二個命名空間。</span><span class="sxs-lookup"><span data-stu-id="78584-261">The XML writer generates a new prefix for the second namespace.</span></span>|<span data-ttu-id="78584-262">XML 寫入器會產生新的前置詞，第二個命名空間。</span><span class="sxs-lookup"><span data-stu-id="78584-262">The XML writer generates a new prefix for the second namespace.</span></span>|<span data-ttu-id="78584-263">XML 寫入器會產生新的前置詞，第二個命名空間。</span><span class="sxs-lookup"><span data-stu-id="78584-263">The XML writer generates a new prefix for the second namespace.</span></span>|  
|<span data-ttu-id="78584-264"><xref:System.Xml.XmlWriter.WriteStartElement%2A> 指定前置詞並在該範圍內未宣告的命名空間或前置詞是不同的命名空間相關聯。</span><span class="sxs-lookup"><span data-stu-id="78584-264"><xref:System.Xml.XmlWriter.WriteStartElement%2A> specifies a prefix and a namespace that isn't declared within that scope, or the prefix is associated with a different namespace.</span></span>|<span data-ttu-id="78584-265">XML 寫入器寫入必要的命名空間節點。</span><span class="sxs-lookup"><span data-stu-id="78584-265">The XML writer writes the necessary namespace node.</span></span>|<span data-ttu-id="78584-266">XML 寫入器寫入必要的命名空間節點。</span><span class="sxs-lookup"><span data-stu-id="78584-266">The XML writer writes the necessary namespace node.</span></span>|<span data-ttu-id="78584-267">XML 寫入器寫入必要的命名空間節點。</span><span class="sxs-lookup"><span data-stu-id="78584-267">The XML writer writes the necessary namespace node.</span></span>|  
|<span data-ttu-id="78584-268"><xref:System.Xml.XmlWriter.WriteStartAttribute%2A> 指定前置詞和命名空間中，不該範圍內宣告。</span><span class="sxs-lookup"><span data-stu-id="78584-268"><xref:System.Xml.XmlWriter.WriteStartAttribute%2A> specifies a prefix and a namespace that isn't declared within that scope.</span></span>|<span data-ttu-id="78584-269">XML 寫入器寫入必要的命名空間節點。</span><span class="sxs-lookup"><span data-stu-id="78584-269">The XML writer writes the necessary namespace node.</span></span>|<span data-ttu-id="78584-270">XML 寫入器寫入必要的命名空間節點。</span><span class="sxs-lookup"><span data-stu-id="78584-270">The XML writer writes the necessary namespace node.</span></span>|<span data-ttu-id="78584-271">XML 寫入器寫入必要的命名空間節點。</span><span class="sxs-lookup"><span data-stu-id="78584-271">The XML writer writes the necessary namespace node.</span></span>|  
|<span data-ttu-id="78584-272"><xref:System.Xml.XmlWriter.WriteStartAttribute%2A> 指定前置詞和命名空間，但前置詞為不同的範圍內命名空間相關聯。</span><span class="sxs-lookup"><span data-stu-id="78584-272"><xref:System.Xml.XmlWriter.WriteStartAttribute%2A> specifies a prefix and a namespace, but the prefix is associated with a different in-scope namespace.</span></span>|<span data-ttu-id="78584-273">XML 寫入器會忽略指定的前置詞，並尋找正確的前置詞或產生新的前置詞。</span><span class="sxs-lookup"><span data-stu-id="78584-273">The XML writer ignores the specified prefix and either looks up the correct prefix or generates a new prefix.</span></span>|<span data-ttu-id="78584-274">XML 寫入器會忽略指定的前置詞，並尋找正確的前置詞或產生新的前置詞。</span><span class="sxs-lookup"><span data-stu-id="78584-274">The XML writer ignores the specified prefix and either looks up the correct prefix or generates a new prefix.</span></span>|<span data-ttu-id="78584-275">XML 寫入器會忽略指定的前置詞，並尋找正確的前置詞或產生新的前置詞。</span><span class="sxs-lookup"><span data-stu-id="78584-275">The XML writer ignores the specified prefix and either looks up the correct prefix or generates a new prefix.</span></span>|  
|<span data-ttu-id="78584-276"><xref:System.Xml.XmlWriter.WriteQualifiedName%2A> 用來撰寫使用不存在的命名空間範圍內的項目內容。</span><span class="sxs-lookup"><span data-stu-id="78584-276"><xref:System.Xml.XmlWriter.WriteQualifiedName%2A> is used to write element content by using a namespace that doesn't exist within the scope.</span></span>|<span data-ttu-id="78584-277"><xref:System.Xml.XmlException> 會擲回。</span><span class="sxs-lookup"><span data-stu-id="78584-277"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="78584-278"><xref:System.Xml.XmlException> 會擲回。</span><span class="sxs-lookup"><span data-stu-id="78584-278"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="78584-279"><xref:System.Xml.XmlException> 會擲回。</span><span class="sxs-lookup"><span data-stu-id="78584-279"><xref:System.Xml.XmlException> is thrown.</span></span>|  
|<span data-ttu-id="78584-280"><xref:System.Xml.XmlWriter.WriteQualifiedName%2A> 用來撰寫屬性內容範圍內使用並不存在的命名空間。</span><span class="sxs-lookup"><span data-stu-id="78584-280"><xref:System.Xml.XmlWriter.WriteQualifiedName%2A> is used to write attribute content by using a namespace that doesn't exist within the scope.</span></span>|<span data-ttu-id="78584-281">XML 寫入器寫入必要的命名空間宣告。</span><span class="sxs-lookup"><span data-stu-id="78584-281">The XML writer writes the necessary namespace declaration.</span></span>|<span data-ttu-id="78584-282">XML 寫入器寫入必要的命名空間宣告。</span><span class="sxs-lookup"><span data-stu-id="78584-282">The XML writer writes the necessary namespace declaration.</span></span>|<span data-ttu-id="78584-283">XML 寫入器寫入必要的命名空間宣告。</span><span class="sxs-lookup"><span data-stu-id="78584-283">The XML writer writes the necessary namespace declaration.</span></span>|  
|<span data-ttu-id="78584-284">`xml:space`屬性不包含有效的值。</span><span class="sxs-lookup"><span data-stu-id="78584-284">The `xml:space` attribute doesn't contain a valid value.</span></span>|<span data-ttu-id="78584-285"><xref:System.Xml.XmlException> 會擲回。</span><span class="sxs-lookup"><span data-stu-id="78584-285"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="78584-286"><xref:System.Xml.XmlException> 會擲回。</span><span class="sxs-lookup"><span data-stu-id="78584-286"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="78584-287"><xref:System.Xml.XmlException> 會擲回。</span><span class="sxs-lookup"><span data-stu-id="78584-287"><xref:System.Xml.XmlException> is thrown.</span></span>|  
|<span data-ttu-id="78584-288">發現無效的名稱。</span><span class="sxs-lookup"><span data-stu-id="78584-288">An invalid name is encountered.</span></span>|<span data-ttu-id="78584-289"><xref:System.Xml.XmlException> 會擲回。</span><span class="sxs-lookup"><span data-stu-id="78584-289"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="78584-290"><xref:System.Xml.XmlException> 會擲回。</span><span class="sxs-lookup"><span data-stu-id="78584-290"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="78584-291"><xref:System.Xml.XmlException> 會擲回。</span><span class="sxs-lookup"><span data-stu-id="78584-291"><xref:System.Xml.XmlException> is thrown.</span></span>|  
|<span data-ttu-id="78584-292">`xml`前置詞未對應到 URI。</span><span class="sxs-lookup"><span data-stu-id="78584-292">The `xml` prefix isn't matched to a URI.</span></span>|<span data-ttu-id="78584-293">XML 寫入器並不會檢查這種類型的違規。</span><span class="sxs-lookup"><span data-stu-id="78584-293">The XML writer doesn't check for this type of violation.</span></span>|<span data-ttu-id="78584-294">XML 寫入器並不會檢查這種類型的違規。</span><span class="sxs-lookup"><span data-stu-id="78584-294">The XML writer doesn't check for this type of violation.</span></span>|<span data-ttu-id="78584-295">XML 寫入器並不會檢查這種類型的違規。</span><span class="sxs-lookup"><span data-stu-id="78584-295">The XML writer doesn't check for this type of violation.</span></span>|  
|<span data-ttu-id="78584-296">`xml`前置詞未對應到http://www.w3.org/XML/1998/namespaceURI。</span><span class="sxs-lookup"><span data-stu-id="78584-296">The `xml` prefix isn't matched to the http://www.w3.org/XML/1998/namespace URI.</span></span>|<span data-ttu-id="78584-297"><xref:System.Xml.XmlException> 會擲回。</span><span class="sxs-lookup"><span data-stu-id="78584-297"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="78584-298"><xref:System.Xml.XmlException> 會擲回。</span><span class="sxs-lookup"><span data-stu-id="78584-298"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="78584-299"><xref:System.Xml.XmlException> 會擲回。</span><span class="sxs-lookup"><span data-stu-id="78584-299"><xref:System.Xml.XmlException> is thrown.</span></span>|  
|<span data-ttu-id="78584-300">`xmlns`前置詞或區域名稱未對應到 URI。</span><span class="sxs-lookup"><span data-stu-id="78584-300">The `xmlns` prefix or local name isn't matched to a URI.</span></span>|<span data-ttu-id="78584-301">XML 寫入器並不會檢查這種類型的違規。</span><span class="sxs-lookup"><span data-stu-id="78584-301">The XML writer doesn't check for this type of violation.</span></span>|<span data-ttu-id="78584-302">XML 寫入器並不會檢查這種類型的違規。</span><span class="sxs-lookup"><span data-stu-id="78584-302">The XML writer doesn't check for this type of violation.</span></span>|<span data-ttu-id="78584-303">XML 寫入器並不會檢查這種類型的違規。</span><span class="sxs-lookup"><span data-stu-id="78584-303">The XML writer doesn't check for this type of violation.</span></span>|  
|<span data-ttu-id="78584-304">`xmlns`前置詞或區域名稱未對應到http://www.w3.org/2000/xmlnsURI。</span><span class="sxs-lookup"><span data-stu-id="78584-304">The `xmlns` prefix or local name isn't matched to the http://www.w3.org/2000/xmlns URI.</span></span>|<span data-ttu-id="78584-305"><xref:System.Xml.XmlException> 會擲回。</span><span class="sxs-lookup"><span data-stu-id="78584-305"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="78584-306"><xref:System.Xml.XmlException> 會擲回。</span><span class="sxs-lookup"><span data-stu-id="78584-306"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="78584-307"><xref:System.Xml.XmlException> 會擲回。</span><span class="sxs-lookup"><span data-stu-id="78584-307"><xref:System.Xml.XmlException> is thrown.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="78584-308">下列範例會將 XML 片段寫入記憶體資料流。</span><span class="sxs-lookup"><span data-stu-id="78584-308">The following example writes an XML fragment to a memory stream.</span></span>  
  
 [!code-csharp[XmlWriterSettings.CloseOutput#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.CloseOutput/CS/writestream2.cs#1)]
 [!code-vb[XmlWriterSettings.CloseOutput#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.CloseOutput/VB/writestream2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DoNotEscapeUriAttributes">
      <MemberSignature Language="C#" Value="public bool DoNotEscapeUriAttributes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DoNotEscapeUriAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.DoNotEscapeUriAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Property DoNotEscapeUriAttributes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DoNotEscapeUriAttributes { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DoNotEscapeUriAttributes : bool with get, set" Usage="System.Xml.XmlWriterSettings.DoNotEscapeUriAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="78584-309">取得或設定值，這個值會指出 <see cref="T:System.Xml.XmlWriter" /> 是否不會逸出 URI 屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="78584-309">Gets or sets a value that indicates whether the <see cref="T:System.Xml.XmlWriter" /> does not escape URI attributes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="78584-310">
            <see langword="true" /> 如果<see cref="T:System.Xml.XmlWriter" />不逸出 URI 屬性，否則<see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="78584-310">
              <see langword="true" /> if the <see cref="T:System.Xml.XmlWriter" /> does not escape URI attributes; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="78584-311">預設值為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="78584-311">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding Encoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public Property Encoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ Encoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Encoding : System.Text.Encoding with get, set" Usage="System.Xml.XmlWriterSettings.Encoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="78584-312">取得或設定要使用的文字編碼方式類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="78584-312">Gets or sets the type of text encoding to use.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="78584-313">要使用的文字編碼方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="78584-313">The text encoding to use.</span>
          </span>
          <span data-ttu-id="78584-314">預設值為 <see langword="Encoding.UTF8" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="78584-314">The default is <see langword="Encoding.UTF8" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78584-315"><xref:System.Xml.XmlWriter>次，而不是字元的字元編碼的字元緩衝區。</span><span class="sxs-lookup"><span data-stu-id="78584-315">The <xref:System.Xml.XmlWriter> encodes a buffer of characters all at once, rather than character by character.</span></span> <span data-ttu-id="78584-316">例外狀況時擲回<xref:System.Xml.XmlWriter.Flush%2A>如果發生任何編碼的錯誤，則會呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="78584-316">An exception is thrown when the <xref:System.Xml.XmlWriter.Flush%2A> method is called if any encoding errors are encountered.</span></span>  
  
 <span data-ttu-id="78584-317"><xref:System.Xml.XmlWriterSettings.Encoding%2A>屬性只適用於<xref:System.Xml.XmlWriter>皆可建立具有指定的執行個體<xref:System.IO.Stream>或使用指定的檔案名稱。</span><span class="sxs-lookup"><span data-stu-id="78584-317">The <xref:System.Xml.XmlWriterSettings.Encoding%2A> property only applies to the <xref:System.Xml.XmlWriter> instances that are created either with the specified <xref:System.IO.Stream> or with the specified file name.</span></span> <span data-ttu-id="78584-318">如果<xref:System.Xml.XmlWriter>會建立執行個體具有指定之<xref:System.IO.TextWriter>，則<xref:System.Xml.XmlWriterSettings.Encoding%2A>屬性由基礎的編碼方式覆寫<xref:System.IO.TextWriter>。</span><span class="sxs-lookup"><span data-stu-id="78584-318">If the <xref:System.Xml.XmlWriter> instance is created with the specified <xref:System.IO.TextWriter>, the <xref:System.Xml.XmlWriterSettings.Encoding%2A> property is overridden by the encoding of the underlying <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="78584-319">例如，如果這個屬性設定為 Unicode (utf-16) 特定<xref:System.Xml.XmlWriter>，但基礎寫入器<xref:System.IO.StreamWriter>(衍生自<xref:System.IO.TextWriter>) 使用其編碼設定為 UTF8，則輸出為 utf-8 編碼。</span><span class="sxs-lookup"><span data-stu-id="78584-319">For example, if this property is set to Unicode (UTF-16) for a particular <xref:System.Xml.XmlWriter>, but the underlying writer is a <xref:System.IO.StreamWriter> (which derives from <xref:System.IO.TextWriter>) with its encoding set to UTF8, the output will be UTF-8 encoded.</span></span>  
  
 <span data-ttu-id="78584-320">如果<xref:System.Xml.XmlWriter>與其他輸出參數，建立執行個體<xref:System.Xml.XmlWriterSettings.Encoding%2A>屬性會被忽略。</span><span class="sxs-lookup"><span data-stu-id="78584-320">If the <xref:System.Xml.XmlWriter> instance is created with other output parameters, the <xref:System.Xml.XmlWriterSettings.Encoding%2A> property is ignored.</span></span>  
  
 <span data-ttu-id="78584-321">在以下範例中：</span><span class="sxs-lookup"><span data-stu-id="78584-321">In the following example:</span></span>  
  
-   <span data-ttu-id="78584-322"><xref:System.Xml.XmlWriterSettings.Encoding%2A> 的預設值為 `Encoding.UTF8`。</span><span class="sxs-lookup"><span data-stu-id="78584-322">The default value of <xref:System.Xml.XmlWriterSettings.Encoding%2A> is `Encoding.UTF8`.</span></span>  
  
-   <span data-ttu-id="78584-323"><xref:System.IO.StreamWriter>設定為`Encoding.Unicode`並<xref:System.IO.StreamWriter>的編碼方式覆寫<xref:System.Xml.XmlWriterSettings.Encoding%2A>設定。</span><span class="sxs-lookup"><span data-stu-id="78584-323">The <xref:System.IO.StreamWriter> is set to `Encoding.Unicode` and the <xref:System.IO.StreamWriter>'s encoding overrides the <xref:System.Xml.XmlWriterSettings.Encoding%2A> setting.</span></span>  
  
-   <span data-ttu-id="78584-324">輸出會是`Encoding.Unicode`。</span><span class="sxs-lookup"><span data-stu-id="78584-324">The output will be `Encoding.Unicode`.</span></span>  
  
```csharp  
using (StreamWriter output =  
    new StreamWriter(new FileStream("Xml01.xml", FileMode.Create), Encoding.Unicode))  
{  
    using (XmlWriter xmlWriter =  
        XmlWriter.Create(output, new XmlWriterSettings()))  
    {  
        xmlWriter.WriteStartDocument();  
        xmlWriter.WriteStartElement("Root");  
        xmlWriter.WriteEndElement();  
        xmlWriter.WriteEndDocument();  
    }  
}  
```  
  
> [!IMPORTANT]
>  <span data-ttu-id="78584-325">不接受<xref:System.Text.Encoding>來自不受信任的來源物件。</span><span class="sxs-lookup"><span data-stu-id="78584-325">Do not accept an <xref:System.Text.Encoding> object from an untrusted source.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="78584-326">下列範例會將 XML 片段寫入記憶體資料流。</span><span class="sxs-lookup"><span data-stu-id="78584-326">The following example writes an XML fragment to a memory stream.</span></span>  
  
 [!code-csharp[XmlWriterSettings.CloseOutput#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.CloseOutput/CS/writestream2.cs#1)]
 [!code-vb[XmlWriterSettings.CloseOutput#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.CloseOutput/VB/writestream2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Indent">
      <MemberSignature Language="C#" Value="public bool Indent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Indent" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.Indent" />
      <MemberSignature Language="VB.NET" Value="Public Property Indent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Indent { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Indent : bool with get, set" Usage="System.Xml.XmlWriterSettings.Indent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="78584-327">取得或設定值，指出是否要縮排項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="78584-327">Gets or sets a value indicating whether to indent elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="78584-328">
            <see langword="true" /> 表示在新行和縮排上寫入個別項目，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="78584-328">
              <see langword="true" /> to write individual elements on new lines and indent; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="78584-329">預設值為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="78584-329">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78584-330">此屬性只適用於<xref:System.Xml.XmlWriter>執行個體的輸出文字的內容; 否則會忽略此設定。</span><span class="sxs-lookup"><span data-stu-id="78584-330">This property only applies to <xref:System.Xml.XmlWriter> instances that output text content; otherwise, this setting is ignored.</span></span>  
  
 <span data-ttu-id="78584-331">項目縮排，只要元素未包含混合的內容。</span><span class="sxs-lookup"><span data-stu-id="78584-331">The elements are indented as long as the element does not contain mixed content.</span></span> <span data-ttu-id="78584-332">一次<xref:System.Xml.XmlWriter.WriteString%2A>或是<xref:System.Xml.XmlWriter.WriteWhitespace%2A>呼叫方法以寫出混合項目內容，<xref:System.Xml.XmlWriter>停止縮排。</span><span class="sxs-lookup"><span data-stu-id="78584-332">Once the <xref:System.Xml.XmlWriter.WriteString%2A> or <xref:System.Xml.XmlWriter.WriteWhitespace%2A> method is called to write out a mixed element content, the <xref:System.Xml.XmlWriter> stops indenting.</span></span> <span data-ttu-id="78584-333">縮排繼續一旦關閉混合內容項目。</span><span class="sxs-lookup"><span data-stu-id="78584-333">The indenting resumes once the mixed content element is closed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="78584-334">下列範例會建立<xref:System.Xml.XmlWriter>用於縮排的定位點字元的物件。</span><span class="sxs-lookup"><span data-stu-id="78584-334">The following example creates an <xref:System.Xml.XmlWriter> object that uses the TAB character for indentation.</span></span>  
  
 [!code-csharp[XmlWriterSettings.Indent#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.Indent/CS/writeindent.cs#1)]
 [!code-vb[XmlWriterSettings.Indent#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.Indent/VB/writeindent.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndentChars">
      <MemberSignature Language="C#" Value="public string IndentChars { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string IndentChars" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.IndentChars" />
      <MemberSignature Language="VB.NET" Value="Public Property IndentChars As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ IndentChars { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.IndentChars : string with get, set" Usage="System.Xml.XmlWriterSettings.IndentChars" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="78584-335">取得或設定縮排時使用的字元字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="78584-335">Gets or sets the character string to use when indenting.</span>
          </span>
          <span data-ttu-id="78584-336">當 <see cref="P:System.Xml.XmlWriterSettings.Indent" /> 屬性設為 <see langword="true" /> 時會使用這項設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="78584-336">This setting is used when the <see cref="P:System.Xml.XmlWriterSettings.Indent" /> property is set to <see langword="true" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="78584-337">縮排時使用的字元字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="78584-337">The character string to use when indenting.</span>
          </span>
          <span data-ttu-id="78584-338">它可以設為任何字串值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="78584-338">This can be set to any string value.</span>
          </span>
          <span data-ttu-id="78584-339">不過，若要確保有效的 XML，您應該只指定有效的空白字元 (例如，空格字元、定位字元、歸位字元或換行符號)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="78584-339">However, to ensure valid XML, you should specify only valid white space characters, such as space characters, tabs, carriage returns, or line feeds.</span>
          </span>
          <span data-ttu-id="78584-340">預設值為兩個空格。</span>
          <span class="sxs-lookup">
            <span data-stu-id="78584-340">The default is two spaces.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78584-341">此屬性只適用於<xref:System.Xml.XmlWriter>執行個體的輸出文字的內容; 否則會忽略此設定。</span><span class="sxs-lookup"><span data-stu-id="78584-341">This property only applies to <xref:System.Xml.XmlWriter> instances that output text content; otherwise, this setting is ignored.</span></span> <span data-ttu-id="78584-342"><xref:System.Xml.XmlWriter>擲回例外狀況，如果縮排字元會產生無效的 XML。</span><span class="sxs-lookup"><span data-stu-id="78584-342">The <xref:System.Xml.XmlWriter> throws an exception if the indent characters would result in invalid XML.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="78584-343">下列範例會建立<xref:System.Xml.XmlWriter>用於縮排的定位點字元的物件。</span><span class="sxs-lookup"><span data-stu-id="78584-343">The following example creates an <xref:System.Xml.XmlWriter> object that uses the TAB character for indentation.</span></span>  
  
 [!code-csharp[XmlWriterSettings.Indent#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.Indent/CS/writeindent.cs#1)]
 [!code-vb[XmlWriterSettings.Indent#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.Indent/VB/writeindent.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="78584-344">指派至 <see cref="P:System.Xml.XmlWriterSettings.IndentChars" /> 的值為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="78584-344">The value assigned to the <see cref="P:System.Xml.XmlWriterSettings.IndentChars" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="NamespaceHandling">
      <MemberSignature Language="C#" Value="public System.Xml.NamespaceHandling NamespaceHandling { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.NamespaceHandling NamespaceHandling" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.NamespaceHandling" />
      <MemberSignature Language="VB.NET" Value="Public Property NamespaceHandling As NamespaceHandling" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::NamespaceHandling NamespaceHandling { System::Xml::NamespaceHandling get(); void set(System::Xml::NamespaceHandling value); };" />
      <MemberSignature Language="F#" Value="member this.NamespaceHandling : System.Xml.NamespaceHandling with get, set" Usage="System.Xml.XmlWriterSettings.NamespaceHandling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.NamespaceHandling</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="78584-345">取得或設定值，這個值表示 <see cref="T:System.Xml.XmlWriter" /> 是否應該在寫入 XML 內容時移除重複的命名空間宣告。</span>
          <span class="sxs-lookup">
            <span data-stu-id="78584-345">Gets or sets a value that indicates whether the <see cref="T:System.Xml.XmlWriter" /> should remove duplicate namespace declarations when writing XML content.</span>
          </span>
          <span data-ttu-id="78584-346">預設行為是讓寫入器輸出寫入器命名空間解析程式中出現的所有命名空間宣告。</span>
          <span class="sxs-lookup">
            <span data-stu-id="78584-346">The default behavior is for the writer to output all namespace declarations that are present in the writer's namespace resolver.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="78584-347">
            <see cref="T:System.Xml.NamespaceHandling" /> 列舉型別，用來指定是否要移除 <see cref="T:System.Xml.XmlWriter" /> 中的重複命名空間宣告。</span>
          <span class="sxs-lookup">
            <span data-stu-id="78584-347">The <see cref="T:System.Xml.NamespaceHandling" /> enumeration used to specify whether to remove duplicate namespace declarations in the <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewLineChars">
      <MemberSignature Language="C#" Value="public string NewLineChars { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NewLineChars" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.NewLineChars" />
      <MemberSignature Language="VB.NET" Value="Public Property NewLineChars As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NewLineChars { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NewLineChars : string with get, set" Usage="System.Xml.XmlWriterSettings.NewLineChars" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="78584-348">取得或設定用於分行符號的字元字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="78584-348">Gets or sets the character string to use for line breaks.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="78584-349">用於分行符號的字元字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="78584-349">The character string to use for line breaks.</span>
          </span>
          <span data-ttu-id="78584-350">它可以設為任何字串值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="78584-350">This can be set to any string value.</span>
          </span>
          <span data-ttu-id="78584-351">不過，若要確保有效的 XML，您應該只指定有效的空白字元 (例如，空格字元、定位字元、歸位字元或換行符號)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="78584-351">However, to ensure valid XML, you should specify only valid white space characters, such as space characters, tabs, carriage returns, or line feeds.</span>
          </span>
          <span data-ttu-id="78584-352">預設值是<c>\r\n</c> （歸位字元、 新行）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="78584-352">The default is <c>\r\n</c> (carriage return, new line).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78584-353">此屬性只適用於<xref:System.Xml.XmlWriter>執行個體的輸出文字的內容; 否則會忽略此設定。</span><span class="sxs-lookup"><span data-stu-id="78584-353">This property only applies to <xref:System.Xml.XmlWriter> instances that output text content; otherwise, this setting is ignored.</span></span> <span data-ttu-id="78584-354"><xref:System.Xml.XmlWriter>擲回例外狀況，如果分行符號字元會產生無效的 XML。</span><span class="sxs-lookup"><span data-stu-id="78584-354">The <xref:System.Xml.XmlWriter> throws an exception if the line break characters would result in invalid XML.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="78584-355">指派至 <see cref="P:System.Xml.XmlWriterSettings.NewLineChars" /> 的值為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="78584-355">The value assigned to the <see cref="P:System.Xml.XmlWriterSettings.NewLineChars" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="NewLineHandling">
      <MemberSignature Language="C#" Value="public System.Xml.NewLineHandling NewLineHandling { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.NewLineHandling NewLineHandling" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.NewLineHandling" />
      <MemberSignature Language="VB.NET" Value="Public Property NewLineHandling As NewLineHandling" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::NewLineHandling NewLineHandling { System::Xml::NewLineHandling get(); void set(System::Xml::NewLineHandling value); };" />
      <MemberSignature Language="F#" Value="member this.NewLineHandling : System.Xml.NewLineHandling with get, set" Usage="System.Xml.XmlWriterSettings.NewLineHandling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.NewLineHandling</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="78584-356">取得或設定值，指出是否要將輸出中的分行符號標準化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="78584-356">Gets or sets a value indicating whether to normalize line breaks in the output.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="78584-357">其中一個 <see cref="T:System.Xml.NewLineHandling" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="78584-357">One of the <see cref="T:System.Xml.NewLineHandling" /> values.</span>
          </span>
          <span data-ttu-id="78584-358">預設值為 <see cref="F:System.Xml.NewLineHandling.Replace" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="78584-358">The default is <see cref="F:System.Xml.NewLineHandling.Replace" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78584-359">寫入文字內容或屬性的值時，會套用此設定。</span><span class="sxs-lookup"><span data-stu-id="78584-359">This setting applies when writing text content or attribute values.</span></span> <span data-ttu-id="78584-360">每個<xref:System.Xml.NewLineHandling>值如下所述：</span><span class="sxs-lookup"><span data-stu-id="78584-360">Each of the <xref:System.Xml.NewLineHandling> values is described below:</span></span>  
  
-   <span data-ttu-id="78584-361"><xref:System.Xml.NewLineHandling.Entitize>設定會告知<xref:System.Xml.XmlWriter>取代新行字元，就不會否則保留正規化<xref:System.Xml.XmlReader>字元實體。</span><span class="sxs-lookup"><span data-stu-id="78584-361">The <xref:System.Xml.NewLineHandling.Entitize> setting tells the <xref:System.Xml.XmlWriter> to replace new line characters that would not be otherwise preserved by a normalizing <xref:System.Xml.XmlReader> with character entities.</span></span> <span data-ttu-id="78584-362">這是用於輸出由正規化的反覆存取案例<xref:System.Xml.XmlReader>。</span><span class="sxs-lookup"><span data-stu-id="78584-362">This is useful in round-trip scenarios where the output is read by a normalizing <xref:System.Xml.XmlReader>.</span></span> <span data-ttu-id="78584-363">當來回行程之後額外的正規化規則適用於屬性值`\t`，`\n`並`\r`在正規化時的屬性值中的空間就會被取代<xref:System.Xml.XmlReader>。</span><span class="sxs-lookup"><span data-stu-id="78584-363">Additional normalization rules apply for attribute values when round tripping since `\t`, `\n` and `\r` are replaced with a space in attribute values when normalized in an <xref:System.Xml.XmlReader>.</span></span>  
  
-   <span data-ttu-id="78584-364"><xref:System.Xml.NewLineHandling.Replace>設定會告知<xref:System.Xml.XmlWriter>取代新行字元與`\r\n`，這是 Microsoft Windows 作業系統所使用的新行格式。</span><span class="sxs-lookup"><span data-stu-id="78584-364">The <xref:System.Xml.NewLineHandling.Replace> setting tells the <xref:System.Xml.XmlWriter> to replace new line characters with `\r\n`, which is the new line format used by the Microsoft Windows operating system.</span></span> <span data-ttu-id="78584-365">這有助於確保該檔案可以正確顯示的 [記事本] 或 Microsoft Word 應用程式。</span><span class="sxs-lookup"><span data-stu-id="78584-365">This helps to ensure that the file can be correctly displayed by the Notepad or Microsoft Word applications.</span></span> <span data-ttu-id="78584-366">這項設定也會使用以保留字元的字元實體取代屬性中的新行。</span><span class="sxs-lookup"><span data-stu-id="78584-366">This setting also replaces new lines in attributes with character entities to preserve the characters.</span></span> <span data-ttu-id="78584-367">這是預設值。</span><span class="sxs-lookup"><span data-stu-id="78584-367">This is the default value.</span></span>  
  
-   <span data-ttu-id="78584-368"><xref:System.Xml.NewLineHandling.None>設定會告知<xref:System.Xml.XmlWriter>保持不變的輸入。</span><span class="sxs-lookup"><span data-stu-id="78584-368">The <xref:System.Xml.NewLineHandling.None> setting tells the <xref:System.Xml.XmlWriter> to leave the input unchanged.</span></span> <span data-ttu-id="78584-369">不想讓任何新行處理時，會使用此設定。</span><span class="sxs-lookup"><span data-stu-id="78584-369">This setting is used when you do not want any new-line processing.</span></span> <span data-ttu-id="78584-370">讀取的輸出時，這是很有用<xref:System.Xml.XmlReader>，不會執行任何正規化 (例如<xref:System.Xml.XmlTextReader>使用預設設定。)</span><span class="sxs-lookup"><span data-stu-id="78584-370">This is useful when the output is read by an <xref:System.Xml.XmlReader> that does not do any normalization (for example, an <xref:System.Xml.XmlTextReader> with default settings.)</span></span>  
  
 <span data-ttu-id="78584-371">下表顯示的輸出<xref:System.Xml.XmlWriter.WriteString%2A>方法時所輸入的值取決於提供<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>屬性設定。</span><span class="sxs-lookup"><span data-stu-id="78584-371">The following tables show the output of the <xref:System.Xml.XmlWriter.WriteString%2A> method when supplied with the input value depending on the <xref:System.Xml.XmlWriterSettings.NewLineHandling%2A> property setting.</span></span> <span data-ttu-id="78584-372">寫入文字內容時，資料表會顯示輸出，以及寫入屬性值時。</span><span class="sxs-lookup"><span data-stu-id="78584-372">The tables show the output when writing text content and also when writing an attribute value.</span></span>  
  
 `Text Node Value:`  
  
||<span data-ttu-id="78584-373">\r\n</span><span class="sxs-lookup"><span data-stu-id="78584-373">\r\n</span></span>|<span data-ttu-id="78584-374">\n</span><span class="sxs-lookup"><span data-stu-id="78584-374">\n</span></span>|<span data-ttu-id="78584-375">\r</span><span class="sxs-lookup"><span data-stu-id="78584-375">\r</span></span>|<span data-ttu-id="78584-376">\t</span><span class="sxs-lookup"><span data-stu-id="78584-376">\t</span></span>|  
|-|------------|---------|---------|---------|  
|<span data-ttu-id="78584-377">實體化</span><span class="sxs-lookup"><span data-stu-id="78584-377">Entitize</span></span>|<span data-ttu-id="78584-378">& #D; \n</span><span class="sxs-lookup"><span data-stu-id="78584-378">&#D;\n</span></span>|<span data-ttu-id="78584-379">\n</span><span class="sxs-lookup"><span data-stu-id="78584-379">\n</span></span>|<span data-ttu-id="78584-380">&#D;</span><span class="sxs-lookup"><span data-stu-id="78584-380">&#D;</span></span>|<span data-ttu-id="78584-381">\t</span><span class="sxs-lookup"><span data-stu-id="78584-381">\t</span></span>|  
|<span data-ttu-id="78584-382">取代</span><span class="sxs-lookup"><span data-stu-id="78584-382">Replace</span></span>|<span data-ttu-id="78584-383">\r\n</span><span class="sxs-lookup"><span data-stu-id="78584-383">\r\n</span></span>|<span data-ttu-id="78584-384">\r\n</span><span class="sxs-lookup"><span data-stu-id="78584-384">\r\n</span></span>|<span data-ttu-id="78584-385">\r\n</span><span class="sxs-lookup"><span data-stu-id="78584-385">\r\n</span></span>|<span data-ttu-id="78584-386">\t</span><span class="sxs-lookup"><span data-stu-id="78584-386">\t</span></span>|  
|<span data-ttu-id="78584-387">無</span><span class="sxs-lookup"><span data-stu-id="78584-387">None</span></span>|<span data-ttu-id="78584-388">\r\n</span><span class="sxs-lookup"><span data-stu-id="78584-388">\r\n</span></span>|<span data-ttu-id="78584-389">\n</span><span class="sxs-lookup"><span data-stu-id="78584-389">\n</span></span>|<span data-ttu-id="78584-390">\r</span><span class="sxs-lookup"><span data-stu-id="78584-390">\r</span></span>|<span data-ttu-id="78584-391">\t</span><span class="sxs-lookup"><span data-stu-id="78584-391">\t</span></span>|  
  
 `Attribute Value:`  
  
||<span data-ttu-id="78584-392">\r\n</span><span class="sxs-lookup"><span data-stu-id="78584-392">\r\n</span></span>|<span data-ttu-id="78584-393">\n</span><span class="sxs-lookup"><span data-stu-id="78584-393">\n</span></span>|<span data-ttu-id="78584-394">\r</span><span class="sxs-lookup"><span data-stu-id="78584-394">\r</span></span>|<span data-ttu-id="78584-395">\t</span><span class="sxs-lookup"><span data-stu-id="78584-395">\t</span></span>|  
|-|------------|---------|---------|---------|  
|<span data-ttu-id="78584-396">實體化</span><span class="sxs-lookup"><span data-stu-id="78584-396">Entitize</span></span>|<span data-ttu-id="78584-397">&AMP; #D; &AMP; #A;</span><span class="sxs-lookup"><span data-stu-id="78584-397">&#D;&#A;</span></span>|<span data-ttu-id="78584-398">&AMP; #A;</span><span class="sxs-lookup"><span data-stu-id="78584-398">&#A;</span></span>|<span data-ttu-id="78584-399">&#D;</span><span class="sxs-lookup"><span data-stu-id="78584-399">&#D;</span></span>|<span data-ttu-id="78584-400">&\#9;</span><span class="sxs-lookup"><span data-stu-id="78584-400">&\#9;</span></span>|  
|<span data-ttu-id="78584-401">取代</span><span class="sxs-lookup"><span data-stu-id="78584-401">Replace</span></span>|<span data-ttu-id="78584-402">&AMP; #D; &AMP; #A;</span><span class="sxs-lookup"><span data-stu-id="78584-402">&#D;&#A;</span></span>|<span data-ttu-id="78584-403">&AMP; #A;</span><span class="sxs-lookup"><span data-stu-id="78584-403">&#A;</span></span>|<span data-ttu-id="78584-404">&#D;</span><span class="sxs-lookup"><span data-stu-id="78584-404">&#D;</span></span>|<span data-ttu-id="78584-405">&\#9;</span><span class="sxs-lookup"><span data-stu-id="78584-405">&\#9;</span></span>|  
|<span data-ttu-id="78584-406">無</span><span class="sxs-lookup"><span data-stu-id="78584-406">None</span></span>|<span data-ttu-id="78584-407">\r\n</span><span class="sxs-lookup"><span data-stu-id="78584-407">\r\n</span></span>|<span data-ttu-id="78584-408">\n</span><span class="sxs-lookup"><span data-stu-id="78584-408">\n</span></span>|<span data-ttu-id="78584-409">\r</span><span class="sxs-lookup"><span data-stu-id="78584-409">\r</span></span>|<span data-ttu-id="78584-410">\t</span><span class="sxs-lookup"><span data-stu-id="78584-410">\t</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="78584-411"><xref:System.Xml.XmlWriter>寫入 CDATA 區段中，註解或處理指示中的內容時，有下列行為。</span><span class="sxs-lookup"><span data-stu-id="78584-411">The <xref:System.Xml.XmlWriter> has the following behavior when writing content within a CDATA section, comment, or processing instruction.</span></span> <span data-ttu-id="78584-412">新行永遠不會取代其字元的實體，即使<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>屬性設定為<xref:System.Xml.NewLineHandling.Entitize>。</span><span class="sxs-lookup"><span data-stu-id="78584-412">New lines are never replaced with their character entities, even when the <xref:System.Xml.XmlWriterSettings.NewLineHandling%2A> property is set to <xref:System.Xml.NewLineHandling.Entitize>.</span></span> <span data-ttu-id="78584-413">這是因為在 CDATA 區段中，註解或處理指示中無法辨識的字元實體。</span><span class="sxs-lookup"><span data-stu-id="78584-413">This is because character entities are not recognized in CDATA sections, comments or processing instructions.</span></span> <span data-ttu-id="78584-414">如果<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>屬性設定為<xref:System.Xml.NewLineHandling.None>或<xref:System.Xml.NewLineHandling.Replace>，撰寫的文字節點的值時的行為是相同。</span><span class="sxs-lookup"><span data-stu-id="78584-414">If the <xref:System.Xml.XmlWriterSettings.NewLineHandling%2A> property is set to <xref:System.Xml.NewLineHandling.None> or <xref:System.Xml.NewLineHandling.Replace>, the behavior is the same as when writing a text node value.</span></span>  
  
 <span data-ttu-id="78584-415">下表說明哪些正規化<xref:System.Xml.XmlReader>傳回每個輸入的泛空白字元。</span><span class="sxs-lookup"><span data-stu-id="78584-415">The following table describes what a normalizing <xref:System.Xml.XmlReader> returns for each white space input.</span></span> <span data-ttu-id="78584-416">如需詳細資訊，請參閱 2.11 和 W3C 的 3.3.3 [XML 1.0 建議事項](https://www.w3.org/TR/REC-xml/)。</span><span class="sxs-lookup"><span data-stu-id="78584-416">For more information, see sections 2.11 and 3.3.3 of the W3C [XML 1.0 Recommendation](https://www.w3.org/TR/REC-xml/).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="78584-417">正規化的讀取器可以是任何<xref:System.Xml.XmlReader>所建立的物件<xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="78584-417">A normalizing reader is any <xref:System.Xml.XmlReader> object created by the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="78584-418">這些物件一律會執行 break 正規化和屬性的完整正規化。</span><span class="sxs-lookup"><span data-stu-id="78584-418">These objects always perform line break normalization and full normalization of attributes.</span></span> <span data-ttu-id="78584-419"><xref:System.Xml.XmlTextReader>物件也可以是正規化的讀取器，它是否<xref:System.Xml.XmlTextReader.Normalization%2A>屬性設定為`true`。</span><span class="sxs-lookup"><span data-stu-id="78584-419">The <xref:System.Xml.XmlTextReader> object can also be a normalizing reader if it's <xref:System.Xml.XmlTextReader.Normalization%2A> property is set to `true`.</span></span>  
  
||<span data-ttu-id="78584-420">\r\n</span><span class="sxs-lookup"><span data-stu-id="78584-420">\r\n</span></span>|<span data-ttu-id="78584-421">\n</span><span class="sxs-lookup"><span data-stu-id="78584-421">\n</span></span>|<span data-ttu-id="78584-422">\r</span><span class="sxs-lookup"><span data-stu-id="78584-422">\r</span></span>|<span data-ttu-id="78584-423">\t</span><span class="sxs-lookup"><span data-stu-id="78584-423">\t</span></span>|  
|-|------------|---------|---------|---------|  
|<span data-ttu-id="78584-424">文字節點值</span><span class="sxs-lookup"><span data-stu-id="78584-424">Text Node Value</span></span>|<span data-ttu-id="78584-425">\n</span><span class="sxs-lookup"><span data-stu-id="78584-425">\n</span></span>|<span data-ttu-id="78584-426">\n</span><span class="sxs-lookup"><span data-stu-id="78584-426">\n</span></span>|<span data-ttu-id="78584-427">\n</span><span class="sxs-lookup"><span data-stu-id="78584-427">\n</span></span>|<span data-ttu-id="78584-428">\t</span><span class="sxs-lookup"><span data-stu-id="78584-428">\t</span></span>|  
|<span data-ttu-id="78584-429">屬性值</span><span class="sxs-lookup"><span data-stu-id="78584-429">Attribute Value</span></span>|<span data-ttu-id="78584-430">單一空格</span><span class="sxs-lookup"><span data-stu-id="78584-430">single space</span></span>|<span data-ttu-id="78584-431">單一空格</span><span class="sxs-lookup"><span data-stu-id="78584-431">single space</span></span>|<span data-ttu-id="78584-432">單一空格</span><span class="sxs-lookup"><span data-stu-id="78584-432">single space</span></span>|<span data-ttu-id="78584-433">單一空格</span><span class="sxs-lookup"><span data-stu-id="78584-433">single space</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewLineOnAttributes">
      <MemberSignature Language="C#" Value="public bool NewLineOnAttributes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NewLineOnAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.NewLineOnAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Property NewLineOnAttributes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NewLineOnAttributes { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.NewLineOnAttributes : bool with get, set" Usage="System.Xml.XmlWriterSettings.NewLineOnAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="78584-434">取得或設定值，指出是否將屬性寫在新行上。</span>
          <span class="sxs-lookup">
            <span data-stu-id="78584-434">Gets or sets a value indicating whether to write attributes on a new line.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="78584-435">
            <see langword="true" /> 表示將屬性寫在獨立的行上，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="78584-435">
              <see langword="true" /> to write attributes on individual lines; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="78584-436">預設值為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="78584-436">The default is <see langword="false" />.</span>
          </span>
          <block subset="none" type="note">
            <para>
              <span data-ttu-id="78584-437">當 <see cref="P:System.Xml.XmlWriterSettings.Indent" /> 屬性值為 <see langword="false" /> 時，這項設定沒有影響。</span>
              <span class="sxs-lookup">
                <span data-stu-id="78584-437">This setting has no effect when the <see cref="P:System.Xml.XmlWriterSettings.Indent" /> property value is <see langword="false" />.</span>
              </span>
            </para>
          </block>
          <span data-ttu-id="78584-438">當 <see cref="P:System.Xml.XmlWriterSettings.NewLineOnAttributes" /> 設為 <see langword="true" /> 時，會在每個屬性之前加上新行和一個額外的縮排層級。</span>
          <span class="sxs-lookup">
            <span data-stu-id="78584-438">When <see cref="P:System.Xml.XmlWriterSettings.NewLineOnAttributes" /> is set to <see langword="true" />, each attribute is pre-pended with a new line and one extra level of indentation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78584-439">此屬性只適用於<xref:System.Xml.XmlWriter>執行個體的輸出文字的內容; 否則會忽略此設定。</span><span class="sxs-lookup"><span data-stu-id="78584-439">This property only applies to <xref:System.Xml.XmlWriter> instances that output text content; otherwise, this setting is ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="78584-440">下列範例會建立<xref:System.Xml.XmlWriter>，寫入至 XML 檔案，並寫入新行上的每個屬性。</span><span class="sxs-lookup"><span data-stu-id="78584-440">The following example creates an <xref:System.Xml.XmlWriter> that writes to an XML file and writes each attribute on a new line.</span></span>  
  
 [!code-csharp[XmlWriterSettings.NewLineOnAttributes#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.NewLineOnAttributes/CS/writenewlineattrs.cs#1)]
 [!code-vb[XmlWriterSettings.NewLineOnAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.NewLineOnAttributes/VB/writenewlineattrs.vb#1)]  
  
 <span data-ttu-id="78584-441">此範例會產生下列輸出：</span><span class="sxs-lookup"><span data-stu-id="78584-441">The sample produces the following output:</span></span>  
  
```xml  
<order  
  orderID="367A54"  
  date="2001-05-03">  
  <price>19.95</price>  
</order>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OmitXmlDeclaration">
      <MemberSignature Language="C#" Value="public bool OmitXmlDeclaration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool OmitXmlDeclaration" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.OmitXmlDeclaration" />
      <MemberSignature Language="VB.NET" Value="Public Property OmitXmlDeclaration As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool OmitXmlDeclaration { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.OmitXmlDeclaration : bool with get, set" Usage="System.Xml.XmlWriterSettings.OmitXmlDeclaration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="78584-442">取得或設定值，指出是否省略 XML 宣告。</span>
          <span class="sxs-lookup">
            <span data-stu-id="78584-442">Gets or sets a value indicating whether to omit an XML declaration.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="78584-443">
            <see langword="true" /> 表示省略 XML 宣告，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="78584-443">
              <see langword="true" /> to omit the XML declaration; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="78584-444">預設值為 <see langword="false" />，表示會寫入 XML 宣告。</span>
          <span class="sxs-lookup">
            <span data-stu-id="78584-444">The default is <see langword="false" />, an XML declaration is written.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78584-445">此屬性只適用於<xref:System.Xml.XmlWriter>執行個體的輸出文字的內容; 否則會忽略此設定。</span><span class="sxs-lookup"><span data-stu-id="78584-445">This property only applies to <xref:System.Xml.XmlWriter> instances that output text content; otherwise, this setting is ignored.</span></span>  
  
 <span data-ttu-id="78584-446">如果<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>設為`false`，則會自動寫入 XML 宣告</span><span class="sxs-lookup"><span data-stu-id="78584-446">If <xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A> is set to `false`, The XML declaration is written automatically</span></span>  
  
 <span data-ttu-id="78584-447">如果一律會寫入 XML 宣告<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>設定為<xref:System.Xml.ConformanceLevel.Document>，即使<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>設定為`true`。</span><span class="sxs-lookup"><span data-stu-id="78584-447">The XML declaration is always written if <xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A> is set to <xref:System.Xml.ConformanceLevel.Document>, even if <xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A> is set to `true`.</span></span>  
  
 <span data-ttu-id="78584-448">如果資料永遠不會寫入 XML 宣告<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>設為<xref:System.Xml.ConformanceLevel.Fragment>。</span><span class="sxs-lookup"><span data-stu-id="78584-448">The XML declaration is never written if <xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A> is set to <xref:System.Xml.ConformanceLevel.Fragment>.</span></span> <span data-ttu-id="78584-449">您可以呼叫<xref:System.Xml.XmlWriter.WriteProcessingInstruction%2A>明確地寫出 XML 宣告。</span><span class="sxs-lookup"><span data-stu-id="78584-449">You can call <xref:System.Xml.XmlWriter.WriteProcessingInstruction%2A> to explicitly write out an XML declaration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="78584-450">下列範例會將 XML 片段寫入記憶體資料流。</span><span class="sxs-lookup"><span data-stu-id="78584-450">The following example writes an XML fragment to a memory stream.</span></span>  
  
 [!code-csharp[XmlWriterSettings.CloseOutput#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.CloseOutput/CS/writestream2.cs#1)]
 [!code-vb[XmlWriterSettings.CloseOutput#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.CloseOutput/VB/writestream2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputMethod">
      <MemberSignature Language="C#" Value="public System.Xml.XmlOutputMethod OutputMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlOutputMethod OutputMethod" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.OutputMethod" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OutputMethod As XmlOutputMethod" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlOutputMethod OutputMethod { System::Xml::XmlOutputMethod get(); };" />
      <MemberSignature Language="F#" Value="member this.OutputMethod : System.Xml.XmlOutputMethod" Usage="System.Xml.XmlWriterSettings.OutputMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlOutputMethod</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="78584-451">取得用於序列化 <see cref="T:System.Xml.XmlWriter" /> 輸出的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="78584-451">Gets the method used to serialize the <see cref="T:System.Xml.XmlWriter" /> output.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="78584-452">其中一個 <see cref="T:System.Xml.XmlOutputMethod" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="78584-452">One of the <see cref="T:System.Xml.XmlOutputMethod" /> values.</span>
          </span>
          <span data-ttu-id="78584-453">預設值為 <see cref="F:System.Xml.XmlOutputMethod.Xml" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="78584-453">The default is <see cref="F:System.Xml.XmlOutputMethod.Xml" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78584-454">此屬性會指定用來序列化輸出的方法。</span><span class="sxs-lookup"><span data-stu-id="78584-454">This property specifies the method used to serialize the output.</span></span> <span data-ttu-id="78584-455">輸出可以使用 HTML 規則、 XML 1.0 規則等等進行序列化。</span><span class="sxs-lookup"><span data-stu-id="78584-455">The output can be serialized using the HTML rules, the XML 1.0 rules, and so on.</span></span> <span data-ttu-id="78584-456">此設定會由 XSLT 處理器設定，且 Visual Studio 在內部使用。</span><span class="sxs-lookup"><span data-stu-id="78584-456">This setting is set by the XSLT processor and is used internally by Visual Studio.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriterSettings.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="member this.Reset : unit -&gt; unit" Usage="xmlWriterSettings.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="78584-457">將設定類別的成員重設為其預設值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="78584-457">Resets the members of the settings class to their default values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78584-458">下表顯示的預設執行個體的屬性值<xref:System.Xml.XmlWriterSettings>。</span><span class="sxs-lookup"><span data-stu-id="78584-458">The following table shows the default property values for an instance of <xref:System.Xml.XmlWriterSettings>.</span></span>  
  
|<span data-ttu-id="78584-459">屬性</span><span class="sxs-lookup"><span data-stu-id="78584-459">Property</span></span>|<span data-ttu-id="78584-460">Initial value</span><span class="sxs-lookup"><span data-stu-id="78584-460">Initial value</span></span>|  
|--------------|-------------------|  
|<xref:System.Xml.XmlWriterSettings.Async%2A>|<span data-ttu-id="78584-461">`false`.</span><span class="sxs-lookup"><span data-stu-id="78584-461">`false`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>|<span data-ttu-id="78584-462">`true`.</span><span class="sxs-lookup"><span data-stu-id="78584-462">`true`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.CloseOutput%2A>|<span data-ttu-id="78584-463">`false`.</span><span class="sxs-lookup"><span data-stu-id="78584-463">`false`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>|<span data-ttu-id="78584-464"><xref:System.Xml.ConformanceLevel.Document>.</span><span class="sxs-lookup"><span data-stu-id="78584-464"><xref:System.Xml.ConformanceLevel.Document>.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|<span data-ttu-id="78584-465">`Encoding.UTF8`.</span><span class="sxs-lookup"><span data-stu-id="78584-465">`Encoding.UTF8`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.Indent%2A>|<span data-ttu-id="78584-466">`false`.</span><span class="sxs-lookup"><span data-stu-id="78584-466">`false`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|<span data-ttu-id="78584-467">兩個空格。</span><span class="sxs-lookup"><span data-stu-id="78584-467">Two spaces.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|<span data-ttu-id="78584-468">`\r\n`.</span><span class="sxs-lookup"><span data-stu-id="78584-468">`\r\n`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|<span data-ttu-id="78584-469"><xref:System.Xml.NewLineHandling.Replace>.</span><span class="sxs-lookup"><span data-stu-id="78584-469"><xref:System.Xml.NewLineHandling.Replace>.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|<span data-ttu-id="78584-470">`false`.</span><span class="sxs-lookup"><span data-stu-id="78584-470">`false`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|<span data-ttu-id="78584-471">`false`.</span><span class="sxs-lookup"><span data-stu-id="78584-471">`false`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose%2A>|<span data-ttu-id="78584-472">`true`.</span><span class="sxs-lookup"><span data-stu-id="78584-472">`true`.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEndDocumentOnClose">
      <MemberSignature Language="C#" Value="public bool WriteEndDocumentOnClose { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WriteEndDocumentOnClose" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose" />
      <MemberSignature Language="VB.NET" Value="Public Property WriteEndDocumentOnClose As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WriteEndDocumentOnClose { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.WriteEndDocumentOnClose : bool with get, set" Usage="System.Xml.XmlWriterSettings.WriteEndDocumentOnClose" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="78584-473">取得或設定值，指出 <see cref="T:System.Xml.XmlWriter" /> 是否會在呼叫 <see cref="M:System.Xml.XmlWriter.Close" /> 方法時，將結尾標記加入至所有未封閉的項目標記。</span>
          <span class="sxs-lookup">
            <span data-stu-id="78584-473">Gets or sets a value that indicates whether the <see cref="T:System.Xml.XmlWriter" /> will add closing tags to all unclosed element tags when the <see cref="M:System.Xml.XmlWriter.Close" /> method is called.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="78584-474">如果將關閉所有未封閉的項目標記，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="78584-474">
              <see langword="true" /> if all unclosed element tags will be closed out; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="78584-475">預設值是 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="78584-475">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78584-476">如果您將此旗標設定為`false`，輸出 XML 檔案可能不是語式正確。</span><span class="sxs-lookup"><span data-stu-id="78584-476">If you set this flag to `false`, the output XML file may not be well-formed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>