<Type Name="XmlEntity" FullName="System.Xml.XmlEntity">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a7f96b5f213c6bd332d6029ba4c46e86b1566ec7" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlEntity : System.Xml.XmlNode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlEntity extends System.Xml.XmlNode" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlEntity" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlEntity&#xA;Inherits XmlNode" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlEntity : System::Xml::XmlNode" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.XmlNode</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="30ce8-101">代表實體宣告，例如 &lt;!ENTITY... &gt;。</span>
      <span class="sxs-lookup">
        <span data-stu-id="30ce8-101">Represents an entity declaration, such as &lt;!ENTITY... &gt;.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
    <altmember cref="P:System.Xml.XmlDocumentType.Entities" />
  </Docs>
  <Members>
    <Member MemberName="BaseURI">
      <MemberSignature Language="C#" Value="public override string BaseURI { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseURI" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlEntity.BaseURI" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property BaseURI As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ BaseURI { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="30ce8-102">取得目前節點的基底統一資源識別項 (URI)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ce8-102">Gets the base Uniform Resource Identifier (URI) of the current node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="30ce8-103">節點載入的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ce8-103">The location from which the node was loaded.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30ce8-104">網路的 XML 文件使用不同的全球資訊網協會 (W3C) 標準包含機制彙總的資料區塊組成，並因此包含來自不同位置的節點。</span><span class="sxs-lookup"><span data-stu-id="30ce8-104">A networked XML document is comprised of chunks of data aggregated using various World Wide Web Consortium (W3C) standard inclusion mechanisms and therefore contains nodes that come from different places.</span></span> <span data-ttu-id="30ce8-105">`BaseURI`會告訴您這些節點的來源。</span><span class="sxs-lookup"><span data-stu-id="30ce8-105">The `BaseURI` tells you where these nodes came from.</span></span>  
  
 <span data-ttu-id="30ce8-106">這個屬性的值視節點類型而異。</span><span class="sxs-lookup"><span data-stu-id="30ce8-106">The value of this property varies depending on the node type.</span></span> <span data-ttu-id="30ce8-107">這是外部的 EntityReference 節點的子系節點傳回實體本身的位置。</span><span class="sxs-lookup"><span data-stu-id="30ce8-107">Nodes which are children of external EntityReference nodes return the location of the entity itself.</span></span> <span data-ttu-id="30ce8-108">例如，請考慮下列的 XML 文件：</span><span class="sxs-lookup"><span data-stu-id="30ce8-108">For example, consider the following XML document:</span></span>  
  
```  
<!DOCTYPE item [  
<!ENTITY xyz SYSTEM "a/b.xml">  
]>  
<item num='123'>&xyz;</item>  
```  
  
 <span data-ttu-id="30ce8-109">其中外部實體`a/b.xml`包含 XML 文字`<test>123</test>`。</span><span class="sxs-lookup"><span data-stu-id="30ce8-109">where the external entity `a/b.xml` contains the XML text `<test>123</test>`.</span></span>  
  
 <span data-ttu-id="30ce8-110">如果從已載入文件http://server/mydata.xml，`BaseURI`會傳回下列：</span><span class="sxs-lookup"><span data-stu-id="30ce8-110">If the document is loaded from http://server/mydata.xml, `BaseURI` returns the following:</span></span>  
  
|<span data-ttu-id="30ce8-111">NodeType</span><span class="sxs-lookup"><span data-stu-id="30ce8-111">NodeType</span></span>|<span data-ttu-id="30ce8-112">名稱</span><span class="sxs-lookup"><span data-stu-id="30ce8-112">Name</span></span>|<span data-ttu-id="30ce8-113">BaseURI</span><span class="sxs-lookup"><span data-stu-id="30ce8-113">BaseURI</span></span>|  
|--------------|----------|-------------|  
|<span data-ttu-id="30ce8-114">屬性</span><span class="sxs-lookup"><span data-stu-id="30ce8-114">Attribute</span></span>|<span data-ttu-id="30ce8-115">num</span><span class="sxs-lookup"><span data-stu-id="30ce8-115">num</span></span>|http://server/mydata.xml|  
|<span data-ttu-id="30ce8-116">文件</span><span class="sxs-lookup"><span data-stu-id="30ce8-116">Document</span></span>|<span data-ttu-id="30ce8-117">#document</span><span class="sxs-lookup"><span data-stu-id="30ce8-117">#document</span></span>|http://server/mydata.xml|  
|<span data-ttu-id="30ce8-118">DocumentType</span><span class="sxs-lookup"><span data-stu-id="30ce8-118">DocumentType</span></span>|<span data-ttu-id="30ce8-119">項目</span><span class="sxs-lookup"><span data-stu-id="30ce8-119">item</span></span>|http://server/mydata.xml|  
|<span data-ttu-id="30ce8-120">實體</span><span class="sxs-lookup"><span data-stu-id="30ce8-120">Entity</span></span>|<span data-ttu-id="30ce8-121">xyz</span><span class="sxs-lookup"><span data-stu-id="30ce8-121">xyz</span></span>|http://server/mydata.xml|  
|<span data-ttu-id="30ce8-122">元素</span><span class="sxs-lookup"><span data-stu-id="30ce8-122">Element</span></span>|<span data-ttu-id="30ce8-123">項目</span><span class="sxs-lookup"><span data-stu-id="30ce8-123">item</span></span>|http://server/mydata.xml|  
|<span data-ttu-id="30ce8-124">EntityReference</span><span class="sxs-lookup"><span data-stu-id="30ce8-124">EntityReference</span></span>|<span data-ttu-id="30ce8-125">xyz</span><span class="sxs-lookup"><span data-stu-id="30ce8-125">xyz</span></span>|http://server/mydata.xml|  
|<span data-ttu-id="30ce8-126">元素</span><span class="sxs-lookup"><span data-stu-id="30ce8-126">Element</span></span>|<span data-ttu-id="30ce8-127">測試</span><span class="sxs-lookup"><span data-stu-id="30ce8-127">test</span></span>|http://server/a/b.xml|  
|<span data-ttu-id="30ce8-128">Text</span><span class="sxs-lookup"><span data-stu-id="30ce8-128">Text</span></span>|<span data-ttu-id="30ce8-129">#text</span><span class="sxs-lookup"><span data-stu-id="30ce8-129">#text</span></span>|http://server/a/b.xml|  
  
 <span data-ttu-id="30ce8-130">`BaseURI` 尋找實體參考界限，因此如果擴充實體，這項資訊不會保留，而且此屬性傳回的位置`XmlDocument`在所有情況下的物件。</span><span class="sxs-lookup"><span data-stu-id="30ce8-130">`BaseURI` looks for entity reference boundaries, so if entities are expanded, this information is not preserved and this property returns the location of the `XmlDocument` object in all cases.</span></span>  
  
 <span data-ttu-id="30ce8-131">在第二個範例中，指定下列的 XML 文件：</span><span class="sxs-lookup"><span data-stu-id="30ce8-131">As a second example, given the following XML document:</span></span>  
  
```  
<!DOCTYPE Mydata SYSTEM "http://localhost/doctype.dtd">  
<baa>&xyz;</baa>  
```  
  
 <span data-ttu-id="30ce8-132">在文件類型定義 (DTD) 檔案包含下列內容：</span><span class="sxs-lookup"><span data-stu-id="30ce8-132">where the document type definition (DTD) file contains the following:</span></span>  
  
```  
<!ENTITY xyz "<E1>My Data</E1>">  
<!ELEMENT baa #PCDATA>  
<!ATTLIST baa attr1 "woof">  
```  
  
 <span data-ttu-id="30ce8-133">如果 XML 文件載入從http://localhost/mydata.xml，`BaseURI`會傳回下列每個節點：</span><span class="sxs-lookup"><span data-stu-id="30ce8-133">If the XML document is loaded from http://localhost/mydata.xml, `BaseURI` returns the following for each of the nodes:</span></span>  
  
|<span data-ttu-id="30ce8-134">NodeType</span><span class="sxs-lookup"><span data-stu-id="30ce8-134">NodeType</span></span>|<span data-ttu-id="30ce8-135">名稱</span><span class="sxs-lookup"><span data-stu-id="30ce8-135">Name</span></span>|<span data-ttu-id="30ce8-136">BaseURI</span><span class="sxs-lookup"><span data-stu-id="30ce8-136">BaseURI</span></span>|  
|--------------|----------|-------------|  
|<span data-ttu-id="30ce8-137">文件</span><span class="sxs-lookup"><span data-stu-id="30ce8-137">Document</span></span>|<span data-ttu-id="30ce8-138">#document</span><span class="sxs-lookup"><span data-stu-id="30ce8-138">#document</span></span>|http://localhost/mydata.xml|  
|<span data-ttu-id="30ce8-139">DocumentType</span><span class="sxs-lookup"><span data-stu-id="30ce8-139">DocumentType</span></span>|<span data-ttu-id="30ce8-140">Mydata</span><span class="sxs-lookup"><span data-stu-id="30ce8-140">Mydata</span></span>|http://localhost/doctype.dtd|  
|<span data-ttu-id="30ce8-141">元素</span><span class="sxs-lookup"><span data-stu-id="30ce8-141">Element</span></span>|<span data-ttu-id="30ce8-142">baa</span><span class="sxs-lookup"><span data-stu-id="30ce8-142">baa</span></span>|http://localhost/mydata.xml|  
|<span data-ttu-id="30ce8-143">實體</span><span class="sxs-lookup"><span data-stu-id="30ce8-143">Entity</span></span>|<span data-ttu-id="30ce8-144">xyz</span><span class="sxs-lookup"><span data-stu-id="30ce8-144">xyz</span></span>|http://localhost/doctype.dtd|  
|<span data-ttu-id="30ce8-145">EntityReference</span><span class="sxs-lookup"><span data-stu-id="30ce8-145">EntityReference</span></span>|<span data-ttu-id="30ce8-146">xyz</span><span class="sxs-lookup"><span data-stu-id="30ce8-146">xyz</span></span>|http://localhost/mydata.xml|  
|<span data-ttu-id="30ce8-147">屬性</span><span class="sxs-lookup"><span data-stu-id="30ce8-147">Attribute</span></span>|<span data-ttu-id="30ce8-148">woof</span><span class="sxs-lookup"><span data-stu-id="30ce8-148">woof</span></span>|http://localhost/mydata.xml|  
  
> [!NOTE]
>  <span data-ttu-id="30ce8-149">預設屬性的基底 URI 等同於其所屬元素的基底 URI。</span><span class="sxs-lookup"><span data-stu-id="30ce8-149">The base URI of a default attribute is the same as the base URI of the element to which they belong.</span></span>  
  
 <span data-ttu-id="30ce8-150">這個屬性是文件物件模型的 Microsoft 擴充功能。</span><span class="sxs-lookup"><span data-stu-id="30ce8-150">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNode CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Xml.XmlNode CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlEntity.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CloneNode (deep As Boolean) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Xml::XmlNode ^ CloneNode(bool deep);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">
          <span data-ttu-id="30ce8-151">若要在指定的節點下遞迴地複製子樹狀結構，則為 <see langword="true" />；若只要複製節點本身，則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ce8-151">
              <see langword="true" /> to recursively clone the subtree under the specified node; <see langword="false" /> to clone only the node itself.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30ce8-152">建立這個節點的複本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ce8-152">Creates a duplicate of this node.</span>
          </span>
          <span data-ttu-id="30ce8-153">無法複製 Entity 節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ce8-153">Entity nodes cannot be cloned.</span>
          </span>
          <span data-ttu-id="30ce8-154">在 <see cref="T:System.Xml.XmlEntity" /> 物件上呼叫這個方法會擲回例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ce8-154">Calling this method on an <see cref="T:System.Xml.XmlEntity" /> object throws an exception.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="30ce8-155">傳回方法呼叫來源 <see cref="T:System.Xml.XmlNode" /> 的複本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ce8-155">Returns a copy of the <see cref="T:System.Xml.XmlNode" /> from which the method is called.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="30ce8-156">無法複製 Entity 節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ce8-156">Entity nodes cannot be cloned.</span>
          </span>
          <span data-ttu-id="30ce8-157">在 <see cref="T:System.Xml.XmlEntity" /> 物件上呼叫這個方法會擲回例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ce8-157">Calling this method on an <see cref="T:System.Xml.XmlEntity" /> object throws an exception.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="InnerText">
      <MemberSignature Language="C#" Value="public override string InnerText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InnerText" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlEntity.InnerText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property InnerText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InnerText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="30ce8-158">取得實體節點的串連值和其所有的子節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ce8-158">Gets the concatenated values of the entity node and all its children.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="30ce8-159">節點的串連值和其所有的子節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ce8-159">The concatenated values of the node and all its children.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30ce8-160">`XmlEntity` 節點是唯讀的。</span><span class="sxs-lookup"><span data-stu-id="30ce8-160">`XmlEntity` nodes are read-only.</span></span> <span data-ttu-id="30ce8-161">設定這個屬性會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="30ce8-161">Setting this property throws an exception.</span></span>  
  
 <span data-ttu-id="30ce8-162">這個屬性是文件物件模型的 Microsoft 擴充功能。</span><span class="sxs-lookup"><span data-stu-id="30ce8-162">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="30ce8-163">嘗試設定這個屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ce8-163">Attempting to set the property.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="InnerXml">
      <MemberSignature Language="C#" Value="public override string InnerXml { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InnerXml" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlEntity.InnerXml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property InnerXml As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InnerXml { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="30ce8-164">取得表示這個節點子系的標記。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ce8-164">Gets the markup representing the children of this node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="30ce8-165">對於 <see langword="XmlEntity" /> 節點，會傳回 String.Empty。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ce8-165">For <see langword="XmlEntity" /> nodes, String.Empty is returned.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30ce8-166">`XmlEntity` 節點是唯讀的。</span><span class="sxs-lookup"><span data-stu-id="30ce8-166">`XmlEntity` nodes are read-only.</span></span> <span data-ttu-id="30ce8-167">設定這個屬性會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="30ce8-167">Setting this property throws an exception.</span></span>  
  
 <span data-ttu-id="30ce8-168">這個屬性是文件物件模型的 Microsoft 擴充功能。</span><span class="sxs-lookup"><span data-stu-id="30ce8-168">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="30ce8-169">嘗試設定這個屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ce8-169">Attempting to set the property.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public override bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlEntity.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="30ce8-170">取得值，表示節點是否為唯讀。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ce8-170">Gets a value indicating whether the node is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="30ce8-171">如果節點是唯讀，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ce8-171">
              <see langword="true" /> if the node is read-only; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="30ce8-172">因為 <see langword="XmlEntity" /> 節點是唯讀，所以這個屬性必定傳回 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ce8-172">Because <see langword="XmlEntity" /> nodes are read-only, this property always returns <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30ce8-173">無法變更其屬性、 屬性或子系是唯讀的節點。</span><span class="sxs-lookup"><span data-stu-id="30ce8-173">A read-only node is one whose properties, attributes, or children cannot be changed.</span></span> <span data-ttu-id="30ce8-174">您可以從樹狀目錄移除唯讀節點，然後插入該子其他地方。</span><span class="sxs-lookup"><span data-stu-id="30ce8-174">You can remove a read-only node from the tree and insert it somewhere else.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlEntity.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ LocalName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="30ce8-175">取得節點的名稱而無命名空間前置詞。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ce8-175">Gets the name of the node without the namespace prefix.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="30ce8-176">對於 <see langword="XmlEntity" /> 節點，這個屬性會傳回實體的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ce8-176">For <see langword="XmlEntity" /> nodes, this property returns the name of the entity.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlEntity.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="30ce8-177">取得節點的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ce8-177">Gets the name of the node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="30ce8-178">實體的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ce8-178">The name of the entity.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="30ce8-179">下列範例顯示 XML 文件中宣告的實體上的資訊。</span><span class="sxs-lookup"><span data-stu-id="30ce8-179">The following example displays information on the entities declared in the XML document.</span></span>  
  
 [!code-cpp[XmlEntity#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlEntity/CPP/entities.cpp#1)]
 [!code-csharp[XmlEntity#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlEntity/CS/entities.cs#1)]
 [!code-vb[XmlEntity#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlEntity/VB/entities.vb#1)]  
  
 <span data-ttu-id="30ce8-180">此範例會使用檔案`doment.xml`做為輸入。</span><span class="sxs-lookup"><span data-stu-id="30ce8-180">The example uses the file `doment.xml` as input.</span></span>  
  
 [!code-xml[XmlEntity#2](~/samples/snippets/xml/VS_Snippets_Data/XmlEntity/XML/doment.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlDocumentType" />
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNodeType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlNodeType NodeType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlEntity.NodeType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NodeType As XmlNodeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNodeType NodeType { System::Xml::XmlNodeType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="30ce8-181">取得節點的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ce8-181">Gets the type of the node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="30ce8-182">節點類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ce8-182">The node type.</span>
          </span>
          <span data-ttu-id="30ce8-183">對於 <see langword="XmlEntity" /> 節點，其值為 XmlNodeType.Entity。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ce8-183">For <see langword="XmlEntity" /> nodes, the value is XmlNodeType.Entity.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="30ce8-184">下列範例顯示 XML 文件中宣告的實體上的資訊。</span><span class="sxs-lookup"><span data-stu-id="30ce8-184">The following example displays information on the entities declared in the XML document.</span></span>  
  
 [!code-cpp[XmlEntity#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlEntity/CPP/entities.cpp#1)]
 [!code-csharp[XmlEntity#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlEntity/CS/entities.cs#1)]
 [!code-vb[XmlEntity#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlEntity/VB/entities.vb#1)]  
  
 <span data-ttu-id="30ce8-185">此範例會使用檔案`doment.xml`做為輸入。</span><span class="sxs-lookup"><span data-stu-id="30ce8-185">The example uses the file `doment.xml` as input.</span></span>  
  
 [!code-xml[XmlEntity#2](~/samples/snippets/xml/VS_Snippets_Data/XmlEntity/XML/doment.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlNodeType" />
      </Docs>
    </Member>
    <Member MemberName="NotationName">
      <MemberSignature Language="C#" Value="public string NotationName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NotationName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlEntity.NotationName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NotationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NotationName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="30ce8-186">取得實體宣告上選擇性的 NDATA 屬性的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ce8-186">Gets the name of the optional NDATA attribute on the entity declaration.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="30ce8-187">NDATA 屬性的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ce8-187">The name of the NDATA attribute.</span>
          </span>
          <span data-ttu-id="30ce8-188">如果沒有 NDATA，就會傳回 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ce8-188">If there is no NDATA, <see langword="null" /> is returned.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="30ce8-189">下列範例顯示 XML 文件中宣告的實體上的資訊。</span><span class="sxs-lookup"><span data-stu-id="30ce8-189">The following example displays information on the entities declared in the XML document.</span></span>  
  
 [!code-cpp[XmlEntity#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlEntity/CPP/entities.cpp#1)]
 [!code-csharp[XmlEntity#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlEntity/CS/entities.cs#1)]
 [!code-vb[XmlEntity#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlEntity/VB/entities.vb#1)]  
  
 <span data-ttu-id="30ce8-190">此範例會使用該檔案，`doment.xml`作為輸入。</span><span class="sxs-lookup"><span data-stu-id="30ce8-190">The example uses the file, `doment.xml`, as input.</span></span>  
  
 [!code-xml[XmlEntity#2](~/samples/snippets/xml/VS_Snippets_Data/XmlEntity/XML/doment.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlDocumentType" />
      </Docs>
    </Member>
    <Member MemberName="OuterXml">
      <MemberSignature Language="C#" Value="public override string OuterXml { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OuterXml" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlEntity.OuterXml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property OuterXml As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ OuterXml { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="30ce8-191">取得表示這個節點及其所有子系的標記。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ce8-191">Gets the markup representing this node and all its children.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="30ce8-192">對於 <see langword="XmlEntity" /> 節點，會傳回 String.Empty。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ce8-192">For <see langword="XmlEntity" /> nodes, String.Empty is returned.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30ce8-193">這個屬性是文件物件模型的 Microsoft 擴充功能。</span><span class="sxs-lookup"><span data-stu-id="30ce8-193">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PublicId">
      <MemberSignature Language="C#" Value="public string PublicId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PublicId" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlEntity.PublicId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PublicId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PublicId { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="30ce8-194">取得實體宣告的公用識別項的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ce8-194">Gets the value of the public identifier on the entity declaration.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="30ce8-195">實體的公用識別項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ce8-195">The public identifier on the entity.</span>
          </span>
          <span data-ttu-id="30ce8-196">如果沒有公用識別項，則會傳回 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ce8-196">If there is no public identifier, <see langword="null" /> is returned.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="30ce8-197">下列範例顯示 XML 文件中宣告的實體上的資訊。</span><span class="sxs-lookup"><span data-stu-id="30ce8-197">The following example displays information on the entities declared in the XML document.</span></span>  
  
 [!code-cpp[XmlEntity#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlEntity/CPP/entities.cpp#1)]
 [!code-csharp[XmlEntity#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlEntity/CS/entities.cs#1)]
 [!code-vb[XmlEntity#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlEntity/VB/entities.vb#1)]  
  
 <span data-ttu-id="30ce8-198">此範例會使用該檔案，`doment.xml`作為輸入。</span><span class="sxs-lookup"><span data-stu-id="30ce8-198">The example uses the file, `doment.xml`, as input.</span></span>  
  
 [!code-xml[XmlEntity#2](~/samples/snippets/xml/VS_Snippets_Data/XmlEntity/XML/doment.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlDocumentType" />
      </Docs>
    </Member>
    <Member MemberName="SystemId">
      <MemberSignature Language="C#" Value="public string SystemId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SystemId" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlEntity.SystemId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SystemId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SystemId { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="30ce8-199">取得實體宣告的系統識別項 (System Identifier) 的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ce8-199">Gets the value of the system identifier on the entity declaration.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="30ce8-200">實體的系統識別項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ce8-200">The system identifier on the entity.</span>
          </span>
          <span data-ttu-id="30ce8-201">如果沒有系統識別項，就會傳回 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ce8-201">If there is no system identifier, <see langword="null" /> is returned.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="30ce8-202">下列範例顯示 XML 文件中宣告的實體上的資訊。</span><span class="sxs-lookup"><span data-stu-id="30ce8-202">The following example displays information on the entities declared in the XML document.</span></span>  
  
 [!code-cpp[XmlEntity#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlEntity/CPP/entities.cpp#1)]
 [!code-csharp[XmlEntity#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlEntity/CS/entities.cs#1)]
 [!code-vb[XmlEntity#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlEntity/VB/entities.vb#1)]  
  
 <span data-ttu-id="30ce8-203">此範例會使用檔案`doment.xml`做為輸入。</span><span class="sxs-lookup"><span data-stu-id="30ce8-203">The example uses the file `doment.xml` as input.</span></span>  
  
 [!code-xml[XmlEntity#2](~/samples/snippets/xml/VS_Snippets_Data/XmlEntity/XML/doment.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlDocumentType" />
      </Docs>
    </Member>
    <Member MemberName="WriteContentTo">
      <MemberSignature Language="C#" Value="public override void WriteContentTo (System.Xml.XmlWriter w);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteContentTo(class System.Xml.XmlWriter w) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlEntity.WriteContentTo(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteContentTo (w As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteContentTo(System::Xml::XmlWriter ^ w);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="w" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="w">
          <span data-ttu-id="30ce8-204">要儲存的目標 <see langword="XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ce8-204">The <see langword="XmlWriter" /> to which you want to save.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30ce8-205">將此節點的所有子系儲存到指定的 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ce8-205">Saves all the children of the node to the specified <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
          <span data-ttu-id="30ce8-206">對於 <see langword="XmlEntity" /> 節點，這個方法沒有任何效果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ce8-206">For <see langword="XmlEntity" /> nodes, this method has no effect.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30ce8-207">這個方法是 Microsoft 擴充功能的文件物件模型 (DOM)。</span><span class="sxs-lookup"><span data-stu-id="30ce8-207">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteTo">
      <MemberSignature Language="C#" Value="public override void WriteTo (System.Xml.XmlWriter w);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteTo(class System.Xml.XmlWriter w) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlEntity.WriteTo(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteTo (w As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteTo(System::Xml::XmlWriter ^ w);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="w" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="w">
          <span data-ttu-id="30ce8-208">要儲存的目標 <see langword="XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ce8-208">The <see langword="XmlWriter" /> to which you want to save.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30ce8-209">將節點儲存至指定的 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ce8-209">Saves the node to the specified <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
          <span data-ttu-id="30ce8-210">對於 <see langword="XmlEntity" /> 節點，這個方法沒有任何效果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ce8-210">For <see langword="XmlEntity" /> nodes, this method has no effect.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30ce8-211">這個方法是 Microsoft 擴充功能的文件物件模型 (DOM)。</span><span class="sxs-lookup"><span data-stu-id="30ce8-211">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>