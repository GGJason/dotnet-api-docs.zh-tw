<Type Name="XmlTextReader" FullName="System.Xml.XmlTextReader">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="adbf39d3716bacce895ac5eee8d993ee7079e17f" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36434429" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlTextReader : System.Xml.XmlReader, System.Xml.IXmlLineInfo, System.Xml.IXmlNamespaceResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlTextReader extends System.Xml.XmlReader implements class System.Xml.IXmlLineInfo, class System.Xml.IXmlNamespaceResolver" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlTextReader" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlTextReader&#xA;Inherits XmlReader&#xA;Implements IXmlLineInfo, IXmlNamespaceResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlTextReader : System::Xml::XmlReader, System::Xml::IXmlLineInfo, System::Xml::IXmlNamespaceResolver" />
  <TypeSignature Language="F#" Value="type XmlTextReader = class&#xA;    inherit XmlReader&#xA;    interface IXmlLineInfo&#xA;    interface IXmlNamespaceResolver" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.XmlReader</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Xml.IXmlLineInfo</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Xml.IXmlNamespaceResolver</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="c51e3-101">Represents a reader that provides fast, non-cached, forward-only access to XML data.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c51e3-101">Represents a reader that provides fast, non-cached, forward-only access to XML data.</span>
      </span>
      <span data-ttu-id="c51e3-102">Starting with the .NET Framework 2.0, we recommend that you use the <see cref="T:System.Xml.XmlReader" /> class instead.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c51e3-102">Starting with the .NET Framework 2.0, we recommend that you use the <see cref="T:System.Xml.XmlReader" /> class instead.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c51e3-103">從.NET Framework 2.0 開始，我們建議您先建立<xref:System.Xml.XmlReader>所使用的執行個體<xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType>方法，以充分利用新功能。</span><span class="sxs-lookup"><span data-stu-id="c51e3-103">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c51e3-104"><xref:System.Xml.XmlTextReader> 提供的 XML 資料流的順向、 唯讀存取。</span><span class="sxs-lookup"><span data-stu-id="c51e3-104"><xref:System.Xml.XmlTextReader> provides forward-only, read-only access to a stream of XML data.</span></span> <span data-ttu-id="c51e3-105">所謂目前節點，是指讀取器定位所在的節點。</span><span class="sxs-lookup"><span data-stu-id="c51e3-105">The current node refers to the node on which the reader is positioned.</span></span> <span data-ttu-id="c51e3-106">讀取器進階使用任何讀取的方法和屬性會反映目前節點的值。</span><span class="sxs-lookup"><span data-stu-id="c51e3-106">The reader is advanced using any of the read methods and properties reflect the value of the current node.</span></span>  
  
 <span data-ttu-id="c51e3-107">這個類別會實作<xref:System.Xml.XmlReader>且符合 W3C 可延伸標記語言 (XML) 1.0 和 XML recommendation 中的命名空間。</span><span class="sxs-lookup"><span data-stu-id="c51e3-107">This class implements <xref:System.Xml.XmlReader> and conforms to the W3C Extensible Markup Language (XML) 1.0 and the Namespaces in XML recommendations.</span></span> <span data-ttu-id="c51e3-108">`XmlTextReader` 提供下列功能：</span><span class="sxs-lookup"><span data-stu-id="c51e3-108">`XmlTextReader` provides the following functionality:</span></span>  
  
-   <span data-ttu-id="c51e3-109">強制使用的格式正確的 XML。</span><span class="sxs-lookup"><span data-stu-id="c51e3-109">Enforces the rules of well-formed XML.</span></span>  
  
-   <span data-ttu-id="c51e3-110">`XmlTextReader` 不提供資料驗證。</span><span class="sxs-lookup"><span data-stu-id="c51e3-110">`XmlTextReader` does not provide data validation.</span></span>  
  
-   <span data-ttu-id="c51e3-111">檢查`DocumentType`節點是語式正確。</span><span class="sxs-lookup"><span data-stu-id="c51e3-111">Checks that `DocumentType` nodes are well-formed.</span></span> <span data-ttu-id="c51e3-112">`XmlTextReader` 檢查 DTD 的格式正確性，但不會驗證使用 DTD。</span><span class="sxs-lookup"><span data-stu-id="c51e3-112">`XmlTextReader` checks the DTD for well-formedness, but does not validate using the DTD.</span></span>  
  
-   <span data-ttu-id="c51e3-113">節點位置<xref:System.Xml.XmlTextReader.NodeType%2A>是`XmlNodeType.EntityReference`，單一的空白`EntityReference`則會傳回節點 (也就是<xref:System.Xml.XmlTextReader.Value%2A>屬性是`String.Empty`)。</span><span class="sxs-lookup"><span data-stu-id="c51e3-113">For nodes where <xref:System.Xml.XmlTextReader.NodeType%2A> is `XmlNodeType.EntityReference`, a single empty `EntityReference` node is returned (that is, the <xref:System.Xml.XmlTextReader.Value%2A> property is `String.Empty`).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c51e3-114">DTD 中的實體的實際宣告稱為`Entity`節點。</span><span class="sxs-lookup"><span data-stu-id="c51e3-114">The actual declarations of entities in the DTD are called `Entity` nodes.</span></span> <span data-ttu-id="c51e3-115">當您在資料中參考這些節點時，它們就會呼叫`EntityReference`節點。</span><span class="sxs-lookup"><span data-stu-id="c51e3-115">When you refer to these nodes in your data, they are called `EntityReference` nodes.</span></span>  
  
-   <span data-ttu-id="c51e3-116">不會展開預設屬性。</span><span class="sxs-lookup"><span data-stu-id="c51e3-116">Does not expand default attributes.</span></span>  
  
 <span data-ttu-id="c51e3-117">因為`XmlTextReader`不會執行資料驗證所需的額外檢查它所提供的快速語式剖析器。</span><span class="sxs-lookup"><span data-stu-id="c51e3-117">Because the `XmlTextReader` does not perform the extra checks required for data validation, it provides a fast well-formedness parser.</span></span>  
  
 <span data-ttu-id="c51e3-118">若要執行資料驗證，請使用 驗證<xref:System.Xml.XmlReader>。</span><span class="sxs-lookup"><span data-stu-id="c51e3-118">To perform data validation, use a validating <xref:System.Xml.XmlReader>.</span></span>  
  
 <span data-ttu-id="c51e3-119">若要讀取 XML 資料從<xref:System.Xml.XmlDocument>，使用<xref:System.Xml.XmlNodeReader>。</span><span class="sxs-lookup"><span data-stu-id="c51e3-119">To read XML data from an <xref:System.Xml.XmlDocument>, use <xref:System.Xml.XmlNodeReader>.</span></span>  
  
 <span data-ttu-id="c51e3-120">`XmlTextReader` 擲回<xref:System.Xml.XmlException>xml 剖析錯誤。</span><span class="sxs-lookup"><span data-stu-id="c51e3-120">`XmlTextReader` throws an <xref:System.Xml.XmlException> on XML parse errors.</span></span> <span data-ttu-id="c51e3-121">擲回例外狀況之後讀取器的狀態不是可預測的。</span><span class="sxs-lookup"><span data-stu-id="c51e3-121">After an exception is thrown the state of the reader is not predictable.</span></span> <span data-ttu-id="c51e3-122">例如，報告的節點類型可能不同於目前節點的實際節點類型。</span><span class="sxs-lookup"><span data-stu-id="c51e3-122">For example, the reported node type may be different than the actual node type of the current node.</span></span> <span data-ttu-id="c51e3-123">使用<xref:System.Xml.XmlTextReader.ReadState%2A>屬性來檢查讀取器是否處於錯誤狀態。</span><span class="sxs-lookup"><span data-stu-id="c51e3-123">Use the <xref:System.Xml.XmlTextReader.ReadState%2A> property to check whether a reader is in error state.</span></span>  
  
## <a name="security-considerations"></a><span data-ttu-id="c51e3-124">安全性考量</span><span class="sxs-lookup"><span data-stu-id="c51e3-124">Security Considerations</span></span>  
 <span data-ttu-id="c51e3-125">以下是使用時的考慮事項<xref:System.Xml.XmlTextReader>類別。</span><span class="sxs-lookup"><span data-stu-id="c51e3-125">The following are things to consider when using the <xref:System.Xml.XmlTextReader> class.</span></span>  
  
-   <span data-ttu-id="c51e3-126">擲回例外狀況<xref:System.Xml.XmlTextReader>可以揭露您不想要的路徑資訊反昇至應用程式。</span><span class="sxs-lookup"><span data-stu-id="c51e3-126">Exceptions thrown the <xref:System.Xml.XmlTextReader> can disclose path information that you do not want bubbled up to the application.</span></span> <span data-ttu-id="c51e3-127">應用程式必須捕捉例外狀況並予以適當處理。</span><span class="sxs-lookup"><span data-stu-id="c51e3-127">Your applications must catch exceptions and process them appropriately.</span></span>  
  
-   <span data-ttu-id="c51e3-128">DTD 處理預設會啟用。</span><span class="sxs-lookup"><span data-stu-id="c51e3-128">DTD processing is enabled by default.</span></span> <span data-ttu-id="c51e3-129">停用 DTD 處理，如果您擔心阻絕服務問題，或如果您正在處理不受信任的來源。</span><span class="sxs-lookup"><span data-stu-id="c51e3-129">Disable DTD processing if you are concerned about Denial of Service issues or if you are dealing with untrusted sources.</span></span> <span data-ttu-id="c51e3-130">設定<xref:System.Xml.XmlTextReader.DtdProcessing%2A>屬性<xref:System.Xml.DtdProcessing.Prohibit>停用 DTD 處理。</span><span class="sxs-lookup"><span data-stu-id="c51e3-130">Set the <xref:System.Xml.XmlTextReader.DtdProcessing%2A> property to <xref:System.Xml.DtdProcessing.Prohibit> to disable DTD processing.</span></span>  
  
     <span data-ttu-id="c51e3-131">如果已啟用 DTD 處理，則可使用 <xref:System.Xml.XmlSecureResolver> 限制 <xref:System.Xml.XmlTextReader> 可存取的資源。</span><span class="sxs-lookup"><span data-stu-id="c51e3-131">If you have DTD processing enabled, you can use the <xref:System.Xml.XmlSecureResolver> to restrict the resources that the <xref:System.Xml.XmlTextReader> can access.</span></span> <span data-ttu-id="c51e3-132">您還可以設計應用程式，讓 XML 處理具有記憶體和時間限制。</span><span class="sxs-lookup"><span data-stu-id="c51e3-132">You can also design your application so that the XML processing is memory and time constrained.</span></span> <span data-ttu-id="c51e3-133">例如，在 ASP.NET 應用程式中設定逾時限制。</span><span class="sxs-lookup"><span data-stu-id="c51e3-133">For example, configure time-out limits in your ASP.NET application.</span></span>  
  
-   <span data-ttu-id="c51e3-134">XML 資料可以包括外部資源，例如 DTD 檔案的參考。</span><span class="sxs-lookup"><span data-stu-id="c51e3-134">XML data can include references to external resources such as a DTD file.</span></span> <span data-ttu-id="c51e3-135">依預設，外部資源會使用不具使用者認證的 <xref:System.Xml.XmlUrlResolver> 物件來解析。</span><span class="sxs-lookup"><span data-stu-id="c51e3-135">By default external resources are resolved using an <xref:System.Xml.XmlUrlResolver> object with no user credentials.</span></span> <span data-ttu-id="c51e3-136">您可以透過執行下列其中一項作業，進一步保護它：</span><span class="sxs-lookup"><span data-stu-id="c51e3-136">You can secure this further by doing one of the following:</span></span>  
  
    -   <span data-ttu-id="c51e3-137">藉由將 <xref:System.Xml.XmlTextReader> 屬性設為 <xref:System.Xml.XmlTextReader.XmlResolver%2A> 物件，限制 <xref:System.Xml.XmlSecureResolver> 可以存取的資源。</span><span class="sxs-lookup"><span data-stu-id="c51e3-137">Restrict the resources that the <xref:System.Xml.XmlTextReader> can access by setting the <xref:System.Xml.XmlTextReader.XmlResolver%2A> property to an <xref:System.Xml.XmlSecureResolver> object.</span></span>  
  
    -   <span data-ttu-id="c51e3-138">藉由將 <xref:System.Xml.XmlReader> 屬性設為 <xref:System.Xml.XmlTextReader.XmlResolver%2A>，來禁止 `null` 開啟外部資源。</span><span class="sxs-lookup"><span data-stu-id="c51e3-138">Do not allow the <xref:System.Xml.XmlReader> to open any external resources by setting the <xref:System.Xml.XmlTextReader.XmlResolver%2A> property to `null`.</span></span>  
  
-   <span data-ttu-id="c51e3-139">XML 資料可以包含需要相當長時間來處理的大量屬性、命名空間宣告、巢狀項目等。</span><span class="sxs-lookup"><span data-stu-id="c51e3-139">XML data can contain a large number of attributes, namespace declarations, nested elements and so on that require a substantial amount of time to process.</span></span> <span data-ttu-id="c51e3-140">若要限制的輸入會傳送至大小<xref:System.Xml.XmlTextReader>、 建立自訂 IStream 實作，並提供<xref:System.Xml.XmlTextReader>。</span><span class="sxs-lookup"><span data-stu-id="c51e3-140">To limit the size of the input that is sent to the <xref:System.Xml.XmlTextReader>, create a custom IStream implementation and supply it the <xref:System.Xml.XmlTextReader>.</span></span>  
  
-   <span data-ttu-id="c51e3-141"><xref:System.Xml.XmlReader.ReadValueChunk%2A>方法可以用來處理資料的大量資料流。</span><span class="sxs-lookup"><span data-stu-id="c51e3-141">The <xref:System.Xml.XmlReader.ReadValueChunk%2A> method can be used to handle large streams of data.</span></span> <span data-ttu-id="c51e3-142">此方法每次會讀取較少數量的字元，而不是為整個值配置單一字串。</span><span class="sxs-lookup"><span data-stu-id="c51e3-142">This method reads a small number of characters at a time instead of allocating a single string for the whole value.</span></span>  
  
-   <span data-ttu-id="c51e3-143">依預設不會展開一般實體。</span><span class="sxs-lookup"><span data-stu-id="c51e3-143">By default general entities are not expanded.</span></span> <span data-ttu-id="c51e3-144">當呼叫 <xref:System.Xml.XmlTextReader.ResolveEntity%2A> 方法時，會展開一般實體。</span><span class="sxs-lookup"><span data-stu-id="c51e3-144">General entities are expanded when you call the <xref:System.Xml.XmlTextReader.ResolveEntity%2A> method.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="c51e3-145">
        <para>這個類別具有繼承要求。完全信任才能繼承自<see langword="XmlTextReader" />。</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="c51e3-145">
          <para>This class has an inheritance demand. Full trust is required to inherit from <see langword="XmlTextReader" />.</para>
        </span>
      </span>
    </block>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c51e3-146">Initializes a new instance of the <see cref="T:System.Xml.XmlTextReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-146">Initializes a new instance of the <see cref="T:System.Xml.XmlTextReader" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c51e3-147">從.NET Framework 2.0 開始，我們建議您先建立<xref:System.Xml.XmlReader>所使用的執行個體<xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType>方法，以充分利用新功能。</span><span class="sxs-lookup"><span data-stu-id="c51e3-147">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XmlTextReader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XmlTextReader();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c51e3-148">Initializes a new instance of the <see langword="XmlTextReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-148">Initializes a new instance of the <see langword="XmlTextReader" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextReader (System.IO.Stream input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.#ctor(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (input As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextReader(System::IO::Stream ^ input);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlTextReader : System.IO.Stream -&gt; System.Xml.XmlTextReader" Usage="new System.Xml.XmlTextReader input" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="input" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="c51e3-149">The stream containing the XML data to read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-149">The stream containing the XML data to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c51e3-150">Initializes a new instance of the <see cref="T:System.Xml.XmlTextReader" /> class with the specified stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-150">Initializes a new instance of the <see cref="T:System.Xml.XmlTextReader" /> class with the specified stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c51e3-151">從.NET Framework 2.0 開始，我們建議您先建立<xref:System.Xml.XmlReader>所使用的執行個體<xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType>方法，以充分利用新功能。</span><span class="sxs-lookup"><span data-stu-id="c51e3-151">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c51e3-152"><xref:System.Xml.XmlTextReader>解碼資料流使用<xref:System.Text.Encoding?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="c51e3-152">The <xref:System.Xml.XmlTextReader> decodes the stream using <xref:System.Text.Encoding?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c51e3-153">
            <paramref name="input" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-153">
              <paramref name="input" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextReader (System.IO.TextReader input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextReader input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.#ctor(System.IO.TextReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (input As TextReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextReader(System::IO::TextReader ^ input);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlTextReader : System.IO.TextReader -&gt; System.Xml.XmlTextReader" Usage="new System.Xml.XmlTextReader input" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="input" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="c51e3-154">The <see langword="TextReader" /> containing the XML data to read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-154">The <see langword="TextReader" /> containing the XML data to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c51e3-155">Initializes a new instance of the <see cref="T:System.Xml.XmlTextReader" /> class with the specified <see cref="T:System.IO.TextReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-155">Initializes a new instance of the <see cref="T:System.Xml.XmlTextReader" /> class with the specified <see cref="T:System.IO.TextReader" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c51e3-156">從.NET Framework 2.0 開始，我們建議您先建立<xref:System.Xml.XmlReader>所使用的執行個體<xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType>方法，以充分利用新功能。</span><span class="sxs-lookup"><span data-stu-id="c51e3-156">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c51e3-157">假設`TextReader`已經設定為正確的編碼方式。</span><span class="sxs-lookup"><span data-stu-id="c51e3-157">It is assumed that the `TextReader` is already set to the correct encoding.</span></span> <span data-ttu-id="c51e3-158">這是已經從資料流中的多部分 MIME 案例閱讀某些作業的用戶端使用。</span><span class="sxs-lookup"><span data-stu-id="c51e3-158">This is used by clients that have already read some things from the stream in a multi-part MIME scenario.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c51e3-159">下列範例會載入至 XML 字串`XmlTextReader`物件使用<xref:System.IO.StringReader>類別。</span><span class="sxs-lookup"><span data-stu-id="c51e3-159">The following example loads an XML string into the `XmlTextReader` object using the <xref:System.IO.StringReader> class.</span></span>  
  
 [!code-cpp[XmlTextReader.cctor1#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlTextReader.cctor1/CPP/rdrcctor1.cpp#1)]
 [!code-csharp[XmlTextReader.cctor1#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlTextReader.cctor1/CS/rdrcctor1.cs#1)]
 [!code-vb[XmlTextReader.cctor1#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlTextReader.cctor1/VB/rdrcctor1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextReader (string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (url As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextReader(System::String ^ url);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlTextReader : string -&gt; System.Xml.XmlTextReader" Usage="new System.Xml.XmlTextReader url" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url">
          <span data-ttu-id="c51e3-160">The URL for the file containing the XML data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-160">The URL for the file containing the XML data.</span>
          </span>
          <span data-ttu-id="c51e3-161">The <see cref="P:System.Xml.XmlTextReader.BaseURI" /> is set to this value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-161">The <see cref="P:System.Xml.XmlTextReader.BaseURI" /> is set to this value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c51e3-162">Initializes a new instance of the <see cref="T:System.Xml.XmlTextReader" /> class with the specified file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-162">Initializes a new instance of the <see cref="T:System.Xml.XmlTextReader" /> class with the specified file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c51e3-163">從.NET Framework 2.0 開始，我們建議您先建立<xref:System.Xml.XmlReader>所使用的執行個體<xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType>方法，以充分利用新功能。</span><span class="sxs-lookup"><span data-stu-id="c51e3-163">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c51e3-164">如果檔案位於需要存取認證的資源上，使用<xref:System.Xml.XmlTextReader.XmlResolver%2A>屬性來指定所需的認證。</span><span class="sxs-lookup"><span data-stu-id="c51e3-164">If the file is located on a resource that requires access credentials, use the <xref:System.Xml.XmlTextReader.XmlResolver%2A> property to specify the necessary credentials.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c51e3-165">1.1 版中[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]，部分信任的程式碼不能設定`XmlResolver`屬性。</span><span class="sxs-lookup"><span data-stu-id="c51e3-165">In version 1.1 of the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)], partially trusted code cannot set the `XmlResolver` property.</span></span> <span data-ttu-id="c51e3-166">解決方式是建立<xref:System.Xml.XmlUrlResolver>與所需的認證傳遞至 URI<xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=nameWithType>方法，並再建構`XmlTextReader`使用產生<xref:System.IO.Stream>物件。</span><span class="sxs-lookup"><span data-stu-id="c51e3-166">The workaround is to create an <xref:System.Xml.XmlUrlResolver> with the necessary credentials, pass the URI to the <xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=nameWithType> method, and then construct the `XmlTextReader` using the resulting <xref:System.IO.Stream> object.</span></span> <span data-ttu-id="c51e3-167">因應措施是下列 C# 程式碼中所述。</span><span class="sxs-lookup"><span data-stu-id="c51e3-167">The workaround is described in the following C# code.</span></span>  
  
```csharp  
// Create a resolver with the necessary credentials.  
XmlUrlResolver resolver = new XmlUrlResolver();  
NetworkCredential nc = new NetworkCredential(SecurelyStoredUserName, SecurelyStoredPassword, SecurelyStoredDomain);  
resolver.Credentials = nc;   
// Get a Stream object containing the XML file.  
Uri myUri = new Uri ("http://myServer/data/books.xml");  
Stream s=(Stream)resolver.GetEntity(myUri, null, typeof(Stream));  
// Construct a reader using the Stream object.  
XmlTextReader reader = new XmlTextReader(s);  
```  
  
   
  
## Examples  
 <span data-ttu-id="c51e3-168">下列範例會讀取 XML 檔案，並顯示每個節點。</span><span class="sxs-lookup"><span data-stu-id="c51e3-168">The following example reads an XML file and displays each of the nodes.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextReader.Name Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextReader.Name Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextReader.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/VB/source.vb#1)]  
  
 <span data-ttu-id="c51e3-169">此範例會使用該檔案，`items.xml`作為輸入。</span><span class="sxs-lookup"><span data-stu-id="c51e3-169">The example uses the file, `items.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlTextReader.Name Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="c51e3-170">The specified file cannot be found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-170">The specified file cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="c51e3-171">Part of the filename or directory cannot be found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-171">Part of the filename or directory cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c51e3-172">
            <paramref name="url" /> is an empty string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-172">
              <paramref name="url" /> is an empty string.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.WebException">
          <span data-ttu-id="c51e3-173">The remote filename cannot be resolved.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-173">The remote filename cannot be resolved.</span>
          </span>
          <span data-ttu-id="c51e3-174">-or-  An error occurred while processing the request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-174">-or-  An error occurred while processing the request.</span>
          </span>
        </exception>
        <exception cref="T:System.UriFormatException">
          <span data-ttu-id="c51e3-175">
            <paramref name="url" /> is not a valid URI.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-175">
              <paramref name="url" /> is not a valid URI.</span>
          </span>
        </exception>
        <altmember cref="P:System.Xml.XmlTextReader.XmlResolver" />
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XmlTextReader (System.Xml.XmlNameTable nt);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlNameTable nt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.#ctor(System.Xml.XmlNameTable)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (nt As XmlNameTable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XmlTextReader(System::Xml::XmlNameTable ^ nt);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlTextReader : System.Xml.XmlNameTable -&gt; System.Xml.XmlTextReader" Usage="new System.Xml.XmlTextReader nt" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="nt" Type="System.Xml.XmlNameTable" />
      </Parameters>
      <Docs>
        <param name="nt">
          <span data-ttu-id="c51e3-176">The <see langword="XmlNameTable" /> to use.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-176">The <see langword="XmlNameTable" /> to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c51e3-177">Initializes a new instance of the <see cref="T:System.Xml.XmlTextReader" /> class with the specified <see cref="T:System.Xml.XmlNameTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-177">Initializes a new instance of the <see cref="T:System.Xml.XmlTextReader" /> class with the specified <see cref="T:System.Xml.XmlNameTable" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c51e3-178">從.NET Framework 2.0 開始，我們建議您先建立<xref:System.Xml.XmlReader>所使用的執行個體<xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType>方法，以充分利用新功能。</span><span class="sxs-lookup"><span data-stu-id="c51e3-178">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextReader (System.IO.Stream input, System.Xml.XmlNameTable nt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream input, class System.Xml.XmlNameTable nt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.#ctor(System.IO.Stream,System.Xml.XmlNameTable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (input As Stream, nt As XmlNameTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextReader(System::IO::Stream ^ input, System::Xml::XmlNameTable ^ nt);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlTextReader : System.IO.Stream * System.Xml.XmlNameTable -&gt; System.Xml.XmlTextReader" Usage="new System.Xml.XmlTextReader (input, nt)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="input" Type="System.IO.Stream" />
        <Parameter Name="nt" Type="System.Xml.XmlNameTable" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="c51e3-179">The stream containing the XML data to read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-179">The stream containing the XML data to read.</span>
          </span>
        </param>
        <param name="nt">
          <span data-ttu-id="c51e3-180">The <see langword="XmlNameTable" /> to use.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-180">The <see langword="XmlNameTable" /> to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c51e3-181">Initializes a new instance of the <see cref="T:System.Xml.XmlTextReader" /> class with the specified stream and <see cref="T:System.Xml.XmlNameTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-181">Initializes a new instance of the <see cref="T:System.Xml.XmlTextReader" /> class with the specified stream and <see cref="T:System.Xml.XmlNameTable" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c51e3-182">從.NET Framework 2.0 開始，我們建議您先建立<xref:System.Xml.XmlReader>所使用的執行個體<xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType>方法，以充分利用新功能。</span><span class="sxs-lookup"><span data-stu-id="c51e3-182">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c51e3-183"><xref:System.Xml.XmlTextReader>解碼資料流使用<xref:System.Text.Encoding?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="c51e3-183">The <xref:System.Xml.XmlTextReader> decodes the stream using <xref:System.Text.Encoding?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="c51e3-184">如果您指定的名稱表，這個建構函式會使用該資料表中已定義的名稱。</span><span class="sxs-lookup"><span data-stu-id="c51e3-184">If you specify a name table, this constructor uses the names defined already in that table.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="c51e3-185">The <paramref name="input" /> or <paramref name="nt" /> value is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-185">The <paramref name="input" /> or <paramref name="nt" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextReader (System.IO.TextReader input, System.Xml.XmlNameTable nt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextReader input, class System.Xml.XmlNameTable nt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.#ctor(System.IO.TextReader,System.Xml.XmlNameTable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (input As TextReader, nt As XmlNameTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextReader(System::IO::TextReader ^ input, System::Xml::XmlNameTable ^ nt);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlTextReader : System.IO.TextReader * System.Xml.XmlNameTable -&gt; System.Xml.XmlTextReader" Usage="new System.Xml.XmlTextReader (input, nt)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="input" Type="System.IO.TextReader" />
        <Parameter Name="nt" Type="System.Xml.XmlNameTable" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="c51e3-186">The <see langword="TextReader" /> containing the XML data to read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-186">The <see langword="TextReader" /> containing the XML data to read.</span>
          </span>
        </param>
        <param name="nt">
          <span data-ttu-id="c51e3-187">The <see langword="XmlNameTable" /> to use.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-187">The <see langword="XmlNameTable" /> to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c51e3-188">Initializes a new instance of the <see cref="T:System.Xml.XmlTextReader" /> class with the specified <see cref="T:System.IO.TextReader" /> and <see cref="T:System.Xml.XmlNameTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-188">Initializes a new instance of the <see cref="T:System.Xml.XmlTextReader" /> class with the specified <see cref="T:System.IO.TextReader" /> and <see cref="T:System.Xml.XmlNameTable" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c51e3-189">從.NET Framework 2.0 開始，我們建議您先建立<xref:System.Xml.XmlReader>所使用的執行個體<xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType>方法，以充分利用新功能。</span><span class="sxs-lookup"><span data-stu-id="c51e3-189">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c51e3-190">假設`TextReader`已經設定為正確的編碼方式。</span><span class="sxs-lookup"><span data-stu-id="c51e3-190">It is assumed that the `TextReader` is already set to the correct encoding.</span></span> <span data-ttu-id="c51e3-191">這是已經從資料流中的多部分 MIME 案例閱讀某些作業的用戶端使用。</span><span class="sxs-lookup"><span data-stu-id="c51e3-191">This is used by clients that have already read some things from the stream in a multi-part MIME scenario.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="c51e3-192">The <paramref name="nt" /> value is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-192">The <paramref name="nt" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextReader (string url, System.IO.Stream input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string url, class System.IO.Stream input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (url As String, input As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextReader(System::String ^ url, System::IO::Stream ^ input);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlTextReader : string * System.IO.Stream -&gt; System.Xml.XmlTextReader" Usage="new System.Xml.XmlTextReader (url, input)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="input" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="url">
          <span data-ttu-id="c51e3-193">The URL to use for resolving external resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-193">The URL to use for resolving external resources.</span>
          </span>
          <span data-ttu-id="c51e3-194">The <see cref="P:System.Xml.XmlTextReader.BaseURI" /> is set to this value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-194">The <see cref="P:System.Xml.XmlTextReader.BaseURI" /> is set to this value.</span>
          </span>
        </param>
        <param name="input">
          <span data-ttu-id="c51e3-195">The stream containing the XML data to read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-195">The stream containing the XML data to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c51e3-196">Initializes a new instance of the <see cref="T:System.Xml.XmlTextReader" /> class with the specified URL and stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-196">Initializes a new instance of the <see cref="T:System.Xml.XmlTextReader" /> class with the specified URL and stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c51e3-197">從.NET Framework 2.0 開始，我們建議您先建立<xref:System.Xml.XmlReader>所使用的執行個體<xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType>方法，以充分利用新功能。</span><span class="sxs-lookup"><span data-stu-id="c51e3-197">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c51e3-198">
            <paramref name="input" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-198">
              <paramref name="input" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextReader (string url, System.IO.TextReader input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string url, class System.IO.TextReader input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.TextReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (url As String, input As TextReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextReader(System::String ^ url, System::IO::TextReader ^ input);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlTextReader : string * System.IO.TextReader -&gt; System.Xml.XmlTextReader" Usage="new System.Xml.XmlTextReader (url, input)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="input" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <param name="url">
          <span data-ttu-id="c51e3-199">The URL to use for resolving external resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-199">The URL to use for resolving external resources.</span>
          </span>
          <span data-ttu-id="c51e3-200">The <see cref="P:System.Xml.XmlTextReader.BaseURI" /> is set to this value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-200">The <see cref="P:System.Xml.XmlTextReader.BaseURI" /> is set to this value.</span>
          </span>
        </param>
        <param name="input">
          <span data-ttu-id="c51e3-201">The <see langword="TextReader" /> containing the XML data to read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-201">The <see langword="TextReader" /> containing the XML data to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c51e3-202">Initializes a new instance of the <see cref="T:System.Xml.XmlTextReader" /> class with the specified URL and <see cref="T:System.IO.TextReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-202">Initializes a new instance of the <see cref="T:System.Xml.XmlTextReader" /> class with the specified URL and <see cref="T:System.IO.TextReader" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c51e3-203">從.NET Framework 2.0 開始，我們建議您先建立<xref:System.Xml.XmlReader>所使用的執行個體<xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType>方法，以充分利用新功能。</span><span class="sxs-lookup"><span data-stu-id="c51e3-203">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c51e3-204">假設`TextReader`已經設定為正確的編碼方式。</span><span class="sxs-lookup"><span data-stu-id="c51e3-204">It is assumed that the `TextReader` is already set to the correct encoding.</span></span> <span data-ttu-id="c51e3-205">這是已經從資料流中的多部分 MIME 案例閱讀某些作業的用戶端使用。</span><span class="sxs-lookup"><span data-stu-id="c51e3-205">This is used by clients that have already read some things from the stream in a multi-part MIME scenario.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextReader (string url, System.Xml.XmlNameTable nt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string url, class System.Xml.XmlNameTable nt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.#ctor(System.String,System.Xml.XmlNameTable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (url As String, nt As XmlNameTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextReader(System::String ^ url, System::Xml::XmlNameTable ^ nt);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlTextReader : string * System.Xml.XmlNameTable -&gt; System.Xml.XmlTextReader" Usage="new System.Xml.XmlTextReader (url, nt)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="nt" Type="System.Xml.XmlNameTable" />
      </Parameters>
      <Docs>
        <param name="url">
          <span data-ttu-id="c51e3-206">The URL for the file containing the XML data to read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-206">The URL for the file containing the XML data to read.</span>
          </span>
        </param>
        <param name="nt">
          <span data-ttu-id="c51e3-207">The <see langword="XmlNameTable" /> to use.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-207">The <see langword="XmlNameTable" /> to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c51e3-208">Initializes a new instance of the <see cref="T:System.Xml.XmlTextReader" /> class with the specified file and <see cref="T:System.Xml.XmlNameTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-208">Initializes a new instance of the <see cref="T:System.Xml.XmlTextReader" /> class with the specified file and <see cref="T:System.Xml.XmlNameTable" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c51e3-209">從.NET Framework 2.0 開始，我們建議您先建立<xref:System.Xml.XmlReader>所使用的執行個體<xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType>方法，以充分利用新功能。</span><span class="sxs-lookup"><span data-stu-id="c51e3-209">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="c51e3-210">The <paramref name="nt" /> value is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-210">The <paramref name="nt" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="c51e3-211">The specified file cannot be found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-211">The specified file cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="c51e3-212">Part of the filename or directory cannot be found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-212">Part of the filename or directory cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c51e3-213">
            <paramref name="url" /> is an empty string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-213">
              <paramref name="url" /> is an empty string.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.WebException">
          <span data-ttu-id="c51e3-214">The remote filename cannot be resolved.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-214">The remote filename cannot be resolved.</span>
          </span>
          <span data-ttu-id="c51e3-215">-or-  An error occurred while processing the request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-215">-or-  An error occurred while processing the request.</span>
          </span>
        </exception>
        <exception cref="T:System.UriFormatException">
          <span data-ttu-id="c51e3-216">
            <paramref name="url" /> is not a valid URI.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-216">
              <paramref name="url" /> is not a valid URI.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextReader (System.IO.Stream xmlFragment, System.Xml.XmlNodeType fragType, System.Xml.XmlParserContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream xmlFragment, valuetype System.Xml.XmlNodeType fragType, class System.Xml.XmlParserContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xmlFragment As Stream, fragType As XmlNodeType, context As XmlParserContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextReader(System::IO::Stream ^ xmlFragment, System::Xml::XmlNodeType fragType, System::Xml::XmlParserContext ^ context);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlTextReader : System.IO.Stream * System.Xml.XmlNodeType * System.Xml.XmlParserContext -&gt; System.Xml.XmlTextReader" Usage="new System.Xml.XmlTextReader (xmlFragment, fragType, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlFragment" Type="System.IO.Stream" />
        <Parameter Name="fragType" Type="System.Xml.XmlNodeType" />
        <Parameter Name="context" Type="System.Xml.XmlParserContext" />
      </Parameters>
      <Docs>
        <param name="xmlFragment">
          <span data-ttu-id="c51e3-217">The stream containing the XML fragment to parse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-217">The stream containing the XML fragment to parse.</span>
          </span>
        </param>
        <param name="fragType">
          <span data-ttu-id="c51e3-218">The <see cref="T:System.Xml.XmlNodeType" /> of the XML fragment.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-218">The <see cref="T:System.Xml.XmlNodeType" /> of the XML fragment.</span>
          </span>
          <span data-ttu-id="c51e3-219">This also determines what the fragment can contain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-219">This also determines what the fragment can contain.</span>
          </span>
          <span data-ttu-id="c51e3-220">(See table below.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-220">(See table below.)</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="c51e3-221">The <see cref="T:System.Xml.XmlParserContext" /> in which the <c>xmlFragment</c> is to be parsed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-221">The <see cref="T:System.Xml.XmlParserContext" /> in which the <c>xmlFragment</c> is to be parsed.</span>
          </span>
          <span data-ttu-id="c51e3-222">This includes the <see cref="T:System.Xml.XmlNameTable" /> to use, encoding, namespace scope, the current <c>xml:lang</c>, and the <c>xml:space</c> scope.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-222">This includes the <see cref="T:System.Xml.XmlNameTable" /> to use, encoding, namespace scope, the current <c>xml:lang</c>, and the <c>xml:space</c> scope.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c51e3-223">Initializes a new instance of the <see cref="T:System.Xml.XmlTextReader" /> class with the specified stream, <see cref="T:System.Xml.XmlNodeType" />, and <see cref="T:System.Xml.XmlParserContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-223">Initializes a new instance of the <see cref="T:System.Xml.XmlTextReader" /> class with the specified stream, <see cref="T:System.Xml.XmlNodeType" />, and <see cref="T:System.Xml.XmlParserContext" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c51e3-224">從.NET Framework 2.0 開始，我們建議您先建立<xref:System.Xml.XmlReader>所使用的執行個體<xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType>方法，以充分利用新功能。</span><span class="sxs-lookup"><span data-stu-id="c51e3-224">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c51e3-225">這個建構函式會將指定的字串剖析為 XML 片段。</span><span class="sxs-lookup"><span data-stu-id="c51e3-225">This constructor parses the given string as a fragment of XML.</span></span> <span data-ttu-id="c51e3-226">如果元素或屬性的 XML 片段，您可以略過的語式正確的 XML 文件根層級的規則。</span><span class="sxs-lookup"><span data-stu-id="c51e3-226">If the XML fragment is an element or attribute, you can bypass the root level rules for well-formed XML documents.</span></span>  
  
 <span data-ttu-id="c51e3-227">下表列出的有效值`fragType`。</span><span class="sxs-lookup"><span data-stu-id="c51e3-227">The following table lists valid values for `fragType`.</span></span>  
  
|<span data-ttu-id="c51e3-228">XmlNodeType</span><span class="sxs-lookup"><span data-stu-id="c51e3-228">XmlNodeType</span></span>|<span data-ttu-id="c51e3-229">片段可能包含</span><span class="sxs-lookup"><span data-stu-id="c51e3-229">Fragment May Contain</span></span>|  
|-----------------|--------------------------|  
|`Element`|<span data-ttu-id="c51e3-230">任何有效的項目內容 （例如，項目、 註解、 處理指示、 CDATA 區段、 文字和實體參考的任何組合）。</span><span class="sxs-lookup"><span data-stu-id="c51e3-230">Any valid element content (for example, any combination of elements, comments, processing instructions, CDATA sections, text, and entity references).</span></span><br /><br /> <span data-ttu-id="c51e3-231">您也可以提供 XML 宣告。</span><span class="sxs-lookup"><span data-stu-id="c51e3-231">An XML declaration can also be supplied.</span></span> <span data-ttu-id="c51e3-232">這可讓您指定的編碼方式的 XML 片段，而不是不必上設定<xref:System.Xml.XmlParserContext>物件。</span><span class="sxs-lookup"><span data-stu-id="c51e3-232">This allows you to specify the encoding for the XML fragment, rather than having to set it on the <xref:System.Xml.XmlParserContext> object.</span></span>|  
|`Attribute`|<span data-ttu-id="c51e3-233">屬性 （在引號內的部分） 的值。</span><span class="sxs-lookup"><span data-stu-id="c51e3-233">The value of an attribute (the part inside the quotes).</span></span>|  
|`Document`|<span data-ttu-id="c51e3-234">完整的 XML 文件內容。</span><span class="sxs-lookup"><span data-stu-id="c51e3-234">The contents of an entire XML document.</span></span> <span data-ttu-id="c51e3-235">這會強制執行文件層級的規則。</span><span class="sxs-lookup"><span data-stu-id="c51e3-235">This enforces document level rules.</span></span>|  
  
 <span data-ttu-id="c51e3-236">讀取器會使用下列來決定資料流的編碼方式。</span><span class="sxs-lookup"><span data-stu-id="c51e3-236">The reader uses the following to determine the encoding of the stream.</span></span>  
  
1.  <span data-ttu-id="c51e3-237">檢查<xref:System.Xml.XmlParserContext.Encoding%2A?displayProperty=nameWithType>屬性來判斷的編碼方式。</span><span class="sxs-lookup"><span data-stu-id="c51e3-237">Checks the <xref:System.Xml.XmlParserContext.Encoding%2A?displayProperty=nameWithType> property to determine the encoding.</span></span>  
  
2.  <span data-ttu-id="c51e3-238">如果`Encoding`屬性是`null`，讀取器已檢查的資料流開頭的位元組順序標記。</span><span class="sxs-lookup"><span data-stu-id="c51e3-238">If the `Encoding` property is `null`, the reader checks for a byte-order mark at the beginning of the stream.</span></span>  
  
3.  <span data-ttu-id="c51e3-239">如果`Encoding`屬性是`null`，並找到沒有位元組順序標記、 讀取器會假設資料流以 utf-8 編碼。</span><span class="sxs-lookup"><span data-stu-id="c51e3-239">If the `Encoding` property is `null`, and no byte-order mark is found, the reader assumes the stream is encoded in UTF-8.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="c51e3-240">
            <paramref name="fragType" /> is not an Element, Attribute, or Document <see langword="XmlNodeType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-240">
              <paramref name="fragType" /> is not an Element, Attribute, or Document <see langword="XmlNodeType" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c51e3-241">
            <paramref name="xmlFragment" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-241">
              <paramref name="xmlFragment" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextReader (string url, System.IO.Stream input, System.Xml.XmlNameTable nt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string url, class System.IO.Stream input, class System.Xml.XmlNameTable nt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.Stream,System.Xml.XmlNameTable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (url As String, input As Stream, nt As XmlNameTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextReader(System::String ^ url, System::IO::Stream ^ input, System::Xml::XmlNameTable ^ nt);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlTextReader : string * System.IO.Stream * System.Xml.XmlNameTable -&gt; System.Xml.XmlTextReader" Usage="new System.Xml.XmlTextReader (url, input, nt)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="input" Type="System.IO.Stream" />
        <Parameter Name="nt" Type="System.Xml.XmlNameTable" />
      </Parameters>
      <Docs>
        <param name="url">
          <span data-ttu-id="c51e3-242">The URL to use for resolving external resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-242">The URL to use for resolving external resources.</span>
          </span>
          <span data-ttu-id="c51e3-243">The <see cref="P:System.Xml.XmlTextReader.BaseURI" /> is set to this value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-243">The <see cref="P:System.Xml.XmlTextReader.BaseURI" /> is set to this value.</span>
          </span>
          <span data-ttu-id="c51e3-244">If <c>url</c> is <see langword="null" />, <see langword="BaseURI" /> is set to <see langword="String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-244">If <c>url</c> is <see langword="null" />, <see langword="BaseURI" /> is set to <see langword="String.Empty" />.</span>
          </span>
        </param>
        <param name="input">
          <span data-ttu-id="c51e3-245">The stream containing the XML data to read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-245">The stream containing the XML data to read.</span>
          </span>
        </param>
        <param name="nt">
          <span data-ttu-id="c51e3-246">The <see langword="XmlNameTable" /> to use.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-246">The <see langword="XmlNameTable" /> to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c51e3-247">Initializes a new instance of the <see cref="T:System.Xml.XmlTextReader" /> class with the specified URL, stream and <see cref="T:System.Xml.XmlNameTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-247">Initializes a new instance of the <see cref="T:System.Xml.XmlTextReader" /> class with the specified URL, stream and <see cref="T:System.Xml.XmlNameTable" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c51e3-248">從.NET Framework 2.0 開始，我們建議您先建立<xref:System.Xml.XmlReader>所使用的執行個體<xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType>方法，以充分利用新功能。</span><span class="sxs-lookup"><span data-stu-id="c51e3-248">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="c51e3-249">The <paramref name="input" /> or <paramref name="nt" /> value is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-249">The <paramref name="input" /> or <paramref name="nt" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextReader (string url, System.IO.TextReader input, System.Xml.XmlNameTable nt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string url, class System.IO.TextReader input, class System.Xml.XmlNameTable nt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.TextReader,System.Xml.XmlNameTable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (url As String, input As TextReader, nt As XmlNameTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextReader(System::String ^ url, System::IO::TextReader ^ input, System::Xml::XmlNameTable ^ nt);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlTextReader : string * System.IO.TextReader * System.Xml.XmlNameTable -&gt; System.Xml.XmlTextReader" Usage="new System.Xml.XmlTextReader (url, input, nt)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="input" Type="System.IO.TextReader" />
        <Parameter Name="nt" Type="System.Xml.XmlNameTable" />
      </Parameters>
      <Docs>
        <param name="url">
          <span data-ttu-id="c51e3-250">The URL to use for resolving external resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-250">The URL to use for resolving external resources.</span>
          </span>
          <span data-ttu-id="c51e3-251">The <see cref="P:System.Xml.XmlTextReader.BaseURI" /> is set to this value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-251">The <see cref="P:System.Xml.XmlTextReader.BaseURI" /> is set to this value.</span>
          </span>
          <span data-ttu-id="c51e3-252">If <c>url</c> is <see langword="null" />, <see langword="BaseURI" /> is set to <see langword="String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-252">If <c>url</c> is <see langword="null" />, <see langword="BaseURI" /> is set to <see langword="String.Empty" />.</span>
          </span>
        </param>
        <param name="input">
          <span data-ttu-id="c51e3-253">The <see langword="TextReader" /> containing the XML data to read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-253">The <see langword="TextReader" /> containing the XML data to read.</span>
          </span>
        </param>
        <param name="nt">
          <span data-ttu-id="c51e3-254">The <see langword="XmlNameTable" /> to use.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-254">The <see langword="XmlNameTable" /> to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c51e3-255">Initializes a new instance of the <see cref="T:System.Xml.XmlTextReader" /> class with the specified URL, <see cref="T:System.IO.TextReader" /> and <see cref="T:System.Xml.XmlNameTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-255">Initializes a new instance of the <see cref="T:System.Xml.XmlTextReader" /> class with the specified URL, <see cref="T:System.IO.TextReader" /> and <see cref="T:System.Xml.XmlNameTable" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c51e3-256">從.NET Framework 2.0 開始，我們建議您先建立<xref:System.Xml.XmlReader>所使用的執行個體<xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType>方法，以充分利用新功能。</span><span class="sxs-lookup"><span data-stu-id="c51e3-256">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c51e3-257">假設`TextReader`已經設定為正確的編碼方式。</span><span class="sxs-lookup"><span data-stu-id="c51e3-257">It is assumed that the `TextReader` is already set to the correct encoding.</span></span> <span data-ttu-id="c51e3-258">這是已經從資料流中的多部分 MIME 案例閱讀某些作業的用戶端使用。</span><span class="sxs-lookup"><span data-stu-id="c51e3-258">This is used by clients that have already read some things from the stream in a multi-part MIME scenario.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c51e3-259">The <paramref name="nt" /> value is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-259">The <paramref name="nt" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextReader (string xmlFragment, System.Xml.XmlNodeType fragType, System.Xml.XmlParserContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string xmlFragment, valuetype System.Xml.XmlNodeType fragType, class System.Xml.XmlParserContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xmlFragment As String, fragType As XmlNodeType, context As XmlParserContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextReader(System::String ^ xmlFragment, System::Xml::XmlNodeType fragType, System::Xml::XmlParserContext ^ context);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlTextReader : string * System.Xml.XmlNodeType * System.Xml.XmlParserContext -&gt; System.Xml.XmlTextReader" Usage="new System.Xml.XmlTextReader (xmlFragment, fragType, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlFragment" Type="System.String" />
        <Parameter Name="fragType" Type="System.Xml.XmlNodeType" />
        <Parameter Name="context" Type="System.Xml.XmlParserContext" />
      </Parameters>
      <Docs>
        <param name="xmlFragment">
          <span data-ttu-id="c51e3-260">The string containing the XML fragment to parse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-260">The string containing the XML fragment to parse.</span>
          </span>
        </param>
        <param name="fragType">
          <span data-ttu-id="c51e3-261">The <see cref="T:System.Xml.XmlNodeType" /> of the XML fragment.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-261">The <see cref="T:System.Xml.XmlNodeType" /> of the XML fragment.</span>
          </span>
          <span data-ttu-id="c51e3-262">This also determines what the fragment string can contain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-262">This also determines what the fragment string can contain.</span>
          </span>
          <span data-ttu-id="c51e3-263">(See table below.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-263">(See table below.)</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="c51e3-264">The <see cref="T:System.Xml.XmlParserContext" /> in which the <c>xmlFragment</c> is to be parsed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-264">The <see cref="T:System.Xml.XmlParserContext" /> in which the <c>xmlFragment</c> is to be parsed.</span>
          </span>
          <span data-ttu-id="c51e3-265">This includes the <see cref="T:System.Xml.XmlNameTable" /> to use, encoding, namespace scope, the current <c>xml:lang</c>, and the <c>xml:space</c> scope.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-265">This includes the <see cref="T:System.Xml.XmlNameTable" /> to use, encoding, namespace scope, the current <c>xml:lang</c>, and the <c>xml:space</c> scope.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c51e3-266">Initializes a new instance of the <see cref="T:System.Xml.XmlTextReader" /> class with the specified string, <see cref="T:System.Xml.XmlNodeType" />, and <see cref="T:System.Xml.XmlParserContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-266">Initializes a new instance of the <see cref="T:System.Xml.XmlTextReader" /> class with the specified string, <see cref="T:System.Xml.XmlNodeType" />, and <see cref="T:System.Xml.XmlParserContext" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c51e3-267">從.NET Framework 2.0 開始，我們建議您先建立<xref:System.Xml.XmlReader>所使用的執行個體<xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType>方法，以充分利用新功能。</span><span class="sxs-lookup"><span data-stu-id="c51e3-267">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c51e3-268">這個建構函式會將指定的字串剖析為 XML 片段。</span><span class="sxs-lookup"><span data-stu-id="c51e3-268">This constructor parses the given string as a fragment of XML.</span></span> <span data-ttu-id="c51e3-269">如果元素或屬性的 XML 片段，您可以略過的語式正確的 XML 文件根層級的規則。</span><span class="sxs-lookup"><span data-stu-id="c51e3-269">If the XML fragment is an element or attribute, you can bypass the root level rules for well-formed XML documents.</span></span> <span data-ttu-id="c51e3-270">這個建構函式可以處理從傳回的字串<xref:System.Xml.XmlReader.ReadInnerXml%2A>。</span><span class="sxs-lookup"><span data-stu-id="c51e3-270">This constructor can handle strings returned from <xref:System.Xml.XmlReader.ReadInnerXml%2A>.</span></span>  
  
 <span data-ttu-id="c51e3-271">下表列出的有效值`fragType`和如何讀取器會剖析每個不同的節點型別。</span><span class="sxs-lookup"><span data-stu-id="c51e3-271">The following table lists valid values for `fragType` and how the reader parses each of the different node types.</span></span>  
  
|<span data-ttu-id="c51e3-272">XmlNodeType</span><span class="sxs-lookup"><span data-stu-id="c51e3-272">XmlNodeType</span></span>|<span data-ttu-id="c51e3-273">片段可能包含</span><span class="sxs-lookup"><span data-stu-id="c51e3-273">Fragment May Contain</span></span>|  
|-----------------|--------------------------|  
|<span data-ttu-id="c51e3-274">元素</span><span class="sxs-lookup"><span data-stu-id="c51e3-274">Element</span></span>|<span data-ttu-id="c51e3-275">任何有效的項目內容 （例如，項目、 註解、 處理指示、 CDATA 區段、 文字和實體參考的任何組合）。</span><span class="sxs-lookup"><span data-stu-id="c51e3-275">Any valid element content (for example, any combination of elements, comments, processing instructions, CDATA sections, text, and entity references).</span></span><br /><br /> <span data-ttu-id="c51e3-276">您也可以提供 XML 宣告。</span><span class="sxs-lookup"><span data-stu-id="c51e3-276">An XML declaration can also be supplied.</span></span> <span data-ttu-id="c51e3-277">這可讓您指定的編碼方式的 XML 片段，而不是不必上設定<xref:System.Xml.XmlParserContext>物件。</span><span class="sxs-lookup"><span data-stu-id="c51e3-277">This allows you to specify the encoding for the XML fragment, rather than having to set it on the <xref:System.Xml.XmlParserContext> object.</span></span>|  
|<span data-ttu-id="c51e3-278">屬性</span><span class="sxs-lookup"><span data-stu-id="c51e3-278">Attribute</span></span>|<span data-ttu-id="c51e3-279">屬性 （在引號內的部分） 的值。</span><span class="sxs-lookup"><span data-stu-id="c51e3-279">The value of an attribute (the part inside the quotes).</span></span>|  
|<span data-ttu-id="c51e3-280">文件</span><span class="sxs-lookup"><span data-stu-id="c51e3-280">Document</span></span>|<span data-ttu-id="c51e3-281">完整的 XML 文件內容。</span><span class="sxs-lookup"><span data-stu-id="c51e3-281">The contents of an entire XML document.</span></span> <span data-ttu-id="c51e3-282">這會強制執行文件層級的規則。</span><span class="sxs-lookup"><span data-stu-id="c51e3-282">This enforces document level rules.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="c51e3-283">下列範例會剖析 XML 片段。</span><span class="sxs-lookup"><span data-stu-id="c51e3-283">The following example parses an XML fragment.</span></span> <span data-ttu-id="c51e3-284">它會使用`XmlParserContext`及其<xref:System.Xml.XmlNamespaceManager>處理命名空間解析。</span><span class="sxs-lookup"><span data-stu-id="c51e3-284">It uses the `XmlParserContext` and its <xref:System.Xml.XmlNamespaceManager> to handle namespace resolution.</span></span>  
  
 [!code-cpp[XmlTextReader.Cctor#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlTextReader.Cctor/CPP/readfrag.cpp#1)]
 [!code-csharp[XmlTextReader.Cctor#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlTextReader.Cctor/CS/readfrag.cs#1)]
 [!code-vb[XmlTextReader.Cctor#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlTextReader.Cctor/VB/readfrag.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="c51e3-285">
            <paramref name="fragType" /> is not an <see langword="Element" />, <see langword="Attribute" />, or <see langword="Document" /><see langword="XmlNodeType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-285">
              <paramref name="fragType" /> is not an <see langword="Element" />, <see langword="Attribute" />, or <see langword="Document" /><see langword="XmlNodeType" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c51e3-286">
            <paramref name="xmlFragment" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-286">
              <paramref name="xmlFragment" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlParserContext" />
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="AttributeCount">
      <MemberSignature Language="C#" Value="public override int AttributeCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AttributeCount" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.AttributeCount" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AttributeCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int AttributeCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.AttributeCount : int" Usage="System.Xml.XmlTextReader.AttributeCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c51e3-287">Gets the number of attributes on the current node.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-287">Gets the number of attributes on the current node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c51e3-288">目前節點的屬性數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-288">The number of attributes on the current node.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c51e3-289">從.NET Framework 2.0 開始，我們建議您先建立<xref:System.Xml.XmlReader>所使用的執行個體<xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType>方法，以充分利用新功能。</span><span class="sxs-lookup"><span data-stu-id="c51e3-289">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c51e3-290">這個屬性是適用於`Element`，`DocumentType`和`XmlDeclaration`只節點。</span><span class="sxs-lookup"><span data-stu-id="c51e3-290">This property is relevant to `Element`, `DocumentType` and `XmlDeclaration` nodes only.</span></span> <span data-ttu-id="c51e3-291">（其他節點型別沒有屬性。）</span><span class="sxs-lookup"><span data-stu-id="c51e3-291">(Other node types do not have attributes.)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c51e3-292">下列範例顯示目前的節點上的所有屬性。</span><span class="sxs-lookup"><span data-stu-id="c51e3-292">The following example displays all attributes on the current node.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextReader.MoveToElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.MoveToElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextReader.MoveToElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.MoveToElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextReader.MoveToElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.MoveToElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="BaseURI">
      <MemberSignature Language="C#" Value="public override string BaseURI { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseURI" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.BaseURI" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property BaseURI As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ BaseURI { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseURI : string" Usage="System.Xml.XmlTextReader.BaseURI" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c51e3-293">Gets the base URI of the current node.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-293">Gets the base URI of the current node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c51e3-294">目前節點的基底 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-294">The base URI of the current node.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c51e3-295">從.NET Framework 2.0 開始，我們建議您先建立<xref:System.Xml.XmlReader>所使用的執行個體<xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType>方法，以充分利用新功能。</span><span class="sxs-lookup"><span data-stu-id="c51e3-295">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c51e3-296">網路的 XML 文件由使用各種 W3C 標準包含機制彙總的資料區塊組成，因此包含來自不同位置的節點。</span><span class="sxs-lookup"><span data-stu-id="c51e3-296">A networked XML document is comprised of chunks of data aggregated using various W3C standard inclusion mechanisms and therefore contains nodes that come from different places.</span></span> <span data-ttu-id="c51e3-297">DTD 實體就是一個範例，但這並不限於使用 Dtd。</span><span class="sxs-lookup"><span data-stu-id="c51e3-297">DTD entities are an example of this, but this is not limited to DTDs.</span></span> <span data-ttu-id="c51e3-298">基底 URI 會告訴您這些節點的來源。</span><span class="sxs-lookup"><span data-stu-id="c51e3-298">The base URI tells you where these nodes came from.</span></span> <span data-ttu-id="c51e3-299">如果是要傳回的節點沒有基底 URI （例如，它們從字串中剖析記憶體中），`String.Empty`傳回。</span><span class="sxs-lookup"><span data-stu-id="c51e3-299">If there is no base URI for the nodes being returned (for example, they were parsed from an in-memory string), `String.Empty` is returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c51e3-300">下列範例會顯示每個節點的基底 URI。</span><span class="sxs-lookup"><span data-stu-id="c51e3-300">The following example displays the base URI for each of the nodes.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextReader.BaseURI Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.BaseURI Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextReader.BaseURI Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.BaseURI Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextReader.BaseURI Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.BaseURI Example/VB/source.vb#1)]  
  
 <span data-ttu-id="c51e3-301">此範例會使用該檔案，`baseuri.xml`作為輸入。</span><span class="sxs-lookup"><span data-stu-id="c51e3-301">The example uses the file, `baseuri.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlTextReader.BaseURI Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlTextReader.BaseURI Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="CanReadBinaryContent">
      <MemberSignature Language="C#" Value="public override bool CanReadBinaryContent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanReadBinaryContent" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.CanReadBinaryContent" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanReadBinaryContent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanReadBinaryContent { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanReadBinaryContent : bool" Usage="System.Xml.XmlTextReader.CanReadBinaryContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c51e3-302">Gets a value indicating whether the <see cref="T:System.Xml.XmlTextReader" /> implements the binary content read methods.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-302">Gets a value indicating whether the <see cref="T:System.Xml.XmlTextReader" /> implements the binary content read methods.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c51e3-303">如果實作二進位內容讀取方法，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-303">
              <see langword="true" /> if the binary content read methods are implemented; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="c51e3-304">
            <see cref="T:System.Xml.XmlTextReader" /> 類別一律會傳回 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-304">The <see cref="T:System.Xml.XmlTextReader" /> class always returns <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c51e3-305">從.NET Framework 2.0 開始，我們建議您先建立<xref:System.Xml.XmlReader>所使用的執行個體<xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType>方法，以充分利用新功能。</span><span class="sxs-lookup"><span data-stu-id="c51e3-305">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c51e3-306">二進位內容讀取方法包括<xref:System.Xml.XmlTextReader.ReadContentAsBase64%2A>， <xref:System.Xml.XmlTextReader.ReadContentAsBinHex%2A>， <xref:System.Xml.XmlTextReader.ReadElementContentAsBase64%2A>，和<xref:System.Xml.XmlTextReader.ReadElementContentAsBinHex%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c51e3-306">The binary content read methods include the <xref:System.Xml.XmlTextReader.ReadContentAsBase64%2A>, <xref:System.Xml.XmlTextReader.ReadContentAsBinHex%2A>, <xref:System.Xml.XmlTextReader.ReadElementContentAsBase64%2A>, and <xref:System.Xml.XmlTextReader.ReadElementContentAsBinHex%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="CanReadValueChunk">
      <MemberSignature Language="C#" Value="public override bool CanReadValueChunk { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanReadValueChunk" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.CanReadValueChunk" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanReadValueChunk As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanReadValueChunk { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanReadValueChunk : bool" Usage="System.Xml.XmlTextReader.CanReadValueChunk" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c51e3-307">Gets a value indicating whether the <see cref="T:System.Xml.XmlTextReader" /> implements the <see cref="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-307">Gets a value indicating whether the <see cref="T:System.Xml.XmlTextReader" /> implements the <see cref="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" /> method.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c51e3-308">如果 <see cref="T:System.Xml.XmlTextReader" /> 會實作 <see cref="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" /> 方法，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-308">
              <see langword="true" /> if the <see cref="T:System.Xml.XmlTextReader" /> implements the <see cref="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" /> method; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="c51e3-309">
            <see cref="T:System.Xml.XmlTextReader" /> 類別一律會傳回 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-309">The <see cref="T:System.Xml.XmlTextReader" /> class always returns <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c51e3-310">從.NET Framework 2.0 開始，我們建議您先建立<xref:System.Xml.XmlReader>所使用的執行個體<xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType>方法，以充分利用新功能。</span><span class="sxs-lookup"><span data-stu-id="c51e3-310">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c51e3-311"><xref:System.Xml.XmlTextReader>會擲回<xref:System.NotSupportedException>如果<xref:System.Xml.XmlReader.ReadValueChunk%2A>方法呼叫。</span><span class="sxs-lookup"><span data-stu-id="c51e3-311">The <xref:System.Xml.XmlTextReader> throws a <xref:System.NotSupportedException> if the <xref:System.Xml.XmlReader.ReadValueChunk%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="CanResolveEntity">
      <MemberSignature Language="C#" Value="public override bool CanResolveEntity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanResolveEntity" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.CanResolveEntity" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanResolveEntity As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanResolveEntity { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanResolveEntity : bool" Usage="System.Xml.XmlTextReader.CanResolveEntity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c51e3-312">Gets a value indicating whether this reader can parse and resolve entities.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-312">Gets a value indicating whether this reader can parse and resolve entities.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c51e3-313">如果讀取器可以剖析和解析實體，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-313">
              <see langword="true" /> if the reader can parse and resolve entities; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="c51e3-314">
            <see langword="XmlTextReader" /> 類別一律會傳回 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-314">The <see langword="XmlTextReader" /> class always returns <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c51e3-315">從.NET Framework 2.0 開始，我們建議您先建立<xref:System.Xml.XmlReader>所使用的執行個體<xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType>方法，以充分利用新功能。</span><span class="sxs-lookup"><span data-stu-id="c51e3-315">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c51e3-316">這是在變更[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]版本。</span><span class="sxs-lookup"><span data-stu-id="c51e3-316">This is a change in the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] release.</span></span> <span data-ttu-id="c51e3-317">在舊版中，`XmlTextReader`類別無法解析實體和`CanResolveEntity`一律傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="c51e3-317">In previous versions, the `XmlTextReader` class could not resolve entities and `CanResolveEntity` always returned `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="xmlTextReader.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c51e3-318">Changes the <see cref="P:System.Xml.XmlReader.ReadState" /> to <see langword="Closed" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-318">Changes the <see cref="P:System.Xml.XmlReader.ReadState" /> to <see langword="Closed" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c51e3-319">從.NET Framework 2.0 開始，我們建議您先建立<xref:System.Xml.XmlReader>所使用的執行個體<xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType>方法，以充分利用新功能。</span><span class="sxs-lookup"><span data-stu-id="c51e3-319">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c51e3-320">這個方法也會釋放讀取時所保留的任何資源。</span><span class="sxs-lookup"><span data-stu-id="c51e3-320">This method also releases any resources held while reading.</span></span> <span data-ttu-id="c51e3-321">如果使用資料流來建構這個讀取器，這個方法也會呼叫`Close`在基礎資料流。</span><span class="sxs-lookup"><span data-stu-id="c51e3-321">If this reader was constructed using a stream, this method also calls `Close` on the underlying stream.</span></span>  
  
 <span data-ttu-id="c51e3-322">如果`Close`已經過呼叫，會執行任何動作。</span><span class="sxs-lookup"><span data-stu-id="c51e3-322">If `Close` has already been called, no action is performed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Depth">
      <MemberSignature Language="C#" Value="public override int Depth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Depth" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.Depth" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Depth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Depth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Depth : int" Usage="System.Xml.XmlTextReader.Depth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c51e3-323">Gets the depth of the current node in the XML document.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-323">Gets the depth of the current node in the XML document.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c51e3-324">XML 文件中目前節點的深度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-324">The depth of the current node in the XML document.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c51e3-325">從.NET Framework 2.0 開始，我們建議您先建立<xref:System.Xml.XmlReader>所使用的執行個體<xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType>方法，以充分利用新功能。</span><span class="sxs-lookup"><span data-stu-id="c51e3-325">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c51e3-326">下列範例會顯示每個節點，包含其深度、 行號和行位置。</span><span class="sxs-lookup"><span data-stu-id="c51e3-326">The following example displays each node including its depth, line number, and line position.</span></span>  
  
 [!code-cpp[XmlTextReader.LineNum#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlTextReader.LineNum/CPP/readlinenum.cpp#1)]
 [!code-csharp[XmlTextReader.LineNum#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlTextReader.LineNum/CS/readlinenum.cs#1)]
 [!code-vb[XmlTextReader.LineNum#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlTextReader.LineNum/VB/readlinenum.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="DtdProcessing">
      <MemberSignature Language="C#" Value="public System.Xml.DtdProcessing DtdProcessing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.DtdProcessing DtdProcessing" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.DtdProcessing" />
      <MemberSignature Language="VB.NET" Value="Public Property DtdProcessing As DtdProcessing" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::DtdProcessing DtdProcessing { System::Xml::DtdProcessing get(); void set(System::Xml::DtdProcessing value); };" />
      <MemberSignature Language="F#" Value="member this.DtdProcessing : System.Xml.DtdProcessing with get, set" Usage="System.Xml.XmlTextReader.DtdProcessing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.DtdProcessing</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c51e3-327">Gets or sets the <see cref="T:System.Xml.DtdProcessing" /> enumeration.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-327">Gets or sets the <see cref="T:System.Xml.DtdProcessing" /> enumeration.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c51e3-328">
            <see cref="T:System.Xml.DtdProcessing" /> 列舉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-328">The <see cref="T:System.Xml.DtdProcessing" /> enumeration.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c51e3-329"><xref:System.Xml.DtdProcessing>列舉型別包含<xref:System.Xml.DtdProcessing.Prohibit>， <xref:System.Xml.DtdProcessing.Ignore>，和<xref:System.Xml.DtdProcessing.Parse>列舉值。</span><span class="sxs-lookup"><span data-stu-id="c51e3-329">The <xref:System.Xml.DtdProcessing> enumeration contains the <xref:System.Xml.DtdProcessing.Prohibit>, <xref:System.Xml.DtdProcessing.Ignore>, and <xref:System.Xml.DtdProcessing.Parse> enumerators.</span></span> <span data-ttu-id="c51e3-330"><xref:System.Xml.DtdProcessing.Parse> 是預設行為。</span><span class="sxs-lookup"><span data-stu-id="c51e3-330"><xref:System.Xml.DtdProcessing.Parse> is the default behavior.</span></span> <span data-ttu-id="c51e3-331"><xref:System.Xml.XmlTextReader.DtdProcessing%2A>屬性取代`ProhibitDTD`屬性，並將會忽略文件類型元素的能力。</span><span class="sxs-lookup"><span data-stu-id="c51e3-331">The <xref:System.Xml.XmlTextReader.DtdProcessing%2A> property replaces the `ProhibitDTD` property and adds the ability to ignore the DOCTYPE element.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c51e3-332">如果<xref:System.Xml.XmlTextReader.DtdProcessing%2A>屬性設定為<xref:System.Xml.DtdProcessing.Ignore?displayProperty=nameWithType>、<xref:System.Xml.XmlTextReader>將不會報告 Dtd。</span><span class="sxs-lookup"><span data-stu-id="c51e3-332">If the <xref:System.Xml.XmlTextReader.DtdProcessing%2A> property is set to <xref:System.Xml.DtdProcessing.Ignore?displayProperty=nameWithType>, the <xref:System.Xml.XmlTextReader> will not report the DTDs.</span></span> <span data-ttu-id="c51e3-333">這表示 DTD/文件類型將會遺失輸出上。</span><span class="sxs-lookup"><span data-stu-id="c51e3-333">This means that the DTD/DOCTYPE will be lost on output.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding Encoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Encoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ Encoding { System::Text::Encoding ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Encoding : System.Text.Encoding" Usage="System.Xml.XmlTextReader.Encoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c51e3-334">Gets the encoding of the document.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-334">Gets the encoding of the document.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c51e3-335">編碼值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-335">The encoding value.</span>
          </span>
          <span data-ttu-id="c51e3-336">如果編碼屬性不存在，而且沒有位元組順序標記，則此值預設為 UTF-8。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-336">If no encoding attribute exists, and there is no byte-order mark, this defaults to UTF-8.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c51e3-337">從.NET Framework 2.0 開始，我們建議您先建立<xref:System.Xml.XmlReader>所使用的執行個體<xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType>方法，以充分利用新功能。</span><span class="sxs-lookup"><span data-stu-id="c51e3-337">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c51e3-338">因為<xref:System.Xml.XmlTextReader>使用<xref:System.Text.Encoding?displayProperty=nameWithType>類別`XmlTextReader`也支援該類別所支援的所有編碼方式。</span><span class="sxs-lookup"><span data-stu-id="c51e3-338">Because <xref:System.Xml.XmlTextReader> uses the <xref:System.Text.Encoding?displayProperty=nameWithType> class, `XmlTextReader` also supports all encodings supported by that class.</span></span> <span data-ttu-id="c51e3-339">這個例外狀況是任何編碼方式，例如 utf-7 或對應的 EBCDIC`<?xml`比 utf-8 不同位元組值的順序。</span><span class="sxs-lookup"><span data-stu-id="c51e3-339">The exception to this is any encoding, such as UTF-7 or EBCDIC, that maps the `<?xml` sequence to different byte values than UTF-8.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityHandling">
      <MemberSignature Language="C#" Value="public System.Xml.EntityHandling EntityHandling { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.EntityHandling EntityHandling" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.EntityHandling" />
      <MemberSignature Language="VB.NET" Value="Public Property EntityHandling As EntityHandling" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::EntityHandling EntityHandling { System::Xml::EntityHandling get(); void set(System::Xml::EntityHandling value); };" />
      <MemberSignature Language="F#" Value="member this.EntityHandling : System.Xml.EntityHandling with get, set" Usage="System.Xml.XmlTextReader.EntityHandling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.EntityHandling</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c51e3-340">Gets or sets a value that specifies how the reader handles entities.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-340">Gets or sets a value that specifies how the reader handles entities.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c51e3-341">其中一個 <see cref="T:System.Xml.EntityHandling" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-341">One of the <see cref="T:System.Xml.EntityHandling" /> values.</span>
          </span>
          <span data-ttu-id="c51e3-342">如果未指定 <see langword="EntityHandling" />，則會預設為 <see langword="EntityHandling.ExpandCharEntities" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-342">If no <see langword="EntityHandling" /> is specified, it defaults to <see langword="EntityHandling.ExpandCharEntities" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c51e3-343">從.NET Framework 2.0 開始，我們建議您先建立<xref:System.Xml.XmlReader>所使用的執行個體<xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType>方法，以充分利用新功能。</span><span class="sxs-lookup"><span data-stu-id="c51e3-343">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c51e3-344">這個屬性之後可以變更立即和採用效果在下一個<xref:System.Xml.XmlTextReader.Read%2A>呼叫。</span><span class="sxs-lookup"><span data-stu-id="c51e3-344">This property can be changed on the fly and takes effect after the next <xref:System.Xml.XmlTextReader.Read%2A> call.</span></span>  
  
 <span data-ttu-id="c51e3-345">當`EntityHandling`設`ExpandCharEntities`，屬性值僅部分會正規化。</span><span class="sxs-lookup"><span data-stu-id="c51e3-345">When `EntityHandling` is set to `ExpandCharEntities`, attribute values are only partially normalized.</span></span> <span data-ttu-id="c51e3-346">讀取器會正規化每個個別的文字節點，獨立於相鄰的實體參考節點的內容。</span><span class="sxs-lookup"><span data-stu-id="c51e3-346">The reader normalizes each individual text node independently from the content of adjacent entity reference nodes.</span></span>  
  
 <span data-ttu-id="c51e3-347">為了說明實體之間的差異處理模式，請考量下列 XML:</span><span class="sxs-lookup"><span data-stu-id="c51e3-347">To illustrate the difference between the entity handling modes consider the following XML:</span></span>  
  
```  
<!DOCTYPE doc [<!ENTITY num "123"]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="EOF">
      <MemberSignature Language="C#" Value="public override bool EOF { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EOF" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.EOF" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property EOF As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EOF { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.EOF : bool" Usage="System.Xml.XmlTextReader.EOF" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c51e3-348">Gets a value indicating whether the reader is positioned at the end of the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-348">Gets a value indicating whether the reader is positioned at the end of the stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c51e3-349">如果讀取器定位於資料流結尾，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-349">
              <see langword="true" /> if the reader is positioned at the end of the stream; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c51e3-350">從.NET Framework 2.0 開始，我們建議您先建立<xref:System.Xml.XmlReader>所使用的執行個體<xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType>方法，以充分利用新功能。</span><span class="sxs-lookup"><span data-stu-id="c51e3-350">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c51e3-351">Gets the value of an attribute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-351">Gets the value of an attribute.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c51e3-352">從.NET Framework 2.0 開始，我們建議您先建立<xref:System.Xml.XmlReader>所使用的執行個體<xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType>方法，以充分利用新功能。</span><span class="sxs-lookup"><span data-stu-id="c51e3-352">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAttribute">
      <MemberSignature Language="C#" Value="public override string GetAttribute (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetAttribute(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.GetAttribute(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAttribute (i As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetAttribute(int i);" />
      <MemberSignature Language="F#" Value="override this.GetAttribute : int -&gt; string" Usage="xmlTextReader.GetAttribute i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="c51e3-353">The index of the attribute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-353">The index of the attribute.</span>
          </span>
          <span data-ttu-id="c51e3-354">The index is zero-based.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-354">The index is zero-based.</span>
          </span>
          <span data-ttu-id="c51e3-355">(The first attribute has index 0.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-355">(The first attribute has index 0.)</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c51e3-356">Gets the value of the attribute with the specified index.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-356">Gets the value of the attribute with the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c51e3-357">The value of the specified attribute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-357">The value of the specified attribute.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c51e3-358">從.NET Framework 2.0 開始，我們建議您先建立<xref:System.Xml.XmlReader>所使用的執行個體<xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType>方法，以充分利用新功能。</span><span class="sxs-lookup"><span data-stu-id="c51e3-358">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c51e3-359">這個方法不會移動讀取器。</span><span class="sxs-lookup"><span data-stu-id="c51e3-359">This method does not move the reader.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c51e3-360">The <paramref name="i" /> parameter is less than 0 or greater than or equal to <see cref="P:System.Xml.XmlTextReader.AttributeCount" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-360">The <paramref name="i" /> parameter is less than 0 or greater than or equal to <see cref="P:System.Xml.XmlTextReader.AttributeCount" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="GetAttribute">
      <MemberSignature Language="C#" Value="public override string GetAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetAttribute(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.GetAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAttribute (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetAttribute(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.GetAttribute : string -&gt; string" Usage="xmlTextReader.GetAttribute name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="c51e3-361">The qualified name of the attribute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-361">The qualified name of the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c51e3-362">Gets the value of the attribute with the specified name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-362">Gets the value of the attribute with the specified name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c51e3-363">The value of the specified attribute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-363">The value of the specified attribute.</span>
          </span>
          <span data-ttu-id="c51e3-364">If the attribute is not found, <see langword="null" /> is returned.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-364">If the attribute is not found, <see langword="null" /> is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c51e3-365">從.NET Framework 2.0 開始，我們建議您先建立<xref:System.Xml.XmlReader>所使用的執行個體<xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType>方法，以充分利用新功能。</span><span class="sxs-lookup"><span data-stu-id="c51e3-365">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c51e3-366">這個方法不會移動讀取器。</span><span class="sxs-lookup"><span data-stu-id="c51e3-366">This method does not move the reader.</span></span>  
  
 <span data-ttu-id="c51e3-367">如果讀取器位於`DocumentType` 節點，這個方法可以用來取得的公用和系統常值，例如， `reader.GetAttribute("PUBLIC")`</span><span class="sxs-lookup"><span data-stu-id="c51e3-367">If the reader is positioned on a `DocumentType` node, this method can be used to get the PUBLIC and SYSTEM literals, for example, `reader.GetAttribute("PUBLIC")`</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c51e3-368">下列範例會取得 ISBN 屬性的值。</span><span class="sxs-lookup"><span data-stu-id="c51e3-368">The following example gets the value of the ISBN attribute.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextReader.GetAttribute1 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.GetAttribute1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextReader.GetAttribute1 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.GetAttribute1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextReader.GetAttribute1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.GetAttribute1 Example/VB/source.vb#1)]  
  
 <span data-ttu-id="c51e3-369">此範例會使用該檔案，`attrs.xml`作為輸入。</span><span class="sxs-lookup"><span data-stu-id="c51e3-369">The example uses the file, `attrs.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlTextReader.GetAttribute1 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlTextReader.GetAttribute1 Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="GetAttribute">
      <MemberSignature Language="C#" Value="public override string GetAttribute (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetAttribute(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.GetAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAttribute (localName As String, namespaceURI As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetAttribute(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="override this.GetAttribute : string * string -&gt; string" Usage="xmlTextReader.GetAttribute (localName, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">
          <span data-ttu-id="c51e3-370">The local name of the attribute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-370">The local name of the attribute.</span>
          </span>
        </param>
        <param name="namespaceURI">
          <span data-ttu-id="c51e3-371">The namespace URI of the attribute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-371">The namespace URI of the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c51e3-372">Gets the value of the attribute with the specified local name and namespace URI.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-372">Gets the value of the attribute with the specified local name and namespace URI.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c51e3-373">The value of the specified attribute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-373">The value of the specified attribute.</span>
          </span>
          <span data-ttu-id="c51e3-374">If the attribute is not found, <see langword="null" /> is returned.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-374">If the attribute is not found, <see langword="null" /> is returned.</span>
          </span>
          <span data-ttu-id="c51e3-375">This method does not move the reader.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-375">This method does not move the reader.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c51e3-376">從.NET Framework 2.0 開始，我們建議您先建立<xref:System.Xml.XmlReader>所使用的執行個體<xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType>方法，以充分利用新功能。</span><span class="sxs-lookup"><span data-stu-id="c51e3-376">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c51e3-377">下列 XML 會包含特定的命名空間中的屬性：</span><span class="sxs-lookup"><span data-stu-id="c51e3-377">The following XML contains an attribute in a specific namespace:</span></span>  
  
```xml  
<test xmlns:dt="urn:datatypes" dt:type="int"/>  
```  
  
 <span data-ttu-id="c51e3-378">您可以查閱`dt:type`屬性使用一個引數 （前置詞和本機名稱） 或兩個引數 （區域名稱和命名空間 URI）：</span><span class="sxs-lookup"><span data-stu-id="c51e3-378">You can lookup the `dt:type` attribute using one argument (prefix and local name) or two arguments (local name and namespace URI):</span></span>  
  
```csharp  
String dt = reader.GetAttribute("dt:type");  
String dt2 = reader.GetAttribute("type","urn:datatypes");  
```  
  
 <span data-ttu-id="c51e3-379">要查閱`xmlns:dt`屬性，請使用下列引數的其中一個：</span><span class="sxs-lookup"><span data-stu-id="c51e3-379">To lookup the `xmlns:dt` attribute, use one of the following arguments:</span></span>  
  
```csharp  
String dt3 = reader.GetAttribute("xmlns:dt");  
String dt4 = reader.GetAttribute("dt",http://www.w3.org/2000/xmlns/);  
```  
  
 <span data-ttu-id="c51e3-380">您也可以取得此資訊使用<xref:System.Xml.XmlTextReader.Prefix%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="c51e3-380">You can also get this information using the <xref:System.Xml.XmlTextReader.Prefix%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="GetNamespacesInScope">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; GetNamespacesInScope (System.Xml.XmlNamespaceScope scope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; GetNamespacesInScope(valuetype System.Xml.XmlNamespaceScope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.GetNamespacesInScope(System.Xml.XmlNamespaceScope)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNamespacesInScope (scope As XmlNamespaceScope) As IDictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ GetNamespacesInScope(System::Xml::XmlNamespaceScope scope);" />
      <MemberSignature Language="F#" Value="member this.GetNamespacesInScope : System.Xml.XmlNamespaceScope -&gt; System.Collections.Generic.IDictionary&lt;string, string&gt;" Usage="xmlTextReader.GetNamespacesInScope scope" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.Xml.XmlNamespaceScope" />
      </Parameters>
      <Docs>
        <param name="scope">
          <span data-ttu-id="c51e3-381">An <see cref="T:System.Xml.XmlNamespaceScope" /> value that specifies the type of namespace nodes to return.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-381">An <see cref="T:System.Xml.XmlNamespaceScope" /> value that specifies the type of namespace nodes to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c51e3-382">Gets a collection that contains all namespaces currently in-scope.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-382">Gets a collection that contains all namespaces currently in-scope.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c51e3-383">An <see cref="T:System.Collections.IDictionary" /> object that contains all the current in-scope namespaces.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-383">An <see cref="T:System.Collections.IDictionary" /> object that contains all the current in-scope namespaces.</span>
          </span>
          <span data-ttu-id="c51e3-384">If the reader is not positioned on an element, an empty dictionary (no namespaces) is returned.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-384">If the reader is not positioned on an element, an empty dictionary (no namespaces) is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c51e3-385">從.NET Framework 2.0 開始，我們建議您先建立<xref:System.Xml.XmlReader>所使用的執行個體<xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType>方法，以充分利用新功能。</span><span class="sxs-lookup"><span data-stu-id="c51e3-385">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c51e3-386">字典包含做為索引鍵的前置詞的命名空間名稱的集合。</span><span class="sxs-lookup"><span data-stu-id="c51e3-386">The dictionary consists of a collection of namespace names keyed by prefix.</span></span> <span data-ttu-id="c51e3-387">它可以用來列舉的範圍內的命名空間。</span><span class="sxs-lookup"><span data-stu-id="c51e3-387">It can be used to enumerate the in-scope namespaces.</span></span> <span data-ttu-id="c51e3-388">字典是中斷連接的複本的讀取器的命名空間清單。</span><span class="sxs-lookup"><span data-stu-id="c51e3-388">The dictionary is a disconnected copy of the namespace list of the reader.</span></span> <span data-ttu-id="c51e3-389">則維持不變的讀取器的位置、 目前的範圍內的命名空間清單、 變更。</span><span class="sxs-lookup"><span data-stu-id="c51e3-389">It remains unchanged as the reader position, current in-scope namespace list, changes.</span></span>  
  
 <span data-ttu-id="c51e3-390">下表描述如何<xref:System.Xml.XmlNamespaceScope>列舉值會影響是否或不預設和內建傳回的命名空間由<xref:System.Xml.XmlTextReader.GetNamespacesInScope%2A>。</span><span class="sxs-lookup"><span data-stu-id="c51e3-390">The following table describes how the <xref:System.Xml.XmlNamespaceScope> enumeration value affects the whether or not the default and built-in namespaces are returned by <xref:System.Xml.XmlTextReader.GetNamespacesInScope%2A>.</span></span>  
  
|<span data-ttu-id="c51e3-391">XmlNamespaceScope 值</span><span class="sxs-lookup"><span data-stu-id="c51e3-391">XmlNamespaceScope Value</span></span>|<span data-ttu-id="c51e3-392">xmlns</span><span class="sxs-lookup"><span data-stu-id="c51e3-392">xmlns:xml</span></span>|<span data-ttu-id="c51e3-393">xmlns:xmlns</span><span class="sxs-lookup"><span data-stu-id="c51e3-393">xmlns:xmlns</span></span>|<span data-ttu-id="c51e3-394">xmlns=""</span><span class="sxs-lookup"><span data-stu-id="c51e3-394">xmlns=""</span></span>|  
|-----------------------------|---------------|-----------------|---------------|  
|`All`|<span data-ttu-id="c51e3-395">是</span><span class="sxs-lookup"><span data-stu-id="c51e3-395">yes</span></span>|<span data-ttu-id="c51e3-396">否</span><span class="sxs-lookup"><span data-stu-id="c51e3-396">no</span></span>|<span data-ttu-id="c51e3-397">否</span><span class="sxs-lookup"><span data-stu-id="c51e3-397">no</span></span>|  
|`ExcludeXml`|<span data-ttu-id="c51e3-398">否</span><span class="sxs-lookup"><span data-stu-id="c51e3-398">no</span></span>|<span data-ttu-id="c51e3-399">否</span><span class="sxs-lookup"><span data-stu-id="c51e3-399">no</span></span>|<span data-ttu-id="c51e3-400">否</span><span class="sxs-lookup"><span data-stu-id="c51e3-400">no</span></span>|  
|`Local`|<span data-ttu-id="c51e3-401">否</span><span class="sxs-lookup"><span data-stu-id="c51e3-401">no</span></span>|<span data-ttu-id="c51e3-402">否</span><span class="sxs-lookup"><span data-stu-id="c51e3-402">no</span></span>|<span data-ttu-id="c51e3-403">是</span><span class="sxs-lookup"><span data-stu-id="c51e3-403">yes</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="GetRemainder">
      <MemberSignature Language="C#" Value="public System.IO.TextReader GetRemainder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.TextReader GetRemainder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.GetRemainder" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRemainder () As TextReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::TextReader ^ GetRemainder();" />
      <MemberSignature Language="F#" Value="member this.GetRemainder : unit -&gt; System.IO.TextReader" Usage="xmlTextReader.GetRemainder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c51e3-404">Gets the remainder of the buffered XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-404">Gets the remainder of the buffered XML.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c51e3-405">A <see cref="T:System.IO.TextReader" /> containing the remainder of the buffered XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-405">A <see cref="T:System.IO.TextReader" /> containing the remainder of the buffered XML.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c51e3-406">從.NET Framework 2.0 開始，我們建議您先建立<xref:System.Xml.XmlReader>所使用的執行個體<xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType>方法，以充分利用新功能。</span><span class="sxs-lookup"><span data-stu-id="c51e3-406">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c51e3-407">因為<xref:System.Xml.XmlTextReader>未緩衝`Read`，它必須能夠傳回的未使用的緩衝區的其餘部分，所以不會遺失資料。</span><span class="sxs-lookup"><span data-stu-id="c51e3-407">Because <xref:System.Xml.XmlTextReader> does a buffered `Read`, it must be able to return the remainder of the unused buffer so that no data is lost.</span></span> <span data-ttu-id="c51e3-408">這可讓封裝在相同的資料流，做為其他項目中的 XML 通訊協定 （例如多重部分 MIME)。</span><span class="sxs-lookup"><span data-stu-id="c51e3-408">This allows protocols (such as multi-part MIME) to package XML in the same stream as other things.</span></span>  
  
 <span data-ttu-id="c51e3-409">呼叫這個方法後,<xref:System.Xml.XmlTextReader.EOF%2A>設`true`。</span><span class="sxs-lookup"><span data-stu-id="c51e3-409">After calling this method, <xref:System.Xml.XmlTextReader.EOF%2A> is set to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c51e3-410">下列範例會讀取 XML 文件的第一個部分，然後再使用`GetRemainder`完成讀取文件時使用第二個讀取器。</span><span class="sxs-lookup"><span data-stu-id="c51e3-410">The following example reads the first part of an XML document and then uses `GetRemainder` to complete reading the document using a second reader.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextReader.GetRemainder Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.GetRemainder Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextReader.GetRemainder Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.GetRemainder Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextReader.GetRemainder Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.GetRemainder Example/VB/source.vb#1)]  
  
 <span data-ttu-id="c51e3-411">此範例會使用輸入的檔`tworeads.xml`。</span><span class="sxs-lookup"><span data-stu-id="c51e3-411">The example uses the input file `tworeads.xml`.</span></span>  
  
 [!code-xml[Classic WebData XmlTextReader.GetRemainder Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlTextReader.GetRemainder Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="HasLineInfo">
      <MemberSignature Language="C#" Value="public bool HasLineInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasLineInfo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.HasLineInfo" />
      <MemberSignature Language="VB.NET" Value="Public Function HasLineInfo () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool HasLineInfo();" />
      <MemberSignature Language="F#" Value="abstract member HasLineInfo : unit -&gt; bool&#xA;override this.HasLineInfo : unit -&gt; bool" Usage="xmlTextReader.HasLineInfo " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlLineInfo.HasLineInfo</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c51e3-412">Gets a value indicating whether the class can return line information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-412">Gets a value indicating whether the class can return line information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c51e3-413">
            <see langword="true" /> if the class can return line information; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-413">
              <see langword="true" /> if the class can return line information; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c51e3-414">從.NET Framework 2.0 開始，我們建議您先建立<xref:System.Xml.XmlReader>所使用的執行個體<xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType>方法，以充分利用新功能。</span><span class="sxs-lookup"><span data-stu-id="c51e3-414">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="HasValue">
      <MemberSignature Language="C#" Value="public override bool HasValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasValue" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.HasValue" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property HasValue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasValue { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasValue : bool" Usage="System.Xml.XmlTextReader.HasValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c51e3-415">Gets a value indicating whether the current node can have a <see cref="P:System.Xml.XmlTextReader.Value" /> other than <see langword="String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-415">Gets a value indicating whether the current node can have a <see cref="P:System.Xml.XmlTextReader.Value" /> other than <see langword="String.Empty" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c51e3-416">如果讀取器目前所在節點具有 <see langword="Value" />，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-416">
              <see langword="true" /> if the node on which the reader is currently positioned can have a <see langword="Value" />; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c51e3-417">從.NET Framework 2.0 開始，我們建議您先建立<xref:System.Xml.XmlReader>所使用的執行個體<xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType>方法，以充分利用新功能。</span><span class="sxs-lookup"><span data-stu-id="c51e3-417">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c51e3-418">下表列出具有傳回值的節點類型。</span><span class="sxs-lookup"><span data-stu-id="c51e3-418">The following table lists node types that have a value to return.</span></span>  
  
|<span data-ttu-id="c51e3-419">節點類型</span><span class="sxs-lookup"><span data-stu-id="c51e3-419">Node type</span></span>|<span data-ttu-id="c51e3-420">值</span><span class="sxs-lookup"><span data-stu-id="c51e3-420">Value</span></span>|  
|---------------|-----------|  
|`Attribute`|<span data-ttu-id="c51e3-421">屬性的值。</span><span class="sxs-lookup"><span data-stu-id="c51e3-421">The value of the attribute.</span></span>|  
|`CDATA`|<span data-ttu-id="c51e3-422">CDATA 區段的內容。</span><span class="sxs-lookup"><span data-stu-id="c51e3-422">The content of the CDATA section.</span></span>|  
|`Comment`|<span data-ttu-id="c51e3-423">註解的內容。</span><span class="sxs-lookup"><span data-stu-id="c51e3-423">The content of the comment.</span></span>|  
|`DocumentType`|<span data-ttu-id="c51e3-424">內部子集。</span><span class="sxs-lookup"><span data-stu-id="c51e3-424">The internal subset.</span></span>|  
|`ProcessingInstruction`|<span data-ttu-id="c51e3-425">全部內容 (目標除外)。</span><span class="sxs-lookup"><span data-stu-id="c51e3-425">The entire content, excluding the target.</span></span>|  
|`SignificantWhitespace`|<span data-ttu-id="c51e3-426">混合內容模型中標記間的泛空白字元。</span><span class="sxs-lookup"><span data-stu-id="c51e3-426">The white space between markup in a mixed content model.</span></span>|  
|`Text`|<span data-ttu-id="c51e3-427">文字節點的內容。</span><span class="sxs-lookup"><span data-stu-id="c51e3-427">The content of the text node.</span></span>|  
|`Whitespace`|<span data-ttu-id="c51e3-428">標記之間的泛空白字元。</span><span class="sxs-lookup"><span data-stu-id="c51e3-428">The white space between markup.</span></span>|  
|`XmlDeclaration`|<span data-ttu-id="c51e3-429">宣告的內容。</span><span class="sxs-lookup"><span data-stu-id="c51e3-429">The content of the declaration.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="c51e3-430">下列範例會顯示每個節點可以有一個值的值。</span><span class="sxs-lookup"><span data-stu-id="c51e3-430">The following example displays the value for every node that can have a value.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextReader.HasValue Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.HasValue Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextReader.HasValue Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.HasValue Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextReader.HasValue Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.HasValue Example/VB/source.vb#1)]  
  
 <span data-ttu-id="c51e3-431">此範例會使用該檔案，`book1.xml`作為輸入。</span><span class="sxs-lookup"><span data-stu-id="c51e3-431">The example uses the file, `book1.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlTextReader.HasValue Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlTextReader.HasValue Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="IsDefault">
      <MemberSignature Language="C#" Value="public override bool IsDefault { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDefault" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.IsDefault" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsDefault As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsDefault { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDefault : bool" Usage="System.Xml.XmlTextReader.IsDefault" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c51e3-432">Gets a value indicating whether the current node is an attribute that was generated from the default value defined in the DTD or schema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-432">Gets a value indicating whether the current node is an attribute that was generated from the default value defined in the DTD or schema.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c51e3-433">這個屬性永遠會傳回 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-433">This property always returns <see langword="false" />.</span>
          </span>
          <span data-ttu-id="c51e3-434">(<see cref="T:System.Xml.XmlTextReader" /> 不會展開預設屬性)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-434">(<see cref="T:System.Xml.XmlTextReader" /> does not expand default attributes.)</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c51e3-435">從.NET Framework 2.0 開始，我們建議您先建立<xref:System.Xml.XmlReader>所使用的執行個體<xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType>方法，以充分利用新功能。</span><span class="sxs-lookup"><span data-stu-id="c51e3-435">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c51e3-436">這個屬性只適用於屬性節點。</span><span class="sxs-lookup"><span data-stu-id="c51e3-436">This property applies only to attribute nodes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="IsEmptyElement">
      <MemberSignature Language="C#" Value="public override bool IsEmptyElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmptyElement" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.IsEmptyElement" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsEmptyElement As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsEmptyElement { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEmptyElement : bool" Usage="System.Xml.XmlTextReader.IsEmptyElement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c51e3-437">Gets a value indicating whether the current node is an empty element (for example, <c>&lt;MyElement/&gt;</c>).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-437">Gets a value indicating whether the current node is an empty element (for example, <c>&lt;MyElement/&gt;</c>).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c51e3-438">
            <see langword="true" /> 如果目前的節點是項目 (<see cref="P:System.Xml.XmlTextReader.NodeType" />等於<see langword="XmlNodeType.Element" />)，以結束<c> / &gt; </c>，否則<see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-438">
              <see langword="true" /> if the current node is an element (<see cref="P:System.Xml.XmlTextReader.NodeType" /> equals <see langword="XmlNodeType.Element" />) that ends with <c>/&gt;</c>; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c51e3-439">從.NET Framework 2.0 開始，我們建議您先建立<xref:System.Xml.XmlReader>所使用的執行個體<xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType>方法，以充分利用新功能。</span><span class="sxs-lookup"><span data-stu-id="c51e3-439">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c51e3-440">此屬性可讓您判斷下列各項目之間的差異：</span><span class="sxs-lookup"><span data-stu-id="c51e3-440">This property enables you to determine the difference between the following:</span></span>  
  
 <span data-ttu-id="c51e3-441">`<item num="123"/>` (`IsEmptyElement`是`true`)。</span><span class="sxs-lookup"><span data-stu-id="c51e3-441">`<item num="123"/>` (`IsEmptyElement` is `true`).</span></span>  
  
 <span data-ttu-id="c51e3-442">`<item num="123">` (`IsEmptyElement`是`false`，不過是空的項目內容)。</span><span class="sxs-lookup"><span data-stu-id="c51e3-442">`<item num="123">` (`IsEmptyElement` is `false`, although element content is empty).</span></span>  
  
 <span data-ttu-id="c51e3-443">對應`EndElement`的空白項目不會產生節點。</span><span class="sxs-lookup"><span data-stu-id="c51e3-443">A corresponding `EndElement` node is not generated for empty elements.</span></span>  
  
 <span data-ttu-id="c51e3-444">`IsEmptyElement` 只會報告來源文件中的項目有結尾項目標記。</span><span class="sxs-lookup"><span data-stu-id="c51e3-444">`IsEmptyElement` simply reports whether or not the element in the source document had an end element tag.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c51e3-445">下列範例會顯示每個項目的文字內容。</span><span class="sxs-lookup"><span data-stu-id="c51e3-445">The following example displays the text content of each element.</span></span>  
  
 [!code-cpp[Classic WebData XmlReader.IsStartElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlReader.IsStartElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlReader.IsStartElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlReader.IsStartElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlReader.IsStartElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlReader.IsStartElement Example/VB/source.vb#1)]  
  
 <span data-ttu-id="c51e3-446">此範例會使用該檔案，`elems.xml`作為輸入。</span><span class="sxs-lookup"><span data-stu-id="c51e3-446">The example uses the file, `elems.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlReader.IsStartElement Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlReader.IsStartElement Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="LineNumber">
      <MemberSignature Language="C#" Value="public int LineNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LineNumber" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.LineNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LineNumber As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LineNumber { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LineNumber : int" Usage="System.Xml.XmlTextReader.LineNumber" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Xml.IXmlLineInfo.LineNumber</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c51e3-447">Gets the current line number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-447">Gets the current line number.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c51e3-448">目前的行號。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-448">The current line number.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c51e3-449">從.NET Framework 2.0 開始，我們建議您先建立<xref:System.Xml.XmlReader>所使用的執行個體<xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType>方法，以充分利用新功能。</span><span class="sxs-lookup"><span data-stu-id="c51e3-449">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c51e3-450">這個屬性最常用於錯誤報告，但可以隨時呼叫。</span><span class="sxs-lookup"><span data-stu-id="c51e3-450">This property is most commonly used for error reporting, but can be called at any time.</span></span> <span data-ttu-id="c51e3-451">這個屬性的起始值`1`。</span><span class="sxs-lookup"><span data-stu-id="c51e3-451">The starting value for this property is `1`.</span></span>  
  
 <span data-ttu-id="c51e3-452">結合<xref:System.Xml.XmlTextReader.LinePosition%2A>，值為`1,1`表示文件的開頭。</span><span class="sxs-lookup"><span data-stu-id="c51e3-452">Combined with <xref:System.Xml.XmlTextReader.LinePosition%2A>, a value of `1,1` indicates the start of the document.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c51e3-453">下列範例會顯示每個節點，包含其深度、 行號和行位置。</span><span class="sxs-lookup"><span data-stu-id="c51e3-453">The following example displays each node including its depth, line number, and line position.</span></span>  
  
 [!code-cpp[XmlTextReader.LineNum#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlTextReader.LineNum/CPP/readlinenum.cpp#1)]
 [!code-csharp[XmlTextReader.LineNum#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlTextReader.LineNum/CS/readlinenum.cs#1)]
 [!code-vb[XmlTextReader.LineNum#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlTextReader.LineNum/VB/readlinenum.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="LinePosition">
      <MemberSignature Language="C#" Value="public int LinePosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LinePosition" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.LinePosition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LinePosition As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LinePosition { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LinePosition : int" Usage="System.Xml.XmlTextReader.LinePosition" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Xml.IXmlLineInfo.LinePosition</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c51e3-454">Gets the current line position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-454">Gets the current line position.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c51e3-455">目前的行位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-455">The current line position.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c51e3-456">從.NET Framework 2.0 開始，我們建議您先建立<xref:System.Xml.XmlReader>所使用的執行個體<xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType>方法，以充分利用新功能。</span><span class="sxs-lookup"><span data-stu-id="c51e3-456">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c51e3-457">這個屬性最常用於錯誤報告，但可以隨時呼叫。</span><span class="sxs-lookup"><span data-stu-id="c51e3-457">This property is most commonly used for error reporting, but can be called at any time.</span></span> <span data-ttu-id="c51e3-458">屬性的起始值是`1`。</span><span class="sxs-lookup"><span data-stu-id="c51e3-458">The property's starting value is `1`.</span></span>  
  
 <span data-ttu-id="c51e3-459">指定的位置是文字的在標記中的第一個字元。</span><span class="sxs-lookup"><span data-stu-id="c51e3-459">The position indicated is the first character of text in the markup.</span></span>  
  
```  
<root>  
abc<tag/>  
</root>  
```  
  
 <span data-ttu-id="c51e3-460">先前的 XML 文字，第一行上`LinePosition`的`2`對應於字元`r`; 在第二行，`LinePosition`的`5`對應於字元`t`; 在第三行`LinePosition`的`3`對應於字元`r`。</span><span class="sxs-lookup"><span data-stu-id="c51e3-460">On the first line of the preceding XML text, a `LinePosition` of `2` corresponds to the character `r`; on the second line, a `LinePosition` of `5` corresponds to the character `t`; and on the third line, a `LinePosition` of `3` corresponds to the character `r`.</span></span>  
  
 <span data-ttu-id="c51e3-461">結合<xref:System.Xml.XmlTextReader.LineNumber%2A>，值為`1,1`表示文件的開頭。</span><span class="sxs-lookup"><span data-stu-id="c51e3-461">Combined with <xref:System.Xml.XmlTextReader.LineNumber%2A>, a value of `1,1` indicates the start of the document.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c51e3-462">下列範例會顯示每個節點，包含其深度、 行號和行位置。</span><span class="sxs-lookup"><span data-stu-id="c51e3-462">The following example displays each node including its depth, line number, and line position.</span></span>  
  
 [!code-cpp[XmlTextReader.LineNum#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlTextReader.LineNum/CPP/readlinenum.cpp#1)]
 [!code-csharp[XmlTextReader.LineNum#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlTextReader.LineNum/CS/readlinenum.cs#1)]
 [!code-vb[XmlTextReader.LineNum#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlTextReader.LineNum/VB/readlinenum.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ LocalName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="System.Xml.XmlTextReader.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c51e3-463">Gets the local name of the current node.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-463">Gets the local name of the current node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c51e3-464">目前節點名稱的前置詞被移除。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-464">The name of the current node with the prefix removed.</span>
          </span>
          <span data-ttu-id="c51e3-465">例如，<see langword="LocalName" />是<see langword="book" />項目的<c> &lt;bk:book&gt;</c>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-465">For example, <see langword="LocalName" /> is <see langword="book" /> for the element <c>&lt;bk:book&gt;</c>.</span>
          </span>
          <span data-ttu-id="c51e3-466">對於沒有名稱的節點類型 (如 <see langword="Text" />、<see langword="Comment" /> 等)，這個屬性會傳回 <see langword="String.Empty" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-466">For node types that do not have a name (like <see langword="Text" />, <see langword="Comment" />, and so on), this property returns <see langword="String.Empty" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c51e3-467">從.NET Framework 2.0 開始，我們建議您先建立<xref:System.Xml.XmlReader>所使用的執行個體<xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType>方法，以充分利用新功能。</span><span class="sxs-lookup"><span data-stu-id="c51e3-467">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c51e3-468">下列範例會顯示每個節點的本機名稱，如果有的話，前置詞和命名空間 URI。</span><span class="sxs-lookup"><span data-stu-id="c51e3-468">The following example displays the local name of each node, and, if they exist, the prefix and namespace URI.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextReader.LocalName Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.LocalName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextReader.LocalName Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.LocalName Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextReader.LocalName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.LocalName Example/VB/source.vb#1)]  
  
 <span data-ttu-id="c51e3-469">此範例會使用該檔案，`book2.xml`作為輸入。</span><span class="sxs-lookup"><span data-stu-id="c51e3-469">The example uses the file, `book2.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlTextReader.LocalName Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlTextReader.LocalName Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="LookupNamespace">
      <MemberSignature Language="C#" Value="public override string LookupNamespace (string prefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string LookupNamespace(string prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.LookupNamespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function LookupNamespace (prefix As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ LookupNamespace(System::String ^ prefix);" />
      <MemberSignature Language="F#" Value="override this.LookupNamespace : string -&gt; string" Usage="xmlTextReader.LookupNamespace prefix" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">
          <span data-ttu-id="c51e3-470">The prefix whose namespace URI you want to resolve.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-470">The prefix whose namespace URI you want to resolve.</span>
          </span>
          <span data-ttu-id="c51e3-471">To match the default namespace, pass an empty string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-471">To match the default namespace, pass an empty string.</span>
          </span>
          <span data-ttu-id="c51e3-472">This string does not have to be atomized.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-472">This string does not have to be atomized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c51e3-473">Resolves a namespace prefix in the current element's scope.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-473">Resolves a namespace prefix in the current element's scope.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c51e3-474">The namespace URI to which the prefix maps or <see langword="null" /> if no matching prefix is found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-474">The namespace URI to which the prefix maps or <see langword="null" /> if no matching prefix is found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c51e3-475">從.NET Framework 2.0 開始，我們建議您先建立<xref:System.Xml.XmlReader>所使用的執行個體<xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType>方法，以充分利用新功能。</span><span class="sxs-lookup"><span data-stu-id="c51e3-475">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c51e3-476">在下列 XML 中，如果讀取器位於`href`屬性，前置詞`a`解析藉由呼叫`reader.LookupNamespace("a")`。</span><span class="sxs-lookup"><span data-stu-id="c51e3-476">In the following XML, if the reader is positioned on the `href` attribute, the prefix `a` is resolved by calling `reader.LookupNamespace("a")`.</span></span> <span data-ttu-id="c51e3-477">傳回的字串是`urn:456`。</span><span class="sxs-lookup"><span data-stu-id="c51e3-477">The returned string is `urn:456`.</span></span>  
  
```xml  
<root xmlns:a="urn:456">  
 <item>  
 <ref href="a:b"/>  
 </item>  
</root>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c51e3-478">The <see cref="P:System.Xml.XmlTextReader.Namespaces" /> property is set to <see langword="true" /> and the <paramref name="prefix" /> value is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-478">The <see cref="P:System.Xml.XmlTextReader.Namespaces" /> property is set to <see langword="true" /> and the <paramref name="prefix" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <MemberGroup MemberName="MoveToAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c51e3-479">Moves to the specified attribute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-479">Moves to the specified attribute.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c51e3-480">從.NET Framework 2.0 開始，我們建議您先建立<xref:System.Xml.XmlReader>所使用的執行個體<xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType>方法，以充分利用新功能。</span><span class="sxs-lookup"><span data-stu-id="c51e3-480">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="MoveToAttribute">
      <MemberSignature Language="C#" Value="public override void MoveToAttribute (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void MoveToAttribute(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.MoveToAttribute(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub MoveToAttribute (i As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void MoveToAttribute(int i);" />
      <MemberSignature Language="F#" Value="override this.MoveToAttribute : int -&gt; unit" Usage="xmlTextReader.MoveToAttribute i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="c51e3-481">The index of the attribute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-481">The index of the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c51e3-482">Moves to the attribute with the specified index.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-482">Moves to the attribute with the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c51e3-483">從.NET Framework 2.0 開始，我們建議您先建立<xref:System.Xml.XmlReader>所使用的執行個體<xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType>方法，以充分利用新功能。</span><span class="sxs-lookup"><span data-stu-id="c51e3-483">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c51e3-484">下列範例顯示目前的節點上的所有屬性。</span><span class="sxs-lookup"><span data-stu-id="c51e3-484">The following example displays all attributes on the current node.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextReader.MoveToElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.MoveToElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextReader.MoveToElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.MoveToElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextReader.MoveToElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.MoveToElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c51e3-485">The <paramref name="i" /> parameter is less than 0 or greater than or equal to <see cref="P:System.Xml.XmlReader.AttributeCount" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-485">The <paramref name="i" /> parameter is less than 0 or greater than or equal to <see cref="P:System.Xml.XmlReader.AttributeCount" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="MoveToAttribute">
      <MemberSignature Language="C#" Value="public override bool MoveToAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MoveToAttribute(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.MoveToAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MoveToAttribute (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MoveToAttribute(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.MoveToAttribute : string -&gt; bool" Usage="xmlTextReader.MoveToAttribute name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="c51e3-486">The qualified name of the attribute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-486">The qualified name of the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c51e3-487">Moves to the attribute with the specified name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-487">Moves to the attribute with the specified name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c51e3-488">
            <see langword="true" /> if the attribute is found; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-488">
              <see langword="true" /> if the attribute is found; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="c51e3-489">If <see langword="false" />, the reader's position does not change.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-489">If <see langword="false" />, the reader's position does not change.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c51e3-490">從.NET Framework 2.0 開始，我們建議您先建立<xref:System.Xml.XmlReader>所使用的執行個體<xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType>方法，以充分利用新功能。</span><span class="sxs-lookup"><span data-stu-id="c51e3-490">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c51e3-491">在呼叫`MoveToAttribute`、 <xref:System.Xml.XmlTextReader.Name%2A>， <xref:System.Xml.XmlTextReader.NamespaceURI%2A>，和<xref:System.Xml.XmlTextReader.Prefix%2A>屬性會反映該屬性的屬性。</span><span class="sxs-lookup"><span data-stu-id="c51e3-491">After calling `MoveToAttribute`, the <xref:System.Xml.XmlTextReader.Name%2A>, <xref:System.Xml.XmlTextReader.NamespaceURI%2A>, and <xref:System.Xml.XmlTextReader.Prefix%2A> properties reflects the properties of that attribute.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="MoveToAttribute">
      <MemberSignature Language="C#" Value="public override bool MoveToAttribute (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MoveToAttribute(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.MoveToAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MoveToAttribute (localName As String, namespaceURI As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MoveToAttribute(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="override this.MoveToAttribute : string * string -&gt; bool" Usage="xmlTextReader.MoveToAttribute (localName, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">
          <span data-ttu-id="c51e3-492">The local name of the attribute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-492">The local name of the attribute.</span>
          </span>
        </param>
        <param name="namespaceURI">
          <span data-ttu-id="c51e3-493">The namespace URI of the attribute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-493">The namespace URI of the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c51e3-494">Moves to the attribute with the specified local name and namespace URI.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-494">Moves to the attribute with the specified local name and namespace URI.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c51e3-495">
            <see langword="true" /> if the attribute is found; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-495">
              <see langword="true" /> if the attribute is found; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="c51e3-496">If <see langword="false" />, the reader's position does not change.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-496">If <see langword="false" />, the reader's position does not change.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c51e3-497">從.NET Framework 2.0 開始，我們建議您先建立<xref:System.Xml.XmlReader>所使用的執行個體<xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType>方法，以充分利用新功能。</span><span class="sxs-lookup"><span data-stu-id="c51e3-497">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c51e3-498">在呼叫`MoveToAttribute`、 <xref:System.Xml.XmlTextReader.Name%2A>， <xref:System.Xml.XmlTextReader.NamespaceURI%2A>，和<xref:System.Xml.XmlTextReader.Prefix%2A>屬性會反映該屬性的屬性。</span><span class="sxs-lookup"><span data-stu-id="c51e3-498">After calling `MoveToAttribute`, the <xref:System.Xml.XmlTextReader.Name%2A>, <xref:System.Xml.XmlTextReader.NamespaceURI%2A>, and <xref:System.Xml.XmlTextReader.Prefix%2A> properties reflects the properties of that attribute.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="MoveToElement">
      <MemberSignature Language="C#" Value="public override bool MoveToElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MoveToElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.MoveToElement" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MoveToElement () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MoveToElement();" />
      <MemberSignature Language="F#" Value="override this.MoveToElement : unit -&gt; bool" Usage="xmlTextReader.MoveToElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c51e3-499">Moves to the element that contains the current attribute node.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-499">Moves to the element that contains the current attribute node.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c51e3-500">
            <see langword="true" /> if the reader is positioned on an attribute (the reader moves to the element that owns the attribute); <see langword="false" /> if the reader is not positioned on an attribute (the position of the reader does not change).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-500">
              <see langword="true" /> if the reader is positioned on an attribute (the reader moves to the element that owns the attribute); <see langword="false" /> if the reader is not positioned on an attribute (the position of the reader does not change).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c51e3-501">從.NET Framework 2.0 開始，我們建議您先建立<xref:System.Xml.XmlReader>所使用的執行個體<xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType>方法，以充分利用新功能。</span><span class="sxs-lookup"><span data-stu-id="c51e3-501">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c51e3-502">使用此方法傳回的項目之後瀏覽它的屬性。</span><span class="sxs-lookup"><span data-stu-id="c51e3-502">Use this method to return to an element after navigating through its attributes.</span></span> <span data-ttu-id="c51e3-503">這個方法會將讀取器移至下列節點類型的其中一個： `Element`， `DocumentType`，或`XmlDeclaration`。</span><span class="sxs-lookup"><span data-stu-id="c51e3-503">This method moves the reader to one of the following node types: `Element`, `DocumentType`, or `XmlDeclaration`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c51e3-504">下列範例顯示目前的節點上的所有屬性。</span><span class="sxs-lookup"><span data-stu-id="c51e3-504">The following example displays all attributes on the current node.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextReader.MoveToElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.MoveToElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextReader.MoveToElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.MoveToElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextReader.MoveToElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.MoveToElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="MoveToFirstAttribute">
      <MemberSignature Language="C#" Value="public override bool MoveToFirstAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MoveToFirstAttribute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.MoveToFirstAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MoveToFirstAttribute () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MoveToFirstAttribute();" />
      <MemberSignature Language="F#" Value="override this.MoveToFirstAttribute : unit -&gt; bool" Usage="xmlTextReader.MoveToFirstAttribute " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c51e3-505">Moves to the first attribute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-505">Moves to the first attribute.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c51e3-506">
            <see langword="true" /> if an attribute exists (the reader moves to the first attribute); otherwise, <see langword="false" /> (the position of the reader does not change).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-506">
              <see langword="true" /> if an attribute exists (the reader moves to the first attribute); otherwise, <see langword="false" /> (the position of the reader does not change).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c51e3-507">從.NET Framework 2.0 開始，我們建議您先建立<xref:System.Xml.XmlReader>所使用的執行個體<xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType>方法，以充分利用新功能。</span><span class="sxs-lookup"><span data-stu-id="c51e3-507">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c51e3-508">下列範例會取得根節點的第一個屬性的值。</span><span class="sxs-lookup"><span data-stu-id="c51e3-508">The following example gets the value of the first attribute of the root node.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextReader.MoveToFirstAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.MoveToFirstAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextReader.MoveToFirstAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.MoveToFirstAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextReader.MoveToFirstAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.MoveToFirstAttribute Example/VB/source.vb#1)]  
  
 <span data-ttu-id="c51e3-509">此範例會使用該檔案，`attrs.xml`作為輸入。</span><span class="sxs-lookup"><span data-stu-id="c51e3-509">The example uses the file, `attrs.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlTextReader.MoveToFirstAttribute Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlTextReader.MoveToFirstAttribute Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="MoveToNextAttribute">
      <MemberSignature Language="C#" Value="public override bool MoveToNextAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MoveToNextAttribute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.MoveToNextAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MoveToNextAttribute () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MoveToNextAttribute();" />
      <MemberSignature Language="F#" Value="override this.MoveToNextAttribute : unit -&gt; bool" Usage="xmlTextReader.MoveToNextAttribute " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c51e3-510">Moves to the next attribute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-510">Moves to the next attribute.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c51e3-511">
            <see langword="true" /> if there is a next attribute; <see langword="false" /> if there are no more attributes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-511">
              <see langword="true" /> if there is a next attribute; <see langword="false" /> if there are no more attributes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c51e3-512">從.NET Framework 2.0 開始，我們建議您先建立<xref:System.Xml.XmlReader>所使用的執行個體<xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType>方法，以充分利用新功能。</span><span class="sxs-lookup"><span data-stu-id="c51e3-512">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c51e3-513">如果目前的節點是項目節點，此方法相當於<xref:System.Xml.XmlTextReader.MoveToFirstAttribute%2A>。</span><span class="sxs-lookup"><span data-stu-id="c51e3-513">If the current node is an element node, this method is equivalent to <xref:System.Xml.XmlTextReader.MoveToFirstAttribute%2A>.</span></span> <span data-ttu-id="c51e3-514">如果`MoveToNextAttribute`傳回`true`，讀取器移至下一個屬性; 否則讀取器的位置不會變更。</span><span class="sxs-lookup"><span data-stu-id="c51e3-514">If `MoveToNextAttribute` returns `true`, the reader moves to the next attribute; otherwise, the position of the reader does not change.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c51e3-515">下列範例顯示目前的節點上的所有屬性。</span><span class="sxs-lookup"><span data-stu-id="c51e3-515">The following example displays all attributes on the current node.</span></span>  
  
 [!code-cpp[Classic WebData XmlReader.HasAttributes Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlReader.HasAttributes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlReader.HasAttributes Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlReader.HasAttributes Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlReader.HasAttributes Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlReader.HasAttributes Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Xml.XmlTextReader.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c51e3-516">Gets the qualified name of the current node.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-516">Gets the qualified name of the current node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c51e3-517">目前節點的限定名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-517">The qualified name of the current node.</span>
          </span>
          <span data-ttu-id="c51e3-518">例如，<see langword="Name" />是<see langword="bk:book" />項目的<c> &lt;bk:book&gt;</c>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-518">For example, <see langword="Name" /> is <see langword="bk:book" /> for the element <c>&lt;bk:book&gt;</c>.</span>
          </span>
          <span data-ttu-id="c51e3-519">傳回的名稱需視節點的 <see cref="P:System.Xml.XmlTextReader.NodeType" /> 而定：</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-519">The name returned is dependent on the <see cref="P:System.Xml.XmlTextReader.NodeType" /> of the node.</span>
          </span>
          <span data-ttu-id="c51e3-520">下列節點類型會傳回所列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-520">The following node types return the listed values.</span>
          </span>
          <span data-ttu-id="c51e3-521">其他所有節點類型都會傳回空字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-521">All other node types return an empty string.</span>
          </span>
          <span data-ttu-id="c51e3-522">
            <list type="table">
              <listheader>
                <term> 節點型別</term>
                <description>名稱</description>
              </listheader>
              <item>
                <term>
                  <see langword="Attribute" />
                </term>
                <description>屬性的名稱。</description>
              </item>
              <item>
                <term>
                  <see langword="DocumentType" />
                </term>
                <description> 文件型別名稱。</description>
              </item>
              <item>
                <term>
                  <see langword="Element" />
                </term>
                <description> 標記名稱。</description>
              </item>
              <item>
                <term>
                  <see langword="EntityReference" />
                </term>
                <description> 參考的實體名稱。</description>
              </item>
              <item>
                <term>
                  <see langword="ProcessingInstruction" />
                </term>
                <description> 處理指示的目標。</description>
              </item>
              <item>
                <term>
                  <see langword="XmlDeclaration" />
                </term>
                <description> 常值字串<see langword="xml" />。  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-522">
              <list type="table">
                <listheader>
                  <term> Node Type  </term>
                  <description> Name  </description>
                </listheader>
                <item>
                  <term>
                    <see langword="Attribute" />
                  </term>
                  <description> The name of the attribute.  </description>
                </item>
                <item>
                  <term>
                    <see langword="DocumentType" />
                  </term>
                  <description> The document type name.  </description>
                </item>
                <item>
                  <term>
                    <see langword="Element" />
                  </term>
                  <description> The tag name.  </description>
                </item>
                <item>
                  <term>
                    <see langword="EntityReference" />
                  </term>
                  <description> The name of the entity referenced.  </description>
                </item>
                <item>
                  <term>
                    <see langword="ProcessingInstruction" />
                  </term>
                  <description> The target of the processing instruction.  </description>
                </item>
                <item>
                  <term>
                    <see langword="XmlDeclaration" />
                  </term>
                  <description> The literal string <see langword="xml" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c51e3-523">從.NET Framework 2.0 開始，我們建議您先建立<xref:System.Xml.XmlReader>所使用的執行個體<xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType>方法，以充分利用新功能。</span><span class="sxs-lookup"><span data-stu-id="c51e3-523">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c51e3-524">下列範例會讀取 XML 檔案，並顯示每個節點。</span><span class="sxs-lookup"><span data-stu-id="c51e3-524">The following example reads an XML file and displays each of the nodes.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextReader.Name Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextReader.Name Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextReader.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/VB/source.vb#1)]  
  
 <span data-ttu-id="c51e3-525">此範例會使用檔案`items.xml`。</span><span class="sxs-lookup"><span data-stu-id="c51e3-525">The sample uses the file `items.xml`.</span></span>  
  
 [!code-xml[Classic WebData XmlTextReader.Name Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Namespaces">
      <MemberSignature Language="C#" Value="public bool Namespaces { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Namespaces" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.Namespaces" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespaces As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Namespaces { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Namespaces : bool with get, set" Usage="System.Xml.XmlTextReader.Namespaces" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c51e3-526">Gets or sets a value indicating whether to do namespace support.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-526">Gets or sets a value indicating whether to do namespace support.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c51e3-527">如果支援命名空間，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-527">
              <see langword="true" /> to do namespace support; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="c51e3-528">預設值為 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-528">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c51e3-529">從.NET Framework 2.0 開始，我們建議您先建立<xref:System.Xml.XmlReader>所使用的執行個體<xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType>方法，以充分利用新功能。</span><span class="sxs-lookup"><span data-stu-id="c51e3-529">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c51e3-530">此屬性決定讀取器是否支援位於 www.w3.org/TR/REC-xml-names XML 建議事項中的 W3C 命名空間。</span><span class="sxs-lookup"><span data-stu-id="c51e3-530">This property determines whether the reader supports the W3C Namespaces in XML recommendation located at www.w3.org/TR/REC-xml-names.</span></span>  
  
 <span data-ttu-id="c51e3-531">`Namespaces`讀取的作業都發生之後，就無法設定屬性。</span><span class="sxs-lookup"><span data-stu-id="c51e3-531">The `Namespaces` property cannot be set after a read operation has occurred.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c51e3-532">Setting this property after a read operation has occurred (<see cref="P:System.Xml.XmlTextReader.ReadState" /> is not <see langword="ReadState.Initial" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-532">Setting this property after a read operation has occurred (<see cref="P:System.Xml.XmlTextReader.ReadState" /> is not <see langword="ReadState.Initial" />).</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="NamespaceURI">
      <MemberSignature Language="C#" Value="public override string NamespaceURI { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NamespaceURI" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.NamespaceURI" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NamespaceURI As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ NamespaceURI { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NamespaceURI : string" Usage="System.Xml.XmlTextReader.NamespaceURI" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c51e3-533">Gets the namespace URI (as defined in the W3C Namespace specification) of the node on which the reader is positioned.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-533">Gets the namespace URI (as defined in the W3C Namespace specification) of the node on which the reader is positioned.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c51e3-534">目前節點的命名空間 URI，否則為空字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-534">The namespace URI of the current node; otherwise an empty string.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c51e3-535">從.NET Framework 2.0 開始，我們建議您先建立<xref:System.Xml.XmlReader>所使用的執行個體<xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType>方法，以充分利用新功能。</span><span class="sxs-lookup"><span data-stu-id="c51e3-535">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c51e3-536">這個屬性是適用於`Element`和`Attribute`只節點。</span><span class="sxs-lookup"><span data-stu-id="c51e3-536">This property is relevant to `Element` and `Attribute` nodes only.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c51e3-537">下列範例會顯示每個節點的本機名稱，如果有的話，前置詞和命名空間 URI。</span><span class="sxs-lookup"><span data-stu-id="c51e3-537">The following example displays the local name of each node, and, if they exist, the prefix and namespace URI.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextReader.LocalName Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.LocalName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextReader.LocalName Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.LocalName Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextReader.LocalName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.LocalName Example/VB/source.vb#1)]  
  
 <span data-ttu-id="c51e3-538">此範例會使用該檔案，`book2.xml`作為輸入。</span><span class="sxs-lookup"><span data-stu-id="c51e3-538">The example uses the file, `book2.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlTextReader.LocalName Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlTextReader.LocalName Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="NameTable">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNameTable NameTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNameTable NameTable" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.NameTable" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NameTable As XmlNameTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNameTable ^ NameTable { System::Xml::XmlNameTable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NameTable : System.Xml.XmlNameTable" Usage="System.Xml.XmlTextReader.NameTable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNameTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c51e3-539">Gets the <see cref="T:System.Xml.XmlNameTable" /> associated with this implementation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-539">Gets the <see cref="T:System.Xml.XmlNameTable" /> associated with this implementation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c51e3-540">
            <see langword="XmlNameTable" /> 可讓您取得節點中字串的原子化版本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-540">The <see langword="XmlNameTable" /> enabling you to get the atomized version of a string within the node.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c51e3-541">從.NET Framework 2.0 開始，我們建議您先建立<xref:System.Xml.XmlReader>所使用的執行個體<xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType>方法，以充分利用新功能。</span><span class="sxs-lookup"><span data-stu-id="c51e3-541">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c51e3-542">從傳回的所有節點和屬性名稱<xref:System.Xml.XmlTextReader>使用原子化`NameTable`。</span><span class="sxs-lookup"><span data-stu-id="c51e3-542">All node and attribute names returned from <xref:System.Xml.XmlTextReader> are atomized using the `NameTable`.</span></span> <span data-ttu-id="c51e3-543">相同的名稱傳回多次時 (例如， `Customer`)，然後相同`String`會傳回物件，該名稱。</span><span class="sxs-lookup"><span data-stu-id="c51e3-543">When the same name is returned multiple times (for example, `Customer`), then the same `String` object is returned for that name.</span></span> <span data-ttu-id="c51e3-544">這可讓您撰寫有效率的程式碼，進行物件比較這些字串，而不是高度耗費資源的字串比較。</span><span class="sxs-lookup"><span data-stu-id="c51e3-544">This makes it possible for you to write efficient code that does object comparisons on these strings instead of expensive string comparisons.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlNameTable" />
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNodeType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlNodeType NodeType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.NodeType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NodeType As XmlNodeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNodeType NodeType { System::Xml::XmlNodeType get(); };" />
      <MemberSignature Language="F#" Value="member this.NodeType : System.Xml.XmlNodeType" Usage="System.Xml.XmlTextReader.NodeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c51e3-545">Gets the type of the current node.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-545">Gets the type of the current node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c51e3-546">
            <see cref="T:System.Xml.XmlNodeType" /> 值之一，代表目前節點的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-546">One of the <see cref="T:System.Xml.XmlNodeType" /> values representing the type of the current node.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c51e3-547">從.NET Framework 2.0 開始，我們建議您先建立<xref:System.Xml.XmlReader>所使用的執行個體<xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType>方法，以充分利用新功能。</span><span class="sxs-lookup"><span data-stu-id="c51e3-547">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c51e3-548">這個屬性永遠不會傳回下列`XmlNodeType`類型： `Document`， `DocumentFragment`， `Entity`， `EndEntity`，或`Notation`。</span><span class="sxs-lookup"><span data-stu-id="c51e3-548">This property never returns the following `XmlNodeType` types: `Document`, `DocumentFragment`, `Entity`, `EndEntity`, or `Notation`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c51e3-549">下列範例會讀取 XML 檔案，並顯示每個節點。</span><span class="sxs-lookup"><span data-stu-id="c51e3-549">The following example reads an XML file and displays each of the nodes.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextReader.Name Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextReader.Name Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextReader.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/VB/source.vb#1)]  
  
 <span data-ttu-id="c51e3-550">此範例會使用檔案`items.xml`。</span><span class="sxs-lookup"><span data-stu-id="c51e3-550">The sample uses the file `items.xml`.</span></span>  
  
 [!code-xml[Classic WebData XmlTextReader.Name Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Normalization">
      <MemberSignature Language="C#" Value="public bool Normalization { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Normalization" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.Normalization" />
      <MemberSignature Language="VB.NET" Value="Public Property Normalization As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Normalization { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Normalization : bool with get, set" Usage="System.Xml.XmlTextReader.Normalization" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c51e3-551">Gets or sets a value indicating whether to normalize white space and attribute values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-551">Gets or sets a value indicating whether to normalize white space and attribute values.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c51e3-552">若要正常化，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-552">
              <see langword="true" /> to normalize; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="c51e3-553">預設值為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-553">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c51e3-554">從.NET Framework 2.0 開始，我們建議您先建立<xref:System.Xml.XmlReader>所使用的執行個體<xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType>方法，以充分利用新功能。</span><span class="sxs-lookup"><span data-stu-id="c51e3-554">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c51e3-555">此屬性可以隨時變更，而且會在下一步的讀取作業上生效。</span><span class="sxs-lookup"><span data-stu-id="c51e3-555">This property can be changed at any time and takes effect on the next read operation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c51e3-556">如果<xref:System.Xml.XmlTextReader>用來建構<xref:System.Xml.XmlValidatingReader>，若要將屬性值正常化`Normalization`必須設為`true`。</span><span class="sxs-lookup"><span data-stu-id="c51e3-556">If the <xref:System.Xml.XmlTextReader> is used to construct an <xref:System.Xml.XmlValidatingReader>, to normalize attribute values, `Normalization` must be set to `true`.</span></span>  
  
 <span data-ttu-id="c51e3-557">如果`Normalization`設`false`，這也會停用檢查數值實體的字元範圍。</span><span class="sxs-lookup"><span data-stu-id="c51e3-557">If `Normalization` is set to `false`, this also disables character range checking for numeric entities.</span></span> <span data-ttu-id="c51e3-558">如此一來，字元實體，例如`&#0;`，允許。</span><span class="sxs-lookup"><span data-stu-id="c51e3-558">As a result, character entities, such as `&#0;`, are allowed.</span></span>  
  
 <span data-ttu-id="c51e3-559">以下描述屬性值正常化：</span><span class="sxs-lookup"><span data-stu-id="c51e3-559">The following describes attribute value normalization:</span></span>  
  
-   <span data-ttu-id="c51e3-560">對於字元參考，請將參考的字元附加到屬性值中。</span><span class="sxs-lookup"><span data-stu-id="c51e3-560">For a character reference, append the referenced character to the attribute value.</span></span>  
  
-   <span data-ttu-id="c51e3-561">對於實體參考，請以遞迴處理實體的取代文字。</span><span class="sxs-lookup"><span data-stu-id="c51e3-561">For an entity reference, recursively process the replacement text of the entity.</span></span>  
  
-   <span data-ttu-id="c51e3-562">空格字元 （#x、 #xD、 #xA、 #x），將 #x 附加至正規化值。</span><span class="sxs-lookup"><span data-stu-id="c51e3-562">For a white space character (#x20, #xD, #xA, #x9), append #x20 to the normalized value.</span></span> <span data-ttu-id="c51e3-563">（只有單一 #x 附加為外部剖析實體的一部分或內部剖析實體的常值的實體值"#xD #xA"順序）。</span><span class="sxs-lookup"><span data-stu-id="c51e3-563">(Only a single #x20 is appended for a "#xD#xA" sequence that is part of an external parsed entity or the literal entity value of an internal parsed entity.)</span></span>  
  
-   <span data-ttu-id="c51e3-564">處理其他字元，請將它們附加至正規化值中。</span><span class="sxs-lookup"><span data-stu-id="c51e3-564">Process other characters by appending them to the normalized value.</span></span>  
  
-   <span data-ttu-id="c51e3-565">如果宣告的值不是 CDATA，捨棄任何開頭和尾端的空格 (#x) 字元和空格 (# #x) 字元的序列取代為單一空白字元 (# #x)。</span><span class="sxs-lookup"><span data-stu-id="c51e3-565">If the declared value is not CDATA, discard any leading and trailing space (#x20) characters and replace sequences of space (#x20) characters with a single space (#x20) character.</span></span>  
  
 <span data-ttu-id="c51e3-566">`XmlTextReader`只會執行屬性或 CDATA 正規化。</span><span class="sxs-lookup"><span data-stu-id="c51e3-566">The `XmlTextReader` only performs attribute or CDATA normalization.</span></span> <span data-ttu-id="c51e3-567">它不會執行特定的 DTD 正規化，除非包裝內`XmlValidatingReader`。</span><span class="sxs-lookup"><span data-stu-id="c51e3-567">It does not do DTD-specific normalization unless wrapped within an `XmlValidatingReader`.</span></span>  
  
 <span data-ttu-id="c51e3-568">請參閱 W3C XML 1.0 recommendation 的進一步討論正規化。</span><span class="sxs-lookup"><span data-stu-id="c51e3-568">Refer to the W3C XML 1.0 recommendation for further discussion on normalization.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c51e3-569">下列範例會顯示讀取器行為正規化為開啟，然後關閉。</span><span class="sxs-lookup"><span data-stu-id="c51e3-569">The following example shows reader behavior with normalization turned on and then off.</span></span>  
  
 [!code-cpp[XmlTextReader.Normalization#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlTextReader.Normalization/CPP/readnormal.cpp#1)]
 [!code-csharp[XmlTextReader.Normalization#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlTextReader.Normalization/CS/readnormal.cs#1)]
 [!code-vb[XmlTextReader.Normalization#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlTextReader.Normalization/VB/readnormal.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c51e3-570">Setting this property when the reader is closed (<see cref="P:System.Xml.XmlTextReader.ReadState" /> is <see langword="ReadState.Closed" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-570">Setting this property when the reader is closed (<see cref="P:System.Xml.XmlTextReader.ReadState" /> is <see langword="ReadState.Closed" />).</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Prefix">
      <MemberSignature Language="C#" Value="public override string Prefix { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Prefix" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.Prefix" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Prefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Prefix { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Prefix : string" Usage="System.Xml.XmlTextReader.Prefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c51e3-571">Gets the namespace prefix associated with the current node.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-571">Gets the namespace prefix associated with the current node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c51e3-572">與目前節點相關聯的命名空間前置詞。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-572">The namespace prefix associated with the current node.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c51e3-573">從.NET Framework 2.0 開始，我們建議您先建立<xref:System.Xml.XmlReader>所使用的執行個體<xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType>方法，以充分利用新功能。</span><span class="sxs-lookup"><span data-stu-id="c51e3-573">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c51e3-574">下列範例會顯示每個節點的本機名稱，如果有的話，前置詞和命名空間 URI。</span><span class="sxs-lookup"><span data-stu-id="c51e3-574">The following example displays the local name of each node, and, if they exist, the prefix and namespace URI.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextReader.LocalName Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.LocalName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextReader.LocalName Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.LocalName Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextReader.LocalName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.LocalName Example/VB/source.vb#1)]  
  
 <span data-ttu-id="c51e3-575">此範例會使用該檔案，`book2.xml`作為輸入。</span><span class="sxs-lookup"><span data-stu-id="c51e3-575">The example uses the file, `book2.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlTextReader.LocalName Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlTextReader.LocalName Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="ProhibitDtd">
      <MemberSignature Language="C#" Value="public bool ProhibitDtd { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProhibitDtd" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.ProhibitDtd" />
      <MemberSignature Language="VB.NET" Value="Public Property ProhibitDtd As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProhibitDtd { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ProhibitDtd : bool with get, set" Usage="System.Xml.XmlTextReader.ProhibitDtd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use DtdProcessing property instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c51e3-576">Gets or sets a value indicating whether to allow DTD processing.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-576">Gets or sets a value indicating whether to allow DTD processing.</span>
          </span>
          <span data-ttu-id="c51e3-577">This property is obsolete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-577">This property is obsolete.</span>
          </span>
          <span data-ttu-id="c51e3-578">Use <see cref="P:System.Xml.XmlTextReader.DtdProcessing" /> instead.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-578">Use <see cref="P:System.Xml.XmlTextReader.DtdProcessing" /> instead.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c51e3-579">
            <see langword="true" /> 表示不允許 DTD 處理，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-579">
              <see langword="true" /> to disallow DTD processing; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="c51e3-580">預設值為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-580">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c51e3-581">從.NET Framework 2.0 開始，我們建議您先建立<xref:System.Xml.XmlReader>所使用的執行個體<xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType>方法，以充分利用新功能。</span><span class="sxs-lookup"><span data-stu-id="c51e3-581">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c51e3-582">DTD 處理預設會啟用為回溯相容性。</span><span class="sxs-lookup"><span data-stu-id="c51e3-582">DTD processing is enabled by default for backwards compatibility.</span></span> <span data-ttu-id="c51e3-583">不過，除非您的應用程式需要 DTD 處理，您應該停用此設定。</span><span class="sxs-lookup"><span data-stu-id="c51e3-583">However, unless your application requires DTD processing, you should disable this setting.</span></span> <span data-ttu-id="c51e3-584">在防止某些阻斷服務攻擊時，停用 DTD 處理會很有用。</span><span class="sxs-lookup"><span data-stu-id="c51e3-584">Disabling DTD processing can be useful in preventing certain denial of service attacks.</span></span> <span data-ttu-id="c51e3-585">如果設定為`true`，讀取器會擲回<xref:System.Xml.XmlException>時遇到任何 DTD 內容。</span><span class="sxs-lookup"><span data-stu-id="c51e3-585">If set to `true`, the reader throws an <xref:System.Xml.XmlException> when any DTD content is encountered.</span></span>  
  
 <span data-ttu-id="c51e3-586">如果您已啟用 DTD 處理，您需要注意的 dtd 從受信任的來源和可能的阻絕服務攻擊。</span><span class="sxs-lookup"><span data-stu-id="c51e3-586">If you have DTD processing enabled, you need to be aware of including DTDs from untrusted sources and possible denial of service attacks.</span></span> <span data-ttu-id="c51e3-587">使用<xref:System.Xml.XmlSecureResolver>，限制的資源，<xref:System.Xml.XmlTextReader>可以存取。</span><span class="sxs-lookup"><span data-stu-id="c51e3-587">Use the <xref:System.Xml.XmlSecureResolver> to restrict the resources that the <xref:System.Xml.XmlTextReader> can access.</span></span> <span data-ttu-id="c51e3-588">您還可以設計應用程式，讓 XML 處理具有記憶體和時間限制。</span><span class="sxs-lookup"><span data-stu-id="c51e3-588">You can also design your application so that the XML processing is memory and time constrained.</span></span> <span data-ttu-id="c51e3-589">例如，ASP.NET 應用程式中設定逾時限制</span><span class="sxs-lookup"><span data-stu-id="c51e3-589">For example, configure time-out limits in your ASP.NET application</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="QuoteChar">
      <MemberSignature Language="C#" Value="public override char QuoteChar { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char QuoteChar" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.QuoteChar" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property QuoteChar As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property char QuoteChar { char get(); };" />
      <MemberSignature Language="F#" Value="member this.QuoteChar : char" Usage="System.Xml.XmlTextReader.QuoteChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c51e3-590">Gets the quotation mark character used to enclose the value of an attribute node.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-590">Gets the quotation mark character used to enclose the value of an attribute node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c51e3-591">用來括住屬性節點值的引號字元 (" 或 ')。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-591">The quotation mark character (" or ') used to enclose the value of an attribute node.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c51e3-592">從.NET Framework 2.0 開始，我們建議您先建立<xref:System.Xml.XmlReader>所使用的執行個體<xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType>方法，以充分利用新功能。</span><span class="sxs-lookup"><span data-stu-id="c51e3-592">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c51e3-593">這個屬性只適用於屬性節點。</span><span class="sxs-lookup"><span data-stu-id="c51e3-593">This property applies only to an attribute node.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override bool Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Read();" />
      <MemberSignature Language="F#" Value="override this.Read : unit -&gt; bool" Usage="xmlTextReader.Read " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c51e3-594">Reads the next node from the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-594">Reads the next node from the stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c51e3-595">
            <see langword="true" /> if the next node was read successfully; <see langword="false" /> if there are no more nodes to read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-595">
              <see langword="true" /> if the next node was read successfully; <see langword="false" /> if there are no more nodes to read.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c51e3-596">從.NET Framework 2.0 開始，我們建議您先建立<xref:System.Xml.XmlReader>所使用的執行個體<xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType>方法，以充分利用新功能。</span><span class="sxs-lookup"><span data-stu-id="c51e3-596">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c51e3-597">當讀取器第一次建立並初始化時，沒有任何可用資訊。</span><span class="sxs-lookup"><span data-stu-id="c51e3-597">When a reader is first created and initialized, there is no information available.</span></span> <span data-ttu-id="c51e3-598">您必須呼叫`Read`讀取的第一個節點。</span><span class="sxs-lookup"><span data-stu-id="c51e3-598">You must call `Read` to read the first node.</span></span>  
  
 <span data-ttu-id="c51e3-599">這個方法需要從資料流至少四個位元組，才能開始剖析。</span><span class="sxs-lookup"><span data-stu-id="c51e3-599">This method requires at least four bytes from the data stream in order to begin parsing.</span></span> <span data-ttu-id="c51e3-600">如果傳回少於四個位元組資料流中沒有詳細資料，該方法會失敗。</span><span class="sxs-lookup"><span data-stu-id="c51e3-600">If fewer than four bytes are returned and there is no more data in the stream, the method will fail.</span></span> <span data-ttu-id="c51e3-601">如果資料流中有更多資料，方法會封鎖直到接收第四個位元組的剖析。</span><span class="sxs-lookup"><span data-stu-id="c51e3-601">If there is more data in the stream, the method will block parsing until receipt of the fourth byte.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c51e3-602">下列範例會讀取 XML 檔案，並顯示每個節點。</span><span class="sxs-lookup"><span data-stu-id="c51e3-602">The following example reads an XML file and displays each node.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextReader.Name Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextReader.Name Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextReader.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/VB/source.vb#1)]  
  
 <span data-ttu-id="c51e3-603">此範例會使用檔案`items.xml`。</span><span class="sxs-lookup"><span data-stu-id="c51e3-603">The sample uses the file `items.xml`.</span></span>  
  
 [!code-xml[Classic WebData XmlTextReader.Name Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="c51e3-604">An error occurred while parsing the XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-604">An error occurred while parsing the XML.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.EntityHandling" />
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="ReadAttributeValue">
      <MemberSignature Language="C#" Value="public override bool ReadAttributeValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ReadAttributeValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.ReadAttributeValue" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadAttributeValue () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ReadAttributeValue();" />
      <MemberSignature Language="F#" Value="override this.ReadAttributeValue : unit -&gt; bool" Usage="xmlTextReader.ReadAttributeValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c51e3-605">Parses the attribute value into one or more <see langword="Text" />, <see langword="EntityReference" />, or <see langword="EndEntity" /> nodes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-605">Parses the attribute value into one or more <see langword="Text" />, <see langword="EntityReference" />, or <see langword="EndEntity" /> nodes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c51e3-606">
            <see langword="true" /> if there are nodes to return.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-606">
              <see langword="true" /> if there are nodes to return.</span>
          </span>
          <span data-ttu-id="c51e3-607">
            <see langword="false" /> if the reader is not positioned on an attribute node when the initial call is made or if all the attribute values have been read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-607">
              <see langword="false" /> if the reader is not positioned on an attribute node when the initial call is made or if all the attribute values have been read.</span>
          </span>
          <span data-ttu-id="c51e3-608">An empty attribute, such as, <c>misc=""</c>, returns <see langword="true" /> with a single node with a value of <see langword="String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-608">An empty attribute, such as, <c>misc=""</c>, returns <see langword="true" /> with a single node with a value of <see langword="String.Empty" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c51e3-609">從.NET Framework 2.0 開始，我們建議您先建立<xref:System.Xml.XmlReader>所使用的執行個體<xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType>方法，以充分利用新功能。</span><span class="sxs-lookup"><span data-stu-id="c51e3-609">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c51e3-610">使用這個方法之後呼叫`MoveToAttribute`閱讀組成屬性值的文字或實體參考節點。</span><span class="sxs-lookup"><span data-stu-id="c51e3-610">Use this method after calling `MoveToAttribute` to read through the text or entity reference nodes that make up the attribute value.</span></span> <span data-ttu-id="c51e3-611"><xref:System.Xml.XmlReader.Depth%2A>的屬性值節點是一個加上該屬性節點的深度，則它會自動遞增和遞減 1 當您逐步執行和跳離一般實體參考。</span><span class="sxs-lookup"><span data-stu-id="c51e3-611">The <xref:System.Xml.XmlReader.Depth%2A> of the attribute value nodes is one plus the depth of the attribute node; it increments and decrements by one when you step into and out of general entity references.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c51e3-612">下列範例會讀取具有文字和實體節點的屬性。</span><span class="sxs-lookup"><span data-stu-id="c51e3-612">The following example reads an attribute with text and entity nodes.</span></span>  
  
 [!code-cpp[XmlTextReader.ReadAttributeValue#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlTextReader.ReadAttributeValue/CPP/readattrval.cpp#1)]
 [!code-csharp[XmlTextReader.ReadAttributeValue#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlTextReader.ReadAttributeValue/CS/readattrval.cs#1)]
 [!code-vb[XmlTextReader.ReadAttributeValue#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlTextReader.ReadAttributeValue/VB/readattrval.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="ReadBase64">
      <MemberSignature Language="C#" Value="public int ReadBase64 (byte[] array, int offset, int len);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 ReadBase64(unsigned int8[] array, int32 offset, int32 len) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.ReadBase64(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadBase64 (array As Byte(), offset As Integer, len As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int ReadBase64(cli::array &lt;System::Byte&gt; ^ array, int offset, int len);" />
      <MemberSignature Language="F#" Value="member this.ReadBase64 : byte[] * int * int -&gt; int" Usage="xmlTextReader.ReadBase64 (array, offset, len)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="len" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="c51e3-613">The array of characters that serves as the buffer to which the text contents are written.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-613">The array of characters that serves as the buffer to which the text contents are written.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="c51e3-614">The zero-based index into the array specifying where the method can begin to write to the buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-614">The zero-based index into the array specifying where the method can begin to write to the buffer.</span>
          </span>
        </param>
        <param name="len">
          <span data-ttu-id="c51e3-615">The number of bytes to write into the buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-615">The number of bytes to write into the buffer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c51e3-616">Decodes Base64 and returns the decoded binary bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-616">Decodes Base64 and returns the decoded binary bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c51e3-617">The number of bytes written to the buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-617">The number of bytes written to the buffer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c51e3-618">從.NET Framework 2.0 開始，我們建議您先建立<xref:System.Xml.XmlReader>所使用的執行個體<xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType>方法，以充分利用新功能。</span><span class="sxs-lookup"><span data-stu-id="c51e3-618">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c51e3-619">像<xref:System.Xml.XmlTextReader.ReadChars%2A>，這個方法可以連續呼叫來讀取內嵌文字的大量資料流。</span><span class="sxs-lookup"><span data-stu-id="c51e3-619">Like <xref:System.Xml.XmlTextReader.ReadChars%2A>, this method can be called successively to read large streams of embedded text.</span></span> <span data-ttu-id="c51e3-620">它將 Base64 內容解碼，並傳回解碼的二進位位元組 （例如，內嵌 Base64 編碼的 GIF 影像） 到緩衝區。</span><span class="sxs-lookup"><span data-stu-id="c51e3-620">It decodes Base64 content and returns the decoded binary bytes (for example, an inline Base64 encoded GIF image) into the buffer.</span></span> <span data-ttu-id="c51e3-621">請參閱 RFC 1521。</span><span class="sxs-lookup"><span data-stu-id="c51e3-621">See RFC 1521.</span></span> <span data-ttu-id="c51e3-622">(您可以取得從 Rfc[註解的網站要求](https://www.rfc-editor.org)。)</span><span class="sxs-lookup"><span data-stu-id="c51e3-622">(You can obtain RFCs from the [Request for Comments Web site](https://www.rfc-editor.org).)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c51e3-623">下列範例會讀取包含 Base64 和 BinHex 資料的檔案。</span><span class="sxs-lookup"><span data-stu-id="c51e3-623">The following example reads a file containing Base64 and BinHex data.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextReader.ReadBase64 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.ReadBase64 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextReader.ReadBase64 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.ReadBase64 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextReader.ReadBase64 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.ReadBase64 Example/VB/source.vb#1)]  
  
 <span data-ttu-id="c51e3-624">此範例會使用檔案 `binary.xml`</span><span class="sxs-lookup"><span data-stu-id="c51e3-624">The sample uses the file `binary.xml`</span></span>  
  
 [!code-xml[Classic WebData XmlTextReader.ReadBase64 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlTextReader.ReadBase64 Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="c51e3-625">The Base64 sequence is not valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-625">The Base64 sequence is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c51e3-626">The value of <paramref name="array" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-626">The value of <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c51e3-627">
            <paramref name="offset" /> &lt; 0, or <paramref name="len" /> &lt; 0, or <paramref name="len" /> &gt; <paramref name="array" />.Length- <paramref name="offset" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-627">
              <paramref name="offset" /> &lt; 0, or <paramref name="len" /> &lt; 0, or <paramref name="len" /> &gt; <paramref name="array" />.Length- <paramref name="offset" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.XmlTextWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="ReadBinHex">
      <MemberSignature Language="C#" Value="public int ReadBinHex (byte[] array, int offset, int len);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 ReadBinHex(unsigned int8[] array, int32 offset, int32 len) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.ReadBinHex(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadBinHex (array As Byte(), offset As Integer, len As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int ReadBinHex(cli::array &lt;System::Byte&gt; ^ array, int offset, int len);" />
      <MemberSignature Language="F#" Value="member this.ReadBinHex : byte[] * int * int -&gt; int" Usage="xmlTextReader.ReadBinHex (array, offset, len)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="len" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="c51e3-628">The byte array that serves as the buffer to which the decoded binary bytes are written.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-628">The byte array that serves as the buffer to which the decoded binary bytes are written.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="c51e3-629">The zero-based index into the array specifying where the method can begin to write to the buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-629">The zero-based index into the array specifying where the method can begin to write to the buffer.</span>
          </span>
        </param>
        <param name="len">
          <span data-ttu-id="c51e3-630">The number of bytes to write into the buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-630">The number of bytes to write into the buffer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c51e3-631">Decodes <see langword="BinHex" /> and returns the decoded binary bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-631">Decodes <see langword="BinHex" /> and returns the decoded binary bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c51e3-632">The number of bytes written to your buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-632">The number of bytes written to your buffer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c51e3-633">從.NET Framework 2.0 開始，我們建議您先建立<xref:System.Xml.XmlReader>所使用的執行個體<xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType>方法，以充分利用新功能。</span><span class="sxs-lookup"><span data-stu-id="c51e3-633">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c51e3-634">像<xref:System.Xml.XmlTextReader.ReadChars%2A>，這個方法可以連續呼叫來讀取內嵌文字的大量資料流。</span><span class="sxs-lookup"><span data-stu-id="c51e3-634">Like <xref:System.Xml.XmlTextReader.ReadChars%2A>, this method can be called successively to read large streams of embedded text.</span></span> <span data-ttu-id="c51e3-635">它會解碼`BinHex`內容，並傳回解碼的二進位位元組 (例如，內嵌`BinHex`編碼的 GIF 影像) 到緩衝區。</span><span class="sxs-lookup"><span data-stu-id="c51e3-635">It decodes `BinHex` content and returns the decoded binary bytes (for example, an inline `BinHex` encoded GIF image) into the buffer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c51e3-636">下列範例會讀取一個檔案，其中包含`Base64`和`BinHex`資料。</span><span class="sxs-lookup"><span data-stu-id="c51e3-636">The following example reads a file containing `Base64` and `BinHex` data.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextReader.ReadBase64 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.ReadBase64 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextReader.ReadBase64 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.ReadBase64 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextReader.ReadBase64 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.ReadBase64 Example/VB/source.vb#1)]  
  
 <span data-ttu-id="c51e3-637">此範例會使用檔案 `binary.xml`</span><span class="sxs-lookup"><span data-stu-id="c51e3-637">The sample uses the file `binary.xml`</span></span>  
  
 [!code-xml[Classic WebData XmlTextReader.ReadBase64 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlTextReader.ReadBase64 Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="c51e3-638">The <see langword="BinHex" /> sequence is not valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-638">The <see langword="BinHex" /> sequence is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c51e3-639">The value of <paramref name="array" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-639">The value of <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c51e3-640">
            <paramref name="offset" /> &lt; 0, or <paramref name="len" /> &lt; 0, or <paramref name="len" /> &gt; <paramref name="array" />.Length- <paramref name="offset" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-640">
              <paramref name="offset" /> &lt; 0, or <paramref name="len" /> &lt; 0, or <paramref name="len" /> &gt; <paramref name="array" />.Length- <paramref name="offset" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="ReadChars">
      <MemberSignature Language="C#" Value="public int ReadChars (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 ReadChars(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.ReadChars(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadChars (buffer As Char(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int ReadChars(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="member this.ReadChars : char[] * int * int -&gt; int" Usage="xmlTextReader.ReadChars (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="c51e3-641">The array of characters that serves as the buffer to which the text contents are written.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-641">The array of characters that serves as the buffer to which the text contents are written.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="c51e3-642">The position within <c>buffer</c> where the method can begin writing text contents.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-642">The position within <c>buffer</c> where the method can begin writing text contents.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="c51e3-643">The number of characters to write into <c>buffer</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-643">The number of characters to write into <c>buffer</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c51e3-644">Reads the text contents of an element into a character buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-644">Reads the text contents of an element into a character buffer.</span>
          </span>
          <span data-ttu-id="c51e3-645">This method is designed to read large streams of embedded text by calling it successively.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-645">This method is designed to read large streams of embedded text by calling it successively.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c51e3-646">The number of characters read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-646">The number of characters read.</span>
          </span>
          <span data-ttu-id="c51e3-647">This can be <see langword="0" /> if the reader is not positioned on an element or if there is no more text content to return in the current context.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-647">This can be <see langword="0" /> if the reader is not positioned on an element or if there is no more text content to return in the current context.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c51e3-648">從.NET Framework 2.0 開始，我們建議您先建立<xref:System.Xml.XmlReader>所使用的執行個體<xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType>方法，以充分利用新功能。</span><span class="sxs-lookup"><span data-stu-id="c51e3-648">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c51e3-649">這是最有效率的方式可以處理非常大的資料流的 XML 文件中的內嵌文字。</span><span class="sxs-lookup"><span data-stu-id="c51e3-649">This is the most efficient way to process very large streams of text embedded in an XML document.</span></span> <span data-ttu-id="c51e3-650">而不是配置大型的字串物件`ReadChars`一次將緩衝區傳回的文字內容。</span><span class="sxs-lookup"><span data-stu-id="c51e3-650">Rather than allocating large string objects, `ReadChars` returns text content a buffer at a time.</span></span> <span data-ttu-id="c51e3-651">這個方法被為了只能用於元素節點。</span><span class="sxs-lookup"><span data-stu-id="c51e3-651">This method is designed to work only on element nodes.</span></span> <span data-ttu-id="c51e3-652">其他節點類型都會造成`ReadChars`傳回`0`。</span><span class="sxs-lookup"><span data-stu-id="c51e3-652">Other node types cause `ReadChars` to return `0`.</span></span>  
  
 <span data-ttu-id="c51e3-653">在下列 XML 中，如果讀取器位於開始標記、`ReadChars`傳回`test`，並將讀取器置於結束標記的後面。</span><span class="sxs-lookup"><span data-stu-id="c51e3-653">In the following XML, if the reader is positioned on the start tag, `ReadChars` returns `test` and positions the reader after the end tag.</span></span>  
  
```xml  
<Item>test</Item>  
```  
  
 <span data-ttu-id="c51e3-654">`ReadChars` 具有下列功能：</span><span class="sxs-lookup"><span data-stu-id="c51e3-654">`ReadChars` has the following functionality:</span></span>  
  
-   <span data-ttu-id="c51e3-655">這個方法被為了在只有項目節點上運作。</span><span class="sxs-lookup"><span data-stu-id="c51e3-655">This method is designed to work on element nodes only.</span></span> <span data-ttu-id="c51e3-656">其他節點類型都會造成`ReadChars`傳回 0。</span><span class="sxs-lookup"><span data-stu-id="c51e3-656">Other node types cause `ReadChars` to return 0.</span></span>  
  
-   <span data-ttu-id="c51e3-657">這個方法會傳回實際的字元內容。</span><span class="sxs-lookup"><span data-stu-id="c51e3-657">This method returns the actual character content.</span></span> <span data-ttu-id="c51e3-658">不會解析實體、 CDATA 或發生的任何其他標記。</span><span class="sxs-lookup"><span data-stu-id="c51e3-658">There is no attempt to resolve entities, CDATA, or any other markup encountered.</span></span> <span data-ttu-id="c51e3-659">`ReadChars` 傳回的所有項目開始標記與結束標記，包括標記之間。</span><span class="sxs-lookup"><span data-stu-id="c51e3-659">`ReadChars` returns everything between the start tag and the end tag, including markup.</span></span>  
  
-   <span data-ttu-id="c51e3-660">`ReadChars` 會忽略格式不正確的 XML 標記。</span><span class="sxs-lookup"><span data-stu-id="c51e3-660">`ReadChars` ignores XML markup that is not well-formed.</span></span> <span data-ttu-id="c51e3-661">例如，當讀取下列 XML 字串`<A>1<A>2</A>`，`ReadChars`傳回`1<A>2</A>`。</span><span class="sxs-lookup"><span data-stu-id="c51e3-661">For example, when reading the following XML string `<A>1<A>2</A>`, `ReadChars` returns `1<A>2</A>`.</span></span> <span data-ttu-id="c51e3-662">（它傳回的相符項目組標記，並忽略其他人。）</span><span class="sxs-lookup"><span data-stu-id="c51e3-662">(It returns markup from the matching element pair and ignores others.)</span></span>  
  
-   <span data-ttu-id="c51e3-663">這個方法不會進行任何正規化。</span><span class="sxs-lookup"><span data-stu-id="c51e3-663">This method does not do any normalization.</span></span>  
  
-   <span data-ttu-id="c51e3-664">當`ReadChars`已達結束的字元資料流中，它會傳回值 0 和讀取器定位於結束標記的後面。</span><span class="sxs-lookup"><span data-stu-id="c51e3-664">When `ReadChars` has reached the end of the character stream, it returns the value 0 and the reader is positioned after the end tag.</span></span>  
  
-   <span data-ttu-id="c51e3-665">讀取屬性的方法是不使用時`ReadChars`。</span><span class="sxs-lookup"><span data-stu-id="c51e3-665">Attribute read methods are not available while using `ReadChars`.</span></span>  
  
 <span data-ttu-id="c51e3-666">例如，使用下列 XML:</span><span class="sxs-lookup"><span data-stu-id="c51e3-666">For example, using the following XML:</span></span>  
  
```xml  
<thing>  
 some text  
</thing>  
<item>  
</item>  
```  
  
 <span data-ttu-id="c51e3-667">讀取器位於`<item>`項目結尾的 while 迴圈。</span><span class="sxs-lookup"><span data-stu-id="c51e3-667">The reader is positioned on the `<item>` element at the end of the while loop.</span></span>  
  
```csharp  
if (XmlNodeType.Element == reader.NodeType && "thing" == reader.Name)  
{  
 while(0 != reader.ReadChars(buffer, 0, 1)  
 {  
 // Do something.  
 // Attribute values are not available at this point.  
 }  
}  
```  
  
   
  
## Examples  
 <span data-ttu-id="c51e3-668">下列範例中使用 XML 讀取`ReadChars`。</span><span class="sxs-lookup"><span data-stu-id="c51e3-668">The following example reads in XML using `ReadChars`.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextReader.ReadChars Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.ReadChars Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextReader.ReadChars Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.ReadChars Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextReader.ReadChars Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.ReadChars Example/VB/source.vb#1)]  
  
 <span data-ttu-id="c51e3-669">該範例使用 `items.xml` 檔案做為輸入。</span><span class="sxs-lookup"><span data-stu-id="c51e3-669">The example uses the `items.xml` file as input.</span></span>  
  
 [!code-xml[Classic WebData XmlTextReader.Name Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c51e3-670">
            <paramref name="count" /> is greater than the space specified in the <paramref name="buffer" /> (buffer size - <paramref name="index" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-670">
              <paramref name="count" /> is greater than the space specified in the <paramref name="buffer" /> (buffer size - <paramref name="index" />).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c51e3-671">The <paramref name="buffer" /> value is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-671">The <paramref name="buffer" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c51e3-672">
            <paramref name="index" />
            <see langword="&lt; 0" /> or <paramref name="count" /><see langword="&lt; 0" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-672">
              <paramref name="index" />
              <see langword="&lt; 0" /> or <paramref name="count" /><see langword="&lt; 0" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.XmlTextReader.ReadBase64(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Xml.XmlTextReader.ReadBinHex(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsBase64">
      <MemberSignature Language="C#" Value="public override int ReadContentAsBase64 (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadContentAsBase64(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadContentAsBase64 (buffer As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ReadContentAsBase64(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.ReadContentAsBase64 : byte[] * int * int -&gt; int" Usage="xmlTextReader.ReadContentAsBase64 (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="c51e3-673">The buffer into which to copy the resulting text.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-673">The buffer into which to copy the resulting text.</span>
          </span>
          <span data-ttu-id="c51e3-674">This value cannot be <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-674">This value cannot be <see langword="null" />.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="c51e3-675">The offset into the buffer where to start copying the result.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-675">The offset into the buffer where to start copying the result.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="c51e3-676">The maximum number of bytes to copy into the buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-676">The maximum number of bytes to copy into the buffer.</span>
          </span>
          <span data-ttu-id="c51e3-677">The actual number of bytes copied is returned from this method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-677">The actual number of bytes copied is returned from this method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c51e3-678">Reads the content and returns the <see langword="Base64" /> decoded binary bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-678">Reads the content and returns the <see langword="Base64" /> decoded binary bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c51e3-679">The number of bytes written to the buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-679">The number of bytes written to the buffer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c51e3-680">從.NET Framework 2.0 開始，我們建議您先建立<xref:System.Xml.XmlReader>所使用的執行個體<xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType>方法，以充分利用新功能。</span><span class="sxs-lookup"><span data-stu-id="c51e3-680">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c51e3-681">這個方法內容串流、 解碼`Base64`內容，並傳回解碼的二進位位元組 (例如，內嵌`Base64`-編碼的 GIF 影像) 到緩衝區。</span><span class="sxs-lookup"><span data-stu-id="c51e3-681">This method streams the content, decodes the `Base64` content, and returns the decoded binary bytes (for example, an inline `Base64`-encoded GIF image) into the buffer.</span></span> <span data-ttu-id="c51e3-682">這個方法可以連續呼叫來讀取內嵌文字的大量資料流。</span><span class="sxs-lookup"><span data-stu-id="c51e3-682">This method can be called successively to read large streams of embedded text.</span></span> <span data-ttu-id="c51e3-683">如需詳細資訊，請參閱 RFC 1521"MIME （多用途網際網路郵件延伸標準） 部分一個： 機制來指定，並描述網際網路訊息內文的格式 」。</span><span class="sxs-lookup"><span data-stu-id="c51e3-683">For more information, see RFC 1521, "MIME (Multipurpose Internet Mail Extensions) Part One: Mechanisms for Specifying and Describing the Format of Internet Message Bodies".</span></span> <span data-ttu-id="c51e3-684">您可以取得從 Rfc[註解的網站要求](https://www.rfc-editor.org)。</span><span class="sxs-lookup"><span data-stu-id="c51e3-684">You can obtain RFCs from the [Request for Comments Web site](https://www.rfc-editor.org).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c51e3-685">您不應該存取的任何呼叫之間的讀取器屬性<xref:System.Xml.XmlTextReader.ReadContentAsBase64%2A>方法，直到該方法會傳回值為 0。</span><span class="sxs-lookup"><span data-stu-id="c51e3-685">You should not access any of the reader properties between calls to the <xref:System.Xml.XmlTextReader.ReadContentAsBase64%2A> method until the method returns the value 0.</span></span>  
  
 <span data-ttu-id="c51e3-686">此方法具有下列行為：</span><span class="sxs-lookup"><span data-stu-id="c51e3-686">This method has the following behavior:</span></span>  
  
-   <span data-ttu-id="c51e3-687"><xref:System.Xml.XmlTextReader.ReadContentAsBase64%2A> 當它到達它所操作的位元組資料流結尾傳回 0 的值。</span><span class="sxs-lookup"><span data-stu-id="c51e3-687"><xref:System.Xml.XmlTextReader.ReadContentAsBase64%2A> returns the value 0 when it has reached the end of the byte stream it was operating on.</span></span> <span data-ttu-id="c51e3-688">讀取器第一個非內容節點上。</span><span class="sxs-lookup"><span data-stu-id="c51e3-688">The reader is positioned on the first non-content node.</span></span>  
  
-   <span data-ttu-id="c51e3-689">如果您尋求更少，或的確實數目，也會保留在資料流讀取位元組會保留在其目前位置。</span><span class="sxs-lookup"><span data-stu-id="c51e3-689">If you ask for fewer, or the exact number, of bytes than are left in the stream the reader remains in its current position.</span></span>  
  
-   <span data-ttu-id="c51e3-690"><xref:System.Xml.XmlTextReader.ReadContentAsBase64%2A> 不支援下列的 XML 節點類型： `Element`， `XmlDeclaration`， `None`， `Document`， `DocumentType`， `Notation`， `Entity`， `DocumentFragment`。</span><span class="sxs-lookup"><span data-stu-id="c51e3-690"><xref:System.Xml.XmlTextReader.ReadContentAsBase64%2A> is not supported on the following XML node types: `Element`, `XmlDeclaration`, `None`, `Document`, `DocumentType`, `Notation`, `Entity`, `DocumentFragment`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c51e3-691">The <paramref name="buffer" /> value is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-691">The <paramref name="buffer" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c51e3-692">
            <see cref="M:System.Xml.XmlTextReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" /> is not supported in the current node.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-692">
              <see cref="M:System.Xml.XmlTextReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" /> is not supported in the current node.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c51e3-693">The index into the buffer or index + count is larger than the allocated buffer size.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-693">The index into the buffer or index + count is larger than the allocated buffer size.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlTextReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="T:System.Xml.XmlNodeType" />
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsBinHex">
      <MemberSignature Language="C#" Value="public override int ReadContentAsBinHex (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadContentAsBinHex(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadContentAsBinHex (buffer As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ReadContentAsBinHex(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.ReadContentAsBinHex : byte[] * int * int -&gt; int" Usage="xmlTextReader.ReadContentAsBinHex (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="c51e3-694">The buffer into which to copy the resulting text.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-694">The buffer into which to copy the resulting text.</span>
          </span>
          <span data-ttu-id="c51e3-695">This value cannot be <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-695">This value cannot be <see langword="null" />.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="c51e3-696">The offset into the buffer where to start copying the result.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-696">The offset into the buffer where to start copying the result.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="c51e3-697">The maximum number of bytes to copy into the buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-697">The maximum number of bytes to copy into the buffer.</span>
          </span>
          <span data-ttu-id="c51e3-698">The actual number of bytes copied is returned from this method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-698">The actual number of bytes copied is returned from this method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c51e3-699">Reads the content and returns the <see langword="BinHex" /> decoded binary bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-699">Reads the content and returns the <see langword="BinHex" /> decoded binary bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c51e3-700">The number of bytes written to the buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-700">The number of bytes written to the buffer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c51e3-701">從.NET Framework 2.0 開始，我們建議您先建立<xref:System.Xml.XmlReader>所使用的執行個體<xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType>方法，以充分利用新功能。</span><span class="sxs-lookup"><span data-stu-id="c51e3-701">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c51e3-702">這個方法內容串流、 解碼`BinHex`內容，並傳回解碼的二進位位元組 (例如，內嵌`BinHex`編碼的 GIF 影像) 到緩衝區。</span><span class="sxs-lookup"><span data-stu-id="c51e3-702">This method streams the content, decodes the `BinHex` content, and returns the decoded binary bytes (for example, an inline `BinHex` encoded GIF image) into the buffer.</span></span> <span data-ttu-id="c51e3-703">這個方法可以連續呼叫來讀取內嵌文字的大量資料流。</span><span class="sxs-lookup"><span data-stu-id="c51e3-703">This method can be called successively to read large streams of embedded text.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c51e3-704">您不應該存取的任何呼叫之間的讀取器屬性<xref:System.Xml.XmlTextReader.ReadContentAsBinHex%2A>方法，直到該方法會傳回值為 0。</span><span class="sxs-lookup"><span data-stu-id="c51e3-704">You should not access any of the reader properties between calls to the <xref:System.Xml.XmlTextReader.ReadContentAsBinHex%2A> method until the method returns the value 0.</span></span>  
  
 <span data-ttu-id="c51e3-705">此方法具有下列行為：</span><span class="sxs-lookup"><span data-stu-id="c51e3-705">This method has the following behavior:</span></span>  
  
-   <span data-ttu-id="c51e3-706"><xref:System.Xml.XmlTextReader.ReadContentAsBinHex%2A> 當它到達它所操作的位元組資料流結尾傳回 0 的值。</span><span class="sxs-lookup"><span data-stu-id="c51e3-706"><xref:System.Xml.XmlTextReader.ReadContentAsBinHex%2A> returns the value 0 when it has reached the end of the byte stream it was operating on.</span></span> <span data-ttu-id="c51e3-707">讀取器第一個非內容節點上。</span><span class="sxs-lookup"><span data-stu-id="c51e3-707">The reader is positioned on the first non-content node.</span></span>  
  
-   <span data-ttu-id="c51e3-708">如果您尋求更少，或的確實數目，也會保留在資料流讀取位元組會保留在其目前位置。</span><span class="sxs-lookup"><span data-stu-id="c51e3-708">If you ask for fewer, or the exact number, of bytes than are left in the stream the reader remains in its current position.</span></span>  
  
-   <span data-ttu-id="c51e3-709"><xref:System.Xml.XmlTextReader.ReadContentAsBinHex%2A> 不支援下列的 XML 節點類型： `Element`， `XmlDeclaration`， `None`， `Document`， `DocumentType`， `Notation`， `Entity`， `DocumentFragment`。</span><span class="sxs-lookup"><span data-stu-id="c51e3-709"><xref:System.Xml.XmlTextReader.ReadContentAsBinHex%2A> is not supported on the following XML node types: `Element`, `XmlDeclaration`, `None`, `Document`, `DocumentType`, `Notation`, `Entity`, `DocumentFragment`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c51e3-710">The <paramref name="buffer" /> value is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-710">The <paramref name="buffer" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c51e3-711">
            <see cref="M:System.Xml.XmlTextReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" /> is not supported on the current node.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-711">
              <see cref="M:System.Xml.XmlTextReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" /> is not supported on the current node.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c51e3-712">The index into the buffer or index + count is larger than the allocated buffer size.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-712">The index into the buffer or index + count is larger than the allocated buffer size.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="c51e3-713">The <see cref="T:System.Xml.XmlTextReader" /> implementation does not support this method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-713">The <see cref="T:System.Xml.XmlTextReader" /> implementation does not support this method.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlTextReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="T:System.Xml.XmlNodeType" />
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsBase64">
      <MemberSignature Language="C#" Value="public override int ReadElementContentAsBase64 (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadElementContentAsBase64(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadElementContentAsBase64 (buffer As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ReadElementContentAsBase64(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.ReadElementContentAsBase64 : byte[] * int * int -&gt; int" Usage="xmlTextReader.ReadElementContentAsBase64 (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="c51e3-714">The buffer into which to copy the resulting text.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-714">The buffer into which to copy the resulting text.</span>
          </span>
          <span data-ttu-id="c51e3-715">This value cannot be <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-715">This value cannot be <see langword="null" />.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="c51e3-716">The offset into the buffer where to start copying the result.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-716">The offset into the buffer where to start copying the result.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="c51e3-717">The maximum number of bytes to copy into the buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-717">The maximum number of bytes to copy into the buffer.</span>
          </span>
          <span data-ttu-id="c51e3-718">The actual number of bytes copied is returned from this method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-718">The actual number of bytes copied is returned from this method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c51e3-719">Reads the element and decodes the Base64 content.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-719">Reads the element and decodes the Base64 content.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c51e3-720">The number of bytes written to the buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-720">The number of bytes written to the buffer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c51e3-721">從.NET Framework 2.0 開始，我們建議您先建立<xref:System.Xml.XmlReader>所使用的執行個體<xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType>方法，以充分利用新功能。</span><span class="sxs-lookup"><span data-stu-id="c51e3-721">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c51e3-722">這個方法讀取的項目內容中，使用 Base64 編碼方式，將其解碼，並傳回已解碼的二進位位元組 （例如，內嵌 Base64 編碼的 GIF 影像） 到緩衝區。</span><span class="sxs-lookup"><span data-stu-id="c51e3-722">This method reads the element content, decodes it using Base64 encoding, and returns the decoded binary bytes (for example, an inline Base64 encoded GIF image) into the buffer.</span></span> <span data-ttu-id="c51e3-723">如需詳細資訊，請參閱 RFC 1521"MIME （多用途網際網路郵件延伸標準） 部分一個： 機制來指定，並描述網際網路訊息內文的格式 」。</span><span class="sxs-lookup"><span data-stu-id="c51e3-723">For more information, see RFC 1521, "MIME (Multipurpose Internet Mail Extensions) Part One: Mechanisms for Specifying and Describing the Format of Internet Message Bodies".</span></span> <span data-ttu-id="c51e3-724">您可以取得從 Rfc[註解的網站要求](https://www.rfc-editor.org)。</span><span class="sxs-lookup"><span data-stu-id="c51e3-724">You can obtain RFCs from the [Request for Comments Web site](https://www.rfc-editor.org).</span></span>  
  
 <span data-ttu-id="c51e3-725">這個方法只能讀取簡單內容項目。</span><span class="sxs-lookup"><span data-stu-id="c51e3-725">This method can only read simple-content elements.</span></span> <span data-ttu-id="c51e3-726">項目可以包含文字、 泛空白字元、 顯著泛空白字元、 CDATA 區段中，註解和處理指示。</span><span class="sxs-lookup"><span data-stu-id="c51e3-726">The element can contain text, white space, significant white space, CDATA sections, comments and processing instructions.</span></span> <span data-ttu-id="c51e3-727">它也可以包含實體參考，會自動展開。</span><span class="sxs-lookup"><span data-stu-id="c51e3-727">It can also contain entity references, which are automatically expanded.</span></span> <span data-ttu-id="c51e3-728">項目不能有子項目。</span><span class="sxs-lookup"><span data-stu-id="c51e3-728">The element cannot have child elements.</span></span>  
  
 <span data-ttu-id="c51e3-729">這個方法是非常類似於<xref:System.Xml.XmlTextReader.ReadContentAsBase64%2A>元素節點型別上只能呼叫只是它的方法。</span><span class="sxs-lookup"><span data-stu-id="c51e3-729">This method is very similar to the <xref:System.Xml.XmlTextReader.ReadContentAsBase64%2A> method except that it can only be called on element node types.</span></span>  
  
 <span data-ttu-id="c51e3-730">如果`count`值高於在文件中的位元組數目，或如果是，文件中的位元組數目等於<xref:System.Xml.XmlTextReader>讀取文件中所有剩餘的位元組，並傳回讀取的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="c51e3-730">If the `count` value is higher than the number of bytes in the document, or if it is equal to the number of bytes in the document, the <xref:System.Xml.XmlTextReader> reads all the remaining bytes in the document and returns the number of bytes read.</span></span> <span data-ttu-id="c51e3-731">下一步<xref:System.Xml.XmlTextReader>方法呼叫會傳回零，並將讀取器移至節點下<xref:System.Xml.XmlNodeType.EndElement>。</span><span class="sxs-lookup"><span data-stu-id="c51e3-731">The next <xref:System.Xml.XmlTextReader> method call returns a zero and moves the reader to the node following the <xref:System.Xml.XmlNodeType.EndElement>.</span></span>  
  
 <span data-ttu-id="c51e3-732">如果您呼叫<xref:System.Xml.XmlTextReader.Read%2A>已耗用所有的項目內容之前，讀取器可能如同所耗用的第一個內容，然後<xref:System.Xml.XmlTextReader.Read%2A>呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="c51e3-732">If you call <xref:System.Xml.XmlTextReader.Read%2A> before all of the element content is consumed, the reader may behave as if the first content was consumed and then the <xref:System.Xml.XmlTextReader.Read%2A> method was called.</span></span> <span data-ttu-id="c51e3-733">這表示讀取器讀取的所有文字，直到遇到結束項目。</span><span class="sxs-lookup"><span data-stu-id="c51e3-733">This means that the reader reads all the text until the end element is encountered.</span></span> <span data-ttu-id="c51e3-734">然後讀取結束標記節點，讀取的下一個節點，並再將本身置於下一步的後續節點。</span><span class="sxs-lookup"><span data-stu-id="c51e3-734">It then reads the end tag node, reads the next node, and then positions itself on the next subsequent node.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c51e3-735">請參閱<xref:System.Xml.XmlReader.ReadElementContentAsBase64%2A?displayProperty=nameWithType>若要查看使用這個方法的範例。</span><span class="sxs-lookup"><span data-stu-id="c51e3-735">See <xref:System.Xml.XmlReader.ReadElementContentAsBase64%2A?displayProperty=nameWithType> to see an example using this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c51e3-736">The <paramref name="buffer" /> value is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-736">The <paramref name="buffer" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c51e3-737">The current node is not an element node.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-737">The current node is not an element node.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c51e3-738">The index into the buffer or index + count is larger than the allocated buffer size.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-738">The index into the buffer or index + count is larger than the allocated buffer size.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="c51e3-739">The <see cref="T:System.Xml.XmlTextReader" /> implementation does not support this method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-739">The <see cref="T:System.Xml.XmlTextReader" /> implementation does not support this method.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="c51e3-740">The element contains mixed-content.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-740">The element contains mixed-content.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="c51e3-741">The content cannot be converted to the requested type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-741">The content cannot be converted to the requested type.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlTextReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsBinHex">
      <MemberSignature Language="C#" Value="public override int ReadElementContentAsBinHex (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadElementContentAsBinHex(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadElementContentAsBinHex (buffer As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ReadElementContentAsBinHex(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.ReadElementContentAsBinHex : byte[] * int * int -&gt; int" Usage="xmlTextReader.ReadElementContentAsBinHex (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="c51e3-742">The buffer into which to copy the resulting text.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-742">The buffer into which to copy the resulting text.</span>
          </span>
          <span data-ttu-id="c51e3-743">This value cannot be <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-743">This value cannot be <see langword="null" />.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="c51e3-744">The offset into the buffer where to start copying the result.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-744">The offset into the buffer where to start copying the result.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="c51e3-745">The maximum number of bytes to copy into the buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-745">The maximum number of bytes to copy into the buffer.</span>
          </span>
          <span data-ttu-id="c51e3-746">The actual number of bytes copied is returned from this method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-746">The actual number of bytes copied is returned from this method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c51e3-747">Reads the element and decodes the <see langword="BinHex" /> content.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-747">Reads the element and decodes the <see langword="BinHex" /> content.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c51e3-748">The number of bytes written to the buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-748">The number of bytes written to the buffer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c51e3-749">從.NET Framework 2.0 開始，我們建議您先建立<xref:System.Xml.XmlReader>所使用的執行個體<xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType>方法，以充分利用新功能。</span><span class="sxs-lookup"><span data-stu-id="c51e3-749">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c51e3-750">這個方法會讀取的項目內容、 使用將其解碼`BinHex`編碼，並傳回解碼的二進位位元組 (例如，內嵌`BinHex`編碼的 GIF 影像) 到緩衝區。</span><span class="sxs-lookup"><span data-stu-id="c51e3-750">This method reads the element content, decodes it using `BinHex` encoding, and returns the decoded binary bytes (for example, an inline `BinHex` encoded GIF image) into the buffer.</span></span>  
  
 <span data-ttu-id="c51e3-751">這個方法只能讀取簡單內容項目。</span><span class="sxs-lookup"><span data-stu-id="c51e3-751">This method can only read simple-content elements.</span></span> <span data-ttu-id="c51e3-752">項目可以包含文字、 泛空白字元、 顯著泛空白字元、 CDATA 區段中，註解和處理指示。</span><span class="sxs-lookup"><span data-stu-id="c51e3-752">The element can contain text, white space, significant white space, CDATA sections, comments and processing instructions.</span></span> <span data-ttu-id="c51e3-753">它也可以包含實體參考，會自動展開。</span><span class="sxs-lookup"><span data-stu-id="c51e3-753">It can also contain entity references, which are automatically expanded.</span></span> <span data-ttu-id="c51e3-754">項目不能有子項目。</span><span class="sxs-lookup"><span data-stu-id="c51e3-754">The element cannot have child elements.</span></span>  
  
 <span data-ttu-id="c51e3-755">這個方法是非常類似於<xref:System.Xml.XmlTextReader.ReadContentAsBinHex%2A>元素節點型別上只能呼叫只是它的方法。</span><span class="sxs-lookup"><span data-stu-id="c51e3-755">This method is very similar to the <xref:System.Xml.XmlTextReader.ReadContentAsBinHex%2A> method except that it can only be called on element node types.</span></span>  
  
 <span data-ttu-id="c51e3-756">如果`count`值高於在文件中的位元組數目，或如果是，文件中的位元組數目等於<xref:System.Xml.XmlTextReader>讀取文件中所有剩餘的位元組，並傳回讀取的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="c51e3-756">If the `count` value is higher than the number of bytes in the document, or if it is equal to the number of bytes in the document, the <xref:System.Xml.XmlTextReader> reads all the remaining bytes in the document and returns the number of bytes read.</span></span> <span data-ttu-id="c51e3-757">下一步<xref:System.Xml.XmlTextReader>方法呼叫會傳回零，並將讀取器移至節點下<xref:System.Xml.XmlNodeType.EndElement>。</span><span class="sxs-lookup"><span data-stu-id="c51e3-757">The next <xref:System.Xml.XmlTextReader> method call returns a zero and moves the reader to the node following the <xref:System.Xml.XmlNodeType.EndElement>.</span></span>  
  
 <span data-ttu-id="c51e3-758">如果您呼叫<xref:System.Xml.XmlTextReader.Read%2A>已耗用所有的項目內容之前，讀取器可能如同所耗用的第一個內容，然後<xref:System.Xml.XmlTextReader.Read%2A>呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="c51e3-758">If you call <xref:System.Xml.XmlTextReader.Read%2A> before all of the element content is consumed, the reader may behave as if the first content was consumed and then the <xref:System.Xml.XmlTextReader.Read%2A> method was called.</span></span> <span data-ttu-id="c51e3-759">這表示讀取器讀取的所有文字，直到遇到結束項目。</span><span class="sxs-lookup"><span data-stu-id="c51e3-759">This means that the reader reads all the text until the end element is encountered.</span></span> <span data-ttu-id="c51e3-760">然後讀取結束標記節點，讀取的下一個節點，並再將本身置於下一步的後續節點。</span><span class="sxs-lookup"><span data-stu-id="c51e3-760">It then reads the end tag node, reads the next node, and then positions itself on the next subsequent node.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c51e3-761">請參閱<xref:System.Xml.XmlReader.ReadElementContentAsBinHex%2A?displayProperty=nameWithType>若要查看使用這個方法的範例。</span><span class="sxs-lookup"><span data-stu-id="c51e3-761">See <xref:System.Xml.XmlReader.ReadElementContentAsBinHex%2A?displayProperty=nameWithType> to see an example using this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c51e3-762">The <paramref name="buffer" /> value is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-762">The <paramref name="buffer" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c51e3-763">The current node is not an element node.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-763">The current node is not an element node.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c51e3-764">The index into the buffer or index + count is larger than the allocated buffer size.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-764">The index into the buffer or index + count is larger than the allocated buffer size.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="c51e3-765">The <see cref="T:System.Xml.XmlReader" /> implementation does not support this method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-765">The <see cref="T:System.Xml.XmlReader" /> implementation does not support this method.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="c51e3-766">The element contains mixed-content.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-766">The element contains mixed-content.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="c51e3-767">The content cannot be converted to the requested type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-767">The content cannot be converted to the requested type.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlTextReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadState">
      <MemberSignature Language="C#" Value="public override System.Xml.ReadState ReadState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.ReadState ReadState" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.ReadState" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ReadState As ReadState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::ReadState ReadState { System::Xml::ReadState get(); };" />
      <MemberSignature Language="F#" Value="member this.ReadState : System.Xml.ReadState" Usage="System.Xml.XmlTextReader.ReadState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.ReadState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c51e3-768">Gets the state of the reader.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-768">Gets the state of the reader.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c51e3-769">其中一個 <see cref="T:System.Xml.ReadState" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-769">One of the <see cref="T:System.Xml.ReadState" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c51e3-770">從.NET Framework 2.0 開始，我們建議您先建立<xref:System.Xml.XmlReader>所使用的執行個體<xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType>方法，以充分利用新功能。</span><span class="sxs-lookup"><span data-stu-id="c51e3-770">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadString">
      <MemberSignature Language="C#" Value="public override string ReadString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ReadString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.ReadString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ReadString();" />
      <MemberSignature Language="F#" Value="override this.ReadString : unit -&gt; string" Usage="xmlTextReader.ReadString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c51e3-771">Reads the contents of an element or a text node as a string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-771">Reads the contents of an element or a text node as a string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c51e3-772">The contents of the element or text node.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-772">The contents of the element or text node.</span>
          </span>
          <span data-ttu-id="c51e3-773">This can be an empty string if the reader is positioned on something other than an element or text node, or if there is no more text content to return in the current context.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-773">This can be an empty string if the reader is positioned on something other than an element or text node, or if there is no more text content to return in the current context.</span>
          </span>
          <span data-ttu-id="c51e3-774">
            <see langword="Note:" /> The text node can be either an element or an attribute text node.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-774">
              <see langword="Note:" /> The text node can be either an element or an attribute text node.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c51e3-775">從.NET Framework 2.0 開始，我們建議您先建立<xref:System.Xml.XmlReader>所使用的執行個體<xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType>方法，以充分利用新功能。</span><span class="sxs-lookup"><span data-stu-id="c51e3-775">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c51e3-776">如果位於項目，`ReadString`串連所有文字、 顯著泛空白字元，泛空白字元和`CData`區段節點型別一起，並傳回串連的項目內容資料。</span><span class="sxs-lookup"><span data-stu-id="c51e3-776">If positioned on an element, `ReadString` concatenates all text, significant white space, white space, and `CData` section node types together and returns the concatenated data as the element content.</span></span> <span data-ttu-id="c51e3-777">它會停止時遇到任何標記，包括註解和處理指示。</span><span class="sxs-lookup"><span data-stu-id="c51e3-777">It stops when any markup is encountered, including comments and processing instructions.</span></span> <span data-ttu-id="c51e3-778">這可能會發生於混合內容模型中，或是讀取項目結束標記時。</span><span class="sxs-lookup"><span data-stu-id="c51e3-778">This could occur in a mixed content model, or when an element end tag is read.</span></span>  
  
 <span data-ttu-id="c51e3-779">如果文字節點上，位於`ReadString`執行相同的串連文字節點從至指定的項目結束標記。</span><span class="sxs-lookup"><span data-stu-id="c51e3-779">If positioned on a text node, `ReadString` performs the same concatenation from the text node to the element end tag.</span></span> <span data-ttu-id="c51e3-780">如果讀取器定位於屬性文字節點上，則 `ReadString` 具有相同的功能，就像讀取器定位於項目開始標記上一樣。</span><span class="sxs-lookup"><span data-stu-id="c51e3-780">If the reader is positioned on an attribute text node, `ReadString` has the same functionality as if the reader were position on the element start tag.</span></span> <span data-ttu-id="c51e3-781">它會傳回所有串連的項目文字節點。</span><span class="sxs-lookup"><span data-stu-id="c51e3-781">It returns all the concatenated element text nodes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c51e3-782">下列範例會顯示每個項目的文字內容。</span><span class="sxs-lookup"><span data-stu-id="c51e3-782">The following example displays the text content of each element.</span></span>  
  
 [!code-cpp[Classic WebData XmlReader.IsStartElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlReader.IsStartElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlReader.IsStartElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlReader.IsStartElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlReader.IsStartElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlReader.IsStartElement Example/VB/source.vb#1)]  
  
 <span data-ttu-id="c51e3-783">此範例會使用該檔案，`elems.xml`作為輸入。</span><span class="sxs-lookup"><span data-stu-id="c51e3-783">The example uses the file, `elems.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlReader.IsStartElement Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlReader.IsStartElement Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="c51e3-784">An error occurred while parsing the XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-784">An error occurred while parsing the XML.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c51e3-785">An invalid operation was attempted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-785">An invalid operation was attempted.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="ResetState">
      <MemberSignature Language="C#" Value="public void ResetState ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.ResetState" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetState ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetState();" />
      <MemberSignature Language="F#" Value="member this.ResetState : unit -&gt; unit" Usage="xmlTextReader.ResetState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c51e3-786">Resets the state of the reader to ReadState.Initial.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-786">Resets the state of the reader to ReadState.Initial.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c51e3-787">從.NET Framework 2.0 開始，我們建議您先建立<xref:System.Xml.XmlReader>所使用的執行個體<xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType>方法，以充分利用新功能。</span><span class="sxs-lookup"><span data-stu-id="c51e3-787">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c51e3-788">這個方法可讓您剖析多個單一資料流中的 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="c51e3-788">This method enables you to parse multiple XML documents in a single stream.</span></span> <span data-ttu-id="c51e3-789">當您到達的 XML 文件結尾時，您可以呼叫`ResetState`重設以準備進行下一個 XML 文件讀取器的狀態。</span><span class="sxs-lookup"><span data-stu-id="c51e3-789">When you reach the end of an XML document, you can call `ResetState` to reset the state of the reader in preparation for the next XML document.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c51e3-790">資料流中的文件必須共用相同的編碼方式。</span><span class="sxs-lookup"><span data-stu-id="c51e3-790">The documents in the stream must share the same encoding.</span></span> <span data-ttu-id="c51e3-791">如果這不是如此，當`ResetState`稱為<xref:System.Xml.XmlException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="c51e3-791">If this is not the case, when `ResetState` is called an <xref:System.Xml.XmlException> is thrown.</span></span> <span data-ttu-id="c51e3-792">（這是.NET Framework 1.1 版或更早版本的行為變更。）</span><span class="sxs-lookup"><span data-stu-id="c51e3-792">(This is a change in behavior from .NET Framework version 1.1 and earlier).</span></span>  
  
 <span data-ttu-id="c51e3-793">下列屬性不會受到`ResetState`。</span><span class="sxs-lookup"><span data-stu-id="c51e3-793">The following properties are not affected by `ResetState`.</span></span>  
  
-   <xref:System.Xml.XmlTextReader.Normalization%2A>  
  
-   <xref:System.Xml.XmlTextReader.Namespaces%2A>  
  
-   <xref:System.Xml.XmlTextReader.XmlResolver%2A>  
  
-   <xref:System.Xml.XmlTextReader.WhitespaceHandling%2A>  
  
   
  
## Examples  
 <span data-ttu-id="c51e3-794">下列範例會剖析單一資料流中的兩個 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="c51e3-794">The following example parses two XML documents in a single stream.</span></span>  
  
 [!code-cpp[XmlTextReader.ResetState#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlTextReader.ResetState/CPP/resetstate.cpp#1)]
 [!code-csharp[XmlTextReader.ResetState#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlTextReader.ResetState/CS/resetstate.cs#1)]
 [!code-vb[XmlTextReader.ResetState#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlTextReader.ResetState/VB/resetstate.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c51e3-795">Calling <see langword="ResetState" /> if the reader was constructed using an <see cref="T:System.Xml.XmlParserContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-795">Calling <see langword="ResetState" /> if the reader was constructed using an <see cref="T:System.Xml.XmlParserContext" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="c51e3-796">Documents in a single stream do not share the same encoding.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-796">Documents in a single stream do not share the same encoding.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.ReadState" />
      </Docs>
    </Member>
    <Member MemberName="ResolveEntity">
      <MemberSignature Language="C#" Value="public override void ResolveEntity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ResolveEntity() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.ResolveEntity" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ResolveEntity ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ResolveEntity();" />
      <MemberSignature Language="F#" Value="override this.ResolveEntity : unit -&gt; unit" Usage="xmlTextReader.ResolveEntity " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c51e3-797">Resolves the entity reference for <see langword="EntityReference" /> nodes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-797">Resolves the entity reference for <see langword="EntityReference" /> nodes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c51e3-798">從.NET Framework 2.0 開始，我們建議您先建立<xref:System.Xml.XmlReader>所使用的執行個體<xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType>方法，以充分利用新功能。</span><span class="sxs-lookup"><span data-stu-id="c51e3-798">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c51e3-799">如果讀取器位於`EntityReference`節點 (`XmlNodeType.EntityReference`)，如果<xref:System.Xml.XmlTextReader.Read%2A>呼叫此方法中，實體取代文字會剖析之後呼叫。</span><span class="sxs-lookup"><span data-stu-id="c51e3-799">If the reader is positioned on an `EntityReference` node (`XmlNodeType.EntityReference`), if <xref:System.Xml.XmlTextReader.Read%2A> is called after calling this method, the entity replacement text is parsed.</span></span> <span data-ttu-id="c51e3-800">實體取代文字完成時，`EndEntity`關閉實體參考範圍，則會傳回節點。</span><span class="sxs-lookup"><span data-stu-id="c51e3-800">When the entity replacement text is finished, an `EndEntity` node is returned to close the entity reference scope.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c51e3-801">之後呼叫這個方法，如果實體是一部分的屬性值，您必須呼叫<xref:System.Xml.XmlTextReader.ReadAttributeValue%2A>逐步執行至實體。</span><span class="sxs-lookup"><span data-stu-id="c51e3-801">After calling this method, if the entity is part of an attribute value, you must call <xref:System.Xml.XmlTextReader.ReadAttributeValue%2A> to step into the entity.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Skip">
      <MemberSignature Language="C#" Value="public override void Skip ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Skip() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.Skip" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Skip ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Skip();" />
      <MemberSignature Language="F#" Value="override this.Skip : unit -&gt; unit" Usage="xmlTextReader.Skip " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c51e3-802">Skips the children of the current node.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-802">Skips the children of the current node.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c51e3-803">從.NET Framework 2.0 開始，我們建議您先建立<xref:System.Xml.XmlReader>所使用的執行個體<xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType>方法，以充分利用新功能。</span><span class="sxs-lookup"><span data-stu-id="c51e3-803">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c51e3-804">下列 xml 輸入如果讀取器位於`<a>`節點或其任何屬性，呼叫`Skip`若要將讀取器放置`<b>`節點。</span><span class="sxs-lookup"><span data-stu-id="c51e3-804">In the following XML input if the reader is positioned on the `<a>` node or any of its attributes, calling `Skip` positions the reader to the `<b>` node.</span></span>  
  
 <span data-ttu-id="c51e3-805">如果讀取器位於分葉節點上已 (例如`<x>`節點或文字節點`abc`)，則呼叫`Skip`等同於呼叫<xref:System.Xml.XmlTextReader.Read%2A>。</span><span class="sxs-lookup"><span data-stu-id="c51e3-805">If the reader is positioned on a leaf node already (such as the `<x>` node or the text node `abc`), calling `Skip` is the same as calling <xref:System.Xml.XmlTextReader.Read%2A>.</span></span>  
  
```xml  
<a name="bob" age="123">  
  <x/>abc<y/>  
</a>  
<b>  
 ...  
</b>  
```  
  
 <span data-ttu-id="c51e3-806">這個方法會檢查格式正確的 XML。</span><span class="sxs-lookup"><span data-stu-id="c51e3-806">This method checks for well-formed XML.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="System.Xml.IXmlNamespaceResolver.GetNamespacesInScope">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IDictionary&lt;string,string&gt; IXmlNamespaceResolver.GetNamespacesInScope (System.Xml.XmlNamespaceScope scope);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(valuetype System.Xml.XmlNamespaceScope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.System#Xml#IXmlNamespaceResolver#GetNamespacesInScope(System.Xml.XmlNamespaceScope)" />
      <MemberSignature Language="VB.NET" Value="Function GetNamespacesInScope (scope As XmlNamespaceScope) As IDictionary(Of String, String) Implements IXmlNamespaceResolver.GetNamespacesInScope" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System::Xml::XmlNamespaceScope scope) = System::Xml::IXmlNamespaceResolver::GetNamespacesInScope;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.Xml.XmlNamespaceScope" />
      </Parameters>
      <Docs>
        <param name="scope">
          <span data-ttu-id="c51e3-807">An <see cref="T:System.Xml.XmlNamespaceScope" /> value that specifies the type of namespace nodes to return.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-807">An <see cref="T:System.Xml.XmlNamespaceScope" /> value that specifies the type of namespace nodes to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c51e3-808">For a description of this member, see <see cref="M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-808">For a description of this member, see <see cref="M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c51e3-809">An <see cref="T:System.Collections.IDictionary" /> that contains the current in-scope namespaces.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-809">An <see cref="T:System.Collections.IDictionary" /> that contains the current in-scope namespaces.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c51e3-810">這個成員是明確介面成員實作。</span><span class="sxs-lookup"><span data-stu-id="c51e3-810">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="c51e3-811">只有在 <xref:System.Xml.XmlTextReader> 執行個體轉換成 <xref:System.Xml.IXmlNamespaceResolver> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="c51e3-811">It can be used only when the <xref:System.Xml.XmlTextReader> instance is cast to an <xref:System.Xml.IXmlNamespaceResolver> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="System.Xml.IXmlNamespaceResolver.LookupNamespace">
      <MemberSignature Language="C#" Value="string IXmlNamespaceResolver.LookupNamespace (string prefix);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.Xml.IXmlNamespaceResolver.LookupNamespace(string prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.System#Xml#IXmlNamespaceResolver#LookupNamespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function LookupNamespace (prefix As String) As String Implements IXmlNamespaceResolver.LookupNamespace" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.Xml.IXmlNamespaceResolver.LookupNamespace(System::String ^ prefix) = System::Xml::IXmlNamespaceResolver::LookupNamespace;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">
          <span data-ttu-id="c51e3-812">The prefix whose namespace URI you wish to find.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-812">The prefix whose namespace URI you wish to find.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c51e3-813">For a description of this member, see <see cref="M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-813">For a description of this member, see <see cref="M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c51e3-814">The namespace URI that is mapped to the prefix; <see langword="null" /> if the prefix is not mapped to a namespace URI.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-814">The namespace URI that is mapped to the prefix; <see langword="null" /> if the prefix is not mapped to a namespace URI.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c51e3-815">這個成員是明確介面成員實作。</span><span class="sxs-lookup"><span data-stu-id="c51e3-815">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="c51e3-816">只有在 <xref:System.Xml.XmlTextReader> 執行個體轉換成 <xref:System.Xml.IXmlNamespaceResolver> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="c51e3-816">It can be used only when the <xref:System.Xml.XmlTextReader> instance is cast to an <xref:System.Xml.IXmlNamespaceResolver> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="System.Xml.IXmlNamespaceResolver.LookupPrefix">
      <MemberSignature Language="C#" Value="string IXmlNamespaceResolver.LookupPrefix (string namespaceName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.Xml.IXmlNamespaceResolver.LookupPrefix(string namespaceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.System#Xml#IXmlNamespaceResolver#LookupPrefix(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function LookupPrefix (namespaceName As String) As String Implements IXmlNamespaceResolver.LookupPrefix" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.Xml.IXmlNamespaceResolver.LookupPrefix(System::String ^ namespaceName) = System::Xml::IXmlNamespaceResolver::LookupPrefix;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="namespaceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="namespaceName">
          <span data-ttu-id="c51e3-817">The namespace URI whose prefix you wish to find.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-817">The namespace URI whose prefix you wish to find.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c51e3-818">For a description of this member, see <see cref="M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-818">For a description of this member, see <see cref="M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c51e3-819">The prefix that is mapped to the namespace URI; <see langword="null" /> if the namespace URI is not mapped to a prefix.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-819">The prefix that is mapped to the namespace URI; <see langword="null" /> if the namespace URI is not mapped to a prefix.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public override string Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.Value" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Value { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : string" Usage="System.Xml.XmlTextReader.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c51e3-820">Gets the text value of the current node.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-820">Gets the text value of the current node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c51e3-821">傳回值需視節點的 <see cref="P:System.Xml.XmlTextReader.NodeType" /> 而定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-821">The value returned depends on the <see cref="P:System.Xml.XmlTextReader.NodeType" /> of the node.</span>
          </span>
          <span data-ttu-id="c51e3-822">下表列出具有傳回值的節點類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-822">The following table lists node types that have a value to return.</span>
          </span>
          <span data-ttu-id="c51e3-823">有其他節點類型都會傳回 <see langword="String.Empty" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-823">All other node types return <see langword="String.Empty" />.</span>
          </span>
          <span data-ttu-id="c51e3-824">
            <list type="table">
              <listheader>
                <term> 節點型別</term>
                <description>值</description>
              </listheader>
              <item>
                <term>
                  <see langword="Attribute" />
                </term>
                <description>屬性的值。</description>
              </item>
              <item>
                <term>
                  <see langword="CDATA" />
                </term>
                <description> CDATA 區段的內容。</description>
              </item>
              <item>
                <term>
                  <see langword="Comment" />
                </term>
                <description> 註解的內容。</description>
              </item>
              <item>
                <term>
                  <see langword="DocumentType" />
                </term>
                <description> 內部子集。</description>
              </item>
              <item>
                <term>
                  <see langword="ProcessingInstruction" />
                </term>
                <description> 整個內容 （目標除外）。</description>
              </item>
              <item>
                <term>
                  <see langword="SignificantWhitespace" />
                </term>
                <description> 中的空白處<see langword="xml:space" />= 'preserve' 範圍。</description>
              </item>
              <item>
                <term>
                  <see langword="Text" />
                </term>
                <description> 文字節點的內容。</description>
              </item>
              <item>
                <term>
                  <see langword="Whitespace" />
                </term>
                <description> 標記之間的泛空白字元。</description>
              </item>
              <item>
                <term>
                  <see langword="XmlDeclaration" />
                </term>
                <description> 宣告的內容。  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-824">
              <list type="table">
                <listheader>
                  <term> Node Type  </term>
                  <description> Value  </description>
                </listheader>
                <item>
                  <term>
                    <see langword="Attribute" />
                  </term>
                  <description> The value of the attribute.  </description>
                </item>
                <item>
                  <term>
                    <see langword="CDATA" />
                  </term>
                  <description> The content of the CDATA section.  </description>
                </item>
                <item>
                  <term>
                    <see langword="Comment" />
                  </term>
                  <description> The content of the comment.  </description>
                </item>
                <item>
                  <term>
                    <see langword="DocumentType" />
                  </term>
                  <description> The internal subset.  </description>
                </item>
                <item>
                  <term>
                    <see langword="ProcessingInstruction" />
                  </term>
                  <description> The entire content, excluding the target.  </description>
                </item>
                <item>
                  <term>
                    <see langword="SignificantWhitespace" />
                  </term>
                  <description> The white space within an <see langword="xml:space" />= 'preserve' scope.  </description>
                </item>
                <item>
                  <term>
                    <see langword="Text" />
                  </term>
                  <description> The content of the text node.  </description>
                </item>
                <item>
                  <term>
                    <see langword="Whitespace" />
                  </term>
                  <description> The white space between markup.  </description>
                </item>
                <item>
                  <term>
                    <see langword="XmlDeclaration" />
                  </term>
                  <description> The content of the declaration.  </description>
                </item>
              </list>
            </span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c51e3-825">從.NET Framework 2.0 開始，我們建議您先建立<xref:System.Xml.XmlReader>所使用的執行個體<xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType>方法，以充分利用新功能。</span><span class="sxs-lookup"><span data-stu-id="c51e3-825">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c51e3-826">下列範例會讀取 XML 檔案，並顯示每個節點。</span><span class="sxs-lookup"><span data-stu-id="c51e3-826">The following example reads an XML file and displays each node.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextReader.Name Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextReader.Name Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextReader.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/VB/source.vb#1)]  
  
 <span data-ttu-id="c51e3-827">此範例會使用檔案`items.xml`。</span><span class="sxs-lookup"><span data-stu-id="c51e3-827">The sample uses the file `items.xml`.</span></span>  
  
 [!code-xml[Classic WebData XmlTextReader.Name Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="WhitespaceHandling">
      <MemberSignature Language="C#" Value="public System.Xml.WhitespaceHandling WhitespaceHandling { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.WhitespaceHandling WhitespaceHandling" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.WhitespaceHandling" />
      <MemberSignature Language="VB.NET" Value="Public Property WhitespaceHandling As WhitespaceHandling" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::WhitespaceHandling WhitespaceHandling { System::Xml::WhitespaceHandling get(); void set(System::Xml::WhitespaceHandling value); };" />
      <MemberSignature Language="F#" Value="member this.WhitespaceHandling : System.Xml.WhitespaceHandling with get, set" Usage="System.Xml.XmlTextReader.WhitespaceHandling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.WhitespaceHandling</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c51e3-828">Gets or sets a value that specifies how white space is handled.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-828">Gets or sets a value that specifies how white space is handled.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c51e3-829">其中一個 <see cref="T:System.Xml.WhitespaceHandling" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-829">One of the <see cref="T:System.Xml.WhitespaceHandling" /> values.</span>
          </span>
          <span data-ttu-id="c51e3-830">預設值為 <see langword="WhitespaceHandling.All" /> (傳回 <see langword="Whitespace" /> 與 <see langword="SignificantWhitespace" /> 節點)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-830">The default is <see langword="WhitespaceHandling.All" /> (returns <see langword="Whitespace" /> and <see langword="SignificantWhitespace" /> nodes).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c51e3-831">從.NET Framework 2.0 開始，我們建議您先建立<xref:System.Xml.XmlReader>所使用的執行個體<xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType>方法，以充分利用新功能。</span><span class="sxs-lookup"><span data-stu-id="c51e3-831">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c51e3-832">此屬性可以隨時變更，而且會在下一步的讀取作業上生效。</span><span class="sxs-lookup"><span data-stu-id="c51e3-832">This property can be changed at any time and takes effect on the next read operation.</span></span>  
  
 <span data-ttu-id="c51e3-833">因為`XmlTextReader`沒有 DTD 資訊可用，`SignificantWhitepsace`內只會傳回節點`xml:space='preserve'`範圍。</span><span class="sxs-lookup"><span data-stu-id="c51e3-833">Because the `XmlTextReader` does not have DTD information available to it, `SignificantWhitepsace` nodes are only returned within an `xml:space='preserve'` scope.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c51e3-834">下列範例會讀取 XML 片段。</span><span class="sxs-lookup"><span data-stu-id="c51e3-834">The following example reads an XML fragment.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextReader.WhitespaceHandling Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.WhitespaceHandling Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextReader.WhitespaceHandling Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.WhitespaceHandling Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextReader.WhitespaceHandling Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.WhitespaceHandling Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c51e3-835">Invalid value specified.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-835">Invalid value specified.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c51e3-836">Setting this property when the reader is closed (<see cref="P:System.Xml.XmlTextReader.ReadState" /> is <see langword="ReadState.Closed" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-836">Setting this property when the reader is closed (<see cref="P:System.Xml.XmlTextReader.ReadState" /> is <see langword="ReadState.Closed" />).</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="XmlLang">
      <MemberSignature Language="C#" Value="public override string XmlLang { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XmlLang" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.XmlLang" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property XmlLang As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ XmlLang { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlLang : string" Usage="System.Xml.XmlTextReader.XmlLang" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c51e3-837">Gets the current <see langword="xml:lang" /> scope.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-837">Gets the current <see langword="xml:lang" /> scope.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c51e3-838">目前的 <see langword="xml:lang" /> 範圍。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-838">The current <see langword="xml:lang" /> scope.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c51e3-839">從.NET Framework 2.0 開始，我們建議您先建立<xref:System.Xml.XmlReader>所使用的執行個體<xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType>方法，以充分利用新功能。</span><span class="sxs-lookup"><span data-stu-id="c51e3-839">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c51e3-840">這個屬性代表`xml:lang`內目前的節點所在的範圍。</span><span class="sxs-lookup"><span data-stu-id="c51e3-840">This property represents the `xml:lang` scope within which the current node resides.</span></span> <span data-ttu-id="c51e3-841">例如，以下是使用 XML 片段`xml:lang`根項目設定為 英文 （美國）：</span><span class="sxs-lookup"><span data-stu-id="c51e3-841">For example, here is an XML fragment with `xml:lang` set to US English in the root element:</span></span>  
  
 <span data-ttu-id="c51e3-842">\<根 xml: lang ="en-我們"></span><span class="sxs-lookup"><span data-stu-id="c51e3-842">\<root xml:lang="en-us"></span></span>  
  
 <span data-ttu-id="c51e3-843">\<名稱 > Fred \< /名稱 ></span><span class="sxs-lookup"><span data-stu-id="c51e3-843">\<name>Fred\</name></span></span>  
  
 <span data-ttu-id="c51e3-844">\</root></span><span class="sxs-lookup"><span data-stu-id="c51e3-844">\</root></span></span>  
  
 <span data-ttu-id="c51e3-845">當讀取器位於`name`項目，您可以使用這個屬性來尋找它位於範圍內的美式英文`xml:lang`屬性。</span><span class="sxs-lookup"><span data-stu-id="c51e3-845">When the reader is positioned on the `name` element, you can use this property to find that it is in the scope of a US English `xml:lang` attribute.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c51e3-846">下列範例會顯示`xml:lang`每個節點的值。</span><span class="sxs-lookup"><span data-stu-id="c51e3-846">The following example displays the `xml:lang` value for each of the nodes.</span></span>  
  
 [!code-cpp[XmlTextReader.XmlLang#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlTextReader.XmlLang/CPP/readlang.cpp#1)]
 [!code-csharp[XmlTextReader.XmlLang#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlTextReader.XmlLang/CS/readlang.cs#1)]
 [!code-vb[XmlTextReader.XmlLang#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlTextReader.XmlLang/VB/readlang.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="XmlResolver">
      <MemberSignature Language="C#" Value="public System.Xml.XmlResolver XmlResolver { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlResolver XmlResolver" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.XmlResolver" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlResolver As XmlResolver" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlResolver ^ XmlResolver {  void set(System::Xml::XmlResolver ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlResolver : System.Xml.XmlResolver" Usage="System.Xml.XmlTextReader.XmlResolver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c51e3-847">Sets the <see cref="T:System.Xml.XmlResolver" /> used for resolving DTD references.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-847">Sets the <see cref="T:System.Xml.XmlResolver" /> used for resolving DTD references.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c51e3-848">要使用的 <see langword="XmlResolver" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-848">The <see langword="XmlResolver" /> to use.</span>
          </span>
          <span data-ttu-id="c51e3-849">如果設定為 <see langword="null" />，就不會解析外部資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-849">If set to <see langword="null" />, external resources are not resolved.</span>
          </span>
          <span data-ttu-id="c51e3-850">在 1.1 版中的 [！INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]，呼叫端必須是完全信任才能指定<see langword="XmlResolver" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-850">In version 1.1 of the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)], the caller must be fully trusted in order to specify an <see langword="XmlResolver" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c51e3-851">從.NET Framework 2.0 開始，我們建議您先建立<xref:System.Xml.XmlReader>所使用的執行個體<xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType>方法，以充分利用新功能。</span><span class="sxs-lookup"><span data-stu-id="c51e3-851">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c51e3-852">讀取器會使用`XmlResolver`解析此位置的檔案讀取器會載入並解析 DTD 參考。</span><span class="sxs-lookup"><span data-stu-id="c51e3-852">The reader uses `XmlResolver` to resolve the location of the file loaded into the reader and also to resolve DTD references.</span></span> <span data-ttu-id="c51e3-853">例如，如果您的 XML 包含 DOCTYPE 宣告中，`<!DOCTYPE book SYSTEM book.dtd>`讀取器會解析外部檔案，並確保 DTD 的格式是否正確。</span><span class="sxs-lookup"><span data-stu-id="c51e3-853">For example, if your XML included the DOCTYPE declaration, `<!DOCTYPE book SYSTEM book.dtd>` the reader resolves this external file and ensures that the DTD is well-formed.</span></span> <span data-ttu-id="c51e3-854">讀取器不會使用 DTD 驗證。</span><span class="sxs-lookup"><span data-stu-id="c51e3-854">The reader does not use the DTD for validation.</span></span>  
  
 <span data-ttu-id="c51e3-855">此屬性可以隨時變更，而且會在下一步的讀取作業上生效。</span><span class="sxs-lookup"><span data-stu-id="c51e3-855">This property can be changed at any time and takes effect on the next read operation.</span></span> <span data-ttu-id="c51e3-856">如果這個屬性設定為`null`，讀取器所遇到的任何外部 DTD 參考無法解析。</span><span class="sxs-lookup"><span data-stu-id="c51e3-856">If this property is set to `null`, any external DTD references encountered by the reader are not resolved.</span></span>  
  
 <span data-ttu-id="c51e3-857">1.1 版中[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]，如果未設定這個屬性，應用程式的信任層級決定的預設行為。</span><span class="sxs-lookup"><span data-stu-id="c51e3-857">In version 1.1 of the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)], if this property is not set, the trust level of the application determines the default behavior.</span></span>  
  
 <span data-ttu-id="c51e3-858">`Fully trusted code:` 讀取器會使用預設值<xref:System.Xml.XmlUrlResolver>不具使用者認證。</span><span class="sxs-lookup"><span data-stu-id="c51e3-858">`Fully trusted code:` The reader uses a default <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="c51e3-859">如果驗證才能存取網路資源，使用`XmlResolver`屬性來指定`XmlResolver`具有必要認證。</span><span class="sxs-lookup"><span data-stu-id="c51e3-859">If authentication is required to access a network resource, use the `XmlResolver` property to specify an `XmlResolver` with the necessary credentials.</span></span>  
  
 <span data-ttu-id="c51e3-860">`Semi-trusted code:` `XmlResolver`屬性設定為`null`。</span><span class="sxs-lookup"><span data-stu-id="c51e3-860">`Semi-trusted code:` The `XmlResolver` property is set to `null`.</span></span> <span data-ttu-id="c51e3-861">不會解析外部資源。</span><span class="sxs-lookup"><span data-stu-id="c51e3-861">External resources are not resolved.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c51e3-862">下列範例會使用`XmlResolver`屬性來指定存取網路上的檔案所需的認證。</span><span class="sxs-lookup"><span data-stu-id="c51e3-862">The following example uses the `XmlResolver` property to specify the credentials necessary to access the networked file.</span></span>  
  
 [!code-cpp[XmlTextReader.XmlResolver#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlTextReader.XmlResolver/CPP/rdr_resolver.cpp#1)]
 [!code-csharp[XmlTextReader.XmlResolver#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlTextReader.XmlResolver/CS/rdr_resolver.cs#1)]
 [!code-vb[XmlTextReader.XmlResolver#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlTextReader.XmlResolver/VB/rdr_resolver.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.XmlUrlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="XmlSpace">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlSpace XmlSpace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlSpace XmlSpace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.XmlSpace" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property XmlSpace As XmlSpace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlSpace XmlSpace { System::Xml::XmlSpace get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlSpace : System.Xml.XmlSpace" Usage="System.Xml.XmlTextReader.XmlSpace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlSpace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c51e3-863">Gets the current <see langword="xml:space" /> scope.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-863">Gets the current <see langword="xml:space" /> scope.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c51e3-864">其中一個 <see cref="T:System.Xml.XmlSpace" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-864">One of the <see cref="T:System.Xml.XmlSpace" /> values.</span>
          </span>
          <span data-ttu-id="c51e3-865">如果 <see langword="xml:space" /> 範圍不存在，這個屬性預設值為 <see langword="XmlSpace.None" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c51e3-865">If no <see langword="xml:space" /> scope exists, this property defaults to <see langword="XmlSpace.None" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c51e3-866">從.NET Framework 2.0 開始，我們建議您先建立<xref:System.Xml.XmlReader>所使用的執行個體<xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType>方法，以充分利用新功能。</span><span class="sxs-lookup"><span data-stu-id="c51e3-866">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c51e3-867">下列範例會剖析檔案，並傳回顯著泛空白字元，如果`xml:space='preserve'`找到範圍。</span><span class="sxs-lookup"><span data-stu-id="c51e3-867">The following example parses a file and returns significant white space if an `xml:space='preserve'` scope is found.</span></span>  
  
 [!code-cpp[XmlTextReader.XmlSpace#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlTextReader.XmlSpace/CPP/readspace.cpp#1)]
 [!code-csharp[XmlTextReader.XmlSpace#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlTextReader.XmlSpace/CS/readspace.cs#1)]
 [!code-vb[XmlTextReader.XmlSpace#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlTextReader.XmlSpace/VB/readspace.vb#1)]  
  
 <span data-ttu-id="c51e3-868">此範例會使用該檔案，`authors.xml`作為輸入。</span><span class="sxs-lookup"><span data-stu-id="c51e3-868">The example uses the file, `authors.xml`, as input.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
  </Members>
</Type>